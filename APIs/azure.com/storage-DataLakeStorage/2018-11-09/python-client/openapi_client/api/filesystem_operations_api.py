# coding: utf-8

"""
    Azure Data Lake Storage

    Azure Data Lake Storage provides storage for Hadoop and other big data workloads.

    The version of the OpenAPI document: 2018-11-09
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.path_list import PathList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class FilesystemOperationsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def filesystem_create(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        x_ms_properties: Annotated[Optional[StrictStr], Field(description="User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Create Filesystem

        Create a filesystem rooted at the specified location. If the filesystem already exists, the operation fails.  This operation does not support conditional HTTP requests.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param x_ms_properties: User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.
        :type x_ms_properties: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_create_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            x_ms_properties=x_ms_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def filesystem_create_with_http_info(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        x_ms_properties: Annotated[Optional[StrictStr], Field(description="User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Create Filesystem

        Create a filesystem rooted at the specified location. If the filesystem already exists, the operation fails.  This operation does not support conditional HTTP requests.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param x_ms_properties: User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.
        :type x_ms_properties: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_create_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            x_ms_properties=x_ms_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def filesystem_create_without_preload_content(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        x_ms_properties: Annotated[Optional[StrictStr], Field(description="User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create Filesystem

        Create a filesystem rooted at the specified location. If the filesystem already exists, the operation fails.  This operation does not support conditional HTTP requests.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param x_ms_properties: User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.
        :type x_ms_properties: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_create_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            x_ms_properties=x_ms_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _filesystem_create_serialize(
        self,
        filesystem,
        resource,
        x_ms_client_request_id,
        timeout,
        x_ms_date,
        x_ms_version,
        x_ms_properties,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if filesystem is not None:
            _path_params['filesystem'] = filesystem
        # process the query parameters
        if resource is not None:
            
            _query_params.append(('resource', resource))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        # process the header parameters
        if x_ms_client_request_id is not None:
            _header_params['x-ms-client-request-id'] = x_ms_client_request_id
        if x_ms_date is not None:
            _header_params['x-ms-date'] = x_ms_date
        if x_ms_version is not None:
            _header_params['x-ms-version'] = x_ms_version
        if x_ms_properties is not None:
            _header_params['x-ms-properties'] = x_ms_properties
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/{filesystem}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def filesystem_delete(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete Filesystem

        Marks the filesystem for deletion.  When a filesystem is deleted, a filesystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param if_modified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
        :type if_modified_since: str
        :param if_unmodified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_delete_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def filesystem_delete_with_http_info(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete Filesystem

        Marks the filesystem for deletion.  When a filesystem is deleted, a filesystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param if_modified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
        :type if_modified_since: str
        :param if_unmodified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_delete_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def filesystem_delete_without_preload_content(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete Filesystem

        Marks the filesystem for deletion.  When a filesystem is deleted, a filesystem with the same identifier cannot be created for at least 30 seconds. While the filesystem is being deleted, attempts to create a filesystem with the same identifier will fail with status code 409 (Conflict), with the service returning additional error information indicating that the filesystem is being deleted. All other operations, including operations on any files or directories within the filesystem, will fail with status code 404 (Not Found) while the filesystem is being deleted. This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param if_modified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
        :type if_modified_since: str
        :param if_unmodified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_delete_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _filesystem_delete_serialize(
        self,
        filesystem,
        resource,
        x_ms_client_request_id,
        timeout,
        x_ms_date,
        x_ms_version,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if filesystem is not None:
            _path_params['filesystem'] = filesystem
        # process the query parameters
        if resource is not None:
            
            _query_params.append(('resource', resource))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        # process the header parameters
        if x_ms_client_request_id is not None:
            _header_params['x-ms-client-request-id'] = x_ms_client_request_id
        if x_ms_date is not None:
            _header_params['x-ms-date'] = x_ms_date
        if x_ms_version is not None:
            _header_params['x-ms-version'] = x_ms_version
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/{filesystem}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def filesystem_get_properties(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Get Filesystem Properties.

        All system and user-defined filesystem properties are specified in the response headers.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_get_properties_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def filesystem_get_properties_with_http_info(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Get Filesystem Properties.

        All system and user-defined filesystem properties are specified in the response headers.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_get_properties_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def filesystem_get_properties_without_preload_content(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get Filesystem Properties.

        All system and user-defined filesystem properties are specified in the response headers.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_get_properties_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _filesystem_get_properties_serialize(
        self,
        filesystem,
        resource,
        x_ms_client_request_id,
        timeout,
        x_ms_date,
        x_ms_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if filesystem is not None:
            _path_params['filesystem'] = filesystem
        # process the query parameters
        if resource is not None:
            
            _query_params.append(('resource', resource))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        # process the header parameters
        if x_ms_client_request_id is not None:
            _header_params['x-ms-client-request-id'] = x_ms_client_request_id
        if x_ms_date is not None:
            _header_params['x-ms-date'] = x_ms_date
        if x_ms_version is not None:
            _header_params['x-ms-version'] = x_ms_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='HEAD',
            resource_path='/{filesystem}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def filesystem_set_properties(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        x_ms_properties: Annotated[Optional[StrictStr], Field(description="Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Set Filesystem Properties

        Set properties for the filesystem.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param x_ms_properties: Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.
        :type x_ms_properties: str
        :param if_modified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
        :type if_modified_since: str
        :param if_unmodified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_set_properties_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            x_ms_properties=x_ms_properties,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def filesystem_set_properties_with_http_info(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        x_ms_properties: Annotated[Optional[StrictStr], Field(description="Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Set Filesystem Properties

        Set properties for the filesystem.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param x_ms_properties: Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.
        :type x_ms_properties: str
        :param if_modified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
        :type if_modified_since: str
        :param if_unmodified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_set_properties_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            x_ms_properties=x_ms_properties,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def filesystem_set_properties_without_preload_content(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        x_ms_properties: Annotated[Optional[StrictStr], Field(description="Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Set Filesystem Properties

        Set properties for the filesystem.  This operation supports conditional HTTP requests.  For more information, see [Specifying Conditional Headers for Blob Service Operations](https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-conditional-headers-for-blob-service-operations).

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param x_ms_properties: Optional. User-defined properties to be stored with the filesystem, in the format of a comma-separated list of name and value pairs \"n1=v1, n2=v2, ...\", where each value is a base64 encoded string. Note that the string may only contain ASCII characters in the ISO-8859-1 character set.  If the filesystem exists, any properties not included in the list will be removed.  All properties are removed if the header is omitted.  To merge new and existing properties, first get all existing properties and the current E-Tag, then make a conditional request with the E-Tag and include values for all properties.
        :type x_ms_properties: str
        :param if_modified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has been modified since the specified date and time.
        :type if_modified_since: str
        :param if_unmodified_since: Optional. A date and time value. Specify this header to perform the operation only if the resource has not been modified since the specified date and time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._filesystem_set_properties_serialize(
            filesystem=filesystem,
            resource=resource,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            x_ms_properties=x_ms_properties,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _filesystem_set_properties_serialize(
        self,
        filesystem,
        resource,
        x_ms_client_request_id,
        timeout,
        x_ms_date,
        x_ms_version,
        x_ms_properties,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if filesystem is not None:
            _path_params['filesystem'] = filesystem
        # process the query parameters
        if resource is not None:
            
            _query_params.append(('resource', resource))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        # process the header parameters
        if x_ms_client_request_id is not None:
            _header_params['x-ms-client-request-id'] = x_ms_client_request_id
        if x_ms_date is not None:
            _header_params['x-ms-date'] = x_ms_date
        if x_ms_version is not None:
            _header_params['x-ms-version'] = x_ms_version
        if x_ms_properties is not None:
            _header_params['x-ms-properties'] = x_ms_properties
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/{filesystem}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def path_list(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        recursive: Annotated[StrictBool, Field(description="If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        directory: Annotated[Optional[StrictStr], Field(description="Filters results to paths within the specified directory. An error occurs if the directory does not exist.")] = None,
        continuation: Annotated[Optional[StrictStr], Field(description="The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.")] = None,
        upn: Annotated[Optional[StrictBool], Field(description="Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PathList:
        """List Paths

        List filesystem paths and their properties.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param recursive: If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root. (required)
        :type recursive: bool
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param directory: Filters results to paths within the specified directory. An error occurs if the directory does not exist.
        :type directory: str
        :param continuation: The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.
        :type continuation: str
        :param max_results: An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.
        :type max_results: int
        :param upn: Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.
        :type upn: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._path_list_serialize(
            filesystem=filesystem,
            resource=resource,
            recursive=recursive,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            directory=directory,
            continuation=continuation,
            max_results=max_results,
            upn=upn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PathList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def path_list_with_http_info(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        recursive: Annotated[StrictBool, Field(description="If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        directory: Annotated[Optional[StrictStr], Field(description="Filters results to paths within the specified directory. An error occurs if the directory does not exist.")] = None,
        continuation: Annotated[Optional[StrictStr], Field(description="The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.")] = None,
        upn: Annotated[Optional[StrictBool], Field(description="Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PathList]:
        """List Paths

        List filesystem paths and their properties.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param recursive: If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root. (required)
        :type recursive: bool
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param directory: Filters results to paths within the specified directory. An error occurs if the directory does not exist.
        :type directory: str
        :param continuation: The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.
        :type continuation: str
        :param max_results: An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.
        :type max_results: int
        :param upn: Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.
        :type upn: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._path_list_serialize(
            filesystem=filesystem,
            resource=resource,
            recursive=recursive,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            directory=directory,
            continuation=continuation,
            max_results=max_results,
            upn=upn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PathList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def path_list_without_preload_content(
        self,
        filesystem: Annotated[str, Field(min_length=3, strict=True, max_length=63, description="The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters.")],
        resource: Annotated[StrictStr, Field(description="The value must be \"filesystem\" for all filesystem operations.")],
        recursive: Annotated[StrictBool, Field(description="If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root.")],
        x_ms_client_request_id: Annotated[Optional[Annotated[str, Field(strict=True)]], Field(description="A UUID recorded in the analytics logs for troubleshooting and correlation.")] = None,
        timeout: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.")] = None,
        x_ms_date: Annotated[Optional[StrictStr], Field(description="Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.")] = None,
        x_ms_version: Annotated[Optional[StrictStr], Field(description="Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.")] = None,
        directory: Annotated[Optional[StrictStr], Field(description="Filters results to paths within the specified directory. An error occurs if the directory does not exist.")] = None,
        continuation: Annotated[Optional[StrictStr], Field(description="The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.")] = None,
        max_results: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.")] = None,
        upn: Annotated[Optional[StrictBool], Field(description="Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List Paths

        List filesystem paths and their properties.

        :param filesystem: The filesystem identifier.  The value must start and end with a letter or number and must contain only letters, numbers, and the dash (-) character.  Consecutive dashes are not permitted.  All letters must be lowercase.  The value must have between 3 and 63 characters. (required)
        :type filesystem: str
        :param resource: The value must be \"filesystem\" for all filesystem operations. (required)
        :type resource: str
        :param recursive: If \"true\", all paths are listed; otherwise, only paths at the root of the filesystem are listed.  If \"directory\" is specified, the list will only include paths that share the same root. (required)
        :type recursive: bool
        :param x_ms_client_request_id: A UUID recorded in the analytics logs for troubleshooting and correlation.
        :type x_ms_client_request_id: str
        :param timeout: An optional operation timeout value in seconds. The period begins when the request is received by the service. If the timeout value elapses before the operation completes, the operation fails.
        :type timeout: int
        :param x_ms_date: Specifies the Coordinated Universal Time (UTC) for the request.  This is required when using shared key authorization.
        :type x_ms_date: str
        :param x_ms_version: Specifies the version of the REST protocol used for processing the request. This is required when using shared key authorization.
        :type x_ms_version: str
        :param directory: Filters results to paths within the specified directory. An error occurs if the directory does not exist.
        :type directory: str
        :param continuation: The number of paths returned with each invocation is limited. If the number of paths to be returned exceeds this limit, a continuation token is returned in the response header x-ms-continuation. When a continuation token is  returned in the response, it must be specified in a subsequent invocation of the list operation to continue listing the paths.
        :type continuation: str
        :param max_results: An optional value that specifies the maximum number of items to return. If omitted or greater than 5,000, the response will include up to 5,000 items.
        :type max_results: int
        :param upn: Optional. Valid only when Hierarchical Namespace is enabled for the account. If \"true\", the user identity values returned in the owner and group fields of each list entry will be transformed from Azure Active Directory Object IDs to User Principal Names.  If \"false\", the values will be returned as Azure Active Directory Object IDs. The default value is false. Note that group and application Object IDs are not translated because they do not have unique friendly names.
        :type upn: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._path_list_serialize(
            filesystem=filesystem,
            resource=resource,
            recursive=recursive,
            x_ms_client_request_id=x_ms_client_request_id,
            timeout=timeout,
            x_ms_date=x_ms_date,
            x_ms_version=x_ms_version,
            directory=directory,
            continuation=continuation,
            max_results=max_results,
            upn=upn,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PathList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _path_list_serialize(
        self,
        filesystem,
        resource,
        recursive,
        x_ms_client_request_id,
        timeout,
        x_ms_date,
        x_ms_version,
        directory,
        continuation,
        max_results,
        upn,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if filesystem is not None:
            _path_params['filesystem'] = filesystem
        # process the query parameters
        if resource is not None:
            
            _query_params.append(('resource', resource))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if directory is not None:
            
            _query_params.append(('directory', directory))
            
        if recursive is not None:
            
            _query_params.append(('recursive', recursive))
            
        if continuation is not None:
            
            _query_params.append(('continuation', continuation))
            
        if max_results is not None:
            
            _query_params.append(('maxResults', max_results))
            
        if upn is not None:
            
            _query_params.append(('upn', upn))
            
        # process the header parameters
        if x_ms_client_request_id is not None:
            _header_params['x-ms-client-request-id'] = x_ms_client_request_id
        if x_ms_date is not None:
            _header_params['x-ms-date'] = x_ms_date
        if x_ms_version is not None:
            _header_params['x-ms-version'] = x_ms_version
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/{filesystem}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


