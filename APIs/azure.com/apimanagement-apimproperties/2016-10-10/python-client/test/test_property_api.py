# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Property entity associated with your Azure API Management deployment. API Management policies are a powerful capability of the system that allow the publisher to change the behavior of the API through configuration. Policies are a collection of statements that are executed sequentially on the request or response of an API. Policy statements can be constructed using literal text values, policy expressions, and properties. Each API Management service instance has a properties collection of key/value pairs that are global to the service instance. These properties can be used to manage constant string values across all API configuration and policies.

    The version of the OpenAPI document: 2016-10-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.property_api import PropertyApi


class TestPropertyApi(unittest.TestCase):
    """PropertyApi unit test stubs"""

    def setUp(self) -> None:
        self.api = PropertyApi()

    def tearDown(self) -> None:
        pass

    def test_properties_list_by_service(self) -> None:
        """Test case for properties_list_by_service

        """
        pass

    def test_property_create_or_update(self) -> None:
        """Test case for property_create_or_update

        """
        pass

    def test_property_delete(self) -> None:
        """Test case for property_delete

        """
        pass

    def test_property_get(self) -> None:
        """Test case for property_get

        """
        pass

    def test_property_update(self) -> None:
        """Test case for property_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
