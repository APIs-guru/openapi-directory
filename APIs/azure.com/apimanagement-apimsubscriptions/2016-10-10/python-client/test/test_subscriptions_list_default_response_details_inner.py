# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.

    The version of the OpenAPI document: 2016-10-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscriptions_list_default_response_details_inner import SubscriptionsListDefaultResponseDetailsInner

class TestSubscriptionsListDefaultResponseDetailsInner(unittest.TestCase):
    """SubscriptionsListDefaultResponseDetailsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionsListDefaultResponseDetailsInner:
        """Test SubscriptionsListDefaultResponseDetailsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionsListDefaultResponseDetailsInner`
        """
        model = SubscriptionsListDefaultResponseDetailsInner()
        if include_optional:
            return SubscriptionsListDefaultResponseDetailsInner(
                code = '',
                message = '',
                target = ''
            )
        else:
            return SubscriptionsListDefaultResponseDetailsInner(
        )
        """

    def testSubscriptionsListDefaultResponseDetailsInner(self):
        """Test SubscriptionsListDefaultResponseDetailsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
