# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_list200_response import SubscriptionList200Response

class TestSubscriptionList200Response(unittest.TestCase):
    """SubscriptionList200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionList200Response:
        """Test SubscriptionList200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionList200Response`
        """
        model = SubscriptionList200Response()
        if include_optional:
            return SubscriptionList200Response(
                next_link = '',
                value = [
                    openapi_client.models.subscription_list_200_response_value_inner.Subscription_List_200_response_value_inner(
                        properties = openapi_client.models.subscription_list_200_response_value_inner_properties.Subscription_List_200_response_value_inner_properties(
                            allow_tracing = True, 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            display_name = '', 
                            end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            notification_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            owner_id = '', 
                            primary_key = '0', 
                            scope = '', 
                            secondary_key = '0', 
                            start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            state = 'suspended', 
                            state_comment = '', ), )
                    ]
            )
        else:
            return SubscriptionList200Response(
        )
        """

    def testSubscriptionList200Response(self):
        """Test SubscriptionList200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
