# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Subscription entity associated with your Azure API Management deployment. The Subscription entity represents the association between a user and a product in API Management. Products contain one or more APIs, and once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription_update_request import SubscriptionUpdateRequest

class TestSubscriptionUpdateRequest(unittest.TestCase):
    """SubscriptionUpdateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubscriptionUpdateRequest:
        """Test SubscriptionUpdateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubscriptionUpdateRequest`
        """
        model = SubscriptionUpdateRequest()
        if include_optional:
            return SubscriptionUpdateRequest(
                properties = openapi_client.models.subscription_update_request_properties.Subscription_Update_request_properties(
                    allow_tracing = True, 
                    display_name = '', 
                    expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    owner_id = '', 
                    primary_key = '0', 
                    scope = '', 
                    secondary_key = '0', 
                    state = 'suspended', 
                    state_comment = '', )
            )
        else:
            return SubscriptionUpdateRequest(
        )
        """

    def testSubscriptionUpdateRequest(self):
        """Test SubscriptionUpdateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
