# coding: utf-8

"""
    NotificationHubsManagementClient

    Azure NotificationHub client

    The version of the OpenAPI document: 2014-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.notification_hub_create_or_update_parameters import NotificationHubCreateOrUpdateParameters

class TestNotificationHubCreateOrUpdateParameters(unittest.TestCase):
    """NotificationHubCreateOrUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationHubCreateOrUpdateParameters:
        """Test NotificationHubCreateOrUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationHubCreateOrUpdateParameters`
        """
        model = NotificationHubCreateOrUpdateParameters()
        if include_optional:
            return NotificationHubCreateOrUpdateParameters(
                location = '',
                properties = openapi_client.models.notification_hub_properties.NotificationHubProperties(
                    adm_credential = openapi_client.models.adm_credential.AdmCredential(
                        properties = openapi_client.models.adm_credential_properties.AdmCredentialProperties(
                            auth_token_url = '', 
                            client_id = '', 
                            client_secret = '', ), ), 
                    apns_credential = openapi_client.models.apns_credential.ApnsCredential(), 
                    authorization_rules = [
                        openapi_client.models.shared_access_authorization_rule_properties.SharedAccessAuthorizationRuleProperties(
                            claim_type = '', 
                            claim_value = '', 
                            created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            key_name = '', 
                            modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            primary_key = '', 
                            revision = 56, 
                            rights = [
                                'Manage'
                                ], 
                            secondary_key = '', )
                        ], 
                    baidu_credential = openapi_client.models.baidu_credential.BaiduCredential(), 
                    gcm_credential = openapi_client.models.gcm_credential.GcmCredential(), 
                    mpns_credential = openapi_client.models.mpns_credential.MpnsCredential(), 
                    name = '', 
                    registration_ttl = '', 
                    wns_credential = openapi_client.models.wns_credential.WnsCredential(), ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return NotificationHubCreateOrUpdateParameters(
                location = '',
                properties = openapi_client.models.notification_hub_properties.NotificationHubProperties(
                    adm_credential = openapi_client.models.adm_credential.AdmCredential(
                        properties = openapi_client.models.adm_credential_properties.AdmCredentialProperties(
                            auth_token_url = '', 
                            client_id = '', 
                            client_secret = '', ), ), 
                    apns_credential = openapi_client.models.apns_credential.ApnsCredential(), 
                    authorization_rules = [
                        openapi_client.models.shared_access_authorization_rule_properties.SharedAccessAuthorizationRuleProperties(
                            claim_type = '', 
                            claim_value = '', 
                            created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            key_name = '', 
                            modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            primary_key = '', 
                            revision = 56, 
                            rights = [
                                'Manage'
                                ], 
                            secondary_key = '', )
                        ], 
                    baidu_credential = openapi_client.models.baidu_credential.BaiduCredential(), 
                    gcm_credential = openapi_client.models.gcm_credential.GcmCredential(), 
                    mpns_credential = openapi_client.models.mpns_credential.MpnsCredential(), 
                    name = '', 
                    registration_ttl = '', 
                    wns_credential = openapi_client.models.wns_credential.WnsCredential(), ),
        )
        """

    def testNotificationHubCreateOrUpdateParameters(self):
        """Test NotificationHubCreateOrUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
