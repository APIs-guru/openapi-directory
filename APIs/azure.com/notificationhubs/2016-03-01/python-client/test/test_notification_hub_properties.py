# coding: utf-8

"""
    NotificationHubsManagementClient

    Azure NotificationHub client

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.notification_hub_properties import NotificationHubProperties

class TestNotificationHubProperties(unittest.TestCase):
    """NotificationHubProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NotificationHubProperties:
        """Test NotificationHubProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NotificationHubProperties`
        """
        model = NotificationHubProperties()
        if include_optional:
            return NotificationHubProperties(
                adm_credential = openapi_client.models.adm_credential.AdmCredential(
                    properties = openapi_client.models.adm_credential_properties.AdmCredentialProperties(
                        auth_token_url = '', 
                        client_id = '', 
                        client_secret = '', ), ),
                apns_credential = openapi_client.models.apns_credential.ApnsCredential(
                    properties = openapi_client.models.apns_credential_properties.ApnsCredentialProperties(
                        apns_certificate = '', 
                        certificate_key = '', 
                        endpoint = '', 
                        thumbprint = '', ), ),
                authorization_rules = [
                    openapi_client.models.shared_access_authorization_rule_properties.SharedAccessAuthorizationRuleProperties(
                        rights = [
                            'Manage'
                            ], )
                    ],
                baidu_credential = openapi_client.models.baidu_credential.BaiduCredential(
                    properties = openapi_client.models.baidu_credential_properties.BaiduCredentialProperties(
                        baidu_api_key = '', 
                        baidu_end_point = '', 
                        baidu_secret_key = '', ), ),
                gcm_credential = openapi_client.models.gcm_credential.GcmCredential(
                    properties = openapi_client.models.gcm_credential_properties.GcmCredentialProperties(
                        gcm_endpoint = '', 
                        google_api_key = '', ), ),
                mpns_credential = openapi_client.models.mpns_credential.MpnsCredential(
                    properties = openapi_client.models.mpns_credential_properties.MpnsCredentialProperties(
                        certificate_key = '', 
                        mpns_certificate = '', 
                        thumbprint = '', ), ),
                name = '',
                registration_ttl = '',
                wns_credential = openapi_client.models.wns_credential.WnsCredential(
                    properties = openapi_client.models.wns_credential_properties.WnsCredentialProperties(
                        package_sid = '', 
                        secret_key = '', 
                        windows_live_endpoint = '', ), )
            )
        else:
            return NotificationHubProperties(
        )
        """

    def testNotificationHubProperties(self):
        """Test NotificationHubProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
