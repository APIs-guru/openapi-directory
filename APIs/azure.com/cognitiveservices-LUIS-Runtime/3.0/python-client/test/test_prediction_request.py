# coding: utf-8

"""
    LUIS Runtime Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.prediction_request import PredictionRequest

class TestPredictionRequest(unittest.TestCase):
    """PredictionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PredictionRequest:
        """Test PredictionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PredictionRequest`
        """
        model = PredictionRequest()
        if include_optional:
            return PredictionRequest(
                dynamic_lists = [
                    openapi_client.models.dynamic_list.DynamicList(
                        list_entity_name = '', 
                        request_lists = [
                            openapi_client.models.request_list.RequestList(
                                canonical_form = '', 
                                name = '', 
                                synonyms = [
                                    ''
                                    ], )
                            ], )
                    ],
                external_entities = [
                    openapi_client.models.external_entity.ExternalEntity(
                        entity_length = 56, 
                        entity_name = '', 
                        resolution = openapi_client.models.resolution.resolution(), 
                        score = 1.337, 
                        start_index = 56, )
                    ],
                options = openapi_client.models.prediction_request_options.PredictionRequestOptions(
                    datetime_reference = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    prefer_external_entities = True, ),
                query = ''
            )
        else:
            return PredictionRequest(
                query = '',
        )
        """

    def testPredictionRequest(self):
        """Test PredictionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
