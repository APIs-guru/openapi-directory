# coding: utf-8

"""
    LUIS Runtime Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.prediction import Prediction

class TestPrediction(unittest.TestCase):
    """Prediction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Prediction:
        """Test Prediction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Prediction`
        """
        model = Prediction()
        if include_optional:
            return Prediction(
                altered_query = '',
                entities = {
                    'key' : None
                    },
                intents = {
                    'key' : openapi_client.models.intent.Intent(
                        child_app = openapi_client.models.prediction.Prediction(
                            altered_query = '', 
                            entities = {
                                'key' : None
                                }, 
                            intents = {
                                'key' : openapi_client.models.intent.Intent(
                                    score = 1.337, )
                                }, 
                            normalized_query = '', 
                            sentiment = openapi_client.models.sentiment.Sentiment(
                                label = '', 
                                score = 1.337, ), 
                            top_intent = '', ), 
                        score = 1.337, )
                    },
                normalized_query = '',
                sentiment = openapi_client.models.sentiment.Sentiment(
                    label = '', 
                    score = 1.337, ),
                top_intent = ''
            )
        else:
            return Prediction(
                entities = {
                    'key' : None
                    },
                intents = {
                    'key' : openapi_client.models.intent.Intent(
                        child_app = openapi_client.models.prediction.Prediction(
                            altered_query = '', 
                            entities = {
                                'key' : None
                                }, 
                            intents = {
                                'key' : openapi_client.models.intent.Intent(
                                    score = 1.337, )
                                }, 
                            normalized_query = '', 
                            sentiment = openapi_client.models.sentiment.Sentiment(
                                label = '', 
                                score = 1.337, ), 
                            top_intent = '', ), 
                        score = 1.337, )
                    },
                normalized_query = '',
                top_intent = '',
        )
        """

    def testPrediction(self):
        """Test Prediction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
