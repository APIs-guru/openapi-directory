# coding: utf-8

"""
    Language Understanding Intelligent Service (LUIS) Endpoint API for running predictions and extracting user intentions and entities from utterances.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v2.0 preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.entity_with_score import EntityWithScore

class TestEntityWithScore(unittest.TestCase):
    """EntityWithScore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntityWithScore:
        """Test EntityWithScore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntityWithScore`
        """
        model = EntityWithScore()
        if include_optional:
            return EntityWithScore(
                end_index = 1.337,
                entity = '',
                start_index = 1.337,
                type = '',
                score = 0
            )
        else:
            return EntityWithScore(
                end_index = 1.337,
                entity = '',
                start_index = 1.337,
                type = '',
                score = 0,
        )
        """

    def testEntityWithScore(self):
        """Test EntityWithScore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
