# coding: utf-8

"""
    Azure SQL Database capabilities

    Describes the Azure SQL capabilities available to a subscription for a given location.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.edition_capability import EditionCapability

class TestEditionCapability(unittest.TestCase):
    """EditionCapability unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EditionCapability:
        """Test EditionCapability
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EditionCapability`
        """
        model = EditionCapability()
        if include_optional:
            return EditionCapability(
                name = '',
                status = 'Visible',
                supported_service_level_objectives = [
                    openapi_client.models.service_objective_capability.ServiceObjectiveCapability(
                        id = '', 
                        included_max_size = openapi_client.models.max_size_capability.MaxSizeCapability(
                            limit = 56, 
                            status = 'Visible', 
                            unit = 'Megabytes', ), 
                        name = '', 
                        performance_level = openapi_client.models.performance_level.PerformanceLevel(
                            unit = 'DTU', 
                            value = 56, ), 
                        status = 'Visible', 
                        supported_max_sizes = [
                            openapi_client.models.max_size_capability.MaxSizeCapability(
                                limit = 56, 
                                unit = 'Megabytes', )
                            ], )
                    ],
                zone_redundant = True
            )
        else:
            return EditionCapability(
        )
        """

    def testEditionCapability(self):
        """Test EditionCapability"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
