# coding: utf-8

"""
    LUIS Authoring Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pattern_any_entity_extractor import PatternAnyEntityExtractor

class TestPatternAnyEntityExtractor(unittest.TestCase):
    """PatternAnyEntityExtractor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatternAnyEntityExtractor:
        """Test PatternAnyEntityExtractor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatternAnyEntityExtractor`
        """
        model = PatternAnyEntityExtractor()
        if include_optional:
            return PatternAnyEntityExtractor(
                explicit_list = [
                    openapi_client.models.explicit_list_item.ExplicitListItem(
                        explicit_list_item = '', 
                        id = 56, )
                    ],
                id = '',
                name = '',
                readable_type = 'Entity Extractor',
                type_id = 56,
                roles = [
                    openapi_client.models.entity_role.EntityRole(
                        id = '', 
                        name = '', )
                    ]
            )
        else:
            return PatternAnyEntityExtractor(
                id = '',
                readable_type = 'Entity Extractor',
        )
        """

    def testPatternAnyEntityExtractor(self):
        """Test PatternAnyEntityExtractor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
