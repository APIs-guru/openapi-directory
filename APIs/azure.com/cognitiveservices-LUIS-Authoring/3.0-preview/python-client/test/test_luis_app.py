# coding: utf-8

"""
    LUIS Authoring Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 3.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.luis_app import LuisApp

class TestLuisApp(unittest.TestCase):
    """LuisApp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LuisApp:
        """Test LuisApp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LuisApp`
        """
        model = LuisApp()
        if include_optional:
            return LuisApp(
                closed_lists = [
                    openapi_client.models.closed_list.ClosedList(
                        name = '', 
                        roles = [
                            ''
                            ], 
                        sub_lists = [
                            openapi_client.models.sub_closed_list.SubClosedList(
                                canonical_form = '', 
                                list = [
                                    ''
                                    ], )
                            ], )
                    ],
                composites = [
                    openapi_client.models.hierarchical_model.HierarchicalModel(
                        children = [
                            openapi_client.models.json_child.JsonChild(
                                features = [
                                    openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                        feature_name = '', 
                                        model_name = '', )
                                    ], 
                                instance_of = '', 
                                name = '', )
                            ], 
                        features = [
                            openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                feature_name = '', 
                                model_name = '', )
                            ], 
                        inherits = openapi_client.models.prebuilt_domain_object.PrebuiltDomainObject(
                            domain_name = '', 
                            model_name = '', ), 
                        name = '', 
                        roles = [
                            ''
                            ], )
                    ],
                culture = '',
                desc = '',
                entities = [
                    openapi_client.models.hierarchical_model.HierarchicalModel(
                        children = [
                            openapi_client.models.json_child.JsonChild(
                                features = [
                                    openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                        feature_name = '', 
                                        model_name = '', )
                                    ], 
                                instance_of = '', 
                                name = '', )
                            ], 
                        features = [
                            openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                feature_name = '', 
                                model_name = '', )
                            ], 
                        inherits = openapi_client.models.prebuilt_domain_object.PrebuiltDomainObject(
                            domain_name = '', 
                            model_name = '', ), 
                        name = '', 
                        roles = [
                            ''
                            ], )
                    ],
                hierarchicals = [
                    openapi_client.models.hierarchical_model.HierarchicalModel(
                        children = [
                            openapi_client.models.json_child.JsonChild(
                                features = [
                                    openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                        feature_name = '', 
                                        model_name = '', )
                                    ], 
                                instance_of = '', 
                                name = '', )
                            ], 
                        features = [
                            openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                feature_name = '', 
                                model_name = '', )
                            ], 
                        inherits = openapi_client.models.prebuilt_domain_object.PrebuiltDomainObject(
                            domain_name = '', 
                            model_name = '', ), 
                        name = '', 
                        roles = [
                            ''
                            ], )
                    ],
                intents = [
                    openapi_client.models.hierarchical_model.HierarchicalModel(
                        children = [
                            openapi_client.models.json_child.JsonChild(
                                features = [
                                    openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                        feature_name = '', 
                                        model_name = '', )
                                    ], 
                                instance_of = '', 
                                name = '', )
                            ], 
                        features = [
                            openapi_client.models.json_model_feature_information.JsonModelFeatureInformation(
                                feature_name = '', 
                                model_name = '', )
                            ], 
                        inherits = openapi_client.models.prebuilt_domain_object.PrebuiltDomainObject(
                            domain_name = '', 
                            model_name = '', ), 
                        name = '', 
                        roles = [
                            ''
                            ], )
                    ],
                name = '',
                pattern_any_entities = [
                    openapi_client.models.pattern_any.PatternAny(
                        explicit_list = [
                            ''
                            ], 
                        name = '', 
                        roles = [
                            ''
                            ], )
                    ],
                patterns = [
                    openapi_client.models.pattern_rule.PatternRule(
                        intent = '', 
                        pattern = '', )
                    ],
                phraselists = [
                    openapi_client.models.json_model_feature.JSONModelFeature(
                        activated = True, 
                        enabled_for_all_models = True, 
                        mode = True, 
                        name = '', 
                        words = '', )
                    ],
                prebuilt_entities = [
                    openapi_client.models.prebuilt_entity.PrebuiltEntity(
                        name = '', 
                        roles = [
                            ''
                            ], )
                    ],
                regex_entities = [
                    openapi_client.models.regex_entity.RegexEntity(
                        name = '', 
                        regex_pattern = '', 
                        roles = [
                            ''
                            ], )
                    ],
                regex_features = [
                    openapi_client.models.json_regex_feature.JSONRegexFeature(
                        activated = True, 
                        name = '', 
                        pattern = '', )
                    ],
                utterances = [
                    openapi_client.models.json_utterance.JSONUtterance(
                        entities = [
                            openapi_client.models.json_entity.JSONEntity(
                                end_pos = 56, 
                                entity = '', 
                                role = '', 
                                start_pos = 56, )
                            ], 
                        intent = '', 
                        text = '', )
                    ],
                version_id = ''
            )
        else:
            return LuisApp(
        )
        """

    def testLuisApp(self):
        """Test LuisApp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
