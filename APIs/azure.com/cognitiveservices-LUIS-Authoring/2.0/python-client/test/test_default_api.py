# coding: utf-8

"""
    LUIS Authoring Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_apps_add(self) -> None:
        """Test case for apps_add

        """
        pass

    def test_apps_add_custom_prebuilt_domain(self) -> None:
        """Test case for apps_add_custom_prebuilt_domain

        """
        pass

    def test_apps_delete(self) -> None:
        """Test case for apps_delete

        """
        pass

    def test_apps_download_query_logs(self) -> None:
        """Test case for apps_download_query_logs

        """
        pass

    def test_apps_get(self) -> None:
        """Test case for apps_get

        """
        pass

    def test_apps_get_publish_settings(self) -> None:
        """Test case for apps_get_publish_settings

        """
        pass

    def test_apps_get_settings(self) -> None:
        """Test case for apps_get_settings

        """
        pass

    def test_apps_import(self) -> None:
        """Test case for apps_import

        """
        pass

    def test_apps_list(self) -> None:
        """Test case for apps_list

        """
        pass

    def test_apps_list_available_custom_prebuilt_domains(self) -> None:
        """Test case for apps_list_available_custom_prebuilt_domains

        """
        pass

    def test_apps_list_available_custom_prebuilt_domains_for_culture(self) -> None:
        """Test case for apps_list_available_custom_prebuilt_domains_for_culture

        """
        pass

    def test_apps_list_cortana_endpoints(self) -> None:
        """Test case for apps_list_cortana_endpoints

        """
        pass

    def test_apps_list_domains(self) -> None:
        """Test case for apps_list_domains

        """
        pass

    def test_apps_list_endpoints(self) -> None:
        """Test case for apps_list_endpoints

        """
        pass

    def test_apps_list_supported_cultures(self) -> None:
        """Test case for apps_list_supported_cultures

        """
        pass

    def test_apps_list_usage_scenarios(self) -> None:
        """Test case for apps_list_usage_scenarios

        """
        pass

    def test_apps_package_published_application_as_gzip(self) -> None:
        """Test case for apps_package_published_application_as_gzip

        package - Gets published LUIS application package in binary stream GZip format
        """
        pass

    def test_apps_package_trained_application_as_gzip(self) -> None:
        """Test case for apps_package_trained_application_as_gzip

        package - Gets trained LUIS application package in binary stream GZip format
        """
        pass

    def test_apps_publish(self) -> None:
        """Test case for apps_publish

        """
        pass

    def test_apps_update(self) -> None:
        """Test case for apps_update

        """
        pass

    def test_apps_update_publish_settings(self) -> None:
        """Test case for apps_update_publish_settings

        """
        pass

    def test_apps_update_settings(self) -> None:
        """Test case for apps_update_settings

        """
        pass

    def test_azure_accounts_assign_to_app(self) -> None:
        """Test case for azure_accounts_assign_to_app

        apps - Assign a LUIS Azure account to an application
        """
        pass

    def test_azure_accounts_get_assigned(self) -> None:
        """Test case for azure_accounts_get_assigned

        apps - Get LUIS Azure accounts assigned to the application
        """
        pass

    def test_azure_accounts_list_user_luis_accounts(self) -> None:
        """Test case for azure_accounts_list_user_luis_accounts

        user - Get LUIS Azure accounts
        """
        pass

    def test_azure_accounts_remove_from_app(self) -> None:
        """Test case for azure_accounts_remove_from_app

        apps - Removes an assigned LUIS Azure account from an application
        """
        pass

    def test_examples_add(self) -> None:
        """Test case for examples_add

        """
        pass

    def test_examples_batch(self) -> None:
        """Test case for examples_batch

        """
        pass

    def test_examples_delete(self) -> None:
        """Test case for examples_delete

        """
        pass

    def test_examples_list(self) -> None:
        """Test case for examples_list

        """
        pass

    def test_features_add_phrase_list(self) -> None:
        """Test case for features_add_phrase_list

        """
        pass

    def test_features_create_pattern_feature(self) -> None:
        """Test case for features_create_pattern_feature

        """
        pass

    def test_features_delete_pattern_feature(self) -> None:
        """Test case for features_delete_pattern_feature

        """
        pass

    def test_features_delete_phrase_list(self) -> None:
        """Test case for features_delete_phrase_list

        """
        pass

    def test_features_get_pattern_feature_info(self) -> None:
        """Test case for features_get_pattern_feature_info

        """
        pass

    def test_features_get_phrase_list(self) -> None:
        """Test case for features_get_phrase_list

        """
        pass

    def test_features_list(self) -> None:
        """Test case for features_list

        """
        pass

    def test_features_list_application_version_pattern_features(self) -> None:
        """Test case for features_list_application_version_pattern_features

        """
        pass

    def test_features_list_phrase_lists(self) -> None:
        """Test case for features_list_phrase_lists

        """
        pass

    def test_features_update_pattern_feature(self) -> None:
        """Test case for features_update_pattern_feature

        """
        pass

    def test_features_update_phrase_list(self) -> None:
        """Test case for features_update_phrase_list

        """
        pass

    def test_model_add_closed_list(self) -> None:
        """Test case for model_add_closed_list

        """
        pass

    def test_model_add_composite_entity(self) -> None:
        """Test case for model_add_composite_entity

        """
        pass

    def test_model_add_composite_entity_child(self) -> None:
        """Test case for model_add_composite_entity_child

        """
        pass

    def test_model_add_custom_prebuilt_domain(self) -> None:
        """Test case for model_add_custom_prebuilt_domain

        """
        pass

    def test_model_add_custom_prebuilt_entity(self) -> None:
        """Test case for model_add_custom_prebuilt_entity

        """
        pass

    def test_model_add_custom_prebuilt_intent(self) -> None:
        """Test case for model_add_custom_prebuilt_intent

        """
        pass

    def test_model_add_entity(self) -> None:
        """Test case for model_add_entity

        """
        pass

    def test_model_add_explicit_list_item(self) -> None:
        """Test case for model_add_explicit_list_item

        Add a new exception to the explicit list for the Pattern.Any entity in a version of the application.
        """
        pass

    def test_model_add_hierarchical_entity(self) -> None:
        """Test case for model_add_hierarchical_entity

        """
        pass

    def test_model_add_hierarchical_entity_child(self) -> None:
        """Test case for model_add_hierarchical_entity_child

        """
        pass

    def test_model_add_intent(self) -> None:
        """Test case for model_add_intent

        """
        pass

    def test_model_add_prebuilt(self) -> None:
        """Test case for model_add_prebuilt

        """
        pass

    def test_model_add_sub_list(self) -> None:
        """Test case for model_add_sub_list

        """
        pass

    def test_model_create_closed_list_entity_role(self) -> None:
        """Test case for model_create_closed_list_entity_role

        Create a role for a list entity in a version of the application.
        """
        pass

    def test_model_create_composite_entity_role(self) -> None:
        """Test case for model_create_composite_entity_role

        Create a role for a composite entity in a version of the application.
        """
        pass

    def test_model_create_custom_prebuilt_entity_role(self) -> None:
        """Test case for model_create_custom_prebuilt_entity_role

        Create a role for a prebuilt entity in a version of the application.
        """
        pass

    def test_model_create_entity_role(self) -> None:
        """Test case for model_create_entity_role

        Create an entity role in a version of the application.
        """
        pass

    def test_model_create_hierarchical_entity_role(self) -> None:
        """Test case for model_create_hierarchical_entity_role

        Create a role for an hierarchical entity in a version of the application.
        """
        pass

    def test_model_create_pattern_any_entity_model(self) -> None:
        """Test case for model_create_pattern_any_entity_model

        Adds a pattern.any entity extractor to a version of the application.
        """
        pass

    def test_model_create_pattern_any_entity_role(self) -> None:
        """Test case for model_create_pattern_any_entity_role

        Create a role for an Pattern.any entity in a version of the application.
        """
        pass

    def test_model_create_prebuilt_entity_role(self) -> None:
        """Test case for model_create_prebuilt_entity_role

        Create a role for a prebuilt entity in a version of the application.
        """
        pass

    def test_model_create_regex_entity_model(self) -> None:
        """Test case for model_create_regex_entity_model

        Adds a regular expression entity model to a version of the application.
        """
        pass

    def test_model_create_regex_entity_role(self) -> None:
        """Test case for model_create_regex_entity_role

        Create a role for an regular expression entity in a version of the application.
        """
        pass

    def test_model_delete_closed_list(self) -> None:
        """Test case for model_delete_closed_list

        """
        pass

    def test_model_delete_closed_list_entity_role(self) -> None:
        """Test case for model_delete_closed_list_entity_role

        Delete a role for a given list entity in a version of the application.
        """
        pass

    def test_model_delete_composite_entity(self) -> None:
        """Test case for model_delete_composite_entity

        """
        pass

    def test_model_delete_composite_entity_child(self) -> None:
        """Test case for model_delete_composite_entity_child

        """
        pass

    def test_model_delete_composite_entity_role(self) -> None:
        """Test case for model_delete_composite_entity_role

        Delete a role for a given composite entity in a version of the application.
        """
        pass

    def test_model_delete_custom_entity_role(self) -> None:
        """Test case for model_delete_custom_entity_role

        Delete a role for a given prebuilt entity in a version of the application.
        """
        pass

    def test_model_delete_custom_prebuilt_domain(self) -> None:
        """Test case for model_delete_custom_prebuilt_domain

        """
        pass

    def test_model_delete_entity(self) -> None:
        """Test case for model_delete_entity

        """
        pass

    def test_model_delete_entity_role(self) -> None:
        """Test case for model_delete_entity_role

        Delete an entity role in a version of the application.
        """
        pass

    def test_model_delete_explicit_list_item(self) -> None:
        """Test case for model_delete_explicit_list_item

        Delete an item from the explicit (exception) list for a Pattern.any entity in a version of the application.
        """
        pass

    def test_model_delete_hierarchical_entity(self) -> None:
        """Test case for model_delete_hierarchical_entity

        """
        pass

    def test_model_delete_hierarchical_entity_child(self) -> None:
        """Test case for model_delete_hierarchical_entity_child

        """
        pass

    def test_model_delete_hierarchical_entity_role(self) -> None:
        """Test case for model_delete_hierarchical_entity_role

        Delete a role for a given hierarchical role in a version of the application.
        """
        pass

    def test_model_delete_intent(self) -> None:
        """Test case for model_delete_intent

        """
        pass

    def test_model_delete_pattern_any_entity_model(self) -> None:
        """Test case for model_delete_pattern_any_entity_model

        Deletes a Pattern.Any entity extractor from a version of the application.
        """
        pass

    def test_model_delete_pattern_any_entity_role(self) -> None:
        """Test case for model_delete_pattern_any_entity_role

        Delete a role for a given Pattern.any entity in a version of the application.
        """
        pass

    def test_model_delete_prebuilt(self) -> None:
        """Test case for model_delete_prebuilt

        """
        pass

    def test_model_delete_prebuilt_entity_role(self) -> None:
        """Test case for model_delete_prebuilt_entity_role

        Delete a role in a prebuilt entity in a version of the application.
        """
        pass

    def test_model_delete_regex_entity_model(self) -> None:
        """Test case for model_delete_regex_entity_model

        Deletes a regular expression entity from a version of the application.
        """
        pass

    def test_model_delete_regex_entity_role(self) -> None:
        """Test case for model_delete_regex_entity_role

        Delete a role for a given regular expression in a version of the application.
        """
        pass

    def test_model_delete_sub_list(self) -> None:
        """Test case for model_delete_sub_list

        """
        pass

    def test_model_examples(self) -> None:
        """Test case for model_examples

        """
        pass

    def test_model_get_closed_list(self) -> None:
        """Test case for model_get_closed_list

        """
        pass

    def test_model_get_closed_list_entity_role(self) -> None:
        """Test case for model_get_closed_list_entity_role

        Get one role for a given list entity in a version of the application.
        """
        pass

    def test_model_get_composite_entity(self) -> None:
        """Test case for model_get_composite_entity

        """
        pass

    def test_model_get_composite_entity_role(self) -> None:
        """Test case for model_get_composite_entity_role

        Get one role for a given composite entity in a version of the application
        """
        pass

    def test_model_get_custom_entity_role(self) -> None:
        """Test case for model_get_custom_entity_role

        Get one role for a given prebuilt entity in a version of the application.
        """
        pass

    def test_model_get_entity(self) -> None:
        """Test case for model_get_entity

        """
        pass

    def test_model_get_entity_role(self) -> None:
        """Test case for model_get_entity_role

        Get one role for a given entity in a version of the application
        """
        pass

    def test_model_get_explicit_list(self) -> None:
        """Test case for model_get_explicit_list

        Get the explicit (exception) list of the pattern.any entity in a version of the application.
        """
        pass

    def test_model_get_explicit_list_item(self) -> None:
        """Test case for model_get_explicit_list_item

        Get the explicit (exception) list of the pattern.any entity in a version of the application.
        """
        pass

    def test_model_get_hierarchical_entity(self) -> None:
        """Test case for model_get_hierarchical_entity

        """
        pass

    def test_model_get_hierarchical_entity_child(self) -> None:
        """Test case for model_get_hierarchical_entity_child

        """
        pass

    def test_model_get_hierarchical_entity_role(self) -> None:
        """Test case for model_get_hierarchical_entity_role

        Get one role for a given hierarchical entity in a version of the application.
        """
        pass

    def test_model_get_intent(self) -> None:
        """Test case for model_get_intent

        """
        pass

    def test_model_get_pattern_any_entity_info(self) -> None:
        """Test case for model_get_pattern_any_entity_info

        Gets information about the Pattern.Any model in a version of the application.
        """
        pass

    def test_model_get_pattern_any_entity_role(self) -> None:
        """Test case for model_get_pattern_any_entity_role

        Get one role for a given Pattern.any entity in a version of the application.
        """
        pass

    def test_model_get_prebuilt(self) -> None:
        """Test case for model_get_prebuilt

        """
        pass

    def test_model_get_prebuilt_entity_role(self) -> None:
        """Test case for model_get_prebuilt_entity_role

        Get one role for a given prebuilt entity in a version of the application
        """
        pass

    def test_model_get_regex_entity_entity_info(self) -> None:
        """Test case for model_get_regex_entity_entity_info

        Gets information about a regular expression entity in a version of the application.
        """
        pass

    def test_model_get_regex_entity_role(self) -> None:
        """Test case for model_get_regex_entity_role

        Get one role for a given regular expression entity in a version of the application.
        """
        pass

    def test_model_list_closed_list_entity_roles(self) -> None:
        """Test case for model_list_closed_list_entity_roles

        Get all roles for a list entity in a version of the application.
        """
        pass

    def test_model_list_closed_lists(self) -> None:
        """Test case for model_list_closed_lists

        """
        pass

    def test_model_list_composite_entities(self) -> None:
        """Test case for model_list_composite_entities

        """
        pass

    def test_model_list_composite_entity_roles(self) -> None:
        """Test case for model_list_composite_entity_roles

        Get all roles for a composite entity in a version of the application
        """
        pass

    def test_model_list_custom_prebuilt_entities(self) -> None:
        """Test case for model_list_custom_prebuilt_entities

        """
        pass

    def test_model_list_custom_prebuilt_entity_roles(self) -> None:
        """Test case for model_list_custom_prebuilt_entity_roles

        Get all roles for a prebuilt entity in a version of the application
        """
        pass

    def test_model_list_custom_prebuilt_intents(self) -> None:
        """Test case for model_list_custom_prebuilt_intents

        """
        pass

    def test_model_list_custom_prebuilt_models(self) -> None:
        """Test case for model_list_custom_prebuilt_models

        """
        pass

    def test_model_list_entities(self) -> None:
        """Test case for model_list_entities

        """
        pass

    def test_model_list_entity_roles(self) -> None:
        """Test case for model_list_entity_roles

        Get all roles for an entity in a version of the application
        """
        pass

    def test_model_list_entity_suggestions(self) -> None:
        """Test case for model_list_entity_suggestions

        """
        pass

    def test_model_list_hierarchical_entities(self) -> None:
        """Test case for model_list_hierarchical_entities

        """
        pass

    def test_model_list_hierarchical_entity_roles(self) -> None:
        """Test case for model_list_hierarchical_entity_roles

        Get all roles for a hierarchical entity in a version of the application
        """
        pass

    def test_model_list_intent_suggestions(self) -> None:
        """Test case for model_list_intent_suggestions

        """
        pass

    def test_model_list_intents(self) -> None:
        """Test case for model_list_intents

        """
        pass

    def test_model_list_models(self) -> None:
        """Test case for model_list_models

        """
        pass

    def test_model_list_pattern_any_entity_infos(self) -> None:
        """Test case for model_list_pattern_any_entity_infos

        Get information about the Pattern.Any entity models in a version of the application.
        """
        pass

    def test_model_list_pattern_any_entity_roles(self) -> None:
        """Test case for model_list_pattern_any_entity_roles

        Get all roles for a Pattern.any entity in a version of the application
        """
        pass

    def test_model_list_prebuilt_entities(self) -> None:
        """Test case for model_list_prebuilt_entities

        """
        pass

    def test_model_list_prebuilt_entity_roles(self) -> None:
        """Test case for model_list_prebuilt_entity_roles

        Get a prebuilt entity's roles in a version of the application.
        """
        pass

    def test_model_list_prebuilts(self) -> None:
        """Test case for model_list_prebuilts

        """
        pass

    def test_model_list_regex_entity_infos(self) -> None:
        """Test case for model_list_regex_entity_infos

        Gets information about the regular expression entity models in a version of the application.
        """
        pass

    def test_model_list_regex_entity_roles(self) -> None:
        """Test case for model_list_regex_entity_roles

        Get all roles for a regular expression entity in a version of the application.
        """
        pass

    def test_model_patch_closed_list(self) -> None:
        """Test case for model_patch_closed_list

        """
        pass

    def test_model_update_closed_list(self) -> None:
        """Test case for model_update_closed_list

        """
        pass

    def test_model_update_closed_list_entity_role(self) -> None:
        """Test case for model_update_closed_list_entity_role

        Update a role for a given list entity in a version of the application.
        """
        pass

    def test_model_update_composite_entity(self) -> None:
        """Test case for model_update_composite_entity

        """
        pass

    def test_model_update_composite_entity_role(self) -> None:
        """Test case for model_update_composite_entity_role

        Update a role for a given composite entity in a version of the application
        """
        pass

    def test_model_update_custom_prebuilt_entity_role(self) -> None:
        """Test case for model_update_custom_prebuilt_entity_role

        Update a role for a given prebuilt entity in a version of the application.
        """
        pass

    def test_model_update_entity(self) -> None:
        """Test case for model_update_entity

        """
        pass

    def test_model_update_entity_role(self) -> None:
        """Test case for model_update_entity_role

        Update a role for a given entity in a version of the application.
        """
        pass

    def test_model_update_explicit_list_item(self) -> None:
        """Test case for model_update_explicit_list_item

        Updates an explicit (exception) list item for a Pattern.Any entity in a version of the application.
        """
        pass

    def test_model_update_hierarchical_entity(self) -> None:
        """Test case for model_update_hierarchical_entity

        """
        pass

    def test_model_update_hierarchical_entity_child(self) -> None:
        """Test case for model_update_hierarchical_entity_child

        """
        pass

    def test_model_update_hierarchical_entity_role(self) -> None:
        """Test case for model_update_hierarchical_entity_role

        Update a role for a given hierarchical entity in a version of the application.
        """
        pass

    def test_model_update_intent(self) -> None:
        """Test case for model_update_intent

        """
        pass

    def test_model_update_pattern_any_entity_model(self) -> None:
        """Test case for model_update_pattern_any_entity_model

        Updates the name and explicit (exception) list of a Pattern.Any entity model in a version of the application.
        """
        pass

    def test_model_update_pattern_any_entity_role(self) -> None:
        """Test case for model_update_pattern_any_entity_role

        Update a role for a given Pattern.any entity in a version of the application.
        """
        pass

    def test_model_update_prebuilt_entity_role(self) -> None:
        """Test case for model_update_prebuilt_entity_role

        Update a role for a given prebuilt entity in a version of the application
        """
        pass

    def test_model_update_regex_entity_model(self) -> None:
        """Test case for model_update_regex_entity_model

        Updates the regular expression entity in a version of the application.
        """
        pass

    def test_model_update_regex_entity_role(self) -> None:
        """Test case for model_update_regex_entity_role

        Update a role for a given regular expression entity in a version of the application
        """
        pass

    def test_model_update_sub_list(self) -> None:
        """Test case for model_update_sub_list

        """
        pass

    def test_pattern_add_pattern(self) -> None:
        """Test case for pattern_add_pattern

        Adds a pattern to a version of the application.
        """
        pass

    def test_pattern_batch_add_patterns(self) -> None:
        """Test case for pattern_batch_add_patterns

        Adds a batch of patterns in a version of the application.
        """
        pass

    def test_pattern_delete_pattern(self) -> None:
        """Test case for pattern_delete_pattern

        Deletes the pattern with the specified ID from a version of the application..
        """
        pass

    def test_pattern_delete_patterns(self) -> None:
        """Test case for pattern_delete_patterns

        Deletes a list of patterns in a version of the application.
        """
        pass

    def test_pattern_list_intent_patterns(self) -> None:
        """Test case for pattern_list_intent_patterns

        Returns patterns for the specific intent in a version of the application.
        """
        pass

    def test_pattern_list_patterns(self) -> None:
        """Test case for pattern_list_patterns

        Gets patterns in a version of the application.
        """
        pass

    def test_pattern_update_pattern(self) -> None:
        """Test case for pattern_update_pattern

        Updates a pattern in a version of the application.
        """
        pass

    def test_pattern_update_patterns(self) -> None:
        """Test case for pattern_update_patterns

        Updates patterns in a version of the application.
        """
        pass

    def test_permissions_add(self) -> None:
        """Test case for permissions_add

        """
        pass

    def test_permissions_delete(self) -> None:
        """Test case for permissions_delete

        """
        pass

    def test_permissions_list(self) -> None:
        """Test case for permissions_list

        """
        pass

    def test_permissions_update(self) -> None:
        """Test case for permissions_update

        """
        pass

    def test_settings_list(self) -> None:
        """Test case for settings_list

        """
        pass

    def test_settings_update(self) -> None:
        """Test case for settings_update

        """
        pass

    def test_train_get_status(self) -> None:
        """Test case for train_get_status

        """
        pass

    def test_train_train_version(self) -> None:
        """Test case for train_train_version

        """
        pass

    def test_versions_clone(self) -> None:
        """Test case for versions_clone

        """
        pass

    def test_versions_delete(self) -> None:
        """Test case for versions_delete

        """
        pass

    def test_versions_delete_unlabelled_utterance(self) -> None:
        """Test case for versions_delete_unlabelled_utterance

        """
        pass

    def test_versions_export(self) -> None:
        """Test case for versions_export

        """
        pass

    def test_versions_get(self) -> None:
        """Test case for versions_get

        """
        pass

    def test_versions_import(self) -> None:
        """Test case for versions_import

        """
        pass

    def test_versions_list(self) -> None:
        """Test case for versions_list

        """
        pass

    def test_versions_update(self) -> None:
        """Test case for versions_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
