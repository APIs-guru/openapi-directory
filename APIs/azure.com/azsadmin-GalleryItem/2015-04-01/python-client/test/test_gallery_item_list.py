# coding: utf-8

"""
    GalleryManagementClient

    The Admin Gallery Management Client.

    The version of the OpenAPI document: 2015-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.gallery_item_list import GalleryItemList

class TestGalleryItemList(unittest.TestCase):
    """GalleryItemList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GalleryItemList:
        """Test GalleryItemList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GalleryItemList`
        """
        model = GalleryItemList()
        if include_optional:
            return GalleryItemList(
                value = [
                    openapi_client.models.gallery_item.GalleryItem(
                        properties = openapi_client.models.gallery_item_properties.GalleryItemProperties(
                            additional_properties = {
                                'key' : ''
                                }, 
                            artifacts = [
                                openapi_client.models.artifact.Artifact(
                                    name = '', 
                                    type = 'template', 
                                    uri = '', )
                                ], 
                            category_ids = [
                                ''
                                ], 
                            changed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            definition_templates = openapi_client.models.definition_templates.DefinitionTemplates(
                                default_deployment_template_id = '', 
                                deployment_fragment_file_uris = {
                                    'key' : ''
                                    }, 
                                deployment_template_file_uris = {
                                    'key' : ''
                                    }, 
                                ui_definition_file_uri = '', ), 
                            description = '', 
                            filters = [
                                openapi_client.models.filter.Filter(
                                    type = '', 
                                    value = '', )
                                ], 
                            icon_file_uris = openapi_client.models.gallery_item_properties_icon_file_uris.GalleryItemProperties_iconFileUris(
                                hero = '', 
                                large = '', 
                                medium = '', 
                                small = '', 
                                wide = '', ), 
                            identity = '', 
                            images = [
                                openapi_client.models.image_group.ImageGroup(
                                    context = '', 
                                    items = [
                                        openapi_client.models.image.Image(
                                            id = '', 
                                            type = '', 
                                            uri = '', )
                                        ], )
                                ], 
                            item_display_name = '', 
                            item_name = '', 
                            item_type = 'GalleryItem', 
                            links = [
                                openapi_client.models.link_properties.LinkProperties(
                                    display_name = '', 
                                    id = '', 
                                    uri = '', )
                                ], 
                            long_summary = '', 
                            marketing_material = openapi_client.models.marketing_material.MarketingMaterial(
                                learn_uri = '', 
                                path = '', ), 
                            metadata = openapi_client.models.open_property.OpenProperty(), 
                            products = [
                                openapi_client.models.product.Product(
                                    display_name = '', 
                                    legal_terms = '', 
                                    legal_terms_uri = '', 
                                    offer_details = openapi_client.models.offer_details.OfferDetails(
                                        offer_id = '', 
                                        plans = [
                                            openapi_client.models.plan.Plan(
                                                description = '', 
                                                display_name = '', 
                                                plan_id = '', 
                                                summary = '', )
                                            ], 
                                        publisher_id = '', ), 
                                    pricing_details_uri = '', 
                                    privacy_policy = '', 
                                    privacy_policy_uri = '', 
                                    publisher_display_name = '', )
                                ], 
                            publisher = '', 
                            publisher_display_name = '', 
                            resource_group_name = '', 
                            screenshot_uris = [
                                ''
                                ], 
                            summary = '', 
                            ui_definition_uri = '', 
                            version = '', ), )
                    ]
            )
        else:
            return GalleryItemList(
        )
        """

    def testGalleryItemList(self):
        """Test GalleryItemList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
