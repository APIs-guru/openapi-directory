# coding: utf-8

"""
    Azure SQL Database

    Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.recommended_elastic_pool import RecommendedElasticPool

class TestRecommendedElasticPool(unittest.TestCase):
    """RecommendedElasticPool unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecommendedElasticPool:
        """Test RecommendedElasticPool
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecommendedElasticPool`
        """
        model = RecommendedElasticPool()
        if include_optional:
            return RecommendedElasticPool(
                properties = openapi_client.models.recommended_elastic_pool_properties.RecommendedElasticPoolProperties(
                    database_dtu_max = 1.337, 
                    database_dtu_min = 1.337, 
                    database_edition = 'Basic', 
                    databases = [
                        openapi_client.models.recommended_elastic_pool_properties_databases_inner.RecommendedElasticPoolProperties_databases_inner(
                            location = '', 
                            tags = {
                                'key' : ''
                                }, )
                        ], 
                    dtu = 1.337, 
                    max_observed_dtu = 1.337, 
                    max_observed_storage_mb = 1.337, 
                    metrics = [
                        openapi_client.models.recommended_elastic_pool_metric.RecommendedElasticPoolMetric(
                            date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            dtu = 1.337, 
                            size_gb = 1.337, )
                        ], 
                    observation_period_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    observation_period_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    storage_mb = 1.337, ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return RecommendedElasticPool(
        )
        """

    def testRecommendedElasticPool(self):
        """Test RecommendedElasticPool"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
