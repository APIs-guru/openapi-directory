# coding: utf-8

"""
    HybridDataManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_list import JobList

class TestJobList(unittest.TestCase):
    """JobList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobList:
        """Test JobList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobList`
        """
        model = JobList()
        if include_optional:
            return JobList(
                next_link = '',
                value = [
                    openapi_client.models.job.Job(
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error = openapi_client.models.error.Error(
                            code = '', 
                            message = '', ), 
                        properties = openapi_client.models.job_properties.JobProperties(
                            bytes_processed = 56, 
                            data_sink_name = '', 
                            data_source_name = '', 
                            details = openapi_client.models.job_details.JobDetails(
                                error_details = [
                                    openapi_client.models.error_details.ErrorDetails(
                                        error_code = 56, 
                                        error_message = '', 
                                        exception_message = '', 
                                        recommended_action = '', )
                                    ], 
                                item_details_link = '', 
                                job_definition = openapi_client.models.job_definition.JobDefinition(
                                    properties = openapi_client.models.job_definition_properties.JobDefinitionProperties(
                                        customer_secrets = [
                                            openapi_client.models.customer_secret.CustomerSecret(
                                                algorithm = 'None', 
                                                key_identifier = '', 
                                                key_value = '', )
                                            ], 
                                        data_service_input = openapi_client.models.data_service_input.dataServiceInput(), 
                                        data_sink_id = '', 
                                        data_source_id = '', 
                                        last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                        run_location = 'none', 
                                        schedules = [
                                            openapi_client.models.schedule.Schedule(
                                                name = '', 
                                                policy_list = [
                                                    ''
                                                    ], )
                                            ], 
                                        state = 'Disabled', 
                                        user_confirmation = 'NotRequired', ), ), 
                                job_stages = [
                                    openapi_client.models.job_stages.JobStages(
                                        job_stage_details = openapi_client.models.job_stage_details.jobStageDetails(), 
                                        stage_name = '', 
                                        stage_status = 'None', )
                                    ], ), 
                            is_cancellable = 'NotCancellable', 
                            items_processed = 56, 
                            total_bytes_to_process = 56, 
                            total_items_to_process = 56, ), 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = 'None', )
                    ]
            )
        else:
            return JobList(
        )
        """

    def testJobList(self):
        """Test JobList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
