# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.security_assessment_properties import SecurityAssessmentProperties

class TestSecurityAssessmentProperties(unittest.TestCase):
    """SecurityAssessmentProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecurityAssessmentProperties:
        """Test SecurityAssessmentProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecurityAssessmentProperties`
        """
        model = SecurityAssessmentProperties()
        if include_optional:
            return SecurityAssessmentProperties(
                additional_data = {
                    'key' : ''
                    },
                display_name = '',
                links = openapi_client.models.assessment_links.AssessmentLinks(
                    azure_portal_uri = '', ),
                metadata = openapi_client.models.security_assessment_properties_metadata.SecurityAssessmentProperties_metadata(
                    assessment_type = 'BuiltIn', 
                    category = [
                        'Compute'
                        ], 
                    description = '', 
                    display_name = '', 
                    implementation_effort = 'Low', 
                    partner_data = openapi_client.models.security_assessment_properties_metadata_partner_data.SecurityAssessmentProperties_metadata_partnerData(
                        partner_name = '', 
                        product_name = '', 
                        secret = '', ), 
                    policy_definition_id = '', 
                    preview = True, 
                    remediation_description = '', 
                    severity = 'Low', 
                    threats = [
                        'accountBreach'
                        ], 
                    user_impact = 'Low', ),
                partners_data = openapi_client.models.security_assessment_partner_data.SecurityAssessmentPartnerData(
                    secret = '', ),
                resource_details = openapi_client.models.security_assessment_properties_resource_details.SecurityAssessmentProperties_resourceDetails(
                    source = 'Azure', ),
                status = openapi_client.models.assessment_status.AssessmentStatus(
                    cause = '', 
                    code = 'Healthy', 
                    description = '', )
            )
        else:
            return SecurityAssessmentProperties(
                resource_details = openapi_client.models.security_assessment_properties_resource_details.SecurityAssessmentProperties_resourceDetails(
                    source = 'Azure', ),
                status = openapi_client.models.assessment_status.AssessmentStatus(
                    cause = '', 
                    code = 'Healthy', 
                    description = '', ),
        )
        """

    def testSecurityAssessmentProperties(self):
        """Test SecurityAssessmentProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
