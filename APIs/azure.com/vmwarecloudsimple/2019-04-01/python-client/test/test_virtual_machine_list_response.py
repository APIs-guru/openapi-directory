# coding: utf-8

"""
    VMwareCloudSimple

    Description of the new service

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_machine_list_response import VirtualMachineListResponse

class TestVirtualMachineListResponse(unittest.TestCase):
    """VirtualMachineListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualMachineListResponse:
        """Test VirtualMachineListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualMachineListResponse`
        """
        model = VirtualMachineListResponse()
        if include_optional:
            return VirtualMachineListResponse(
                next_link = '',
                value = [
                    openapi_client.models.virtual_machine.VirtualMachine(
                        id = '', 
                        location = '', 
                        name = 'gbUUGjjNSwg0_bs9ZayIMrKdgNvb6gvxmPb9GcsM61ate1RA89q3w1l4eH4XxEz.5aw7', 
                        properties = openapi_client.models.virtual_machine_properties.VirtualMachineProperties(
                            amount_of_ram = 56, 
                            controllers = [
                                openapi_client.models.virtual_disk_controller.VirtualDiskController(
                                    id = '', 
                                    name = '', 
                                    sub_type = '', 
                                    type = '', )
                                ], 
                            customization = openapi_client.models.guest_os_customization.GuestOSCustomization(
                                dns_servers = [
                                    '4.7.238.1'
                                    ], 
                                host_name = '', 
                                password = '', 
                                policy_id = '', 
                                username = '', ), 
                            disks = [
                                openapi_client.models.virtual_disk.VirtualDisk(
                                    controller_id = '', 
                                    independence_mode = 'persistent', 
                                    total_size = 56, 
                                    virtual_disk_id = '', 
                                    virtual_disk_name = '', )
                                ], 
                            dnsname = '', 
                            expose_to_guest_vm = True, 
                            folder = '', 
                            guest_os = '', 
                            guest_os_type = 'linux', 
                            nics = [
                                openapi_client.models.virtual_nic.VirtualNic(
                                    ip_addresses = [
                                        ''
                                        ], 
                                    mac_address = '', 
                                    network = openapi_client.models.virtual_network.VirtualNetwork(
                                        assignable = True, 
                                        id = '', 
                                        location = '', 
                                        name = '', 
                                        type = '', ), 
                                    nic_type = 'E1000', 
                                    power_on_boot = True, 
                                    virtual_nic_id = '', 
                                    virtual_nic_name = '', )
                                ], 
                            number_of_cores = 56, 
                            password = '', 
                            private_cloud_id = '', 
                            provisioning_state = '', 
                            public_ip = '', 
                            resource_pool = openapi_client.models.resource_pool.ResourcePool(
                                id = '', 
                                location = '', 
                                name = '', 
                                private_cloud_id = '', 
                                type = '', ), 
                            status = 'running', 
                            template_id = '', 
                            username = '', 
                            v_sphere_networks = [
                                ''
                                ], 
                            vm_id = '', 
                            vmwaretools = '', ), 
                        tags = {
                            'key' : ''
                            }, 
                        type = '', )
                    ]
            )
        else:
            return VirtualMachineListResponse(
        )
        """

    def testVirtualMachineListResponse(self):
        """Test VirtualMachineListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
