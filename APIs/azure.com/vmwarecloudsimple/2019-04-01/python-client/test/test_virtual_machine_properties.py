# coding: utf-8

"""
    VMwareCloudSimple

    Description of the new service

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_machine_properties import VirtualMachineProperties

class TestVirtualMachineProperties(unittest.TestCase):
    """VirtualMachineProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualMachineProperties:
        """Test VirtualMachineProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualMachineProperties`
        """
        model = VirtualMachineProperties()
        if include_optional:
            return VirtualMachineProperties(
                amount_of_ram = 56,
                controllers = [
                    openapi_client.models.virtual_disk_controller.VirtualDiskController(
                        id = '', 
                        name = '', 
                        sub_type = '', 
                        type = '', )
                    ],
                customization = openapi_client.models.guest_os_customization.GuestOSCustomization(
                    dns_servers = [
                        '4.7.238.1'
                        ], 
                    host_name = '', 
                    password = '', 
                    policy_id = '', 
                    username = '', ),
                disks = [
                    openapi_client.models.virtual_disk.VirtualDisk(
                        controller_id = '', 
                        independence_mode = 'persistent', 
                        total_size = 56, 
                        virtual_disk_id = '', 
                        virtual_disk_name = '', )
                    ],
                dnsname = '',
                expose_to_guest_vm = True,
                folder = '',
                guest_os = '',
                guest_os_type = 'linux',
                nics = [
                    openapi_client.models.virtual_nic.VirtualNic(
                        customization = openapi_client.models.guest_osnic_customization.GuestOSNICCustomization(
                            allocation = 'static', 
                            dns_servers = [
                                '4.7.238.1'
                                ], 
                            gateway = [
                                '4.7.238.1'
                                ], 
                            ip_address = '4.7.238.1', 
                            mask = '4.7.238.1', 
                            primary_wins_server = '4.7.238.1', 
                            secondary_wins_server = '4.7.238.1', ), 
                        ip_addresses = [
                            ''
                            ], 
                        mac_address = '', 
                        network = openapi_client.models.virtual_network.VirtualNetwork(
                            assignable = True, 
                            id = '', 
                            location = '', 
                            name = '', 
                            properties = openapi_client.models.virtual_network_properties.VirtualNetworkProperties(
                                private_cloud_id = '', ), 
                            type = '', ), 
                        nic_type = 'E1000', 
                        power_on_boot = True, 
                        virtual_nic_id = '', 
                        virtual_nic_name = '', )
                    ],
                number_of_cores = 56,
                password = '',
                private_cloud_id = '',
                provisioning_state = '',
                public_ip = '',
                resource_pool = openapi_client.models.resource_pool.ResourcePool(
                    id = '', 
                    location = '', 
                    name = '', 
                    private_cloud_id = '', 
                    properties = openapi_client.models.resource_pool_properties.ResourcePoolProperties(
                        full_name = '', ), 
                    type = '', ),
                status = 'running',
                template_id = '',
                username = '',
                v_sphere_networks = [
                    ''
                    ],
                vm_id = '',
                vmwaretools = ''
            )
        else:
            return VirtualMachineProperties(
                amount_of_ram = 56,
                number_of_cores = 56,
                private_cloud_id = '',
        )
        """

    def testVirtualMachineProperties(self):
        """Test VirtualMachineProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
