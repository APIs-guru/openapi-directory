# coding: utf-8

"""
    VMwareCloudSimple

    Description of the new service

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.customization_specification import CustomizationSpecification

class TestCustomizationSpecification(unittest.TestCase):
    """CustomizationSpecification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomizationSpecification:
        """Test CustomizationSpecification
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomizationSpecification`
        """
        model = CustomizationSpecification()
        if include_optional:
            return CustomizationSpecification(
                identity = openapi_client.models.customization_identity.CustomizationIdentity(
                    data = '', 
                    host_name = openapi_client.models.customization_host_name.CustomizationHostName(
                        name = '', 
                        type = 'USER_DEFINED', ), 
                    type = 'WINDOWS_TEXT', 
                    user_data = openapi_client.models.customization_identity_user_data.CustomizationIdentity_userData(
                        is_password_predefined = True, ), ),
                nic_settings = [
                    openapi_client.models.customization_nic_setting.CustomizationNicSetting(
                        adapter = openapi_client.models.customization_ip_settings.CustomizationIPSettings(
                            gateway = [
                                ''
                                ], 
                            ip = openapi_client.models.customization_ip_address.CustomizationIPAddress(
                                argument = '', 
                                ip_address = '', 
                                type = 'CUSTOM', ), 
                            subnet_mask = '', ), 
                        mac_address = '', )
                    ]
            )
        else:
            return CustomizationSpecification(
        )
        """

    def testCustomizationSpecification(self):
        """Test CustomizationSpecification"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
