# coding: utf-8

"""
    VMwareCloudSimple

    Description of the new service

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_nic import VirtualNic

class TestVirtualNic(unittest.TestCase):
    """VirtualNic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualNic:
        """Test VirtualNic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualNic`
        """
        model = VirtualNic()
        if include_optional:
            return VirtualNic(
                customization = openapi_client.models.guest_osnic_customization.GuestOSNICCustomization(
                    allocation = 'static', 
                    dns_servers = [
                        '4.7.238.1'
                        ], 
                    gateway = [
                        '4.7.238.1'
                        ], 
                    ip_address = '4.7.238.1', 
                    mask = '4.7.238.1', 
                    primary_wins_server = '4.7.238.1', 
                    secondary_wins_server = '4.7.238.1', ),
                ip_addresses = [
                    ''
                    ],
                mac_address = '',
                network = openapi_client.models.virtual_network.VirtualNetwork(
                    assignable = True, 
                    id = '', 
                    location = '', 
                    name = '', 
                    properties = openapi_client.models.virtual_network_properties.VirtualNetworkProperties(
                        private_cloud_id = '', ), 
                    type = '', ),
                nic_type = 'E1000',
                power_on_boot = True,
                virtual_nic_id = '',
                virtual_nic_name = ''
            )
        else:
            return VirtualNic(
                network = openapi_client.models.virtual_network.VirtualNetwork(
                    assignable = True, 
                    id = '', 
                    location = '', 
                    name = '', 
                    properties = openapi_client.models.virtual_network_properties.VirtualNetworkProperties(
                        private_cloud_id = '', ), 
                    type = '', ),
                nic_type = 'E1000',
        )
        """

    def testVirtualNic(self):
        """Test VirtualNic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
