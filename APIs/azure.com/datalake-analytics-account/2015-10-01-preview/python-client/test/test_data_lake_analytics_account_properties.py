# coding: utf-8

"""
    DataLakeAnalyticsAccountManagementClient

    Creates an Azure Data Lake Analytics account management client.

    The version of the OpenAPI document: 2015-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_lake_analytics_account_properties import DataLakeAnalyticsAccountProperties

class TestDataLakeAnalyticsAccountProperties(unittest.TestCase):
    """DataLakeAnalyticsAccountProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataLakeAnalyticsAccountProperties:
        """Test DataLakeAnalyticsAccountProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataLakeAnalyticsAccountProperties`
        """
        model = DataLakeAnalyticsAccountProperties()
        if include_optional:
            return DataLakeAnalyticsAccountProperties(
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                data_lake_store_accounts = [
                    openapi_client.models.data_lake_store_account_info.DataLakeStoreAccountInfo(
                        name = '', 
                        properties = openapi_client.models.data_lake_store_account_info_properties.DataLakeStoreAccountInfoProperties(
                            suffix = '', ), )
                    ],
                default_data_lake_store_account = '',
                endpoint = '',
                last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                max_degree_of_parallelism = 56,
                max_job_count = 56,
                provisioning_state = 'Failed',
                state = 'active',
                storage_accounts = [
                    openapi_client.models.storage_account_info.StorageAccountInfo(
                        name = '', 
                        properties = openapi_client.models.storage_account_properties.StorageAccountProperties(
                            access_key = '', 
                            suffix = '', ), )
                    ]
            )
        else:
            return DataLakeAnalyticsAccountProperties(
        )
        """

    def testDataLakeAnalyticsAccountProperties(self):
        """Test DataLakeAnalyticsAccountProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
