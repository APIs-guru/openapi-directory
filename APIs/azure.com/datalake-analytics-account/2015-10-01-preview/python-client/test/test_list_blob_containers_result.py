# coding: utf-8

"""
    DataLakeAnalyticsAccountManagementClient

    Creates an Azure Data Lake Analytics account management client.

    The version of the OpenAPI document: 2015-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_blob_containers_result import ListBlobContainersResult

class TestListBlobContainersResult(unittest.TestCase):
    """ListBlobContainersResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBlobContainersResult:
        """Test ListBlobContainersResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBlobContainersResult`
        """
        model = ListBlobContainersResult()
        if include_optional:
            return ListBlobContainersResult(
                next_link = '',
                value = [
                    openapi_client.models.blob_container.BlobContainer(
                        id = '', 
                        name = '', 
                        properties = openapi_client.models.blob_container_properties.BlobContainerProperties(
                            last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = '', )
                    ]
            )
        else:
            return ListBlobContainersResult(
        )
        """

    def testListBlobContainersResult(self):
        """Test ListBlobContainersResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
