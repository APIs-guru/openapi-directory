# coding: utf-8

"""
    DataLakeAnalyticsAccountManagementClient

    Creates an Azure Data Lake Analytics account management client.

    The version of the OpenAPI document: 2016-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.add_storage_account_parameters import AddStorageAccountParameters
from openapi_client.models.sas_token_information_list_result import SasTokenInformationListResult
from openapi_client.models.storage_account_information import StorageAccountInformation
from openapi_client.models.storage_account_information_list_result import StorageAccountInformationListResult
from openapi_client.models.storage_container import StorageContainer
from openapi_client.models.storage_container_list_result import StorageContainerListResult
from openapi_client.models.update_storage_account_parameters import UpdateStorageAccountParameters

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class StorageAccountsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def storage_accounts_add(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account to add")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        parameters: Annotated[AddStorageAccountParameters, Field(description="The parameters containing the access key and optional suffix for the Azure Storage Account.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """storage_accounts_add

        Updates the specified Data Lake Analytics account to add an Azure Storage account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account to add (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param parameters: The parameters containing the access key and optional suffix for the Azure Storage Account. (required)
        :type parameters: AddStorageAccountParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_add_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_add_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account to add")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        parameters: Annotated[AddStorageAccountParameters, Field(description="The parameters containing the access key and optional suffix for the Azure Storage Account.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """storage_accounts_add

        Updates the specified Data Lake Analytics account to add an Azure Storage account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account to add (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param parameters: The parameters containing the access key and optional suffix for the Azure Storage Account. (required)
        :type parameters: AddStorageAccountParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_add_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_add_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account to add")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        parameters: Annotated[AddStorageAccountParameters, Field(description="The parameters containing the access key and optional suffix for the Azure Storage Account.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_add

        Updates the specified Data Lake Analytics account to add an Azure Storage account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account to add (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param parameters: The parameters containing the access key and optional suffix for the Azure Storage Account. (required)
        :type parameters: AddStorageAccountParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_add_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_add_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        api_version,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters



        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account to remove")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """storage_accounts_delete

        Updates the specified Data Lake Analytics account to remove an Azure Storage account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account to remove (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account to remove")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """storage_accounts_delete

        Updates the specified Data Lake Analytics account to remove an Azure Storage account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account to remove (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account to remove")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_delete

        Updates the specified Data Lake Analytics account to remove an Azure Storage account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account to remove (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account for which to retrieve the details.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> StorageAccountInformation:
        """storage_accounts_get

        Gets the specified Azure Storage account linked to the given Data Lake Analytics account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account for which to retrieve the details. (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageAccountInformation",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account for which to retrieve the details.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[StorageAccountInformation]:
        """storage_accounts_get

        Gets the specified Azure Storage account linked to the given Data Lake Analytics account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account for which to retrieve the details. (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageAccountInformation",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure Storage account for which to retrieve the details.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_get

        Gets the specified Azure Storage account linked to the given Data Lake Analytics account.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure Storage account for which to retrieve the details. (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageAccountInformation",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_get_storage_container(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account from which to retrieve the blob container.")],
        container_name: Annotated[StrictStr, Field(description="The name of the Azure storage container to retrieve")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> StorageContainer:
        """storage_accounts_get_storage_container

        Gets the specified Azure Storage container associated with the given Data Lake Analytics and Azure Storage accounts.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account from which to retrieve the blob container. (required)
        :type storage_account_name: str
        :param container_name: The name of the Azure storage container to retrieve (required)
        :type container_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_get_storage_container_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            container_name=container_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageContainer",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_get_storage_container_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account from which to retrieve the blob container.")],
        container_name: Annotated[StrictStr, Field(description="The name of the Azure storage container to retrieve")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[StorageContainer]:
        """storage_accounts_get_storage_container

        Gets the specified Azure Storage container associated with the given Data Lake Analytics and Azure Storage accounts.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account from which to retrieve the blob container. (required)
        :type storage_account_name: str
        :param container_name: The name of the Azure storage container to retrieve (required)
        :type container_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_get_storage_container_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            container_name=container_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageContainer",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_get_storage_container_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account from which to retrieve the blob container.")],
        container_name: Annotated[StrictStr, Field(description="The name of the Azure storage container to retrieve")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_get_storage_container

        Gets the specified Azure Storage container associated with the given Data Lake Analytics and Azure Storage accounts.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account from which to retrieve the blob container. (required)
        :type storage_account_name: str
        :param container_name: The name of the Azure storage container to retrieve (required)
        :type container_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_get_storage_container_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            container_name=container_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageContainer",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_get_storage_container_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        container_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        if container_name is not None:
            _path_params['containerName'] = container_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/{containerName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_list_by_account(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        filter: Annotated[Optional[StrictStr], Field(description="The OData filter. Optional.")] = None,
        top: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="The number of items to return. Optional.")] = None,
        skip: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="The number of items to skip over before returning elements. Optional.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.")] = None,
        orderby: Annotated[Optional[StrictStr], Field(description="OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.")] = None,
        count: Annotated[Optional[StrictBool], Field(description="The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> StorageAccountInformationListResult:
        """storage_accounts_list_by_account

        Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param filter: The OData filter. Optional.
        :type filter: str
        :param top: The number of items to return. Optional.
        :type top: int
        :param skip: The number of items to skip over before returning elements. Optional.
        :type skip: int
        :param select: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
        :type select: str
        :param orderby: OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
        :type orderby: str
        :param count: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
        :type count: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_by_account_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            api_version=api_version,
            filter=filter,
            top=top,
            skip=skip,
            select=select,
            orderby=orderby,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageAccountInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_list_by_account_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        filter: Annotated[Optional[StrictStr], Field(description="The OData filter. Optional.")] = None,
        top: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="The number of items to return. Optional.")] = None,
        skip: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="The number of items to skip over before returning elements. Optional.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.")] = None,
        orderby: Annotated[Optional[StrictStr], Field(description="OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.")] = None,
        count: Annotated[Optional[StrictBool], Field(description="The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[StorageAccountInformationListResult]:
        """storage_accounts_list_by_account

        Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param filter: The OData filter. Optional.
        :type filter: str
        :param top: The number of items to return. Optional.
        :type top: int
        :param skip: The number of items to skip over before returning elements. Optional.
        :type skip: int
        :param select: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
        :type select: str
        :param orderby: OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
        :type orderby: str
        :param count: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
        :type count: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_by_account_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            api_version=api_version,
            filter=filter,
            top=top,
            skip=skip,
            select=select,
            orderby=orderby,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageAccountInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_list_by_account_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        filter: Annotated[Optional[StrictStr], Field(description="The OData filter. Optional.")] = None,
        top: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="The number of items to return. Optional.")] = None,
        skip: Annotated[Optional[Annotated[int, Field(strict=True, ge=1)]], Field(description="The number of items to skip over before returning elements. Optional.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.")] = None,
        orderby: Annotated[Optional[StrictStr], Field(description="OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.")] = None,
        count: Annotated[Optional[StrictBool], Field(description="The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_list_by_account

        Gets the first page of Azure Storage accounts, if any, linked to the specified Data Lake Analytics account. The response includes a link to the next page, if any.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param filter: The OData filter. Optional.
        :type filter: str
        :param top: The number of items to return. Optional.
        :type top: int
        :param skip: The number of items to skip over before returning elements. Optional.
        :type skip: int
        :param select: OData Select statement. Limits the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description. Optional.
        :type select: str
        :param orderby: OrderBy clause. One or more comma-separated expressions with an optional \"asc\" (the default) or \"desc\" depending on the order you'd like the values sorted, e.g. Categories?$orderby=CategoryName desc. Optional.
        :type orderby: str
        :param count: The Boolean value of true or false to request a count of the matching resources included with the resources in the response, e.g. Categories?$count=true. Optional.
        :type count: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_by_account_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            api_version=api_version,
            filter=filter,
            top=top,
            skip=skip,
            select=select,
            orderby=orderby,
            count=count,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageAccountInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_list_by_account_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        api_version,
        filter,
        top,
        skip,
        select,
        orderby,
        count,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if top is not None:
            
            _query_params.append(('$top', top))
            
        if skip is not None:
            
            _query_params.append(('$skip', skip))
            
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if orderby is not None:
            
            _query_params.append(('$orderby', orderby))
            
        if count is not None:
            
            _query_params.append(('$count', count))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_list_sas_tokens(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account for which the SAS token is being requested.")],
        container_name: Annotated[StrictStr, Field(description="The name of the Azure storage container for which the SAS token is being requested.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SasTokenInformationListResult:
        """storage_accounts_list_sas_tokens

        Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account for which the SAS token is being requested. (required)
        :type storage_account_name: str
        :param container_name: The name of the Azure storage container for which the SAS token is being requested. (required)
        :type container_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_sas_tokens_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            container_name=container_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SasTokenInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_list_sas_tokens_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account for which the SAS token is being requested.")],
        container_name: Annotated[StrictStr, Field(description="The name of the Azure storage container for which the SAS token is being requested.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SasTokenInformationListResult]:
        """storage_accounts_list_sas_tokens

        Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account for which the SAS token is being requested. (required)
        :type storage_account_name: str
        :param container_name: The name of the Azure storage container for which the SAS token is being requested. (required)
        :type container_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_sas_tokens_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            container_name=container_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SasTokenInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_list_sas_tokens_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account for which the SAS token is being requested.")],
        container_name: Annotated[StrictStr, Field(description="The name of the Azure storage container for which the SAS token is being requested.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_list_sas_tokens

        Gets the SAS token associated with the specified Data Lake Analytics and Azure Storage account and container combination.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account for which the SAS token is being requested. (required)
        :type storage_account_name: str
        :param container_name: The name of the Azure storage container for which the SAS token is being requested. (required)
        :type container_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_sas_tokens_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            container_name=container_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SasTokenInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_list_sas_tokens_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        container_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        if container_name is not None:
            _path_params['containerName'] = container_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers/{containerName}/listSasTokens',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_list_storage_containers(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account from which to list blob containers.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> StorageContainerListResult:
        """storage_accounts_list_storage_containers

        Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics and Azure Storage account combination. The response includes a link to the next page of results, if any.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account from which to list blob containers. (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_storage_containers_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageContainerListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_list_storage_containers_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account from which to list blob containers.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[StorageContainerListResult]:
        """storage_accounts_list_storage_containers

        Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics and Azure Storage account combination. The response includes a link to the next page of results, if any.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account from which to list blob containers. (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_storage_containers_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageContainerListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_list_storage_containers_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The name of the Azure storage account from which to list blob containers.")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_list_storage_containers

        Lists the Azure Storage containers, if any, associated with the specified Data Lake Analytics and Azure Storage account combination. The response includes a link to the next page of results, if any.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The name of the Azure storage account from which to list blob containers. (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_list_storage_containers_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "StorageContainerListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_list_storage_containers_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}/containers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def storage_accounts_update(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The Azure Storage account to modify")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        parameters: Annotated[Optional[UpdateStorageAccountParameters], Field(description="The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """storage_accounts_update

        Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as the access key and/or suffix.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The Azure Storage account to modify (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param parameters: The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.
        :type parameters: UpdateStorageAccountParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_update_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def storage_accounts_update_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The Azure Storage account to modify")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        parameters: Annotated[Optional[UpdateStorageAccountParameters], Field(description="The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """storage_accounts_update

        Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as the access key and/or suffix.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The Azure Storage account to modify (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param parameters: The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.
        :type parameters: UpdateStorageAccountParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_update_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def storage_accounts_update_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the Azure resource group.")],
        account_name: Annotated[StrictStr, Field(description="The name of the Data Lake Analytics account.")],
        storage_account_name: Annotated[StrictStr, Field(description="The Azure Storage account to modify")],
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        parameters: Annotated[Optional[UpdateStorageAccountParameters], Field(description="The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """storage_accounts_update

        Updates the Data Lake Analytics account to replace Azure Storage blob account details, such as the access key and/or suffix.

        :param subscription_id: Get subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the Azure resource group. (required)
        :type resource_group_name: str
        :param account_name: The name of the Data Lake Analytics account. (required)
        :type account_name: str
        :param storage_account_name: The Azure Storage account to modify (required)
        :type storage_account_name: str
        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param parameters: The parameters containing the access key and suffix to update the storage account with, if any. Passing nothing results in no change.
        :type parameters: UpdateStorageAccountParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._storage_accounts_update_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            account_name=account_name,
            storage_account_name=storage_account_name,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _storage_accounts_update_serialize(
        self,
        subscription_id,
        resource_group_name,
        account_name,
        storage_account_name,
        api_version,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if account_name is not None:
            _path_params['accountName'] = account_name
        if storage_account_name is not None:
            _path_params['storageAccountName'] = storage_account_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters



        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataLakeAnalytics/accounts/{accountName}/storageAccounts/{storageAccountName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


