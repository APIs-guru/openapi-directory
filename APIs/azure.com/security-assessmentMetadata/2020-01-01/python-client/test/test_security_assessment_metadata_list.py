# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.security_assessment_metadata_list import SecurityAssessmentMetadataList

class TestSecurityAssessmentMetadataList(unittest.TestCase):
    """SecurityAssessmentMetadataList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecurityAssessmentMetadataList:
        """Test SecurityAssessmentMetadataList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecurityAssessmentMetadataList`
        """
        model = SecurityAssessmentMetadataList()
        if include_optional:
            return SecurityAssessmentMetadataList(
                next_link = '',
                value = [
                    openapi_client.models.security_assessment_metadata.SecurityAssessmentMetadata(
                        properties = openapi_client.models.security_assessment_metadata_properties.SecurityAssessmentMetadataProperties(
                            assessment_type = 'BuiltIn', 
                            category = [
                                'Compute'
                                ], 
                            description = '', 
                            display_name = '', 
                            implementation_effort = 'Low', 
                            partner_data = openapi_client.models.security_assessment_metadata_partner_data.SecurityAssessmentMetadataPartnerData(
                                partner_name = '', 
                                product_name = '', 
                                secret = '', ), 
                            policy_definition_id = '', 
                            preview = True, 
                            remediation_description = '', 
                            severity = 'Low', 
                            threats = [
                                'accountBreach'
                                ], 
                            user_impact = 'Low', ), )
                    ]
            )
        else:
            return SecurityAssessmentMetadataList(
        )
        """

    def testSecurityAssessmentMetadataList(self):
        """Test SecurityAssessmentMetadataList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
