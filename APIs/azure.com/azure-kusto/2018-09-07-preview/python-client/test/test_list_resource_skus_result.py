# coding: utf-8

"""
    KustoManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-09-07-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_resource_skus_result import ListResourceSkusResult

class TestListResourceSkusResult(unittest.TestCase):
    """ListResourceSkusResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListResourceSkusResult:
        """Test ListResourceSkusResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListResourceSkusResult`
        """
        model = ListResourceSkusResult()
        if include_optional:
            return ListResourceSkusResult(
                value = [
                    openapi_client.models.azure_resource_sku.AzureResourceSku(
                        capacity = openapi_client.models.azure_capacity.AzureCapacity(
                            default = 56, 
                            maximum = 56, 
                            minimum = 56, 
                            scale_type = 'automatic', ), 
                        resource_type = '', 
                        sku = openapi_client.models.azure_sku.AzureSku(
                            name = 'KC8', 
                            tier = 'Standard', ), )
                    ]
            )
        else:
            return ListResourceSkusResult(
        )
        """

    def testListResourceSkusResult(self):
        """Test ListResourceSkusResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
