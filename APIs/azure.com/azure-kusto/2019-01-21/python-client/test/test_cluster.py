# coding: utf-8

"""
    KustoManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-01-21
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster import Cluster

class TestCluster(unittest.TestCase):
    """Cluster unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Cluster:
        """Test Cluster
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Cluster`
        """
        model = Cluster()
        if include_optional:
            return Cluster(
                properties = openapi_client.models.cluster_properties.ClusterProperties(
                    data_ingestion_uri = '', 
                    provisioning_state = 'Running', 
                    state = 'Creating', 
                    trusted_external_tenants = [
                        openapi_client.models.trusted_external_tenant.TrustedExternalTenant(
                            value = '', )
                        ], 
                    uri = '', ),
                sku = openapi_client.models.azure_sku.AzureSku(
                    capacity = 56, 
                    name = 'Standard_DS13_v2+1TB_PS', 
                    tier = 'Basic', ),
                location = '',
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return Cluster(
                sku = openapi_client.models.azure_sku.AzureSku(
                    capacity = 56, 
                    name = 'Standard_DS13_v2+1TB_PS', 
                    tier = 'Basic', ),
                location = '',
        )
        """

    def testCluster(self):
        """Test Cluster"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
