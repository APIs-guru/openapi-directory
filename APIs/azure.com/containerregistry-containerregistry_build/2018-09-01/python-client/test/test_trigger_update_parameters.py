# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.trigger_update_parameters import TriggerUpdateParameters

class TestTriggerUpdateParameters(unittest.TestCase):
    """TriggerUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TriggerUpdateParameters:
        """Test TriggerUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TriggerUpdateParameters`
        """
        model = TriggerUpdateParameters()
        if include_optional:
            return TriggerUpdateParameters(
                base_image_trigger = openapi_client.models.base_image_trigger_update_parameters.BaseImageTriggerUpdateParameters(
                    base_image_trigger_type = 'All', 
                    name = '', 
                    status = 'Enabled', ),
                source_triggers = [
                    openapi_client.models.source_trigger_update_parameters.SourceTriggerUpdateParameters(
                        name = '', 
                        source_repository = openapi_client.models.source_update_parameters.SourceUpdateParameters(
                            branch = '', 
                            repository_url = '', 
                            source_control_auth_properties = openapi_client.models.auth_info_update_parameters.AuthInfoUpdateParameters(
                                expires_in = 56, 
                                refresh_token = '', 
                                scope = '', 
                                token = '', 
                                token_type = 'PAT', ), 
                            source_control_type = 'Github', ), 
                        source_trigger_events = [
                            'commit'
                            ], 
                        status = 'Enabled', )
                    ]
            )
        else:
            return TriggerUpdateParameters(
        )
        """

    def testTriggerUpdateParameters(self):
        """Test TriggerUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
