# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.docker_build_step_update_parameters import DockerBuildStepUpdateParameters

class TestDockerBuildStepUpdateParameters(unittest.TestCase):
    """DockerBuildStepUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DockerBuildStepUpdateParameters:
        """Test DockerBuildStepUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DockerBuildStepUpdateParameters`
        """
        model = DockerBuildStepUpdateParameters()
        if include_optional:
            return DockerBuildStepUpdateParameters(
                base_image_trigger = 'All',
                branch = '',
                build_arguments = [
                    openapi_client.models.build_argument.BuildArgument(
                        is_secret = True, 
                        name = '', 
                        type = 'DockerBuildArgument', 
                        value = '', )
                    ],
                context_path = '',
                docker_file_path = '',
                image_names = [
                    ''
                    ],
                is_push_enabled = True,
                no_cache = True
            )
        else:
            return DockerBuildStepUpdateParameters(
        )
        """

    def testDockerBuildStepUpdateParameters(self):
        """Test DockerBuildStepUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
