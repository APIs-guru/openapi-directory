# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.build_task import BuildTask

class TestBuildTask(unittest.TestCase):
    """BuildTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BuildTask:
        """Test BuildTask
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BuildTask`
        """
        model = BuildTask()
        if include_optional:
            return BuildTask(
                properties = openapi_client.models.build_task_properties.BuildTaskProperties(
                    alias = '', 
                    creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    platform = openapi_client.models.platform_properties.PlatformProperties(
                        cpu = 56, 
                        os_type = 'Windows', ), 
                    provisioning_state = 'Creating', 
                    source_repository = openapi_client.models.source_repository_properties.SourceRepositoryProperties(
                        is_commit_trigger_enabled = True, 
                        repository_url = '', 
                        source_control_auth_properties = openapi_client.models.source_control_auth_info.SourceControlAuthInfo(
                            expires_in = 56, 
                            refresh_token = '', 
                            scope = '', 
                            token = '', 
                            token_type = 'PAT', ), 
                        source_control_type = 'Github', ), 
                    status = 'Disabled', 
                    timeout = 3E+2, ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return BuildTask(
                location = '',
        )
        """

    def testBuildTask(self):
        """Test BuildTask"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
