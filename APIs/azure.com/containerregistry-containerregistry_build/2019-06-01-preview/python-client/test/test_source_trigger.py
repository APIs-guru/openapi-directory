# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.source_trigger import SourceTrigger

class TestSourceTrigger(unittest.TestCase):
    """SourceTrigger unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceTrigger:
        """Test SourceTrigger
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceTrigger`
        """
        model = SourceTrigger()
        if include_optional:
            return SourceTrigger(
                name = '',
                source_repository = openapi_client.models.source_properties.SourceProperties(
                    branch = '', 
                    repository_url = '', 
                    source_control_auth_properties = openapi_client.models.auth_info.AuthInfo(
                        expires_in = 56, 
                        refresh_token = '', 
                        scope = '', 
                        token = '', 
                        token_type = 'PAT', ), 
                    source_control_type = 'Github', ),
                source_trigger_events = [
                    'commit'
                    ],
                status = 'Enabled'
            )
        else:
            return SourceTrigger(
                name = '',
                source_repository = openapi_client.models.source_properties.SourceProperties(
                    branch = '', 
                    repository_url = '', 
                    source_control_auth_properties = openapi_client.models.auth_info.AuthInfo(
                        expires_in = 56, 
                        refresh_token = '', 
                        scope = '', 
                        token = '', 
                        token_type = 'PAT', ), 
                    source_control_type = 'Github', ),
                source_trigger_events = [
                    'commit'
                    ],
        )
        """

    def testSourceTrigger(self):
        """Test SourceTrigger"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
