# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.override_task_step_properties import OverrideTaskStepProperties

class TestOverrideTaskStepProperties(unittest.TestCase):
    """OverrideTaskStepProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OverrideTaskStepProperties:
        """Test OverrideTaskStepProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OverrideTaskStepProperties`
        """
        model = OverrideTaskStepProperties()
        if include_optional:
            return OverrideTaskStepProperties(
                arguments = [
                    openapi_client.models.argument.Argument(
                        is_secret = True, 
                        name = '', 
                        value = '', )
                    ],
                context_path = '',
                file = '',
                target = '',
                update_trigger_token = '',
                values = [
                    openapi_client.models.set_value.SetValue(
                        is_secret = True, 
                        name = '', 
                        value = '', )
                    ]
            )
        else:
            return OverrideTaskStepProperties(
        )
        """

    def testOverrideTaskStepProperties(self):
        """Test OverrideTaskStepProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
