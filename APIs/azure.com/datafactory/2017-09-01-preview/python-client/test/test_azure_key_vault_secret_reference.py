# coding: utf-8

"""
    DataFactoryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_key_vault_secret_reference import AzureKeyVaultSecretReference

class TestAzureKeyVaultSecretReference(unittest.TestCase):
    """AzureKeyVaultSecretReference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureKeyVaultSecretReference:
        """Test AzureKeyVaultSecretReference
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureKeyVaultSecretReference`
        """
        model = AzureKeyVaultSecretReference()
        if include_optional:
            return AzureKeyVaultSecretReference(
                secret_name = None,
                secret_version = None,
                store = openapi_client.models.linked_service_reference.LinkedServiceReference(
                    parameters = {
                        'key' : None
                        }, 
                    reference_name = '', 
                    type = 'LinkedServiceReference', )
            )
        else:
            return AzureKeyVaultSecretReference(
                secret_name = None,
                store = openapi_client.models.linked_service_reference.LinkedServiceReference(
                    parameters = {
                        'key' : None
                        }, 
                    reference_name = '', 
                    type = 'LinkedServiceReference', ),
        )
        """

    def testAzureKeyVaultSecretReference(self):
        """Test AzureKeyVaultSecretReference"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
