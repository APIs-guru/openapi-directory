# coding: utf-8

"""
    DataFactoryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.integration_runtime_nodes_get200_response import IntegrationRuntimeNodesGet200Response

class TestIntegrationRuntimeNodesGet200Response(unittest.TestCase):
    """IntegrationRuntimeNodesGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntegrationRuntimeNodesGet200Response:
        """Test IntegrationRuntimeNodesGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntegrationRuntimeNodesGet200Response`
        """
        model = IntegrationRuntimeNodesGet200Response()
        if include_optional:
            return IntegrationRuntimeNodesGet200Response(
                capabilities = {
                    'key' : ''
                    },
                concurrent_jobs_limit = 56,
                expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                host_service_uri = '',
                is_active_dispatcher = True,
                last_connect_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_end_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_start_update_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_stop_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_update_result = 'None',
                machine_name = '',
                max_concurrent_jobs = 56,
                node_name = '',
                register_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'NeedRegistration',
                version = '',
                version_status = ''
            )
        else:
            return IntegrationRuntimeNodesGet200Response(
        )
        """

    def testIntegrationRuntimeNodesGet200Response(self):
        """Test IntegrationRuntimeNodesGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
