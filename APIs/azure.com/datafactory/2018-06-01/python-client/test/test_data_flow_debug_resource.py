# coding: utf-8

"""
    DataFactoryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_flow_debug_resource import DataFlowDebugResource

class TestDataFlowDebugResource(unittest.TestCase):
    """DataFlowDebugResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataFlowDebugResource:
        """Test DataFlowDebugResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataFlowDebugResource`
        """
        model = DataFlowDebugResource()
        if include_optional:
            return DataFlowDebugResource(
                properties = openapi_client.models.properties.properties(
                    annotations = [
                        None
                        ], 
                    description = '', 
                    folder = openapi_client.models.folder.folder(
                        name = '', ), 
                    type = '', ),
                name = ''
            )
        else:
            return DataFlowDebugResource(
                properties = openapi_client.models.properties.properties(
                    annotations = [
                        None
                        ], 
                    description = '', 
                    folder = openapi_client.models.folder.folder(
                        name = '', ), 
                    type = '', ),
        )
        """

    def testDataFlowDebugResource(self):
        """Test DataFlowDebugResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
