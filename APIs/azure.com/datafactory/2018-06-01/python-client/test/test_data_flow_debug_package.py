# coding: utf-8

"""
    DataFactoryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_flow_debug_package import DataFlowDebugPackage

class TestDataFlowDebugPackage(unittest.TestCase):
    """DataFlowDebugPackage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataFlowDebugPackage:
        """Test DataFlowDebugPackage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataFlowDebugPackage`
        """
        model = DataFlowDebugPackage()
        if include_optional:
            return DataFlowDebugPackage(
                data_flow = openapi_client.models.data_flow_debug_resource.DataFlowDebugResource(
                    properties = openapi_client.models.properties.properties(
                        annotations = [
                            None
                            ], 
                        description = '', 
                        folder = openapi_client.models.folder.folder(
                            name = '', ), 
                        type = '', ), ),
                datasets = [
                    openapi_client.models.dataset_debug_resource.DatasetDebugResource(
                        properties = {
                            'key' : None
                            }, )
                    ],
                debug_settings = openapi_client.models.data_flow_debug_package_debug_settings.DataFlowDebugPackage_debugSettings(
                    dataset_parameters = openapi_client.models.dataset_parameters.datasetParameters(), 
                    parameters = {
                        'key' : None
                        }, 
                    source_settings = [
                        {
                            'key' : None
                            }
                        ], ),
                linked_services = [
                    openapi_client.models.linked_service_debug_resource.LinkedServiceDebugResource(
                        properties = {
                            'key' : None
                            }, )
                    ],
                session_id = '',
                staging = openapi_client.models.data_flow_staging_info.DataFlowStagingInfo(
                    folder_path = '', 
                    linked_service = openapi_client.models.linked_service_reference.LinkedServiceReference(
                        parameters = {
                            'key' : None
                            }, 
                        reference_name = '', 
                        type = 'LinkedServiceReference', ), )
            )
        else:
            return DataFlowDebugPackage(
        )
        """

    def testDataFlowDebugPackage(self):
        """Test DataFlowDebugPackage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
