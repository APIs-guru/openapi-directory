# coding: utf-8

"""
    TrafficManagerManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.monitor_config import MonitorConfig

class TestMonitorConfig(unittest.TestCase):
    """MonitorConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitorConfig:
        """Test MonitorConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitorConfig`
        """
        model = MonitorConfig()
        if include_optional:
            return MonitorConfig(
                custom_headers = [
                    openapi_client.models.endpoint_properties_custom_headers_inner.EndpointProperties_customHeaders_inner(
                        name = '', 
                        value = '', )
                    ],
                expected_status_code_ranges = [
                    openapi_client.models.monitor_config_expected_status_code_ranges_inner.MonitorConfig_expectedStatusCodeRanges_inner(
                        max = 56, 
                        min = 56, )
                    ],
                interval_in_seconds = 56,
                path = '',
                port = 56,
                profile_monitor_status = 'CheckingEndpoints',
                protocol = 'HTTP',
                timeout_in_seconds = 56,
                tolerated_number_of_failures = 56
            )
        else:
            return MonitorConfig(
        )
        """

    def testMonitorConfig(self):
        """Test MonitorConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
