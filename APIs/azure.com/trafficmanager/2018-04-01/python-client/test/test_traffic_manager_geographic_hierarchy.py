# coding: utf-8

"""
    TrafficManagerManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.traffic_manager_geographic_hierarchy import TrafficManagerGeographicHierarchy

class TestTrafficManagerGeographicHierarchy(unittest.TestCase):
    """TrafficManagerGeographicHierarchy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TrafficManagerGeographicHierarchy:
        """Test TrafficManagerGeographicHierarchy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TrafficManagerGeographicHierarchy`
        """
        model = TrafficManagerGeographicHierarchy()
        if include_optional:
            return TrafficManagerGeographicHierarchy(
                properties = openapi_client.models.geographic_hierarchy_properties.GeographicHierarchyProperties(
                    geographic_hierarchy = openapi_client.models.region.Region(
                        code = '', 
                        name = '', 
                        regions = [
                            openapi_client.models.region.Region(
                                code = '', 
                                name = '', )
                            ], ), ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return TrafficManagerGeographicHierarchy(
        )
        """

    def testTrafficManagerGeographicHierarchy(self):
        """Test TrafficManagerGeographicHierarchy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
