# coding: utf-8

"""
    portal

    Allows creation and deletion of Azure Shared Dashboards.

    The version of the OpenAPI document: 2018-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.patchable_dashboard import PatchableDashboard

class TestPatchableDashboard(unittest.TestCase):
    """PatchableDashboard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PatchableDashboard:
        """Test PatchableDashboard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PatchableDashboard`
        """
        model = PatchableDashboard()
        if include_optional:
            return PatchableDashboard(
                properties = openapi_client.models.dashboard_properties.DashboardProperties(
                    lenses = {
                        'key' : openapi_client.models.dashboard_lens.DashboardLens(
                            metadata = {
                                'key' : None
                                }, 
                            order = 56, 
                            parts = {
                                'key' : openapi_client.models.dashboard_parts.DashboardParts(
                                    position = openapi_client.models.dashboard_parts_position.DashboardParts_position(
                                        col_span = 1.337, 
                                        row_span = 1.337, 
                                        x = 1.337, 
                                        y = 1.337, ), )
                                }, )
                        }, 
                    metadata = {
                        'key' : None
                        }, ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return PatchableDashboard(
        )
        """

    def testPatchableDashboard(self):
        """Test PatchableDashboard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
