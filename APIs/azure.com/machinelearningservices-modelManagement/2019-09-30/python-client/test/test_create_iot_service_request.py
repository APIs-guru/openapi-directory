# coding: utf-8

"""
    Azure Machine Learning Model Management Service

    These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.

    The version of the OpenAPI document: 2019-09-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_iot_service_request import CreateIotServiceRequest

class TestCreateIotServiceRequest(unittest.TestCase):
    """CreateIotServiceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateIotServiceRequest:
        """Test CreateIotServiceRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateIotServiceRequest`
        """
        model = CreateIotServiceRequest()
        if include_optional:
            return CreateIotServiceRequest(
                acr_credentials = [
                    openapi_client.models.registry_info.RegistryInfo(
                        location = '', 
                        password = '', 
                        user = '', )
                    ],
                auth_enabled = True,
                compute_name = '',
                iot_device_id = '',
                iot_edge_module = openapi_client.models.iot_base_module_settings.IotBaseModuleSettings(
                    create_options = '', 
                    environment_variables = {
                        'key' : ''
                        }, 
                    module_name = '', 
                    properties_desired = {
                        'key' : ''
                        }, ),
                iot_edge_user_module = [
                    openapi_client.models.iot_module_settings.IotModuleSettings(
                        create_options = '', 
                        environment_variables = {
                            'key' : ''
                            }, 
                        image_location = '', 
                        module_name = '', 
                        properties_desired = {
                            'key' : ''
                            }, )
                    ],
                routes = {
                    'key' : ''
                    }
            )
        else:
            return CreateIotServiceRequest(
        )
        """

    def testCreateIotServiceRequest(self):
        """Test CreateIotServiceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
