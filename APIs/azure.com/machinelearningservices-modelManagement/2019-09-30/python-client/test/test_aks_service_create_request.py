# coding: utf-8

"""
    Azure Machine Learning Model Management Service

    These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.

    The version of the OpenAPI document: 2019-09-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.aks_service_create_request import AKSServiceCreateRequest

class TestAKSServiceCreateRequest(unittest.TestCase):
    """AKSServiceCreateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AKSServiceCreateRequest:
        """Test AKSServiceCreateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AKSServiceCreateRequest`
        """
        model = AKSServiceCreateRequest()
        if include_optional:
            return AKSServiceCreateRequest(
                aad_auth_enabled = True,
                app_insights_enabled = True,
                auth_enabled = True,
                auto_scaler = openapi_client.models.auto_scaler.AutoScaler(
                    autoscale_enabled = True, 
                    max_replicas = 3, 
                    min_replicas = 1, 
                    refresh_period_in_seconds = 120, 
                    target_utilization = 70, ),
                compute_name = '',
                container_resource_requirements = openapi_client.models.container_resource_requirements.ContainerResourceRequirements(
                    cpu = 4.0, 
                    fpga = 56, 
                    gpu = 56, 
                    memory_in_gb = 64.0, ),
                data_collection = openapi_client.models.model_data_collection.ModelDataCollection(
                    event_hub_enabled = True, 
                    storage_enabled = True, ),
                liveness_probe_requirements = openapi_client.models.liveness_probe_requirements.LivenessProbeRequirements(
                    failure_threshold = 56, 
                    initial_delay_seconds = 56, 
                    period_seconds = 56, 
                    success_threshold = 56, 
                    timeout_seconds = 56, ),
                max_concurrent_requests_per_container = 56,
                max_queue_wait_ms = 56,
                namespace = '',
                num_replicas = 56,
                scoring_timeout_ms = 56
            )
        else:
            return AKSServiceCreateRequest(
        )
        """

    def testAKSServiceCreateRequest(self):
        """Test AKSServiceCreateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
