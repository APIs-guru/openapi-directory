# coding: utf-8

"""
    Azure Machine Learning Model Management Service

    These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.batch_service_response import BatchServiceResponse

class TestBatchServiceResponse(unittest.TestCase):
    """BatchServiceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchServiceResponse:
        """Test BatchServiceResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchServiceResponse`
        """
        model = BatchServiceResponse()
        if include_optional:
            return BatchServiceResponse(
                app_insights_enabled = True,
                compute_name = '',
                entry_script = '',
                environment_name = '',
                environment_version = '',
                error_threshold = 1.337,
                input_format = '',
                mini_batch_size = 56,
                model_data_collection = openapi_client.models.model_data_collection.ModelDataCollection(
                    event_hub_enabled = True, 
                    storage_enabled = True, ),
                model_ids = [
                    ''
                    ],
                node_count = 56,
                output_action = '',
                process_count_per_node = 56,
                scoring_uri = ''
            )
        else:
            return BatchServiceResponse(
        )
        """

    def testBatchServiceResponse(self):
        """Test BatchServiceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
