# coding: utf-8

"""
    Azure Machine Learning Model Management Service

    These APIs allow end users to manage Azure Machine Learning Models, Images, Profiles, and Services.

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.docker_image_response import DockerImageResponse

class TestDockerImageResponse(unittest.TestCase):
    """DockerImageResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DockerImageResponse:
        """Test DockerImageResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DockerImageResponse`
        """
        model = DockerImageResponse()
        if include_optional:
            return DockerImageResponse(
                assets = [
                    openapi_client.models.environment_image_asset.EnvironmentImageAsset(
                        id = '', 
                        mime_type = '', 
                        unpack = True, 
                        url = '', )
                    ],
                docker_file_uri = '',
                driver_program = '',
                generated_docker_file_uri = '',
                target_runtime = openapi_client.models.target_runtime.TargetRuntime(
                    os_type = 'linux', 
                    properties = {
                        'key' : ''
                        }, 
                    runtime_type = 'Python', 
                    target_architecture = 'Amd64', )
            )
        else:
            return DockerImageResponse(
        )
        """

    def testDockerImageResponse(self):
        """Test DockerImageResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
