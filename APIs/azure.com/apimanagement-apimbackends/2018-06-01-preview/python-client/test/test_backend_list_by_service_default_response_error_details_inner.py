# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Backend entity in Azure API Management deployment. The Backend entity in API Management represents a backend service that is configured to skip certification chain validation when using a self-signed certificate to test mutual certificate authentication.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backend_list_by_service_default_response_error_details_inner import BackendListByServiceDefaultResponseErrorDetailsInner

class TestBackendListByServiceDefaultResponseErrorDetailsInner(unittest.TestCase):
    """BackendListByServiceDefaultResponseErrorDetailsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackendListByServiceDefaultResponseErrorDetailsInner:
        """Test BackendListByServiceDefaultResponseErrorDetailsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackendListByServiceDefaultResponseErrorDetailsInner`
        """
        model = BackendListByServiceDefaultResponseErrorDetailsInner()
        if include_optional:
            return BackendListByServiceDefaultResponseErrorDetailsInner(
                code = '',
                message = '',
                target = ''
            )
        else:
            return BackendListByServiceDefaultResponseErrorDetailsInner(
        )
        """

    def testBackendListByServiceDefaultResponseErrorDetailsInner(self):
        """Test BackendListByServiceDefaultResponseErrorDetailsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
