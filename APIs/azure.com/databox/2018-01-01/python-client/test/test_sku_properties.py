# coding: utf-8

"""
    DataBoxManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sku_properties import SkuProperties

class TestSkuProperties(unittest.TestCase):
    """SkuProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SkuProperties:
        """Test SkuProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SkuProperties`
        """
        model = SkuProperties()
        if include_optional:
            return SkuProperties(
                api_versions = [
                    ''
                    ],
                capacity = openapi_client.models.sku_capacity.SkuCapacity(
                    maximum = '', 
                    usable = '', ),
                costs = [
                    openapi_client.models.sku_cost.SkuCost(
                        meter_id = '', 
                        meter_type = '', )
                    ],
                destination_to_service_location_map = [
                    openapi_client.models.destination_to_service_location_map.DestinationToServiceLocationMap(
                        destination_location = '', 
                        service_location = '', )
                    ],
                disabled_reason = 'None',
                disabled_reason_message = '',
                required_feature = ''
            )
        else:
            return SkuProperties(
        )
        """

    def testSkuProperties(self):
        """Test SkuProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
