# coding: utf-8

"""
    DataBoxManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_resource import JobResource

class TestJobResource(unittest.TestCase):
    """JobResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobResource:
        """Test JobResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobResource`
        """
        model = JobResource()
        if include_optional:
            return JobResource(
                id = '',
                name = '',
                properties = openapi_client.models.job_properties.JobProperties(
                    cancellation_reason = '', 
                    delivery_info = openapi_client.models.job_delivery_info.JobDeliveryInfo(
                        scheduled_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    delivery_type = 'NonScheduled', 
                    details = openapi_client.models.job_details.JobDetails(
                        chain_of_custody_sas_key = '', 
                        contact_details = openapi_client.models.contact_details.ContactDetails(
                            contact_name = '', 
                            email_list = [
                                ''
                                ], 
                            mobile = '', 
                            notification_preference = [
                                openapi_client.models.notification_preference.NotificationPreference(
                                    send_notification = True, 
                                    stage_name = 'DevicePrepared', )
                                ], 
                            phone = '', 
                            phone_extension = '', ), 
                        copy_log_details = [
                            openapi_client.models.copy_log_details.CopyLogDetails(
                                copy_log_details_type = 'DataBox', )
                            ], 
                        delivery_package = openapi_client.models.package_shipping_details.PackageShippingDetails(
                            carrier_name = '', 
                            tracking_id = '', 
                            tracking_url = '', ), 
                        destination_account_details = [
                            openapi_client.models.destination_account_details.DestinationAccountDetails(
                                account_id = '', 
                                data_destination_type = 'StorageAccount', 
                                share_password = '', )
                            ], 
                        error_details = [
                            openapi_client.models.job_error_details.JobErrorDetails(
                                error_code = 56, 
                                error_message = '', 
                                exception_message = '', 
                                recommended_action = '', )
                            ], 
                        expected_data_size_in_terabytes = 56, 
                        job_details_type = 'DataBox', 
                        job_stages = [
                            openapi_client.models.job_stages.JobStages(
                                display_name = '', 
                                job_stage_details = openapi_client.models.job_stage_details.jobStageDetails(), 
                                stage_name = 'DeviceOrdered', 
                                stage_status = 'None', 
                                stage_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        preferences = openapi_client.models.preferences.Preferences(
                            preferred_data_center_region = [
                                ''
                                ], 
                            transport_preferences = openapi_client.models.transport_preferences.TransportPreferences(
                                preferred_shipment_type = 'CustomerManaged', ), ), 
                        return_package = openapi_client.models.package_shipping_details.PackageShippingDetails(
                            carrier_name = '', 
                            tracking_id = '', 
                            tracking_url = '', ), 
                        reverse_shipment_label_sas_key = '', 
                        shipping_address = openapi_client.models.shipping_address.ShippingAddress(
                            address_type = 'None', 
                            city = '', 
                            company_name = '', 
                            country = '', 
                            postal_code = '', 
                            state_or_province = '', 
                            street_address1 = '', 
                            street_address2 = '', 
                            street_address3 = '', 
                            zip_extended_code = '', ), ), 
                    error = openapi_client.models.error.Error(
                        code = '', 
                        message = '', ), 
                    is_cancellable = True, 
                    is_cancellable_without_fee = True, 
                    is_deletable = True, 
                    is_shipping_address_editable = True, 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'DeviceOrdered', ),
                type = '',
                location = '',
                sku = openapi_client.models.sku.Sku(
                    display_name = '', 
                    family = '', 
                    name = 'DataBox', ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return JobResource(
                properties = openapi_client.models.job_properties.JobProperties(
                    cancellation_reason = '', 
                    delivery_info = openapi_client.models.job_delivery_info.JobDeliveryInfo(
                        scheduled_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    delivery_type = 'NonScheduled', 
                    details = openapi_client.models.job_details.JobDetails(
                        chain_of_custody_sas_key = '', 
                        contact_details = openapi_client.models.contact_details.ContactDetails(
                            contact_name = '', 
                            email_list = [
                                ''
                                ], 
                            mobile = '', 
                            notification_preference = [
                                openapi_client.models.notification_preference.NotificationPreference(
                                    send_notification = True, 
                                    stage_name = 'DevicePrepared', )
                                ], 
                            phone = '', 
                            phone_extension = '', ), 
                        copy_log_details = [
                            openapi_client.models.copy_log_details.CopyLogDetails(
                                copy_log_details_type = 'DataBox', )
                            ], 
                        delivery_package = openapi_client.models.package_shipping_details.PackageShippingDetails(
                            carrier_name = '', 
                            tracking_id = '', 
                            tracking_url = '', ), 
                        destination_account_details = [
                            openapi_client.models.destination_account_details.DestinationAccountDetails(
                                account_id = '', 
                                data_destination_type = 'StorageAccount', 
                                share_password = '', )
                            ], 
                        error_details = [
                            openapi_client.models.job_error_details.JobErrorDetails(
                                error_code = 56, 
                                error_message = '', 
                                exception_message = '', 
                                recommended_action = '', )
                            ], 
                        expected_data_size_in_terabytes = 56, 
                        job_details_type = 'DataBox', 
                        job_stages = [
                            openapi_client.models.job_stages.JobStages(
                                display_name = '', 
                                job_stage_details = openapi_client.models.job_stage_details.jobStageDetails(), 
                                stage_name = 'DeviceOrdered', 
                                stage_status = 'None', 
                                stage_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        preferences = openapi_client.models.preferences.Preferences(
                            preferred_data_center_region = [
                                ''
                                ], 
                            transport_preferences = openapi_client.models.transport_preferences.TransportPreferences(
                                preferred_shipment_type = 'CustomerManaged', ), ), 
                        return_package = openapi_client.models.package_shipping_details.PackageShippingDetails(
                            carrier_name = '', 
                            tracking_id = '', 
                            tracking_url = '', ), 
                        reverse_shipment_label_sas_key = '', 
                        shipping_address = openapi_client.models.shipping_address.ShippingAddress(
                            address_type = 'None', 
                            city = '', 
                            company_name = '', 
                            country = '', 
                            postal_code = '', 
                            state_or_province = '', 
                            street_address1 = '', 
                            street_address2 = '', 
                            street_address3 = '', 
                            zip_extended_code = '', ), ), 
                    error = openapi_client.models.error.Error(
                        code = '', 
                        message = '', ), 
                    is_cancellable = True, 
                    is_cancellable_without_fee = True, 
                    is_deletable = True, 
                    is_shipping_address_editable = True, 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'DeviceOrdered', ),
                location = '',
                sku = openapi_client.models.sku.Sku(
                    display_name = '', 
                    family = '', 
                    name = 'DataBox', ),
        )
        """

    def testJobResource(self):
        """Test JobResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
