# coding: utf-8

"""
    Azure ML Commitment Plans Management Client

    These APIs allow end users to operate on Azure Machine Learning Commitment Plans resources and their child Commitment Association resources. They support CRUD operations for commitment plans, get and list operations for commitment associations, moving commitment associations between commitment plans, and retrieving commitment plan usage history.

    The version of the OpenAPI document: 2016-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.commitment_plan import CommitmentPlan

class TestCommitmentPlan(unittest.TestCase):
    """CommitmentPlan unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommitmentPlan:
        """Test CommitmentPlan
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommitmentPlan`
        """
        model = CommitmentPlan()
        if include_optional:
            return CommitmentPlan(
                etag = '',
                properties = openapi_client.models.commitment_plan_properties.CommitmentPlanProperties(
                    charge_for_overage = True, 
                    charge_for_plan = True, 
                    creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    included_quantities = {
                        'key' : openapi_client.models.plan_quantity.PlanQuantity(
                            allowance = 1.337, 
                            amount = 1.337, 
                            included_quantity_meter = '', 
                            overage_meter = '', )
                        }, 
                    max_association_limit = 56, 
                    max_capacity_limit = 56, 
                    min_capacity_limit = 56, 
                    plan_meter = '', 
                    refill_frequency_in_days = 56, 
                    suspend_plan_on_overage = True, ),
                sku = openapi_client.models.resource_sku.ResourceSku(
                    capacity = 56, 
                    name = '', 
                    tier = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return CommitmentPlan(
                location = '',
        )
        """

    def testCommitmentPlan(self):
        """Test CommitmentPlan"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
