# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Cache entity in your Azure API Management deployment. Azure API Management also allows for caching responses in an external Azure Cache for Redis. For more information refer to [External Redis Cache in ApiManagement](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-cache-external).

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cache_list_by_service_default_response import CacheListByServiceDefaultResponse

class TestCacheListByServiceDefaultResponse(unittest.TestCase):
    """CacheListByServiceDefaultResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CacheListByServiceDefaultResponse:
        """Test CacheListByServiceDefaultResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CacheListByServiceDefaultResponse`
        """
        model = CacheListByServiceDefaultResponse()
        if include_optional:
            return CacheListByServiceDefaultResponse(
                error = openapi_client.models.cache_list_by_service_default_response_error.Cache_ListByService_default_response_error(
                    code = '', 
                    details = [
                        openapi_client.models.cache_list_by_service_default_response_error_details_inner.Cache_ListByService_default_response_error_details_inner(
                            code = '', 
                            message = '', 
                            target = '', )
                        ], 
                    message = '', )
            )
        else:
            return CacheListByServiceDefaultResponse(
        )
        """

    def testCacheListByServiceDefaultResponse(self):
        """Test CacheListByServiceDefaultResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
