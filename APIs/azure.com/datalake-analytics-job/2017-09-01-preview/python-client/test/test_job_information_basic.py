# coding: utf-8

"""
    DataLakeAnalyticsJobManagementClient

    Creates an Azure Data Lake Analytics job client.

    The version of the OpenAPI document: 2017-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_information_basic import JobInformationBasic

class TestJobInformationBasic(unittest.TestCase):
    """JobInformationBasic unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobInformationBasic:
        """Test JobInformationBasic
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobInformationBasic`
        """
        model = JobInformationBasic()
        if include_optional:
            return JobInformationBasic(
                degree_of_parallelism = 56,
                degree_of_parallelism_percent = 1.337,
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                hierarchy_queue_node = '',
                job_id = '',
                log_file_patterns = [
                    ''
                    ],
                log_folder = '',
                name = '',
                priority = 56,
                related = openapi_client.models.job_relationship_properties.JobRelationshipProperties(
                    pipeline_id = '', 
                    pipeline_name = '', 
                    pipeline_uri = '', 
                    recurrence_id = '', 
                    recurrence_name = '', 
                    run_id = '', ),
                result = 'None',
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                state = 'Accepted',
                submit_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                submitter = '',
                tags = {
                    'key' : ''
                    },
                type = 'USql'
            )
        else:
            return JobInformationBasic(
                name = '',
                type = 'USql',
        )
        """

    def testJobInformationBasic(self):
        """Test JobInformationBasic"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
