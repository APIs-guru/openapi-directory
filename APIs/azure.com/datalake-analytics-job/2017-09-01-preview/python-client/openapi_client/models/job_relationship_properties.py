# coding: utf-8

"""
    DataLakeAnalyticsJobManagementClient

    Creates an Azure Data Lake Analytics job client.

    The version of the OpenAPI document: 2017-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from typing import Optional, Set
from typing_extensions import Self

class JobRelationshipProperties(BaseModel):
    """
    Job relationship information properties including pipeline information, correlation information, etc.
    """ # noqa: E501
    pipeline_id: Optional[StrictStr] = Field(default=None, description="The job relationship pipeline identifier (a GUID).", alias="pipelineId")
    pipeline_name: Optional[Annotated[str, Field(strict=True, max_length=260)]] = Field(default=None, description="The friendly name of the job relationship pipeline, which does not need to be unique.", alias="pipelineName")
    pipeline_uri: Optional[StrictStr] = Field(default=None, description="The pipeline uri, unique, links to the originating service for this pipeline.", alias="pipelineUri")
    recurrence_id: StrictStr = Field(description="The recurrence identifier (a GUID), unique per activity/script, regardless of iterations. This is something to link different occurrences of the same job together.", alias="recurrenceId")
    recurrence_name: Optional[Annotated[str, Field(strict=True, max_length=260)]] = Field(default=None, description="The recurrence name, user friendly name for the correlation between jobs.", alias="recurrenceName")
    run_id: Optional[StrictStr] = Field(default=None, description="The run identifier (a GUID), unique identifier of the iteration of this pipeline.", alias="runId")
    __properties: ClassVar[List[str]] = ["pipelineId", "pipelineName", "pipelineUri", "recurrenceId", "recurrenceName", "runId"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of JobRelationshipProperties from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of JobRelationshipProperties from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "pipelineId": obj.get("pipelineId"),
            "pipelineName": obj.get("pipelineName"),
            "pipelineUri": obj.get("pipelineUri"),
            "recurrenceId": obj.get("recurrenceId"),
            "recurrenceName": obj.get("recurrenceName"),
            "runId": obj.get("runId")
        })
        return _obj


