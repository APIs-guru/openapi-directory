# coding: utf-8

"""
    DataLakeAnalyticsJobManagementClient

    Creates an Azure Data Lake Analytics job client.

    The version of the OpenAPI document: 2015-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.u_sql_job_properties import USqlJobProperties

class TestUSqlJobProperties(unittest.TestCase):
    """USqlJobProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> USqlJobProperties:
        """Test USqlJobProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `USqlJobProperties`
        """
        model = USqlJobProperties()
        if include_optional:
            return USqlJobProperties(
                algebra_file_path = '',
                compile_mode = 'Semantic',
                debug_data = openapi_client.models.job_data_path.JobDataPath(
                    command = '', 
                    job_id = '', 
                    paths = [
                        ''
                        ], ),
                resources = [
                    openapi_client.models.job_resource.JobResource(
                        name = '', 
                        resource_path = '', 
                        type = 'VertexResource', )
                    ],
                root_process_node_id = '',
                statistics = openapi_client.models.job_statistics.JobStatistics(
                    last_update_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    stages = [
                        openapi_client.models.job_statistics_vertex_stage.JobStatisticsVertexStage(
                            data_read = 56, 
                            data_read_cross_pod = 56, 
                            data_read_intra_pod = 56, 
                            data_to_read = 56, 
                            data_written = 56, 
                            duplicate_discard_count = 56, 
                            failed_count = 56, 
                            max_vertex_data_read = 56, 
                            min_vertex_data_read = 56, 
                            read_failure_count = 56, 
                            revocation_count = 56, 
                            running_count = 56, 
                            scheduled_count = 56, 
                            stage_name = '', 
                            succeeded_count = 56, 
                            temp_data_written = 56, 
                            total_count = 56, 
                            total_failed_time = '', 
                            total_progress = 56, 
                            total_succeeded_time = '', )
                        ], ),
                total_compilation_time = '',
                total_pause_time = '',
                total_queued_time = '',
                total_running_time = '',
                yarn_application_id = '',
                yarn_application_time_stamp = 56
            )
        else:
            return USqlJobProperties(
        )
        """

    def testUSqlJobProperties(self):
        """Test USqlJobProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
