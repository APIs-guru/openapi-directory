# coding: utf-8

"""
    StreamAnalyticsManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.streaming_job_properties import StreamingJobProperties

class TestStreamingJobProperties(unittest.TestCase):
    """StreamingJobProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StreamingJobProperties:
        """Test StreamingJobProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StreamingJobProperties`
        """
        model = StreamingJobProperties()
        if include_optional:
            return StreamingJobProperties(
                compatibility_level = '1.0',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                data_locale = '',
                etag = '',
                events_late_arrival_max_delay_in_seconds = 56,
                events_out_of_order_max_delay_in_seconds = 56,
                events_out_of_order_policy = 'Adjust',
                functions = [
                    openapi_client.models.streaming_job_properties_functions_inner.StreamingJobProperties_functions_inner(
                        properties = openapi_client.models.streaming_job_properties_functions_inner_properties.StreamingJobProperties_functions_inner_properties(
                            etag = '', 
                            type = '', ), )
                    ],
                inputs = [
                    openapi_client.models.streaming_job_properties_inputs_inner.StreamingJobProperties_inputs_inner(
                        properties = openapi_client.models.streaming_job_properties_inputs_inner_properties.StreamingJobProperties_inputs_inner_properties(
                            diagnostics = openapi_client.models.streaming_job_properties_inputs_inner_properties_diagnostics.StreamingJobProperties_inputs_inner_properties_diagnostics(
                                conditions = [
                                    openapi_client.models.streaming_job_properties_inputs_inner_properties_diagnostics_conditions_inner.StreamingJobProperties_inputs_inner_properties_diagnostics_conditions_inner(
                                        code = '', 
                                        message = '', 
                                        since = '', )
                                    ], ), 
                            etag = '', 
                            serialization = openapi_client.models.streaming_job_properties_inputs_inner_properties_serialization.StreamingJobProperties_inputs_inner_properties_serialization(
                                type = '', ), 
                            type = '', ), )
                    ],
                job_id = '',
                job_state = '',
                last_output_event_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                output_error_policy = 'Stop',
                output_start_mode = 'JobStartTime',
                output_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                outputs = [
                    openapi_client.models.streaming_job_properties_outputs_inner.StreamingJobProperties_outputs_inner(
                        properties = openapi_client.models.streaming_job_properties_outputs_inner_properties.StreamingJobProperties_outputs_inner_properties(
                            datasource = openapi_client.models.streaming_job_properties_outputs_inner_properties_datasource.StreamingJobProperties_outputs_inner_properties_datasource(
                                type = '', ), 
                            diagnostics = openapi_client.models.streaming_job_properties_inputs_inner_properties_diagnostics.StreamingJobProperties_inputs_inner_properties_diagnostics(
                                conditions = [
                                    openapi_client.models.streaming_job_properties_inputs_inner_properties_diagnostics_conditions_inner.StreamingJobProperties_inputs_inner_properties_diagnostics_conditions_inner(
                                        code = '', 
                                        message = '', 
                                        since = '', )
                                    ], ), 
                            etag = '', 
                            serialization = openapi_client.models.streaming_job_properties_inputs_inner_properties_serialization.StreamingJobProperties_inputs_inner_properties_serialization(
                                type = '', ), ), )
                    ],
                provisioning_state = '',
                sku = openapi_client.models.sku.Sku(
                    name = 'Standard', ),
                transformation = openapi_client.models.streaming_job_properties_transformation.StreamingJobProperties_transformation(
                    properties = openapi_client.models.streaming_job_properties_transformation_properties.StreamingJobProperties_transformation_properties(
                        etag = '', 
                        query = '', 
                        streaming_units = 56, ), )
            )
        else:
            return StreamingJobProperties(
        )
        """

    def testStreamingJobProperties(self):
        """Test StreamingJobProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
