# coding: utf-8

"""
    DataLakeStoreAccountManagementClient

    Creates an Azure Data Lake Store account management client.

    The version of the OpenAPI document: 2016-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_data_lake_store_account_parameters import UpdateDataLakeStoreAccountParameters

class TestUpdateDataLakeStoreAccountParameters(unittest.TestCase):
    """UpdateDataLakeStoreAccountParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateDataLakeStoreAccountParameters:
        """Test UpdateDataLakeStoreAccountParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateDataLakeStoreAccountParameters`
        """
        model = UpdateDataLakeStoreAccountParameters()
        if include_optional:
            return UpdateDataLakeStoreAccountParameters(
                properties = openapi_client.models.update_data_lake_store_account_properties.UpdateDataLakeStoreAccountProperties(
                    default_group = '', 
                    encryption_config = openapi_client.models.update_encryption_config.UpdateEncryptionConfig(
                        key_vault_meta_info = openapi_client.models.update_key_vault_meta_info.UpdateKeyVaultMetaInfo(
                            encryption_key_version = '', ), ), 
                    firewall_allow_azure_ips = 'Enabled', 
                    firewall_rules = [
                        openapi_client.models.update_firewall_rule_with_account_parameters.UpdateFirewallRuleWithAccountParameters(
                            name = '', 
                            properties = openapi_client.models.update_firewall_rule_properties.UpdateFirewallRuleProperties(
                                end_ip_address = '', 
                                start_ip_address = '', ), )
                        ], 
                    firewall_state = 'Enabled', 
                    new_tier = 'Consumption', 
                    trusted_id_provider_state = 'Enabled', 
                    trusted_id_providers = [
                        openapi_client.models.update_trusted_id_provider_with_account_parameters.UpdateTrustedIdProviderWithAccountParameters(
                            name = '', )
                        ], 
                    virtual_network_rules = [
                        openapi_client.models.update_virtual_network_rule_with_account_parameters.UpdateVirtualNetworkRuleWithAccountParameters(
                            name = '', )
                        ], ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return UpdateDataLakeStoreAccountParameters(
        )
        """

    def testUpdateDataLakeStoreAccountParameters(self):
        """Test UpdateDataLakeStoreAccountParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
