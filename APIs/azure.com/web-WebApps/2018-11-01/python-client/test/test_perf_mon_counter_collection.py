# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.perf_mon_counter_collection import PerfMonCounterCollection

class TestPerfMonCounterCollection(unittest.TestCase):
    """PerfMonCounterCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerfMonCounterCollection:
        """Test PerfMonCounterCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerfMonCounterCollection`
        """
        model = PerfMonCounterCollection()
        if include_optional:
            return PerfMonCounterCollection(
                next_link = '',
                value = [
                    openapi_client.models.perf_mon_response.PerfMonResponse(
                        code = '', 
                        data = openapi_client.models.perf_mon_set.PerfMonSet(
                            end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            name = '', 
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            time_grain = '', 
                            values = [
                                openapi_client.models.perf_mon_sample.PerfMonSample(
                                    instance_name = '', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    value = 1.337, )
                                ], ), 
                        message = '', )
                    ]
            )
        else:
            return PerfMonCounterCollection(
                value = [
                    openapi_client.models.perf_mon_response.PerfMonResponse(
                        code = '', 
                        data = openapi_client.models.perf_mon_set.PerfMonSet(
                            end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            name = '', 
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            time_grain = '', 
                            values = [
                                openapi_client.models.perf_mon_sample.PerfMonSample(
                                    instance_name = '', 
                                    time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    value = 1.337, )
                                ], ), 
                        message = '', )
                    ],
        )
        """

    def testPerfMonCounterCollection(self):
        """Test PerfMonCounterCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
