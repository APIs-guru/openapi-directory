# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.perf_mon_response import PerfMonResponse

class TestPerfMonResponse(unittest.TestCase):
    """PerfMonResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerfMonResponse:
        """Test PerfMonResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerfMonResponse`
        """
        model = PerfMonResponse()
        if include_optional:
            return PerfMonResponse(
                code = '',
                data = openapi_client.models.perf_mon_set.PerfMonSet(
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    name = '', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    time_grain = '', 
                    values = [
                        openapi_client.models.perf_mon_sample.PerfMonSample(
                            instance_name = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            value = 1.337, )
                        ], ),
                message = ''
            )
        else:
            return PerfMonResponse(
        )
        """

    def testPerfMonResponse(self):
        """Test PerfMonResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
