# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.site_config_resource_collection import SiteConfigResourceCollection

class TestSiteConfigResourceCollection(unittest.TestCase):
    """SiteConfigResourceCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteConfigResourceCollection:
        """Test SiteConfigResourceCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteConfigResourceCollection`
        """
        model = SiteConfigResourceCollection()
        if include_optional:
            return SiteConfigResourceCollection(
                next_link = '',
                value = [
                    openapi_client.models.site_config_resource.SiteConfigResource(
                        properties = openapi_client.models.properties.properties(
                            always_on = True, 
                            api_definition = openapi_client.models.api_definition.apiDefinition(
                                url = '', ), 
                            app_command_line = '', 
                            app_settings = [
                                None
                                ], 
                            auto_heal_enabled = True, 
                            auto_heal_rules = openapi_client.models.auto_heal_rules.autoHealRules(
                                actions = openapi_client.models.actions.actions(
                                    action_type = 'Recycle', 
                                    custom_action = openapi_client.models.custom_action.customAction(
                                        exe = '', 
                                        parameters = '', ), 
                                    min_process_execution_time = '', ), 
                                triggers = openapi_client.models.triggers.triggers(
                                    private_bytes_in_kb = 56, 
                                    requests = openapi_client.models.requests.requests(
                                        count = 56, 
                                        time_interval = '', ), 
                                    slow_requests = openapi_client.models.slow_requests.slowRequests(
                                        count = 56, 
                                        time_interval = '', 
                                        time_taken = '', ), 
                                    status_codes = [
                                        None
                                        ], ), ), 
                            auto_swap_slot_name = '', 
                            azure_storage_accounts = {
                                'key' : None
                                }, 
                            connection_strings = [
                                None
                                ], 
                            cors = openapi_client.models.cors.cors(
                                allowed_origins = [
                                    ''
                                    ], 
                                support_credentials = True, ), 
                            default_documents = [
                                ''
                                ], 
                            detailed_error_logging_enabled = True, 
                            document_root = '', 
                            experiments = openapi_client.models.experiments.experiments(
                                ramp_up_rules = [
                                    None
                                    ], ), 
                            ftps_state = 'AllAllowed', 
                            handler_mappings = [
                                None
                                ], 
                            http20_enabled = True, 
                            http_logging_enabled = True, 
                            ip_security_restrictions = [
                                None
                                ], 
                            java_container = '', 
                            java_container_version = '', 
                            java_version = '', 
                            limits = openapi_client.models.limits.limits(
                                max_disk_size_in_mb = 56, 
                                max_memory_in_mb = 56, 
                                max_percentage_cpu = 1.337, ), 
                            linux_fx_version = '', 
                            load_balancing = 'WeightedRoundRobin', 
                            local_my_sql_enabled = True, 
                            logs_directory_size_limit = 56, 
                            machine_key = openapi_client.models.machine_key.machineKey(
                                decryption = '', 
                                decryption_key = '', 
                                validation = '', 
                                validation_key = '', ), 
                            managed_pipeline_mode = 'Integrated', 
                            managed_service_identity_id = 56, 
                            min_tls_version = '1.0', 
                            net_framework_version = 'v4.6', 
                            node_version = '', 
                            number_of_workers = 56, 
                            php_version = '', 
                            publishing_username = '', 
                            push = openapi_client.models.push.push(), 
                            python_version = '', 
                            remote_debugging_enabled = True, 
                            remote_debugging_version = '', 
                            request_tracing_enabled = True, 
                            request_tracing_expiration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            reserved_instance_count = 0, 
                            scm_ip_security_restrictions = [
                                None
                                ], 
                            scm_ip_security_restrictions_use_main = True, 
                            scm_type = 'None', 
                            tracing_options = '', 
                            use32_bit_worker_process = True, 
                            virtual_applications = [
                                None
                                ], 
                            vnet_name = '', 
                            web_sockets_enabled = True, 
                            windows_fx_version = '', 
                            x_managed_service_identity_id = 56, ), )
                    ]
            )
        else:
            return SiteConfigResourceCollection(
                value = [
                    openapi_client.models.site_config_resource.SiteConfigResource(
                        properties = openapi_client.models.properties.properties(
                            always_on = True, 
                            api_definition = openapi_client.models.api_definition.apiDefinition(
                                url = '', ), 
                            app_command_line = '', 
                            app_settings = [
                                None
                                ], 
                            auto_heal_enabled = True, 
                            auto_heal_rules = openapi_client.models.auto_heal_rules.autoHealRules(
                                actions = openapi_client.models.actions.actions(
                                    action_type = 'Recycle', 
                                    custom_action = openapi_client.models.custom_action.customAction(
                                        exe = '', 
                                        parameters = '', ), 
                                    min_process_execution_time = '', ), 
                                triggers = openapi_client.models.triggers.triggers(
                                    private_bytes_in_kb = 56, 
                                    requests = openapi_client.models.requests.requests(
                                        count = 56, 
                                        time_interval = '', ), 
                                    slow_requests = openapi_client.models.slow_requests.slowRequests(
                                        count = 56, 
                                        time_interval = '', 
                                        time_taken = '', ), 
                                    status_codes = [
                                        None
                                        ], ), ), 
                            auto_swap_slot_name = '', 
                            azure_storage_accounts = {
                                'key' : None
                                }, 
                            connection_strings = [
                                None
                                ], 
                            cors = openapi_client.models.cors.cors(
                                allowed_origins = [
                                    ''
                                    ], 
                                support_credentials = True, ), 
                            default_documents = [
                                ''
                                ], 
                            detailed_error_logging_enabled = True, 
                            document_root = '', 
                            experiments = openapi_client.models.experiments.experiments(
                                ramp_up_rules = [
                                    None
                                    ], ), 
                            ftps_state = 'AllAllowed', 
                            handler_mappings = [
                                None
                                ], 
                            http20_enabled = True, 
                            http_logging_enabled = True, 
                            ip_security_restrictions = [
                                None
                                ], 
                            java_container = '', 
                            java_container_version = '', 
                            java_version = '', 
                            limits = openapi_client.models.limits.limits(
                                max_disk_size_in_mb = 56, 
                                max_memory_in_mb = 56, 
                                max_percentage_cpu = 1.337, ), 
                            linux_fx_version = '', 
                            load_balancing = 'WeightedRoundRobin', 
                            local_my_sql_enabled = True, 
                            logs_directory_size_limit = 56, 
                            machine_key = openapi_client.models.machine_key.machineKey(
                                decryption = '', 
                                decryption_key = '', 
                                validation = '', 
                                validation_key = '', ), 
                            managed_pipeline_mode = 'Integrated', 
                            managed_service_identity_id = 56, 
                            min_tls_version = '1.0', 
                            net_framework_version = 'v4.6', 
                            node_version = '', 
                            number_of_workers = 56, 
                            php_version = '', 
                            publishing_username = '', 
                            push = openapi_client.models.push.push(), 
                            python_version = '', 
                            remote_debugging_enabled = True, 
                            remote_debugging_version = '', 
                            request_tracing_enabled = True, 
                            request_tracing_expiration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            reserved_instance_count = 0, 
                            scm_ip_security_restrictions = [
                                None
                                ], 
                            scm_ip_security_restrictions_use_main = True, 
                            scm_type = 'None', 
                            tracing_options = '', 
                            use32_bit_worker_process = True, 
                            virtual_applications = [
                                None
                                ], 
                            vnet_name = '', 
                            web_sockets_enabled = True, 
                            windows_fx_version = '', 
                            x_managed_service_identity_id = 56, ), )
                    ],
        )
        """

    def testSiteConfigResourceCollection(self):
        """Test SiteConfigResourceCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
