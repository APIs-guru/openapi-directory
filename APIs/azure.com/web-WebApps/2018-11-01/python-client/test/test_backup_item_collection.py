# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backup_item_collection import BackupItemCollection

class TestBackupItemCollection(unittest.TestCase):
    """BackupItemCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupItemCollection:
        """Test BackupItemCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupItemCollection`
        """
        model = BackupItemCollection()
        if include_optional:
            return BackupItemCollection(
                next_link = '',
                value = [
                    openapi_client.models.backup_item.BackupItem(
                        properties = openapi_client.models.properties.properties(
                            blob_name = '', 
                            correlation_id = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            databases = [
                                openapi_client.models.database_backup_setting.DatabaseBackupSetting(
                                    connection_string = '', 
                                    connection_string_name = '', 
                                    database_type = 'SqlAzure', 
                                    name = '', )
                                ], 
                            finished_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = 56, 
                            last_restore_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            log = '', 
                            name = '', 
                            scheduled = True, 
                            size_in_bytes = 56, 
                            status = 'InProgress', 
                            storage_account_url = '', 
                            website_size_in_bytes = 56, ), )
                    ]
            )
        else:
            return BackupItemCollection(
                value = [
                    openapi_client.models.backup_item.BackupItem(
                        properties = openapi_client.models.properties.properties(
                            blob_name = '', 
                            correlation_id = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            databases = [
                                openapi_client.models.database_backup_setting.DatabaseBackupSetting(
                                    connection_string = '', 
                                    connection_string_name = '', 
                                    database_type = 'SqlAzure', 
                                    name = '', )
                                ], 
                            finished_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = 56, 
                            last_restore_time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            log = '', 
                            name = '', 
                            scheduled = True, 
                            size_in_bytes = 56, 
                            status = 'InProgress', 
                            storage_account_url = '', 
                            website_size_in_bytes = 56, ), )
                    ],
        )
        """

    def testBackupItemCollection(self):
        """Test BackupItemCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
