# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.site_extension_info_collection import SiteExtensionInfoCollection

class TestSiteExtensionInfoCollection(unittest.TestCase):
    """SiteExtensionInfoCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteExtensionInfoCollection:
        """Test SiteExtensionInfoCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteExtensionInfoCollection`
        """
        model = SiteExtensionInfoCollection()
        if include_optional:
            return SiteExtensionInfoCollection(
                next_link = '',
                value = [
                    openapi_client.models.site_extension_info.SiteExtensionInfo(
                        properties = openapi_client.models.properties.properties(
                            authors = [
                                ''
                                ], 
                            comment = '', 
                            description = '', 
                            download_count = 56, 
                            extension_url = '', 
                            feed_url = '', 
                            icon_url = '', 
                            id = '', 
                            installation_args = '', 
                            installed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            license_url = '', 
                            local_is_latest_version = True, 
                            local_path = '', 
                            project_url = '', 
                            provisioning_state = '', 
                            published_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            summary = '', 
                            title = '', 
                            type = 'Gallery', 
                            version = '', ), )
                    ]
            )
        else:
            return SiteExtensionInfoCollection(
                value = [
                    openapi_client.models.site_extension_info.SiteExtensionInfo(
                        properties = openapi_client.models.properties.properties(
                            authors = [
                                ''
                                ], 
                            comment = '', 
                            description = '', 
                            download_count = 56, 
                            extension_url = '', 
                            feed_url = '', 
                            icon_url = '', 
                            id = '', 
                            installation_args = '', 
                            installed_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            license_url = '', 
                            local_is_latest_version = True, 
                            local_path = '', 
                            project_url = '', 
                            provisioning_state = '', 
                            published_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            summary = '', 
                            title = '', 
                            type = 'Gallery', 
                            version = '', ), )
                    ],
        )
        """

    def testSiteExtensionInfoCollection(self):
        """Test SiteExtensionInfoCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
