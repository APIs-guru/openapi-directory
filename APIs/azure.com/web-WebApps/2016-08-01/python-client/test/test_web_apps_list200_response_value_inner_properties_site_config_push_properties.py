# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.web_apps_list200_response_value_inner_properties_site_config_push_properties import WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties

class TestWebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties(unittest.TestCase):
    """WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties:
        """Test WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties`
        """
        model = WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties()
        if include_optional:
            return WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties(
                dynamic_tags_json = '',
                is_push_enabled = True,
                tag_whitelist_json = '',
                tags_requiring_auth = ''
            )
        else:
            return WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties(
                is_push_enabled = True,
        )
        """

    def testWebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties(self):
        """Test WebAppsList200ResponseValueInnerPropertiesSiteConfigPushProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
