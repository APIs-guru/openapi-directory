# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_logs_config import ApplicationLogsConfig

class TestApplicationLogsConfig(unittest.TestCase):
    """ApplicationLogsConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationLogsConfig:
        """Test ApplicationLogsConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationLogsConfig`
        """
        model = ApplicationLogsConfig()
        if include_optional:
            return ApplicationLogsConfig(
                azure_blob_storage = openapi_client.models.azure_blob_storage_application_logs_config.AzureBlobStorageApplicationLogsConfig(
                    level = 'Off', 
                    retention_in_days = 56, 
                    sas_url = '', ),
                azure_table_storage = openapi_client.models.azure_table_storage_application_logs_config.AzureTableStorageApplicationLogsConfig(
                    level = 'Off', 
                    sas_url = '', ),
                file_system = openapi_client.models.file_system_application_logs_config.FileSystemApplicationLogsConfig(
                    level = 'Off', )
            )
        else:
            return ApplicationLogsConfig(
        )
        """

    def testApplicationLogsConfig(self):
        """Test ApplicationLogsConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
