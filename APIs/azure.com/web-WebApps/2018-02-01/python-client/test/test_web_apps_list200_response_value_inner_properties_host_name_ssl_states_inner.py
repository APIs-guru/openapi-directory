# coding: utf-8

"""
    WebApps API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.web_apps_list200_response_value_inner_properties_host_name_ssl_states_inner import WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner

class TestWebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner(unittest.TestCase):
    """WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner:
        """Test WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner`
        """
        model = WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner()
        if include_optional:
            return WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner(
                host_type = 'Standard',
                name = '',
                ssl_state = 'Disabled',
                thumbprint = '',
                to_update = True,
                virtual_ip = ''
            )
        else:
            return WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner(
        )
        """

    def testWebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner(self):
        """Test WebAppsList200ResponseValueInnerPropertiesHostNameSslStatesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
