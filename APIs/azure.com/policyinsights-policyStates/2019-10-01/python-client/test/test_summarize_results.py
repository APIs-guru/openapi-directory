# coding: utf-8

"""
    PolicyStatesClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.summarize_results import SummarizeResults

class TestSummarizeResults(unittest.TestCase):
    """SummarizeResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SummarizeResults:
        """Test SummarizeResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SummarizeResults`
        """
        model = SummarizeResults()
        if include_optional:
            return SummarizeResults(
                odata_context = '',
                odata_count = 1,
                value = [
                    openapi_client.models.summary.Summary(
                        @odata/context = '', 
                        @odata/id = '', 
                        policy_assignments = [
                            openapi_client.models.policy_assignment_summary.PolicyAssignmentSummary(
                                policy_assignment_id = '', 
                                policy_definitions = [
                                    openapi_client.models.policy_definition_summary.PolicyDefinitionSummary(
                                        effect = '', 
                                        policy_definition_group_names = [
                                            ''
                                            ], 
                                        policy_definition_id = '', 
                                        policy_definition_reference_id = '', 
                                        results = openapi_client.models.summary_results.SummaryResults(
                                            non_compliant_policies = 0, 
                                            non_compliant_resources = 0, 
                                            policy_details = [
                                                openapi_client.models.compliance_detail.ComplianceDetail(
                                                    compliance_state = '', 
                                                    count = 56, )
                                                ], 
                                            policy_group_details = [
                                                openapi_client.models.compliance_detail.ComplianceDetail(
                                                    compliance_state = '', 
                                                    count = 56, )
                                                ], 
                                            query_results_uri = '', 
                                            resource_details = [
                                                
                                                ], ), )
                                    ], 
                                policy_groups = [
                                    openapi_client.models.policy_group_summary.PolicyGroupSummary(
                                        policy_group_name = '', )
                                    ], 
                                policy_set_definition_id = '', 
                                results = openapi_client.models.summary_results.SummaryResults(
                                    non_compliant_policies = 0, 
                                    non_compliant_resources = 0, 
                                    query_results_uri = '', ), )
                            ], 
                        results = , )
                    ]
            )
        else:
            return SummarizeResults(
        )
        """

    def testSummarizeResults(self):
        """Test SummarizeResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
