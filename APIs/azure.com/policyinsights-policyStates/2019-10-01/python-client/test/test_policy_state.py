# coding: utf-8

"""
    PolicyStatesClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policy_state import PolicyState

class TestPolicyState(unittest.TestCase):
    """PolicyState unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolicyState:
        """Test PolicyState
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolicyState`
        """
        model = PolicyState()
        if include_optional:
            return PolicyState(
                odata_context = '',
                odata_id = '',
                compliance_state = '',
                effective_parameters = '',
                is_compliant = True,
                management_group_ids = '',
                policy_assignment_id = '',
                policy_assignment_name = '',
                policy_assignment_owner = '',
                policy_assignment_parameters = '',
                policy_assignment_scope = '',
                policy_definition_action = '',
                policy_definition_category = '',
                policy_definition_group_names = [
                    ''
                    ],
                policy_definition_id = '',
                policy_definition_name = '',
                policy_definition_reference_id = '',
                policy_evaluation_details = openapi_client.models.policy_evaluation_details.PolicyEvaluationDetails(
                    evaluated_expressions = [
                        openapi_client.models.expression_evaluation_details.ExpressionEvaluationDetails(
                            expression = '', 
                            expression_value = openapi_client.models.expression_value.expressionValue(), 
                            operator = '', 
                            path = '', 
                            result = '', 
                            target_value = openapi_client.models.target_value.targetValue(), )
                        ], 
                    if_not_exists_details = openapi_client.models.if_not_exists_evaluation_details.IfNotExistsEvaluationDetails(
                        resource_id = '', 
                        total_resources = 56, ), ),
                policy_set_definition_category = '',
                policy_set_definition_id = '',
                policy_set_definition_name = '',
                policy_set_definition_owner = '',
                policy_set_definition_parameters = '',
                resource_group = '',
                resource_id = '',
                resource_location = '',
                resource_tags = '',
                resource_type = '',
                subscription_id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PolicyState(
        )
        """

    def testPolicyState(self):
        """Test PolicyState"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
