# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).

    The version of the OpenAPI document: 2019-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.certificate_list_by_service200_response_value_inner_properties import CertificateListByService200ResponseValueInnerProperties

class TestCertificateListByService200ResponseValueInnerProperties(unittest.TestCase):
    """CertificateListByService200ResponseValueInnerProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificateListByService200ResponseValueInnerProperties:
        """Test CertificateListByService200ResponseValueInnerProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificateListByService200ResponseValueInnerProperties`
        """
        model = CertificateListByService200ResponseValueInnerProperties()
        if include_optional:
            return CertificateListByService200ResponseValueInnerProperties(
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                subject = '',
                thumbprint = ''
            )
        else:
            return CertificateListByService200ResponseValueInnerProperties(
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                subject = '',
                thumbprint = '',
        )
        """

    def testCertificateListByService200ResponseValueInnerProperties(self):
        """Test CertificateListByService200ResponseValueInnerProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
