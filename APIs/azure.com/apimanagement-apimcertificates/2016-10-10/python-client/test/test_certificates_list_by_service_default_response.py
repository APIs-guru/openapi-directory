# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Certificate entity in your Azure API Management deployment. Certificates can be used to setup mutual authentication with your Backend in API Management. For more information refer to [How to secure backend using Mutual Auth Certificate](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-mutual-certificates).

    The version of the OpenAPI document: 2016-10-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.certificates_list_by_service_default_response import CertificatesListByServiceDefaultResponse

class TestCertificatesListByServiceDefaultResponse(unittest.TestCase):
    """CertificatesListByServiceDefaultResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificatesListByServiceDefaultResponse:
        """Test CertificatesListByServiceDefaultResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificatesListByServiceDefaultResponse`
        """
        model = CertificatesListByServiceDefaultResponse()
        if include_optional:
            return CertificatesListByServiceDefaultResponse(
                code = '',
                details = [
                    openapi_client.models.certificates_list_by_service_default_response_details_inner.Certificates_ListByService_default_response_details_inner(
                        code = '', 
                        message = '', 
                        target = '', )
                    ],
                message = ''
            )
        else:
            return CertificatesListByServiceDefaultResponse(
        )
        """

    def testCertificatesListByServiceDefaultResponse(self):
        """Test CertificatesListByServiceDefaultResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
