# coding: utf-8

"""
    AuthorizationManagementClient

    Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These calls handle provider operations.

    The version of the OpenAPI document: 2018-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.provider_operations_metadata_list_result import ProviderOperationsMetadataListResult

class TestProviderOperationsMetadataListResult(unittest.TestCase):
    """ProviderOperationsMetadataListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderOperationsMetadataListResult:
        """Test ProviderOperationsMetadataListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProviderOperationsMetadataListResult`
        """
        model = ProviderOperationsMetadataListResult()
        if include_optional:
            return ProviderOperationsMetadataListResult(
                next_link = '',
                value = [
                    openapi_client.models.provider_operations_metadata.ProviderOperationsMetadata(
                        display_name = '', 
                        id = '', 
                        name = '', 
                        operations = [
                            openapi_client.models.provider_operation.ProviderOperation(
                                description = '', 
                                display_name = '', 
                                is_data_action = True, 
                                name = '', 
                                origin = '', 
                                properties = openapi_client.models.properties.properties(), )
                            ], 
                        resource_types = [
                            openapi_client.models.resource_type.ResourceType(
                                display_name = '', 
                                name = '', )
                            ], 
                        type = '', )
                    ]
            )
        else:
            return ProviderOperationsMetadataListResult(
        )
        """

    def testProviderOperationsMetadataListResult(self):
        """Test ProviderOperationsMetadataListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
