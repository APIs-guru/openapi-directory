# coding: utf-8

"""
    SeaBreezeManagementClient

    APIs to deploy and manage resources to SeaBreeze.

    The version of the OpenAPI document: 2018-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.http_host_config import HttpHostConfig

class TestHttpHostConfig(unittest.TestCase):
    """HttpHostConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HttpHostConfig:
        """Test HttpHostConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HttpHostConfig`
        """
        model = HttpHostConfig()
        if include_optional:
            return HttpHostConfig(
                name = '',
                routes = [
                    openapi_client.models.http_route_config.HttpRouteConfig(
                        destination = openapi_client.models.gateway_destination.GatewayDestination(
                            application_name = '', 
                            endpoint_name = '', 
                            service_name = '', ), 
                        match = openapi_client.models.http_route_match_rule.HttpRouteMatchRule(
                            headers = [
                                openapi_client.models.http_route_match_header.HttpRouteMatchHeader(
                                    name = '', 
                                    type = 'exact', 
                                    value = '', )
                                ], 
                            path = openapi_client.models.http_route_match_path.HttpRouteMatchPath(
                                rewrite = '', 
                                type = 'prefix', 
                                value = '', ), ), 
                        name = '', )
                    ]
            )
        else:
            return HttpHostConfig(
                name = '',
                routes = [
                    openapi_client.models.http_route_config.HttpRouteConfig(
                        destination = openapi_client.models.gateway_destination.GatewayDestination(
                            application_name = '', 
                            endpoint_name = '', 
                            service_name = '', ), 
                        match = openapi_client.models.http_route_match_rule.HttpRouteMatchRule(
                            headers = [
                                openapi_client.models.http_route_match_header.HttpRouteMatchHeader(
                                    name = '', 
                                    type = 'exact', 
                                    value = '', )
                                ], 
                            path = openapi_client.models.http_route_match_path.HttpRouteMatchPath(
                                rewrite = '', 
                                type = 'prefix', 
                                value = '', ), ), 
                        name = '', )
                    ],
        )
        """

    def testHttpHostConfig(self):
        """Test HttpHostConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
