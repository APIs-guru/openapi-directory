# coding: utf-8

"""
    SeaBreezeManagementClient

    APIs to deploy and manage resources to SeaBreeze.

    The version of the OpenAPI document: 2018-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_properties import ApplicationProperties

class TestApplicationProperties(unittest.TestCase):
    """ApplicationProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationProperties:
        """Test ApplicationProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationProperties`
        """
        model = ApplicationProperties()
        if include_optional:
            return ApplicationProperties(
                debug_params = '',
                description = '',
                diagnostics = openapi_client.models.diagnostics_description.DiagnosticsDescription(
                    default_sink_refs = [
                        ''
                        ], 
                    enabled = True, 
                    sinks = [
                        openapi_client.models.diagnostics_sink_properties.DiagnosticsSinkProperties(
                            description = '', 
                            kind = 'Invalid', 
                            name = '', )
                        ], ),
                health_state = 'Invalid',
                service_names = [
                    ''
                    ],
                services = [
                    openapi_client.models.service_resource_description.ServiceResourceDescription(
                        properties = null, )
                    ],
                status = 'Unknown',
                status_details = '',
                unhealthy_evaluation = ''
            )
        else:
            return ApplicationProperties(
        )
        """

    def testApplicationProperties(self):
        """Test ApplicationProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
