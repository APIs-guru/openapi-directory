# coding: utf-8

"""
    SeaBreezeManagementClient

    APIs to deploy and manage resources to SeaBreeze.

    The version of the OpenAPI document: 2018-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.service_replica_description import ServiceReplicaDescription
from openapi_client.models.service_replica_description_list import ServiceReplicaDescriptionList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ServiceReplicasApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def service_replica_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier")],
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be `2018-09-01-preview`.")],
        resource_group_name: Annotated[StrictStr, Field(description="Azure resource group name")],
        application_resource_name: Annotated[StrictStr, Field(description="The identity of the application.")],
        service_resource_name: Annotated[StrictStr, Field(description="The identity of the service.")],
        replica_name: Annotated[StrictStr, Field(description="Service Fabric replica name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ServiceReplicaDescription:
        """Gets the given replica of the service of an application.

        Gets the information about the service replica with the given name. The information include the description and other properties of the service replica.

        :param subscription_id: The customer subscription identifier (required)
        :type subscription_id: str
        :param api_version: The version of the API. This parameter is required and its value must be `2018-09-01-preview`. (required)
        :type api_version: str
        :param resource_group_name: Azure resource group name (required)
        :type resource_group_name: str
        :param application_resource_name: The identity of the application. (required)
        :type application_resource_name: str
        :param service_resource_name: The identity of the service. (required)
        :type service_resource_name: str
        :param replica_name: Service Fabric replica name. (required)
        :type replica_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._service_replica_get_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            resource_group_name=resource_group_name,
            application_resource_name=application_resource_name,
            service_resource_name=service_resource_name,
            replica_name=replica_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ServiceReplicaDescription",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def service_replica_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier")],
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be `2018-09-01-preview`.")],
        resource_group_name: Annotated[StrictStr, Field(description="Azure resource group name")],
        application_resource_name: Annotated[StrictStr, Field(description="The identity of the application.")],
        service_resource_name: Annotated[StrictStr, Field(description="The identity of the service.")],
        replica_name: Annotated[StrictStr, Field(description="Service Fabric replica name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ServiceReplicaDescription]:
        """Gets the given replica of the service of an application.

        Gets the information about the service replica with the given name. The information include the description and other properties of the service replica.

        :param subscription_id: The customer subscription identifier (required)
        :type subscription_id: str
        :param api_version: The version of the API. This parameter is required and its value must be `2018-09-01-preview`. (required)
        :type api_version: str
        :param resource_group_name: Azure resource group name (required)
        :type resource_group_name: str
        :param application_resource_name: The identity of the application. (required)
        :type application_resource_name: str
        :param service_resource_name: The identity of the service. (required)
        :type service_resource_name: str
        :param replica_name: Service Fabric replica name. (required)
        :type replica_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._service_replica_get_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            resource_group_name=resource_group_name,
            application_resource_name=application_resource_name,
            service_resource_name=service_resource_name,
            replica_name=replica_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ServiceReplicaDescription",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def service_replica_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier")],
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be `2018-09-01-preview`.")],
        resource_group_name: Annotated[StrictStr, Field(description="Azure resource group name")],
        application_resource_name: Annotated[StrictStr, Field(description="The identity of the application.")],
        service_resource_name: Annotated[StrictStr, Field(description="The identity of the service.")],
        replica_name: Annotated[StrictStr, Field(description="Service Fabric replica name.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the given replica of the service of an application.

        Gets the information about the service replica with the given name. The information include the description and other properties of the service replica.

        :param subscription_id: The customer subscription identifier (required)
        :type subscription_id: str
        :param api_version: The version of the API. This parameter is required and its value must be `2018-09-01-preview`. (required)
        :type api_version: str
        :param resource_group_name: Azure resource group name (required)
        :type resource_group_name: str
        :param application_resource_name: The identity of the application. (required)
        :type application_resource_name: str
        :param service_resource_name: The identity of the service. (required)
        :type service_resource_name: str
        :param replica_name: Service Fabric replica name. (required)
        :type replica_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._service_replica_get_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            resource_group_name=resource_group_name,
            application_resource_name=application_resource_name,
            service_resource_name=service_resource_name,
            replica_name=replica_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ServiceReplicaDescription",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _service_replica_get_serialize(
        self,
        subscription_id,
        api_version,
        resource_group_name,
        application_resource_name,
        service_resource_name,
        replica_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if application_resource_name is not None:
            _path_params['applicationResourceName'] = application_resource_name
        if service_resource_name is not None:
            _path_params['serviceResourceName'] = service_resource_name
        if replica_name is not None:
            _path_params['replicaName'] = replica_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas/{replicaName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def service_replica_list(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier")],
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be `2018-09-01-preview`.")],
        resource_group_name: Annotated[StrictStr, Field(description="Azure resource group name")],
        application_resource_name: Annotated[StrictStr, Field(description="The identity of the application.")],
        service_resource_name: Annotated[StrictStr, Field(description="The identity of the service.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ServiceReplicaDescriptionList:
        """Gets replicas of a given service.

        Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.

        :param subscription_id: The customer subscription identifier (required)
        :type subscription_id: str
        :param api_version: The version of the API. This parameter is required and its value must be `2018-09-01-preview`. (required)
        :type api_version: str
        :param resource_group_name: Azure resource group name (required)
        :type resource_group_name: str
        :param application_resource_name: The identity of the application. (required)
        :type application_resource_name: str
        :param service_resource_name: The identity of the service. (required)
        :type service_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._service_replica_list_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            resource_group_name=resource_group_name,
            application_resource_name=application_resource_name,
            service_resource_name=service_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ServiceReplicaDescriptionList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def service_replica_list_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier")],
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be `2018-09-01-preview`.")],
        resource_group_name: Annotated[StrictStr, Field(description="Azure resource group name")],
        application_resource_name: Annotated[StrictStr, Field(description="The identity of the application.")],
        service_resource_name: Annotated[StrictStr, Field(description="The identity of the service.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ServiceReplicaDescriptionList]:
        """Gets replicas of a given service.

        Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.

        :param subscription_id: The customer subscription identifier (required)
        :type subscription_id: str
        :param api_version: The version of the API. This parameter is required and its value must be `2018-09-01-preview`. (required)
        :type api_version: str
        :param resource_group_name: Azure resource group name (required)
        :type resource_group_name: str
        :param application_resource_name: The identity of the application. (required)
        :type application_resource_name: str
        :param service_resource_name: The identity of the service. (required)
        :type service_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._service_replica_list_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            resource_group_name=resource_group_name,
            application_resource_name=application_resource_name,
            service_resource_name=service_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ServiceReplicaDescriptionList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def service_replica_list_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier")],
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be `2018-09-01-preview`.")],
        resource_group_name: Annotated[StrictStr, Field(description="Azure resource group name")],
        application_resource_name: Annotated[StrictStr, Field(description="The identity of the application.")],
        service_resource_name: Annotated[StrictStr, Field(description="The identity of the service.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets replicas of a given service.

        Gets the information about all replicas of a given service of an application. The information includes the runtime properties of the replica instance.

        :param subscription_id: The customer subscription identifier (required)
        :type subscription_id: str
        :param api_version: The version of the API. This parameter is required and its value must be `2018-09-01-preview`. (required)
        :type api_version: str
        :param resource_group_name: Azure resource group name (required)
        :type resource_group_name: str
        :param application_resource_name: The identity of the application. (required)
        :type application_resource_name: str
        :param service_resource_name: The identity of the service. (required)
        :type service_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._service_replica_list_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            resource_group_name=resource_group_name,
            application_resource_name=application_resource_name,
            service_resource_name=service_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ServiceReplicaDescriptionList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _service_replica_list_serialize(
        self,
        subscription_id,
        api_version,
        resource_group_name,
        application_resource_name,
        service_resource_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if application_resource_name is not None:
            _path_params['applicationResourceName'] = application_resource_name
        if service_resource_name is not None:
            _path_params['serviceResourceName'] = service_resource_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabricMesh/applications/{applicationResourceName}/services/{serviceResourceName}/replicas',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


