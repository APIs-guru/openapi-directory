# coding: utf-8

"""
    PolicyClient

    To manage and control access to your resources, you can define customized policies and assign them at a scope.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policy_set_definition_properties import PolicySetDefinitionProperties

class TestPolicySetDefinitionProperties(unittest.TestCase):
    """PolicySetDefinitionProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolicySetDefinitionProperties:
        """Test PolicySetDefinitionProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolicySetDefinitionProperties`
        """
        model = PolicySetDefinitionProperties()
        if include_optional:
            return PolicySetDefinitionProperties(
                description = '',
                display_name = '',
                metadata = openapi_client.models.metadata.metadata(),
                parameters = openapi_client.models.parameters.parameters(),
                policy_definitions = [
                    openapi_client.models.policy_definition_reference.PolicyDefinitionReference(
                        parameters = openapi_client.models.parameters.parameters(), 
                        policy_definition_id = '', )
                    ],
                policy_type = 'NotSpecified'
            )
        else:
            return PolicySetDefinitionProperties(
                policy_definitions = [
                    openapi_client.models.policy_definition_reference.PolicyDefinitionReference(
                        parameters = openapi_client.models.parameters.parameters(), 
                        policy_definition_id = '', )
                    ],
        )
        """

    def testPolicySetDefinitionProperties(self):
        """Test PolicySetDefinitionProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
