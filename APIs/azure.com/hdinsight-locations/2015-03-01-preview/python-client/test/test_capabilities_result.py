# coding: utf-8

"""
    HDInsightManagementClient

    The HDInsight Management Client.

    The version of the OpenAPI document: 2015-03-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.capabilities_result import CapabilitiesResult

class TestCapabilitiesResult(unittest.TestCase):
    """CapabilitiesResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CapabilitiesResult:
        """Test CapabilitiesResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CapabilitiesResult`
        """
        model = CapabilitiesResult()
        if include_optional:
            return CapabilitiesResult(
                features = [
                    ''
                    ],
                quota = openapi_client.models.quota_capability.QuotaCapability(
                    cores_used = 56, 
                    max_cores_allowed = 56, 
                    regional_quotas = [
                        openapi_client.models.regional_quota_capability.RegionalQuotaCapability(
                            cores_available = 56, 
                            cores_used = 56, 
                            region_name = '', )
                        ], ),
                regions = {
                    'key' : openapi_client.models.regions_capability.RegionsCapability(
                        available = [
                            ''
                            ], )
                    },
                versions = {
                    'key' : openapi_client.models.versions_capability.VersionsCapability(
                        available = [
                            openapi_client.models.version_spec.VersionSpec(
                                component_versions = {
                                    'key' : ''
                                    }, 
                                display_name = '', 
                                friendly_name = '', 
                                is_default = '', )
                            ], )
                    },
                vm_size_filters = [
                    openapi_client.models.vm_size_compatibility_filter.VmSizeCompatibilityFilter(
                        cluster_flavors = [
                            ''
                            ], 
                        cluster_versions = [
                            ''
                            ], 
                        filter_mode = '', 
                        node_types = [
                            ''
                            ], 
                        regions = [
                            ''
                            ], 
                        vmsizes = [
                            ''
                            ], )
                    ],
                vm_sizes = {
                    'key' : openapi_client.models.vm_sizes_capability.VmSizesCapability(
                        available = [
                            ''
                            ], )
                    }
            )
        else:
            return CapabilitiesResult(
        )
        """

    def testCapabilitiesResult(self):
        """Test CapabilitiesResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
