# coding: utf-8

"""
    HDInsightManagementClient

    The HDInsight Management Client.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.billing_response_list_result import BillingResponseListResult

class TestBillingResponseListResult(unittest.TestCase):
    """BillingResponseListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingResponseListResult:
        """Test BillingResponseListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingResponseListResult`
        """
        model = BillingResponseListResult()
        if include_optional:
            return BillingResponseListResult(
                billing_resources = [
                    openapi_client.models.billing_resources.BillingResources(
                        billing_meters = [
                            openapi_client.models.billing_meters.BillingMeters(
                                meter = '', 
                                meter_parameter = '', 
                                unit = '', )
                            ], 
                        disk_billing_meters = [
                            openapi_client.models.disk_billing_meters.DiskBillingMeters(
                                disk_rp_meter = '', 
                                sku = '', 
                                tier = 'Standard', )
                            ], 
                        region = '', )
                    ],
                vm_size_filters = [
                    openapi_client.models.vm_size_compatibility_filter_v2.VmSizeCompatibilityFilterV2(
                        cluster_flavors = [
                            ''
                            ], 
                        cluster_versions = [
                            ''
                            ], 
                        filter_mode = 'Exclude', 
                        node_types = [
                            ''
                            ], 
                        os_type = [
                            'Windows'
                            ], 
                        regions = [
                            ''
                            ], 
                        vm_sizes = [
                            ''
                            ], )
                    ],
                vm_sizes = [
                    ''
                    ]
            )
        else:
            return BillingResponseListResult(
        )
        """

    def testBillingResponseListResult(self):
        """Test BillingResponseListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
