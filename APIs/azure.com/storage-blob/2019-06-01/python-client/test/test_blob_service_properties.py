# coding: utf-8

"""
    StorageManagementClient

    The Azure Storage Management API.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.blob_service_properties import BlobServiceProperties

class TestBlobServiceProperties(unittest.TestCase):
    """BlobServiceProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BlobServiceProperties:
        """Test BlobServiceProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BlobServiceProperties`
        """
        model = BlobServiceProperties()
        if include_optional:
            return BlobServiceProperties(
                properties = openapi_client.models.properties.properties(
                    automatic_snapshot_policy_enabled = True, 
                    change_feed = openapi_client.models.change_feed.ChangeFeed(
                        enabled = True, ), 
                    cors = openapi_client.models.cors.cors(
                        cors_rules = [
                            None
                            ], ), 
                    default_service_version = '', 
                    delete_retention_policy = openapi_client.models.delete_retention_policy.deleteRetentionPolicy(
                        days = 1, 
                        enabled = True, ), 
                    restore_policy = openapi_client.models.restore_policy_properties.RestorePolicyProperties(
                        days = 1, 
                        enabled = True, ), ),
                sku = openapi_client.models.sku.sku(
                    name = 'Standard_LRS', 
                    tier = 'Standard', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return BlobServiceProperties(
        )
        """

    def testBlobServiceProperties(self):
        """Test BlobServiceProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
