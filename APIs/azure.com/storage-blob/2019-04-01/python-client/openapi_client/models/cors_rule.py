# coding: utf-8

"""
    StorageManagementClient

    The Azure Storage Management API.

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List
from typing import Optional, Set
from typing_extensions import Self

class CorsRule(BaseModel):
    """
    Specifies a CORS rule for the Blob service.
    """ # noqa: E501
    allowed_headers: List[StrictStr] = Field(description="Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin request.", alias="allowedHeaders")
    allowed_methods: List[StrictStr] = Field(description="Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the origin.", alias="allowedMethods")
    allowed_origins: List[StrictStr] = Field(description="Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\" to allow all domains", alias="allowedOrigins")
    exposed_headers: List[StrictStr] = Field(description="Required if CorsRule element is present. A list of response headers to expose to CORS clients.", alias="exposedHeaders")
    max_age_in_seconds: StrictInt = Field(description="Required if CorsRule element is present. The number of seconds that the client/browser should cache a preflight response.", alias="maxAgeInSeconds")
    __properties: ClassVar[List[str]] = ["allowedHeaders", "allowedMethods", "allowedOrigins", "exposedHeaders", "maxAgeInSeconds"]

    @field_validator('allowed_methods')
    def allowed_methods_validate_enum(cls, value):
        """Validates the enum"""
        for i in value:
            if i not in set(['DELETE', 'GET', 'HEAD', 'MERGE', 'POST', 'OPTIONS', 'PUT']):
                raise ValueError("each list item must be one of ('DELETE', 'GET', 'HEAD', 'MERGE', 'POST', 'OPTIONS', 'PUT')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of CorsRule from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of CorsRule from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "allowedHeaders": obj.get("allowedHeaders"),
            "allowedMethods": obj.get("allowedMethods"),
            "allowedOrigins": obj.get("allowedOrigins"),
            "exposedHeaders": obj.get("exposedHeaders"),
            "maxAgeInSeconds": obj.get("maxAgeInSeconds")
        })
        return _obj


