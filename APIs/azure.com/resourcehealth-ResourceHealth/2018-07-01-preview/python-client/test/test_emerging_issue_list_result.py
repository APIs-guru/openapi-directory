# coding: utf-8

"""
    Microsoft.ResourceHealth

    The Resource Health Client.

    The version of the OpenAPI document: 2018-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.emerging_issue_list_result import EmergingIssueListResult

class TestEmergingIssueListResult(unittest.TestCase):
    """EmergingIssueListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmergingIssueListResult:
        """Test EmergingIssueListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmergingIssueListResult`
        """
        model = EmergingIssueListResult()
        if include_optional:
            return EmergingIssueListResult(
                next_link = '',
                value = [
                    openapi_client.models.emerging_issues_get_result.emergingIssuesGetResult(
                        properties = openapi_client.models.emerging_issue.emergingIssue(
                            refresh_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            status_active_events = [
                                openapi_client.models.status_active_event.statusActiveEvent(
                                    cloud = '', 
                                    description = '', 
                                    impacts = [
                                        openapi_client.models.emerging_issue_impact.emergingIssueImpact(
                                            id = '', 
                                            name = '', 
                                            regions = [
                                                openapi_client.models.impacted_region.impactedRegion(
                                                    id = '', 
                                                    name = '', )
                                                ], )
                                        ], 
                                    last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    published = True, 
                                    severity = 'Information', 
                                    stage = 'Active', 
                                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    title = '', 
                                    tracking_id = '', )
                                ], 
                            status_banners = [
                                openapi_client.models.status_banner.statusBanner(
                                    cloud = '', 
                                    last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    message = '', 
                                    title = '', )
                                ], ), )
                    ]
            )
        else:
            return EmergingIssueListResult(
        )
        """

    def testEmergingIssueListResult(self):
        """Test EmergingIssueListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
