# coding: utf-8

"""
    FeatureClient

    Azure Feature Exposure Control (AFEC) provides a mechanism for the resource providers to control feature exposure to users. Resource providers typically use this mechanism to provide public/private preview for new features prior to making them generally available. Users need to explicitly register for AFEC features to get access to such functionality.

    The version of the OpenAPI document: 2015-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.feature_result import FeatureResult

class TestFeatureResult(unittest.TestCase):
    """FeatureResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FeatureResult:
        """Test FeatureResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FeatureResult`
        """
        model = FeatureResult()
        if include_optional:
            return FeatureResult(
                id = '',
                name = '',
                properties = openapi_client.models.feature_properties.FeatureProperties(
                    state = '', ),
                type = ''
            )
        else:
            return FeatureResult(
        )
        """

    def testFeatureResult(self):
        """Test FeatureResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
