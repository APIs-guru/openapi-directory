# coding: utf-8

"""
    Azure Migrate Hub

    Migrate your workloads to Azure.

    The version of the OpenAPI document: 2018-09-01-preview
    Contact: azuremigratehub@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.event_collection import EventCollection
from openapi_client.models.migrate_event import MigrateEvent

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class EventsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def events_delete_event(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        event_name: Annotated[StrictStr, Field(description="Unique name of an event within a migrate project.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete the migrate event

        Delete the migrate event. Deleting non-existent migrate event is a no-operation.

        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param event_name: Unique name of an event within a migrate project. (required)
        :type event_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_delete_event_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            event_name=event_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def events_delete_event_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        event_name: Annotated[StrictStr, Field(description="Unique name of an event within a migrate project.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete the migrate event

        Delete the migrate event. Deleting non-existent migrate event is a no-operation.

        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param event_name: Unique name of an event within a migrate project. (required)
        :type event_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_delete_event_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            event_name=event_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def events_delete_event_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        event_name: Annotated[StrictStr, Field(description="Unique name of an event within a migrate project.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete the migrate event

        Delete the migrate event. Deleting non-existent migrate event is a no-operation.

        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param event_name: Unique name of an event within a migrate project. (required)
        :type event_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_delete_event_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            event_name=event_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _events_delete_event_serialize(
        self,
        subscription_id,
        resource_group_name,
        migrate_project_name,
        api_version,
        event_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if migrate_project_name is not None:
            _path_params['migrateProjectName'] = migrate_project_name
        if event_name is not None:
            _path_params['eventName'] = event_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents/{eventName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def events_enumerate_events(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        continuation_token: Annotated[Optional[StrictStr], Field(description="The continuation token.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="The number of items to be returned in a single page. This value is honored only if it is less than the 100.")] = None,
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EventCollection:
        """Gets a list of events in the migrate project.


        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param continuation_token: The continuation token.
        :type continuation_token: str
        :param page_size: The number of items to be returned in a single page. This value is honored only if it is less than the 100.
        :type page_size: int
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_enumerate_events_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            continuation_token=continuation_token,
            page_size=page_size,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def events_enumerate_events_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        continuation_token: Annotated[Optional[StrictStr], Field(description="The continuation token.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="The number of items to be returned in a single page. This value is honored only if it is less than the 100.")] = None,
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EventCollection]:
        """Gets a list of events in the migrate project.


        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param continuation_token: The continuation token.
        :type continuation_token: str
        :param page_size: The number of items to be returned in a single page. This value is honored only if it is less than the 100.
        :type page_size: int
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_enumerate_events_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            continuation_token=continuation_token,
            page_size=page_size,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def events_enumerate_events_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        continuation_token: Annotated[Optional[StrictStr], Field(description="The continuation token.")] = None,
        page_size: Annotated[Optional[StrictInt], Field(description="The number of items to be returned in a single page. This value is honored only if it is less than the 100.")] = None,
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a list of events in the migrate project.


        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param continuation_token: The continuation token.
        :type continuation_token: str
        :param page_size: The number of items to be returned in a single page. This value is honored only if it is less than the 100.
        :type page_size: int
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_enumerate_events_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            continuation_token=continuation_token,
            page_size=page_size,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventCollection",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _events_enumerate_events_serialize(
        self,
        subscription_id,
        resource_group_name,
        migrate_project_name,
        api_version,
        continuation_token,
        page_size,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if migrate_project_name is not None:
            _path_params['migrateProjectName'] = migrate_project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if continuation_token is not None:
            
            _query_params.append(('continuationToken', continuation_token))
            
        if page_size is not None:
            
            _query_params.append(('pageSize', page_size))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def events_get_event(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        event_name: Annotated[StrictStr, Field(description="Unique name of an event within a migrate project.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> MigrateEvent:
        """Gets an event in the migrate project.


        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param event_name: Unique name of an event within a migrate project. (required)
        :type event_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_get_event_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            event_name=event_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MigrateEvent",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def events_get_event_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        event_name: Annotated[StrictStr, Field(description="Unique name of an event within a migrate project.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[MigrateEvent]:
        """Gets an event in the migrate project.


        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param event_name: Unique name of an event within a migrate project. (required)
        :type event_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_get_event_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            event_name=event_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MigrateEvent",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def events_get_event_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which migrate project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that migrate project is part of.")],
        migrate_project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        event_name: Annotated[StrictStr, Field(description="Unique name of an event within a migrate project.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets an event in the migrate project.


        :param subscription_id: Azure Subscription Id in which migrate project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that migrate project is part of. (required)
        :type resource_group_name: str
        :param migrate_project_name: Name of the Azure Migrate project. (required)
        :type migrate_project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param event_name: Unique name of an event within a migrate project. (required)
        :type event_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._events_get_event_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            migrate_project_name=migrate_project_name,
            api_version=api_version,
            event_name=event_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MigrateEvent",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _events_get_event_serialize(
        self,
        subscription_id,
        resource_group_name,
        migrate_project_name,
        api_version,
        event_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if migrate_project_name is not None:
            _path_params['migrateProjectName'] = migrate_project_name
        if event_name is not None:
            _path_params['eventName'] = event_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/migrateProjects/{migrateProjectName}/migrateEvents/{eventName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


