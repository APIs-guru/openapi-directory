# coding: utf-8

"""
    Azure Migrate Hub

    Migrate your workloads to Azure.

    The version of the OpenAPI document: 2018-09-01-preview
    Contact: azuremigratehub@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.i_edm_vocabulary_annotation import IEdmVocabularyAnnotation

class TestIEdmVocabularyAnnotation(unittest.TestCase):
    """IEdmVocabularyAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IEdmVocabularyAnnotation:
        """Test IEdmVocabularyAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IEdmVocabularyAnnotation`
        """
        model = IEdmVocabularyAnnotation()
        if include_optional:
            return IEdmVocabularyAnnotation(
                qualifier = '',
                target = openapi_client.models.i_edm_vocabulary_annotatable.IEdmVocabularyAnnotatable(),
                term = openapi_client.models.i_edm_term.IEdmTerm(
                    applies_to = '', 
                    default_value = '', 
                    name = '', 
                    namespace = '', 
                    schema_element_kind = 'None', 
                    type = openapi_client.models.i_edm_type_reference.IEdmTypeReference(
                        definition = openapi_client.models.i_edm_type.IEdmType(
                            type_kind = 'None', ), 
                        is_nullable = True, ), ),
                value = openapi_client.models.i_edm_expression.IEdmExpression(
                    expression_kind = 'None', )
            )
        else:
            return IEdmVocabularyAnnotation(
        )
        """

    def testIEdmVocabularyAnnotation(self):
        """Test IEdmVocabularyAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
