# coding: utf-8

"""
    Azure Migrate Hub

    Migrate your workloads to Azure.

    The version of the OpenAPI document: 2018-09-01-preview
    Contact: azuremigratehub@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.filter_query_option import FilterQueryOption

class TestFilterQueryOption(unittest.TestCase):
    """FilterQueryOption unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilterQueryOption:
        """Test FilterQueryOption
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilterQueryOption`
        """
        model = FilterQueryOption()
        if include_optional:
            return FilterQueryOption(
                context = openapi_client.models.o_data_query_context.ODataQueryContext(
                    default_query_settings = openapi_client.models.default_query_settings.DefaultQuerySettings(
                        enable_count = True, 
                        enable_expand = True, 
                        enable_filter = True, 
                        enable_order_by = True, 
                        enable_select = True, 
                        max_top = 56, ), 
                    element_clr_type = '', 
                    element_type = openapi_client.models.i_edm_type.IEdmType(
                        type_kind = 'None', ), 
                    model = openapi_client.models.i_edm_model.IEdmModel(
                        declared_namespaces = [
                            ''
                            ], 
                        direct_value_annotations_manager = openapi_client.models.i_edm_direct_value_annotations_manager.IEdmDirectValueAnnotationsManager(), 
                        entity_container = openapi_client.models.i_edm_entity_container.IEdmEntityContainer(
                            elements = [
                                openapi_client.models.i_edm_entity_container_element.IEdmEntityContainerElement(
                                    container = openapi_client.models.i_edm_entity_container.IEdmEntityContainer(
                                        name = '', 
                                        namespace = '', 
                                        schema_element_kind = 'None', ), 
                                    container_element_kind = 'None', 
                                    name = '', )
                                ], 
                            name = '', 
                            namespace = '', 
                            schema_element_kind = 'None', ), 
                        referenced_models = [
                            openapi_client.models.i_edm_model.IEdmModel(
                                schema_elements = [
                                    openapi_client.models.i_edm_schema_element.IEdmSchemaElement(
                                        name = '', 
                                        namespace = '', 
                                        schema_element_kind = 'None', )
                                    ], 
                                vocabulary_annotations = [
                                    openapi_client.models.i_edm_vocabulary_annotation.IEdmVocabularyAnnotation(
                                        qualifier = '', 
                                        target = openapi_client.models.i_edm_vocabulary_annotatable.IEdmVocabularyAnnotatable(), 
                                        term = openapi_client.models.i_edm_term.IEdmTerm(
                                            applies_to = '', 
                                            default_value = '', 
                                            name = '', 
                                            namespace = '', 
                                            schema_element_kind = 'None', 
                                            type = openapi_client.models.i_edm_type_reference.IEdmTypeReference(
                                                definition = openapi_client.models.i_edm_type.IEdmType(
                                                    type_kind = 'None', ), 
                                                is_nullable = True, ), ), 
                                        value = openapi_client.models.i_edm_expression.IEdmExpression(
                                            expression_kind = 'None', ), )
                                    ], )
                            ], 
                        schema_elements = [
                            openapi_client.models.i_edm_schema_element.IEdmSchemaElement(
                                name = '', 
                                namespace = '', 
                                schema_element_kind = 'None', )
                            ], 
                        vocabulary_annotations = [
                            openapi_client.models.i_edm_vocabulary_annotation.IEdmVocabularyAnnotation(
                                qualifier = '', )
                            ], ), 
                    navigation_source = openapi_client.models.i_edm_navigation_source.IEdmNavigationSource(
                        name = '', 
                        navigation_property_bindings = [
                            openapi_client.models.i_edm_navigation_property_binding.IEdmNavigationPropertyBinding(
                                navigation_property = openapi_client.models.i_edm_navigation_property.IEdmNavigationProperty(
                                    contains_target = True, 
                                    declaring_type = openapi_client.models.i_edm_structured_type.IEdmStructuredType(
                                        base_type = openapi_client.models.i_edm_structured_type.IEdmStructuredType(
                                            declared_properties = [
                                                openapi_client.models.i_edm_property.IEdmProperty(
                                                    name = '', 
                                                    property_kind = 'None', )
                                                ], 
                                            is_abstract = True, 
                                            is_open = True, 
                                            type_kind = 'None', ), 
                                        declared_properties = [
                                            openapi_client.models.i_edm_property.IEdmProperty(
                                                name = '', 
                                                property_kind = 'None', )
                                            ], 
                                        is_abstract = True, 
                                        is_open = True, 
                                        type_kind = 'None', ), 
                                    name = '', 
                                    on_delete = 'None', 
                                    partner = openapi_client.models.i_edm_navigation_property.IEdmNavigationProperty(
                                        contains_target = True, 
                                        name = '', 
                                        on_delete = 'None', 
                                        property_kind = 'None', 
                                        referential_constraint = openapi_client.models.i_edm_referential_constraint.IEdmReferentialConstraint(
                                            property_pairs = [
                                                openapi_client.models.edm_referential_constraint_property_pair.EdmReferentialConstraintPropertyPair(
                                                    dependent_property = openapi_client.models.i_edm_structural_property.IEdmStructuralProperty(
                                                        default_value_string = '', 
                                                        name = '', 
                                                        property_kind = 'None', ), 
                                                    principal_property = openapi_client.models.i_edm_structural_property.IEdmStructuralProperty(
                                                        default_value_string = '', 
                                                        name = '', 
                                                        property_kind = 'None', ), )
                                                ], ), ), 
                                    property_kind = 'None', 
                                    referential_constraint = openapi_client.models.i_edm_referential_constraint.IEdmReferentialConstraint(), ), 
                                path = openapi_client.models.i_edm_path_expression.IEdmPathExpression(
                                    expression_kind = 'None', 
                                    path_segments = [
                                        ''
                                        ], ), )
                            ], 
                        path = openapi_client.models.i_edm_path_expression.IEdmPathExpression(
                            expression_kind = 'None', ), ), 
                    path = openapi_client.models.o_data_path.ODataPath(
                        edm_type = , 
                        path_template = '', 
                        segments = [
                            openapi_client.models.o_data_path_segment.ODataPathSegment(
                                identifier = '', )
                            ], ), 
                    request_container = openapi_client.models.i_service_provider.IServiceProvider(), ),
                filter_clause = openapi_client.models.filter_clause.FilterClause(
                    expression = openapi_client.models.single_value_node.SingleValueNode(
                        kind = 'None', 
                        type_reference = openapi_client.models.i_edm_type_reference.IEdmTypeReference(
                            definition = openapi_client.models.i_edm_type.IEdmType(
                                type_kind = 'None', ), 
                            is_nullable = True, ), ), 
                    item_type = openapi_client.models.i_edm_type_reference.IEdmTypeReference(
                        is_nullable = True, ), 
                    range_variable = openapi_client.models.range_variable.RangeVariable(
                        kind = 56, 
                        name = '', ), ),
                raw_value = '',
                validator = None
            )
        else:
            return FilterQueryOption(
        )
        """

    def testFilterQueryOption(self):
        """Test FilterQueryOption"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
