# coding: utf-8

"""
    StorSimpleManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network_settings import NetworkSettings

class TestNetworkSettings(unittest.TestCase):
    """NetworkSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkSettings:
        """Test NetworkSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkSettings`
        """
        model = NetworkSettings()
        if include_optional:
            return NetworkSettings(
                properties = openapi_client.models.network_settings_properties.NetworkSettingsProperties(
                    node_networks = [
                        openapi_client.models.node_network.NodeNetwork(
                            network_adapters = [
                                openapi_client.models.network_adapter.NetworkAdapter(
                                    dhcp_status = 'Enabled', 
                                    i_pv4_info = openapi_client.models.ip_config.IPConfig(
                                        gateway = '', 
                                        ip_address = '', 
                                        prefix_length = 56, ), 
                                    i_pv6_info = openapi_client.models.ip_config.IPConfig(
                                        gateway = '', 
                                        ip_address = '', 
                                        prefix_length = 56, ), 
                                    link_speed = 56, 
                                    network_adapter_name = '', )
                                ], )
                        ], 
                    primary_dns_server = '', 
                    secondary_dns_server = '', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return NetworkSettings(
                properties = openapi_client.models.network_settings_properties.NetworkSettingsProperties(
                    node_networks = [
                        openapi_client.models.node_network.NodeNetwork(
                            network_adapters = [
                                openapi_client.models.network_adapter.NetworkAdapter(
                                    dhcp_status = 'Enabled', 
                                    i_pv4_info = openapi_client.models.ip_config.IPConfig(
                                        gateway = '', 
                                        ip_address = '', 
                                        prefix_length = 56, ), 
                                    i_pv6_info = openapi_client.models.ip_config.IPConfig(
                                        gateway = '', 
                                        ip_address = '', 
                                        prefix_length = 56, ), 
                                    link_speed = 56, 
                                    network_adapter_name = '', )
                                ], )
                        ], 
                    primary_dns_server = '', 
                    secondary_dns_server = '', ),
        )
        """

    def testNetworkSettings(self):
        """Test NetworkSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
