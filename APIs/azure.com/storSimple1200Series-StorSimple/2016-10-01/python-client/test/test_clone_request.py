# coding: utf-8

"""
    StorSimpleManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.clone_request import CloneRequest

class TestCloneRequest(unittest.TestCase):
    """CloneRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloneRequest:
        """Test CloneRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloneRequest`
        """
        model = CloneRequest()
        if include_optional:
            return CloneRequest(
                properties = openapi_client.models.clone_request_properties.CloneRequestProperties(
                    disk = openapi_client.models.iscsi_disk.ISCSIDisk(
                        properties = openapi_client.models.iscsi_disk_properties.ISCSIDiskProperties(
                            access_control_records = [
                                ''
                                ], 
                            data_policy = 'Invalid', 
                            description = '', 
                            disk_status = 'Online', 
                            local_used_capacity_in_bytes = 56, 
                            monitoring_status = 'Enabled', 
                            provisioned_capacity_in_bytes = 56, 
                            used_capacity_in_bytes = 56, ), ), 
                    new_endpoint_name = '', 
                    share = openapi_client.models.file_share.FileShare(
                        properties = openapi_client.models.file_share_properties.FileShareProperties(
                            admin_user = '', 
                            data_policy = 'Invalid', 
                            description = '', 
                            local_used_capacity_in_bytes = 56, 
                            monitoring_status = 'Enabled', 
                            provisioned_capacity_in_bytes = 56, 
                            share_status = 'Online', 
                            used_capacity_in_bytes = 56, ), ), 
                    target_access_point_id = '', 
                    target_device_id = '', )
            )
        else:
            return CloneRequest(
                properties = openapi_client.models.clone_request_properties.CloneRequestProperties(
                    disk = openapi_client.models.iscsi_disk.ISCSIDisk(
                        properties = openapi_client.models.iscsi_disk_properties.ISCSIDiskProperties(
                            access_control_records = [
                                ''
                                ], 
                            data_policy = 'Invalid', 
                            description = '', 
                            disk_status = 'Online', 
                            local_used_capacity_in_bytes = 56, 
                            monitoring_status = 'Enabled', 
                            provisioned_capacity_in_bytes = 56, 
                            used_capacity_in_bytes = 56, ), ), 
                    new_endpoint_name = '', 
                    share = openapi_client.models.file_share.FileShare(
                        properties = openapi_client.models.file_share_properties.FileShareProperties(
                            admin_user = '', 
                            data_policy = 'Invalid', 
                            description = '', 
                            local_used_capacity_in_bytes = 56, 
                            monitoring_status = 'Enabled', 
                            provisioned_capacity_in_bytes = 56, 
                            share_status = 'Online', 
                            used_capacity_in_bytes = 56, ), ), 
                    target_access_point_id = '', 
                    target_device_id = '', ),
        )
        """

    def testCloneRequest(self):
        """Test CloneRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
