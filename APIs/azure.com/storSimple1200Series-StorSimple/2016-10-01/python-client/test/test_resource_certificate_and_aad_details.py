# coding: utf-8

"""
    StorSimpleManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resource_certificate_and_aad_details import ResourceCertificateAndAADDetails

class TestResourceCertificateAndAADDetails(unittest.TestCase):
    """ResourceCertificateAndAADDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceCertificateAndAADDetails:
        """Test ResourceCertificateAndAADDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceCertificateAndAADDetails`
        """
        model = ResourceCertificateAndAADDetails()
        if include_optional:
            return ResourceCertificateAndAADDetails(
                aad_authority = '',
                aad_tenant_id = '',
                auth_type = 'Invalid',
                azure_management_endpoint_audience = '',
                certificate = '',
                friendly_name = '',
                issuer = '',
                resource_id = 56,
                service_principal_client_id = '',
                service_principal_object_id = '',
                subject = '',
                thumbprint = '',
                valid_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return ResourceCertificateAndAADDetails(
                aad_authority = '',
                aad_tenant_id = '',
                azure_management_endpoint_audience = '',
                certificate = '',
                friendly_name = '',
                issuer = '',
                resource_id = 56,
                service_principal_client_id = '',
                service_principal_object_id = '',
                subject = '',
                thumbprint = '',
                valid_from = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                valid_to = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testResourceCertificateAndAADDetails(self):
        """Test ResourceCertificateAndAADDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
