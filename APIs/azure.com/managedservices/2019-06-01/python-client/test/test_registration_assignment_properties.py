# coding: utf-8

"""
    ManagedServicesClient

    Specification for ManagedServices.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.registration_assignment_properties import RegistrationAssignmentProperties

class TestRegistrationAssignmentProperties(unittest.TestCase):
    """RegistrationAssignmentProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegistrationAssignmentProperties:
        """Test RegistrationAssignmentProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegistrationAssignmentProperties`
        """
        model = RegistrationAssignmentProperties()
        if include_optional:
            return RegistrationAssignmentProperties(
                provisioning_state = 'NotSpecified',
                registration_definition = openapi_client.models.registration_assignment_properties_registration_definition.RegistrationAssignmentProperties_registrationDefinition(
                    id = '', 
                    name = '', 
                    plan = openapi_client.models.plan.Plan(
                        name = '', 
                        product = '', 
                        publisher = '', 
                        version = '', ), 
                    properties = openapi_client.models.registration_assignment_properties_registration_definition_properties.RegistrationAssignmentProperties_registrationDefinition_properties(
                        authorizations = [
                            openapi_client.models.authorization.Authorization(
                                principal_id = '', 
                                role_definition_id = '', )
                            ], 
                        description = '', 
                        managed_by_tenant_id = '', 
                        managed_by_tenant_name = '', 
                        managee_tenant_id = '', 
                        managee_tenant_name = '', 
                        provisioning_state = 'NotSpecified', 
                        registration_definition_name = '', ), 
                    type = '', ),
                registration_definition_id = ''
            )
        else:
            return RegistrationAssignmentProperties(
                registration_definition_id = '',
        )
        """

    def testRegistrationAssignmentProperties(self):
        """Test RegistrationAssignmentProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
