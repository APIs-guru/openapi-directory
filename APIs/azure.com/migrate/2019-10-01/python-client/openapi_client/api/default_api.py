# coding: utf-8

"""
    Azure Migrate V2

    Assess your workloads for Azure.

    The version of the OpenAPI document: 2019-10-01
    Contact: azuremigrate@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.assessed_machine import AssessedMachine
from openapi_client.models.assessed_machine_result_list import AssessedMachineResultList
from openapi_client.models.assessment import Assessment
from openapi_client.models.assessment_options import AssessmentOptions
from openapi_client.models.assessment_options_result_list import AssessmentOptionsResultList
from openapi_client.models.assessment_result_list import AssessmentResultList
from openapi_client.models.download_url import DownloadUrl
from openapi_client.models.group import Group
from openapi_client.models.group_result_list import GroupResultList
from openapi_client.models.hyper_v_collector import HyperVCollector
from openapi_client.models.hyper_v_collector_list import HyperVCollectorList
from openapi_client.models.machine import Machine
from openapi_client.models.machine_result_list import MachineResultList
from openapi_client.models.operation_result_list import OperationResultList
from openapi_client.models.project import Project
from openapi_client.models.project_result_list import ProjectResultList
from openapi_client.models.update_group_body import UpdateGroupBody
from openapi_client.models.v_mware_collector import VMwareCollector
from openapi_client.models.v_mware_collector_list import VMwareCollectorList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class DefaultApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def assessed_machines_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        assessed_machine_name: Annotated[StrictStr, Field(description="Unique name of an assessed machine evaluated as part of an assessment.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AssessedMachine:
        """Get an assessed machine.

        Get an assessed machine with its size & cost estimate that was evaluated in the specified assessment.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param assessed_machine_name: Unique name of an assessed machine evaluated as part of an assessment. (required)
        :type assessed_machine_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessed_machines_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            assessed_machine_name=assessed_machine_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessedMachine",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessed_machines_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        assessed_machine_name: Annotated[StrictStr, Field(description="Unique name of an assessed machine evaluated as part of an assessment.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AssessedMachine]:
        """Get an assessed machine.

        Get an assessed machine with its size & cost estimate that was evaluated in the specified assessment.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param assessed_machine_name: Unique name of an assessed machine evaluated as part of an assessment. (required)
        :type assessed_machine_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessed_machines_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            assessed_machine_name=assessed_machine_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessedMachine",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessed_machines_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        assessed_machine_name: Annotated[StrictStr, Field(description="Unique name of an assessed machine evaluated as part of an assessment.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get an assessed machine.

        Get an assessed machine with its size & cost estimate that was evaluated in the specified assessment.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param assessed_machine_name: Unique name of an assessed machine evaluated as part of an assessment. (required)
        :type assessed_machine_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessed_machines_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            assessed_machine_name=assessed_machine_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessedMachine",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessed_machines_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        assessment_name,
        assessed_machine_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        if assessment_name is not None:
            _path_params['assessmentName'] = assessment_name
        if assessed_machine_name is not None:
            _path_params['assessedMachineName'] = assessed_machine_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines/{assessedMachineName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessed_machines_list_by_assessment(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AssessedMachineResultList:
        """Get assessed machines for assessment.

        Get list of machines that assessed as part of the specified assessment. Returns a json array of objects of type 'assessedMachine' as specified in the Models section.  Whenever an assessment is created or updated, it goes under computation. During this phase, the 'status' field of Assessment object reports 'Computing'. During the period when the assessment is under computation, the list of assessed machines is empty and no assessed machines are returned by this call. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessed_machines_list_by_assessment_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessedMachineResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessed_machines_list_by_assessment_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AssessedMachineResultList]:
        """Get assessed machines for assessment.

        Get list of machines that assessed as part of the specified assessment. Returns a json array of objects of type 'assessedMachine' as specified in the Models section.  Whenever an assessment is created or updated, it goes under computation. During this phase, the 'status' field of Assessment object reports 'Computing'. During the period when the assessment is under computation, the list of assessed machines is empty and no assessed machines are returned by this call. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessed_machines_list_by_assessment_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessedMachineResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessed_machines_list_by_assessment_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get assessed machines for assessment.

        Get list of machines that assessed as part of the specified assessment. Returns a json array of objects of type 'assessedMachine' as specified in the Models section.  Whenever an assessment is created or updated, it goes under computation. During this phase, the 'status' field of Assessment object reports 'Computing'. During the period when the assessment is under computation, the list of assessed machines is empty and no assessed machines are returned by this call. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessed_machines_list_by_assessment_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessedMachineResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessed_machines_list_by_assessment_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        assessment_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        if assessment_name is not None:
            _path_params['assessmentName'] = assessment_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/assessedMachines',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessments_create(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        assessment: Annotated[Optional[Assessment], Field(description="New or Updated Assessment object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Assessment:
        """Create or Update assessment.

        Create a new assessment with the given name and the specified settings. Since name of an assessment in a project is a unique identifier, if an assessment with the name provided already exists, then the existing assessment is updated.  Any PUT operation, resulting in either create or update on an assessment, will cause the assessment to go in a \"InProgress\" state. This will be indicated by the field 'computationState' on the Assessment object. During this time no other PUT operation will be allowed on that assessment object, nor will a Delete operation. Once the computation for the assessment is complete, the field 'computationState' will be updated to 'Ready', and then other PUT or DELETE operations can happen on the assessment.  When assessment is under computation, any PUT will lead to a 400 - Bad Request error. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param assessment: New or Updated Assessment object.
        :type assessment: Assessment
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            assessment=assessment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Assessment",
            '201': "Assessment",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessments_create_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        assessment: Annotated[Optional[Assessment], Field(description="New or Updated Assessment object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Assessment]:
        """Create or Update assessment.

        Create a new assessment with the given name and the specified settings. Since name of an assessment in a project is a unique identifier, if an assessment with the name provided already exists, then the existing assessment is updated.  Any PUT operation, resulting in either create or update on an assessment, will cause the assessment to go in a \"InProgress\" state. This will be indicated by the field 'computationState' on the Assessment object. During this time no other PUT operation will be allowed on that assessment object, nor will a Delete operation. Once the computation for the assessment is complete, the field 'computationState' will be updated to 'Ready', and then other PUT or DELETE operations can happen on the assessment.  When assessment is under computation, any PUT will lead to a 400 - Bad Request error. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param assessment: New or Updated Assessment object.
        :type assessment: Assessment
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            assessment=assessment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Assessment",
            '201': "Assessment",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessments_create_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        assessment: Annotated[Optional[Assessment], Field(description="New or Updated Assessment object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create or Update assessment.

        Create a new assessment with the given name and the specified settings. Since name of an assessment in a project is a unique identifier, if an assessment with the name provided already exists, then the existing assessment is updated.  Any PUT operation, resulting in either create or update on an assessment, will cause the assessment to go in a \"InProgress\" state. This will be indicated by the field 'computationState' on the Assessment object. During this time no other PUT operation will be allowed on that assessment object, nor will a Delete operation. Once the computation for the assessment is complete, the field 'computationState' will be updated to 'Ready', and then other PUT or DELETE operations can happen on the assessment.  When assessment is under computation, any PUT will lead to a 400 - Bad Request error. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param assessment: New or Updated Assessment object.
        :type assessment: Assessment
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            assessment=assessment,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Assessment",
            '201': "Assessment",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessments_create_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        assessment_name,
        api_version,
        accept_language,
        assessment,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        if assessment_name is not None:
            _path_params['assessmentName'] = assessment_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if assessment is not None:
            _body_params = assessment


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessments_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Deletes an assessment from the project.

        Delete an assessment from the project. The machines remain in the assessment. Deleting a non-existent assessment results in a no-operation.  When an assessment is under computation, as indicated by the 'computationState' field, it cannot be deleted. Any such attempt will return a 400 - Bad Request. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessments_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Deletes an assessment from the project.

        Delete an assessment from the project. The machines remain in the assessment. Deleting a non-existent assessment results in a no-operation.  When an assessment is under computation, as indicated by the 'computationState' field, it cannot be deleted. Any such attempt will return a 400 - Bad Request. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessments_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes an assessment from the project.

        Delete an assessment from the project. The machines remain in the assessment. Deleting a non-existent assessment results in a no-operation.  When an assessment is under computation, as indicated by the 'computationState' field, it cannot be deleted. Any such attempt will return a 400 - Bad Request. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessments_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        assessment_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        if assessment_name is not None:
            _path_params['assessmentName'] = assessment_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessments_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Assessment:
        """Get an assessment.

        Get an existing assessment with the specified name. Returns a json object of type 'assessment' as specified in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Assessment",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessments_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Assessment]:
        """Get an assessment.

        Get an existing assessment with the specified name. Returns a json object of type 'assessment' as specified in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Assessment",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessments_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get an assessment.

        Get an existing assessment with the specified name. Returns a json object of type 'assessment' as specified in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Assessment",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessments_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        assessment_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        if assessment_name is not None:
            _path_params['assessmentName'] = assessment_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessments_get_report_download_url(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> DownloadUrl:
        """Get download URL for the assessment report.

        Get the URL for downloading the assessment in a report format.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_get_report_download_url_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DownloadUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessments_get_report_download_url_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[DownloadUrl]:
        """Get download URL for the assessment report.

        Get the URL for downloading the assessment in a report format.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_get_report_download_url_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DownloadUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessments_get_report_download_url_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        assessment_name: Annotated[StrictStr, Field(description="Unique name of an assessment within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get download URL for the assessment report.

        Get the URL for downloading the assessment in a report format.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param assessment_name: Unique name of an assessment within a project. (required)
        :type assessment_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_get_report_download_url_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            assessment_name=assessment_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "DownloadUrl",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessments_get_report_download_url_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        assessment_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        if assessment_name is not None:
            _path_params['assessmentName'] = assessment_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments/{assessmentName}/downloadUrl',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessments_list_by_group(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AssessmentResultList:
        """Get all assessments created for the specified group.

        Get all assessments created for the specified group.  Returns a json array of objects of type 'assessment' as specified in Models section. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_list_by_group_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessments_list_by_group_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AssessmentResultList]:
        """Get all assessments created for the specified group.

        Get all assessments created for the specified group.  Returns a json array of objects of type 'assessment' as specified in Models section. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_list_by_group_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessments_list_by_group_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all assessments created for the specified group.

        Get all assessments created for the specified group.  Returns a json array of objects of type 'assessment' as specified in Models section. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_list_by_group_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessments_list_by_group_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/assessments',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def assessments_list_by_project(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AssessmentResultList:
        """Get all assessments created in the project.

        Get all assessments created in the project.  Returns a json array of objects of type 'assessment' as specified in Models section. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def assessments_list_by_project_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AssessmentResultList]:
        """Get all assessments created in the project.

        Get all assessments created in the project.  Returns a json array of objects of type 'assessment' as specified in Models section. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def assessments_list_by_project_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all assessments created in the project.

        Get all assessments created in the project.  Returns a json array of objects of type 'assessment' as specified in Models section. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._assessments_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _assessments_list_by_project_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessments',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def groups_create(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        group: Annotated[Optional[Group], Field(description="New or Updated Group object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Group:
        """Create a new group with specified settings.

        Create a new group by sending a json object of type 'group' as given in Models section as part of the Request Body. The group name in a project is unique.  This operation is Idempotent. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param group: New or Updated Group object.
        :type group: Group
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            group=group,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
            '201': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def groups_create_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        group: Annotated[Optional[Group], Field(description="New or Updated Group object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Group]:
        """Create a new group with specified settings.

        Create a new group by sending a json object of type 'group' as given in Models section as part of the Request Body. The group name in a project is unique.  This operation is Idempotent. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param group: New or Updated Group object.
        :type group: Group
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            group=group,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
            '201': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def groups_create_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        group: Annotated[Optional[Group], Field(description="New or Updated Group object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create a new group with specified settings.

        Create a new group by sending a json object of type 'group' as given in Models section as part of the Request Body. The group name in a project is unique.  This operation is Idempotent. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param group: New or Updated Group object.
        :type group: Group
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            group=group,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
            '201': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _groups_create_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        api_version,
        accept_language,
        group,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if group is not None:
            _body_params = group


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def groups_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete the group

        Delete the group from the project. The machines remain in the project. Deleting a non-existent group results in a no-operation.  A group is an aggregation mechanism for machines in a project. Therefore, deleting group does not delete machines in it. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def groups_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete the group

        Delete the group from the project. The machines remain in the project. Deleting a non-existent group results in a no-operation.  A group is an aggregation mechanism for machines in a project. Therefore, deleting group does not delete machines in it. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def groups_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete the group

        Delete the group from the project. The machines remain in the project. Deleting a non-existent group results in a no-operation.  A group is an aggregation mechanism for machines in a project. Therefore, deleting group does not delete machines in it. 

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _groups_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def groups_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Group:
        """Get a specific group.

        Get information related to a specific group in the project. Returns a json object of type 'group' as specified in the models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def groups_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Group]:
        """Get a specific group.

        Get information related to a specific group in the project. Returns a json object of type 'group' as specified in the models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def groups_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a specific group.

        Get information related to a specific group in the project. Returns a json object of type 'group' as specified in the models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _groups_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def groups_list_by_project(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> GroupResultList:
        """Get all groups

        Get all groups created in the project. Returns a json array of objects of type 'group' as specified in the Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def groups_list_by_project_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[GroupResultList]:
        """Get all groups

        Get all groups created in the project. Returns a json array of objects of type 'group' as specified in the Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def groups_list_by_project_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all groups

        Get all groups created in the project. Returns a json array of objects of type 'group' as specified in the Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "GroupResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _groups_list_by_project_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def groups_update_machines(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        group_update_properties: Annotated[Optional[UpdateGroupBody], Field(description="Machines list to be added or removed from group.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Group:
        """Update machines in group.

        Update machines in group by adding or removing machines.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param group_update_properties: Machines list to be added or removed from group.
        :type group_update_properties: UpdateGroupBody
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_update_machines_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            group_update_properties=group_update_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def groups_update_machines_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        group_update_properties: Annotated[Optional[UpdateGroupBody], Field(description="Machines list to be added or removed from group.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Group]:
        """Update machines in group.

        Update machines in group by adding or removing machines.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param group_update_properties: Machines list to be added or removed from group.
        :type group_update_properties: UpdateGroupBody
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_update_machines_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            group_update_properties=group_update_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def groups_update_machines_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        group_name: Annotated[StrictStr, Field(description="Unique name of a group within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        group_update_properties: Annotated[Optional[UpdateGroupBody], Field(description="Machines list to be added or removed from group.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update machines in group.

        Update machines in group by adding or removing machines.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param group_name: Unique name of a group within a project. (required)
        :type group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param group_update_properties: Machines list to be added or removed from group.
        :type group_update_properties: UpdateGroupBody
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._groups_update_machines_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            group_name=group_name,
            api_version=api_version,
            accept_language=accept_language,
            group_update_properties=group_update_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Group",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _groups_update_machines_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        group_name,
        api_version,
        accept_language,
        group_update_properties,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if group_name is not None:
            _path_params['groupName'] = group_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if group_update_properties is not None:
            _body_params = group_update_properties


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/groups/{groupName}/updateMachines',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def hyper_v_collectors_create(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        collector_body: Annotated[Optional[HyperVCollector], Field(description="New or Updated Hyper-V collector.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HyperVCollector:
        """Create or Update Hyper-V collector.

        Create or Update Hyper-V collector

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param collector_body: New or Updated Hyper-V collector.
        :type collector_body: HyperVCollector
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            collector_body=collector_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollector",
            '201': "HyperVCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def hyper_v_collectors_create_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        collector_body: Annotated[Optional[HyperVCollector], Field(description="New or Updated Hyper-V collector.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HyperVCollector]:
        """Create or Update Hyper-V collector.

        Create or Update Hyper-V collector

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param collector_body: New or Updated Hyper-V collector.
        :type collector_body: HyperVCollector
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            collector_body=collector_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollector",
            '201': "HyperVCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def hyper_v_collectors_create_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        collector_body: Annotated[Optional[HyperVCollector], Field(description="New or Updated Hyper-V collector.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create or Update Hyper-V collector.

        Create or Update Hyper-V collector

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param collector_body: New or Updated Hyper-V collector.
        :type collector_body: HyperVCollector
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            collector_body=collector_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollector",
            '201': "HyperVCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _hyper_v_collectors_create_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        hyper_v_collector_name,
        api_version,
        accept_language,
        collector_body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if hyper_v_collector_name is not None:
            _path_params['hyperVCollectorName'] = hyper_v_collector_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if collector_body is not None:
            _body_params = collector_body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/hypervcollectors/{hyperVCollectorName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def hyper_v_collectors_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Deletes Hyper-V collector from the project.

        Delete a Hyper-V collector from the project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def hyper_v_collectors_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Deletes Hyper-V collector from the project.

        Delete a Hyper-V collector from the project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def hyper_v_collectors_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes Hyper-V collector from the project.

        Delete a Hyper-V collector from the project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _hyper_v_collectors_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        hyper_v_collector_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if hyper_v_collector_name is not None:
            _path_params['hyperVCollectorName'] = hyper_v_collector_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/hypervcollectors/{hyperVCollectorName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def hyper_v_collectors_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HyperVCollector:
        """Get a Hyper-V collector.

        Get a Hyper-V collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def hyper_v_collectors_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HyperVCollector]:
        """Get a Hyper-V collector.

        Get a Hyper-V collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def hyper_v_collectors_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        hyper_v_collector_name: Annotated[StrictStr, Field(description="Unique name of a Hyper-V collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a Hyper-V collector.

        Get a Hyper-V collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param hyper_v_collector_name: Unique name of a Hyper-V collector within a project. (required)
        :type hyper_v_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            hyper_v_collector_name=hyper_v_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _hyper_v_collectors_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        hyper_v_collector_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if hyper_v_collector_name is not None:
            _path_params['hyperVCollectorName'] = hyper_v_collector_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/hypervcollectors/{hyperVCollectorName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def hyper_v_collectors_list_by_project(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> HyperVCollectorList:
        """Get a list of Hyper-V collector.

        Get a list of Hyper-V collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollectorList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def hyper_v_collectors_list_by_project_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[HyperVCollectorList]:
        """Get a list of Hyper-V collector.

        Get a list of Hyper-V collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollectorList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def hyper_v_collectors_list_by_project_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a list of Hyper-V collector.

        Get a list of Hyper-V collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._hyper_v_collectors_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "HyperVCollectorList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _hyper_v_collectors_list_by_project_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/hypervcollectors',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machines_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        machine_name: Annotated[StrictStr, Field(description="Unique name of a machine in private datacenter.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Machine:
        """Get a specific machine.

        Get the machine with the specified name. Returns a json object of type 'machine' defined in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param machine_name: Unique name of a machine in private datacenter. (required)
        :type machine_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machines_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            machine_name=machine_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Machine",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machines_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        machine_name: Annotated[StrictStr, Field(description="Unique name of a machine in private datacenter.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Machine]:
        """Get a specific machine.

        Get the machine with the specified name. Returns a json object of type 'machine' defined in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param machine_name: Unique name of a machine in private datacenter. (required)
        :type machine_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machines_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            machine_name=machine_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Machine",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machines_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        machine_name: Annotated[StrictStr, Field(description="Unique name of a machine in private datacenter.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a specific machine.

        Get the machine with the specified name. Returns a json object of type 'machine' defined in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param machine_name: Unique name of a machine in private datacenter. (required)
        :type machine_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machines_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            machine_name=machine_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Machine",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machines_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        machine_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if machine_name is not None:
            _path_params['machineName'] = machine_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines/{machineName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def machines_list_by_project(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> MachineResultList:
        """Get all machines in the project

        Get data of all the machines available in the project. Returns a json array of objects of type 'machine' defined in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machines_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MachineResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def machines_list_by_project_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[MachineResultList]:
        """Get all machines in the project

        Get data of all the machines available in the project. Returns a json array of objects of type 'machine' defined in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machines_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MachineResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def machines_list_by_project_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all machines in the project

        Get data of all the machines available in the project. Returns a json array of objects of type 'machine' defined in Models section.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._machines_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MachineResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _machines_list_by_project_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/machines',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def operations_list(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OperationResultList:
        """Get list of operations supported in the API.

        Get a list of REST API supported by Microsoft.Migrate provider.

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._operations_list_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OperationResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def operations_list_with_http_info(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OperationResultList]:
        """Get list of operations supported in the API.

        Get a list of REST API supported by Microsoft.Migrate provider.

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._operations_list_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OperationResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def operations_list_without_preload_content(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get list of operations supported in the API.

        Get a list of REST API supported by Microsoft.Migrate provider.

        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._operations_list_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OperationResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _operations_list_serialize(
        self,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/providers/Microsoft.Migrate/operations',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def project_assessment_options(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        assessment_options_name: Annotated[StrictStr, Field(description="Name of the assessment options. The only name accepted in default.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AssessmentOptions:
        """Get all available options for the properties of an assessment on a project.

        Get all available options for the properties of an assessment on a project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param assessment_options_name: Name of the assessment options. The only name accepted in default. (required)
        :type assessment_options_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._project_assessment_options_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            assessment_options_name=assessment_options_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentOptions",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def project_assessment_options_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        assessment_options_name: Annotated[StrictStr, Field(description="Name of the assessment options. The only name accepted in default.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AssessmentOptions]:
        """Get all available options for the properties of an assessment on a project.

        Get all available options for the properties of an assessment on a project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param assessment_options_name: Name of the assessment options. The only name accepted in default. (required)
        :type assessment_options_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._project_assessment_options_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            assessment_options_name=assessment_options_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentOptions",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def project_assessment_options_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        assessment_options_name: Annotated[StrictStr, Field(description="Name of the assessment options. The only name accepted in default.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all available options for the properties of an assessment on a project.

        Get all available options for the properties of an assessment on a project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param assessment_options_name: Name of the assessment options. The only name accepted in default. (required)
        :type assessment_options_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._project_assessment_options_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            assessment_options_name=assessment_options_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentOptions",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _project_assessment_options_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        assessment_options_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if assessment_options_name is not None:
            _path_params['assessmentOptionsName'] = assessment_options_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions/{assessmentOptionsName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def project_assessment_options_list(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AssessmentOptionsResultList:
        """Gets list of all available options for the properties of an assessment on a project.

        Gets list of all available options for the properties of an assessment on a project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._project_assessment_options_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentOptionsResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def project_assessment_options_list_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AssessmentOptionsResultList]:
        """Gets list of all available options for the properties of an assessment on a project.

        Gets list of all available options for the properties of an assessment on a project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._project_assessment_options_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentOptionsResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def project_assessment_options_list_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets list of all available options for the properties of an assessment on a project.

        Gets list of all available options for the properties of an assessment on a project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._project_assessment_options_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AssessmentOptionsResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _project_assessment_options_list_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/assessmentOptions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def projects_create(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        project: Annotated[Optional[Project], Field(description="New or Updated project object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Project:
        """Create or update project.

        Create a project with specified name. If a project already exists, update it.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param project: New or Updated project object.
        :type project: Project
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            project=project,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
            '201': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def projects_create_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        project: Annotated[Optional[Project], Field(description="New or Updated project object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Project]:
        """Create or update project.

        Create a project with specified name. If a project already exists, update it.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param project: New or Updated project object.
        :type project: Project
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            project=project,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
            '201': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def projects_create_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        project: Annotated[Optional[Project], Field(description="New or Updated project object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create or update project.

        Create a project with specified name. If a project already exists, update it.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param project: New or Updated project object.
        :type project: Project
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            project=project,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
            '201': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _projects_create_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        project,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if project is not None:
            _body_params = project


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def projects_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Delete the project

        Delete the project. Deleting non-existent project is a no-operation.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def projects_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Delete the project

        Delete the project. Deleting non-existent project is a no-operation.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def projects_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Delete the project

        Delete the project. Deleting non-existent project is a no-operation.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _projects_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def projects_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Project:
        """Get the specified project.

        Get the project with the specified name.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def projects_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Project]:
        """Get the specified project.

        Get the project with the specified name.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def projects_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get the specified project.

        Get the project with the specified name.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _projects_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def projects_list(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProjectResultList:
        """Get all projects.

        Get all the projects in the resource group.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProjectResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def projects_list_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProjectResultList]:
        """Get all projects.

        Get all the projects in the resource group.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProjectResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def projects_list_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all projects.

        Get all the projects in the resource group.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProjectResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _projects_list_serialize(
        self,
        subscription_id,
        resource_group_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def projects_list_by_subscription(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProjectResultList:
        """Get all projects.

        Get all the projects in the subscription.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_list_by_subscription_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProjectResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def projects_list_by_subscription_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProjectResultList]:
        """Get all projects.

        Get all the projects in the subscription.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_list_by_subscription_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProjectResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def projects_list_by_subscription_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get all projects.

        Get all the projects in the subscription.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_list_by_subscription_serialize(
            subscription_id=subscription_id,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProjectResultList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _projects_list_by_subscription_serialize(
        self,
        subscription_id,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/providers/Microsoft.Migrate/assessmentProjects',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def projects_update(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        project: Annotated[Optional[Project], Field(description="Updated project object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Project:
        """Update project.

        Update a project with specified name. Supports partial updates, for example only tags can be provided.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param project: Updated project object.
        :type project: Project
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_update_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            project=project,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def projects_update_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        project: Annotated[Optional[Project], Field(description="Updated project object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Project]:
        """Update project.

        Update a project with specified name. Supports partial updates, for example only tags can be provided.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param project: Updated project object.
        :type project: Project
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_update_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            project=project,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def projects_update_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        project: Annotated[Optional[Project], Field(description="Updated project object.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Update project.

        Update a project with specified name. Supports partial updates, for example only tags can be provided.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param project: Updated project object.
        :type project: Project
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._projects_update_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            project=project,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Project",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _projects_update_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        project,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if project is not None:
            _body_params = project


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def v_mware_collectors_create(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        collector_body: Annotated[Optional[VMwareCollector], Field(description="New or Updated VMware collector.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VMwareCollector:
        """Create or Update VMware collector.

        Create or Update VMware collector

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param collector_body: New or Updated VMware collector.
        :type collector_body: VMwareCollector
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            collector_body=collector_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollector",
            '201': "VMwareCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def v_mware_collectors_create_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        collector_body: Annotated[Optional[VMwareCollector], Field(description="New or Updated VMware collector.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VMwareCollector]:
        """Create or Update VMware collector.

        Create or Update VMware collector

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param collector_body: New or Updated VMware collector.
        :type collector_body: VMwareCollector
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            collector_body=collector_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollector",
            '201': "VMwareCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def v_mware_collectors_create_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        collector_body: Annotated[Optional[VMwareCollector], Field(description="New or Updated VMware collector.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Create or Update VMware collector.

        Create or Update VMware collector

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param collector_body: New or Updated VMware collector.
        :type collector_body: VMwareCollector
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            collector_body=collector_body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollector",
            '201': "VMwareCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _v_mware_collectors_create_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        vm_ware_collector_name,
        api_version,
        accept_language,
        collector_body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if vm_ware_collector_name is not None:
            _path_params['vmWareCollectorName'] = vm_ware_collector_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter
        if collector_body is not None:
            _body_params = collector_body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/vmwarecollectors/{vmWareCollectorName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def v_mware_collectors_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Deletes VMware collector from the project.

        Delete a VMware collector from the project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def v_mware_collectors_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Deletes VMware collector from the project.

        Delete a VMware collector from the project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def v_mware_collectors_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes VMware collector from the project.

        Delete a VMware collector from the project.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _v_mware_collectors_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        vm_ware_collector_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if vm_ware_collector_name is not None:
            _path_params['vmWareCollectorName'] = vm_ware_collector_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/vmwarecollectors/{vmWareCollectorName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def v_mware_collectors_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VMwareCollector:
        """Get a VMware collector.

        Get a VMware collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def v_mware_collectors_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VMwareCollector]:
        """Get a VMware collector.

        Get a VMware collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def v_mware_collectors_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        vm_ware_collector_name: Annotated[StrictStr, Field(description="Unique name of a VMware collector within a project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a VMware collector.

        Get a VMware collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param vm_ware_collector_name: Unique name of a VMware collector within a project. (required)
        :type vm_ware_collector_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            vm_ware_collector_name=vm_ware_collector_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollector",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _v_mware_collectors_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        vm_ware_collector_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        if vm_ware_collector_name is not None:
            _path_params['vmWareCollectorName'] = vm_ware_collector_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/vmwarecollectors/{vmWareCollectorName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def v_mware_collectors_list_by_project(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> VMwareCollectorList:
        """Get a list of VMware collector.

        Get a list of VMware collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollectorList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def v_mware_collectors_list_by_project_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[VMwareCollectorList]:
        """Get a list of VMware collector.

        Get a list of VMware collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollectorList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def v_mware_collectors_list_by_project_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription Id in which project was created.")],
        resource_group_name: Annotated[StrictStr, Field(description="Name of the Azure Resource Group that project is part of.")],
        project_name: Annotated[StrictStr, Field(description="Name of the Azure Migrate project.")],
        api_version: Annotated[StrictStr, Field(description="Standard request header. Used by service to identify API version used by client.")],
        accept_language: Annotated[Optional[StrictStr], Field(description="Standard request header. Used by service to respond to client in appropriate language.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Get a list of VMware collector.

        Get a list of VMware collector.

        :param subscription_id: Azure Subscription Id in which project was created. (required)
        :type subscription_id: str
        :param resource_group_name: Name of the Azure Resource Group that project is part of. (required)
        :type resource_group_name: str
        :param project_name: Name of the Azure Migrate project. (required)
        :type project_name: str
        :param api_version: Standard request header. Used by service to identify API version used by client. (required)
        :type api_version: str
        :param accept_language: Standard request header. Used by service to respond to client in appropriate language.
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._v_mware_collectors_list_by_project_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            project_name=project_name,
            api_version=api_version,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "VMwareCollectorList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _v_mware_collectors_list_by_project_serialize(
        self,
        subscription_id,
        resource_group_name,
        project_name,
        api_version,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if project_name is not None:
            _path_params['projectName'] = project_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if accept_language is not None:
            _header_params['Accept-Language'] = accept_language
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Migrate/assessmentProjects/{projectName}/vmwarecollectors',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


