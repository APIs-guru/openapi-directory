# coding: utf-8

"""
    Azure Migrate V2

    Assess your workloads for Azure.

    The version of the OpenAPI document: 2019-10-01
    Contact: azuremigrate@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.collector_properties import CollectorProperties

class TestCollectorProperties(unittest.TestCase):
    """CollectorProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectorProperties:
        """Test CollectorProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectorProperties`
        """
        model = CollectorProperties()
        if include_optional:
            return CollectorProperties(
                agent_properties = openapi_client.models.collector_agent_properties.CollectorAgentProperties(
                    id = '', 
                    last_heartbeat_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    spn_details = openapi_client.models.collector_body_agent_spn_properties.CollectorBodyAgentSpnProperties(
                        application_id = '', 
                        audience = '', 
                        authority = '', 
                        object_id = '', 
                        tenant_id = '', ), 
                    version = '', ),
                created_timestamp = '',
                discovery_site_id = '',
                updated_timestamp = ''
            )
        else:
            return CollectorProperties(
        )
        """

    def testCollectorProperties(self):
        """Test CollectorProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
