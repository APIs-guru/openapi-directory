# coding: utf-8

"""
    Azure Migrate V2

    Assess your workloads for Azure.

    The version of the OpenAPI document: 2019-10-01
    Contact: azuremigrate@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.assessed_machine import AssessedMachine

class TestAssessedMachine(unittest.TestCase):
    """AssessedMachine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssessedMachine:
        """Test AssessedMachine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssessedMachine`
        """
        model = AssessedMachine()
        if include_optional:
            return AssessedMachine(
                e_tag = '',
                id = '',
                name = '',
                properties = openapi_client.models.assessed_machine_properties.AssessedMachineProperties(
                    boot_type = 'Unknown', 
                    confidence_rating_in_percentage = 1.337, 
                    created_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    datacenter_machine_arm_id = '', 
                    datacenter_management_server_arm_id = '', 
                    datacenter_management_server_name = '', 
                    description = '', 
                    disks = {
                        'key' : openapi_client.models.assessed_disk.AssessedDisk(
                            display_name = '', 
                            gigabytes_for_recommended_disk_size = 56, 
                            gigabytes_provisioned = 1.337, 
                            megabytes_per_second_of_read = 1.337, 
                            megabytes_per_second_of_write = 1.337, 
                            monthly_storage_cost = 1.337, 
                            name = '', 
                            number_of_read_operations_per_second = 1.337, 
                            number_of_write_operations_per_second = 1.337, 
                            recommended_disk_size = 'Unknown', 
                            recommended_disk_type = 'Unknown', 
                            suitability = 'Unknown', 
                            suitability_detail = 'None', 
                            suitability_explanation = 'Unknown', )
                        }, 
                    display_name = '', 
                    megabytes_of_memory = 1.337, 
                    megabytes_of_memory_for_recommended_size = 1.337, 
                    monthly_bandwidth_cost = 1.337, 
                    monthly_compute_cost_for_recommended_size = 1.337, 
                    monthly_premium_storage_cost = 1.337, 
                    monthly_standard_ssd_storage_cost = 1.337, 
                    monthly_storage_cost = 1.337, 
                    network_adapters = {
                        'key' : openapi_client.models.assessed_network_adapter.AssessedNetworkAdapter(
                            display_name = '', 
                            ip_addresses = [
                                ''
                                ], 
                            mac_address = '', 
                            megabytes_per_second_received = 1.337, 
                            megabytes_per_second_transmitted = 1.337, 
                            monthly_bandwidth_costs = 1.337, 
                            net_gigabytes_transmitted_per_month = 1.337, 
                            suitability = 'Unknown', 
                            suitability_detail = 'None', 
                            suitability_explanation = 'Unknown', )
                        }, 
                    number_of_cores = 56, 
                    number_of_cores_for_recommended_size = 56, 
                    operating_system_name = '', 
                    operating_system_type = '', 
                    operating_system_version = '', 
                    percentage_cores_utilization = 1.337, 
                    percentage_memory_utilization = 1.337, 
                    recommended_size = 'Unknown', 
                    suitability = 'Unknown', 
                    suitability_detail = 'None', 
                    suitability_explanation = 'Unknown', 
                    updated_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                type = ''
            )
        else:
            return AssessedMachine(
        )
        """

    def testAssessedMachine(self):
        """Test AssessedMachine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
