# coding: utf-8

"""
    Azure Migrate

    Move your workloads to Azure.

    The version of the OpenAPI document: 2018-02-02
    Contact: azuremigrate@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_assessed_machines_get(self) -> None:
        """Test case for assessed_machines_get

        Get an assessed machine.
        """
        pass

    def test_assessed_machines_list_by_assessment(self) -> None:
        """Test case for assessed_machines_list_by_assessment

        Get assessed machines for assessment.
        """
        pass

    def test_assessment_options_get(self) -> None:
        """Test case for assessment_options_get

        Get the assessment options.
        """
        pass

    def test_assessments_create(self) -> None:
        """Test case for assessments_create

        Create or Update assessment.
        """
        pass

    def test_assessments_delete(self) -> None:
        """Test case for assessments_delete

        Deletes an assessment from the project.
        """
        pass

    def test_assessments_get(self) -> None:
        """Test case for assessments_get

        Get an assessment.
        """
        pass

    def test_assessments_get_report_download_url(self) -> None:
        """Test case for assessments_get_report_download_url

        Get download URL for the assessment report.
        """
        pass

    def test_assessments_list_by_group(self) -> None:
        """Test case for assessments_list_by_group

        Get all assessments created for the specified group.
        """
        pass

    def test_assessments_list_by_project(self) -> None:
        """Test case for assessments_list_by_project

        Get all assessments created in the project.
        """
        pass

    def test_groups_create(self) -> None:
        """Test case for groups_create

        Create a new group with specified settings. If group with the name provided already exists, then the existing group is updated.
        """
        pass

    def test_groups_delete(self) -> None:
        """Test case for groups_delete

        Delete the group
        """
        pass

    def test_groups_get(self) -> None:
        """Test case for groups_get

        Get a specific group.
        """
        pass

    def test_groups_list_by_project(self) -> None:
        """Test case for groups_list_by_project

        Get all groups
        """
        pass

    def test_location_check_name_availability(self) -> None:
        """Test case for location_check_name_availability

        """
        pass

    def test_machines_get(self) -> None:
        """Test case for machines_get

        Get a specific machine.
        """
        pass

    def test_machines_list_by_project(self) -> None:
        """Test case for machines_list_by_project

        Get all machines in the project
        """
        pass

    def test_operations_list(self) -> None:
        """Test case for operations_list

        Get list of operations supported in the API.
        """
        pass

    def test_projects_create(self) -> None:
        """Test case for projects_create

        Create or update project.
        """
        pass

    def test_projects_delete(self) -> None:
        """Test case for projects_delete

        Delete the project
        """
        pass

    def test_projects_get(self) -> None:
        """Test case for projects_get

        Get the specified project.
        """
        pass

    def test_projects_get_keys(self) -> None:
        """Test case for projects_get_keys

        Get shared keys for the project.
        """
        pass

    def test_projects_list_by_resource_group(self) -> None:
        """Test case for projects_list_by_resource_group

        Get all projects.
        """
        pass

    def test_projects_list_by_subscription(self) -> None:
        """Test case for projects_list_by_subscription

        Get all projects.
        """
        pass

    def test_projects_update(self) -> None:
        """Test case for projects_update

        Update project.
        """
        pass


if __name__ == '__main__':
    unittest.main()
