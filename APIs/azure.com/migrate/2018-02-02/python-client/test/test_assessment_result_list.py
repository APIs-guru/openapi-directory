# coding: utf-8

"""
    Azure Migrate

    Move your workloads to Azure.

    The version of the OpenAPI document: 2018-02-02
    Contact: azuremigrate@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.assessment_result_list import AssessmentResultList

class TestAssessmentResultList(unittest.TestCase):
    """AssessmentResultList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssessmentResultList:
        """Test AssessmentResultList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssessmentResultList`
        """
        model = AssessmentResultList()
        if include_optional:
            return AssessmentResultList(
                value = [
                    openapi_client.models.assessment.Assessment(
                        e_tag = '', 
                        id = '', 
                        name = '', 
                        properties = openapi_client.models.assessment_properties.AssessmentProperties(
                            azure_hybrid_use_benefit = 'Unknown', 
                            azure_location = 'Unknown', 
                            azure_offer_code = 'Unknown', 
                            azure_pricing_tier = 'Standard', 
                            azure_storage_redundancy = 'Unknown', 
                            confidence_rating_in_percentage = 1.337, 
                            created_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            currency = 'Unknown', 
                            discount_percentage = 1.337, 
                            monthly_bandwidth_cost = 1.337, 
                            monthly_compute_cost = 1.337, 
                            monthly_storage_cost = 1.337, 
                            number_of_machines = 56, 
                            percentile = 'Percentile50', 
                            prices_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            scaling_factor = 1.337, 
                            sizing_criterion = 'PerformanceBased', 
                            stage = 'InProgress', 
                            status = 'Created', 
                            time_range = 'Day', 
                            updated_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = '', )
                    ]
            )
        else:
            return AssessmentResultList(
        )
        """

    def testAssessmentResultList(self):
        """Test AssessmentResultList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
