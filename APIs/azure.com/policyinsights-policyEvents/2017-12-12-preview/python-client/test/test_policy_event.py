# coding: utf-8

"""
    PolicyEventsClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-12-12-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.policy_event import PolicyEvent

class TestPolicyEvent(unittest.TestCase):
    """PolicyEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PolicyEvent:
        """Test PolicyEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PolicyEvent`
        """
        model = PolicyEvent()
        if include_optional:
            return PolicyEvent(
                odata_context = '',
                odata_id = '',
                effective_parameters = '',
                is_compliant = True,
                management_group_ids = '',
                policy_assignment_id = '',
                policy_assignment_name = '',
                policy_assignment_owner = '',
                policy_assignment_parameters = '',
                policy_assignment_scope = '',
                policy_definition_action = '',
                policy_definition_category = '',
                policy_definition_id = '',
                policy_definition_name = '',
                policy_definition_reference_id = '',
                policy_set_definition_category = '',
                policy_set_definition_id = '',
                policy_set_definition_name = '',
                policy_set_definition_owner = '',
                policy_set_definition_parameters = '',
                principal_oid = '',
                resource_group = '',
                resource_id = '',
                resource_location = '',
                resource_tags = '',
                resource_type = '',
                subscription_id = '',
                tenant_id = '',
                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PolicyEvent(
        )
        """

    def testPolicyEvent(self):
        """Test PolicyEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
