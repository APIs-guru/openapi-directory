# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on User entity in Azure API Management deployment. The User entity in API Management represents the developers that call the APIs of the products to which they are subscribed.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_subscription_list200_response_value_inner_properties import UserSubscriptionList200ResponseValueInnerProperties

class TestUserSubscriptionList200ResponseValueInnerProperties(unittest.TestCase):
    """UserSubscriptionList200ResponseValueInnerProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserSubscriptionList200ResponseValueInnerProperties:
        """Test UserSubscriptionList200ResponseValueInnerProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserSubscriptionList200ResponseValueInnerProperties`
        """
        model = UserSubscriptionList200ResponseValueInnerProperties()
        if include_optional:
            return UserSubscriptionList200ResponseValueInnerProperties(
                allow_tracing = True,
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                display_name = '',
                end_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                notification_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                owner_id = '',
                primary_key = '0',
                scope = '',
                secondary_key = '0',
                start_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                state = 'suspended',
                state_comment = ''
            )
        else:
            return UserSubscriptionList200ResponseValueInnerProperties(
                scope = '',
                state = 'suspended',
        )
        """

    def testUserSubscriptionList200ResponseValueInnerProperties(self):
        """Test UserSubscriptionList200ResponseValueInnerProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
