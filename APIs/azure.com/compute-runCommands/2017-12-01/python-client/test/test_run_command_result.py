# coding: utf-8

"""
    RunCommandsClient

    The Run Commands Client.

    The version of the OpenAPI document: 2017-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.run_command_result import RunCommandResult

class TestRunCommandResult(unittest.TestCase):
    """RunCommandResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RunCommandResult:
        """Test RunCommandResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RunCommandResult`
        """
        model = RunCommandResult()
        if include_optional:
            return RunCommandResult(
                properties = openapi_client.models.run_command_result_properties.RunCommandResultProperties(
                    output = openapi_client.models.output.output(), ),
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                error = openapi_client.models.api_error.ApiError(
                    code = '', 
                    details = [
                        openapi_client.models.api_error_base.ApiErrorBase(
                            code = '', 
                            message = '', 
                            target = '', )
                        ], 
                    innererror = openapi_client.models.inner_error.InnerError(
                        errordetail = '', 
                        exceptiontype = '', ), 
                    message = '', 
                    target = '', ),
                name = '',
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = ''
            )
        else:
            return RunCommandResult(
        )
        """

    def testRunCommandResult(self):
        """Test RunCommandResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
