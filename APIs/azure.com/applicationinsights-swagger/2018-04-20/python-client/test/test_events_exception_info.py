# coding: utf-8

"""
    Application Insights Data Plane

    This API exposes AI metric & event information and associated metadata

    The version of the OpenAPI document: 2018-04-20
    Contact: aiapi@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.events_exception_info import EventsExceptionInfo

class TestEventsExceptionInfo(unittest.TestCase):
    """EventsExceptionInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventsExceptionInfo:
        """Test EventsExceptionInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventsExceptionInfo`
        """
        model = EventsExceptionInfo()
        if include_optional:
            return EventsExceptionInfo(
                assembly = '',
                details = [
                    openapi_client.models.events_exception_detail.eventsExceptionDetail(
                        id = '', 
                        message = '', 
                        outer_id = '', 
                        parsed_stack = [
                            openapi_client.models.events_exception_details_parsed_stack.eventsExceptionDetailsParsedStack(
                                assembly = '', 
                                level = 56, 
                                line = 56, 
                                method = '', )
                            ], 
                        severity_level = '', 
                        type = '', )
                    ],
                handled_at = '',
                innermost_assembly = '',
                innermost_message = '',
                innermost_method = '',
                innermost_type = '',
                message = '',
                method = '',
                outer_assembly = '',
                outer_message = '',
                outer_method = '',
                outer_type = '',
                problem_id = '',
                severity_level = 56,
                type = ''
            )
        else:
            return EventsExceptionInfo(
        )
        """

    def testEventsExceptionInfo(self):
        """Test EventsExceptionInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
