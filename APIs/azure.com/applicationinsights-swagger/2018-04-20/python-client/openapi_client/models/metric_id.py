# coding: utf-8

"""
    Application Insights Data Plane

    This API exposes AI metric & event information and associated metadata

    The version of the OpenAPI document: 2018-04-20
    Contact: aiapi@microsoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class MetricId(str, Enum):
    """
    ID of the metric. This is either a standard AI metric, or an application-specific custom metric.
    """

    """
    allowed enum values
    """
    REQUESTS_SLASH_COUNT = 'requests/count'
    REQUESTS_SLASH_DURATION = 'requests/duration'
    REQUESTS_SLASH_FAILED = 'requests/failed'
    USERS_SLASH_COUNT = 'users/count'
    USERS_SLASH_AUTHENTICATED = 'users/authenticated'
    PAGE_VIEWS_SLASH_COUNT = 'pageViews/count'
    PAGE_VIEWS_SLASH_DURATION = 'pageViews/duration'
    CLIENT_SLASH_PROCESSING_DURATION = 'client/processingDuration'
    CLIENT_SLASH_RECEIVE_DURATION = 'client/receiveDuration'
    CLIENT_SLASH_NETWORK_DURATION = 'client/networkDuration'
    CLIENT_SLASH_SEND_DURATION = 'client/sendDuration'
    CLIENT_SLASH_TOTAL_DURATION = 'client/totalDuration'
    DEPENDENCIES_SLASH_COUNT = 'dependencies/count'
    DEPENDENCIES_SLASH_FAILED = 'dependencies/failed'
    DEPENDENCIES_SLASH_DURATION = 'dependencies/duration'
    EXCEPTIONS_SLASH_COUNT = 'exceptions/count'
    EXCEPTIONS_SLASH_BROWSER = 'exceptions/browser'
    EXCEPTIONS_SLASH_SERVER = 'exceptions/server'
    SESSIONS_SLASH_COUNT = 'sessions/count'
    PERFORMANCE_COUNTERS_SLASH_REQUEST_EXECUTION_TIME = 'performanceCounters/requestExecutionTime'
    PERFORMANCE_COUNTERS_SLASH_REQUESTS_PER_SECOND = 'performanceCounters/requestsPerSecond'
    PERFORMANCE_COUNTERS_SLASH_REQUESTS_IN_QUEUE = 'performanceCounters/requestsInQueue'
    PERFORMANCE_COUNTERS_SLASH_MEMORY_AVAILABLE_BYTES = 'performanceCounters/memoryAvailableBytes'
    PERFORMANCE_COUNTERS_SLASH_EXCEPTIONS_PER_SECOND = 'performanceCounters/exceptionsPerSecond'
    PERFORMANCE_COUNTERS_SLASH_PROCESS_CPU_PERCENTAGE = 'performanceCounters/processCpuPercentage'
    PERFORMANCE_COUNTERS_SLASH_PROCESS_IO_BYTES_PER_SECOND = 'performanceCounters/processIOBytesPerSecond'
    PERFORMANCE_COUNTERS_SLASH_PROCESS_PRIVATE_BYTES = 'performanceCounters/processPrivateBytes'
    PERFORMANCE_COUNTERS_SLASH_PROCESSOR_CPU_PERCENTAGE = 'performanceCounters/processorCpuPercentage'
    AVAILABILITY_RESULTS_SLASH_AVAILABILITY_PERCENTAGE = 'availabilityResults/availabilityPercentage'
    AVAILABILITY_RESULTS_SLASH_DURATION = 'availabilityResults/duration'
    BILLING_SLASH_TELEMETRY_COUNT = 'billing/telemetryCount'
    CUSTOM_EVENTS_SLASH_COUNT = 'customEvents/count'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of MetricId from a JSON string"""
        return cls(json.loads(json_str))


