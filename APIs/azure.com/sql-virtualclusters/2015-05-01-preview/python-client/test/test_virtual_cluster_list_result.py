# coding: utf-8

"""
    SqlManagementClient

    The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.

    The version of the OpenAPI document: 2015-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_cluster_list_result import VirtualClusterListResult

class TestVirtualClusterListResult(unittest.TestCase):
    """VirtualClusterListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualClusterListResult:
        """Test VirtualClusterListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualClusterListResult`
        """
        model = VirtualClusterListResult()
        if include_optional:
            return VirtualClusterListResult(
                next_link = '',
                value = [
                    openapi_client.models.virtual_cluster.VirtualCluster(
                        properties = openapi_client.models.virtual_cluster_properties.VirtualClusterProperties(
                            child_resources = [
                                ''
                                ], 
                            family = '', 
                            subnet_id = '', ), )
                    ]
            )
        else:
            return VirtualClusterListResult(
        )
        """

    def testVirtualClusterListResult(self):
        """Test VirtualClusterListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
