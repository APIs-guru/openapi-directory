# coding: utf-8

"""
    HybridComputeManagementClient

    The Hybrid Compute Management Client.

    The version of the OpenAPI document: 2019-03-18-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.machine import Machine

class TestMachine(unittest.TestCase):
    """Machine unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Machine:
        """Test Machine
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Machine`
        """
        model = Machine()
        if include_optional:
            return Machine(
                properties = openapi_client.models.machine_properties.MachineProperties(
                    agent_version = '', 
                    client_public_key = '', 
                    display_name = '', 
                    error_details = [
                        openapi_client.models.error_details/.Error details.(
                            code = '', 
                            details = [
                                openapi_client.models.error_details/.Error details.(
                                    code = '', 
                                    message = '', 
                                    target = '', )
                                ], 
                            message = '', 
                            target = '', )
                        ], 
                    last_status_change = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    machine_fqdn = '', 
                    os_name = '', 
                    os_profile = openapi_client.models.os_profile.OSProfile(
                        computer_name = '', ), 
                    os_version = '', 
                    physical_location = '', 
                    provisioning_state = '', 
                    status = 'Connected', 
                    vm_id = '', ),
                id = '',
                identity = openapi_client.models.managed_identity/.Managed Identity.(
                    principal_id = '', 
                    tenant_id = '', 
                    type = '', ),
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return Machine(
                location = '',
        )
        """

    def testMachine(self):
        """Test Machine"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
