# coding: utf-8

"""
    HybridComputeManagementClient

    The Hybrid Compute Management Client.

    The version of the OpenAPI document: 2019-12-12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.machine_properties import MachineProperties

class TestMachineProperties(unittest.TestCase):
    """MachineProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MachineProperties:
        """Test MachineProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MachineProperties`
        """
        model = MachineProperties()
        if include_optional:
            return MachineProperties(
                agent_version = '',
                client_public_key = '',
                display_name = '',
                error_details = [
                    openapi_client.models.error_details/.Error details.(
                        code = '', 
                        details = [
                            openapi_client.models.error_details/.Error details.(
                                code = '', 
                                message = '', 
                                target = '', )
                            ], 
                        message = '', 
                        target = '', )
                    ],
                extensions = [
                    openapi_client.models.machine_extension_instance_view.MachineExtensionInstanceView(
                        name = '', 
                        status = openapi_client.models.machine_extension_instance_view_status.MachineExtensionInstanceView_status(
                            code = '', 
                            display_status = '', 
                            level = 'Info', 
                            message = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = '', 
                        type_handler_version = '', )
                    ],
                last_status_change = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                location_data = openapi_client.models.machine_properties_location_data.MachineProperties_locationData(
                    city = '', 
                    country_or_region = '', 
                    district = '', 
                    name = '', ),
                machine_fqdn = '',
                os_name = '',
                os_profile = openapi_client.models.os_profile.OSProfile(
                    computer_name = '', ),
                os_version = '',
                provisioning_state = '',
                status = 'Connected',
                vm_id = ''
            )
        else:
            return MachineProperties(
        )
        """

    def testMachineProperties(self):
        """Test MachineProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
