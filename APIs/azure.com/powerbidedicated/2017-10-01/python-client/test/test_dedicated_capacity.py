# coding: utf-8

"""
    PowerBIDedicated

    PowerBI Dedicated Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Power BI dedicated capacities

    The version of the OpenAPI document: 2017-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dedicated_capacity import DedicatedCapacity

class TestDedicatedCapacity(unittest.TestCase):
    """DedicatedCapacity unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DedicatedCapacity:
        """Test DedicatedCapacity
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DedicatedCapacity`
        """
        model = DedicatedCapacity()
        if include_optional:
            return DedicatedCapacity(
                properties = openapi_client.models.dedicated_capacity_properties.DedicatedCapacityProperties(
                    provisioning_state = 'Deleting', 
                    state = 'Deleting', ),
                id = '',
                location = '',
                name = '',
                sku = openapi_client.models.resource_sku.ResourceSku(
                    name = '', 
                    tier = 'PBIE_Azure', ),
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return DedicatedCapacity(
                location = '',
                sku = openapi_client.models.resource_sku.ResourceSku(
                    name = '', 
                    tier = 'PBIE_Azure', ),
        )
        """

    def testDedicatedCapacity(self):
        """Test DedicatedCapacity"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
