# coding: utf-8

"""
    Azure SQL Database Datamasking Policies and Rules

    Provides create, read, update and delete functionality for Azure SQL Database datamasking policies and rules.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_masking_policy import DataMaskingPolicy

class TestDataMaskingPolicy(unittest.TestCase):
    """DataMaskingPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataMaskingPolicy:
        """Test DataMaskingPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataMaskingPolicy`
        """
        model = DataMaskingPolicy()
        if include_optional:
            return DataMaskingPolicy(
                kind = '',
                location = '',
                properties = openapi_client.models.data_masking_policy_properties.DataMaskingPolicyProperties(
                    application_principals = '', 
                    data_masking_state = 'Disabled', 
                    exempt_principals = '', 
                    masking_level = '', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return DataMaskingPolicy(
        )
        """

    def testDataMaskingPolicy(self):
        """Test DataMaskingPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
