# coding: utf-8

"""
    CdnManagementClient

    Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.

    The version of the OpenAPI document: 2017-10-12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_managed_https_parameters import UserManagedHttpsParameters

class TestUserManagedHttpsParameters(unittest.TestCase):
    """UserManagedHttpsParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserManagedHttpsParameters:
        """Test UserManagedHttpsParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserManagedHttpsParameters`
        """
        model = UserManagedHttpsParameters()
        if include_optional:
            return UserManagedHttpsParameters(
                certificate_source_parameters = openapi_client.models.key_vault_certificate_source_parameters.KeyVaultCertificateSourceParameters(
                    @odata/type = '#Microsoft.Azure.Cdn.Models.KeyVaultCertificateSourceParameters', 
                    delete_rule = 'NoAction', 
                    resource_group_name = '', 
                    secret_name = '', 
                    secret_version = '', 
                    subscription_id = '', 
                    update_rule = 'NoAction', 
                    vault_name = '', )
            )
        else:
            return UserManagedHttpsParameters(
                certificate_source_parameters = openapi_client.models.key_vault_certificate_source_parameters.KeyVaultCertificateSourceParameters(
                    @odata/type = '#Microsoft.Azure.Cdn.Models.KeyVaultCertificateSourceParameters', 
                    delete_rule = 'NoAction', 
                    resource_group_name = '', 
                    secret_name = '', 
                    secret_version = '', 
                    subscription_id = '', 
                    update_rule = 'NoAction', 
                    vault_name = '', ),
        )
        """

    def testUserManagedHttpsParameters(self):
        """Test UserManagedHttpsParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
