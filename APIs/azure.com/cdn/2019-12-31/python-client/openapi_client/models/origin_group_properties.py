# coding: utf-8

"""
    CdnManagementClient

    Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.

    The version of the OpenAPI document: 2019-12-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from typing_extensions import Annotated
from openapi_client.models.health_probe_parameters import HealthProbeParameters
from openapi_client.models.resource_reference import ResourceReference
from openapi_client.models.response_based_origin_error_detection_parameters import ResponseBasedOriginErrorDetectionParameters
from typing import Optional, Set
from typing_extensions import Self

class OriginGroupProperties(BaseModel):
    """
    The JSON object that contains the properties of the origin group.
    """ # noqa: E501
    provisioning_state: Optional[StrictStr] = Field(default=None, description="Provisioning status of the origin group.", alias="provisioningState")
    resource_state: Optional[StrictStr] = Field(default=None, description="Resource status of the origin group.", alias="resourceState")
    health_probe_settings: Optional[HealthProbeParameters] = Field(default=None, alias="healthProbeSettings")
    origins: Optional[List[ResourceReference]] = Field(default=None, description="The source of the content being delivered via CDN within given origin group.")
    response_based_origin_error_detection_settings: Optional[ResponseBasedOriginErrorDetectionParameters] = Field(default=None, alias="responseBasedOriginErrorDetectionSettings")
    traffic_restoration_time_to_healed_or_new_endpoints_in_minutes: Optional[Annotated[int, Field(le=50, strict=True, ge=0)]] = Field(default=None, description="Time in minutes to shift the traffic to the endpoint gradually when an unhealthy endpoint comes healthy or a new endpoint is added. Default is 10 mins. This property is currently not supported.", alias="trafficRestorationTimeToHealedOrNewEndpointsInMinutes")
    __properties: ClassVar[List[str]] = ["healthProbeSettings", "origins", "responseBasedOriginErrorDetectionSettings", "trafficRestorationTimeToHealedOrNewEndpointsInMinutes"]

    @field_validator('resource_state')
    def resource_state_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        if value not in set(['Creating', 'Active', 'Deleting']):
            raise ValueError("must be one of enum values ('Creating', 'Active', 'Deleting')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of OriginGroupProperties from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        * OpenAPI `readOnly` fields are excluded.
        * OpenAPI `readOnly` fields are excluded.
        """
        excluded_fields: Set[str] = set([
            "provisioning_state",
            "resource_state",
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of health_probe_settings
        if self.health_probe_settings:
            _dict['healthProbeSettings'] = self.health_probe_settings.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in origins (list)
        _items = []
        if self.origins:
            for _item_origins in self.origins:
                if _item_origins:
                    _items.append(_item_origins.to_dict())
            _dict['origins'] = _items
        # override the default output from pydantic by calling `to_dict()` of response_based_origin_error_detection_settings
        if self.response_based_origin_error_detection_settings:
            _dict['responseBasedOriginErrorDetectionSettings'] = self.response_based_origin_error_detection_settings.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of OriginGroupProperties from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "healthProbeSettings": HealthProbeParameters.from_dict(obj["healthProbeSettings"]) if obj.get("healthProbeSettings") is not None else None,
            "origins": [ResourceReference.from_dict(_item) for _item in obj["origins"]] if obj.get("origins") is not None else None,
            "responseBasedOriginErrorDetectionSettings": ResponseBasedOriginErrorDetectionParameters.from_dict(obj["responseBasedOriginErrorDetectionSettings"]) if obj.get("responseBasedOriginErrorDetectionSettings") is not None else None,
            "trafficRestorationTimeToHealedOrNewEndpointsInMinutes": obj.get("trafficRestorationTimeToHealedOrNewEndpointsInMinutes")
        })
        return _obj


