# coding: utf-8

"""
    CdnManagementClient

    Use these APIs to manage Azure CDN resources through the Azure Resource Manager. You must make sure that requests made to these resources are secure.

    The version of the OpenAPI document: 2019-06-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.endpoint import Endpoint
from openapi_client.models.endpoint_list_result import EndpointListResult
from openapi_client.models.endpoint_update_parameters import EndpointUpdateParameters
from openapi_client.models.load_parameters import LoadParameters
from openapi_client.models.purge_parameters import PurgeParameters
from openapi_client.models.resource_usage_list_result import ResourceUsageListResult
from openapi_client.models.validate_custom_domain_input import ValidateCustomDomainInput
from openapi_client.models.validate_custom_domain_output import ValidateCustomDomainOutput

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class EndpointsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def endpoints_create(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        endpoint: Annotated[Endpoint, Field(description="Endpoint properties")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Endpoint:
        """endpoints_create

        Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param endpoint: Endpoint properties (required)
        :type endpoint: Endpoint
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_create_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            endpoint=endpoint,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '201': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_create_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        endpoint: Annotated[Endpoint, Field(description="Endpoint properties")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Endpoint]:
        """endpoints_create

        Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param endpoint: Endpoint properties (required)
        :type endpoint: Endpoint
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_create_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            endpoint=endpoint,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '201': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_create_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        endpoint: Annotated[Endpoint, Field(description="Endpoint properties")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_create

        Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param endpoint: Endpoint properties (required)
        :type endpoint: Endpoint
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_create_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            endpoint=endpoint,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '201': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_create_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        endpoint,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if endpoint is not None:
            _body_params = endpoint


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_delete(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """endpoints_delete

        Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_delete_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_delete_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """endpoints_delete

        Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_delete_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_delete_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_delete

        Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_delete_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_delete_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_get(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Endpoint:
        """endpoints_get

        Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_get_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_get_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Endpoint]:
        """endpoints_get

        Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_get_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_get_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_get

        Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_get_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_get_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_list_by_profile(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EndpointListResult:
        """endpoints_list_by_profile

        Lists existing CDN endpoints.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_list_by_profile_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EndpointListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_list_by_profile_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EndpointListResult]:
        """endpoints_list_by_profile

        Lists existing CDN endpoints.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_list_by_profile_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EndpointListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_list_by_profile_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_list_by_profile

        Lists existing CDN endpoints.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_list_by_profile_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EndpointListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_list_by_profile_serialize(
        self,
        resource_group_name,
        profile_name,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_list_resource_usage(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ResourceUsageListResult:
        """endpoints_list_resource_usage

        Checks the quota and usage of geo filters and custom domains under the given endpoint.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_list_resource_usage_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ResourceUsageListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_list_resource_usage_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ResourceUsageListResult]:
        """endpoints_list_resource_usage

        Checks the quota and usage of geo filters and custom domains under the given endpoint.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_list_resource_usage_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ResourceUsageListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_list_resource_usage_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_list_resource_usage

        Checks the quota and usage of geo filters and custom domains under the given endpoint.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_list_resource_usage_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ResourceUsageListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_list_resource_usage_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/checkResourceUsage',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_load_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        content_file_paths: Annotated[LoadParameters, Field(description="The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file ")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """endpoints_load_content

        Pre-loads a content to CDN. Available for Verizon Profiles.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param content_file_paths: The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file  (required)
        :type content_file_paths: LoadParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_load_content_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            content_file_paths=content_file_paths,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_load_content_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        content_file_paths: Annotated[LoadParameters, Field(description="The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file ")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """endpoints_load_content

        Pre-loads a content to CDN. Available for Verizon Profiles.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param content_file_paths: The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file  (required)
        :type content_file_paths: LoadParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_load_content_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            content_file_paths=content_file_paths,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_load_content_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        content_file_paths: Annotated[LoadParameters, Field(description="The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file ")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_load_content

        Pre-loads a content to CDN. Available for Verizon Profiles.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param content_file_paths: The path to the content to be loaded. Path should be a full URL, e.g. ‘/pictures/city.png' which loads a single file  (required)
        :type content_file_paths: LoadParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_load_content_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            content_file_paths=content_file_paths,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_load_content_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        content_file_paths,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if content_file_paths is not None:
            _body_params = content_file_paths


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/load',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_purge_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        content_file_paths: Annotated[PurgeParameters, Field(description="The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """endpoints_purge_content

        Removes a content from CDN.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param content_file_paths: The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory. (required)
        :type content_file_paths: PurgeParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_purge_content_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            content_file_paths=content_file_paths,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_purge_content_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        content_file_paths: Annotated[PurgeParameters, Field(description="The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """endpoints_purge_content

        Removes a content from CDN.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param content_file_paths: The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory. (required)
        :type content_file_paths: PurgeParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_purge_content_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            content_file_paths=content_file_paths,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_purge_content_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        content_file_paths: Annotated[PurgeParameters, Field(description="The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_purge_content

        Removes a content from CDN.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param content_file_paths: The path to the content to be purged. Path can be a full URL, e.g. '/pictures/city.png' which removes a single file, or a directory with a wildcard, e.g. '/pictures/*' which removes all folders and files in the directory. (required)
        :type content_file_paths: PurgeParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_purge_content_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            content_file_paths=content_file_paths,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_purge_content_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        content_file_paths,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if content_file_paths is not None:
            _body_params = content_file_paths


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/purge',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_start(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Endpoint:
        """endpoints_start

        Starts an existing CDN endpoint that is on a stopped state.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_start_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_start_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Endpoint]:
        """endpoints_start

        Starts an existing CDN endpoint that is on a stopped state.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_start_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_start_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_start

        Starts an existing CDN endpoint that is on a stopped state.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_start_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_start_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/start',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_stop(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Endpoint:
        """endpoints_stop

        Stops an existing running CDN endpoint.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_stop_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_stop_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Endpoint]:
        """endpoints_stop

        Stops an existing running CDN endpoint.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_stop_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_stop_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_stop

        Stops an existing running CDN endpoint.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_stop_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_stop_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/stop',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_update(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        endpoint_update_properties: Annotated[EndpointUpdateParameters, Field(description="Endpoint update properties")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Endpoint:
        """endpoints_update

        Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags and Origin HostHeader can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update custom domains, use the Update Custom Domain operation.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param endpoint_update_properties: Endpoint update properties (required)
        :type endpoint_update_properties: EndpointUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_update_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            endpoint_update_properties=endpoint_update_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_update_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        endpoint_update_properties: Annotated[EndpointUpdateParameters, Field(description="Endpoint update properties")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Endpoint]:
        """endpoints_update

        Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags and Origin HostHeader can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update custom domains, use the Update Custom Domain operation.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param endpoint_update_properties: Endpoint update properties (required)
        :type endpoint_update_properties: EndpointUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_update_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            endpoint_update_properties=endpoint_update_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_update_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        endpoint_update_properties: Annotated[EndpointUpdateParameters, Field(description="Endpoint update properties")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_update

        Updates an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile. Only tags and Origin HostHeader can be updated after creating an endpoint. To update origins, use the Update Origin operation. To update custom domains, use the Update Custom Domain operation.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param endpoint_update_properties: Endpoint update properties (required)
        :type endpoint_update_properties: EndpointUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_update_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            endpoint_update_properties=endpoint_update_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Endpoint",
            '202': "Endpoint",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_update_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        endpoint_update_properties,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if endpoint_update_properties is not None:
            _body_params = endpoint_update_properties


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def endpoints_validate_custom_domain(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        custom_domain_properties: Annotated[ValidateCustomDomainInput, Field(description="Custom domain to be validated.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ValidateCustomDomainOutput:
        """endpoints_validate_custom_domain

        Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param custom_domain_properties: Custom domain to be validated. (required)
        :type custom_domain_properties: ValidateCustomDomainInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_validate_custom_domain_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            custom_domain_properties=custom_domain_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateCustomDomainOutput",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def endpoints_validate_custom_domain_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        custom_domain_properties: Annotated[ValidateCustomDomainInput, Field(description="Custom domain to be validated.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ValidateCustomDomainOutput]:
        """endpoints_validate_custom_domain

        Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param custom_domain_properties: Custom domain to be validated. (required)
        :type custom_domain_properties: ValidateCustomDomainInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_validate_custom_domain_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            custom_domain_properties=custom_domain_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateCustomDomainOutput",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def endpoints_validate_custom_domain_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, max_length=90, description="Name of the Resource group within the Azure subscription.")],
        profile_name: Annotated[StrictStr, Field(description="Name of the CDN profile which is unique within the resource group.")],
        endpoint_name: Annotated[StrictStr, Field(description="Name of the endpoint under the profile which is unique globally.")],
        subscription_id: Annotated[StrictStr, Field(description="Azure Subscription ID.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. Current version is 2017-04-02.")],
        custom_domain_properties: Annotated[ValidateCustomDomainInput, Field(description="Custom domain to be validated.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """endpoints_validate_custom_domain

        Validates the custom domain mapping to ensure it maps to the correct CDN endpoint in DNS.

        :param resource_group_name: Name of the Resource group within the Azure subscription. (required)
        :type resource_group_name: str
        :param profile_name: Name of the CDN profile which is unique within the resource group. (required)
        :type profile_name: str
        :param endpoint_name: Name of the endpoint under the profile which is unique globally. (required)
        :type endpoint_name: str
        :param subscription_id: Azure Subscription ID. (required)
        :type subscription_id: str
        :param api_version: Version of the API to be used with the client request. Current version is 2017-04-02. (required)
        :type api_version: str
        :param custom_domain_properties: Custom domain to be validated. (required)
        :type custom_domain_properties: ValidateCustomDomainInput
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._endpoints_validate_custom_domain_serialize(
            resource_group_name=resource_group_name,
            profile_name=profile_name,
            endpoint_name=endpoint_name,
            subscription_id=subscription_id,
            api_version=api_version,
            custom_domain_properties=custom_domain_properties,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateCustomDomainOutput",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _endpoints_validate_custom_domain_serialize(
        self,
        resource_group_name,
        profile_name,
        endpoint_name,
        subscription_id,
        api_version,
        custom_domain_properties,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if profile_name is not None:
            _path_params['profileName'] = profile_name
        if endpoint_name is not None:
            _path_params['endpointName'] = endpoint_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if custom_domain_properties is not None:
            _body_params = custom_domain_properties


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/endpoints/{endpointName}/validateCustomDomain',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


