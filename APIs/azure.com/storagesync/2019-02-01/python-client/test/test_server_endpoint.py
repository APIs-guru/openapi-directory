# coding: utf-8

"""
    Microsoft Storage Sync

    Microsoft Storage Sync Service API

    The version of the OpenAPI document: 2019-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.server_endpoint import ServerEndpoint

class TestServerEndpoint(unittest.TestCase):
    """ServerEndpoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServerEndpoint:
        """Test ServerEndpoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServerEndpoint`
        """
        model = ServerEndpoint()
        if include_optional:
            return ServerEndpoint(
                properties = openapi_client.models.server_endpoint_properties.ServerEndpointProperties(
                    cloud_tiering = 'on', 
                    friendly_name = '', 
                    last_operation_name = '', 
                    last_workflow_id = '', 
                    offline_data_transfer = 'on', 
                    offline_data_transfer_share_name = '', 
                    offline_data_transfer_storage_account_resource_id = '', 
                    offline_data_transfer_storage_account_tenant_id = '', 
                    provisioning_state = '', 
                    server_local_path = '', 
                    server_resource_id = '', 
                    sync_status = openapi_client.models.server_endpoint_sync_status.ServerEndpointSyncStatus(
                        combined_health = 'Healthy', 
                        download_activity = openapi_client.models.sync_activity_status.SyncActivityStatus(
                            applied_bytes = 56, 
                            applied_item_count = 56, 
                            per_item_error_count = 56, 
                            timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            total_bytes = 56, 
                            total_item_count = 56, ), 
                        download_health = 'Healthy', 
                        download_status = openapi_client.models.sync_session_status.SyncSessionStatus(
                            files_not_syncing_errors = [
                                openapi_client.models.files_not_syncing_error.FilesNotSyncingError(
                                    error_code = 56, 
                                    persistent_count = 56, 
                                    transient_count = 56, )
                                ], 
                            last_sync_per_item_error_count = 56, 
                            last_sync_result = 56, 
                            last_sync_success_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_sync_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            persistent_files_not_syncing_count = 56, 
                            transient_files_not_syncing_count = 56, ), 
                        last_updated_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        offline_data_transfer_status = 'InProgress', 
                        sync_activity = 'Upload', 
                        total_persistent_files_not_syncing_count = 56, 
                        upload_activity = openapi_client.models.sync_activity_status.SyncActivityStatus(
                            applied_bytes = 56, 
                            applied_item_count = 56, 
                            per_item_error_count = 56, 
                            timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            total_bytes = 56, 
                            total_item_count = 56, ), 
                        upload_health = 'Healthy', 
                        upload_status = openapi_client.models.sync_session_status.SyncSessionStatus(
                            last_sync_per_item_error_count = 56, 
                            last_sync_result = 56, 
                            last_sync_success_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            last_sync_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            persistent_files_not_syncing_count = 56, 
                            transient_files_not_syncing_count = 56, ), ), 
                    tier_files_older_than_days = 0, 
                    volume_free_space_percent = 0, ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return ServerEndpoint(
        )
        """

    def testServerEndpoint(self):
        """Test ServerEndpoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
