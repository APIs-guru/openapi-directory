# coding: utf-8

"""
    Microsoft Storage Sync

    Microsoft Storage Sync Service API

    The version of the OpenAPI document: 2018-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.storage_sync_error import StorageSyncError

class TestStorageSyncError(unittest.TestCase):
    """StorageSyncError unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageSyncError:
        """Test StorageSyncError
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageSyncError`
        """
        model = StorageSyncError()
        if include_optional:
            return StorageSyncError(
                error = openapi_client.models.storage_sync_api_error.StorageSyncApiError(
                    code = '', 
                    details = openapi_client.models.storage_sync_error_details.StorageSyncErrorDetails(
                        code = '', 
                        message = '', 
                        target = '', ), 
                    message = '', 
                    target = '', ),
                innererror = openapi_client.models.storage_sync_api_error.StorageSyncApiError(
                    code = '', 
                    details = openapi_client.models.storage_sync_error_details.StorageSyncErrorDetails(
                        code = '', 
                        message = '', 
                        target = '', ), 
                    message = '', 
                    target = '', )
            )
        else:
            return StorageSyncError(
        )
        """

    def testStorageSyncError(self):
        """Test StorageSyncError"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
