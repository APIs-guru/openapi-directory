# coding: utf-8

"""
    Microsoft Storage Sync

    Microsoft Storage Sync Service API

    The version of the OpenAPI document: 2018-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.restore_file_spec import RestoreFileSpec
from typing import Optional, Set
from typing_extensions import Self

class PreRestoreRequest(BaseModel):
    """
    Pre Restore request object.
    """ # noqa: E501
    azure_file_share_uri: Optional[StrictStr] = Field(default=None, description="Pre Restore Azure file share uri.", alias="azureFileShareUri")
    backup_metadata_property_bag: Optional[StrictStr] = Field(default=None, description="Pre Restore backup metadata property bag.", alias="backupMetadataPropertyBag")
    partition: Optional[StrictStr] = Field(default=None, description="Pre Restore partition.")
    pause_wait_for_sync_drain_time_period_in_seconds: Optional[StrictInt] = Field(default=None, description="Pre Restore pause wait for sync drain time period in seconds.", alias="pauseWaitForSyncDrainTimePeriodInSeconds")
    replica_group: Optional[StrictStr] = Field(default=None, description="Pre Restore replica group.", alias="replicaGroup")
    request_id: Optional[StrictStr] = Field(default=None, description="Pre Restore request id.", alias="requestId")
    restore_file_spec: Optional[List[RestoreFileSpec]] = Field(default=None, description="Pre Restore restore file spec array.", alias="restoreFileSpec")
    source_azure_file_share_uri: Optional[StrictStr] = Field(default=None, description="Pre Restore Azure source azure file share uri.", alias="sourceAzureFileShareUri")
    status: Optional[StrictStr] = Field(default=None, description="Pre Restore Azure status.")
    __properties: ClassVar[List[str]] = ["azureFileShareUri", "backupMetadataPropertyBag", "partition", "pauseWaitForSyncDrainTimePeriodInSeconds", "replicaGroup", "requestId", "restoreFileSpec", "sourceAzureFileShareUri", "status"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of PreRestoreRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of each item in restore_file_spec (list)
        _items = []
        if self.restore_file_spec:
            for _item_restore_file_spec in self.restore_file_spec:
                if _item_restore_file_spec:
                    _items.append(_item_restore_file_spec.to_dict())
            _dict['restoreFileSpec'] = _items
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of PreRestoreRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "azureFileShareUri": obj.get("azureFileShareUri"),
            "backupMetadataPropertyBag": obj.get("backupMetadataPropertyBag"),
            "partition": obj.get("partition"),
            "pauseWaitForSyncDrainTimePeriodInSeconds": obj.get("pauseWaitForSyncDrainTimePeriodInSeconds"),
            "replicaGroup": obj.get("replicaGroup"),
            "requestId": obj.get("requestId"),
            "restoreFileSpec": [RestoreFileSpec.from_dict(_item) for _item in obj["restoreFileSpec"]] if obj.get("restoreFileSpec") is not None else None,
            "sourceAzureFileShareUri": obj.get("sourceAzureFileShareUri"),
            "status": obj.get("status")
        })
        return _obj


