# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs to manage Azure API Management deployment.

    The version of the OpenAPI document: 2016-07-07
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_management_service_base_parameters import ApiManagementServiceBaseParameters

class TestApiManagementServiceBaseParameters(unittest.TestCase):
    """ApiManagementServiceBaseParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiManagementServiceBaseParameters:
        """Test ApiManagementServiceBaseParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiManagementServiceBaseParameters`
        """
        model = ApiManagementServiceBaseParameters()
        if include_optional:
            return ApiManagementServiceBaseParameters(
                properties = openapi_client.models.api_management_service_properties.ApiManagementServiceProperties(
                    additional_locations = [
                        openapi_client.models.additional_region.AdditionalRegion(
                            location = '', 
                            sku_type = 'Developer', 
                            sku_unit_count = 56, 
                            static_ips = [
                                ''
                                ], 
                            vpnconfiguration = openapi_client.models.virtual_network_configuration.VirtualNetworkConfiguration(
                                location = '', 
                                subnet_resource_id = '', 
                                subnetname = '', 
                                vnetid = '', ), )
                        ], 
                    addresser_email = '', 
                    created_at_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    custom_properties = {
                        'key' : ''
                        }, 
                    hostname_configurations = [
                        openapi_client.models.hostname_configuration.HostnameConfiguration(
                            certificate = openapi_client.models.certificate_information.CertificateInformation(
                                expiry = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                subject = '', 
                                thumbprint = '', ), 
                            hostname = '', 
                            type = 'Proxy', )
                        ], 
                    management_api_url = '', 
                    portal_url = '', 
                    provisioning_state = '', 
                    publisher_email = '', 
                    publisher_name = '', 
                    runtime_url = '', 
                    scm_url = '', 
                    static_ips = [
                        ''
                        ], 
                    target_provisioning_state = '', 
                    vpn_type = 'None', 
                    vpnconfiguration = openapi_client.models.virtual_network_configuration.VirtualNetworkConfiguration(
                        location = '', 
                        subnet_resource_id = '', 
                        subnetname = '', 
                        vnetid = '', ), ),
                sku = openapi_client.models.api_management_service_sku_properties.ApiManagementServiceSkuProperties(
                    capacity = 56, 
                    name = 'Developer', ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return ApiManagementServiceBaseParameters(
        )
        """

    def testApiManagementServiceBaseParameters(self):
        """Test ApiManagementServiceBaseParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
