# coding: utf-8

"""
    ComputeDiskAdminManagementClient

    The Admin Compute Disk Management Client.

    The version of the OpenAPI document: 2018-07-30-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.migration_sub_task import MigrationSubTask

class TestMigrationSubTask(unittest.TestCase):
    """MigrationSubTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MigrationSubTask:
        """Test MigrationSubTask
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MigrationSubTask`
        """
        model = MigrationSubTask()
        if include_optional:
            return MigrationSubTask(
                migration_sub_task_id = '',
                properties = openapi_client.models.disk_migration_jobs_list_200_response_value_inner_properties_subtasks_inner_properties.DiskMigrationJobs_List_200_response_value_inner_properties_subtasks_inner_properties(
                    disk_id = '', 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    migration_subtask_status = 'Undefined', 
                    reason = '', 
                    source_share = '', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    target_disk_state_for_migration = 'Undefined', 
                    target_share = '', )
            )
        else:
            return MigrationSubTask(
        )
        """

    def testMigrationSubTask(self):
        """Test MigrationSubTask"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
