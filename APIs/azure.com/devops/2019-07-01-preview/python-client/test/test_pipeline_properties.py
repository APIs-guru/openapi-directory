# coding: utf-8

"""
    Azure DevOps

    Azure DevOps Resource Provider

    The version of the OpenAPI document: 2019-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pipeline_properties import PipelineProperties

class TestPipelineProperties(unittest.TestCase):
    """PipelineProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PipelineProperties:
        """Test PipelineProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PipelineProperties`
        """
        model = PipelineProperties()
        if include_optional:
            return PipelineProperties(
                bootstrap_configuration = openapi_client.models.bootstrap_configuration.BootstrapConfiguration(
                    repository = openapi_client.models.code_repository.CodeRepository(
                        authorization = openapi_client.models.authorization.Authorization(
                            authorization_type = 'personalAccessToken', 
                            parameters = {
                                'key' : ''
                                }, ), 
                        default_branch = '', 
                        id = '', 
                        properties = {
                            'key' : ''
                            }, 
                        repository_type = 'gitHub', ), 
                    template = openapi_client.models.pipeline_template.PipelineTemplate(
                        id = '', ), ),
                organization = openapi_client.models.organization_reference.OrganizationReference(
                    id = '', 
                    name = '', ),
                pipeline_id = 56,
                project = openapi_client.models.project_reference.ProjectReference(
                    id = '', 
                    name = '', )
            )
        else:
            return PipelineProperties(
                bootstrap_configuration = openapi_client.models.bootstrap_configuration.BootstrapConfiguration(
                    repository = openapi_client.models.code_repository.CodeRepository(
                        authorization = openapi_client.models.authorization.Authorization(
                            authorization_type = 'personalAccessToken', 
                            parameters = {
                                'key' : ''
                                }, ), 
                        default_branch = '', 
                        id = '', 
                        properties = {
                            'key' : ''
                            }, 
                        repository_type = 'gitHub', ), 
                    template = openapi_client.models.pipeline_template.PipelineTemplate(
                        id = '', ), ),
                organization = openapi_client.models.organization_reference.OrganizationReference(
                    id = '', 
                    name = '', ),
                project = openapi_client.models.project_reference.ProjectReference(
                    id = '', 
                    name = '', ),
        )
        """

    def testPipelineProperties(self):
        """Test PipelineProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
