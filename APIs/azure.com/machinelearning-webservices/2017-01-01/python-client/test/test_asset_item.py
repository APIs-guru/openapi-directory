# coding: utf-8

"""
    Azure ML Web Services Management Client

    These APIs allow end users to operate on Azure Machine Learning Web Services resources. They support the following operations:<ul><li>Create or update a web service</li><li>Get a web service</li><li>Patch a web service</li><li>Delete a web service</li><li>Get All Web Services in a Resource Group </li><li>Get All Web Services in a Subscription</li><li>Get Web Services Keys</li></ul>

    The version of the OpenAPI document: 2017-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.asset_item import AssetItem

class TestAssetItem(unittest.TestCase):
    """AssetItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AssetItem:
        """Test AssetItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AssetItem`
        """
        model = AssetItem()
        if include_optional:
            return AssetItem(
                id = '',
                input_ports = {
                    'key' : openapi_client.models.input_port.InputPort(
                        type = 'Dataset', )
                    },
                location_info = openapi_client.models.blob_location.BlobLocation(
                    credentials = '', 
                    uri = '', ),
                metadata = {
                    'key' : ''
                    },
                name = '',
                output_ports = {
                    'key' : openapi_client.models.output_port.OutputPort(
                        type = 'Dataset', )
                    },
                parameters = [
                    openapi_client.models.module_asset_parameter.ModuleAssetParameter(
                        mode_values_info = {
                            'key' : openapi_client.models.mode_value_info.ModeValueInfo(
                                interface_string = '', 
                                parameters = [
                                    openapi_client.models.module_asset_parameter.ModuleAssetParameter(
                                        name = '', 
                                        parameter_type = '', )
                                    ], )
                            }, 
                        name = '', 
                        parameter_type = '', )
                    ],
                type = 'Module'
            )
        else:
            return AssetItem(
                location_info = openapi_client.models.blob_location.BlobLocation(
                    credentials = '', 
                    uri = '', ),
                name = '',
                type = 'Module',
        )
        """

    def testAssetItem(self):
        """Test AssetItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
