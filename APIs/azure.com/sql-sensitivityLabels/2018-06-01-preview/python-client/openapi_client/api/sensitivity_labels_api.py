# coding: utf-8

"""
    SqlManagementClient

    The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.sensitivity_label import SensitivityLabel
from openapi_client.models.sensitivity_label_list_result import SensitivityLabelListResult

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class SensitivityLabelsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def sensitivity_labels_create_or_update(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        parameters: Annotated[SensitivityLabel, Field(description="The column sensitivity label resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SensitivityLabel:
        """sensitivity_labels_create_or_update

        Creates or updates the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param parameters: The column sensitivity label resource. (required)
        :type parameters: SensitivityLabel
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_create_or_update_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabel",
            '201': "SensitivityLabel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sensitivity_labels_create_or_update_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        parameters: Annotated[SensitivityLabel, Field(description="The column sensitivity label resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SensitivityLabel]:
        """sensitivity_labels_create_or_update

        Creates or updates the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param parameters: The column sensitivity label resource. (required)
        :type parameters: SensitivityLabel
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_create_or_update_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabel",
            '201': "SensitivityLabel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sensitivity_labels_create_or_update_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        parameters: Annotated[SensitivityLabel, Field(description="The column sensitivity label resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sensitivity_labels_create_or_update

        Creates or updates the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param parameters: The column sensitivity label resource. (required)
        :type parameters: SensitivityLabel
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_create_or_update_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabel",
            '201': "SensitivityLabel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sensitivity_labels_create_or_update_serialize(
        self,
        resource_group_name,
        server_name,
        database_name,
        schema_name,
        table_name,
        column_name,
        sensitivity_label_source,
        subscription_id,
        api_version,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if server_name is not None:
            _path_params['serverName'] = server_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if schema_name is not None:
            _path_params['schemaName'] = schema_name
        if table_name is not None:
            _path_params['tableName'] = table_name
        if column_name is not None:
            _path_params['columnName'] = column_name
        if sensitivity_label_source is not None:
            _path_params['sensitivityLabelSource'] = sensitivity_label_source
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sensitivity_labels_delete(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """sensitivity_labels_delete

        Deletes the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_delete_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sensitivity_labels_delete_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """sensitivity_labels_delete

        Deletes the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_delete_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sensitivity_labels_delete_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sensitivity_labels_delete

        Deletes the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_delete_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sensitivity_labels_delete_serialize(
        self,
        resource_group_name,
        server_name,
        database_name,
        schema_name,
        table_name,
        column_name,
        sensitivity_label_source,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if server_name is not None:
            _path_params['serverName'] = server_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if schema_name is not None:
            _path_params['schemaName'] = schema_name
        if table_name is not None:
            _path_params['tableName'] = table_name
        if column_name is not None:
            _path_params['columnName'] = column_name
        if sensitivity_label_source is not None:
            _path_params['sensitivityLabelSource'] = sensitivity_label_source
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sensitivity_labels_get(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SensitivityLabel:
        """sensitivity_labels_get

        Gets the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_get_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sensitivity_labels_get_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SensitivityLabel]:
        """sensitivity_labels_get

        Gets the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_get_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sensitivity_labels_get_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        schema_name: Annotated[StrictStr, Field(description="The name of the schema.")],
        table_name: Annotated[StrictStr, Field(description="The name of the table.")],
        column_name: Annotated[StrictStr, Field(description="The name of the column.")],
        sensitivity_label_source: Annotated[StrictStr, Field(description="The source of the sensitivity label.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sensitivity_labels_get

        Gets the sensitivity label of a given column

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param schema_name: The name of the schema. (required)
        :type schema_name: str
        :param table_name: The name of the table. (required)
        :type table_name: str
        :param column_name: The name of the column. (required)
        :type column_name: str
        :param sensitivity_label_source: The source of the sensitivity label. (required)
        :type sensitivity_label_source: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_get_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            schema_name=schema_name,
            table_name=table_name,
            column_name=column_name,
            sensitivity_label_source=sensitivity_label_source,
            subscription_id=subscription_id,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabel",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sensitivity_labels_get_serialize(
        self,
        resource_group_name,
        server_name,
        database_name,
        schema_name,
        table_name,
        column_name,
        sensitivity_label_source,
        subscription_id,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if server_name is not None:
            _path_params['serverName'] = server_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if schema_name is not None:
            _path_params['schemaName'] = schema_name
        if table_name is not None:
            _path_params['tableName'] = table_name
        if column_name is not None:
            _path_params['columnName'] = column_name
        if sensitivity_label_source is not None:
            _path_params['sensitivityLabelSource'] = sensitivity_label_source
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sensitivity_labels_list_by_database(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SensitivityLabelListResult:
        """sensitivity_labels_list_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sensitivity_labels_list_by_database_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SensitivityLabelListResult]:
        """sensitivity_labels_list_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sensitivity_labels_list_by_database_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sensitivity_labels_list_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sensitivity_labels_list_by_database_serialize(
        self,
        resource_group_name,
        server_name,
        database_name,
        subscription_id,
        api_version,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if server_name is not None:
            _path_params['serverName'] = server_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/sensitivityLabels',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sensitivity_labels_list_current_by_database(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SensitivityLabelListResult:
        """sensitivity_labels_list_current_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_current_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sensitivity_labels_list_current_by_database_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SensitivityLabelListResult]:
        """sensitivity_labels_list_current_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_current_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sensitivity_labels_list_current_by_database_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sensitivity_labels_list_current_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_current_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sensitivity_labels_list_current_by_database_serialize(
        self,
        resource_group_name,
        server_name,
        database_name,
        subscription_id,
        api_version,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if server_name is not None:
            _path_params['serverName'] = server_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/currentSensitivityLabels',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def sensitivity_labels_list_recommended_by_database(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SensitivityLabelListResult:
        """sensitivity_labels_list_recommended_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_recommended_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def sensitivity_labels_list_recommended_by_database_with_http_info(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SensitivityLabelListResult]:
        """sensitivity_labels_list_recommended_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_recommended_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def sensitivity_labels_list_recommended_by_database_without_preload_content(
        self,
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        server_name: Annotated[StrictStr, Field(description="The name of the server.")],
        database_name: Annotated[StrictStr, Field(description="The name of the database.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID that identifies an Azure subscription.")],
        api_version: Annotated[StrictStr, Field(description="The API version to use for the request.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData filter expression that filters elements in the collection.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """sensitivity_labels_list_recommended_by_database

        Gets the sensitivity labels of a given database

        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param server_name: The name of the server. (required)
        :type server_name: str
        :param database_name: The name of the database. (required)
        :type database_name: str
        :param subscription_id: The subscription ID that identifies an Azure subscription. (required)
        :type subscription_id: str
        :param api_version: The API version to use for the request. (required)
        :type api_version: str
        :param filter: An OData filter expression that filters elements in the collection.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._sensitivity_labels_list_recommended_by_database_serialize(
            resource_group_name=resource_group_name,
            server_name=server_name,
            database_name=database_name,
            subscription_id=subscription_id,
            api_version=api_version,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SensitivityLabelListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _sensitivity_labels_list_recommended_by_database_serialize(
        self,
        resource_group_name,
        server_name,
        database_name,
        subscription_id,
        api_version,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if server_name is not None:
            _path_params['serverName'] = server_name
        if database_name is not None:
            _path_params['databaseName'] = database_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/recommendedSensitivityLabels',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


