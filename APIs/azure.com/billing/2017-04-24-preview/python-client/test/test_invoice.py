# coding: utf-8

"""
    BillingManagementClient

    Billing client provides access to billing resources for Azure Web-Direct subscriptions. Other subscription types which were not purchased directly through the Azure web portal are not supported through this preview API.

    The version of the OpenAPI document: 2017-04-24-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.invoice import Invoice

class TestInvoice(unittest.TestCase):
    """Invoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Invoice:
        """Test Invoice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Invoice`
        """
        model = Invoice()
        if include_optional:
            return Invoice(
                properties = openapi_client.models.invoice_properties.InvoiceProperties(
                    billing_period_ids = [
                        ''
                        ], 
                    download_url = openapi_client.models.download_url.DownloadUrl(
                        expiry_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        url = '', ), 
                    invoice_period_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    invoice_period_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return Invoice(
        )
        """

    def testInvoice(self):
        """Test Invoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
