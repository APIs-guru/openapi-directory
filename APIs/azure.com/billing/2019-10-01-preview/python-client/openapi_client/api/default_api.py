# coding: utf-8

"""
    BillingManagementClient

    Billing client provides access to billing resources for Azure subscriptions.

    The version of the OpenAPI document: 2019-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing_extensions import Annotated
from openapi_client.models.transfer_billing_subscription_request_properties import TransferBillingSubscriptionRequestProperties
from openapi_client.models.transfer_billing_subscription_result import TransferBillingSubscriptionResult
from openapi_client.models.transfer_product_request_properties import TransferProductRequestProperties
from openapi_client.models.validate_product_transfer_eligibility_result import ValidateProductTransferEligibilityResult
from openapi_client.models.validate_subscription_transfer_eligibility_result import ValidateSubscriptionTransferEligibilityResult

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class DefaultApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def billing_subscriptions_transfer(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        billing_subscription_name: Annotated[StrictStr, Field(description="Billing Subscription Id.")],
        parameters: Annotated[TransferBillingSubscriptionRequestProperties, Field(description="Request parameters supplied to the Transfer Billing Subscription operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TransferBillingSubscriptionResult:
        """billing_subscriptions_transfer

        Transfers the subscription from one invoice section to another within a billing account.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param billing_subscription_name: Billing Subscription Id. (required)
        :type billing_subscription_name: str
        :param parameters: Request parameters supplied to the Transfer Billing Subscription operation. (required)
        :type parameters: TransferBillingSubscriptionRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_subscriptions_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            billing_subscription_name=billing_subscription_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransferBillingSubscriptionResult",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def billing_subscriptions_transfer_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        billing_subscription_name: Annotated[StrictStr, Field(description="Billing Subscription Id.")],
        parameters: Annotated[TransferBillingSubscriptionRequestProperties, Field(description="Request parameters supplied to the Transfer Billing Subscription operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TransferBillingSubscriptionResult]:
        """billing_subscriptions_transfer

        Transfers the subscription from one invoice section to another within a billing account.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param billing_subscription_name: Billing Subscription Id. (required)
        :type billing_subscription_name: str
        :param parameters: Request parameters supplied to the Transfer Billing Subscription operation. (required)
        :type parameters: TransferBillingSubscriptionRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_subscriptions_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            billing_subscription_name=billing_subscription_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransferBillingSubscriptionResult",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def billing_subscriptions_transfer_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        billing_subscription_name: Annotated[StrictStr, Field(description="Billing Subscription Id.")],
        parameters: Annotated[TransferBillingSubscriptionRequestProperties, Field(description="Request parameters supplied to the Transfer Billing Subscription operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """billing_subscriptions_transfer

        Transfers the subscription from one invoice section to another within a billing account.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param billing_subscription_name: Billing Subscription Id. (required)
        :type billing_subscription_name: str
        :param parameters: Request parameters supplied to the Transfer Billing Subscription operation. (required)
        :type parameters: TransferBillingSubscriptionRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_subscriptions_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            billing_subscription_name=billing_subscription_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransferBillingSubscriptionResult",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _billing_subscriptions_transfer_serialize(
        self,
        billing_account_name,
        billing_profile_name,
        invoice_section_name,
        billing_subscription_name,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if billing_profile_name is not None:
            _path_params['billingProfileName'] = billing_profile_name
        if invoice_section_name is not None:
            _path_params['invoiceSectionName'] = invoice_section_name
        if billing_subscription_name is not None:
            _path_params['billingSubscriptionName'] = billing_subscription_name
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/billingSubscriptions/{billingSubscriptionName}/transfer',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def billing_subscriptions_validate_transfer(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        billing_subscription_name: Annotated[StrictStr, Field(description="Billing Subscription Id.")],
        parameters: Annotated[TransferBillingSubscriptionRequestProperties, Field(description="Parameters supplied to the Transfer Billing Subscription operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ValidateSubscriptionTransferEligibilityResult:
        """billing_subscriptions_validate_transfer

        Validates the transfer of billing subscriptions across invoice sections.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param billing_subscription_name: Billing Subscription Id. (required)
        :type billing_subscription_name: str
        :param parameters: Parameters supplied to the Transfer Billing Subscription operation. (required)
        :type parameters: TransferBillingSubscriptionRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_subscriptions_validate_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            billing_subscription_name=billing_subscription_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateSubscriptionTransferEligibilityResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def billing_subscriptions_validate_transfer_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        billing_subscription_name: Annotated[StrictStr, Field(description="Billing Subscription Id.")],
        parameters: Annotated[TransferBillingSubscriptionRequestProperties, Field(description="Parameters supplied to the Transfer Billing Subscription operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ValidateSubscriptionTransferEligibilityResult]:
        """billing_subscriptions_validate_transfer

        Validates the transfer of billing subscriptions across invoice sections.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param billing_subscription_name: Billing Subscription Id. (required)
        :type billing_subscription_name: str
        :param parameters: Parameters supplied to the Transfer Billing Subscription operation. (required)
        :type parameters: TransferBillingSubscriptionRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_subscriptions_validate_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            billing_subscription_name=billing_subscription_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateSubscriptionTransferEligibilityResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def billing_subscriptions_validate_transfer_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        billing_subscription_name: Annotated[StrictStr, Field(description="Billing Subscription Id.")],
        parameters: Annotated[TransferBillingSubscriptionRequestProperties, Field(description="Parameters supplied to the Transfer Billing Subscription operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """billing_subscriptions_validate_transfer

        Validates the transfer of billing subscriptions across invoice sections.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param billing_subscription_name: Billing Subscription Id. (required)
        :type billing_subscription_name: str
        :param parameters: Parameters supplied to the Transfer Billing Subscription operation. (required)
        :type parameters: TransferBillingSubscriptionRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._billing_subscriptions_validate_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            billing_subscription_name=billing_subscription_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateSubscriptionTransferEligibilityResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _billing_subscriptions_validate_transfer_serialize(
        self,
        billing_account_name,
        billing_profile_name,
        invoice_section_name,
        billing_subscription_name,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if billing_profile_name is not None:
            _path_params['billingProfileName'] = billing_profile_name
        if invoice_section_name is not None:
            _path_params['invoiceSectionName'] = invoice_section_name
        if billing_subscription_name is not None:
            _path_params['billingSubscriptionName'] = billing_subscription_name
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/billingSubscriptions/{billingSubscriptionName}/validateTransferEligibility',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def products_validate_transfer(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        product_name: Annotated[StrictStr, Field(description="Invoice Id.")],
        parameters: Annotated[TransferProductRequestProperties, Field(description="Parameters supplied to the Transfer Products operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ValidateProductTransferEligibilityResult:
        """products_validate_transfer

        Validates the transfer of products across invoice sections.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param product_name: Invoice Id. (required)
        :type product_name: str
        :param parameters: Parameters supplied to the Transfer Products operation. (required)
        :type parameters: TransferProductRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._products_validate_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            product_name=product_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateProductTransferEligibilityResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def products_validate_transfer_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        product_name: Annotated[StrictStr, Field(description="Invoice Id.")],
        parameters: Annotated[TransferProductRequestProperties, Field(description="Parameters supplied to the Transfer Products operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ValidateProductTransferEligibilityResult]:
        """products_validate_transfer

        Validates the transfer of products across invoice sections.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param product_name: Invoice Id. (required)
        :type product_name: str
        :param parameters: Parameters supplied to the Transfer Products operation. (required)
        :type parameters: TransferProductRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._products_validate_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            product_name=product_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateProductTransferEligibilityResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def products_validate_transfer_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        product_name: Annotated[StrictStr, Field(description="Invoice Id.")],
        parameters: Annotated[TransferProductRequestProperties, Field(description="Parameters supplied to the Transfer Products operation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """products_validate_transfer

        Validates the transfer of products across invoice sections.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param product_name: Invoice Id. (required)
        :type product_name: str
        :param parameters: Parameters supplied to the Transfer Products operation. (required)
        :type parameters: TransferProductRequestProperties
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._products_validate_transfer_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            product_name=product_name,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ValidateProductTransferEligibilityResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _products_validate_transfer_serialize(
        self,
        billing_account_name,
        billing_profile_name,
        invoice_section_name,
        product_name,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if billing_profile_name is not None:
            _path_params['billingProfileName'] = billing_profile_name
        if invoice_section_name is not None:
            _path_params['invoiceSectionName'] = invoice_section_name
        if product_name is not None:
            _path_params['productName'] = product_name
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/products/{productName}/validateTransferEligibility',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


