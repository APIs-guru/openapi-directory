# coding: utf-8

"""
    BillingManagementClient

    Billing client provides access to billing resources for Azure subscriptions.

    The version of the OpenAPI document: 2019-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.transaction import Transaction
from openapi_client.models.transaction_list_result import TransactionListResult

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class TransactionsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def transactions_get(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        transaction_name: Annotated[StrictStr, Field(description="Transaction name.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Transaction:
        """transactions_get

        Get the transaction.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param transaction_name: Transaction name. (required)
        :type transaction_name: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_get_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            transaction_name=transaction_name,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Transaction",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def transactions_get_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        transaction_name: Annotated[StrictStr, Field(description="Transaction name.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Transaction]:
        """transactions_get

        Get the transaction.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param transaction_name: Transaction name. (required)
        :type transaction_name: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_get_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            transaction_name=transaction_name,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Transaction",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def transactions_get_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        transaction_name: Annotated[StrictStr, Field(description="Transaction name.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """transactions_get

        Get the transaction.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param transaction_name: Transaction name. (required)
        :type transaction_name: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_get_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            transaction_name=transaction_name,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Transaction",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _transactions_get_serialize(
        self,
        billing_account_name,
        billing_profile_name,
        transaction_name,
        period_start_date,
        period_end_date,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if billing_profile_name is not None:
            _path_params['billingProfileName'] = billing_profile_name
        if transaction_name is not None:
            _path_params['transactionName'] = transaction_name
        # process the query parameters
        if period_start_date is not None:
            
            _query_params.append(('periodStartDate', period_start_date))
            
        if period_end_date is not None:
            
            _query_params.append(('periodEndDate', period_end_date))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/transactions/{transactionName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def transactions_list_by_billing_account(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TransactionListResult:
        """transactions_list_by_billing_account

        Lists the transactions by billing account name for given start and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_billing_account_serialize(
            billing_account_name=billing_account_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def transactions_list_by_billing_account_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TransactionListResult]:
        """transactions_list_by_billing_account

        Lists the transactions by billing account name for given start and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_billing_account_serialize(
            billing_account_name=billing_account_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def transactions_list_by_billing_account_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """transactions_list_by_billing_account

        Lists the transactions by billing account name for given start and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_billing_account_serialize(
            billing_account_name=billing_account_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _transactions_list_by_billing_account_serialize(
        self,
        billing_account_name,
        api_version,
        period_start_date,
        period_end_date,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if period_start_date is not None:
            
            _query_params.append(('periodStartDate', period_start_date))
            
        if period_end_date is not None:
            
            _query_params.append(('periodEndDate', period_end_date))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/transactions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def transactions_list_by_billing_profile(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TransactionListResult:
        """transactions_list_by_billing_profile

        Lists the transactions by billing profile name for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_billing_profile_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def transactions_list_by_billing_profile_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TransactionListResult]:
        """transactions_list_by_billing_profile

        Lists the transactions by billing profile name for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_billing_profile_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def transactions_list_by_billing_profile_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """transactions_list_by_billing_profile

        Lists the transactions by billing profile name for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_billing_profile_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _transactions_list_by_billing_profile_serialize(
        self,
        billing_account_name,
        billing_profile_name,
        api_version,
        period_start_date,
        period_end_date,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if billing_profile_name is not None:
            _path_params['billingProfileName'] = billing_profile_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if period_start_date is not None:
            
            _query_params.append(('periodStartDate', period_start_date))
            
        if period_end_date is not None:
            
            _query_params.append(('periodEndDate', period_end_date))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/transactions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def transactions_list_by_customer(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        customer_name: Annotated[StrictStr, Field(description="Customer name.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TransactionListResult:
        """transactions_list_by_customer

        Lists the transactions by customer id for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param customer_name: Customer name. (required)
        :type customer_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_customer_serialize(
            billing_account_name=billing_account_name,
            customer_name=customer_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def transactions_list_by_customer_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        customer_name: Annotated[StrictStr, Field(description="Customer name.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TransactionListResult]:
        """transactions_list_by_customer

        Lists the transactions by customer id for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param customer_name: Customer name. (required)
        :type customer_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_customer_serialize(
            billing_account_name=billing_account_name,
            customer_name=customer_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def transactions_list_by_customer_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        customer_name: Annotated[StrictStr, Field(description="Customer name.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """transactions_list_by_customer

        Lists the transactions by customer id for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param customer_name: Customer name. (required)
        :type customer_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_customer_serialize(
            billing_account_name=billing_account_name,
            customer_name=customer_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _transactions_list_by_customer_serialize(
        self,
        billing_account_name,
        customer_name,
        api_version,
        period_start_date,
        period_end_date,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if customer_name is not None:
            _path_params['customerName'] = customer_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if period_start_date is not None:
            
            _query_params.append(('periodStartDate', period_start_date))
            
        if period_end_date is not None:
            
            _query_params.append(('periodEndDate', period_end_date))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/customers/{customerName}/transactions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def transactions_list_by_invoice_section(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TransactionListResult:
        """transactions_list_by_invoice_section

        Lists the transactions by invoice section name for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_invoice_section_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def transactions_list_by_invoice_section_with_http_info(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TransactionListResult]:
        """transactions_list_by_invoice_section

        Lists the transactions by invoice section name for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_invoice_section_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def transactions_list_by_invoice_section_without_preload_content(
        self,
        billing_account_name: Annotated[StrictStr, Field(description="billing Account Id.")],
        billing_profile_name: Annotated[StrictStr, Field(description="Billing Profile Id.")],
        invoice_section_name: Annotated[StrictStr, Field(description="InvoiceSection Id.")],
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2019-10-01-preview.")],
        period_start_date: Annotated[StrictStr, Field(description="Start date")],
        period_end_date: Annotated[StrictStr, Field(description="End date")],
        filter: Annotated[Optional[StrictStr], Field(description="May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """transactions_list_by_invoice_section

        Lists the transactions by invoice section name for given start date and end date.

        :param billing_account_name: billing Account Id. (required)
        :type billing_account_name: str
        :param billing_profile_name: Billing Profile Id. (required)
        :type billing_profile_name: str
        :param invoice_section_name: InvoiceSection Id. (required)
        :type invoice_section_name: str
        :param api_version: Version of the API to be used with the client request. The current version is 2019-10-01-preview. (required)
        :type api_version: str
        :param period_start_date: Start date (required)
        :type period_start_date: str
        :param period_end_date: End date (required)
        :type period_end_date: str
        :param filter: May be used to filter by transaction kind. The filter supports 'eq', 'lt', 'gt', 'le', 'ge', and 'and'. It does not currently support 'ne', 'or', or 'not'. Tag filter is a key value pair string where key and value is separated by a colon (:).
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._transactions_list_by_invoice_section_serialize(
            billing_account_name=billing_account_name,
            billing_profile_name=billing_profile_name,
            invoice_section_name=invoice_section_name,
            api_version=api_version,
            period_start_date=period_start_date,
            period_end_date=period_end_date,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "TransactionListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _transactions_list_by_invoice_section_serialize(
        self,
        billing_account_name,
        billing_profile_name,
        invoice_section_name,
        api_version,
        period_start_date,
        period_end_date,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if billing_account_name is not None:
            _path_params['billingAccountName'] = billing_account_name
        if billing_profile_name is not None:
            _path_params['billingProfileName'] = billing_profile_name
        if invoice_section_name is not None:
            _path_params['invoiceSectionName'] = invoice_section_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if period_start_date is not None:
            
            _query_params.append(('periodStartDate', period_start_date))
            
        if period_end_date is not None:
            
            _query_params.append(('periodEndDate', period_end_date))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/providers/Microsoft.Billing/billingAccounts/{billingAccountName}/billingProfiles/{billingProfileName}/invoiceSections/{invoiceSectionName}/transactions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


