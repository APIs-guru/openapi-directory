# coding: utf-8

"""
    BillingManagementClient

    Billing client provides access to billing resources for Azure subscriptions.

    The version of the OpenAPI document: 2019-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.billing_role_assignment_list_result import BillingRoleAssignmentListResult

class TestBillingRoleAssignmentListResult(unittest.TestCase):
    """BillingRoleAssignmentListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingRoleAssignmentListResult:
        """Test BillingRoleAssignmentListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingRoleAssignmentListResult`
        """
        model = BillingRoleAssignmentListResult()
        if include_optional:
            return BillingRoleAssignmentListResult(
                value = [
                    openapi_client.models.billing_role_assignment.BillingRoleAssignment(
                        properties = openapi_client.models.billing_role_assignment_properties.BillingRoleAssignmentProperties(
                            created_by_principal_id = '', 
                            created_by_principal_tenant_id = '', 
                            created_on = '', 
                            name = '', 
                            principal_id = '', 
                            role_definition_name = '', 
                            scope = '', ), )
                    ]
            )
        else:
            return BillingRoleAssignmentListResult(
        )
        """

    def testBillingRoleAssignmentListResult(self):
        """Test BillingRoleAssignmentListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
