# coding: utf-8

"""
    BillingManagementClient

    Billing client provides access to billing resources for Azure subscriptions.

    The version of the OpenAPI document: 2019-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.agreement_list_result import AgreementListResult

class TestAgreementListResult(unittest.TestCase):
    """AgreementListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgreementListResult:
        """Test AgreementListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgreementListResult`
        """
        model = AgreementListResult()
        if include_optional:
            return AgreementListResult(
                next_link = '',
                value = [
                    openapi_client.models.agreement.Agreement(
                        properties = openapi_client.models.agreement_properties.AgreementProperties(
                            agreement_link = '', 
                            effective_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            participants = [
                                openapi_client.models.participants.Participants(
                                    email = '', 
                                    status = '', 
                                    status_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            status = '', ), )
                    ]
            )
        else:
            return AgreementListResult(
        )
        """

    def testAgreementListResult(self):
        """Test AgreementListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
