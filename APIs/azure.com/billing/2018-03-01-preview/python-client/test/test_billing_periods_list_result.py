# coding: utf-8

"""
    BillingManagementClient

    Billing client provides access to billing resources for Azure subscriptions.

    The version of the OpenAPI document: 2018-03-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.billing_periods_list_result import BillingPeriodsListResult

class TestBillingPeriodsListResult(unittest.TestCase):
    """BillingPeriodsListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingPeriodsListResult:
        """Test BillingPeriodsListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingPeriodsListResult`
        """
        model = BillingPeriodsListResult()
        if include_optional:
            return BillingPeriodsListResult(
                next_link = '',
                value = [
                    openapi_client.models.billing_period.BillingPeriod(
                        properties = openapi_client.models.billing_period_properties.BillingPeriodProperties(
                            billing_period_end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            billing_period_start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            invoice_ids = [
                                ''
                                ], ), )
                    ]
            )
        else:
            return BillingPeriodsListResult(
        )
        """

    def testBillingPeriodsListResult(self):
        """Test BillingPeriodsListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
