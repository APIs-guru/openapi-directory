# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2019-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.automation import Automation

class TestAutomation(unittest.TestCase):
    """Automation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Automation:
        """Test Automation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Automation`
        """
        model = Automation()
        if include_optional:
            return Automation(
                properties = openapi_client.models.automation_properties.AutomationProperties(
                    actions = [
                        openapi_client.models.automation_action.AutomationAction(
                            action_type = 'LogicApp', )
                        ], 
                    description = '', 
                    is_enabled = True, 
                    scopes = [
                        openapi_client.models.automation_scope.AutomationScope(
                            description = '', 
                            scope_path = '', )
                        ], 
                    sources = [
                        openapi_client.models.automation_source.AutomationSource(
                            event_source = 'Assessments', 
                            rule_sets = [
                                openapi_client.models.automation_rule_set.AutomationRuleSet(
                                    rules = [
                                        openapi_client.models.automation_triggering_rule.AutomationTriggeringRule(
                                            expected_value = '', 
                                            operator = 'Equals', 
                                            property_j_path = '', 
                                            property_type = 'String', )
                                        ], )
                                ], )
                        ], ),
                id = '',
                name = '',
                type = '',
                location = '',
                kind = '',
                etag = '',
                tags = {
                    'key' : ''
                    }
            )
        else:
            return Automation(
        )
        """

    def testAutomation(self):
        """Test Automation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
