# coding: utf-8

"""
    AppServiceEnvironments API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_service_environment_collection import AppServiceEnvironmentCollection

class TestAppServiceEnvironmentCollection(unittest.TestCase):
    """AppServiceEnvironmentCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppServiceEnvironmentCollection:
        """Test AppServiceEnvironmentCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppServiceEnvironmentCollection`
        """
        model = AppServiceEnvironmentCollection()
        if include_optional:
            return AppServiceEnvironmentCollection(
                next_link = '',
                value = [
                    openapi_client.models.app_service_environment_resource.AppServiceEnvironmentResource(
                        properties = openapi_client.models.properties.properties(
                            allowed_multi_sizes = '', 
                            allowed_worker_sizes = '', 
                            api_management_account_id = '', 
                            cluster_settings = [
                                None
                                ], 
                            database_edition = '', 
                            database_service_objective = '', 
                            default_front_end_scale_factor = 56, 
                            dns_suffix = '', 
                            dynamic_cache_enabled = True, 
                            environment_capacities = [
                                None
                                ], 
                            environment_is_healthy = True, 
                            environment_status = '', 
                            front_end_scale_factor = 56, 
                            internal_load_balancing_mode = 'None', 
                            ipssl_address_count = 56, 
                            last_action = '', 
                            last_action_result = '', 
                            location = '', 
                            maximum_number_of_machines = 56, 
                            multi_role_count = 56, 
                            multi_size = '', 
                            name = '', 
                            network_access_control_list = [
                                None
                                ], 
                            provisioning_state = 'Succeeded', 
                            resource_group = '', 
                            status = 'Preparing', 
                            subscription_id = '', 
                            suspended = True, 
                            upgrade_domains = 56, 
                            user_whitelisted_ip_ranges = [
                                ''
                                ], 
                            vip_mappings = [
                                None
                                ], 
                            virtual_network = openapi_client.models.virtual_network.virtualNetwork(
                                id = '', 
                                name = '', 
                                subnet = '', 
                                type = '', ), 
                            vnet_name = '', 
                            vnet_resource_group_name = '', 
                            vnet_subnet_name = '', 
                            worker_pools = [
                                None
                                ], ), )
                    ]
            )
        else:
            return AppServiceEnvironmentCollection(
                value = [
                    openapi_client.models.app_service_environment_resource.AppServiceEnvironmentResource(
                        properties = openapi_client.models.properties.properties(
                            allowed_multi_sizes = '', 
                            allowed_worker_sizes = '', 
                            api_management_account_id = '', 
                            cluster_settings = [
                                None
                                ], 
                            database_edition = '', 
                            database_service_objective = '', 
                            default_front_end_scale_factor = 56, 
                            dns_suffix = '', 
                            dynamic_cache_enabled = True, 
                            environment_capacities = [
                                None
                                ], 
                            environment_is_healthy = True, 
                            environment_status = '', 
                            front_end_scale_factor = 56, 
                            internal_load_balancing_mode = 'None', 
                            ipssl_address_count = 56, 
                            last_action = '', 
                            last_action_result = '', 
                            location = '', 
                            maximum_number_of_machines = 56, 
                            multi_role_count = 56, 
                            multi_size = '', 
                            name = '', 
                            network_access_control_list = [
                                None
                                ], 
                            provisioning_state = 'Succeeded', 
                            resource_group = '', 
                            status = 'Preparing', 
                            subscription_id = '', 
                            suspended = True, 
                            upgrade_domains = 56, 
                            user_whitelisted_ip_ranges = [
                                ''
                                ], 
                            vip_mappings = [
                                None
                                ], 
                            virtual_network = openapi_client.models.virtual_network.virtualNetwork(
                                id = '', 
                                name = '', 
                                subnet = '', 
                                type = '', ), 
                            vnet_name = '', 
                            vnet_resource_group_name = '', 
                            vnet_subnet_name = '', 
                            worker_pools = [
                                None
                                ], ), )
                    ],
        )
        """

    def testAppServiceEnvironmentCollection(self):
        """Test AppServiceEnvironmentCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
