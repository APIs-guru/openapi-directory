# coding: utf-8

"""
    AppServiceEnvironments API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.worker_pool_collection import WorkerPoolCollection

class TestWorkerPoolCollection(unittest.TestCase):
    """WorkerPoolCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkerPoolCollection:
        """Test WorkerPoolCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkerPoolCollection`
        """
        model = WorkerPoolCollection()
        if include_optional:
            return WorkerPoolCollection(
                next_link = '',
                value = [
                    openapi_client.models.worker_pool_resource.WorkerPoolResource(
                        properties = openapi_client.models.properties.properties(
                            compute_mode = 'Shared', 
                            instance_names = [
                                ''
                                ], 
                            worker_count = 56, 
                            worker_size = '', 
                            worker_size_id = 56, ), 
                        sku = openapi_client.models.sku.sku(
                            capabilities = [
                                None
                                ], 
                            capacity = 56, 
                            family = '', 
                            locations = [
                                ''
                                ], 
                            name = '', 
                            size = '', 
                            sku_capacity = openapi_client.models.sku_capacity.skuCapacity(
                                default = 56, 
                                maximum = 56, 
                                minimum = 56, 
                                scale_type = '', ), 
                            tier = '', ), )
                    ]
            )
        else:
            return WorkerPoolCollection(
                value = [
                    openapi_client.models.worker_pool_resource.WorkerPoolResource(
                        properties = openapi_client.models.properties.properties(
                            compute_mode = 'Shared', 
                            instance_names = [
                                ''
                                ], 
                            worker_count = 56, 
                            worker_size = '', 
                            worker_size_id = 56, ), 
                        sku = openapi_client.models.sku.sku(
                            capabilities = [
                                None
                                ], 
                            capacity = 56, 
                            family = '', 
                            locations = [
                                ''
                                ], 
                            name = '', 
                            size = '', 
                            sku_capacity = openapi_client.models.sku_capacity.skuCapacity(
                                default = 56, 
                                maximum = 56, 
                                minimum = 56, 
                                scale_type = '', ), 
                            tier = '', ), )
                    ],
        )
        """

    def testWorkerPoolCollection(self):
        """Test WorkerPoolCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
