# coding: utf-8

"""
    MySQLManagementClient

    The Microsoft Azure management API provides create, read, update, and delete functionality for Azure MySQL resources including servers, databases, firewall rules, log files and configurations.

    The version of the OpenAPI document: 2017-04-30-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.configuration_list_result import ConfigurationListResult

class TestConfigurationListResult(unittest.TestCase):
    """ConfigurationListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationListResult:
        """Test ConfigurationListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationListResult`
        """
        model = ConfigurationListResult()
        if include_optional:
            return ConfigurationListResult(
                value = [
                    openapi_client.models.configuration.Configuration(
                        properties = openapi_client.models.configuration_properties.ConfigurationProperties(
                            allowed_values = '', 
                            data_type = '', 
                            default_value = '', 
                            description = '', 
                            source = '', 
                            value = '', ), )
                    ]
            )
        else:
            return ConfigurationListResult(
        )
        """

    def testConfigurationListResult(self):
        """Test ConfigurationListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
