# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2019-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.swagger_custom_dynamic_tree_command import SwaggerCustomDynamicTreeCommand

class TestSwaggerCustomDynamicTreeCommand(unittest.TestCase):
    """SwaggerCustomDynamicTreeCommand unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SwaggerCustomDynamicTreeCommand:
        """Test SwaggerCustomDynamicTreeCommand
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SwaggerCustomDynamicTreeCommand`
        """
        model = SwaggerCustomDynamicTreeCommand()
        if include_optional:
            return SwaggerCustomDynamicTreeCommand(
                item_full_title_path = '',
                item_is_parent = '',
                item_title_path = '',
                item_value_path = '',
                items_path = '',
                operation_id = '',
                parameters = {
                    'key' : openapi_client.models.swagger_custom_dynamic_tree_parameter.SwaggerCustomDynamicTreeParameter(
                        parameter_reference = '', 
                        required = True, 
                        selected_item_value_path = '', 
                        value = openapi_client.models.object.Object(), )
                    },
                selectable_filter = ''
            )
        else:
            return SwaggerCustomDynamicTreeCommand(
        )
        """

    def testSwaggerCustomDynamicTreeCommand(self):
        """Test SwaggerCustomDynamicTreeCommand"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
