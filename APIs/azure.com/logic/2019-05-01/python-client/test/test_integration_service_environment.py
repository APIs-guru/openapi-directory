# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2019-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.integration_service_environment import IntegrationServiceEnvironment

class TestIntegrationServiceEnvironment(unittest.TestCase):
    """IntegrationServiceEnvironment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntegrationServiceEnvironment:
        """Test IntegrationServiceEnvironment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntegrationServiceEnvironment`
        """
        model = IntegrationServiceEnvironment()
        if include_optional:
            return IntegrationServiceEnvironment(
                properties = openapi_client.models.integration_service_environment_properties.IntegrationServiceEnvironmentProperties(
                    endpoints_configuration = openapi_client.models.flow_endpoints_configuration.FlowEndpointsConfiguration(
                        connector = openapi_client.models.flow_endpoints.FlowEndpoints(
                            access_endpoint_ip_addresses = [
                                openapi_client.models.ip_address.IpAddress(
                                    address = '', )
                                ], 
                            outgoing_ip_addresses = [
                                openapi_client.models.ip_address.IpAddress(
                                    address = '', )
                                ], ), 
                        workflow = openapi_client.models.flow_endpoints.FlowEndpoints(), ), 
                    integration_service_environment_id = '', 
                    network_configuration = openapi_client.models.network_configuration.NetworkConfiguration(
                        access_endpoint = openapi_client.models.integration_service_environment_access_endpoint.IntegrationServiceEnvironmentAccessEndpoint(
                            type = 'NotSpecified', ), 
                        subnets = [
                            openapi_client.models.resource_reference.ResourceReference(
                                id = '', 
                                name = '', )
                            ], 
                        virtual_network_address_space = '', ), 
                    provisioning_state = 'NotSpecified', 
                    state = 'NotSpecified', ),
                sku = openapi_client.models.integration_service_environment_sku.IntegrationServiceEnvironmentSku(
                    capacity = 56, 
                    name = 'NotSpecified', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return IntegrationServiceEnvironment(
        )
        """

    def testIntegrationServiceEnvironment(self):
        """Test IntegrationServiceEnvironment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
