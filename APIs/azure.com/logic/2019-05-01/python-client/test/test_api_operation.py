# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2019-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_operation import ApiOperation

class TestApiOperation(unittest.TestCase):
    """ApiOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiOperation:
        """Test ApiOperation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiOperation`
        """
        model = ApiOperation()
        if include_optional:
            return ApiOperation(
                properties = openapi_client.models.api_operation_properties_definition.ApiOperationPropertiesDefinition(
                    annotation = openapi_client.models.api_operation_annotation.ApiOperationAnnotation(
                        family = '', 
                        revision = 56, 
                        status = 'NotSpecified', ), 
                    api = openapi_client.models.api_reference.ApiReference(
                        brand_color = '', 
                        category = 'NotSpecified', 
                        description = '', 
                        display_name = '', 
                        icon_uri = '', 
                        integration_service_environment = openapi_client.models.resource_reference.ResourceReference(
                            id = '', 
                            name = '', 
                            type = '', ), 
                        swagger = openapi_client.models.object.Object(), ), 
                    description = '', 
                    inputs_definition = openapi_client.models.swagger_schema.SwaggerSchema(
                        additional_properties = openapi_client.models.object.Object(), 
                        all_of = [
                            openapi_client.models.swagger_schema.SwaggerSchema(
                                discriminator = '', 
                                dynamic_list_new = openapi_client.models.swagger_custom_dynamic_list.SwaggerCustomDynamicList(
                                    built_in_operation = '', 
                                    item_title_path = '', 
                                    item_value_path = '', 
                                    items_path = '', 
                                    operation_id = '', 
                                    parameters = {
                                        'key' : openapi_client.models.swagger_custom_dynamic_properties.SwaggerCustomDynamicProperties(
                                            operation_id = '', 
                                            value_path = '', )
                                        }, ), 
                                dynamic_schema_new = openapi_client.models.swagger_custom_dynamic_properties.SwaggerCustomDynamicProperties(
                                    operation_id = '', 
                                    value_path = '', ), 
                                dynamic_schema_old = openapi_client.models.swagger_custom_dynamic_schema.SwaggerCustomDynamicSchema(
                                    operation_id = '', 
                                    value_path = '', ), 
                                dynamic_tree = openapi_client.models.swagger_custom_dynamic_tree.SwaggerCustomDynamicTree(
                                    browse = openapi_client.models.swagger_custom_dynamic_tree_command.SwaggerCustomDynamicTreeCommand(
                                        item_full_title_path = '', 
                                        item_is_parent = '', 
                                        item_title_path = '', 
                                        item_value_path = '', 
                                        items_path = '', 
                                        operation_id = '', 
                                        selectable_filter = '', ), 
                                    open = openapi_client.models.swagger_custom_dynamic_tree_command.SwaggerCustomDynamicTreeCommand(
                                        item_full_title_path = '', 
                                        item_is_parent = '', 
                                        item_title_path = '', 
                                        item_value_path = '', 
                                        items_path = '', 
                                        operation_id = '', 
                                        selectable_filter = '', ), 
                                    settings = openapi_client.models.swagger_custom_dynamic_tree_settings.SwaggerCustomDynamicTreeSettings(
                                        can_select_leaf_nodes = True, 
                                        can_select_parent_nodes = True, ), ), 
                                example = openapi_client.models.object.Object(), 
                                external_docs = openapi_client.models.swagger_external_documentation.SwaggerExternalDocumentation(
                                    description = '', 
                                    extensions = {
                                        'key' : openapi_client.models.object.Object()
                                        }, 
                                    uri = '', ), 
                                items = , 
                                max_properties = 56, 
                                min_properties = 56, 
                                notification_url_extension = True, 
                                properties = {
                                    'key' : 
                                    }, 
                                read_only = True, 
                                ref = '', 
                                required = [
                                    ''
                                    ], 
                                title = '', 
                                type = 'String', 
                                xml = openapi_client.models.swagger_xml.SwaggerXml(
                                    attribute = True, 
                                    name = '', 
                                    namespace = '', 
                                    prefix = '', 
                                    wrapped = True, ), )
                            ], 
                        discriminator = '', 
                        dynamic_list_new = openapi_client.models.swagger_custom_dynamic_list.SwaggerCustomDynamicList(
                            built_in_operation = '', 
                            item_title_path = '', 
                            item_value_path = '', 
                            items_path = '', 
                            operation_id = '', ), 
                        dynamic_schema_new = , 
                        dynamic_schema_old = openapi_client.models.swagger_custom_dynamic_schema.SwaggerCustomDynamicSchema(
                            operation_id = '', 
                            value_path = '', ), 
                        dynamic_tree = openapi_client.models.swagger_custom_dynamic_tree.SwaggerCustomDynamicTree(), 
                        example = openapi_client.models.object.Object(), 
                        external_docs = openapi_client.models.swagger_external_documentation.SwaggerExternalDocumentation(
                            description = '', 
                            uri = '', ), 
                        items = , 
                        max_properties = 56, 
                        min_properties = 56, 
                        notification_url_extension = True, 
                        properties = {
                            'key' : 
                            }, 
                        read_only = True, 
                        ref = '', 
                        required = [
                            ''
                            ], 
                        title = '', 
                        type = 'String', 
                        xml = openapi_client.models.swagger_xml.SwaggerXml(
                            attribute = True, 
                            name = '', 
                            namespace = '', 
                            prefix = '', 
                            wrapped = True, ), ), 
                    is_notification = True, 
                    is_webhook = True, 
                    pageable = True, 
                    responses_definition = {
                        'key' : 
                        }, 
                    summary = '', 
                    trigger = '', 
                    trigger_hint = '', 
                    visibility = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return ApiOperation(
        )
        """

    def testApiOperation(self):
        """Test ApiOperation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
