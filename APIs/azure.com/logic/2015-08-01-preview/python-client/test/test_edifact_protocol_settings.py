# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2015-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.edifact_protocol_settings import EdifactProtocolSettings

class TestEdifactProtocolSettings(unittest.TestCase):
    """EdifactProtocolSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EdifactProtocolSettings:
        """Test EdifactProtocolSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EdifactProtocolSettings`
        """
        model = EdifactProtocolSettings()
        if include_optional:
            return EdifactProtocolSettings(
                acknowledgement_settings = openapi_client.models.edifact_acknowledgement_settings.EdifactAcknowledgementSettings(
                    acknowledgement_control_number_lower_bound = 56, 
                    acknowledgement_control_number_prefix = '', 
                    acknowledgement_control_number_suffix = '', 
                    acknowledgement_control_number_upper_bound = 56, 
                    batch_functional_acknowledgements = True, 
                    batch_technical_acknowledgements = True, 
                    need_functional_acknowledgement = True, 
                    need_loop_for_valid_messages = True, 
                    need_technical_acknowledgement = True, 
                    rollover_acknowledgement_control_number = True, 
                    send_synchronous_acknowledgement = True, ),
                edifact_delimiter_overrides = [
                    openapi_client.models.edifact_delimiter_override.EdifactDelimiterOverride(
                        component_separator = 56, 
                        data_element_separator = 56, 
                        decimal_point_indicator = 'NotSpecified', 
                        message_association_assigned_code = '', 
                        message_id = '', 
                        message_release = '', 
                        message_version = '', 
                        release_indicator = 56, 
                        repetition_separator = 56, 
                        segment_terminator = 56, 
                        segment_terminator_suffix = 'NotSpecified', 
                        target_namespace = '', )
                    ],
                envelope_overrides = [
                    openapi_client.models.edifact_envelope_override.EdifactEnvelopeOverride(
                        application_password = '', 
                        association_assigned_code = '', 
                        controlling_agency_code = '', 
                        functional_group_id = '', 
                        group_header_message_release = '', 
                        group_header_message_version = '', 
                        message_association_assigned_code = '', 
                        message_id = '', 
                        message_release = '', 
                        message_version = '', 
                        receiver_application_id = '', 
                        receiver_application_qualifier = '', 
                        sender_application_id = '', 
                        sender_application_qualifier = '', 
                        target_namespace = '', )
                    ],
                envelope_settings = openapi_client.models.edifact_envelope_settings.EdifactEnvelopeSettings(
                    application_reference_id = '', 
                    apply_delimiter_string_advice = True, 
                    communication_agreement_id = '', 
                    create_grouping_segments = True, 
                    enable_default_group_headers = True, 
                    functional_group_id = '', 
                    group_application_password = '', 
                    group_application_receiver_id = '', 
                    group_application_receiver_qualifier = '', 
                    group_application_sender_id = '', 
                    group_application_sender_qualifier = '', 
                    group_association_assigned_code = '', 
                    group_control_number_lower_bound = 56, 
                    group_control_number_prefix = '', 
                    group_control_number_suffix = '', 
                    group_control_number_upper_bound = 56, 
                    group_controlling_agency_code = '', 
                    group_message_release = '', 
                    group_message_version = '', 
                    interchange_control_number_lower_bound = 56, 
                    interchange_control_number_prefix = '', 
                    interchange_control_number_suffix = '', 
                    interchange_control_number_upper_bound = 56, 
                    is_test_interchange = True, 
                    overwrite_existing_transaction_set_control_number = True, 
                    processing_priority_code = '', 
                    receiver_internal_identification = '', 
                    receiver_internal_sub_identification = '', 
                    receiver_reverse_routing_address = '', 
                    recipient_reference_password_qualifier = '', 
                    recipient_reference_password_value = '', 
                    rollover_group_control_number = True, 
                    rollover_interchange_control_number = True, 
                    rollover_transaction_set_control_number = True, 
                    sender_internal_identification = '', 
                    sender_internal_sub_identification = '', 
                    sender_reverse_routing_address = '', 
                    transaction_set_control_number_lower_bound = 56, 
                    transaction_set_control_number_prefix = '', 
                    transaction_set_control_number_suffix = '', 
                    transaction_set_control_number_upper_bound = 56, ),
                framing_settings = openapi_client.models.edifact_framing_settings.EdifactFramingSettings(
                    character_encoding = '', 
                    character_set = 'NotSpecified', 
                    component_separator = 56, 
                    data_element_separator = 56, 
                    decimal_point_indicator = 'NotSpecified', 
                    protocol_version = 56, 
                    release_indicator = 56, 
                    repetition_separator = 56, 
                    segment_terminator = 56, 
                    segment_terminator_suffix = 'NotSpecified', 
                    service_code_list_directory_version = '', ),
                message_filter = openapi_client.models.edifact_message_filter.EdifactMessageFilter(
                    message_filter_type = 'NotSpecified', ),
                message_filter_list = [
                    openapi_client.models.edifact_message_identifier.EdifactMessageIdentifier(
                        message_id = '', )
                    ],
                processing_settings = openapi_client.models.edifact_processing_settings.EdifactProcessingSettings(
                    create_empty_xml_tags_for_trailing_separators = True, 
                    mask_security_info = True, 
                    preserve_interchange = True, 
                    suspend_interchange_on_error = True, 
                    use_dot_as_decimal_separator = True, ),
                schema_references = [
                    openapi_client.models.edifact_schema_reference.EdifactSchemaReference(
                        association_assigned_code = '', 
                        message_id = '', 
                        message_release = '', 
                        message_version = '', 
                        schema_name = '', 
                        sender_application_id = '', 
                        sender_application_qualifier = '', )
                    ],
                validation_overrides = [
                    openapi_client.models.edifact_validation_override.EdifactValidationOverride(
                        allow_leading_and_trailing_spaces_and_zeroes = True, 
                        enforce_character_set = True, 
                        message_id = '', 
                        trailing_separator_policy = 'NotSpecified', 
                        trim_leading_and_trailing_spaces_and_zeroes = True, 
                        validate_edi_types = True, 
                        validate_xsd_types = True, )
                    ],
                validation_settings = openapi_client.models.edifact_validation_settings.EdifactValidationSettings(
                    allow_leading_and_trailing_spaces_and_zeroes = True, 
                    check_duplicate_group_control_number = True, 
                    check_duplicate_interchange_control_number = True, 
                    check_duplicate_transaction_set_control_number = True, 
                    interchange_control_number_validity_days = 56, 
                    trailing_separator_policy = 'NotSpecified', 
                    trim_leading_and_trailing_spaces_and_zeroes = True, 
                    validate_character_set = True, 
                    validate_edi_types = True, 
                    validate_xsd_types = True, )
            )
        else:
            return EdifactProtocolSettings(
        )
        """

    def testEdifactProtocolSettings(self):
        """Test EdifactProtocolSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
