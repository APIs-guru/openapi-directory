# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2018-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.integration_account_certificate import IntegrationAccountCertificate

class TestIntegrationAccountCertificate(unittest.TestCase):
    """IntegrationAccountCertificate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntegrationAccountCertificate:
        """Test IntegrationAccountCertificate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntegrationAccountCertificate`
        """
        model = IntegrationAccountCertificate()
        if include_optional:
            return IntegrationAccountCertificate(
                properties = openapi_client.models.integration_account_certificate_properties.IntegrationAccountCertificateProperties(
                    changed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    key = openapi_client.models.key_vault_key_reference.KeyVaultKeyReference(
                        key_name = '', 
                        key_vault = openapi_client.models.key_vault_key_reference_key_vault.KeyVaultKeyReference_keyVault(
                            id = '', 
                            name = '', 
                            type = '', ), 
                        key_version = '', ), 
                    metadata = openapi_client.models.metadata.metadata(), 
                    public_certificate = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return IntegrationAccountCertificate(
                properties = openapi_client.models.integration_account_certificate_properties.IntegrationAccountCertificateProperties(
                    changed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    key = openapi_client.models.key_vault_key_reference.KeyVaultKeyReference(
                        key_name = '', 
                        key_vault = openapi_client.models.key_vault_key_reference_key_vault.KeyVaultKeyReference_keyVault(
                            id = '', 
                            name = '', 
                            type = '', ), 
                        key_version = '', ), 
                    metadata = openapi_client.models.metadata.metadata(), 
                    public_certificate = '', ),
        )
        """

    def testIntegrationAccountCertificate(self):
        """Test IntegrationAccountCertificate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
