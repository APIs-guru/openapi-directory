# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2018-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.x12_one_way_agreement import X12OneWayAgreement

class TestX12OneWayAgreement(unittest.TestCase):
    """X12OneWayAgreement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> X12OneWayAgreement:
        """Test X12OneWayAgreement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `X12OneWayAgreement`
        """
        model = X12OneWayAgreement()
        if include_optional:
            return X12OneWayAgreement(
                protocol_settings = openapi_client.models.x12_protocol_settings.X12ProtocolSettings(
                    acknowledgement_settings = openapi_client.models.x12_acknowledgement_settings.X12AcknowledgementSettings(
                        acknowledgement_control_number_lower_bound = 56, 
                        acknowledgement_control_number_prefix = '', 
                        acknowledgement_control_number_suffix = '', 
                        acknowledgement_control_number_upper_bound = 56, 
                        batch_functional_acknowledgements = True, 
                        batch_implementation_acknowledgements = True, 
                        batch_technical_acknowledgements = True, 
                        functional_acknowledgement_version = '', 
                        implementation_acknowledgement_version = '', 
                        need_functional_acknowledgement = True, 
                        need_implementation_acknowledgement = True, 
                        need_loop_for_valid_messages = True, 
                        need_technical_acknowledgement = True, 
                        rollover_acknowledgement_control_number = True, 
                        send_synchronous_acknowledgement = True, ), 
                    envelope_overrides = [
                        openapi_client.models.x12_envelope_override.X12EnvelopeOverride(
                            date_format = 'NotSpecified', 
                            functional_identifier_code = '', 
                            header_version = '', 
                            message_id = '', 
                            protocol_version = '', 
                            receiver_application_id = '', 
                            responsible_agency_code = '', 
                            sender_application_id = '', 
                            target_namespace = '', 
                            time_format = 'NotSpecified', )
                        ], 
                    envelope_settings = openapi_client.models.x12_envelope_settings.X12EnvelopeSettings(
                        control_standards_id = 56, 
                        control_version_number = '', 
                        enable_default_group_headers = True, 
                        functional_group_id = '', 
                        group_control_number_lower_bound = 56, 
                        group_control_number_upper_bound = 56, 
                        group_header_agency_code = '', 
                        group_header_date_format = 'NotSpecified', 
                        group_header_time_format = 'NotSpecified', 
                        group_header_version = '', 
                        interchange_control_number_lower_bound = 56, 
                        interchange_control_number_upper_bound = 56, 
                        overwrite_existing_transaction_set_control_number = True, 
                        receiver_application_id = '', 
                        rollover_group_control_number = True, 
                        rollover_interchange_control_number = True, 
                        rollover_transaction_set_control_number = True, 
                        sender_application_id = '', 
                        transaction_set_control_number_lower_bound = 56, 
                        transaction_set_control_number_prefix = '', 
                        transaction_set_control_number_suffix = '', 
                        transaction_set_control_number_upper_bound = 56, 
                        usage_indicator = 'NotSpecified', 
                        use_control_standards_id_as_repetition_character = True, ), 
                    framing_settings = openapi_client.models.x12_framing_settings.X12FramingSettings(
                        character_set = 'NotSpecified', 
                        component_separator = 56, 
                        data_element_separator = 56, 
                        replace_character = 56, 
                        replace_separators_in_payload = True, 
                        segment_terminator = 56, 
                        segment_terminator_suffix = 'NotSpecified', ), 
                    message_filter = openapi_client.models.x12_message_filter.X12MessageFilter(
                        message_filter_type = 'NotSpecified', ), 
                    message_filter_list = [
                        openapi_client.models.x12_message_identifier.X12MessageIdentifier(
                            message_id = '', )
                        ], 
                    processing_settings = openapi_client.models.x12_processing_settings.X12ProcessingSettings(
                        convert_implied_decimal = True, 
                        create_empty_xml_tags_for_trailing_separators = True, 
                        mask_security_info = True, 
                        preserve_interchange = True, 
                        suspend_interchange_on_error = True, 
                        use_dot_as_decimal_separator = True, ), 
                    schema_references = [
                        openapi_client.models.x12_schema_reference.X12SchemaReference(
                            message_id = '', 
                            schema_name = '', 
                            schema_version = '', 
                            sender_application_id = '', )
                        ], 
                    security_settings = openapi_client.models.x12_security_settings.X12SecuritySettings(
                        authorization_qualifier = '', 
                        authorization_value = '', 
                        password_value = '', 
                        security_qualifier = '', ), 
                    validation_overrides = [
                        openapi_client.models.x12_validation_override.X12ValidationOverride(
                            allow_leading_and_trailing_spaces_and_zeroes = True, 
                            message_id = '', 
                            trailing_separator_policy = 'NotSpecified', 
                            trim_leading_and_trailing_spaces_and_zeroes = True, 
                            validate_character_set = True, 
                            validate_edi_types = True, 
                            validate_xsd_types = True, )
                        ], 
                    validation_settings = openapi_client.models.x12_validation_settings.X12ValidationSettings(
                        allow_leading_and_trailing_spaces_and_zeroes = True, 
                        check_duplicate_group_control_number = True, 
                        check_duplicate_interchange_control_number = True, 
                        check_duplicate_transaction_set_control_number = True, 
                        interchange_control_number_validity_days = 56, 
                        trailing_separator_policy = 'NotSpecified', 
                        trim_leading_and_trailing_spaces_and_zeroes = True, 
                        validate_character_set = True, 
                        validate_edi_types = True, 
                        validate_xsd_types = True, ), 
                    x12_delimiter_overrides = [
                        openapi_client.models.x12_delimiter_overrides.X12DelimiterOverrides(
                            component_separator = 56, 
                            data_element_separator = 56, 
                            message_id = '', 
                            protocol_version = '', 
                            replace_character = 56, 
                            replace_separators_in_payload = True, 
                            segment_terminator = 56, 
                            segment_terminator_suffix = 'NotSpecified', 
                            target_namespace = '', )
                        ], ),
                receiver_business_identity = openapi_client.models.business_identity.BusinessIdentity(
                    qualifier = '', 
                    value = '', ),
                sender_business_identity = openapi_client.models.business_identity.BusinessIdentity(
                    qualifier = '', 
                    value = '', )
            )
        else:
            return X12OneWayAgreement(
                protocol_settings = openapi_client.models.x12_protocol_settings.X12ProtocolSettings(
                    acknowledgement_settings = openapi_client.models.x12_acknowledgement_settings.X12AcknowledgementSettings(
                        acknowledgement_control_number_lower_bound = 56, 
                        acknowledgement_control_number_prefix = '', 
                        acknowledgement_control_number_suffix = '', 
                        acknowledgement_control_number_upper_bound = 56, 
                        batch_functional_acknowledgements = True, 
                        batch_implementation_acknowledgements = True, 
                        batch_technical_acknowledgements = True, 
                        functional_acknowledgement_version = '', 
                        implementation_acknowledgement_version = '', 
                        need_functional_acknowledgement = True, 
                        need_implementation_acknowledgement = True, 
                        need_loop_for_valid_messages = True, 
                        need_technical_acknowledgement = True, 
                        rollover_acknowledgement_control_number = True, 
                        send_synchronous_acknowledgement = True, ), 
                    envelope_overrides = [
                        openapi_client.models.x12_envelope_override.X12EnvelopeOverride(
                            date_format = 'NotSpecified', 
                            functional_identifier_code = '', 
                            header_version = '', 
                            message_id = '', 
                            protocol_version = '', 
                            receiver_application_id = '', 
                            responsible_agency_code = '', 
                            sender_application_id = '', 
                            target_namespace = '', 
                            time_format = 'NotSpecified', )
                        ], 
                    envelope_settings = openapi_client.models.x12_envelope_settings.X12EnvelopeSettings(
                        control_standards_id = 56, 
                        control_version_number = '', 
                        enable_default_group_headers = True, 
                        functional_group_id = '', 
                        group_control_number_lower_bound = 56, 
                        group_control_number_upper_bound = 56, 
                        group_header_agency_code = '', 
                        group_header_date_format = 'NotSpecified', 
                        group_header_time_format = 'NotSpecified', 
                        group_header_version = '', 
                        interchange_control_number_lower_bound = 56, 
                        interchange_control_number_upper_bound = 56, 
                        overwrite_existing_transaction_set_control_number = True, 
                        receiver_application_id = '', 
                        rollover_group_control_number = True, 
                        rollover_interchange_control_number = True, 
                        rollover_transaction_set_control_number = True, 
                        sender_application_id = '', 
                        transaction_set_control_number_lower_bound = 56, 
                        transaction_set_control_number_prefix = '', 
                        transaction_set_control_number_suffix = '', 
                        transaction_set_control_number_upper_bound = 56, 
                        usage_indicator = 'NotSpecified', 
                        use_control_standards_id_as_repetition_character = True, ), 
                    framing_settings = openapi_client.models.x12_framing_settings.X12FramingSettings(
                        character_set = 'NotSpecified', 
                        component_separator = 56, 
                        data_element_separator = 56, 
                        replace_character = 56, 
                        replace_separators_in_payload = True, 
                        segment_terminator = 56, 
                        segment_terminator_suffix = 'NotSpecified', ), 
                    message_filter = openapi_client.models.x12_message_filter.X12MessageFilter(
                        message_filter_type = 'NotSpecified', ), 
                    message_filter_list = [
                        openapi_client.models.x12_message_identifier.X12MessageIdentifier(
                            message_id = '', )
                        ], 
                    processing_settings = openapi_client.models.x12_processing_settings.X12ProcessingSettings(
                        convert_implied_decimal = True, 
                        create_empty_xml_tags_for_trailing_separators = True, 
                        mask_security_info = True, 
                        preserve_interchange = True, 
                        suspend_interchange_on_error = True, 
                        use_dot_as_decimal_separator = True, ), 
                    schema_references = [
                        openapi_client.models.x12_schema_reference.X12SchemaReference(
                            message_id = '', 
                            schema_name = '', 
                            schema_version = '', 
                            sender_application_id = '', )
                        ], 
                    security_settings = openapi_client.models.x12_security_settings.X12SecuritySettings(
                        authorization_qualifier = '', 
                        authorization_value = '', 
                        password_value = '', 
                        security_qualifier = '', ), 
                    validation_overrides = [
                        openapi_client.models.x12_validation_override.X12ValidationOverride(
                            allow_leading_and_trailing_spaces_and_zeroes = True, 
                            message_id = '', 
                            trailing_separator_policy = 'NotSpecified', 
                            trim_leading_and_trailing_spaces_and_zeroes = True, 
                            validate_character_set = True, 
                            validate_edi_types = True, 
                            validate_xsd_types = True, )
                        ], 
                    validation_settings = openapi_client.models.x12_validation_settings.X12ValidationSettings(
                        allow_leading_and_trailing_spaces_and_zeroes = True, 
                        check_duplicate_group_control_number = True, 
                        check_duplicate_interchange_control_number = True, 
                        check_duplicate_transaction_set_control_number = True, 
                        interchange_control_number_validity_days = 56, 
                        trailing_separator_policy = 'NotSpecified', 
                        trim_leading_and_trailing_spaces_and_zeroes = True, 
                        validate_character_set = True, 
                        validate_edi_types = True, 
                        validate_xsd_types = True, ), 
                    x12_delimiter_overrides = [
                        openapi_client.models.x12_delimiter_overrides.X12DelimiterOverrides(
                            component_separator = 56, 
                            data_element_separator = 56, 
                            message_id = '', 
                            protocol_version = '', 
                            replace_character = 56, 
                            replace_separators_in_payload = True, 
                            segment_terminator = 56, 
                            segment_terminator_suffix = 'NotSpecified', 
                            target_namespace = '', )
                        ], ),
                receiver_business_identity = openapi_client.models.business_identity.BusinessIdentity(
                    qualifier = '', 
                    value = '', ),
                sender_business_identity = openapi_client.models.business_identity.BusinessIdentity(
                    qualifier = '', 
                    value = '', ),
        )
        """

    def testX12OneWayAgreement(self):
        """Test X12OneWayAgreement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
