# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2015-02-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workflow_properties import WorkflowProperties

class TestWorkflowProperties(unittest.TestCase):
    """WorkflowProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowProperties:
        """Test WorkflowProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkflowProperties`
        """
        model = WorkflowProperties()
        if include_optional:
            return WorkflowProperties(
                access_endpoint = '',
                changed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                definition = openapi_client.models.object.Object(),
                definition_link = openapi_client.models.content_link.ContentLink(
                    content_hash = openapi_client.models.content_hash.ContentHash(
                        algorithm = '', 
                        value = '', ), 
                    content_size = 56, 
                    content_version = '', 
                    metadata = openapi_client.models.object.Object(), 
                    uri = '', ),
                parameters = {
                    'key' : openapi_client.models.workflow_parameter.WorkflowParameter(
                        metadata = openapi_client.models.object.Object(), 
                        type = 'NotSpecified', 
                        value = openapi_client.models.object.Object(), )
                    },
                parameters_link = openapi_client.models.content_link.ContentLink(
                    content_hash = openapi_client.models.content_hash.ContentHash(
                        algorithm = '', 
                        value = '', ), 
                    content_size = 56, 
                    content_version = '', 
                    metadata = openapi_client.models.object.Object(), 
                    uri = '', ),
                provisioning_state = 'NotSpecified',
                sku = openapi_client.models.sku.Sku(
                    name = 'NotSpecified', 
                    plan = openapi_client.models.resource_reference.ResourceReference(
                        id = '', 
                        type = '', ), ),
                state = 'NotSpecified',
                version = ''
            )
        else:
            return WorkflowProperties(
        )
        """

    def testWorkflowProperties(self):
        """Test WorkflowProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
