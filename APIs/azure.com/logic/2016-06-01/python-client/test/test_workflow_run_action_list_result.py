# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workflow_run_action_list_result import WorkflowRunActionListResult

class TestWorkflowRunActionListResult(unittest.TestCase):
    """WorkflowRunActionListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowRunActionListResult:
        """Test WorkflowRunActionListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkflowRunActionListResult`
        """
        model = WorkflowRunActionListResult()
        if include_optional:
            return WorkflowRunActionListResult(
                next_link = '',
                value = [
                    openapi_client.models.workflow_run_action.WorkflowRunAction(
                        name = '', 
                        properties = openapi_client.models.workflow_run_action_properties.WorkflowRunActionProperties(
                            code = '', 
                            correlation = openapi_client.models.correlation.Correlation(
                                client_tracking_id = '', ), 
                            end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            error = openapi_client.models.object.Object(), 
                            inputs_link = openapi_client.models.content_link.ContentLink(
                                content_hash = openapi_client.models.content_hash.ContentHash(
                                    algorithm = '', 
                                    value = '', ), 
                                content_size = 56, 
                                content_version = '', 
                                metadata = openapi_client.models.object.Object(), 
                                uri = '', ), 
                            outputs_link = openapi_client.models.content_link.ContentLink(
                                content_size = 56, 
                                content_version = '', 
                                metadata = openapi_client.models.object.Object(), 
                                uri = '', ), 
                            retry_history = [
                                openapi_client.models.retry_history.RetryHistory(
                                    client_request_id = '', 
                                    code = '', 
                                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    service_request_id = '', 
                                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            status = 'NotSpecified', 
                            tracked_properties = openapi_client.models.object.Object(), 
                            tracking_id = '', ), 
                        type = '', )
                    ]
            )
        else:
            return WorkflowRunActionListResult(
        )
        """

    def testWorkflowRunActionListResult(self):
        """Test WorkflowRunActionListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
