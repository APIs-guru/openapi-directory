# coding: utf-8

"""
    LogicManagementClient

    REST API for Azure Logic Apps.

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workflow_run_action_repetition_properties import WorkflowRunActionRepetitionProperties

class TestWorkflowRunActionRepetitionProperties(unittest.TestCase):
    """WorkflowRunActionRepetitionProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowRunActionRepetitionProperties:
        """Test WorkflowRunActionRepetitionProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkflowRunActionRepetitionProperties`
        """
        model = WorkflowRunActionRepetitionProperties()
        if include_optional:
            return WorkflowRunActionRepetitionProperties(
                repetition_indexes = [
                    openapi_client.models.repetition_index.RepetitionIndex(
                        item_index = 56, 
                        scope_name = '', )
                    ],
                inputs = openapi_client.models.object.Object(),
                inputs_link = openapi_client.models.content_link.ContentLink(
                    content_hash = openapi_client.models.content_hash.ContentHash(
                        algorithm = '', 
                        value = '', ), 
                    content_size = 56, 
                    content_version = '', 
                    metadata = openapi_client.models.object.Object(), 
                    uri = '', ),
                iteration_count = 56,
                outputs = openapi_client.models.object.Object(),
                outputs_link = openapi_client.models.content_link.ContentLink(
                    content_hash = openapi_client.models.content_hash.ContentHash(
                        algorithm = '', 
                        value = '', ), 
                    content_size = 56, 
                    content_version = '', 
                    metadata = openapi_client.models.object.Object(), 
                    uri = '', ),
                retry_history = [
                    openapi_client.models.retry_history.RetryHistory(
                        client_request_id = '', 
                        code = '', 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error = openapi_client.models.error_response.ErrorResponse(), 
                        service_request_id = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                tracked_properties = openapi_client.models.object.Object(),
                tracking_id = '',
                code = '',
                correlation = openapi_client.models.run_action_correlation.RunActionCorrelation(
                    action_tracking_id = '', ),
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                error = openapi_client.models.error.error(),
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = 'NotSpecified'
            )
        else:
            return WorkflowRunActionRepetitionProperties(
        )
        """

    def testWorkflowRunActionRepetitionProperties(self):
        """Test WorkflowRunActionRepetitionProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
