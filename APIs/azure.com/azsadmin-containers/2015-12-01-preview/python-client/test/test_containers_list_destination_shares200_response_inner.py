# coding: utf-8

"""
    StorageManagementClient

    The Admin Storage Management Client.

    The version of the OpenAPI document: 2015-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.containers_list_destination_shares200_response_inner import ContainersListDestinationShares200ResponseInner

class TestContainersListDestinationShares200ResponseInner(unittest.TestCase):
    """ContainersListDestinationShares200ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContainersListDestinationShares200ResponseInner:
        """Test ContainersListDestinationShares200ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContainersListDestinationShares200ResponseInner`
        """
        model = ContainersListDestinationShares200ResponseInner()
        if include_optional:
            return ContainersListDestinationShares200ResponseInner(
                properties = openapi_client.models.containers_list_destination_shares_200_response_inner_properties.Containers_ListDestinationShares_200_response_inner_properties(
                    free_capacity = 56, 
                    health_status = 'Unknown', 
                    share_name = '', 
                    total_capacity = 56, 
                    unc_path = '', 
                    used_capacity = 56, )
            )
        else:
            return ContainersListDestinationShares200ResponseInner(
        )
        """

    def testContainersListDestinationShares200ResponseInner(self):
        """Test ContainersListDestinationShares200ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
