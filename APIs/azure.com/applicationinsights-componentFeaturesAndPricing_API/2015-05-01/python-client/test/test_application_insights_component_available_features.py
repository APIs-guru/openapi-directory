# coding: utf-8

"""
    ApplicationInsightsManagementClient

    Azure Application Insights client for selecting pricing plans and options.

    The version of the OpenAPI document: 2015-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_insights_component_available_features import ApplicationInsightsComponentAvailableFeatures

class TestApplicationInsightsComponentAvailableFeatures(unittest.TestCase):
    """ApplicationInsightsComponentAvailableFeatures unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationInsightsComponentAvailableFeatures:
        """Test ApplicationInsightsComponentAvailableFeatures
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationInsightsComponentAvailableFeatures`
        """
        model = ApplicationInsightsComponentAvailableFeatures()
        if include_optional:
            return ApplicationInsightsComponentAvailableFeatures(
                result = [
                    openapi_client.models.application_insights_component_feature.ApplicationInsightsComponentFeature(
                        capabilities = [
                            openapi_client.models.application_insights_component_feature_capability.ApplicationInsightsComponentFeatureCapability(
                                description = '', 
                                meter_id = '', 
                                meter_rate_frequency = '', 
                                name = '', 
                                unit = '', 
                                value = '', )
                            ], 
                        feature_name = '', 
                        is_hidden = True, 
                        is_main_feature = True, 
                        meter_id = '', 
                        meter_rate_frequency = '', 
                        resouce_id = '', 
                        supported_addon_features = '', 
                        title = '', )
                    ]
            )
        else:
            return ApplicationInsightsComponentAvailableFeatures(
        )
        """

    def testApplicationInsightsComponentAvailableFeatures(self):
        """Test ApplicationInsightsComponentAvailableFeatures"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
