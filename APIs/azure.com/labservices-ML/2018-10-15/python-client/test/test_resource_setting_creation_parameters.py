# coding: utf-8

"""
    ManagedLabsClient

    The Managed Labs Client.

    The version of the OpenAPI document: 2018-10-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resource_setting_creation_parameters import ResourceSettingCreationParameters

class TestResourceSettingCreationParameters(unittest.TestCase):
    """ResourceSettingCreationParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceSettingCreationParameters:
        """Test ResourceSettingCreationParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceSettingCreationParameters`
        """
        model = ResourceSettingCreationParameters()
        if include_optional:
            return ResourceSettingCreationParameters(
                gallery_image_resource_id = '',
                location = '',
                name = '',
                reference_vm_creation_parameters = openapi_client.models.reference_vm_creation_parameters.ReferenceVmCreationParameters(
                    password = '', 
                    user_name = '', ),
                size = 'Basic'
            )
        else:
            return ResourceSettingCreationParameters(
                gallery_image_resource_id = '',
                reference_vm_creation_parameters = openapi_client.models.reference_vm_creation_parameters.ReferenceVmCreationParameters(
                    password = '', 
                    user_name = '', ),
        )
        """

    def testResourceSettingCreationParameters(self):
        """Test ResourceSettingCreationParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
