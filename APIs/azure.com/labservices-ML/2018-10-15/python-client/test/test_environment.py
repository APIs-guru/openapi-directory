# coding: utf-8

"""
    ManagedLabsClient

    The Managed Labs Client.

    The version of the OpenAPI document: 2018-10-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.environment import Environment

class TestEnvironment(unittest.TestCase):
    """Environment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Environment:
        """Test Environment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Environment`
        """
        model = Environment()
        if include_optional:
            return Environment(
                properties = openapi_client.models.environment_properties.EnvironmentProperties(
                    claimed_by_user_name = '', 
                    claimed_by_user_object_id = '', 
                    claimed_by_user_principal_id = '', 
                    is_claimed = True, 
                    last_known_power_state = '', 
                    latest_operation_result = openapi_client.models.latest_operation_result.LatestOperationResult(
                        error_code = '', 
                        error_message = '', 
                        http_method = '', 
                        operation_url = '', 
                        request_uri = '', 
                        status = '', ), 
                    network_interface = openapi_client.models.network_interface.NetworkInterface(
                        private_ip_address = '', 
                        rdp_authority = '', 
                        ssh_authority = '', 
                        username = '', ), 
                    password_last_reset = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    provisioning_state = '', 
                    resource_sets = openapi_client.models.resource_set.ResourceSet(
                        resource_setting_id = '', 
                        vm_resource_id = '', ), 
                    total_usage = '', 
                    unique_identifier = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return Environment(
        )
        """

    def testEnvironment(self):
        """Test Environment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
