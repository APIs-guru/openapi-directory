# coding: utf-8

"""
    ServiceFabricManagementClient

    Azure Service Fabric Resource Provider API Client

    The version of the OpenAPI document: 2019-03-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.application_type_version_resource import ApplicationTypeVersionResource
from openapi_client.models.application_type_version_resource_list import ApplicationTypeVersionResourceList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ApplicationTypeVersionApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def application_type_versions_create(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        parameters: Annotated[ApplicationTypeVersionResource, Field(description="The application type version resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationTypeVersionResource:
        """Creates or updates a Service Fabric application type version resource.

        Create or update a Service Fabric application type version resource with the specified name.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param parameters: The application type version resource. (required)
        :type parameters: ApplicationTypeVersionResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "ApplicationTypeVersionResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_type_versions_create_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        parameters: Annotated[ApplicationTypeVersionResource, Field(description="The application type version resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationTypeVersionResource]:
        """Creates or updates a Service Fabric application type version resource.

        Create or update a Service Fabric application type version resource with the specified name.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param parameters: The application type version resource. (required)
        :type parameters: ApplicationTypeVersionResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "ApplicationTypeVersionResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_type_versions_create_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        parameters: Annotated[ApplicationTypeVersionResource, Field(description="The application type version resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Creates or updates a Service Fabric application type version resource.

        Create or update a Service Fabric application type version resource with the specified name.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param parameters: The application type version resource. (required)
        :type parameters: ApplicationTypeVersionResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_create_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "ApplicationTypeVersionResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_type_versions_create_serialize(
        self,
        subscription_id,
        resource_group_name,
        cluster_name,
        application_type_name,
        version,
        api_version,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if cluster_name is not None:
            _path_params['clusterName'] = cluster_name
        if application_type_name is not None:
            _path_params['applicationTypeName'] = application_type_name
        if version is not None:
            _path_params['version'] = version
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_type_versions_delete(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Deletes a Service Fabric application type version resource.

        Delete a Service Fabric application type version resource with the specified name.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_type_versions_delete_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Deletes a Service Fabric application type version resource.

        Delete a Service Fabric application type version resource with the specified name.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_type_versions_delete_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes a Service Fabric application type version resource.

        Delete a Service Fabric application type version resource with the specified name.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_delete_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_type_versions_delete_serialize(
        self,
        subscription_id,
        resource_group_name,
        cluster_name,
        application_type_name,
        version,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if cluster_name is not None:
            _path_params['clusterName'] = cluster_name
        if application_type_name is not None:
            _path_params['applicationTypeName'] = application_type_name
        if version is not None:
            _path_params['version'] = version
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_type_versions_get(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationTypeVersionResource:
        """Gets a Service Fabric application type version resource.

        Get a Service Fabric application type version resource created or in the process of being created in the Service Fabric application type name resource.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationTypeVersionResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_type_versions_get_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationTypeVersionResource]:
        """Gets a Service Fabric application type version resource.

        Get a Service Fabric application type version resource created or in the process of being created in the Service Fabric application type name resource.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationTypeVersionResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_type_versions_get_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        version: Annotated[StrictStr, Field(description="The application type version.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a Service Fabric application type version resource.

        Get a Service Fabric application type version resource created or in the process of being created in the Service Fabric application type name resource.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param version: The application type version. (required)
        :type version: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_get_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            version=version,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationTypeVersionResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_type_versions_get_serialize(
        self,
        subscription_id,
        resource_group_name,
        cluster_name,
        application_type_name,
        version,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if cluster_name is not None:
            _path_params['clusterName'] = cluster_name
        if application_type_name is not None:
            _path_params['applicationTypeName'] = application_type_name
        if version is not None:
            _path_params['version'] = version
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions/{version}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_type_versions_list(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApplicationTypeVersionResourceList:
        """Gets the list of application type version resources created in the specified Service Fabric application type name resource.

        Gets all application type version resources created or in the process of being created in the Service Fabric application type name resource.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationTypeVersionResourceList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_type_versions_list_with_http_info(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ApplicationTypeVersionResourceList]:
        """Gets the list of application type version resources created in the specified Service Fabric application type name resource.

        Gets all application type version resources created or in the process of being created in the Service Fabric application type name resource.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationTypeVersionResourceList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_type_versions_list_without_preload_content(
        self,
        subscription_id: Annotated[StrictStr, Field(description="The customer subscription identifier.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group.")],
        cluster_name: Annotated[StrictStr, Field(description="The name of the cluster resource.")],
        application_type_name: Annotated[StrictStr, Field(description="The name of the application type name resource.")],
        api_version: Annotated[StrictStr, Field(description="The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the list of application type version resources created in the specified Service Fabric application type name resource.

        Gets all application type version resources created or in the process of being created in the Service Fabric application type name resource.

        :param subscription_id: The customer subscription identifier. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group. (required)
        :type resource_group_name: str
        :param cluster_name: The name of the cluster resource. (required)
        :type cluster_name: str
        :param application_type_name: The name of the application type name resource. (required)
        :type application_type_name: str
        :param api_version: The version of the Service Fabric resource provider API. This is a required parameter and it's value must be \"2019-03-01-preview\" for this specification. (required)
        :type api_version: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_type_versions_list_serialize(
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            cluster_name=cluster_name,
            application_type_name=application_type_name,
            api_version=api_version,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ApplicationTypeVersionResourceList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_type_versions_list_serialize(
        self,
        subscription_id,
        resource_group_name,
        cluster_name,
        application_type_name,
        api_version,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if cluster_name is not None:
            _path_params['clusterName'] = cluster_name
        if application_type_name is not None:
            _path_params['applicationTypeName'] = application_type_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceFabric/clusters/{clusterName}/applicationTypes/{applicationTypeName}/versions',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


