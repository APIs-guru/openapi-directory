# coding: utf-8

"""
    ServiceFabricManagementClient

    Azure Service Fabric Resource Provider API Client

    The version of the OpenAPI document: 2019-03-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_type_version_resource_list import ApplicationTypeVersionResourceList

class TestApplicationTypeVersionResourceList(unittest.TestCase):
    """ApplicationTypeVersionResourceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationTypeVersionResourceList:
        """Test ApplicationTypeVersionResourceList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationTypeVersionResourceList`
        """
        model = ApplicationTypeVersionResourceList()
        if include_optional:
            return ApplicationTypeVersionResourceList(
                next_link = '',
                value = [
                    openapi_client.models.application_type_version_resource.ApplicationTypeVersionResource(
                        properties = openapi_client.models.application_type_version_resource_properties.ApplicationTypeVersionResourceProperties(
                            app_package_url = '', 
                            default_parameter_list = {
                                'key' : ''
                                }, 
                            provisioning_state = '', ), )
                    ]
            )
        else:
            return ApplicationTypeVersionResourceList(
        )
        """

    def testApplicationTypeVersionResourceList(self):
        """Test ApplicationTypeVersionResourceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
