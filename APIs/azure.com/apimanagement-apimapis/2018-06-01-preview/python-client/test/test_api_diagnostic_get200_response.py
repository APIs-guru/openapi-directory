# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_diagnostic_get200_response import ApiDiagnosticGet200Response

class TestApiDiagnosticGet200Response(unittest.TestCase):
    """ApiDiagnosticGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiDiagnosticGet200Response:
        """Test ApiDiagnosticGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiDiagnosticGet200Response`
        """
        model = ApiDiagnosticGet200Response()
        if include_optional:
            return ApiDiagnosticGet200Response(
                properties = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties.ApiDiagnostic_ListByService_200_response_value_inner_properties(
                    always_log = 'allErrors', 
                    backend = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties_backend.ApiDiagnostic_ListByService_200_response_value_inner_properties_backend(
                        request = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties_backend_request.ApiDiagnostic_ListByService_200_response_value_inner_properties_backend_request(
                            body = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties_backend_request_body.ApiDiagnostic_ListByService_200_response_value_inner_properties_backend_request_body(
                                bytes = 56, ), 
                            headers = [
                                ''
                                ], ), 
                        response = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties_backend_request.ApiDiagnostic_ListByService_200_response_value_inner_properties_backend_request(), ), 
                    enable_http_correlation_headers = True, 
                    frontend = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties_backend.ApiDiagnostic_ListByService_200_response_value_inner_properties_backend(), 
                    logger_id = '', 
                    sampling = openapi_client.models.api_diagnostic_list_by_service_200_response_value_inner_properties_sampling.ApiDiagnostic_ListByService_200_response_value_inner_properties_sampling(
                        percentage = 0, 
                        sampling_type = 'fixed', ), ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return ApiDiagnosticGet200Response(
        )
        """

    def testApiDiagnosticGet200Response(self):
        """Test ApiDiagnosticGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
