# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on API entity and their Operations associated with your Azure API Management deployment.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.api_revision_list_by_service200_response_value_inner import ApiRevisionListByService200ResponseValueInner

class TestApiRevisionListByService200ResponseValueInner(unittest.TestCase):
    """ApiRevisionListByService200ResponseValueInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApiRevisionListByService200ResponseValueInner:
        """Test ApiRevisionListByService200ResponseValueInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApiRevisionListByService200ResponseValueInner`
        """
        model = ApiRevisionListByService200ResponseValueInner()
        if include_optional:
            return ApiRevisionListByService200ResponseValueInner(
                api_id = '',
                api_revision = '0',
                created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                is_current = True,
                is_online = True,
                private_url = '',
                updated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return ApiRevisionListByService200ResponseValueInner(
        )
        """

    def testApiRevisionListByService200ResponseValueInner(self):
        """Test ApiRevisionListByService200ResponseValueInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
