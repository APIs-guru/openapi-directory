# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-05-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.source_control_sync_job import SourceControlSyncJob

class TestSourceControlSyncJob(unittest.TestCase):
    """SourceControlSyncJob unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SourceControlSyncJob:
        """Test SourceControlSyncJob
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SourceControlSyncJob`
        """
        model = SourceControlSyncJob()
        if include_optional:
            return SourceControlSyncJob(
                id = '',
                name = '',
                properties = openapi_client.models.source_control_sync_job_properties.SourceControlSyncJobProperties(
                    creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    provisioning_state = 'Completed', 
                    source_control_sync_job_id = '', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sync_type = 'PartialSync', ),
                type = ''
            )
        else:
            return SourceControlSyncJob(
        )
        """

    def testSourceControlSyncJob(self):
        """Test SourceControlSyncJob"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
