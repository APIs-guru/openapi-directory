# coding: utf-8

"""
    CostManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-03-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.external_subscription_properties import ExternalSubscriptionProperties

class TestExternalSubscriptionProperties(unittest.TestCase):
    """ExternalSubscriptionProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExternalSubscriptionProperties:
        """Test ExternalSubscriptionProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExternalSubscriptionProperties`
        """
        model = ExternalSubscriptionProperties()
        if include_optional:
            return ExternalSubscriptionProperties(
                collection_info = openapi_client.models.connector_collection_info.ConnectorCollectionInfo(
                    error = openapi_client.models.connector_collection_error_info.ConnectorCollectionErrorInfo(
                        error_code = '', 
                        error_inner_message = '', 
                        error_message = '', 
                        error_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    last_checked = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    source_last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                display_name = '',
                external_billing_account_id = '',
                management_group_id = '',
                provider_account_id = '',
                provider_billing_account_id = ''
            )
        else:
            return ExternalSubscriptionProperties(
        )
        """

    def testExternalSubscriptionProperties(self):
        """Test ExternalSubscriptionProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
