# coding: utf-8

"""
    CostManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alert_properties import AlertProperties

class TestAlertProperties(unittest.TestCase):
    """AlertProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertProperties:
        """Test AlertProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertProperties`
        """
        model = AlertProperties()
        if include_optional:
            return AlertProperties(
                close_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                cost_entity_id = '',
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                definition = openapi_client.models.alert_definition.AlertDefinition(
                    category = 'Cost', 
                    criteria = 'CostThresholdExceeded', 
                    type = 'Budget', ),
                description = '',
                details = {
                    'key' : ''
                    },
                modification_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                modification_username = '',
                scope = '',
                source = 'Preset',
                status = 'Active',
                status_modification_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AlertProperties(
        )
        """

    def testAlertProperties(self):
        """Test AlertProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
