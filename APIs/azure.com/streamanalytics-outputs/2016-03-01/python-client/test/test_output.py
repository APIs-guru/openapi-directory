# coding: utf-8

"""
    StreamAnalyticsManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.output import Output

class TestOutput(unittest.TestCase):
    """Output unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Output:
        """Test Output
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Output`
        """
        model = Output()
        if include_optional:
            return Output(
                properties = openapi_client.models.output_properties.OutputProperties(
                    datasource = openapi_client.models.output_data_source.OutputDataSource(), 
                    diagnostics = openapi_client.models.output_properties_diagnostics.OutputProperties_diagnostics(
                        conditions = [
                            openapi_client.models.output_properties_diagnostics_conditions_inner.OutputProperties_diagnostics_conditions_inner(
                                code = '', 
                                message = '', 
                                since = '', )
                            ], ), 
                    etag = '', 
                    serialization = openapi_client.models.output_properties_serialization.OutputProperties_serialization(
                        type = '', ), ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return Output(
        )
        """

    def testOutput(self):
        """Test Output"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
