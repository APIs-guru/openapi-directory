# coding: utf-8

"""
    StreamAnalyticsManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.output import Output
from openapi_client.models.output_list_result import OutputListResult
from openapi_client.models.outputs_test200_response import OutputsTest200Response

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class OutputsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def outputs_create_or_replace(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Output, Field(description="The definition of the output that will be used to create a new output or replace the existing one under the streaming job.")],
        if_match: Annotated[Optional[StrictStr], Field(description="The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Output:
        """outputs_create_or_replace

        Creates an output or replaces an already existing output under an existing streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: The definition of the output that will be used to create a new output or replace the existing one under the streaming job. (required)
        :type output: Output
        :param if_match: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
        :type if_match: str
        :param if_none_match: Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.
        :type if_none_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_create_or_replace_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            if_match=if_match,
            if_none_match=if_none_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
            '201': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def outputs_create_or_replace_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Output, Field(description="The definition of the output that will be used to create a new output or replace the existing one under the streaming job.")],
        if_match: Annotated[Optional[StrictStr], Field(description="The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Output]:
        """outputs_create_or_replace

        Creates an output or replaces an already existing output under an existing streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: The definition of the output that will be used to create a new output or replace the existing one under the streaming job. (required)
        :type output: Output
        :param if_match: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
        :type if_match: str
        :param if_none_match: Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.
        :type if_none_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_create_or_replace_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            if_match=if_match,
            if_none_match=if_none_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
            '201': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def outputs_create_or_replace_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Output, Field(description="The definition of the output that will be used to create a new output or replace the existing one under the streaming job.")],
        if_match: Annotated[Optional[StrictStr], Field(description="The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """outputs_create_or_replace

        Creates an output or replaces an already existing output under an existing streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: The definition of the output that will be used to create a new output or replace the existing one under the streaming job. (required)
        :type output: Output
        :param if_match: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
        :type if_match: str
        :param if_none_match: Set to '*' to allow a new output to be created, but to prevent updating an existing output. Other values will result in a 412 Pre-condition Failed response.
        :type if_none_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_create_or_replace_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            if_match=if_match,
            if_none_match=if_none_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
            '201': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _outputs_create_or_replace_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        job_name,
        output_name,
        output,
        if_match,
        if_none_match,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if output_name is not None:
            _path_params['outputName'] = output_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        # process the form parameters
        # process the body parameter
        if output is not None:
            _body_params = output


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def outputs_delete(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """outputs_delete

        Deletes an output from the streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_delete_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def outputs_delete_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """outputs_delete

        Deletes an output from the streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_delete_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def outputs_delete_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """outputs_delete

        Deletes an output from the streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_delete_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _outputs_delete_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        job_name,
        output_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if output_name is not None:
            _path_params['outputName'] = output_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def outputs_get(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Output:
        """outputs_get

        Gets details about the specified output.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_get_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def outputs_get_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Output]:
        """outputs_get

        Gets details about the specified output.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_get_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def outputs_get_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """outputs_get

        Gets details about the specified output.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_get_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _outputs_get_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        job_name,
        output_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if output_name is not None:
            _path_params['outputName'] = output_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def outputs_list_by_streaming_job(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        select: Annotated[Optional[StrictStr], Field(description="The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OutputListResult:
        """outputs_list_by_streaming_job

        Lists all of the outputs under the specified streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param select: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.
        :type select: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_list_by_streaming_job_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            select=select,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OutputListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def outputs_list_by_streaming_job_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        select: Annotated[Optional[StrictStr], Field(description="The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OutputListResult]:
        """outputs_list_by_streaming_job

        Lists all of the outputs under the specified streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param select: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.
        :type select: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_list_by_streaming_job_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            select=select,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OutputListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def outputs_list_by_streaming_job_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        select: Annotated[Optional[StrictStr], Field(description="The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """outputs_list_by_streaming_job

        Lists all of the outputs under the specified streaming job.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param select: The $select OData query parameter. This is a comma-separated list of structural properties to include in the response, or \"*\" to include all properties. By default, all properties are returned except diagnostics. Currently only accepts '*' as a valid value.
        :type select: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_list_by_streaming_job_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            select=select,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OutputListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _outputs_list_by_streaming_job_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        job_name,
        select,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        # process the query parameters
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def outputs_test(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Optional[Output], Field(description="If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> OutputsTest200Response:
        """outputs_test

        Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.
        :type output: Output
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_test_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OutputsTest200Response",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def outputs_test_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Optional[Output], Field(description="If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[OutputsTest200Response]:
        """outputs_test

        Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.
        :type output: Output
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_test_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OutputsTest200Response",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def outputs_test_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Optional[Output], Field(description="If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """outputs_test

        Tests whether an output’s datasource is reachable and usable by the Azure Stream Analytics service.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: If the output specified does not already exist, this parameter must contain the full output definition intended to be tested. If the output specified already exists, this parameter can be left null to test the existing output as is or if specified, the properties specified will overwrite the corresponding properties in the existing output (exactly like a PATCH operation) and the resulting output will be tested.
        :type output: Output
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_test_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "OutputsTest200Response",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _outputs_test_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        job_name,
        output_name,
        output,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if output_name is not None:
            _path_params['outputName'] = output_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if output is not None:
            _body_params = output


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}/test',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def outputs_update(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Output, Field(description="An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation.")],
        if_match: Annotated[Optional[StrictStr], Field(description="The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Output:
        """outputs_update

        Updates an existing output under an existing streaming job. This can be used to partially update (ie. update one or two properties) an output without affecting the rest the job or output definition.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation. (required)
        :type output: Output
        :param if_match: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
        :type if_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_update_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            if_match=if_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def outputs_update_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Output, Field(description="An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation.")],
        if_match: Annotated[Optional[StrictStr], Field(description="The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Output]:
        """outputs_update

        Updates an existing output under an existing streaming job. This can be used to partially update (ie. update one or two properties) an output without affecting the rest the job or output definition.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation. (required)
        :type output: Output
        :param if_match: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
        :type if_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_update_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            if_match=if_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def outputs_update_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client Api Version.")],
        subscription_id: Annotated[StrictStr, Field(description="GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal.")],
        job_name: Annotated[StrictStr, Field(description="The name of the streaming job.")],
        output_name: Annotated[StrictStr, Field(description="The name of the output.")],
        output: Annotated[Output, Field(description="An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation.")],
        if_match: Annotated[Optional[StrictStr], Field(description="The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """outputs_update

        Updates an existing output under an existing streaming job. This can be used to partially update (ie. update one or two properties) an output without affecting the rest the job or output definition.

        :param api_version: Client Api Version. (required)
        :type api_version: str
        :param subscription_id: GUID which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group that contains the resource. You can obtain this value from the Azure Resource Manager API or the portal. (required)
        :type resource_group_name: str
        :param job_name: The name of the streaming job. (required)
        :type job_name: str
        :param output_name: The name of the output. (required)
        :type output_name: str
        :param output: An Output object. The properties specified here will overwrite the corresponding properties in the existing output (ie. Those properties will be updated). Any properties that are set to null here will mean that the corresponding property in the existing output will remain the same and not change as a result of this PATCH operation. (required)
        :type output: Output
        :param if_match: The ETag of the output. Omit this value to always overwrite the current output. Specify the last-seen ETag value to prevent accidentally overwriting concurrent changes.
        :type if_match: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._outputs_update_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            job_name=job_name,
            output_name=output_name,
            output=output,
            if_match=if_match,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Output",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _outputs_update_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        job_name,
        output_name,
        output,
        if_match,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if output_name is not None:
            _path_params['outputName'] = output_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if if_match is not None:
            _header_params['If-Match'] = if_match
        # process the form parameters
        # process the body parameter
        if output is not None:
            _body_params = output


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/Microsoft.StreamAnalytics/streamingjobs/{jobName}/outputs/{outputName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


