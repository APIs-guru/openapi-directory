# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.long_term_retention_policy import LongTermRetentionPolicy

class TestLongTermRetentionPolicy(unittest.TestCase):
    """LongTermRetentionPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LongTermRetentionPolicy:
        """Test LongTermRetentionPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LongTermRetentionPolicy`
        """
        model = LongTermRetentionPolicy()
        if include_optional:
            return LongTermRetentionPolicy(
                daily_schedule = openapi_client.models.daily_retention_schedule.DailyRetentionSchedule(
                    retention_duration = openapi_client.models.retention_duration.RetentionDuration(
                        count = 56, 
                        duration_type = 'Invalid', ), 
                    retention_times = [
                        datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        ], ),
                monthly_schedule = openapi_client.models.monthly_retention_schedule.MonthlyRetentionSchedule(
                    retention_duration = openapi_client.models.retention_duration.RetentionDuration(
                        count = 56, 
                        duration_type = 'Invalid', ), 
                    retention_schedule_daily = openapi_client.models.daily_retention_format.DailyRetentionFormat(
                        days_of_the_month = [
                            openapi_client.models.day.Day(
                                date = 56, 
                                is_last = True, )
                            ], ), 
                    retention_schedule_format_type = 'Invalid', 
                    retention_schedule_weekly = openapi_client.models.weekly_retention_format.WeeklyRetentionFormat(
                        days_of_the_week = [
                            'Sunday'
                            ], 
                        weeks_of_the_month = [
                            'First'
                            ], ), 
                    retention_times = [
                        datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        ], ),
                weekly_schedule = openapi_client.models.weekly_retention_schedule.WeeklyRetentionSchedule(
                    days_of_the_week = [
                        'Sunday'
                        ], 
                    retention_duration = openapi_client.models.retention_duration.RetentionDuration(
                        count = 56, 
                        duration_type = 'Invalid', ), 
                    retention_times = [
                        datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        ], ),
                yearly_schedule = openapi_client.models.yearly_retention_schedule.YearlyRetentionSchedule(
                    months_of_year = [
                        'Invalid'
                        ], 
                    retention_duration = openapi_client.models.retention_duration.RetentionDuration(
                        count = 56, 
                        duration_type = 'Invalid', ), 
                    retention_schedule_daily = openapi_client.models.daily_retention_format.DailyRetentionFormat(
                        days_of_the_month = [
                            openapi_client.models.day.Day(
                                date = 56, 
                                is_last = True, )
                            ], ), 
                    retention_schedule_format_type = 'Invalid', 
                    retention_schedule_weekly = openapi_client.models.weekly_retention_format.WeeklyRetentionFormat(
                        days_of_the_week = [
                            'Sunday'
                            ], 
                        weeks_of_the_month = [
                            'First'
                            ], ), 
                    retention_times = [
                        datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                        ], )
            )
        else:
            return LongTermRetentionPolicy(
        )
        """

    def testLongTermRetentionPolicy(self):
        """Test LongTermRetentionPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
