# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mab_file_folder_protected_item import MabFileFolderProtectedItem

class TestMabFileFolderProtectedItem(unittest.TestCase):
    """MabFileFolderProtectedItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MabFileFolderProtectedItem:
        """Test MabFileFolderProtectedItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MabFileFolderProtectedItem`
        """
        model = MabFileFolderProtectedItem()
        if include_optional:
            return MabFileFolderProtectedItem(
                computer_name = '',
                deferred_delete_sync_time_in_utc = 56,
                extended_info = openapi_client.models.mab_file_folder_protected_item_extended_info.MabFileFolderProtectedItemExtendedInfo(
                    last_refreshed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    oldest_recovery_point = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    recovery_point_count = 56, ),
                friendly_name = '',
                is_scheduled_for_deferred_delete = True,
                last_backup_status = '',
                protection_state = ''
            )
        else:
            return MabFileFolderProtectedItem(
        )
        """

    def testMabFileFolderProtectedItem(self):
        """Test MabFileFolderProtectedItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
