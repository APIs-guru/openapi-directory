# coding: utf-8

"""
    Run History APIs

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.paginated_run_list import PaginatedRunList

class TestPaginatedRunList(unittest.TestCase):
    """PaginatedRunList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedRunList:
        """Test PaginatedRunList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedRunList`
        """
        model = PaginatedRunList()
        if include_optional:
            return PaginatedRunList(
                continuation_token = '',
                next_link = '',
                value = [
                    openapi_client.models.run.Run(
                        cancel_uri = '', 
                        created_by = openapi_client.models.created_by.CreatedBy(
                            user_name = '', 
                            user_object_id = '', 
                            user_tenant_id = '', ), 
                        created_from = openapi_client.models.created_from.CreatedFrom(
                            location = '', 
                            location_type = 'ArtifactId', 
                            type = 'Notebook', ), 
                        created_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        data_container_id = '', 
                        description = '', 
                        diagnostics_uri = '', 
                        end_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        error = openapi_client.models.error_response.ErrorResponse(
                            correlation = {
                                'key' : ''
                                }, 
                            environment = '', 
                            location = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        experiment_id = '', 
                        heartbeat_enabled = True, 
                        hidden = True, 
                        name = '', 
                        options = openapi_client.models.run_options.RunOptions(
                            generate_data_container_id_if_not_specified = True, ), 
                        parent_run_id = '', 
                        properties = {
                            'key' : ''
                            }, 
                        revision = 56, 
                        root_run_id = '', 
                        run_definition = openapi_client.models.run_definition.runDefinition(), 
                        run_id = '', 
                        run_number = 56, 
                        run_type = '', 
                        script_name = '', 
                        start_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        status = '', 
                        tags = {
                            'key' : ''
                            }, 
                        target = '', 
                        token = '', 
                        token_expiry_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user_id = '', 
                        warnings = [
                            openapi_client.models.run_details_warning.RunDetailsWarning(
                                message = '', 
                                source = '', )
                            ], )
                    ]
            )
        else:
            return PaginatedRunList(
        )
        """

    def testPaginatedRunList(self):
        """Test PaginatedRunList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
