# coding: utf-8

"""
    Microsoft.Support

    Microsoft Azure Support Resource Provider.

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.support_ticket_details_properties import SupportTicketDetailsProperties

class TestSupportTicketDetailsProperties(unittest.TestCase):
    """SupportTicketDetailsProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SupportTicketDetailsProperties:
        """Test SupportTicketDetailsProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SupportTicketDetailsProperties`
        """
        model = SupportTicketDetailsProperties()
        if include_optional:
            return SupportTicketDetailsProperties(
                contact_details = openapi_client.models.contact_profile.ContactProfile(
                    additional_email_addresses = [
                        ''
                        ], 
                    country = '', 
                    first_name = '', 
                    last_name = '', 
                    phone_number = '', 
                    preferred_contact_method = 'email', 
                    preferred_support_language = '', 
                    preferred_time_zone = '', 
                    primary_email_address = '', ),
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                enrollment_id = '',
                modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                problem_classification_display_name = '',
                problem_classification_id = '',
                problem_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                production_outage = True,
                quota_ticket_details = openapi_client.models.quota_ticket_details.QuotaTicketDetails(
                    quota_change_request_sub_type = '', 
                    quota_change_request_version = '', 
                    quota_change_requests = [
                        openapi_client.models.quota_change_request.QuotaChangeRequest(
                            payload = '', 
                            region = '', )
                        ], ),
                require24_x7_response = True,
                service_display_name = '',
                service_id = '',
                service_level_agreement = openapi_client.models.service_level_agreement.ServiceLevelAgreement(
                    expiration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    sla_minutes = 56, 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                severity = 'minimal',
                status = '',
                support_engineer = openapi_client.models.support_engineer.SupportEngineer(
                    email_address = '', ),
                support_plan_type = '',
                support_ticket_id = '',
                technical_ticket_details = openapi_client.models.technical_ticket_details.TechnicalTicketDetails(
                    resource_id = '', ),
                title = ''
            )
        else:
            return SupportTicketDetailsProperties(
                contact_details = openapi_client.models.contact_profile.ContactProfile(
                    additional_email_addresses = [
                        ''
                        ], 
                    country = '', 
                    first_name = '', 
                    last_name = '', 
                    phone_number = '', 
                    preferred_contact_method = 'email', 
                    preferred_support_language = '', 
                    preferred_time_zone = '', 
                    primary_email_address = '', ),
                description = '',
                problem_classification_id = '',
                service_id = '',
                severity = 'minimal',
                title = '',
        )
        """

    def testSupportTicketDetailsProperties(self):
        """Test SupportTicketDetailsProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
