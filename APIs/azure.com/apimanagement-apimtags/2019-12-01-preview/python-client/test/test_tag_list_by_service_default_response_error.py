# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Tag entity in your Azure API Management deployment. Tags can be assigned to APIs, Operations and Products.

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tag_list_by_service_default_response_error import TagListByServiceDefaultResponseError

class TestTagListByServiceDefaultResponseError(unittest.TestCase):
    """TagListByServiceDefaultResponseError unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TagListByServiceDefaultResponseError:
        """Test TagListByServiceDefaultResponseError
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TagListByServiceDefaultResponseError`
        """
        model = TagListByServiceDefaultResponseError()
        if include_optional:
            return TagListByServiceDefaultResponseError(
                code = '',
                details = [
                    openapi_client.models.tag_list_by_service_default_response_error_details_inner.Tag_ListByService_default_response_error_details_inner(
                        code = '', 
                        message = '', 
                        target = '', )
                    ],
                message = ''
            )
        else:
            return TagListByServiceDefaultResponseError(
        )
        """

    def testTagListByServiceDefaultResponseError(self):
        """Test TagListByServiceDefaultResponseError"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
