# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Tag entity in your Azure API Management deployment. Tags can be assigned to APIs, Operations and Products.

    The version of the OpenAPI document: 2017-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.operation_list_by_tags200_response_value_inner_properties_tag_properties import OperationListByTags200ResponseValueInnerPropertiesTagProperties

class TestOperationListByTags200ResponseValueInnerPropertiesTagProperties(unittest.TestCase):
    """OperationListByTags200ResponseValueInnerPropertiesTagProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OperationListByTags200ResponseValueInnerPropertiesTagProperties:
        """Test OperationListByTags200ResponseValueInnerPropertiesTagProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OperationListByTags200ResponseValueInnerPropertiesTagProperties`
        """
        model = OperationListByTags200ResponseValueInnerPropertiesTagProperties()
        if include_optional:
            return OperationListByTags200ResponseValueInnerPropertiesTagProperties(
                display_name = '0'
            )
        else:
            return OperationListByTags200ResponseValueInnerPropertiesTagProperties(
                display_name = '0',
        )
        """

    def testOperationListByTags200ResponseValueInnerPropertiesTagProperties(self):
        """Test OperationListByTags200ResponseValueInnerPropertiesTagProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
