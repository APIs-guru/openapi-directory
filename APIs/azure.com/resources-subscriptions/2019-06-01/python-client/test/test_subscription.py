# coding: utf-8

"""
    SubscriptionClient

    All resource groups and resources exist within subscriptions. These operation enable you get information about your subscriptions and tenants. A tenant is a dedicated instance of Azure Active Directory (Azure AD) for your organization.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription import Subscription

class TestSubscription(unittest.TestCase):
    """Subscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Subscription:
        """Test Subscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Subscription`
        """
        model = Subscription()
        if include_optional:
            return Subscription(
                authorization_source = '',
                display_name = '',
                id = '',
                managed_by_tenants = [
                    openapi_client.models.managed_by_tenant.ManagedByTenant(
                        tenant_id = '', )
                    ],
                state = 'Enabled',
                subscription_id = '',
                subscription_policies = openapi_client.models.subscription_policies.SubscriptionPolicies(
                    location_placement_id = '', 
                    quota_id = '', 
                    spending_limit = 'On', ),
                tenant_id = ''
            )
        else:
            return Subscription(
        )
        """

    def testSubscription(self):
        """Test Subscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
