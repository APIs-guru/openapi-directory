# coding: utf-8

"""
    Azure Media Services

    Streaming resource management client for Azure Media Services

    The version of the OpenAPI document: 2019-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.live_output_properties import LiveOutputProperties

class TestLiveOutputProperties(unittest.TestCase):
    """LiveOutputProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LiveOutputProperties:
        """Test LiveOutputProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LiveOutputProperties`
        """
        model = LiveOutputProperties()
        if include_optional:
            return LiveOutputProperties(
                archive_window_length = '',
                asset_name = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                hls = openapi_client.models.hls.Hls(
                    fragments_per_ts_segment = 56, ),
                last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                manifest_name = '',
                output_snap_time = 56,
                provisioning_state = '',
                resource_state = 'Creating'
            )
        else:
            return LiveOutputProperties(
                archive_window_length = '',
                asset_name = '',
        )
        """

    def testLiveOutputProperties(self):
        """Test LiveOutputProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
