# coding: utf-8

"""
    Azure Media Services

    Streaming resource management client for Azure Media Services

    The version of the OpenAPI document: 2018-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.live_output_list_result import LiveOutputListResult

class TestLiveOutputListResult(unittest.TestCase):
    """LiveOutputListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LiveOutputListResult:
        """Test LiveOutputListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LiveOutputListResult`
        """
        model = LiveOutputListResult()
        if include_optional:
            return LiveOutputListResult(
                odata_count = 56,
                odata_next_link = '',
                value = [
                    openapi_client.models.live_output.LiveOutput(
                        properties = openapi_client.models.live_output_properties.LiveOutputProperties(
                            archive_window_length = '', 
                            asset_name = '', 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            hls = openapi_client.models.hls.Hls(
                                fragments_per_ts_segment = 56, ), 
                            last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            manifest_name = '', 
                            output_snap_time = 56, 
                            provisioning_state = '', 
                            resource_state = 'Creating', ), )
                    ]
            )
        else:
            return LiveOutputListResult(
        )
        """

    def testLiveOutputListResult(self):
        """Test LiveOutputListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
