# coding: utf-8

"""
    SchedulerManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2014-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_collection_list_result import JobCollectionListResult

class TestJobCollectionListResult(unittest.TestCase):
    """JobCollectionListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobCollectionListResult:
        """Test JobCollectionListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobCollectionListResult`
        """
        model = JobCollectionListResult()
        if include_optional:
            return JobCollectionListResult(
                next_link = '',
                value = [
                    openapi_client.models.job_collection_definition.JobCollectionDefinition(
                        id = '', 
                        location = '', 
                        name = '', 
                        properties = openapi_client.models.job_collection_properties.JobCollectionProperties(
                            quota = openapi_client.models.job_collection_quota.JobCollectionQuota(
                                max_job_count = 56, 
                                max_job_occurrence = 56, 
                                max_recurrence = openapi_client.models.job_max_recurrence.JobMaxRecurrence(
                                    frequency = 'Minute', 
                                    interval = 56, ), ), 
                            sku = openapi_client.models.sku.Sku(
                                name = 'Standard', ), 
                            state = 'Enabled', ), 
                        tags = {
                            'key' : ''
                            }, 
                        type = '', )
                    ]
            )
        else:
            return JobCollectionListResult(
        )
        """

    def testJobCollectionListResult(self):
        """Test JobCollectionListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
