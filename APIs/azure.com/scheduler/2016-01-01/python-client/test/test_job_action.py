# coding: utf-8

"""
    SchedulerManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_action import JobAction

class TestJobAction(unittest.TestCase):
    """JobAction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobAction:
        """Test JobAction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobAction`
        """
        model = JobAction()
        if include_optional:
            return JobAction(
                error_action = openapi_client.models.job_error_action.JobErrorAction(
                    queue_message = openapi_client.models.storage_queue_message.StorageQueueMessage(
                        message = '', 
                        queue_name = '', 
                        sas_token = '', 
                        storage_account = '', ), 
                    request = openapi_client.models.http_request.HttpRequest(
                        authentication = openapi_client.models.http_authentication.HttpAuthentication(
                            type = 'NotSpecified', ), 
                        body = '', 
                        headers = {
                            'key' : ''
                            }, 
                        method = '', 
                        uri = '', ), 
                    retry_policy = openapi_client.models.retry_policy.RetryPolicy(
                        retry_count = 56, 
                        retry_interval = '', 
                        retry_type = 'None', ), 
                    service_bus_queue_message = openapi_client.models.service_bus_queue_message.ServiceBusQueueMessage(
                        queue_name = '', ), 
                    service_bus_topic_message = openapi_client.models.service_bus_topic_message.ServiceBusTopicMessage(
                        topic_path = '', ), 
                    type = 'Http', ),
                queue_message = openapi_client.models.storage_queue_message.StorageQueueMessage(
                    message = '', 
                    queue_name = '', 
                    sas_token = '', 
                    storage_account = '', ),
                request = openapi_client.models.http_request.HttpRequest(
                    authentication = openapi_client.models.http_authentication.HttpAuthentication(
                        type = 'NotSpecified', ), 
                    body = '', 
                    headers = {
                        'key' : ''
                        }, 
                    method = '', 
                    uri = '', ),
                retry_policy = openapi_client.models.retry_policy.RetryPolicy(
                    retry_count = 56, 
                    retry_interval = '', 
                    retry_type = 'None', ),
                service_bus_queue_message = openapi_client.models.service_bus_queue_message.ServiceBusQueueMessage(
                    queue_name = '', ),
                service_bus_topic_message = openapi_client.models.service_bus_topic_message.ServiceBusTopicMessage(
                    topic_path = '', ),
                type = 'Http'
            )
        else:
            return JobAction(
        )
        """

    def testJobAction(self):
        """Test JobAction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
