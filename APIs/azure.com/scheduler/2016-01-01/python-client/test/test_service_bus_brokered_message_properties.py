# coding: utf-8

"""
    SchedulerManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_bus_brokered_message_properties import ServiceBusBrokeredMessageProperties

class TestServiceBusBrokeredMessageProperties(unittest.TestCase):
    """ServiceBusBrokeredMessageProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceBusBrokeredMessageProperties:
        """Test ServiceBusBrokeredMessageProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceBusBrokeredMessageProperties`
        """
        model = ServiceBusBrokeredMessageProperties()
        if include_optional:
            return ServiceBusBrokeredMessageProperties(
                content_type = '',
                correlation_id = '',
                force_persistence = True,
                label = '',
                message_id = '',
                partition_key = '',
                reply_to = '',
                reply_to_session_id = '',
                scheduled_enqueue_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                session_id = '',
                time_to_live = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                to = '',
                via_partition_key = ''
            )
        else:
            return ServiceBusBrokeredMessageProperties(
        )
        """

    def testServiceBusBrokeredMessageProperties(self):
        """Test ServiceBusBrokeredMessageProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
