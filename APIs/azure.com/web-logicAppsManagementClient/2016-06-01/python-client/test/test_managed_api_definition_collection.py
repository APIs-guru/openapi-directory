# coding: utf-8

"""
    LogicAppsManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_api_definition_collection import ManagedApiDefinitionCollection

class TestManagedApiDefinitionCollection(unittest.TestCase):
    """ManagedApiDefinitionCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedApiDefinitionCollection:
        """Test ManagedApiDefinitionCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedApiDefinitionCollection`
        """
        model = ManagedApiDefinitionCollection()
        if include_optional:
            return ManagedApiDefinitionCollection(
                value = [
                    openapi_client.models.managed_api_definition.ManagedApiDefinition(
                        properties = openapi_client.models.api_resource_properties.ApiResourceProperties(
                            api_definition_url = '', 
                            api_definitions = openapi_client.models.api_resource_definitions.ApiResourceDefinitions(
                                modified_swagger_url = '', 
                                original_swagger_url = '', ), 
                            backend_service = openapi_client.models.api_resource_backend_service.ApiResourceBackendService(
                                service_url = '', ), 
                            capabilities = [
                                ''
                                ], 
                            connection_parameters = {
                                'key' : openapi_client.models.connection_parameter.ConnectionParameter(
                                    o_auth_settings = openapi_client.models.api_o_auth_settings.ApiOAuthSettings(
                                        client_id = '', 
                                        client_secret = '', 
                                        custom_parameters = {
                                            'key' : openapi_client.models.api_o_auth_settings_parameter.ApiOAuthSettingsParameter(
                                                options = openapi_client.models.options.options(), 
                                                ui_definition = openapi_client.models.ui_definition.uiDefinition(), 
                                                value = '', )
                                            }, 
                                        identity_provider = '', 
                                        redirect_url = '', 
                                        scopes = [
                                            ''
                                            ], ), 
                                    type = 'string', )
                                }, 
                            general_information = openapi_client.models.api_resource_general_information.ApiResourceGeneralInformation(
                                description = '', 
                                display_name = '', 
                                icon_url = '', 
                                release_tag = '', 
                                terms_of_use_url = '', ), 
                            metadata = openapi_client.models.api_resource_metadata.ApiResourceMetadata(
                                api_type = 'NotSpecified', 
                                brand_color = '', 
                                connection_type = '', 
                                hide_key = '', 
                                source = '', 
                                tags = {SampleTagName=SampleTagValue}, 
                                wsdl_import_method = 'NotSpecified', 
                                wsdl_service = openapi_client.models.wsdl_service.WsdlService(
                                    endpoint_qualified_names = [
                                        ''
                                        ], 
                                    qualified_name = '', ), ), 
                            name = '', 
                            policies = openapi_client.models.api_resource_policies.ApiResourcePolicies(
                                content = '', 
                                content_link = '', ), 
                            runtime_urls = [
                                ''
                                ], 
                            swagger = openapi_client.models.swagger.swagger(), ), )
                    ]
            )
        else:
            return ManagedApiDefinitionCollection(
        )
        """

    def testManagedApiDefinitionCollection(self):
        """Test ManagedApiDefinitionCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
