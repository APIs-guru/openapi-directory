# coding: utf-8

"""
    LogicAppsManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.custom_api_definition_collection import CustomApiDefinitionCollection

class TestCustomApiDefinitionCollection(unittest.TestCase):
    """CustomApiDefinitionCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomApiDefinitionCollection:
        """Test CustomApiDefinitionCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomApiDefinitionCollection`
        """
        model = CustomApiDefinitionCollection()
        if include_optional:
            return CustomApiDefinitionCollection(
                value = [
                    openapi_client.models.custom_api_definition.CustomApiDefinition(
                        properties = openapi_client.models.custom_api_properties_definition.CustomApiPropertiesDefinition(
                            api_definitions = openapi_client.models.api_resource_definitions.ApiResourceDefinitions(
                                modified_swagger_url = '', 
                                original_swagger_url = '', ), 
                            api_type = 'NotSpecified', 
                            backend_service = openapi_client.models.api_resource_backend_service.ApiResourceBackendService(
                                service_url = '', ), 
                            brand_color = '', 
                            capabilities = [
                                ''
                                ], 
                            connection_parameters = {
                                'key' : openapi_client.models.connection_parameter.ConnectionParameter(
                                    o_auth_settings = openapi_client.models.api_o_auth_settings.ApiOAuthSettings(
                                        client_id = '', 
                                        client_secret = '', 
                                        custom_parameters = {
                                            'key' : openapi_client.models.api_o_auth_settings_parameter.ApiOAuthSettingsParameter(
                                                options = openapi_client.models.options.options(), 
                                                ui_definition = openapi_client.models.ui_definition.uiDefinition(), 
                                                value = '', )
                                            }, 
                                        identity_provider = '', 
                                        redirect_url = '', 
                                        scopes = [
                                            ''
                                            ], ), 
                                    type = 'string', )
                                }, 
                            description = '', 
                            display_name = '', 
                            icon_uri = '', 
                            runtime_urls = [
                                ''
                                ], 
                            swagger = openapi_client.models.swagger.swagger(), 
                            wsdl_definition = openapi_client.models.wsdl_definition.WsdlDefinition(
                                content = '', 
                                import_method = 'NotSpecified', 
                                service = openapi_client.models.wsdl_service.WsdlService(
                                    endpoint_qualified_names = [
                                        ''
                                        ], 
                                    qualified_name = '', ), 
                                url = '', ), ), )
                    ]
            )
        else:
            return CustomApiDefinitionCollection(
        )
        """

    def testCustomApiDefinitionCollection(self):
        """Test CustomApiDefinitionCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
