# coding: utf-8

"""
    SharedImageGalleryServiceClient

    Shared Image Gallery Service Client.

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.gallery_image_list import GalleryImageList

class TestGalleryImageList(unittest.TestCase):
    """GalleryImageList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GalleryImageList:
        """Test GalleryImageList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GalleryImageList`
        """
        model = GalleryImageList()
        if include_optional:
            return GalleryImageList(
                next_link = '',
                value = [
                    openapi_client.models.gallery_image.GalleryImage(
                        properties = openapi_client.models.gallery_image_properties.GalleryImageProperties(
                            description = '', 
                            disallowed = openapi_client.models.disallowed.Disallowed(
                                disk_types = [
                                    ''
                                    ], ), 
                            end_of_life_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            eula = '', 
                            identifier = openapi_client.models.gallery_image_identifier.GalleryImageIdentifier(
                                offer = '', 
                                publisher = '', 
                                sku = '', ), 
                            os_state = 'Generalized', 
                            os_type = 'Windows', 
                            privacy_statement_uri = '', 
                            provisioning_state = 'Creating', 
                            purchase_plan = openapi_client.models.image_purchase_plan.ImagePurchasePlan(
                                name = '', 
                                product = '', 
                                publisher = '', ), 
                            recommended = openapi_client.models.recommended_machine_configuration.RecommendedMachineConfiguration(
                                memory = openapi_client.models.resource_range.ResourceRange(
                                    max = 56, 
                                    min = 56, ), 
                                v_cpus = openapi_client.models.resource_range.ResourceRange(
                                    max = 56, 
                                    min = 56, ), ), 
                            release_note_uri = '', ), )
                    ]
            )
        else:
            return GalleryImageList(
                value = [
                    openapi_client.models.gallery_image.GalleryImage(
                        properties = openapi_client.models.gallery_image_properties.GalleryImageProperties(
                            description = '', 
                            disallowed = openapi_client.models.disallowed.Disallowed(
                                disk_types = [
                                    ''
                                    ], ), 
                            end_of_life_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            eula = '', 
                            identifier = openapi_client.models.gallery_image_identifier.GalleryImageIdentifier(
                                offer = '', 
                                publisher = '', 
                                sku = '', ), 
                            os_state = 'Generalized', 
                            os_type = 'Windows', 
                            privacy_statement_uri = '', 
                            provisioning_state = 'Creating', 
                            purchase_plan = openapi_client.models.image_purchase_plan.ImagePurchasePlan(
                                name = '', 
                                product = '', 
                                publisher = '', ), 
                            recommended = openapi_client.models.recommended_machine_configuration.RecommendedMachineConfiguration(
                                memory = openapi_client.models.resource_range.ResourceRange(
                                    max = 56, 
                                    min = 56, ), 
                                v_cpus = openapi_client.models.resource_range.ResourceRange(
                                    max = 56, 
                                    min = 56, ), ), 
                            release_note_uri = '', ), )
                    ],
        )
        """

    def testGalleryImageList(self):
        """Test GalleryImageList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
