# coding: utf-8

"""
    DataShareManagementClient

    Creates a Microsoft.DataShare management client.

    The version of the OpenAPI document: 2019-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.consumer_invitation_properties import ConsumerInvitationProperties

class TestConsumerInvitationProperties(unittest.TestCase):
    """ConsumerInvitationProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConsumerInvitationProperties:
        """Test ConsumerInvitationProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConsumerInvitationProperties`
        """
        model = ConsumerInvitationProperties()
        if include_optional:
            return ConsumerInvitationProperties(
                data_set_count = 56,
                description = '',
                invitation_id = '',
                invitation_status = 'Pending',
                location = '',
                provider_email = '',
                provider_name = '',
                provider_tenant_name = '',
                responded_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sent_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                share_name = '',
                terms_of_use = '',
                user_email = '',
                user_name = ''
            )
        else:
            return ConsumerInvitationProperties(
                invitation_id = '',
        )
        """

    def testConsumerInvitationProperties(self):
        """Test ConsumerInvitationProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
