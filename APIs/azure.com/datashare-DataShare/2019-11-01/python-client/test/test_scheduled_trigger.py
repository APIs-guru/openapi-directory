# coding: utf-8

"""
    DataShareManagementClient

    Creates a Microsoft.DataShare management client.

    The version of the OpenAPI document: 2019-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.scheduled_trigger import ScheduledTrigger

class TestScheduledTrigger(unittest.TestCase):
    """ScheduledTrigger unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScheduledTrigger:
        """Test ScheduledTrigger
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScheduledTrigger`
        """
        model = ScheduledTrigger()
        if include_optional:
            return ScheduledTrigger(
                properties = openapi_client.models.scheduled_trigger_properties.ScheduledTriggerProperties(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    provisioning_state = 'Succeeded', 
                    recurrence_interval = 'Hour', 
                    synchronization_mode = 'Incremental', 
                    synchronization_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    trigger_status = 'Active', 
                    user_name = '', ),
                kind = 'ScheduleBased',
                id = '',
                name = '',
                type = ''
            )
        else:
            return ScheduledTrigger(
                properties = openapi_client.models.scheduled_trigger_properties.ScheduledTriggerProperties(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    provisioning_state = 'Succeeded', 
                    recurrence_interval = 'Hour', 
                    synchronization_mode = 'Incremental', 
                    synchronization_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    trigger_status = 'Active', 
                    user_name = '', ),
                kind = 'ScheduleBased',
        )
        """

    def testScheduledTrigger(self):
        """Test ScheduledTrigger"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
