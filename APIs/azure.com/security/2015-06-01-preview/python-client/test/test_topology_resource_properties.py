# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2015-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.topology_resource_properties import TopologyResourceProperties

class TestTopologyResourceProperties(unittest.TestCase):
    """TopologyResourceProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TopologyResourceProperties:
        """Test TopologyResourceProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TopologyResourceProperties`
        """
        model = TopologyResourceProperties()
        if include_optional:
            return TopologyResourceProperties(
                calculated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                topology_resources = [
                    openapi_client.models.topology_single_resource.TopologySingleResource(
                        children = [
                            openapi_client.models.topology_single_resource_child.TopologySingleResourceChild(
                                resource_id = '', )
                            ], 
                        location = '', 
                        network_zones = '', 
                        parents = [
                            openapi_client.models.topology_single_resource_parent.TopologySingleResourceParent(
                                resource_id = '', )
                            ], 
                        recommendations_exist = True, 
                        resource_id = '', 
                        severity = '', 
                        topology_score = 56, )
                    ]
            )
        else:
            return TopologyResourceProperties(
        )
        """

    def testTopologyResourceProperties(self):
        """Test TopologyResourceProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
