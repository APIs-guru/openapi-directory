# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2015-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alert_properties import AlertProperties

class TestAlertProperties(unittest.TestCase):
    """AlertProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertProperties:
        """Test AlertProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertProperties`
        """
        model = AlertProperties()
        if include_optional:
            return AlertProperties(
                action_taken = '',
                alert_display_name = '',
                alert_name = '',
                associated_resource = '',
                can_be_investigated = True,
                compromised_entity = '',
                confidence_reasons = [
                    openapi_client.models.alert_confidence_reason.AlertConfidenceReason(
                        reason = '', 
                        type = '', )
                    ],
                confidence_score = 0,
                description = '',
                detected_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                entities = [
                    { }
                    ],
                extended_properties = { },
                instance_id = '',
                is_incident = True,
                remediation_steps = '',
                reported_severity = 'Silent',
                reported_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                state = '',
                subscription_id = '',
                system_source = '',
                vendor_name = '',
                workspace_arm_id = ''
            )
        else:
            return AlertProperties(
        )
        """

    def testAlertProperties(self):
        """Test AlertProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
