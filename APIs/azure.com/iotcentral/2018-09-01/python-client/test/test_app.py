# coding: utf-8

"""
    IotCentralClient

    Use this API to manage IoT Central Applications in your Azure subscription.

    The version of the OpenAPI document: 2018-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app import App

class TestApp(unittest.TestCase):
    """App unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> App:
        """Test App
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `App`
        """
        model = App()
        if include_optional:
            return App(
                properties = openapi_client.models.app_properties.AppProperties(
                    application_id = '', 
                    display_name = 'jUR,rZ#UM/?R,Fp^l6$ARjbhJk C>i H'qT\\{<?'es#)#iK.YM{Rag2/!KB!k@5oXh.:Ts\";mGL,i&z5[P@M\"lzfB+Y,Twzfu~N^z', 
                    subdomain = 'pr1c2v7s6djuy1zmetozkhdomha1bae37b8ocvx8o5', 
                    template = '', ),
                sku = openapi_client.models.app_sku_info.AppSkuInfo(
                    name = 'F1', ),
                id = '',
                location = '',
                name = '.UzyBAw2ZuufUOHOZ',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return App(
                sku = openapi_client.models.app_sku_info.AppSkuInfo(
                    name = 'F1', ),
                location = '',
        )
        """

    def testApp(self):
        """Test App"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
