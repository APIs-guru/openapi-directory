# coding: utf-8

"""
    Azure IoT Central

    Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.

    The version of the OpenAPI document: preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_api_tokens_get(self) -> None:
        """Test case for api_tokens_get

        Get an API token by ID.
        """
        pass

    def test_api_tokens_list(self) -> None:
        """Test case for api_tokens_list

        Get the list of API tokens in an application.
        """
        pass

    def test_api_tokens_remove(self) -> None:
        """Test case for api_tokens_remove

        Delete an API token.
        """
        pass

    def test_api_tokens_set(self) -> None:
        """Test case for api_tokens_set

        Create a new API token in the application.
        """
        pass

    def test_continuous_data_exports_get(self) -> None:
        """Test case for continuous_data_exports_get

        Get a continuous data export by ID.
        """
        pass

    def test_continuous_data_exports_list(self) -> None:
        """Test case for continuous_data_exports_list

        Get the list of continuous data exports in an application.
        """
        pass

    def test_continuous_data_exports_remove(self) -> None:
        """Test case for continuous_data_exports_remove

        Delete a continuous data export.
        """
        pass

    def test_continuous_data_exports_set(self) -> None:
        """Test case for continuous_data_exports_set

        Create a new continuous data export or update an existing one by ID.
        """
        pass

    def test_device_templates_get(self) -> None:
        """Test case for device_templates_get

        Get a device template by ID
        """
        pass

    def test_device_templates_get_merged(self) -> None:
        """Test case for device_templates_get_merged

        Get a merged device template by ID
        """
        pass

    def test_device_templates_list(self) -> None:
        """Test case for device_templates_list

        Get the list of device templates in an application
        """
        pass

    def test_device_templates_list_devices(self) -> None:
        """Test case for device_templates_list_devices

        Get devices for a template
        """
        pass

    def test_device_templates_remove(self) -> None:
        """Test case for device_templates_remove

        Delete a device template
        """
        pass

    def test_device_templates_set(self) -> None:
        """Test case for device_templates_set

        Create or update a device template by ID
        """
        pass

    def test_devices_execute_command(self) -> None:
        """Test case for devices_execute_command

        Execute a device command
        """
        pass

    def test_devices_get(self) -> None:
        """Test case for devices_get

        Get a device by ID
        """
        pass

    def test_devices_get_cloud_properties(self) -> None:
        """Test case for devices_get_cloud_properties

        Get device cloud properties
        """
        pass

    def test_devices_get_command_history(self) -> None:
        """Test case for devices_get_command_history

        Get device command history
        """
        pass

    def test_devices_get_component_properties(self) -> None:
        """Test case for devices_get_component_properties

        Get device properties for a specific component
        """
        pass

    def test_devices_get_credentials(self) -> None:
        """Test case for devices_get_credentials

        Get device credentials
        """
        pass

    def test_devices_get_properties(self) -> None:
        """Test case for devices_get_properties

        Get device properties
        """
        pass

    def test_devices_get_telemetry_value(self) -> None:
        """Test case for devices_get_telemetry_value

        Get device telemetry value
        """
        pass

    def test_devices_list(self) -> None:
        """Test case for devices_list

        Get the list of devices in an application
        """
        pass

    def test_devices_remove(self) -> None:
        """Test case for devices_remove

        Delete a device
        """
        pass

    def test_devices_set(self) -> None:
        """Test case for devices_set

        Create or update a device
        """
        pass

    def test_devices_update_cloud_properties(self) -> None:
        """Test case for devices_update_cloud_properties

        Update device cloud properties
        """
        pass

    def test_devices_update_component_properties(self) -> None:
        """Test case for devices_update_component_properties

        Update device properties for a specific component
        """
        pass

    def test_devices_update_properties(self) -> None:
        """Test case for devices_update_properties

        Update device properties
        """
        pass

    def test_roles_get(self) -> None:
        """Test case for roles_get

        Get a role by ID.
        """
        pass

    def test_roles_list(self) -> None:
        """Test case for roles_list

        Get the list of roles in an application.
        """
        pass


if __name__ == '__main__':
    unittest.main()
