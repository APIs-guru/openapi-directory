# coding: utf-8

"""
    Azure IoT Central

    Azure IoT Central is a service that makes it easy to connect, monitor, and manage your IoT devices at scale.

    The version of the OpenAPI document: preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.continuous_data_export import ContinuousDataExport

class TestContinuousDataExport(unittest.TestCase):
    """ContinuousDataExport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContinuousDataExport:
        """Test ContinuousDataExport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContinuousDataExport`
        """
        model = ContinuousDataExport()
        if include_optional:
            return ContinuousDataExport(
                display_name = '',
                enabled = True,
                endpoint = openapi_client.models.endpoint.Endpoint(
                    connection_string = '', 
                    name = '', 
                    type = '', ),
                etag = '',
                id = '',
                sources = [
                    'devices'
                    ],
                status = ''
            )
        else:
            return ContinuousDataExport(
                enabled = True,
                endpoint = openapi_client.models.endpoint.Endpoint(
                    connection_string = '', 
                    name = '', 
                    type = '', ),
                sources = [
                    'devices'
                    ],
        )
        """

    def testContinuousDataExport(self):
        """Test ContinuousDataExport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
