# coding: utf-8

"""
    ExpressRouteCrossConnection REST APIs

    The Microsoft Azure ExpressRouteCrossConnection Resource Provider REST APIs describes the operations for the connectivity provider to provision ExpressRoute circuit, create and modify BGP peering entities and troubleshoot connectivity on customer's ExpressRoute circuit.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.express_route_cross_connections_list_routes_table200_response import ExpressRouteCrossConnectionsListRoutesTable200Response

class TestExpressRouteCrossConnectionsListRoutesTable200Response(unittest.TestCase):
    """ExpressRouteCrossConnectionsListRoutesTable200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExpressRouteCrossConnectionsListRoutesTable200Response:
        """Test ExpressRouteCrossConnectionsListRoutesTable200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExpressRouteCrossConnectionsListRoutesTable200Response`
        """
        model = ExpressRouteCrossConnectionsListRoutesTable200Response()
        if include_optional:
            return ExpressRouteCrossConnectionsListRoutesTable200Response(
                next_link = '',
                value = [
                    openapi_client.models.express_route_cross_connections_list_routes_table_200_response_value_inner.ExpressRouteCrossConnections_ListRoutesTable_200_response_value_inner(
                        loc_prf = '', 
                        network = '', 
                        next_hop = '', 
                        path = '', 
                        weight = 56, )
                    ]
            )
        else:
            return ExpressRouteCrossConnectionsListRoutesTable200Response(
        )
        """

    def testExpressRouteCrossConnectionsListRoutesTable200Response(self):
        """Test ExpressRouteCrossConnectionsListRoutesTable200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
