# coding: utf-8

"""
    UsageManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2015-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.usage_sample import UsageSample

class TestUsageSample(unittest.TestCase):
    """UsageSample unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UsageSample:
        """Test UsageSample
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UsageSample`
        """
        model = UsageSample()
        if include_optional:
            return UsageSample(
                info_fields = openapi_client.models.info_field.InfoField(
                    project = '', ),
                instance_data = '',
                meter_category = '',
                meter_id = '',
                meter_name = '',
                meter_region = '',
                meter_sub_category = '',
                quantity = 1.337,
                subscription_id = '',
                unit = '',
                usage_end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                usage_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return UsageSample(
        )
        """

    def testUsageSample(self):
        """Test UsageSample"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
