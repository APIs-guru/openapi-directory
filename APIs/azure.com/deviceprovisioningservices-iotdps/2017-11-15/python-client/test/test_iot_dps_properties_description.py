# coding: utf-8

"""
    iotDpsClient

    API for using the Azure IoT Hub Device Provisioning Service features.

    The version of the OpenAPI document: 2017-11-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.iot_dps_properties_description import IotDpsPropertiesDescription

class TestIotDpsPropertiesDescription(unittest.TestCase):
    """IotDpsPropertiesDescription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IotDpsPropertiesDescription:
        """Test IotDpsPropertiesDescription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IotDpsPropertiesDescription`
        """
        model = IotDpsPropertiesDescription()
        if include_optional:
            return IotDpsPropertiesDescription(
                allocation_policy = 'Hashed',
                authorization_policies = [
                    openapi_client.models.shared_access_signature_authorization_rule[access_rights_description].SharedAccessSignatureAuthorizationRule[AccessRightsDescription](
                        key_name = '', 
                        primary_key = '', 
                        rights = 'ServiceConfig', 
                        secondary_key = '', )
                    ],
                device_provisioning_host_name = '',
                id_scope = '',
                iot_hubs = [
                    openapi_client.models.iot_hub_definition_description.IotHubDefinitionDescription(
                        allocation_weight = 56, 
                        apply_allocation_policy = True, 
                        connection_string = '', 
                        location = '', 
                        name = '', )
                    ],
                provisioning_state = '',
                service_operations_host_name = '',
                state = 'Activating'
            )
        else:
            return IotDpsPropertiesDescription(
        )
        """

    def testIotDpsPropertiesDescription(self):
        """Test IotDpsPropertiesDescription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
