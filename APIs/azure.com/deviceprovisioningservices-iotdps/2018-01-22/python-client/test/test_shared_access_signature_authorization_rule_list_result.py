# coding: utf-8

"""
    iotDpsClient

    API for using the Azure IoT Hub Device Provisioning Service features.

    The version of the OpenAPI document: 2018-01-22
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.shared_access_signature_authorization_rule_list_result import SharedAccessSignatureAuthorizationRuleListResult

class TestSharedAccessSignatureAuthorizationRuleListResult(unittest.TestCase):
    """SharedAccessSignatureAuthorizationRuleListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SharedAccessSignatureAuthorizationRuleListResult:
        """Test SharedAccessSignatureAuthorizationRuleListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SharedAccessSignatureAuthorizationRuleListResult`
        """
        model = SharedAccessSignatureAuthorizationRuleListResult()
        if include_optional:
            return SharedAccessSignatureAuthorizationRuleListResult(
                next_link = '',
                value = [
                    openapi_client.models.shared_access_signature_authorization_rule[access_rights_description].SharedAccessSignatureAuthorizationRule[AccessRightsDescription](
                        key_name = '', 
                        primary_key = '', 
                        rights = 'ServiceConfig', 
                        secondary_key = '', )
                    ]
            )
        else:
            return SharedAccessSignatureAuthorizationRuleListResult(
        )
        """

    def testSharedAccessSignatureAuthorizationRuleListResult(self):
        """Test SharedAccessSignatureAuthorizationRuleListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
