# coding: utf-8

"""
    AutomationManagement

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2015-10-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dsc_configuration_list_result import DscConfigurationListResult

class TestDscConfigurationListResult(unittest.TestCase):
    """DscConfigurationListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DscConfigurationListResult:
        """Test DscConfigurationListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DscConfigurationListResult`
        """
        model = DscConfigurationListResult()
        if include_optional:
            return DscConfigurationListResult(
                next_link = '',
                total_count = 56,
                value = [
                    openapi_client.models.dsc_configuration.DscConfiguration(
                        etag = '', 
                        properties = openapi_client.models.dsc_configuration_properties.DscConfigurationProperties(
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            job_count = 56, 
                            last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            log_verbose = True, 
                            node_configuration_count = 56, 
                            parameters = {
                                'key' : openapi_client.models.dsc_configuration_parameter.DscConfigurationParameter(
                                    default_value = '', 
                                    is_mandatory = True, 
                                    position = 56, 
                                    type = '', )
                                }, 
                            provisioning_state = 'Succeeded', 
                            source = openapi_client.models.content_source.ContentSource(
                                hash = openapi_client.models.content_hash.ContentHash(
                                    algorithm = '', 
                                    value = '', ), 
                                type = 'embeddedContent', 
                                value = '', 
                                version = '', ), 
                            state = 'New', ), )
                    ]
            )
        else:
            return DscConfigurationListResult(
        )
        """

    def testDscConfigurationListResult(self):
        """Test DscConfigurationListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
