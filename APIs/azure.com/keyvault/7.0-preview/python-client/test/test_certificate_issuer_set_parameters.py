# coding: utf-8

"""
    KeyVaultClient

    The key vault client performs cryptographic key operations and vault operations against the Key Vault service.

    The version of the OpenAPI document: 7.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.certificate_issuer_set_parameters import CertificateIssuerSetParameters

class TestCertificateIssuerSetParameters(unittest.TestCase):
    """CertificateIssuerSetParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificateIssuerSetParameters:
        """Test CertificateIssuerSetParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificateIssuerSetParameters`
        """
        model = CertificateIssuerSetParameters()
        if include_optional:
            return CertificateIssuerSetParameters(
                attributes = openapi_client.models.issuer_attributes.IssuerAttributes(
                    created = 56, 
                    enabled = True, 
                    updated = 56, ),
                credentials = openapi_client.models.issuer_credentials.IssuerCredentials(
                    account_id = '', 
                    pwd = '', ),
                org_details = openapi_client.models.organization_details.OrganizationDetails(
                    admin_details = [
                        openapi_client.models.administrator_details.AdministratorDetails(
                            email = '', 
                            first_name = '', 
                            last_name = '', 
                            phone = '', )
                        ], 
                    id = '', ),
                provider = ''
            )
        else:
            return CertificateIssuerSetParameters(
                provider = '',
        )
        """

    def testCertificateIssuerSetParameters(self):
        """Test CertificateIssuerSetParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
