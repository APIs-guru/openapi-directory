# coding: utf-8

"""
    KeyVaultManagementClient

    The Azure management API provides a RESTful set of web services that interact with Azure Key Vault.

    The version of the OpenAPI document: 2015-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vault_properties import VaultProperties

class TestVaultProperties(unittest.TestCase):
    """VaultProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VaultProperties:
        """Test VaultProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VaultProperties`
        """
        model = VaultProperties()
        if include_optional:
            return VaultProperties(
                access_policies = [
                    openapi_client.models.access_policy_entry.AccessPolicyEntry(
                        application_id = '', 
                        object_id = '', 
                        permissions = openapi_client.models.permissions.Permissions(
                            certificates = [
                                'all'
                                ], 
                            keys = [
                                'all'
                                ], 
                            secrets = [
                                'all'
                                ], ), 
                        tenant_id = '', )
                    ],
                enable_soft_delete = True,
                enabled_for_deployment = True,
                enabled_for_disk_encryption = True,
                enabled_for_template_deployment = True,
                sku = openapi_client.models.sku.Sku(
                    family = 'A', 
                    name = 'standard', ),
                tenant_id = '',
                vault_uri = ''
            )
        else:
            return VaultProperties(
                access_policies = [
                    openapi_client.models.access_policy_entry.AccessPolicyEntry(
                        application_id = '', 
                        object_id = '', 
                        permissions = openapi_client.models.permissions.Permissions(
                            certificates = [
                                'all'
                                ], 
                            keys = [
                                'all'
                                ], 
                            secrets = [
                                'all'
                                ], ), 
                        tenant_id = '', )
                    ],
                sku = openapi_client.models.sku.Sku(
                    family = 'A', 
                    name = 'standard', ),
                tenant_id = '',
        )
        """

    def testVaultProperties(self):
        """Test VaultProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
