# coding: utf-8

"""
    KeyVaultClient

    The key vault client performs cryptographic key operations and vault operations against the Key Vault service.

    The version of the OpenAPI document: 7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.certificate_update_parameters import CertificateUpdateParameters

class TestCertificateUpdateParameters(unittest.TestCase):
    """CertificateUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CertificateUpdateParameters:
        """Test CertificateUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CertificateUpdateParameters`
        """
        model = CertificateUpdateParameters()
        if include_optional:
            return CertificateUpdateParameters(
                attributes = openapi_client.models.certificate_attributes.CertificateAttributes(
                    recovery_level = 'Purgeable', ),
                policy = openapi_client.models.certificate_policy.CertificatePolicy(
                    attributes = openapi_client.models.certificate_attributes.CertificateAttributes(
                        recovery_level = 'Purgeable', ), 
                    id = '', 
                    issuer = openapi_client.models.issuer_parameters.IssuerParameters(
                        cert_transparency = True, 
                        cty = '', 
                        name = '', ), 
                    key_props = openapi_client.models.key_properties.KeyProperties(
                        crv = 'P-256', 
                        exportable = True, 
                        key_size = 56, 
                        kty = 'EC', 
                        reuse_key = True, ), 
                    lifetime_actions = [
                        openapi_client.models.lifetime_action.LifetimeAction(
                            action = openapi_client.models.action.Action(
                                action_type = 'EmailContacts', ), 
                            trigger = openapi_client.models.trigger.Trigger(
                                days_before_expiry = 56, 
                                lifetime_percentage = 1, ), )
                        ], 
                    secret_props = openapi_client.models.secret_properties.SecretProperties(
                        content_type = '', ), 
                    x509_props = openapi_client.models.x509_certificate_properties.X509CertificateProperties(
                        ekus = [
                            ''
                            ], 
                        key_usage = [
                            'digitalSignature'
                            ], 
                        sans = openapi_client.models.subject_alternative_names.SubjectAlternativeNames(
                            dns_names = [
                                ''
                                ], 
                            emails = [
                                ''
                                ], 
                            upns = [
                                ''
                                ], ), 
                        subject = '', 
                        validity_months = 0, ), ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return CertificateUpdateParameters(
        )
        """

    def testCertificateUpdateParameters(self):
        """Test CertificateUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
