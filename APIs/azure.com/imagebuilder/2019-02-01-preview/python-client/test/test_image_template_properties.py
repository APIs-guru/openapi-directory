# coding: utf-8

"""
    VirtualMachineImageTemplate

    Virtual Machine Image Template

    The version of the OpenAPI document: 2019-02-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.image_template_properties import ImageTemplateProperties

class TestImageTemplateProperties(unittest.TestCase):
    """ImageTemplateProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImageTemplateProperties:
        """Test ImageTemplateProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImageTemplateProperties`
        """
        model = ImageTemplateProperties()
        if include_optional:
            return ImageTemplateProperties(
                customize = [
                    openapi_client.models.image_template_customizer.ImageTemplateCustomizer(
                        name = '', 
                        type = '', )
                    ],
                distribute = [
                    openapi_client.models.image_template_distributor.ImageTemplateDistributor(
                        artifact_tags = {
                            'key' : ''
                            }, 
                        run_output_name = 'zBAMDTMv2D2ylmgd10Z3UB6UkJSISSB512iz2DiJykO4IVP', 
                        type = '', )
                    ],
                last_run_status = openapi_client.models.image_template_last_run_status.ImageTemplateLastRunStatus(
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    message = '', 
                    run_state = 'Running', 
                    run_sub_state = 'Queued', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                provisioning_error = openapi_client.models.provisioning_error.ProvisioningError(
                    message = '', 
                    provisioning_error_code = 'BadSourceType', ),
                provisioning_state = 'Creating',
                source = openapi_client.models.image_template_source.ImageTemplateSource(
                    type = '', )
            )
        else:
            return ImageTemplateProperties(
                distribute = [
                    openapi_client.models.image_template_distributor.ImageTemplateDistributor(
                        artifact_tags = {
                            'key' : ''
                            }, 
                        run_output_name = 'zBAMDTMv2D2ylmgd10Z3UB6UkJSISSB512iz2DiJykO4IVP', 
                        type = '', )
                    ],
                source = openapi_client.models.image_template_source.ImageTemplateSource(
                    type = '', ),
        )
        """

    def testImageTemplateProperties(self):
        """Test ImageTemplateProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
