# coding: utf-8

"""
    NetworkResourceProviderClient

    The Windows Azure Network management API provides a RESTful set of web services that interact with Windows Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Windows Azure Networks service.

    The version of the OpenAPI document: 2015-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.frontend_ip_configuration_properties_format import FrontendIpConfigurationPropertiesFormat

class TestFrontendIpConfigurationPropertiesFormat(unittest.TestCase):
    """FrontendIpConfigurationPropertiesFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FrontendIpConfigurationPropertiesFormat:
        """Test FrontendIpConfigurationPropertiesFormat
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FrontendIpConfigurationPropertiesFormat`
        """
        model = FrontendIpConfigurationPropertiesFormat()
        if include_optional:
            return FrontendIpConfigurationPropertiesFormat(
                inbound_nat_pools = [
                    openapi_client.models.sub_resource.SubResource(
                        id = '', )
                    ],
                inbound_nat_rules = [
                    openapi_client.models.sub_resource.SubResource(
                        id = '', )
                    ],
                load_balancing_rules = [
                    openapi_client.models.sub_resource.SubResource(
                        id = '', )
                    ],
                outbound_nat_rules = [
                    openapi_client.models.sub_resource.SubResource(
                        id = '', )
                    ],
                private_ip_address = '',
                private_ip_allocation_method = 'Static',
                provisioning_state = '',
                public_ip_address = openapi_client.models.sub_resource.SubResource(
                    id = '', ),
                subnet = openapi_client.models.sub_resource.SubResource(
                    id = '', )
            )
        else:
            return FrontendIpConfigurationPropertiesFormat(
        )
        """

    def testFrontendIpConfigurationPropertiesFormat(self):
        """Test FrontendIpConfigurationPropertiesFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
