# coding: utf-8

"""
    Azure Media Services

    This Swagger was generated by the API Framework.

    The version of the OpenAPI document: 2018-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.content_key_policy_play_ready_license import ContentKeyPolicyPlayReadyLicense

class TestContentKeyPolicyPlayReadyLicense(unittest.TestCase):
    """ContentKeyPolicyPlayReadyLicense unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentKeyPolicyPlayReadyLicense:
        """Test ContentKeyPolicyPlayReadyLicense
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentKeyPolicyPlayReadyLicense`
        """
        model = ContentKeyPolicyPlayReadyLicense()
        if include_optional:
            return ContentKeyPolicyPlayReadyLicense(
                allow_test_devices = True,
                begin_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                content_key_location = openapi_client.models.content_key_policy_play_ready_content_key_location.ContentKeyPolicyPlayReadyContentKeyLocation(
                    @odata/type = '', ),
                content_type = 'Unknown',
                expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                grace_period = '',
                license_type = 'Unknown',
                play_right = openapi_client.models.content_key_policy_play_ready_play_right.ContentKeyPolicyPlayReadyPlayRight(
                    agc_and_color_stripe_restriction = 56, 
                    allow_passing_video_content_to_unknown_output = 'Unknown', 
                    analog_video_opl = 56, 
                    compressed_digital_audio_opl = 56, 
                    compressed_digital_video_opl = 56, 
                    digital_video_only_content_restriction = True, 
                    explicit_analog_television_output_restriction = openapi_client.models.content_key_policy_play_ready_explicit_analog_television_restriction.ContentKeyPolicyPlayReadyExplicitAnalogTelevisionRestriction(
                        best_effort = True, 
                        configuration_data = 56, ), 
                    first_play_expiration = '', 
                    image_constraint_for_analog_component_video_restriction = True, 
                    image_constraint_for_analog_computer_monitor_restriction = True, 
                    scms_restriction = 56, 
                    uncompressed_digital_audio_opl = 56, 
                    uncompressed_digital_video_opl = 56, ),
                relative_begin_date = '',
                relative_expiration_date = ''
            )
        else:
            return ContentKeyPolicyPlayReadyLicense(
                allow_test_devices = True,
                content_key_location = openapi_client.models.content_key_policy_play_ready_content_key_location.ContentKeyPolicyPlayReadyContentKeyLocation(
                    @odata/type = '', ),
                content_type = 'Unknown',
                license_type = 'Unknown',
        )
        """

    def testContentKeyPolicyPlayReadyLicense(self):
        """Test ContentKeyPolicyPlayReadyLicense"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
