# coding: utf-8

"""
    InstanceMetadataClient

    The Azure Instance Metadata Client

    The version of the OpenAPI document: 2019-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.instance import Instance

class TestInstance(unittest.TestCase):
    """Instance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Instance:
        """Test Instance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Instance`
        """
        model = Instance()
        if include_optional:
            return Instance(
                compute = openapi_client.models.compute.Compute(
                    az_environment = '', 
                    custom_data = '', 
                    location = '', 
                    name = '', 
                    offer = '', 
                    os_type = '', 
                    placement_group_id = '', 
                    plan = openapi_client.models.plan_properties.PlanProperties(
                        name = '', 
                        product = '', 
                        publisher = '', ), 
                    platform_fault_domain = '', 
                    platform_update_domain = '', 
                    provider = '', 
                    public_keys = [
                        openapi_client.models.public_keys_properties.PublicKeysProperties(
                            key_data = '', 
                            path = '', )
                        ], 
                    publisher = '', 
                    resource_group_name = '', 
                    sku = '', 
                    subscription_id = '', 
                    tags = '', 
                    version = '', 
                    vm_id = '', 
                    vm_scale_set_name = '', 
                    vm_size = '', 
                    zone = '', ),
                network = openapi_client.models.network.Network(
                    interface = [
                        openapi_client.models.network_interface.NetworkInterface(
                            ipv4 = openapi_client.models.network_interface_ipv4.NetworkInterface_ipv4(
                                ip_address = [
                                    openapi_client.models.ipv4_properties.Ipv4Properties(
                                        private_ip_address = '', 
                                        public_ip_address = '', )
                                    ], 
                                subnet = [
                                    openapi_client.models.subnet_properties.SubnetProperties(
                                        address = '', 
                                        prefix = '', )
                                    ], ), 
                            ipv6 = openapi_client.models.network_interface_ipv6.NetworkInterface_ipv6(), 
                            mac_address = '', )
                        ], )
            )
        else:
            return Instance(
        )
        """

    def testInstance(self):
        """Test Instance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
