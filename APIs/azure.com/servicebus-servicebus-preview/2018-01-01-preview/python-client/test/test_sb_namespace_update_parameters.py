# coding: utf-8

"""
    ServiceBusManagementClient

    Azure Service Bus client for managing Namespace, IPFilter Rules, VirtualNetworkRules and Zone Redundant

    The version of the OpenAPI document: 2018-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sb_namespace_update_parameters import SBNamespaceUpdateParameters

class TestSBNamespaceUpdateParameters(unittest.TestCase):
    """SBNamespaceUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SBNamespaceUpdateParameters:
        """Test SBNamespaceUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SBNamespaceUpdateParameters`
        """
        model = SBNamespaceUpdateParameters()
        if include_optional:
            return SBNamespaceUpdateParameters(
                properties = openapi_client.models.sb_namespace_properties.SBNamespaceProperties(
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    encryption = openapi_client.models.encryption.Encryption(
                        key_source = 'Microsoft.KeyVault', 
                        key_vault_properties = openapi_client.models.key_vault_properties.KeyVaultProperties(
                            key_name = '', 
                            key_vault_uri = '', ), ), 
                    identity = openapi_client.models.identity.Identity(
                        principal_id = '', 
                        tenant_id = '', 
                        type = 'SystemAssigned', ), 
                    metric_id = '', 
                    provisioning_state = '', 
                    service_bus_endpoint = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    zone_redundant = True, ),
                sku = openapi_client.models.sb_sku.SBSku(
                    capacity = 56, 
                    name = 'Basic', 
                    tier = 'Basic', ),
                location = '',
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return SBNamespaceUpdateParameters(
        )
        """

    def testSBNamespaceUpdateParameters(self):
        """Test SBNamespaceUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
