# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on logger entity Azure API Management deployment.The Logger entity in API Management represents an event sink that you can use to log API Management events. Currently the Logger entity supports logging API Management events to Azure EventHub.

    The version of the OpenAPI document: 2019-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.logger_list_by_service_default_response_error import LoggerListByServiceDefaultResponseError

class TestLoggerListByServiceDefaultResponseError(unittest.TestCase):
    """LoggerListByServiceDefaultResponseError unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LoggerListByServiceDefaultResponseError:
        """Test LoggerListByServiceDefaultResponseError
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LoggerListByServiceDefaultResponseError`
        """
        model = LoggerListByServiceDefaultResponseError()
        if include_optional:
            return LoggerListByServiceDefaultResponseError(
                code = '',
                details = [
                    openapi_client.models.logger_list_by_service_default_response_error_details_inner.Logger_ListByService_default_response_error_details_inner(
                        code = '', 
                        message = '', 
                        target = '', )
                    ],
                message = ''
            )
        else:
            return LoggerListByServiceDefaultResponseError(
        )
        """

    def testLoggerListByServiceDefaultResponseError(self):
        """Test LoggerListByServiceDefaultResponseError"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
