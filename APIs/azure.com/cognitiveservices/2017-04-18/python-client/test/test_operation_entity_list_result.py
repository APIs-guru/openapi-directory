# coding: utf-8

"""
    CognitiveServicesManagementClient

    Cognitive Services Management Client

    The version of the OpenAPI document: 2017-04-18
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.operation_entity_list_result import OperationEntityListResult

class TestOperationEntityListResult(unittest.TestCase):
    """OperationEntityListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OperationEntityListResult:
        """Test OperationEntityListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OperationEntityListResult`
        """
        model = OperationEntityListResult()
        if include_optional:
            return OperationEntityListResult(
                next_link = '',
                value = [
                    openapi_client.models.operation_entity.OperationEntity(
                        display = openapi_client.models.operation_display_info.OperationDisplayInfo(
                            description = '', 
                            operation = '', 
                            provider = '', 
                            resource = '', ), 
                        name = '', 
                        origin = '', 
                        properties = openapi_client.models.properties.properties(), )
                    ]
            )
        else:
            return OperationEntityListResult(
        )
        """

    def testOperationEntityListResult(self):
        """Test OperationEntityListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
