# coding: utf-8

"""
    SqlManagementClient

    The Azure SQL Database management API provides a RESTful set of web APIs that interact with Azure SQL Database services to manage your databases. The API enables users to create, retrieve, update, and delete databases, servers, and other entities.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.managed_instance_operation import ManagedInstanceOperation

class TestManagedInstanceOperation(unittest.TestCase):
    """ManagedInstanceOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagedInstanceOperation:
        """Test ManagedInstanceOperation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagedInstanceOperation`
        """
        model = ManagedInstanceOperation()
        if include_optional:
            return ManagedInstanceOperation(
                properties = openapi_client.models.managed_instance_operation_properties.ManagedInstanceOperationProperties(
                    description = '', 
                    error_code = 56, 
                    error_description = '', 
                    error_severity = 56, 
                    estimated_completion_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    is_cancellable = True, 
                    is_user_error = True, 
                    managed_instance_name = '', 
                    operation = '', 
                    operation_friendly_name = '', 
                    percent_complete = 56, 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    state = 'Pending', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return ManagedInstanceOperation(
        )
        """

    def testManagedInstanceOperation(self):
        """Test ManagedInstanceOperation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
