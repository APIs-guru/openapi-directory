# coding: utf-8

"""
    DataBoxEdgeManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.data_box_edge_device_properties import DataBoxEdgeDeviceProperties

class TestDataBoxEdgeDeviceProperties(unittest.TestCase):
    """DataBoxEdgeDeviceProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DataBoxEdgeDeviceProperties:
        """Test DataBoxEdgeDeviceProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DataBoxEdgeDeviceProperties`
        """
        model = DataBoxEdgeDeviceProperties()
        if include_optional:
            return DataBoxEdgeDeviceProperties(
                configured_role_types = [
                    'IOT'
                    ],
                culture = '',
                data_box_edge_device_status = 'ReadyToSetup',
                description = '',
                device_hcs_version = '',
                device_local_capacity = 56,
                device_model = '',
                device_software_version = '',
                device_type = 'DataBoxEdgeDevice',
                friendly_name = '',
                model_description = '',
                serial_number = '',
                time_zone = ''
            )
        else:
            return DataBoxEdgeDeviceProperties(
        )
        """

    def testDataBoxEdgeDeviceProperties(self):
        """Test DataBoxEdgeDeviceProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
