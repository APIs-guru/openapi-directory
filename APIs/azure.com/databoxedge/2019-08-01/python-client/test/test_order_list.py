# coding: utf-8

"""
    DataBoxEdgeManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_list import OrderList

class TestOrderList(unittest.TestCase):
    """OrderList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderList:
        """Test OrderList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderList`
        """
        model = OrderList()
        if include_optional:
            return OrderList(
                next_link = '',
                value = [
                    openapi_client.models.order.Order(
                        properties = openapi_client.models.order_properties.OrderProperties(
                            contact_information = openapi_client.models.contact_details.ContactDetails(
                                company_name = '', 
                                contact_person = '', 
                                email_list = [
                                    ''
                                    ], 
                                phone = '', ), 
                            current_status = openapi_client.models.order_status.OrderStatus(
                                additional_order_details = {
                                    'key' : ''
                                    }, 
                                comments = '', 
                                status = 'Untracked', 
                                update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                            delivery_tracking_info = [
                                openapi_client.models.tracking_info.TrackingInfo(
                                    carrier_name = '', 
                                    serial_number = '', 
                                    tracking_id = '', 
                                    tracking_url = '', )
                                ], 
                            order_history = [
                                openapi_client.models.order_status.OrderStatus(
                                    comments = '', 
                                    status = 'Untracked', 
                                    update_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                                ], 
                            return_tracking_info = [
                                openapi_client.models.tracking_info.TrackingInfo(
                                    carrier_name = '', 
                                    serial_number = '', 
                                    tracking_id = '', 
                                    tracking_url = '', )
                                ], 
                            serial_number = '', 
                            shipping_address = openapi_client.models.address.Address(
                                address_line1 = '', 
                                address_line2 = '', 
                                address_line3 = '', 
                                city = '', 
                                country = '', 
                                postal_code = '', 
                                state = '', ), ), )
                    ]
            )
        else:
            return OrderList(
        )
        """

    def testOrderList(self):
        """Test OrderList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
