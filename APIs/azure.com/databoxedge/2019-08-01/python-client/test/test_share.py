# coding: utf-8

"""
    DataBoxEdgeManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.share import Share

class TestShare(unittest.TestCase):
    """Share unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Share:
        """Test Share
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Share`
        """
        model = Share()
        if include_optional:
            return Share(
                properties = openapi_client.models.share_properties.ShareProperties(
                    access_protocol = 'SMB', 
                    azure_container_info = openapi_client.models.azure_container_info.AzureContainerInfo(
                        container_name = '', 
                        data_format = 'BlockBlob', 
                        storage_account_credential_id = '', ), 
                    client_access_rights = [
                        openapi_client.models.client_access_right.ClientAccessRight(
                            access_permission = 'NoAccess', 
                            client = '', )
                        ], 
                    data_policy = 'Cloud', 
                    description = '', 
                    monitoring_status = 'Enabled', 
                    refresh_details = openapi_client.models.refresh_details.RefreshDetails(
                        error_manifest_file = '', 
                        in_progress_refresh_job_id = '', 
                        last_completed_refresh_job_time_in_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_job = '', ), 
                    share_mappings = [
                        openapi_client.models.mount_point_map.MountPointMap(
                            mount_point = '', 
                            role_id = '', 
                            role_type = 'IOT', 
                            share_id = '', )
                        ], 
                    share_status = 'Offline', 
                    user_access_rights = [
                        openapi_client.models.user_access_right.UserAccessRight(
                            access_type = 'Change', 
                            user_id = '', )
                        ], ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return Share(
                properties = openapi_client.models.share_properties.ShareProperties(
                    access_protocol = 'SMB', 
                    azure_container_info = openapi_client.models.azure_container_info.AzureContainerInfo(
                        container_name = '', 
                        data_format = 'BlockBlob', 
                        storage_account_credential_id = '', ), 
                    client_access_rights = [
                        openapi_client.models.client_access_right.ClientAccessRight(
                            access_permission = 'NoAccess', 
                            client = '', )
                        ], 
                    data_policy = 'Cloud', 
                    description = '', 
                    monitoring_status = 'Enabled', 
                    refresh_details = openapi_client.models.refresh_details.RefreshDetails(
                        error_manifest_file = '', 
                        in_progress_refresh_job_id = '', 
                        last_completed_refresh_job_time_in_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_job = '', ), 
                    share_mappings = [
                        openapi_client.models.mount_point_map.MountPointMap(
                            mount_point = '', 
                            role_id = '', 
                            role_type = 'IOT', 
                            share_id = '', )
                        ], 
                    share_status = 'Offline', 
                    user_access_rights = [
                        openapi_client.models.user_access_right.UserAccessRight(
                            access_type = 'Change', 
                            user_id = '', )
                        ], ),
        )
        """

    def testShare(self):
        """Test Share"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
