# coding: utf-8

"""
    DataBoxEdgeManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.file_event_trigger import FileEventTrigger

class TestFileEventTrigger(unittest.TestCase):
    """FileEventTrigger unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FileEventTrigger:
        """Test FileEventTrigger
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FileEventTrigger`
        """
        model = FileEventTrigger()
        if include_optional:
            return FileEventTrigger(
                id = '',
                name = '',
                properties = openapi_client.models.file_trigger_properties.FileTriggerProperties(
                    custom_context_tag = '', 
                    sink_info = openapi_client.models.role_sink_info.RoleSinkInfo(
                        role_id = '', ), 
                    source_info = openapi_client.models.file_source_info.FileSourceInfo(
                        share_id = '', ), ),
                type = '',
                kind = 'FileEvent'
            )
        else:
            return FileEventTrigger(
                properties = openapi_client.models.file_trigger_properties.FileTriggerProperties(
                    custom_context_tag = '', 
                    sink_info = openapi_client.models.role_sink_info.RoleSinkInfo(
                        role_id = '', ), 
                    source_info = openapi_client.models.file_source_info.FileSourceInfo(
                        share_id = '', ), ),
                kind = 'FileEvent',
        )
        """

    def testFileEventTrigger(self):
        """Test FileEventTrigger"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
