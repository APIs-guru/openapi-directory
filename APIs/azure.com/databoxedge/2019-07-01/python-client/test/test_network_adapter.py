# coding: utf-8

"""
    DataBoxEdgeManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network_adapter import NetworkAdapter

class TestNetworkAdapter(unittest.TestCase):
    """NetworkAdapter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkAdapter:
        """Test NetworkAdapter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkAdapter`
        """
        model = NetworkAdapter()
        if include_optional:
            return NetworkAdapter(
                adapter_id = '',
                adapter_position = openapi_client.models.network_adapter_position.NetworkAdapterPosition(
                    network_group = 'None', 
                    port = 56, ),
                dhcp_status = 'Disabled',
                dns_servers = [
                    ''
                    ],
                index = 56,
                ipv4_configuration = openapi_client.models.ipv4_config.Ipv4Config(
                    gateway = '', 
                    ip_address = '', 
                    subnet = '', ),
                ipv6_configuration = openapi_client.models.ipv6_config.Ipv6Config(
                    gateway = '', 
                    ip_address = '', 
                    prefix_length = 56, ),
                ipv6_link_local_address = '',
                label = '',
                link_speed = 56,
                mac_address = '',
                network_adapter_name = '',
                node_id = '',
                rdma_status = 'Incapable',
                status = 'Inactive'
            )
        else:
            return NetworkAdapter(
        )
        """

    def testNetworkAdapter(self):
        """Test NetworkAdapter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
