# coding: utf-8

"""
    RedisManagementClient

    REST API for Azure Redis Cache Service.

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.redis_linked_server_create_parameters import RedisLinkedServerCreateParameters

class TestRedisLinkedServerCreateParameters(unittest.TestCase):
    """RedisLinkedServerCreateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RedisLinkedServerCreateParameters:
        """Test RedisLinkedServerCreateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RedisLinkedServerCreateParameters`
        """
        model = RedisLinkedServerCreateParameters()
        if include_optional:
            return RedisLinkedServerCreateParameters(
                properties = openapi_client.models.redis_linked_server_create_properties.RedisLinkedServerCreateProperties(
                    linked_redis_cache_id = '', 
                    linked_redis_cache_location = '', 
                    server_role = 'Primary', )
            )
        else:
            return RedisLinkedServerCreateParameters(
                properties = openapi_client.models.redis_linked_server_create_properties.RedisLinkedServerCreateProperties(
                    linked_redis_cache_id = '', 
                    linked_redis_cache_location = '', 
                    server_role = 'Primary', ),
        )
        """

    def testRedisLinkedServerCreateParameters(self):
        """Test RedisLinkedServerCreateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
