# coding: utf-8

"""
    RedisManagementClient

    REST API for Azure Redis Cache Service.

    The version of the OpenAPI document: 2017-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.redis_patch_schedule import RedisPatchSchedule

class TestRedisPatchSchedule(unittest.TestCase):
    """RedisPatchSchedule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RedisPatchSchedule:
        """Test RedisPatchSchedule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RedisPatchSchedule`
        """
        model = RedisPatchSchedule()
        if include_optional:
            return RedisPatchSchedule(
                id = '',
                location = '',
                name = '',
                properties = openapi_client.models.schedule_entries.ScheduleEntries(
                    schedule_entries = [
                        openapi_client.models.schedule_entry.ScheduleEntry(
                            day_of_week = 'Monday', 
                            maintenance_window = '', 
                            start_hour_utc = 56, )
                        ], ),
                type = ''
            )
        else:
            return RedisPatchSchedule(
                properties = openapi_client.models.schedule_entries.ScheduleEntries(
                    schedule_entries = [
                        openapi_client.models.schedule_entry.ScheduleEntry(
                            day_of_week = 'Monday', 
                            maintenance_window = '', 
                            start_hour_utc = 56, )
                        ], ),
        )
        """

    def testRedisPatchSchedule(self):
        """Test RedisPatchSchedule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
