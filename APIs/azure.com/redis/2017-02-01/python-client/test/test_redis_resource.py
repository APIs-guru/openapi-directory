# coding: utf-8

"""
    RedisManagementClient

    REST API for Azure Redis Cache Service.

    The version of the OpenAPI document: 2017-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.redis_resource import RedisResource

class TestRedisResource(unittest.TestCase):
    """RedisResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RedisResource:
        """Test RedisResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RedisResource`
        """
        model = RedisResource()
        if include_optional:
            return RedisResource(
                properties = openapi_client.models.redis_resource_properties.RedisResourceProperties(
                    access_keys = openapi_client.models.redis_access_keys.RedisAccessKeys(
                        primary_key = '', 
                        secondary_key = '', ), 
                    host_name = '', 
                    linked_servers = openapi_client.models.redis_linked_server_list.RedisLinkedServerList(
                        value = [
                            openapi_client.models.redis_linked_server.RedisLinkedServer(
                                id = '', )
                            ], ), 
                    port = 56, 
                    provisioning_state = '', 
                    redis_version = '', 
                    sku = openapi_client.models.sku.Sku(
                        capacity = 56, 
                        family = 'C', 
                        name = 'Basic', ), 
                    ssl_port = 56, ),
                location = '',
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return RedisResource(
                location = '',
        )
        """

    def testRedisResource(self):
        """Test RedisResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
