# coding: utf-8

"""
    Azure Container Registry

    Metadata API definition for the Azure Container Registry runtime

    The version of the OpenAPI document: 2019-08-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.manifest_wrapper import ManifestWrapper

class TestManifestWrapper(unittest.TestCase):
    """ManifestWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManifestWrapper:
        """Test ManifestWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManifestWrapper`
        """
        model = ManifestWrapper()
        if include_optional:
            return ManifestWrapper(
                annotations = {
                    'key' : None
                    },
                architecture = '',
                config = {digest=sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6, mediaType=application/vnd.docker.image.rootfs.diff.tar.gzip, size=2107098},
                fs_layers = [
                    {blobSum=sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30}
                    ],
                history = [
                    {v1Compatibility=v1 compatibility info}
                    ],
                layers = [
                    {digest=sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6, mediaType=application/vnd.docker.image.rootfs.diff.tar.gzip, size=2107098}
                    ],
                manifests = [
                    openapi_client.models.manifest_list_attributes.ManifestListAttributes(
                        digest = '', 
                        media_type = '', 
                        platform = openapi_client.models.platform.Platform(
                            architecture = '', 
                            features = [
                                ''
                                ], 
                            os = '', 
                            os/features = [
                                ''
                                ], 
                            os/version = '', 
                            variant = '', ), 
                        size = 56, )
                    ],
                media_type = '',
                name = '',
                signatures = [
                    {header={alg=ES256, jwk={crv=P-256, kid=WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q, kty=EC, x=OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY, y=EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc}}, protected=eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ, signature=p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg}
                    ],
                tag = '',
                schema_version = 56
            )
        else:
            return ManifestWrapper(
        )
        """

    def testManifestWrapper(self):
        """Test ManifestWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
