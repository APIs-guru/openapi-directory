# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-27-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.registry_list_result import RegistryListResult

class TestRegistryListResult(unittest.TestCase):
    """RegistryListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegistryListResult:
        """Test RegistryListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegistryListResult`
        """
        model = RegistryListResult()
        if include_optional:
            return RegistryListResult(
                next_link = '',
                value = [
                    openapi_client.models.registry.Registry(
                        properties = openapi_client.models.registry_properties.RegistryProperties(
                            admin_user_enabled = True, 
                            creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            login_server = '', 
                            storage_account = openapi_client.models.storage_account_properties.StorageAccountProperties(
                                access_key = '', 
                                name = '', ), ), )
                    ]
            )
        else:
            return RegistryListResult(
        )
        """

    def testRegistryListResult(self):
        """Test RegistryListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
