# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.callback_config import CallbackConfig
from openapi_client.models.event_info import EventInfo
from openapi_client.models.event_list_result import EventListResult
from openapi_client.models.webhook import Webhook
from openapi_client.models.webhook_create_parameters import WebhookCreateParameters
from openapi_client.models.webhook_list_result import WebhookListResult
from openapi_client.models.webhook_update_parameters import WebhookUpdateParameters

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class WebhooksApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def webhooks_create(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        webhook_create_parameters: Annotated[WebhookCreateParameters, Field(description="The parameters for creating a webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Webhook:
        """webhooks_create

        Creates a webhook for a container registry with the specified parameters.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param webhook_create_parameters: The parameters for creating a webhook. (required)
        :type webhook_create_parameters: WebhookCreateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_create_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            webhook_create_parameters=webhook_create_parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
            '201': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_create_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        webhook_create_parameters: Annotated[WebhookCreateParameters, Field(description="The parameters for creating a webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Webhook]:
        """webhooks_create

        Creates a webhook for a container registry with the specified parameters.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param webhook_create_parameters: The parameters for creating a webhook. (required)
        :type webhook_create_parameters: WebhookCreateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_create_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            webhook_create_parameters=webhook_create_parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
            '201': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_create_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        webhook_create_parameters: Annotated[WebhookCreateParameters, Field(description="The parameters for creating a webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_create

        Creates a webhook for a container registry with the specified parameters.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param webhook_create_parameters: The parameters for creating a webhook. (required)
        :type webhook_create_parameters: WebhookCreateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_create_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            webhook_create_parameters=webhook_create_parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
            '201': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_create_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        webhook_create_parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if webhook_create_parameters is not None:
            _body_params = webhook_create_parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_delete(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """webhooks_delete

        Deletes a webhook from a container registry.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_delete_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_delete_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """webhooks_delete

        Deletes a webhook from a container registry.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_delete_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_delete_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_delete

        Deletes a webhook from a container registry.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_delete_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_delete_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_get(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Webhook:
        """webhooks_get

        Gets the properties of the specified webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_get_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_get_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Webhook]:
        """webhooks_get

        Gets the properties of the specified webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_get_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_get_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_get

        Gets the properties of the specified webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_get_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_get_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_get_callback_config(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CallbackConfig:
        """webhooks_get_callback_config

        Gets the configuration of service URI and custom headers for the webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_get_callback_config_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CallbackConfig",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_get_callback_config_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CallbackConfig]:
        """webhooks_get_callback_config

        Gets the configuration of service URI and custom headers for the webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_get_callback_config_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CallbackConfig",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_get_callback_config_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_get_callback_config

        Gets the configuration of service URI and custom headers for the webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_get_callback_config_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CallbackConfig",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_get_callback_config_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/getCallbackConfig',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> WebhookListResult:
        """webhooks_list

        Lists all the webhooks for the specified container registry.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_list_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "WebhookListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[WebhookListResult]:
        """webhooks_list

        Lists all the webhooks for the specified container registry.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_list_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "WebhookListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_list

        Lists all the webhooks for the specified container registry.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_list_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "WebhookListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_list_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_list_events(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EventListResult:
        """webhooks_list_events

        Lists recent events for the specified webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_list_events_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_list_events_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EventListResult]:
        """webhooks_list_events

        Lists recent events for the specified webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_list_events_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_list_events_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_list_events

        Lists recent events for the specified webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_list_events_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_list_events_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/listEvents',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_ping(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EventInfo:
        """webhooks_ping

        Triggers a ping event to be sent to the webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_ping_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventInfo",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_ping_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EventInfo]:
        """webhooks_ping

        Triggers a ping event to be sent to the webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_ping_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventInfo",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_ping_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_ping

        Triggers a ping event to be sent to the webhook.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_ping_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EventInfo",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_ping_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}/ping',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def webhooks_update(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        webhook_update_parameters: Annotated[WebhookUpdateParameters, Field(description="The parameters for updating a webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Webhook:
        """webhooks_update

        Updates a webhook with the specified parameters.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param webhook_update_parameters: The parameters for updating a webhook. (required)
        :type webhook_update_parameters: WebhookUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_update_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            webhook_update_parameters=webhook_update_parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
            '201': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def webhooks_update_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        webhook_update_parameters: Annotated[WebhookUpdateParameters, Field(description="The parameters for updating a webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Webhook]:
        """webhooks_update

        Updates a webhook with the specified parameters.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param webhook_update_parameters: The parameters for updating a webhook. (required)
        :type webhook_update_parameters: WebhookUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_update_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            webhook_update_parameters=webhook_update_parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
            '201': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def webhooks_update_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The client API version.")],
        subscription_id: Annotated[StrictStr, Field(description="The Microsoft Azure subscription ID.")],
        resource_group_name: Annotated[str, Field(min_length=1, strict=True, description="The name of the resource group to which the container registry belongs.")],
        registry_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the container registry.")],
        webhook_name: Annotated[str, Field(min_length=5, strict=True, max_length=50, description="The name of the webhook.")],
        webhook_update_parameters: Annotated[WebhookUpdateParameters, Field(description="The parameters for updating a webhook.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """webhooks_update

        Updates a webhook with the specified parameters.

        :param api_version: The client API version. (required)
        :type api_version: str
        :param subscription_id: The Microsoft Azure subscription ID. (required)
        :type subscription_id: str
        :param resource_group_name: The name of the resource group to which the container registry belongs. (required)
        :type resource_group_name: str
        :param registry_name: The name of the container registry. (required)
        :type registry_name: str
        :param webhook_name: The name of the webhook. (required)
        :type webhook_name: str
        :param webhook_update_parameters: The parameters for updating a webhook. (required)
        :type webhook_update_parameters: WebhookUpdateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._webhooks_update_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            registry_name=registry_name,
            webhook_name=webhook_name,
            webhook_update_parameters=webhook_update_parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Webhook",
            '201': "Webhook",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _webhooks_update_serialize(
        self,
        api_version,
        subscription_id,
        resource_group_name,
        registry_name,
        webhook_name,
        webhook_update_parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if registry_name is not None:
            _path_params['registryName'] = registry_name
        if webhook_name is not None:
            _path_params['webhookName'] = webhook_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if webhook_update_parameters is not None:
            _body_params = webhook_update_parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ContainerRegistry/registries/{registryName}/webhooks/{webhookName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


