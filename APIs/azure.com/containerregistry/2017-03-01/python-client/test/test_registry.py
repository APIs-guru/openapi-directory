# coding: utf-8

"""
    ContainerRegistryManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.registry import Registry

class TestRegistry(unittest.TestCase):
    """Registry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Registry:
        """Test Registry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Registry`
        """
        model = Registry()
        if include_optional:
            return Registry(
                properties = openapi_client.models.registry_properties.RegistryProperties(
                    admin_user_enabled = True, 
                    creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    login_server = '', 
                    provisioning_state = 'Creating', 
                    storage_account = openapi_client.models.storage_account_properties.StorageAccountProperties(
                        name = '', ), ),
                sku = openapi_client.models.sku.Sku(
                    name = '', 
                    tier = 'Basic', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return Registry(
                sku = openapi_client.models.sku.Sku(
                    name = '', 
                    tier = 'Basic', ),
                location = '',
        )
        """

    def testRegistry(self):
        """Test Registry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
