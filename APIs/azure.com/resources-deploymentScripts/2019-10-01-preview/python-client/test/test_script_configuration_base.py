# coding: utf-8

"""
    DeploymentScriptsClient

    The APIs listed in this specification can be used to manage Deployment Scripts resource through the Azure Resource Manager.

    The version of the OpenAPI document: 2019-10-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.script_configuration_base import ScriptConfigurationBase

class TestScriptConfigurationBase(unittest.TestCase):
    """ScriptConfigurationBase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScriptConfigurationBase:
        """Test ScriptConfigurationBase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScriptConfigurationBase`
        """
        model = ScriptConfigurationBase()
        if include_optional:
            return ScriptConfigurationBase(
                arguments = '',
                environment_variables = [
                    openapi_client.models.environment_variable.EnvironmentVariable(
                        name = '', 
                        secure_value = '', 
                        value = '', )
                    ],
                force_update_tag = '',
                primary_script_uri = '',
                retention_interval = '',
                script_content = '',
                supporting_script_uris = [
                    ''
                    ],
                timeout = ''
            )
        else:
            return ScriptConfigurationBase(
                retention_interval = '',
        )
        """

    def testScriptConfigurationBase(self):
        """Test ScriptConfigurationBase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
