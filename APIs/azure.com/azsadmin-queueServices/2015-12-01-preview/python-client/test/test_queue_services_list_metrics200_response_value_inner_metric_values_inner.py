# coding: utf-8

"""
    StorageManagementClient

    The Admin Storage Management Client.

    The version of the OpenAPI document: 2015-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.queue_services_list_metrics200_response_value_inner_metric_values_inner import QueueServicesListMetrics200ResponseValueInnerMetricValuesInner

class TestQueueServicesListMetrics200ResponseValueInnerMetricValuesInner(unittest.TestCase):
    """QueueServicesListMetrics200ResponseValueInnerMetricValuesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueueServicesListMetrics200ResponseValueInnerMetricValuesInner:
        """Test QueueServicesListMetrics200ResponseValueInnerMetricValuesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueueServicesListMetrics200ResponseValueInnerMetricValuesInner`
        """
        model = QueueServicesListMetrics200ResponseValueInnerMetricValuesInner()
        if include_optional:
            return QueueServicesListMetrics200ResponseValueInnerMetricValuesInner(
                average = 1.337,
                count = 56,
                maximum = 1.337,
                minimum = 1.337,
                properties = '',
                time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                total = 1.337
            )
        else:
            return QueueServicesListMetrics200ResponseValueInnerMetricValuesInner(
        )
        """

    def testQueueServicesListMetrics200ResponseValueInnerMetricValuesInner(self):
        """Test QueueServicesListMetrics200ResponseValueInnerMetricValuesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
