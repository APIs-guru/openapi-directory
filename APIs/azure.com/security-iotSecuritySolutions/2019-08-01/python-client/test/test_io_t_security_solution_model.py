# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.io_t_security_solution_model import IoTSecuritySolutionModel

class TestIoTSecuritySolutionModel(unittest.TestCase):
    """IoTSecuritySolutionModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoTSecuritySolutionModel:
        """Test IoTSecuritySolutionModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoTSecuritySolutionModel`
        """
        model = IoTSecuritySolutionModel()
        if include_optional:
            return IoTSecuritySolutionModel(
                location = '',
                properties = openapi_client.models.io_t_security_solution_properties.IoTSecuritySolutionProperties(
                    auto_discovered_resources = [
                        ''
                        ], 
                    disabled_data_sources = [
                        'TwinData'
                        ], 
                    display_name = '', 
                    export = [
                        'RawEvents'
                        ], 
                    iot_hubs = [
                        ''
                        ], 
                    recommendations_configuration = [
                        openapi_client.models.recommendation_configuration_properties.RecommendationConfigurationProperties(
                            name = '', 
                            recommendation_type = 'IoT_ACRAuthentication', 
                            status = 'Enabled', )
                        ], 
                    status = 'Enabled', 
                    unmasked_ip_logging_status = 'Disabled', 
                    user_defined_resources = openapi_client.models.user_defined_resources_properties.UserDefinedResourcesProperties(
                        query = '', 
                        query_subscriptions = [
                            '62ECB020-8429-30cc-01FF-CCfeEe150AC3'
                            ], ), 
                    workspace = '', ),
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return IoTSecuritySolutionModel(
        )
        """

    def testIoTSecuritySolutionModel(self):
        """Test IoTSecuritySolutionModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
