# coding: utf-8

"""
    Azure Log Analytics

    Azure Log Analytics API reference.

    The version of the OpenAPI document: 2015-03-20
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.saved_searches_list_result import SavedSearchesListResult

class TestSavedSearchesListResult(unittest.TestCase):
    """SavedSearchesListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SavedSearchesListResult:
        """Test SavedSearchesListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SavedSearchesListResult`
        """
        model = SavedSearchesListResult()
        if include_optional:
            return SavedSearchesListResult(
                metadata = openapi_client.models.search_metadata.SearchMetadata(
                    aggregated_grouping_fields = '', 
                    aggregated_value_field = '', 
                    core_summaries = [
                        openapi_client.models.core_summary.CoreSummary(
                            number_of_documents = 56, 
                            status = '', )
                        ], 
                    e_tag = '', 
                    id = '', 
                    last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    max = 56, 
                    request_id = '', 
                    request_time = 56, 
                    result_type = '', 
                    schema = openapi_client.models.search_metadata_schema.SearchMetadataSchema(
                        name = '', 
                        version = 56, ), 
                    sort = [
                        openapi_client.models.search_sort.SearchSort(
                            name = '', 
                            order = 'asc', )
                        ], 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = '', 
                    sum = 56, 
                    top = 56, 
                    total = 56, ),
                value = [
                    openapi_client.models.saved_search.SavedSearch(
                        e_tag = '', 
                        id = '', 
                        name = '', 
                        properties = openapi_client.models.saved_search_properties.SavedSearchProperties(
                            category = '', 
                            display_name = '', 
                            query = '', 
                            tags = [
                                openapi_client.models.tag.Tag(
                                    name = '', 
                                    value = '', )
                                ], 
                            version = 1, ), 
                        type = '', )
                    ]
            )
        else:
            return SavedSearchesListResult(
        )
        """

    def testSavedSearchesListResult(self):
        """Test SavedSearchesListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
