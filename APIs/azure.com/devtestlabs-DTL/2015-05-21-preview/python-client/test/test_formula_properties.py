# coding: utf-8

"""
    DevTestLabsClient

    Azure DevTest Labs REST API version 2015-05-21-preview.

    The version of the OpenAPI document: 2015-05-21-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.formula_properties import FormulaProperties

class TestFormulaProperties(unittest.TestCase):
    """FormulaProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FormulaProperties:
        """Test FormulaProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FormulaProperties`
        """
        model = FormulaProperties()
        if include_optional:
            return FormulaProperties(
                author = '',
                creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                formula_content = openapi_client.models.lab_virtual_machine.LabVirtualMachine(
                    id = '', 
                    location = '', 
                    name = '', 
                    properties = openapi_client.models.lab_virtual_machine_properties.LabVirtualMachineProperties(
                        artifact_deployment_status = openapi_client.models.artifact_deployment_status_properties.ArtifactDeploymentStatusProperties(
                            artifacts_applied = 56, 
                            deployment_status = '', 
                            total_artifacts = 56, ), 
                        artifacts = [
                            openapi_client.models.artifact_install_properties.ArtifactInstallProperties(
                                artifact_id = '', 
                                parameters = [
                                    openapi_client.models.artifact_parameter_properties.ArtifactParameterProperties(
                                        name = '', 
                                        value = '', )
                                    ], )
                            ], 
                        compute_id = '', 
                        created_by_user = '', 
                        created_by_user_id = '', 
                        custom_image_id = '', 
                        disallow_public_ip_address = True, 
                        fqdn = '', 
                        gallery_image_reference = openapi_client.models.gallery_image_reference.GalleryImageReference(
                            offer = '', 
                            os_type = '', 
                            publisher = '', 
                            sku = '', 
                            version = '', ), 
                        is_authentication_with_ssh_key = True, 
                        lab_subnet_name = '', 
                        lab_virtual_network_id = '', 
                        notes = '', 
                        os_type = '', 
                        owner_object_id = '', 
                        password = '', 
                        provisioning_state = '', 
                        size = '', 
                        ssh_key = '', 
                        user_name = '', ), 
                    tags = {
                        'key' : ''
                        }, 
                    type = '', ),
                os_type = '',
                provisioning_state = '',
                vm = openapi_client.models.formula_properties_from_vm.FormulaPropertiesFromVm(
                    lab_vm_id = '', )
            )
        else:
            return FormulaProperties(
        )
        """

    def testFormulaProperties(self):
        """Test FormulaProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
