# coding: utf-8

"""
    DevTestLabsClient

    The DevTest Labs Client.

    The version of the OpenAPI document: 2018-09-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dtl_environment_fragment import DtlEnvironmentFragment

class TestDtlEnvironmentFragment(unittest.TestCase):
    """DtlEnvironmentFragment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DtlEnvironmentFragment:
        """Test DtlEnvironmentFragment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DtlEnvironmentFragment`
        """
        model = DtlEnvironmentFragment()
        if include_optional:
            return DtlEnvironmentFragment(
                properties = openapi_client.models.environment_properties_fragment.EnvironmentPropertiesFragment(
                    arm_template_display_name = '', 
                    deployment_properties = openapi_client.models.environment_deployment_properties_fragment.EnvironmentDeploymentPropertiesFragment(
                        arm_template_id = '', 
                        parameters = [
                            openapi_client.models.arm_template_parameter_properties_fragment.ArmTemplateParameterPropertiesFragment(
                                name = '', 
                                value = '', )
                            ], ), ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return DtlEnvironmentFragment(
        )
        """

    def testDtlEnvironmentFragment(self):
        """Test DtlEnvironmentFragment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
