# coding: utf-8

"""
    DevTestLabsClient

    The DevTest Labs Client.

    The version of the OpenAPI document: 2018-09-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.formula_properties_fragment import FormulaPropertiesFragment

class TestFormulaPropertiesFragment(unittest.TestCase):
    """FormulaPropertiesFragment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FormulaPropertiesFragment:
        """Test FormulaPropertiesFragment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FormulaPropertiesFragment`
        """
        model = FormulaPropertiesFragment()
        if include_optional:
            return FormulaPropertiesFragment(
                author = '',
                description = '',
                formula_content = openapi_client.models.lab_virtual_machine_creation_parameter_fragment.LabVirtualMachineCreationParameterFragment(
                    location = '', 
                    name = '', 
                    properties = openapi_client.models.lab_virtual_machine_creation_parameter_properties_fragment.LabVirtualMachineCreationParameterPropertiesFragment(
                        allow_claim = True, 
                        artifact_deployment_status = openapi_client.models.artifact_deployment_status_properties_fragment.ArtifactDeploymentStatusPropertiesFragment(
                            artifacts_applied = 56, 
                            deployment_status = '', 
                            total_artifacts = 56, ), 
                        artifacts = [
                            openapi_client.models.artifact_install_properties_fragment.ArtifactInstallPropertiesFragment(
                                artifact_id = '', 
                                artifact_title = '', 
                                deployment_status_message = '', 
                                install_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                parameters = [
                                    openapi_client.models.artifact_parameter_properties_fragment.ArtifactParameterPropertiesFragment(
                                        name = '', 
                                        value = '', )
                                    ], 
                                status = '', 
                                vm_extension_status_message = '', )
                            ], 
                        bulk_creation_parameters = openapi_client.models.bulk_creation_parameters_fragment.BulkCreationParametersFragment(
                            instance_count = 56, ), 
                        compute_id = '', 
                        created_by_user = '', 
                        created_by_user_id = '', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        custom_image_id = '', 
                        data_disk_parameters = [
                            openapi_client.models.data_disk_properties_fragment.DataDiskPropertiesFragment(
                                attach_new_data_disk_options = openapi_client.models.attach_new_data_disk_options_fragment.AttachNewDataDiskOptionsFragment(
                                    disk_name = '', 
                                    disk_size_gi_b = 56, 
                                    disk_type = 'Standard', ), 
                                existing_lab_disk_id = '', 
                                host_caching = 'None', )
                            ], 
                        disallow_public_ip_address = True, 
                        environment_id = '', 
                        expiration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        fqdn = '', 
                        gallery_image_reference = openapi_client.models.gallery_image_reference_fragment.GalleryImageReferenceFragment(
                            offer = '', 
                            os_type = '', 
                            publisher = '', 
                            sku = '', 
                            version = '', ), 
                        is_authentication_with_ssh_key = True, 
                        lab_subnet_name = '', 
                        lab_virtual_network_id = '', 
                        last_known_power_state = '', 
                        network_interface = openapi_client.models.network_interface_properties_fragment.NetworkInterfacePropertiesFragment(
                            dns_name = '', 
                            private_ip_address = '', 
                            public_ip_address = '', 
                            public_ip_address_id = '', 
                            rdp_authority = '', 
                            shared_public_ip_address_configuration = openapi_client.models.shared_public_ip_address_configuration_fragment.SharedPublicIpAddressConfigurationFragment(
                                inbound_nat_rules = [
                                    openapi_client.models.inbound_nat_rule_fragment.InboundNatRuleFragment(
                                        backend_port = 56, 
                                        frontend_port = 56, 
                                        transport_protocol = 'Tcp', )
                                    ], ), 
                            ssh_authority = '', 
                            subnet_id = '', 
                            virtual_network_id = '', ), 
                        notes = '', 
                        os_type = '', 
                        owner_object_id = '', 
                        owner_user_principal_name = '', 
                        password = '', 
                        plan_id = '', 
                        schedule_parameters = [
                            openapi_client.models.schedule_creation_parameter_fragment.ScheduleCreationParameterFragment(
                                location = '', 
                                name = '', 
                                tags = {
                                    'key' : ''
                                    }, )
                            ], 
                        size = '', 
                        ssh_key = '', 
                        storage_type = '', 
                        user_name = '', 
                        virtual_machine_creation_source = 'FromCustomImage', ), 
                    tags = {
                        'key' : ''
                        }, ),
                os_type = '',
                vm = openapi_client.models.formula_properties_from_vm_fragment.FormulaPropertiesFromVmFragment(
                    lab_vm_id = '', )
            )
        else:
            return FormulaPropertiesFragment(
        )
        """

    def testFormulaPropertiesFragment(self):
        """Test FormulaPropertiesFragment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
