# coding: utf-8

"""
    DevTestLabsClient

    The DevTest Labs Client.

    The version of the OpenAPI document: 2016-05-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.response_with_continuation_virtual_network import ResponseWithContinuationVirtualNetwork

class TestResponseWithContinuationVirtualNetwork(unittest.TestCase):
    """ResponseWithContinuationVirtualNetwork unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseWithContinuationVirtualNetwork:
        """Test ResponseWithContinuationVirtualNetwork
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseWithContinuationVirtualNetwork`
        """
        model = ResponseWithContinuationVirtualNetwork()
        if include_optional:
            return ResponseWithContinuationVirtualNetwork(
                next_link = '',
                value = [
                    openapi_client.models.virtual_network.VirtualNetwork(
                        properties = openapi_client.models.virtual_network_properties.VirtualNetworkProperties(
                            allowed_subnets = [
                                openapi_client.models.subnet.Subnet(
                                    allow_public_ip = 'Default', 
                                    lab_subnet_name = '', 
                                    resource_id = '', )
                                ], 
                            created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            external_provider_resource_id = '', 
                            external_subnets = [
                                openapi_client.models.external_subnet.ExternalSubnet(
                                    id = '', 
                                    name = '', )
                                ], 
                            provisioning_state = '', 
                            subnet_overrides = [
                                openapi_client.models.subnet_override.SubnetOverride(
                                    lab_subnet_name = '', 
                                    resource_id = '', 
                                    shared_public_ip_address_configuration = openapi_client.models.subnet_shared_public_ip_address_configuration.SubnetSharedPublicIpAddressConfiguration(
                                        allowed_ports = [
                                            openapi_client.models.port.Port(
                                                backend_port = 56, 
                                                transport_protocol = 'Tcp', )
                                            ], ), 
                                    use_in_vm_creation_permission = 'Default', 
                                    use_public_ip_address_permission = 'Default', 
                                    virtual_network_pool_name = '', )
                                ], 
                            unique_identifier = '', ), )
                    ]
            )
        else:
            return ResponseWithContinuationVirtualNetwork(
        )
        """

    def testResponseWithContinuationVirtualNetwork(self):
        """Test ResponseWithContinuationVirtualNetwork"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
