# coding: utf-8

"""
    DevTestLabsClient

    The DevTest Labs Client.

    The version of the OpenAPI document: 2016-05-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.response_with_continuation_dtl_environment import ResponseWithContinuationDtlEnvironment

class TestResponseWithContinuationDtlEnvironment(unittest.TestCase):
    """ResponseWithContinuationDtlEnvironment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseWithContinuationDtlEnvironment:
        """Test ResponseWithContinuationDtlEnvironment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseWithContinuationDtlEnvironment`
        """
        model = ResponseWithContinuationDtlEnvironment()
        if include_optional:
            return ResponseWithContinuationDtlEnvironment(
                next_link = '',
                value = [
                    openapi_client.models.dtl_environment.DtlEnvironment(
                        properties = openapi_client.models.environment_properties.EnvironmentProperties(
                            arm_template_display_name = '', 
                            created_by_user = '', 
                            deployment_properties = openapi_client.models.environment_deployment_properties.EnvironmentDeploymentProperties(
                                arm_template_id = '', 
                                parameters = [
                                    openapi_client.models.arm_template_parameter_properties.ArmTemplateParameterProperties(
                                        name = '', 
                                        value = '', )
                                    ], ), 
                            provisioning_state = '', 
                            resource_group_id = '', 
                            unique_identifier = '', ), )
                    ]
            )
        else:
            return ResponseWithContinuationDtlEnvironment(
        )
        """

    def testResponseWithContinuationDtlEnvironment(self):
        """Test ResponseWithContinuationDtlEnvironment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
