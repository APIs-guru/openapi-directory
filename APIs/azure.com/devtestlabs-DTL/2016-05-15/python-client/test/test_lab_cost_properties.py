# coding: utf-8

"""
    DevTestLabsClient

    The DevTest Labs Client.

    The version of the OpenAPI document: 2016-05-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.lab_cost_properties import LabCostProperties

class TestLabCostProperties(unittest.TestCase):
    """LabCostProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LabCostProperties:
        """Test LabCostProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LabCostProperties`
        """
        model = LabCostProperties()
        if include_optional:
            return LabCostProperties(
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                currency_code = '',
                end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                lab_cost_details = [
                    openapi_client.models.lab_cost_details_properties.LabCostDetailsProperties(
                        cost = 1.337, 
                        cost_type = 'Unavailable', 
                        date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                lab_cost_summary = openapi_client.models.lab_cost_summary_properties.LabCostSummaryProperties(
                    estimated_lab_cost = 1.337, ),
                provisioning_state = '',
                resource_costs = [
                    openapi_client.models.lab_resource_cost_properties.LabResourceCostProperties(
                        external_resource_id = '', 
                        resource_cost = 1.337, 
                        resource_id = '', 
                        resource_owner = '', 
                        resource_pricing_tier = '', 
                        resource_status = '', 
                        resource_type = '', 
                        resource_uid = '', 
                        resourcename = '', )
                    ],
                start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                target_cost = openapi_client.models.target_cost_properties.TargetCostProperties(
                    cost_thresholds = [
                        openapi_client.models.cost_threshold_properties.CostThresholdProperties(
                            display_on_chart = 'Enabled', 
                            notification_sent = '', 
                            percentage_threshold = openapi_client.models.percentage_cost_threshold_properties.PercentageCostThresholdProperties(
                                threshold_value = 1.337, ), 
                            send_notification_when_exceeded = 'Enabled', 
                            threshold_id = '', )
                        ], 
                    cycle_end_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cycle_start_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    cycle_type = 'CalendarMonth', 
                    status = 'Enabled', 
                    target = 56, ),
                unique_identifier = ''
            )
        else:
            return LabCostProperties(
        )
        """

    def testLabCostProperties(self):
        """Test LabCostProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
