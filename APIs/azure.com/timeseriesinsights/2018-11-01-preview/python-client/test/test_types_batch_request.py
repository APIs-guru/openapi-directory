# coding: utf-8

"""
    TimeSeriesInsightsClient

    Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.

    The version of the OpenAPI document: 2018-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.types_batch_request import TypesBatchRequest

class TestTypesBatchRequest(unittest.TestCase):
    """TypesBatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TypesBatchRequest:
        """Test TypesBatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TypesBatchRequest`
        """
        model = TypesBatchRequest()
        if include_optional:
            return TypesBatchRequest(
                delete = openapi_client.models.types_request_batch_get_or_delete.TypesRequestBatchGetOrDelete(
                    names = [
                        ''
                        ], 
                    type_ids = [
                        ''
                        ], ),
                get = openapi_client.models.types_request_batch_get_or_delete.TypesRequestBatchGetOrDelete(
                    names = [
                        ''
                        ], 
                    type_ids = [
                        ''
                        ], ),
                put = [
                    openapi_client.models.time_series_type.TimeSeriesType(
                        description = '', 
                        id = '', 
                        name = '', 
                        variables = openapi_client.models.variables.variables(), )
                    ]
            )
        else:
            return TypesBatchRequest(
        )
        """

    def testTypesBatchRequest(self):
        """Test TypesBatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
