# coding: utf-8

"""
    TimeSeriesInsightsClient

    Time Series Insights environment data plane client for PAYG (Preview L1 SKU) environments.

    The version of the OpenAPI document: 2018-11-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.categorical_variable import CategoricalVariable

class TestCategoricalVariable(unittest.TestCase):
    """CategoricalVariable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CategoricalVariable:
        """Test CategoricalVariable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CategoricalVariable`
        """
        model = CategoricalVariable()
        if include_optional:
            return CategoricalVariable(
                categories = [
                    openapi_client.models.time_series_aggregate_category.TimeSeriesAggregateCategory(
                        label = '', 
                        values = [
                            None
                            ], )
                    ],
                default_category = openapi_client.models.time_series_default_category.TimeSeriesDefaultCategory(
                    label = '', ),
                interpolation = openapi_client.models.interpolation.Interpolation(
                    boundary = openapi_client.models.interpolation_boundary.Interpolation_boundary(
                        span = '', ), 
                    kind = 'Linear', ),
                value = openapi_client.models.tsx.Tsx(
                    tsx = '', )
            )
        else:
            return CategoricalVariable(
        )
        """

    def testCategoricalVariable(self):
        """Test CategoricalVariable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
