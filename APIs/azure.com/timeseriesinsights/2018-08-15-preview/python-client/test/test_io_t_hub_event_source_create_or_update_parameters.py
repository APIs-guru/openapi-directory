# coding: utf-8

"""
    TimeSeriesInsightsClient

    Time Series Insights client

    The version of the OpenAPI document: 2018-08-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.io_t_hub_event_source_create_or_update_parameters import IoTHubEventSourceCreateOrUpdateParameters

class TestIoTHubEventSourceCreateOrUpdateParameters(unittest.TestCase):
    """IoTHubEventSourceCreateOrUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoTHubEventSourceCreateOrUpdateParameters:
        """Test IoTHubEventSourceCreateOrUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoTHubEventSourceCreateOrUpdateParameters`
        """
        model = IoTHubEventSourceCreateOrUpdateParameters()
        if include_optional:
            return IoTHubEventSourceCreateOrUpdateParameters(
                properties = openapi_client.models.io_t_hub_event_source_creation_properties.IoTHubEventSourceCreationProperties(
                    shared_access_key = '', ),
                kind = 'Microsoft.EventHub',
                location = '',
                tags = {
                    'key' : ''
                    }
            )
        else:
            return IoTHubEventSourceCreateOrUpdateParameters(
                properties = openapi_client.models.io_t_hub_event_source_creation_properties.IoTHubEventSourceCreationProperties(
                    shared_access_key = '', ),
                kind = 'Microsoft.EventHub',
                location = '',
        )
        """

    def testIoTHubEventSourceCreateOrUpdateParameters(self):
        """Test IoTHubEventSourceCreateOrUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
