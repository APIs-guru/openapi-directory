# coding: utf-8

"""
    TimeSeriesInsightsClient

    Time Series Insights client

    The version of the OpenAPI document: 2018-08-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.long_term_environment_resource_properties import LongTermEnvironmentResourceProperties

class TestLongTermEnvironmentResourceProperties(unittest.TestCase):
    """LongTermEnvironmentResourceProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LongTermEnvironmentResourceProperties:
        """Test LongTermEnvironmentResourceProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LongTermEnvironmentResourceProperties`
        """
        model = LongTermEnvironmentResourceProperties()
        if include_optional:
            return LongTermEnvironmentResourceProperties(
                storage_configuration = openapi_client.models.long_term_storage_configuration_output.LongTermStorageConfigurationOutput(
                    account_name = '', ),
                time_series_id_properties = [
                    openapi_client.models.time_series_id_property.TimeSeriesIdProperty(
                        name = '', 
                        type = 'String', )
                    ],
                warm_store_configuration = openapi_client.models.warm_store_configuration_properties.WarmStoreConfigurationProperties(
                    data_retention = '', ),
                data_access_fqdn = '',
                data_access_id = '',
                status = openapi_client.models.environment_status.EnvironmentStatus(
                    ingress = openapi_client.models.ingress_environment_status.IngressEnvironmentStatus(
                        state = 'Disabled', 
                        state_details = openapi_client.models.environment_state_details.EnvironmentStateDetails(
                            code = '', 
                            message = '', ), ), 
                    warm_storage = openapi_client.models.warm_storage_environment_status.WarmStorageEnvironmentStatus(
                        properties_usage = openapi_client.models.warm_storage_properties_usage.WarmStoragePropertiesUsage(
                            state = 'Ok', ), ), ),
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                provisioning_state = 'Accepted'
            )
        else:
            return LongTermEnvironmentResourceProperties(
                storage_configuration = openapi_client.models.long_term_storage_configuration_output.LongTermStorageConfigurationOutput(
                    account_name = '', ),
                time_series_id_properties = [
                    openapi_client.models.time_series_id_property.TimeSeriesIdProperty(
                        name = '', 
                        type = 'String', )
                    ],
        )
        """

    def testLongTermEnvironmentResourceProperties(self):
        """Test LongTermEnvironmentResourceProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
