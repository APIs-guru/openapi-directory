# coding: utf-8

"""
    TimeSeriesInsightsClient

    Time Series Insights client

    The version of the OpenAPI document: 2018-08-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.environment_status import EnvironmentStatus

class TestEnvironmentStatus(unittest.TestCase):
    """EnvironmentStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnvironmentStatus:
        """Test EnvironmentStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnvironmentStatus`
        """
        model = EnvironmentStatus()
        if include_optional:
            return EnvironmentStatus(
                ingress = openapi_client.models.ingress_environment_status.IngressEnvironmentStatus(
                    state = 'Disabled', 
                    state_details = openapi_client.models.environment_state_details.EnvironmentStateDetails(
                        code = '', 
                        message = '', ), ),
                warm_storage = openapi_client.models.warm_storage_environment_status.WarmStorageEnvironmentStatus(
                    properties_usage = openapi_client.models.warm_storage_properties_usage.WarmStoragePropertiesUsage(
                        state = 'Ok', 
                        state_details = openapi_client.models.warm_storage_properties_usage_state_details.WarmStoragePropertiesUsageStateDetails(
                            current_count = 1, 
                            max_count = 1, ), ), )
            )
        else:
            return EnvironmentStatus(
        )
        """

    def testEnvironmentStatus(self):
        """Test EnvironmentStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
