# coding: utf-8

"""
    WebSite Management Client

    Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.

    The version of the OpenAPI document: 2015-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.site_auth_settings import SiteAuthSettings

class TestSiteAuthSettings(unittest.TestCase):
    """SiteAuthSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteAuthSettings:
        """Test SiteAuthSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteAuthSettings`
        """
        model = SiteAuthSettings()
        if include_optional:
            return SiteAuthSettings(
                aad_client_id = '',
                additional_login_params = [
                    ''
                    ],
                allowed_audiences = [
                    ''
                    ],
                allowed_external_redirect_urls = [
                    ''
                    ],
                client_id = '',
                client_secret = '',
                default_provider = 'AzureActiveDirectory',
                enabled = True,
                facebook_app_id = '',
                facebook_app_secret = '',
                facebook_o_auth_scopes = [
                    ''
                    ],
                google_client_id = '',
                google_client_secret = '',
                google_o_auth_scopes = [
                    ''
                    ],
                http_api_prefix_path = '',
                issuer = '',
                microsoft_account_client_id = '',
                microsoft_account_client_secret = '',
                microsoft_account_o_auth_scopes = [
                    ''
                    ],
                open_id_issuer = '',
                token_refresh_extension_hours = 1.337,
                token_store_enabled = True,
                twitter_consumer_key = '',
                twitter_consumer_secret = '',
                unauthenticated_client_action = 'RedirectToLoginPage'
            )
        else:
            return SiteAuthSettings(
        )
        """

    def testSiteAuthSettings(self):
        """Test SiteAuthSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
