# coding: utf-8

"""
    WebSite Management Client

    Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.

    The version of the OpenAPI document: 2015-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.site_collection import SiteCollection

class TestSiteCollection(unittest.TestCase):
    """SiteCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SiteCollection:
        """Test SiteCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SiteCollection`
        """
        model = SiteCollection()
        if include_optional:
            return SiteCollection(
                next_link = '',
                value = [
                    openapi_client.models.site.Site(
                        properties = openapi_client.models.properties.properties(
                            availability_state = 'Normal', 
                            client_affinity_enabled = True, 
                            client_cert_enabled = True, 
                            cloning_info = openapi_client.models.cloning_info.CloningInfo(
                                app_settings_overrides = {
                                    'key' : ''
                                    }, 
                                clone_custom_host_names = True, 
                                clone_source_control = True, 
                                configure_load_balancing = True, 
                                correlation_id = '', 
                                hosting_environment = '', 
                                overwrite = True, 
                                source_web_app_id = '', 
                                traffic_manager_profile_id = '', 
                                traffic_manager_profile_name = '', ), 
                            container_size = 56, 
                            default_host_name = '', 
                            enabled = True, 
                            enabled_host_names = [
                                ''
                                ], 
                            gateway_site_name = '', 
                            host_name_ssl_states = [
                                openapi_client.models.host_name_ssl_state.HostNameSslState(
                                    name = '', 
                                    ssl_state = 'Disabled', 
                                    thumbprint = '', 
                                    to_update = True, 
                                    virtual_ip = '', )
                                ], 
                            host_names = [
                                ''
                                ], 
                            host_names_disabled = True, 
                            hosting_environment_profile = openapi_client.models.hosting_environment_profile.HostingEnvironmentProfile(
                                id = '', 
                                name = '', 
                                type = '', ), 
                            is_default_container = True, 
                            last_modified_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            max_number_of_workers = 56, 
                            micro_service = '', 
                            name = '', 
                            outbound_ip_addresses = '', 
                            premium_app_deployed = True, 
                            repository_site_name = '', 
                            resource_group = '', 
                            scm_site_also_stopped = True, 
                            server_farm_id = '', 
                            site_config = openapi_client.models.site_config.SiteConfig(), 
                            state = '', 
                            target_swap_slot = '', 
                            traffic_manager_host_names = [
                                ''
                                ], 
                            usage_state = 'Normal', ), )
                    ]
            )
        else:
            return SiteCollection(
        )
        """

    def testSiteCollection(self):
        """Test SiteCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
