# coding: utf-8

"""
    WebSite Management Client

    Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.

    The version of the OpenAPI document: 2015-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vnet_info import VnetInfo

class TestVnetInfo(unittest.TestCase):
    """VnetInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VnetInfo:
        """Test VnetInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VnetInfo`
        """
        model = VnetInfo()
        if include_optional:
            return VnetInfo(
                properties = openapi_client.models.properties.properties(
                    cert_blob = '', 
                    cert_thumbprint = '', 
                    dns_servers = '', 
                    resync_required = True, 
                    routes = [
                        openapi_client.models.vnet_route.VnetRoute()
                        ], 
                    vnet_resource_id = '', ),
                id = '',
                kind = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return VnetInfo(
                location = '',
        )
        """

    def testVnetInfo(self):
        """Test VnetInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
