# coding: utf-8

"""
    WebSite Management Client

    Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.

    The version of the OpenAPI document: 2015-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.recommendation_rule import RecommendationRule

class TestRecommendationRule(unittest.TestCase):
    """RecommendationRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecommendationRule:
        """Test RecommendationRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecommendationRule`
        """
        model = RecommendationRule()
        if include_optional:
            return RecommendationRule(
                action_name = '',
                channels = 'Notification',
                description = '',
                display_name = '',
                enabled = 56,
                level = 'Critical',
                message = '',
                name = '',
                recommendation_id = '',
                tags = [
                    ''
                    ]
            )
        else:
            return RecommendationRule(
                channels = 'Notification',
                level = 'Critical',
        )
        """

    def testRecommendationRule(self):
        """Test RecommendationRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
