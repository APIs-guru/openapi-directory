# coding: utf-8

"""
    WebSite Management Client

    Use these APIs to manage Azure Websites resources through the Azure Resource Manager. All task operations conform to the HTTP/1.1 protocol specification and each operation returns an x-ms-request-id header that can be used to obtain information about the request. You must make sure that requests made to these resources are secure. For more information, see https://msdn.microsoft.com/en-us/library/azure/dn790557.aspx.

    The version of the OpenAPI document: 2015-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.certificate_orders_api import CertificateOrdersApi


class TestCertificateOrdersApi(unittest.TestCase):
    """CertificateOrdersApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CertificateOrdersApi()

    def tearDown(self) -> None:
        pass

    def test_certificate_orders_create_or_update_certificate(self) -> None:
        """Test case for certificate_orders_create_or_update_certificate

        Associates a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready
        """
        pass

    def test_certificate_orders_create_or_update_certificate_order(self) -> None:
        """Test case for certificate_orders_create_or_update_certificate_order

        Create or update a certificate purchase order
        """
        pass

    def test_certificate_orders_delete_certificate(self) -> None:
        """Test case for certificate_orders_delete_certificate

        Deletes the certificate associated with the certificate order
        """
        pass

    def test_certificate_orders_delete_certificate_order(self) -> None:
        """Test case for certificate_orders_delete_certificate_order

        Delete an existing certificate order
        """
        pass

    def test_certificate_orders_get_certificate(self) -> None:
        """Test case for certificate_orders_get_certificate

        Get certificate associated with the certificate order
        """
        pass

    def test_certificate_orders_get_certificate_order(self) -> None:
        """Test case for certificate_orders_get_certificate_order

        Get a certificate order
        """
        pass

    def test_certificate_orders_get_certificate_orders(self) -> None:
        """Test case for certificate_orders_get_certificate_orders

        Get certificate orders in a resource group
        """
        pass

    def test_certificate_orders_get_certificates(self) -> None:
        """Test case for certificate_orders_get_certificates

        List all certificates associated with a certificate order (only one certificate can be associated with an order at a time)
        """
        pass

    def test_certificate_orders_reissue_certificate_order(self) -> None:
        """Test case for certificate_orders_reissue_certificate_order

        Reissue an existing certificate order
        """
        pass

    def test_certificate_orders_renew_certificate_order(self) -> None:
        """Test case for certificate_orders_renew_certificate_order

        Renew an existing certificate order
        """
        pass

    def test_certificate_orders_resend_certificate_email(self) -> None:
        """Test case for certificate_orders_resend_certificate_email

        Resend certificate email
        """
        pass

    def test_certificate_orders_retrieve_certificate_actions(self) -> None:
        """Test case for certificate_orders_retrieve_certificate_actions

        Retrieve the list of certificate actions
        """
        pass

    def test_certificate_orders_retrieve_certificate_email_history(self) -> None:
        """Test case for certificate_orders_retrieve_certificate_email_history

        Retrieve email history
        """
        pass

    def test_certificate_orders_update_certificate(self) -> None:
        """Test case for certificate_orders_update_certificate

        Associates a Key Vault secret to a certificate store that will be used for storing the certificate once it's ready
        """
        pass

    def test_certificate_orders_update_certificate_order(self) -> None:
        """Test case for certificate_orders_update_certificate_order

        Create or update a certificate purchase order
        """
        pass

    def test_certificate_orders_verify_domain_ownership(self) -> None:
        """Test case for certificate_orders_verify_domain_ownership

        Verify domain ownership for this certificate order
        """
        pass


if __name__ == '__main__':
    unittest.main()
