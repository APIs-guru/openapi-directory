# coding: utf-8

"""
    HDInsightManagementClient

    The HDInsight Management Client.

    The version of the OpenAPI document: 2015-03-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr, field_validator
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.application_properties_compute_profile_roles_inner_autoscale_recurrence_schedule_inner_time_and_capacity import ApplicationPropertiesComputeProfileRolesInnerAutoscaleRecurrenceScheduleInnerTimeAndCapacity
from typing import Optional, Set
from typing_extensions import Self

class ApplicationPropertiesComputeProfileRolesInnerAutoscaleRecurrenceScheduleInner(BaseModel):
    """
    Parameters for a schedule-based autoscale rule, consisting of an array of days + a time and capacity
    """ # noqa: E501
    days: Optional[List[StrictStr]] = Field(default=None, description="Days of the week for a schedule-based autoscale rule")
    time_and_capacity: Optional[ApplicationPropertiesComputeProfileRolesInnerAutoscaleRecurrenceScheduleInnerTimeAndCapacity] = Field(default=None, alias="timeAndCapacity")
    __properties: ClassVar[List[str]] = ["days", "timeAndCapacity"]

    @field_validator('days')
    def days_validate_enum(cls, value):
        """Validates the enum"""
        if value is None:
            return value

        for i in value:
            if i not in set(['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']):
                raise ValueError("each list item must be one of ('Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday')")
        return value

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ApplicationPropertiesComputeProfileRolesInnerAutoscaleRecurrenceScheduleInner from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of time_and_capacity
        if self.time_and_capacity:
            _dict['timeAndCapacity'] = self.time_and_capacity.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ApplicationPropertiesComputeProfileRolesInnerAutoscaleRecurrenceScheduleInner from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "days": obj.get("days"),
            "timeAndCapacity": ApplicationPropertiesComputeProfileRolesInnerAutoscaleRecurrenceScheduleInnerTimeAndCapacity.from_dict(obj["timeAndCapacity"]) if obj.get("timeAndCapacity") is not None else None
        })
        return _obj


