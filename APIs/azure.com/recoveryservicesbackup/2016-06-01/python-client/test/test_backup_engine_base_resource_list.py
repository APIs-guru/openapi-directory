# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backup_engine_base_resource_list import BackupEngineBaseResourceList

class TestBackupEngineBaseResourceList(unittest.TestCase):
    """BackupEngineBaseResourceList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupEngineBaseResourceList:
        """Test BackupEngineBaseResourceList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupEngineBaseResourceList`
        """
        model = BackupEngineBaseResourceList()
        if include_optional:
            return BackupEngineBaseResourceList(
                value = [
                    openapi_client.models.backup_engine_base_resource.BackupEngineBaseResource(
                        properties = openapi_client.models.backup_engine_base.BackupEngineBase(
                            backup_engine_id = '', 
                            backup_management_type = 'Invalid', 
                            can_re_register = True, 
                            friendly_name = '', 
                            health_status = '', 
                            registration_status = '', ), )
                    ],
                next_link = ''
            )
        else:
            return BackupEngineBaseResourceList(
        )
        """

    def testBackupEngineBaseResourceList(self):
        """Test BackupEngineBaseResourceList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
