# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.protected_item_resource import ProtectedItemResource
from openapi_client.models.protected_item_resource_list import ProtectedItemResourceList

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ProtectedItemsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def protected_items_create_or_update(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description="The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The name of the backup item.")],
        resource_protected_item: Annotated[ProtectedItemResource, Field(description="The resource backup item.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """protected_items_create_or_update

        This operation enables an item to be backed up, or modifies the existing backup policy information for an item that has been backed up. This is an asynchronous operation. To learn the status of the operation, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name: The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The name of the backup item. (required)
        :type protected_item_name: str
        :param resource_protected_item: The resource backup item. (required)
        :type resource_protected_item: ProtectedItemResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_create_or_update_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            resource_protected_item=resource_protected_item,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def protected_items_create_or_update_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description="The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The name of the backup item.")],
        resource_protected_item: Annotated[ProtectedItemResource, Field(description="The resource backup item.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """protected_items_create_or_update

        This operation enables an item to be backed up, or modifies the existing backup policy information for an item that has been backed up. This is an asynchronous operation. To learn the status of the operation, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name: The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The name of the backup item. (required)
        :type protected_item_name: str
        :param resource_protected_item: The resource backup item. (required)
        :type resource_protected_item: ProtectedItemResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_create_or_update_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            resource_protected_item=resource_protected_item,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def protected_items_create_or_update_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description="The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The name of the backup item.")],
        resource_protected_item: Annotated[ProtectedItemResource, Field(description="The resource backup item.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """protected_items_create_or_update

        This operation enables an item to be backed up, or modifies the existing backup policy information for an item that has been backed up. This is an asynchronous operation. To learn the status of the operation, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name: The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The name of the backup item. (required)
        :type protected_item_name: str
        :param resource_protected_item: The resource backup item. (required)
        :type resource_protected_item: ProtectedItemResource
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_create_or_update_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            resource_protected_item=resource_protected_item,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _protected_items_create_or_update_serialize(
        self,
        api_version,
        vault_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        container_name,
        protected_item_name,
        resource_protected_item,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if vault_name is not None:
            _path_params['vaultName'] = vault_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if container_name is not None:
            _path_params['containerName'] = container_name
        if protected_item_name is not None:
            _path_params['protectedItemName'] = protected_item_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if resource_protected_item is not None:
            _body_params = resource_protected_item



        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def protected_items_delete(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description=" The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The backup item to be deleted.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """protected_items_delete

        Used to disable the backup job for an item within a container. This is an asynchronous operation. To learn the status of the request, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name:  The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The backup item to be deleted. (required)
        :type protected_item_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_delete_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def protected_items_delete_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description=" The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The backup item to be deleted.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """protected_items_delete

        Used to disable the backup job for an item within a container. This is an asynchronous operation. To learn the status of the request, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name:  The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The backup item to be deleted. (required)
        :type protected_item_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_delete_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def protected_items_delete_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description=" The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The backup item to be deleted.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """protected_items_delete

        Used to disable the backup job for an item within a container. This is an asynchronous operation. To learn the status of the request, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name:  The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The backup item to be deleted. (required)
        :type protected_item_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_delete_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _protected_items_delete_serialize(
        self,
        api_version,
        vault_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        container_name,
        protected_item_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if vault_name is not None:
            _path_params['vaultName'] = vault_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if container_name is not None:
            _path_params['containerName'] = container_name
        if protected_item_name is not None:
            _path_params['protectedItemName'] = protected_item_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter




        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def protected_items_get(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description="The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The backup item name used in this GET operation.")],
        filter: Annotated[Optional[StrictStr], Field(description="expand eq {extendedInfo}. This filter enables you to choose (or filter) specific items in the list of backup items.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProtectedItemResource:
        """protected_items_get

        Provides the details of the backup item. This is an asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name: The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The backup item name used in this GET operation. (required)
        :type protected_item_name: str
        :param filter: expand eq {extendedInfo}. This filter enables you to choose (or filter) specific items in the list of backup items.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_get_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectedItemResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def protected_items_get_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description="The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The backup item name used in this GET operation.")],
        filter: Annotated[Optional[StrictStr], Field(description="expand eq {extendedInfo}. This filter enables you to choose (or filter) specific items in the list of backup items.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProtectedItemResource]:
        """protected_items_get

        Provides the details of the backup item. This is an asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name: The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The backup item name used in this GET operation. (required)
        :type protected_item_name: str
        :param filter: expand eq {extendedInfo}. This filter enables you to choose (or filter) specific items in the list of backup items.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_get_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectedItemResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def protected_items_get_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        fabric_name: Annotated[StrictStr, Field(description="The fabric name associated with the backup item.")],
        container_name: Annotated[StrictStr, Field(description="The container name associated with the backup item.")],
        protected_item_name: Annotated[StrictStr, Field(description="The backup item name used in this GET operation.")],
        filter: Annotated[Optional[StrictStr], Field(description="expand eq {extendedInfo}. This filter enables you to choose (or filter) specific items in the list of backup items.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """protected_items_get

        Provides the details of the backup item. This is an asynchronous operation. To know the status of the operation, call the GetItemOperationResult API.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param fabric_name: The fabric name associated with the backup item. (required)
        :type fabric_name: str
        :param container_name: The container name associated with the backup item. (required)
        :type container_name: str
        :param protected_item_name: The backup item name used in this GET operation. (required)
        :type protected_item_name: str
        :param filter: expand eq {extendedInfo}. This filter enables you to choose (or filter) specific items in the list of backup items.
        :type filter: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_get_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            fabric_name=fabric_name,
            container_name=container_name,
            protected_item_name=protected_item_name,
            filter=filter,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectedItemResource",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _protected_items_get_serialize(
        self,
        api_version,
        vault_name,
        resource_group_name,
        subscription_id,
        fabric_name,
        container_name,
        protected_item_name,
        filter,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if vault_name is not None:
            _path_params['vaultName'] = vault_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if fabric_name is not None:
            _path_params['fabricName'] = fabric_name
        if container_name is not None:
            _path_params['containerName'] = container_name
        if protected_item_name is not None:
            _path_params['protectedItemName'] = protected_item_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupFabrics/{fabricName}/protectionContainers/{containerName}/protectedItems/{protectedItemName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def protected_items_list(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        filter: Annotated[Optional[StrictStr], Field(description=" itemType eq { VM , FileFolder , AzureSqlDb , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq {policyName} and containerName eq {containername} and backupManagementType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.")] = None,
        skip_token: Annotated[Optional[StrictStr], Field(description=" The Skip Token filter.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ProtectedItemResourceList:
        """protected_items_list

        Provides a pageable list of all items in a subscription, that can be protected.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param filter:  itemType eq { VM , FileFolder , AzureSqlDb , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq {policyName} and containerName eq {containername} and backupManagementType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
        :type filter: str
        :param skip_token:  The Skip Token filter.
        :type skip_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_list_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            filter=filter,
            skip_token=skip_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectedItemResourceList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def protected_items_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        filter: Annotated[Optional[StrictStr], Field(description=" itemType eq { VM , FileFolder , AzureSqlDb , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq {policyName} and containerName eq {containername} and backupManagementType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.")] = None,
        skip_token: Annotated[Optional[StrictStr], Field(description=" The Skip Token filter.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[ProtectedItemResourceList]:
        """protected_items_list

        Provides a pageable list of all items in a subscription, that can be protected.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param filter:  itemType eq { VM , FileFolder , AzureSqlDb , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq {policyName} and containerName eq {containername} and backupManagementType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
        :type filter: str
        :param skip_token:  The Skip Token filter.
        :type skip_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_list_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            filter=filter,
            skip_token=skip_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectedItemResourceList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def protected_items_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API version.")],
        vault_name: Annotated[StrictStr, Field(description="The name of the Recovery Services vault.")],
        resource_group_name: Annotated[StrictStr, Field(description="The name of the resource group associated with the Recovery Services vault.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscription ID.")],
        filter: Annotated[Optional[StrictStr], Field(description=" itemType eq { VM , FileFolder , AzureSqlDb , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq {policyName} and containerName eq {containername} and backupManagementType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.")] = None,
        skip_token: Annotated[Optional[StrictStr], Field(description=" The Skip Token filter.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """protected_items_list

        Provides a pageable list of all items in a subscription, that can be protected.

        :param api_version: Client API version. (required)
        :type api_version: str
        :param vault_name: The name of the Recovery Services vault. (required)
        :type vault_name: str
        :param resource_group_name: The name of the resource group associated with the Recovery Services vault. (required)
        :type resource_group_name: str
        :param subscription_id: The subscription ID. (required)
        :type subscription_id: str
        :param filter:  itemType eq { VM , FileFolder , AzureSqlDb , SQLDB , Exchange , Sharepoint , DPMUnknown } and providerType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql } and policyName eq {policyName} and containerName eq {containername} and backupManagementType eq { AzureIaasVM, MAB, DPM, AzureBackupServer, AzureSql }.
        :type filter: str
        :param skip_token:  The Skip Token filter.
        :type skip_token: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._protected_items_list_serialize(
            api_version=api_version,
            vault_name=vault_name,
            resource_group_name=resource_group_name,
            subscription_id=subscription_id,
            filter=filter,
            skip_token=skip_token,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "ProtectedItemResourceList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _protected_items_list_serialize(
        self,
        api_version,
        vault_name,
        resource_group_name,
        subscription_id,
        filter,
        skip_token,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if vault_name is not None:
            _path_params['vaultName'] = vault_name
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if skip_token is not None:
            
            _query_params.append(('$skipToken', skip_token))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.RecoveryServices/vaults/{vaultName}/backupProtectedItems',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


