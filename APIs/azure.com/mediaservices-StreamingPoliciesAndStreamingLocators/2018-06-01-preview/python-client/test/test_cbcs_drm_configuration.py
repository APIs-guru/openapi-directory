# coding: utf-8

"""
    Azure Media Services

    This Swagger was generated by the API Framework.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cbcs_drm_configuration import CbcsDrmConfiguration

class TestCbcsDrmConfiguration(unittest.TestCase):
    """CbcsDrmConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CbcsDrmConfiguration:
        """Test CbcsDrmConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CbcsDrmConfiguration`
        """
        model = CbcsDrmConfiguration()
        if include_optional:
            return CbcsDrmConfiguration(
                fair_play = openapi_client.models.streaming_policy_fair_play_configuration.StreamingPolicyFairPlayConfiguration(
                    allow_persistent_license = True, 
                    custom_license_acquisition_url_template = '', ),
                play_ready = openapi_client.models.streaming_policy_play_ready_configuration.StreamingPolicyPlayReadyConfiguration(
                    custom_license_acquisition_url_template = '', 
                    play_ready_custom_attributes = '', ),
                widevine = openapi_client.models.streaming_policy_widevine_configuration.StreamingPolicyWidevineConfiguration(
                    custom_license_acquisition_url_template = '', )
            )
        else:
            return CbcsDrmConfiguration(
        )
        """

    def testCbcsDrmConfiguration(self):
        """Test CbcsDrmConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
