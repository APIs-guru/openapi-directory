# coding: utf-8

"""
    Azure Media Services

    This Swagger was generated by the API Framework.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.streaming_locator import StreamingLocator

class TestStreamingLocator(unittest.TestCase):
    """StreamingLocator unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StreamingLocator:
        """Test StreamingLocator
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StreamingLocator`
        """
        model = StreamingLocator()
        if include_optional:
            return StreamingLocator(
                properties = openapi_client.models.streaming_locator_properties.StreamingLocatorProperties(
                    alternative_media_id = '', 
                    asset_name = '', 
                    content_keys = [
                        openapi_client.models.streaming_locator_content_key.StreamingLocatorContentKey(
                            id = '', 
                            label = '', 
                            policy_name = '', 
                            tracks = [
                                openapi_client.models.track_selection.TrackSelection(
                                    track_selections = [
                                        openapi_client.models.track_property_condition.TrackPropertyCondition(
                                            operation = 'Unknown', 
                                            property = 'Unknown', 
                                            value = '', )
                                        ], )
                                ], 
                            type = 'CommonEncryptionCenc', 
                            value = '', )
                        ], 
                    created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    default_content_key_policy_name = '', 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    streaming_locator_id = '', 
                    streaming_policy_name = '', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return StreamingLocator(
        )
        """

    def testStreamingLocator(self):
        """Test StreamingLocator"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
