# coding: utf-8

"""
    iotHubClient

    Use this API to manage the IoT hubs in your Azure subscription.

    The version of the OpenAPI document: 2019-03-22
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_route_result import TestRouteResult

class TestTestRouteResult(unittest.TestCase):
    """TestRouteResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestRouteResult:
        """Test TestRouteResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestRouteResult`
        """
        model = TestRouteResult()
        if include_optional:
            return TestRouteResult(
                details = openapi_client.models.test_route_result_details.TestRouteResultDetails(
                    compilation_errors = [
                        openapi_client.models.route_compilation_error.RouteCompilationError(
                            location = openapi_client.models.route_error_range.RouteErrorRange(
                                end = openapi_client.models.route_error_position.RouteErrorPosition(
                                    column = 56, 
                                    line = 56, ), 
                                start = openapi_client.models.route_error_position.RouteErrorPosition(
                                    column = 56, 
                                    line = 56, ), ), 
                            message = '', 
                            severity = 'error', )
                        ], ),
                result = 'undefined'
            )
        else:
            return TestRouteResult(
        )
        """

    def testTestRouteResult(self):
        """Test TestRouteResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
