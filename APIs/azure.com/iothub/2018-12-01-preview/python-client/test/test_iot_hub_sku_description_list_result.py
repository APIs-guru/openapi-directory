# coding: utf-8

"""
    iotHubClient

    Use this API to manage the IoT hubs in your Azure subscription.

    The version of the OpenAPI document: 2018-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.iot_hub_sku_description_list_result import IotHubSkuDescriptionListResult

class TestIotHubSkuDescriptionListResult(unittest.TestCase):
    """IotHubSkuDescriptionListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IotHubSkuDescriptionListResult:
        """Test IotHubSkuDescriptionListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IotHubSkuDescriptionListResult`
        """
        model = IotHubSkuDescriptionListResult()
        if include_optional:
            return IotHubSkuDescriptionListResult(
                next_link = '',
                value = [
                    openapi_client.models.iot_hub_sku_description.IotHubSkuDescription(
                        capacity = openapi_client.models.iot_hub_capacity.IotHubCapacity(
                            default = 56, 
                            maximum = 56, 
                            minimum = 1, 
                            scale_type = 'Automatic', ), 
                        resource_type = '', 
                        sku = openapi_client.models.iot_hub_sku_info.IotHubSkuInfo(
                            name = 'F1', 
                            tier = 'Free', ), )
                    ]
            )
        else:
            return IotHubSkuDescriptionListResult(
        )
        """

    def testIotHubSkuDescriptionListResult(self):
        """Test IotHubSkuDescriptionListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
