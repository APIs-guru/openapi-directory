# coding: utf-8

"""
    iotHubClient

    Use this API to manage the IoT hubs in your Azure subscription.

    The version of the OpenAPI document: 2019-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_route_input import TestRouteInput

class TestTestRouteInput(unittest.TestCase):
    """TestRouteInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestRouteInput:
        """Test TestRouteInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestRouteInput`
        """
        model = TestRouteInput()
        if include_optional:
            return TestRouteInput(
                message = openapi_client.models.routing_message.RoutingMessage(
                    app_properties = {
                        'key' : ''
                        }, 
                    body = '', 
                    system_properties = {
                        'key' : ''
                        }, ),
                route = openapi_client.models.route_properties.RouteProperties(
                    condition = '', 
                    endpoint_names = [
                        ''
                        ], 
                    is_enabled = True, 
                    name = '26bUUGjjNSwg0_bs9ZayIMrKdgNvb6gvxmPb9GcsM61ate1', 
                    source = 'Invalid', ),
                twin = openapi_client.models.routing_twin.RoutingTwin(
                    properties = openapi_client.models.routing_twin_properties.RoutingTwin_properties(
                        desired = openapi_client.models.desired.desired(), 
                        reported = openapi_client.models.reported.reported(), ), 
                    tags = openapi_client.models.tags.tags(), )
            )
        else:
            return TestRouteInput(
                route = openapi_client.models.route_properties.RouteProperties(
                    condition = '', 
                    endpoint_names = [
                        ''
                        ], 
                    is_enabled = True, 
                    name = '26bUUGjjNSwg0_bs9ZayIMrKdgNvb6gvxmPb9GcsM61ate1', 
                    source = 'Invalid', ),
        )
        """

    def testTestRouteInput(self):
        """Test TestRouteInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
