# coding: utf-8

"""
    DnsManagementClient

    The DNS Management Client.

    The version of the OpenAPI document: 2018-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.record_set import RecordSet

class TestRecordSet(unittest.TestCase):
    """RecordSet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecordSet:
        """Test RecordSet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecordSet`
        """
        model = RecordSet()
        if include_optional:
            return RecordSet(
                etag = '',
                id = '',
                name = '',
                properties = openapi_client.models.record_set_properties.RecordSetProperties(
                    aaaa_records = [
                        openapi_client.models.aaaa_record.AaaaRecord(
                            ipv6_address = '', )
                        ], 
                    a_records = [
                        openapi_client.models.a_record.ARecord(
                            ipv4_address = '', )
                        ], 
                    cname_record = openapi_client.models.cname_record.CnameRecord(
                        cname = '', ), 
                    mx_records = [
                        openapi_client.models.mx_record.MxRecord(
                            exchange = '', 
                            preference = 56, )
                        ], 
                    ns_records = [
                        openapi_client.models.ns_record.NsRecord(
                            nsdname = '', )
                        ], 
                    ptr_records = [
                        openapi_client.models.ptr_record.PtrRecord(
                            ptrdname = '', )
                        ], 
                    soa_record = openapi_client.models.soa_record.SoaRecord(
                        email = '', 
                        expire_time = 56, 
                        host = '', 
                        minimum_ttl = 56, 
                        refresh_time = 56, 
                        retry_time = 56, 
                        serial_number = 56, ), 
                    srv_records = [
                        openapi_client.models.srv_record.SrvRecord(
                            port = 56, 
                            priority = 56, 
                            target = '', 
                            weight = 56, )
                        ], 
                    ttl = 56, 
                    txt_records = [
                        openapi_client.models.txt_record.TxtRecord(
                            value = [
                                ''
                                ], )
                        ], 
                    caa_records = [
                        openapi_client.models.caa_record.CaaRecord(
                            flags = 56, 
                            tag = '', )
                        ], 
                    fqdn = '', 
                    metadata = {
                        'key' : ''
                        }, 
                    provisioning_state = '', 
                    target_resource = openapi_client.models.sub_resource.SubResource(
                        id = '', ), ),
                type = ''
            )
        else:
            return RecordSet(
        )
        """

    def testRecordSet(self):
        """Test RecordSet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
