# coding: utf-8

"""
    StorSimple8000SeriesManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_appliance_configuration_list import CloudApplianceConfigurationList

class TestCloudApplianceConfigurationList(unittest.TestCase):
    """CloudApplianceConfigurationList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudApplianceConfigurationList:
        """Test CloudApplianceConfigurationList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudApplianceConfigurationList`
        """
        model = CloudApplianceConfigurationList()
        if include_optional:
            return CloudApplianceConfigurationList(
                value = [
                    openapi_client.models.cloud_appliance_configuration.CloudApplianceConfiguration(
                        properties = openapi_client.models.cloud_appliance_configuration_properties.CloudApplianceConfigurationProperties(
                            acs_configuration = openapi_client.models.acs_configuration.AcsConfiguration(
                                namespace = '', 
                                realm = '', 
                                service_url = '', ), 
                            cloud_platform = '', 
                            model_number = '', 
                            supported_regions = [
                                ''
                                ], 
                            supported_storage_account_types = [
                                ''
                                ], 
                            supported_vm_images = [
                                openapi_client.models.vm_image.VmImage(
                                    name = '', 
                                    offer = '', 
                                    publisher = '', 
                                    sku = '', 
                                    version = '', )
                                ], 
                            supported_vm_types = [
                                ''
                                ], ), )
                    ]
            )
        else:
            return CloudApplianceConfigurationList(
                value = [
                    openapi_client.models.cloud_appliance_configuration.CloudApplianceConfiguration(
                        properties = openapi_client.models.cloud_appliance_configuration_properties.CloudApplianceConfigurationProperties(
                            acs_configuration = openapi_client.models.acs_configuration.AcsConfiguration(
                                namespace = '', 
                                realm = '', 
                                service_url = '', ), 
                            cloud_platform = '', 
                            model_number = '', 
                            supported_regions = [
                                ''
                                ], 
                            supported_storage_account_types = [
                                ''
                                ], 
                            supported_vm_images = [
                                openapi_client.models.vm_image.VmImage(
                                    name = '', 
                                    offer = '', 
                                    publisher = '', 
                                    sku = '', 
                                    version = '', )
                                ], 
                            supported_vm_types = [
                                ''
                                ], ), )
                    ],
        )
        """

    def testCloudApplianceConfigurationList(self):
        """Test CloudApplianceConfigurationList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
