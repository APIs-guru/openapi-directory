# coding: utf-8

"""
    StorSimple8000SeriesManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.metric_list import MetricList

class TestMetricList(unittest.TestCase):
    """MetricList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MetricList:
        """Test MetricList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MetricList`
        """
        model = MetricList()
        if include_optional:
            return MetricList(
                value = [
                    openapi_client.models.metrics.Metrics(
                        dimensions = [
                            openapi_client.models.metric_dimension.MetricDimension(
                                name = '', 
                                value = '', )
                            ], 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = openapi_client.models.metric_name.MetricName(
                            localized_value = '', 
                            value = '', ), 
                        primary_aggregation = 'Average', 
                        resource_id = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_grain = '', 
                        type = '', 
                        unit = 'Bytes', 
                        values = [
                            openapi_client.models.metric_data.MetricData(
                                average = 1.337, 
                                count = 56, 
                                maximum = 1.337, 
                                minimum = 1.337, 
                                sum = 1.337, 
                                time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], )
                    ]
            )
        else:
            return MetricList(
        )
        """

    def testMetricList(self):
        """Test MetricList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
