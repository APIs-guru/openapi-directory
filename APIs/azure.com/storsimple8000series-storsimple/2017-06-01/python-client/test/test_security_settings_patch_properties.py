# coding: utf-8

"""
    StorSimple8000SeriesManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2017-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.security_settings_patch_properties import SecuritySettingsPatchProperties

class TestSecuritySettingsPatchProperties(unittest.TestCase):
    """SecuritySettingsPatchProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecuritySettingsPatchProperties:
        """Test SecuritySettingsPatchProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecuritySettingsPatchProperties`
        """
        model = SecuritySettingsPatchProperties()
        if include_optional:
            return SecuritySettingsPatchProperties(
                chap_settings = openapi_client.models.chap_settings.ChapSettings(
                    initiator_secret = openapi_client.models.asymmetric_encrypted_secret.AsymmetricEncryptedSecret(
                        encryption_algorithm = 'None', 
                        encryption_cert_thumbprint = '', 
                        value = '', ), 
                    initiator_user = '', 
                    target_secret = openapi_client.models.asymmetric_encrypted_secret.AsymmetricEncryptedSecret(
                        encryption_algorithm = 'None', 
                        encryption_cert_thumbprint = '', 
                        value = '', ), 
                    target_user = '', ),
                cloud_appliance_settings = openapi_client.models.cloud_appliance_settings.CloudApplianceSettings(
                    channel_integrity_key = openapi_client.models.asymmetric_encrypted_secret.AsymmetricEncryptedSecret(
                        encryption_algorithm = 'None', 
                        encryption_cert_thumbprint = '', 
                        value = '', ), 
                    service_data_encryption_key = openapi_client.models.asymmetric_encrypted_secret.AsymmetricEncryptedSecret(
                        encryption_algorithm = 'None', 
                        encryption_cert_thumbprint = '', 
                        value = '', ), ),
                device_admin_password = openapi_client.models.asymmetric_encrypted_secret.AsymmetricEncryptedSecret(
                    encryption_algorithm = 'None', 
                    encryption_cert_thumbprint = '', 
                    value = '', ),
                remote_management_settings = openapi_client.models.remote_management_settings_patch.RemoteManagementSettingsPatch(
                    remote_management_mode = 'Unknown', ),
                snapshot_password = openapi_client.models.asymmetric_encrypted_secret.AsymmetricEncryptedSecret(
                    encryption_algorithm = 'None', 
                    encryption_cert_thumbprint = '', 
                    value = '', )
            )
        else:
            return SecuritySettingsPatchProperties(
        )
        """

    def testSecuritySettingsPatchProperties(self):
        """Test SecuritySettingsPatchProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
