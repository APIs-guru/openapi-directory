# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2019-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alert_list import AlertList

class TestAlertList(unittest.TestCase):
    """AlertList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlertList:
        """Test AlertList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlertList`
        """
        model = AlertList()
        if include_optional:
            return AlertList(
                next_link = '',
                value = [
                    openapi_client.models.alert.Alert(
                        properties = openapi_client.models.alert_properties.AlertProperties(
                            action_taken = '', 
                            alert_display_name = '', 
                            alert_name = '', 
                            associated_resource = '', 
                            can_be_investigated = True, 
                            compromised_entity = '', 
                            confidence_reasons = [
                                openapi_client.models.alert_confidence_reason.AlertConfidenceReason(
                                    reason = '', 
                                    type = '', )
                                ], 
                            confidence_score = 0, 
                            correlation_key = '', 
                            description = '', 
                            detected_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            entities = [
                                { }
                                ], 
                            extended_properties = { }, 
                            instance_id = '', 
                            is_incident = True, 
                            remediation_steps = '', 
                            reported_severity = 'Informational', 
                            reported_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            state = '', 
                            subscription_id = '', 
                            system_source = '', 
                            vendor_name = '', 
                            workspace_arm_id = '', ), )
                    ]
            )
        else:
            return AlertList(
        )
        """

    def testAlertList(self):
        """Test AlertList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
