# coding: utf-8

"""
    Update Management

    APIs for managing software update configurations.

    The version of the OpenAPI document: 2017-05-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_configuration import UpdateConfiguration

class TestUpdateConfiguration(unittest.TestCase):
    """UpdateConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateConfiguration:
        """Test UpdateConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateConfiguration`
        """
        model = UpdateConfiguration()
        if include_optional:
            return UpdateConfiguration(
                azure_virtual_machines = [
                    ''
                    ],
                duration = '',
                linux = openapi_client.models.linux_properties.LinuxProperties(
                    excluded_package_name_masks = [
                        ''
                        ], 
                    included_package_classifications = 'Unclassified', 
                    included_package_name_masks = [
                        ''
                        ], 
                    reboot_setting = '', ),
                non_azure_computer_names = [
                    ''
                    ],
                operating_system = 'Windows',
                targets = openapi_client.models.target_properties.TargetProperties(
                    azure_queries = [
                        openapi_client.models.azure_query_properties.AzureQueryProperties(
                            locations = [
                                ''
                                ], 
                            scope = [
                                ''
                                ], 
                            tag_settings = openapi_client.models.tag_settings_properties.TagSettingsProperties(
                                filter_operator = 'All', 
                                tags = {
                                    'key' : [
                                        ''
                                        ]
                                    }, ), )
                        ], 
                    non_azure_queries = [
                        openapi_client.models.non_azure_query_properties.NonAzureQueryProperties(
                            function_alias = '', 
                            workspace_id = '', )
                        ], ),
                windows = openapi_client.models.windows_properties.WindowsProperties(
                    excluded_kb_numbers = [
                        ''
                        ], 
                    included_kb_numbers = [
                        ''
                        ], 
                    included_update_classifications = 'Unclassified', 
                    reboot_setting = '', )
            )
        else:
            return UpdateConfiguration(
                operating_system = 'Windows',
        )
        """

    def testUpdateConfiguration(self):
        """Test UpdateConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
