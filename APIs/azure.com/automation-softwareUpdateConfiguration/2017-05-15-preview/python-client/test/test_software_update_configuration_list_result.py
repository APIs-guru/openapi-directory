# coding: utf-8

"""
    Update Management

    APIs for managing software update configurations.

    The version of the OpenAPI document: 2017-05-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.software_update_configuration_list_result import SoftwareUpdateConfigurationListResult

class TestSoftwareUpdateConfigurationListResult(unittest.TestCase):
    """SoftwareUpdateConfigurationListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SoftwareUpdateConfigurationListResult:
        """Test SoftwareUpdateConfigurationListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SoftwareUpdateConfigurationListResult`
        """
        model = SoftwareUpdateConfigurationListResult()
        if include_optional:
            return SoftwareUpdateConfigurationListResult(
                value = [
                    openapi_client.models.software_update_configuration_collection_item.softwareUpdateConfigurationCollectionItem(
                        id = '', 
                        name = '', 
                        properties = openapi_client.models.software_update_configuration_collection_item_properties.softwareUpdateConfigurationCollectionItemProperties(
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            frequency = 'OneTime', 
                            last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            next_run = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            provisioning_state = '', 
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            update_configuration = openapi_client.models.collection_item_update_configuration.collectionItemUpdateConfiguration(
                                azure_virtual_machines = [
                                    ''
                                    ], 
                                duration = '', ), ), )
                    ]
            )
        else:
            return SoftwareUpdateConfigurationListResult(
        )
        """

    def testSoftwareUpdateConfigurationListResult(self):
        """Test SoftwareUpdateConfigurationListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
