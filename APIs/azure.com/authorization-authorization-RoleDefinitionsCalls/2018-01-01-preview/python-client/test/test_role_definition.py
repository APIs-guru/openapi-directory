# coding: utf-8

"""
    AuthorizationManagementClient

    Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations allow you to manage role definitions. A role definition describes the set of actions that can be performed on resources.

    The version of the OpenAPI document: 2018-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.role_definition import RoleDefinition

class TestRoleDefinition(unittest.TestCase):
    """RoleDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoleDefinition:
        """Test RoleDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoleDefinition`
        """
        model = RoleDefinition()
        if include_optional:
            return RoleDefinition(
                id = '',
                name = '',
                properties = openapi_client.models.role_definition_properties.RoleDefinitionProperties(
                    assignable_scopes = [
                        ''
                        ], 
                    description = '', 
                    permissions = [
                        openapi_client.models.permission.Permission(
                            actions = [
                                ''
                                ], 
                            data_actions = [
                                ''
                                ], 
                            not_actions = [
                                ''
                                ], 
                            not_data_actions = [
                                ''
                                ], )
                        ], 
                    role_name = '', 
                    type = '', ),
                type = ''
            )
        else:
            return RoleDefinition(
        )
        """

    def testRoleDefinition(self):
        """Test RoleDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
