# coding: utf-8

"""
    NetworkManagementClient

    The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_gateway_authentication_certificate_properties_format import ApplicationGatewayAuthenticationCertificatePropertiesFormat

class TestApplicationGatewayAuthenticationCertificatePropertiesFormat(unittest.TestCase):
    """ApplicationGatewayAuthenticationCertificatePropertiesFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationGatewayAuthenticationCertificatePropertiesFormat:
        """Test ApplicationGatewayAuthenticationCertificatePropertiesFormat
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationGatewayAuthenticationCertificatePropertiesFormat`
        """
        model = ApplicationGatewayAuthenticationCertificatePropertiesFormat()
        if include_optional:
            return ApplicationGatewayAuthenticationCertificatePropertiesFormat(
                data = '',
                provisioning_state = 'Succeeded'
            )
        else:
            return ApplicationGatewayAuthenticationCertificatePropertiesFormat(
        )
        """

    def testApplicationGatewayAuthenticationCertificatePropertiesFormat(self):
        """Test ApplicationGatewayAuthenticationCertificatePropertiesFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
