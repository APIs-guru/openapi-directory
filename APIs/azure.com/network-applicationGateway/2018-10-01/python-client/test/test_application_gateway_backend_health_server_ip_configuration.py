# coding: utf-8

"""
    NetworkManagementClient

    The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.

    The version of the OpenAPI document: 2018-10-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_gateway_backend_health_server_ip_configuration import ApplicationGatewayBackendHealthServerIpConfiguration

class TestApplicationGatewayBackendHealthServerIpConfiguration(unittest.TestCase):
    """ApplicationGatewayBackendHealthServerIpConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationGatewayBackendHealthServerIpConfiguration:
        """Test ApplicationGatewayBackendHealthServerIpConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationGatewayBackendHealthServerIpConfiguration`
        """
        model = ApplicationGatewayBackendHealthServerIpConfiguration()
        if include_optional:
            return ApplicationGatewayBackendHealthServerIpConfiguration(
                etag = '',
                name = '',
                properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties(
                    application_gateway_backend_address_pools = [
                        openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_gateway_backend_address_pools_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationGatewayBackendAddressPools_inner(
                            etag = '', 
                            name = '', 
                            type = '', )
                        ], 
                    application_security_groups = [
                        openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_security_groups_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationSecurityGroups_inner(
                            etag = '', )
                        ], 
                    load_balancer_backend_address_pools = [
                        openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_load_balancer_backend_address_pools_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_loadBalancerBackendAddressPools_inner(
                            etag = '', 
                            name = '', )
                        ], 
                    load_balancer_inbound_nat_rules = [
                        openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_load_balancer_inbound_nat_rules_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_loadBalancerInboundNatRules_inner(
                            etag = '', 
                            name = '', )
                        ], 
                    primary = True, 
                    private_ip_address = '', 
                    private_ip_address_version = 'IPv4', 
                    private_ip_allocation_method = 'Static', 
                    provisioning_state = '', 
                    public_ip_address = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress(
                        etag = '', 
                        sku = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address_sku.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress_sku(
                            name = 'Basic', ), 
                        zones = [
                            ''
                            ], ), 
                    subnet = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet(
                        etag = '', 
                        name = '', ), 
                    virtual_network_taps = [
                        openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_virtual_network_taps_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner(
                            etag = '', )
                        ], )
            )
        else:
            return ApplicationGatewayBackendHealthServerIpConfiguration(
        )
        """

    def testApplicationGatewayBackendHealthServerIpConfiguration(self):
        """Test ApplicationGatewayBackendHealthServerIpConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
