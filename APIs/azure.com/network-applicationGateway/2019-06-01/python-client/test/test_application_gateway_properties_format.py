# coding: utf-8

"""
    NetworkManagementClient

    The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_gateway_properties_format import ApplicationGatewayPropertiesFormat

class TestApplicationGatewayPropertiesFormat(unittest.TestCase):
    """ApplicationGatewayPropertiesFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationGatewayPropertiesFormat:
        """Test ApplicationGatewayPropertiesFormat
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationGatewayPropertiesFormat`
        """
        model = ApplicationGatewayPropertiesFormat()
        if include_optional:
            return ApplicationGatewayPropertiesFormat(
                authentication_certificates = [
                    openapi_client.models.application_gateway_authentication_certificate.ApplicationGatewayAuthenticationCertificate(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_authentication_certificate_properties_format.ApplicationGatewayAuthenticationCertificatePropertiesFormat(
                            data = '', 
                            provisioning_state = '', ), 
                        type = '', )
                    ],
                autoscale_configuration = openapi_client.models.application_gateway_autoscale_configuration.ApplicationGatewayAutoscaleConfiguration(
                    max_capacity = 2, 
                    min_capacity = 0, ),
                backend_address_pools = [
                    openapi_client.models.application_gateway_backend_address_pool.ApplicationGatewayBackendAddressPool(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_address_pool_properties_format.ApplicationGatewayBackendAddressPoolPropertiesFormat(
                            backend_addresses = [
                                openapi_client.models.application_gateway_backend_address.ApplicationGatewayBackendAddress(
                                    fqdn = '', 
                                    ip_address = '', )
                                ], 
                            backend_ip_configurations = [
                                None
                                ], 
                            provisioning_state = '', ), 
                        type = '', )
                    ],
                backend_http_settings_collection = [
                    openapi_client.models.application_gateway_backend_http_settings.ApplicationGatewayBackendHttpSettings(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_http_settings_properties_format.ApplicationGatewayBackendHttpSettingsPropertiesFormat(
                            affinity_cookie_name = '', 
                            authentication_certificates = [
                                None
                                ], 
                            connection_draining = openapi_client.models.application_gateway_connection_draining.ApplicationGatewayConnectionDraining(
                                drain_timeout_in_sec = 1, 
                                enabled = True, ), 
                            cookie_based_affinity = 'Enabled', 
                            host_name = '', 
                            path = '', 
                            pick_host_name_from_backend_address = True, 
                            port = 56, 
                            probe = None, 
                            probe_enabled = True, 
                            protocol = 'Http', 
                            provisioning_state = '', 
                            request_timeout = 56, 
                            trusted_root_certificates = [
                                None
                                ], ), 
                        type = '', )
                    ],
                custom_error_configurations = [
                    openapi_client.models.application_gateway_custom_error.ApplicationGatewayCustomError(
                        custom_error_page_url = '', 
                        status_code = 'HttpStatus403', )
                    ],
                enable_fips = True,
                enable_http2 = True,
                firewall_policy = openapi_client.models.application_gateway_path_rule_properties_format_rewrite_rule_set.ApplicationGatewayPathRulePropertiesFormat_rewriteRuleSet(
                    id = '', ),
                frontend_ip_configurations = [
                    openapi_client.models.application_gateway_frontend_ip_configuration.ApplicationGatewayFrontendIPConfiguration(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_frontend_ip_configuration_properties_format.ApplicationGatewayFrontendIPConfigurationPropertiesFormat(
                            private_ip_address = '', 
                            private_ip_allocation_method = 'Static', 
                            provisioning_state = '', 
                            public_ip_address = None, 
                            subnet = None, ), 
                        type = '', )
                    ],
                frontend_ports = [
                    openapi_client.models.application_gateway_frontend_port.ApplicationGatewayFrontendPort(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_frontend_port_properties_format.ApplicationGatewayFrontendPortPropertiesFormat(
                            port = 56, 
                            provisioning_state = '', ), 
                        type = '', )
                    ],
                gateway_ip_configurations = [
                    openapi_client.models.application_gateway_ip_configuration.ApplicationGatewayIPConfiguration(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_ip_configuration_properties_format.ApplicationGatewayIPConfigurationPropertiesFormat(
                            provisioning_state = '', 
                            subnet = None, ), 
                        type = '', )
                    ],
                http_listeners = [
                    openapi_client.models.application_gateway_http_listener.ApplicationGatewayHttpListener(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_http_listener_properties_format.ApplicationGatewayHttpListenerPropertiesFormat(
                            custom_error_configurations = [
                                openapi_client.models.application_gateway_custom_error.ApplicationGatewayCustomError(
                                    custom_error_page_url = '', 
                                    status_code = 'HttpStatus403', )
                                ], 
                            frontend_ip_configuration = None, 
                            frontend_port = None, 
                            host_name = '', 
                            protocol = 'Http', 
                            provisioning_state = '', 
                            require_server_name_indication = True, 
                            ssl_certificate = None, ), 
                        type = '', )
                    ],
                operational_state = 'Stopped',
                probes = [
                    openapi_client.models.application_gateway_probe.ApplicationGatewayProbe(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_probe_properties_format.ApplicationGatewayProbePropertiesFormat(
                            host = '', 
                            interval = 56, 
                            match = openapi_client.models.application_gateway_probe_health_response_match.ApplicationGatewayProbeHealthResponseMatch(
                                body = '', 
                                status_codes = [
                                    ''
                                    ], ), 
                            min_servers = 56, 
                            path = '', 
                            pick_host_name_from_backend_http_settings = True, 
                            port = 1, 
                            protocol = 'Http', 
                            provisioning_state = '', 
                            timeout = 56, 
                            unhealthy_threshold = 56, ), 
                        type = '', )
                    ],
                provisioning_state = '',
                redirect_configurations = [
                    openapi_client.models.application_gateway_redirect_configuration.ApplicationGatewayRedirectConfiguration(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_redirect_configuration_properties_format.ApplicationGatewayRedirectConfigurationPropertiesFormat(
                            include_path = True, 
                            include_query_string = True, 
                            path_rules = [
                                None
                                ], 
                            redirect_type = 'Permanent', 
                            request_routing_rules = [
                                None
                                ], 
                            target_listener = None, 
                            target_url = '', 
                            url_path_maps = [
                                None
                                ], ), 
                        type = '', )
                    ],
                request_routing_rules = [
                    openapi_client.models.application_gateway_request_routing_rule.ApplicationGatewayRequestRoutingRule(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_request_routing_rule_properties_format.ApplicationGatewayRequestRoutingRulePropertiesFormat(
                            backend_address_pool = None, 
                            backend_http_settings = None, 
                            http_listener = None, 
                            provisioning_state = '', 
                            redirect_configuration = None, 
                            rewrite_rule_set = None, 
                            rule_type = 'Basic', 
                            url_path_map = None, ), 
                        type = '', )
                    ],
                resource_guid = '',
                rewrite_rule_sets = [
                    openapi_client.models.application_gateway_rewrite_rule_set.ApplicationGatewayRewriteRuleSet(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_rewrite_rule_set_properties_format.ApplicationGatewayRewriteRuleSetPropertiesFormat(
                            provisioning_state = '', 
                            rewrite_rules = [
                                openapi_client.models.application_gateway_rewrite_rule.ApplicationGatewayRewriteRule(
                                    action_set = openapi_client.models.application_gateway_rewrite_rule_action_set.ApplicationGatewayRewriteRuleActionSet(
                                        request_header_configurations = [
                                            openapi_client.models.application_gateway_header_configuration.ApplicationGatewayHeaderConfiguration(
                                                header_name = '', 
                                                header_value = '', )
                                            ], 
                                        response_header_configurations = [
                                            openapi_client.models.application_gateway_header_configuration.ApplicationGatewayHeaderConfiguration(
                                                header_name = '', 
                                                header_value = '', )
                                            ], ), 
                                    conditions = [
                                        openapi_client.models.application_gateway_rewrite_rule_condition.ApplicationGatewayRewriteRuleCondition(
                                            ignore_case = True, 
                                            negate = True, 
                                            pattern = '', 
                                            variable = '', )
                                        ], 
                                    name = '', 
                                    rule_sequence = 56, )
                                ], ), )
                    ],
                sku = openapi_client.models.application_gateway_sku.ApplicationGatewaySku(
                    capacity = 56, 
                    name = 'Standard_Small', 
                    tier = 'Standard', ),
                ssl_certificates = [
                    openapi_client.models.application_gateway_ssl_certificate.ApplicationGatewaySslCertificate(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_ssl_certificate_properties_format.ApplicationGatewaySslCertificatePropertiesFormat(
                            data = '', 
                            key_vault_secret_id = '', 
                            password = '', 
                            provisioning_state = '', 
                            public_cert_data = '', ), 
                        type = '', )
                    ],
                ssl_policy = openapi_client.models.application_gateway_ssl_policy.ApplicationGatewaySslPolicy(
                    cipher_suites = [
                        'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384'
                        ], 
                    disabled_ssl_protocols = [
                        'TLSv1_0'
                        ], 
                    min_protocol_version = 'TLSv1_0', 
                    policy_name = 'AppGwSslPolicy20150501', 
                    policy_type = 'Predefined', ),
                trusted_root_certificates = [
                    openapi_client.models.application_gateway_trusted_root_certificate.ApplicationGatewayTrustedRootCertificate(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_trusted_root_certificate_properties_format.ApplicationGatewayTrustedRootCertificatePropertiesFormat(
                            data = '', 
                            key_vault_secret_id = '', 
                            provisioning_state = '', ), 
                        type = '', )
                    ],
                url_path_maps = [
                    openapi_client.models.application_gateway_url_path_map.ApplicationGatewayUrlPathMap(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_url_path_map_properties_format.ApplicationGatewayUrlPathMapPropertiesFormat(
                            default_backend_address_pool = None, 
                            default_backend_http_settings = None, 
                            default_redirect_configuration = None, 
                            default_rewrite_rule_set = None, 
                            path_rules = [
                                openapi_client.models.application_gateway_path_rule.ApplicationGatewayPathRule(
                                    etag = '', 
                                    name = '', 
                                    type = '', )
                                ], 
                            provisioning_state = '', ), 
                        type = '', )
                    ],
                web_application_firewall_configuration = openapi_client.models.application_gateway_web_application_firewall_configuration.ApplicationGatewayWebApplicationFirewallConfiguration(
                    disabled_rule_groups = [
                        openapi_client.models.application_gateway_firewall_disabled_rule_group.ApplicationGatewayFirewallDisabledRuleGroup(
                            rule_group_name = '', 
                            rules = [
                                56
                                ], )
                        ], 
                    enabled = True, 
                    exclusions = [
                        openapi_client.models.application_gateway_firewall_exclusion.ApplicationGatewayFirewallExclusion(
                            match_variable = '', 
                            selector = '', 
                            selector_match_operator = '', )
                        ], 
                    file_upload_limit_in_mb = 0, 
                    firewall_mode = 'Detection', 
                    max_request_body_size = 8, 
                    max_request_body_size_in_kb = 8, 
                    request_body_check = True, 
                    rule_set_type = '', 
                    rule_set_version = '', )
            )
        else:
            return ApplicationGatewayPropertiesFormat(
        )
        """

    def testApplicationGatewayPropertiesFormat(self):
        """Test ApplicationGatewayPropertiesFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
