# coding: utf-8

"""
    NetworkManagementClient

    The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class CipherSuitesEnum(str, Enum):
    """
    Ssl cipher suites enums.
    """

    """
    allowed enum values
    """
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384 = 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384'
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256 = 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256'
    TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA = 'TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA'
    TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA = 'TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA'
    TLS_DHE_RSA_WITH_AES_256_GCM_SHA384 = 'TLS_DHE_RSA_WITH_AES_256_GCM_SHA384'
    TLS_DHE_RSA_WITH_AES_128_GCM_SHA256 = 'TLS_DHE_RSA_WITH_AES_128_GCM_SHA256'
    TLS_DHE_RSA_WITH_AES_256_CBC_SHA = 'TLS_DHE_RSA_WITH_AES_256_CBC_SHA'
    TLS_DHE_RSA_WITH_AES_128_CBC_SHA = 'TLS_DHE_RSA_WITH_AES_128_CBC_SHA'
    TLS_RSA_WITH_AES_256_GCM_SHA384 = 'TLS_RSA_WITH_AES_256_GCM_SHA384'
    TLS_RSA_WITH_AES_128_GCM_SHA256 = 'TLS_RSA_WITH_AES_128_GCM_SHA256'
    TLS_RSA_WITH_AES_256_CBC_SHA256 = 'TLS_RSA_WITH_AES_256_CBC_SHA256'
    TLS_RSA_WITH_AES_128_CBC_SHA256 = 'TLS_RSA_WITH_AES_128_CBC_SHA256'
    TLS_RSA_WITH_AES_256_CBC_SHA = 'TLS_RSA_WITH_AES_256_CBC_SHA'
    TLS_RSA_WITH_AES_128_CBC_SHA = 'TLS_RSA_WITH_AES_128_CBC_SHA'
    TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 = 'TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384'
    TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 = 'TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256'
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384 = 'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384'
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256 = 'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256'
    TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA = 'TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA'
    TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA = 'TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA'
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA256 = 'TLS_DHE_DSS_WITH_AES_256_CBC_SHA256'
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA256 = 'TLS_DHE_DSS_WITH_AES_128_CBC_SHA256'
    TLS_DHE_DSS_WITH_AES_256_CBC_SHA = 'TLS_DHE_DSS_WITH_AES_256_CBC_SHA'
    TLS_DHE_DSS_WITH_AES_128_CBC_SHA = 'TLS_DHE_DSS_WITH_AES_128_CBC_SHA'
    TLS_RSA_WITH_3_DES_EDE_CBC_SHA = 'TLS_RSA_WITH_3DES_EDE_CBC_SHA'
    TLS_DHE_DSS_WITH_3_DES_EDE_CBC_SHA = 'TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA'
    TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 = 'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256'
    TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 = 'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of CipherSuitesEnum from a JSON string"""
        return cls(json.loads(json_str))


