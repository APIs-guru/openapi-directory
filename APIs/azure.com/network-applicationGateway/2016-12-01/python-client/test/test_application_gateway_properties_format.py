# coding: utf-8

"""
    NetworkManagementClient

    The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.

    The version of the OpenAPI document: 2016-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_gateway_properties_format import ApplicationGatewayPropertiesFormat

class TestApplicationGatewayPropertiesFormat(unittest.TestCase):
    """ApplicationGatewayPropertiesFormat unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationGatewayPropertiesFormat:
        """Test ApplicationGatewayPropertiesFormat
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationGatewayPropertiesFormat`
        """
        model = ApplicationGatewayPropertiesFormat()
        if include_optional:
            return ApplicationGatewayPropertiesFormat(
                authentication_certificates = [
                    openapi_client.models.application_gateway_authentication_certificate.ApplicationGatewayAuthenticationCertificate(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_authentication_certificate_properties_format.ApplicationGatewayAuthenticationCertificatePropertiesFormat(
                            data = '', 
                            provisioning_state = '', ), )
                    ],
                backend_address_pools = [
                    openapi_client.models.application_gateway_backend_address_pool.ApplicationGatewayBackendAddressPool(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_address_pool_properties_format.ApplicationGatewayBackendAddressPoolPropertiesFormat(
                            backend_addresses = [
                                openapi_client.models.application_gateway_backend_address.ApplicationGatewayBackendAddress(
                                    fqdn = '', 
                                    ip_address = '', )
                                ], 
                            backend_ip_configurations = [
                                openapi_client.models.application_gateway_backend_address_pool_properties_format_backend_ip_configurations_inner.ApplicationGatewayBackendAddressPoolPropertiesFormat_backendIPConfigurations_inner(
                                    etag = '', 
                                    name = '', )
                                ], 
                            provisioning_state = '', ), )
                    ],
                backend_http_settings_collection = [
                    openapi_client.models.application_gateway_backend_http_settings.ApplicationGatewayBackendHttpSettings(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_http_settings_properties_format.ApplicationGatewayBackendHttpSettingsPropertiesFormat(
                            authentication_certificates = [
                                None
                                ], 
                            connection_draining = openapi_client.models.application_gateway_connection_draining.ApplicationGatewayConnectionDraining(
                                drain_timeout_in_sec = 1, 
                                enabled = True, ), 
                            cookie_based_affinity = 'Enabled', 
                            port = 56, 
                            probe = None, 
                            protocol = 'Http', 
                            provisioning_state = '', 
                            request_timeout = 56, ), )
                    ],
                frontend_ip_configurations = [
                    openapi_client.models.application_gateway_frontend_ip_configuration.ApplicationGatewayFrontendIPConfiguration(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_frontend_ip_configuration_properties_format.ApplicationGatewayFrontendIPConfigurationPropertiesFormat(
                            private_ip_address = '', 
                            private_ip_allocation_method = 'Static', 
                            provisioning_state = '', 
                            public_ip_address = None, 
                            subnet = None, ), )
                    ],
                frontend_ports = [
                    openapi_client.models.application_gateway_frontend_port.ApplicationGatewayFrontendPort(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_frontend_port_properties_format.ApplicationGatewayFrontendPortPropertiesFormat(
                            port = 56, 
                            provisioning_state = '', ), )
                    ],
                gateway_ip_configurations = [
                    openapi_client.models.application_gateway_ip_configuration.ApplicationGatewayIPConfiguration(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_ip_configuration_properties_format.ApplicationGatewayIPConfigurationPropertiesFormat(
                            provisioning_state = '', 
                            subnet = None, ), )
                    ],
                http_listeners = [
                    openapi_client.models.application_gateway_http_listener.ApplicationGatewayHttpListener(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_http_listener_properties_format.ApplicationGatewayHttpListenerPropertiesFormat(
                            frontend_ip_configuration = None, 
                            frontend_port = openapi_client.models.application_gateway_http_listener_properties_format_frontend_port.ApplicationGatewayHttpListenerPropertiesFormat_frontendPort(
                                id = '', ), 
                            host_name = '', 
                            protocol = 'Http', 
                            provisioning_state = '', 
                            require_server_name_indication = True, 
                            ssl_certificate = None, ), )
                    ],
                operational_state = 'Stopped',
                probes = [
                    openapi_client.models.application_gateway_probe.ApplicationGatewayProbe(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_probe_properties_format.ApplicationGatewayProbePropertiesFormat(
                            host = '', 
                            interval = 56, 
                            path = '', 
                            protocol = 'Http', 
                            provisioning_state = '', 
                            timeout = 56, 
                            unhealthy_threshold = 56, ), )
                    ],
                provisioning_state = '',
                request_routing_rules = [
                    openapi_client.models.application_gateway_request_routing_rule.ApplicationGatewayRequestRoutingRule(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_request_routing_rule_properties_format.ApplicationGatewayRequestRoutingRulePropertiesFormat(
                            backend_address_pool = None, 
                            backend_http_settings = None, 
                            http_listener = None, 
                            provisioning_state = '', 
                            rule_type = 'Basic', 
                            url_path_map = None, ), )
                    ],
                resource_guid = '',
                sku = openapi_client.models.application_gateway_sku.ApplicationGatewaySku(
                    capacity = 56, 
                    name = 'Standard_Small', 
                    tier = 'Standard', ),
                ssl_certificates = [
                    openapi_client.models.application_gateway_ssl_certificate.ApplicationGatewaySslCertificate(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_ssl_certificate_properties_format.ApplicationGatewaySslCertificatePropertiesFormat(
                            data = '', 
                            password = '', 
                            provisioning_state = '', 
                            public_cert_data = '', ), )
                    ],
                ssl_policy = openapi_client.models.application_gateway_ssl_policy.ApplicationGatewaySslPolicy(
                    disabled_ssl_protocols = [
                        'TLSv1_0'
                        ], ),
                url_path_maps = [
                    openapi_client.models.application_gateway_url_path_map.ApplicationGatewayUrlPathMap(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_url_path_map_properties_format.ApplicationGatewayUrlPathMapPropertiesFormat(
                            default_backend_address_pool = None, 
                            default_backend_http_settings = None, 
                            path_rules = [
                                openapi_client.models.application_gateway_path_rule.ApplicationGatewayPathRule(
                                    etag = '', 
                                    name = '', )
                                ], 
                            provisioning_state = '', ), )
                    ],
                web_application_firewall_configuration = openapi_client.models.application_gateway_web_application_firewall_configuration.ApplicationGatewayWebApplicationFirewallConfiguration(
                    enabled = True, 
                    firewall_mode = 'Detection', )
            )
        else:
            return ApplicationGatewayPropertiesFormat(
        )
        """

    def testApplicationGatewayPropertiesFormat(self):
        """Test ApplicationGatewayPropertiesFormat"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
