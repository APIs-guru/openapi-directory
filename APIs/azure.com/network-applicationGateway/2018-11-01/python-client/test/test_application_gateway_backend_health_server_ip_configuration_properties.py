# coding: utf-8

"""
    NetworkManagementClient

    The Microsoft Azure Network management API provides a RESTful set of web services that interact with Microsoft Azure Networks service to manage your network resources. The API has entities that capture the relationship between an end user and the Microsoft Azure Networks service.

    The version of the OpenAPI document: 2018-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties import ApplicationGatewayBackendHealthServerIpConfigurationProperties

class TestApplicationGatewayBackendHealthServerIpConfigurationProperties(unittest.TestCase):
    """ApplicationGatewayBackendHealthServerIpConfigurationProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationGatewayBackendHealthServerIpConfigurationProperties:
        """Test ApplicationGatewayBackendHealthServerIpConfigurationProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationGatewayBackendHealthServerIpConfigurationProperties`
        """
        model = ApplicationGatewayBackendHealthServerIpConfigurationProperties()
        if include_optional:
            return ApplicationGatewayBackendHealthServerIpConfigurationProperties(
                application_gateway_backend_address_pools = [
                    openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_gateway_backend_address_pools_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationGatewayBackendAddressPools_inner(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_gateway_backend_address_pools_inner_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationGatewayBackendAddressPools_inner_properties(
                            backend_addresses = [
                                openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_gateway_backend_address_pools_inner_properties_backend_addresses_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationGatewayBackendAddressPools_inner_properties_backendAddresses_inner(
                                    fqdn = '', 
                                    ip_address = '', )
                                ], 
                            backend_ip_configurations = [
                                None
                                ], 
                            provisioning_state = '', ), 
                        type = '', )
                    ],
                application_security_groups = [
                    openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_security_groups_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationSecurityGroups_inner(
                        etag = '', 
                        properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_application_security_groups_inner_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_applicationSecurityGroups_inner_properties(
                            provisioning_state = '', 
                            resource_guid = '', ), )
                    ],
                load_balancer_backend_address_pools = [
                    openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_load_balancer_backend_address_pools_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_loadBalancerBackendAddressPools_inner(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_load_balancer_backend_address_pools_inner_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_loadBalancerBackendAddressPools_inner_properties(
                            backend_ip_configurations = [
                                None
                                ], 
                            load_balancing_rules = [
                                None
                                ], 
                            outbound_rule = None, 
                            outbound_rules = [
                                None
                                ], 
                            provisioning_state = '', ), )
                    ],
                load_balancer_inbound_nat_rules = [
                    openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_load_balancer_inbound_nat_rules_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_loadBalancerInboundNatRules_inner(
                        etag = '', 
                        name = '', 
                        properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_load_balancer_inbound_nat_rules_inner_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_loadBalancerInboundNatRules_inner_properties(
                            backend_ip_configuration = None, 
                            backend_port = 56, 
                            enable_floating_ip = True, 
                            enable_tcp_reset = True, 
                            frontend_ip_configuration = None, 
                            frontend_port = 56, 
                            idle_timeout_in_minutes = 56, 
                            protocol = 'Udp', 
                            provisioning_state = '', ), )
                    ],
                primary = True,
                private_ip_address = '',
                private_ip_address_version = 'IPv4',
                private_ip_allocation_method = 'Static',
                provisioning_state = '',
                public_ip_address = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress(
                    etag = '', 
                    properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress_properties(
                        ddos_settings = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address_properties_ddos_settings.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress_properties_ddosSettings(
                            ddos_custom_policy = None, 
                            protection_coverage = 'Basic', ), 
                        dns_settings = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address_properties_dns_settings.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress_properties_dnsSettings(
                            domain_name_label = '', 
                            fqdn = '', 
                            reverse_fqdn = '', ), 
                        idle_timeout_in_minutes = 56, 
                        ip_address = '', 
                        ip_configuration = None, 
                        ip_tags = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address_properties_ip_tags_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress_properties_ipTags_inner(
                                ip_tag_type = '', 
                                tag = '', )
                            ], 
                        provisioning_state = '', 
                        public_ip_address_version = 'IPv4', 
                        public_ip_allocation_method = 'Static', 
                        public_ip_prefix = None, 
                        resource_guid = '', ), 
                    sku = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_public_ip_address_sku.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_publicIPAddress_sku(
                        name = 'Basic', ), 
                    zones = [
                        ''
                        ], ),
                subnet = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet(
                    etag = '', 
                    name = '', 
                    properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties(
                        address_prefix = '', 
                        address_prefixes = [
                            ''
                            ], 
                        delegations = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_delegations_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_delegations_inner(
                                etag = '', 
                                name = '', )
                            ], 
                        interface_endpoints = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_interface_endpoints_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_interfaceEndpoints_inner(
                                etag = '', )
                            ], 
                        ip_configuration_profiles = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_ip_configuration_profiles_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_ipConfigurationProfiles_inner(
                                etag = '', 
                                name = '', 
                                type = '', )
                            ], 
                        ip_configurations = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_ip_configurations_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_ipConfigurations_inner(
                                etag = '', 
                                name = '', )
                            ], 
                        network_security_group = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_network_security_group.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup(
                            etag = '', ), 
                        provisioning_state = '', 
                        purpose = '', 
                        resource_navigation_links = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_resource_navigation_links_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_resourceNavigationLinks_inner(
                                etag = '', 
                                name = '', )
                            ], 
                        route_table = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_route_table.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_routeTable(
                            etag = '', ), 
                        service_association_links = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_service_association_links_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_serviceAssociationLinks_inner(
                                etag = '', 
                                name = '', )
                            ], 
                        service_endpoint_policies = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_service_endpoint_policies_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_serviceEndpointPolicies_inner(
                                etag = '', )
                            ], 
                        service_endpoints = [
                            openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_service_endpoints_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_serviceEndpoints_inner(
                                locations = [
                                    ''
                                    ], 
                                provisioning_state = '', 
                                service = '', )
                            ], ), ),
                virtual_network_taps = [
                    openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_virtual_network_taps_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner(
                        etag = '', 
                        properties = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_virtual_network_taps_inner_properties.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties(
                            destination_load_balancer_front_end_ip_configuration = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_virtual_network_taps_inner_properties_destination_load_balancer_front_end_ip_configuration.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_virtualNetworkTaps_inner_properties_destinationLoadBalancerFrontEndIPConfiguration(
                                etag = '', 
                                name = '', 
                                zones = [
                                    ''
                                    ], ), 
                            destination_network_interface_ip_configuration = openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_network_security_group_properties_network_interfaces_inner_properties_ip_configurations_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_ipConfigurations_inner(
                                etag = '', 
                                name = '', ), 
                            destination_port = 56, 
                            network_interface_tap_configurations = [
                                openapi_client.models.application_gateway_backend_health_server_ip_configuration_properties_subnet_properties_network_security_group_properties_network_interfaces_inner_properties_tap_configurations_inner.ApplicationGatewayBackendHealthServer_ipConfiguration_properties_subnet_properties_networkSecurityGroup_properties_networkInterfaces_inner_properties_tapConfigurations_inner(
                                    etag = '', 
                                    name = '', 
                                    type = '', )
                                ], 
                            provisioning_state = '', 
                            resource_guid = '', ), )
                    ]
            )
        else:
            return ApplicationGatewayBackendHealthServerIpConfigurationProperties(
        )
        """

    def testApplicationGatewayBackendHealthServerIpConfigurationProperties(self):
        """Test ApplicationGatewayBackendHealthServerIpConfigurationProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
