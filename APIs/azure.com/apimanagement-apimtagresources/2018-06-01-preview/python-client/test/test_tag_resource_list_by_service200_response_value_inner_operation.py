# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.

    The version of the OpenAPI document: 2018-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tag_resource_list_by_service200_response_value_inner_operation import TagResourceListByService200ResponseValueInnerOperation

class TestTagResourceListByService200ResponseValueInnerOperation(unittest.TestCase):
    """TagResourceListByService200ResponseValueInnerOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TagResourceListByService200ResponseValueInnerOperation:
        """Test TagResourceListByService200ResponseValueInnerOperation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TagResourceListByService200ResponseValueInnerOperation`
        """
        model = TagResourceListByService200ResponseValueInnerOperation()
        if include_optional:
            return TagResourceListByService200ResponseValueInnerOperation(
                api_name = '',
                api_revision = '',
                api_version = '',
                description = '',
                id = '',
                method = '',
                name = '',
                url_template = ''
            )
        else:
            return TagResourceListByService200ResponseValueInnerOperation(
        )
        """

    def testTagResourceListByService200ResponseValueInnerOperation(self):
        """Test TagResourceListByService200ResponseValueInnerOperation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
