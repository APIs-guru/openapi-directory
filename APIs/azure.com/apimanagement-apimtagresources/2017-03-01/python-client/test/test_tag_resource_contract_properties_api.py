# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for querying APIs. Operations and Products by tags in your Azure API Management deployment.

    The version of the OpenAPI document: 2017-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tag_resource_contract_properties_api import TagResourceContractPropertiesApi

class TestTagResourceContractPropertiesApi(unittest.TestCase):
    """TagResourceContractPropertiesApi unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TagResourceContractPropertiesApi:
        """Test TagResourceContractPropertiesApi
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TagResourceContractPropertiesApi`
        """
        model = TagResourceContractPropertiesApi()
        if include_optional:
            return TagResourceContractPropertiesApi(
                properties = openapi_client.models.tag_resource_contract_properties_api_properties.TagResourceContractProperties_api_properties(
                    api_version_set = openapi_client.models.tag_resource_contract_properties_api_properties_api_version_set.TagResourceContractProperties_api_properties_apiVersionSet(), 
                    display_name = '0', 
                    path = '', 
                    protocols = [
                        'http'
                        ], 
                    service_url = '0', )
            )
        else:
            return TagResourceContractPropertiesApi(
        )
        """

    def testTagResourceContractPropertiesApi(self):
        """Test TagResourceContractPropertiesApi"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
