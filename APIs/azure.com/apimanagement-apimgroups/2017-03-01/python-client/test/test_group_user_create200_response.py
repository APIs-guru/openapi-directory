# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Group entity in your Azure API Management deployment. Groups are used to manage the visibility of products to developers. Each API Management service instance comes with the following immutable system groups whose membership is automatically managed by API Management.  - **Administrators** - Azure subscription administrators are members of this group. - **Developers** - Authenticated developer portal users fall into this group. - **Guests** - Unauthenticated developer portal users are placed into this group. In addition to these system groups, administrators can create custom groups or [leverage external groups in associated Azure Active Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group). Custom and external groups can be used alongside system groups in giving developers visibility and access to API products. For example, you could create one custom group for developers affiliated with a specific partner organization and allow them access to the APIs from a product containing relevant APIs only. A user can be a member of more than one group.

    The version of the OpenAPI document: 2017-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.group_user_create200_response import GroupUserCreate200Response

class TestGroupUserCreate200Response(unittest.TestCase):
    """GroupUserCreate200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GroupUserCreate200Response:
        """Test GroupUserCreate200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GroupUserCreate200Response`
        """
        model = GroupUserCreate200Response()
        if include_optional:
            return GroupUserCreate200Response(
                id = '',
                email = '',
                first_name = '',
                groups = [
                    openapi_client.models.group_user_create_200_response_all_of_groups_inner.GroupUser_Create_200_response_allOf_groups_inner(
                        id = '', )
                    ],
                last_name = '',
                registration_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                identities = [
                    openapi_client.models.group_user_create_200_response_all_of_all_of_identities_inner.GroupUser_Create_200_response_allOf_allOf_identities_inner(
                        id = '', 
                        provider = '', )
                    ],
                note = '',
                state = 'active'
            )
        else:
            return GroupUserCreate200Response(
        )
        """

    def testGroupUserCreate200Response(self):
        """Test GroupUserCreate200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
