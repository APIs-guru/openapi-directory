# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for performing operations on Group entity in your Azure API Management deployment. Groups are used to manage the visibility of products to developers. Each API Management service instance comes with the following immutable system groups whose membership is automatically managed by API Management.  - **Administrators** - Azure subscription administrators are members of this group. - **Developers** - Authenticated developer portal users fall into this group. - **Guests** - Unauthenticated developer portal users are placed into this group. In addition to these system groups, administrators can create custom groups or [leverage external groups in associated Azure Active Directory tenants](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-aad#how-to-add-an-external-azure-active-directory-group). Custom and external groups can be used alongside system groups in giving developers visibility and access to API products. For example, you could create one custom group for developers affiliated with a specific partner organization and allow them access to the APIs from a product containing relevant APIs only. A user can be a member of more than one group.

    The version of the OpenAPI document: 2019-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.group_api import GroupApi


class TestGroupApi(unittest.TestCase):
    """GroupApi unit test stubs"""

    def setUp(self) -> None:
        self.api = GroupApi()

    def tearDown(self) -> None:
        pass

    def test_group_create_or_update(self) -> None:
        """Test case for group_create_or_update

        """
        pass

    def test_group_delete(self) -> None:
        """Test case for group_delete

        """
        pass

    def test_group_get(self) -> None:
        """Test case for group_get

        """
        pass

    def test_group_get_entity_tag(self) -> None:
        """Test case for group_get_entity_tag

        """
        pass

    def test_group_list_by_service(self) -> None:
        """Test case for group_list_by_service

        """
        pass

    def test_group_update(self) -> None:
        """Test case for group_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
