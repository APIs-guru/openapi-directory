# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cassandra_table_get_properties_resource import CassandraTableGetPropertiesResource

class TestCassandraTableGetPropertiesResource(unittest.TestCase):
    """CassandraTableGetPropertiesResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CassandraTableGetPropertiesResource:
        """Test CassandraTableGetPropertiesResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CassandraTableGetPropertiesResource`
        """
        model = CassandraTableGetPropertiesResource()
        if include_optional:
            return CassandraTableGetPropertiesResource(
                default_ttl = 56,
                id = '',
                var_schema = openapi_client.models.cassandra_schema.CassandraSchema(
                    cluster_keys = [
                        openapi_client.models.cluster_key.ClusterKey(
                            name = '', 
                            order_by = '', )
                        ], 
                    columns = [
                        openapi_client.models.column.Column(
                            name = '', 
                            type = '', )
                        ], 
                    partition_keys = [
                        openapi_client.models.cassandra_partition_key.CassandraPartitionKey(
                            name = '', )
                        ], ),
                etag = '',
                rid = '',
                ts = openapi_client.models._ts._ts()
            )
        else:
            return CassandraTableGetPropertiesResource(
                id = '',
        )
        """

    def testCassandraTableGetPropertiesResource(self):
        """Test CassandraTableGetPropertiesResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
