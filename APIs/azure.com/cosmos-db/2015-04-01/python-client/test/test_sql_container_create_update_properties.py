# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2015-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sql_container_create_update_properties import SqlContainerCreateUpdateProperties

class TestSqlContainerCreateUpdateProperties(unittest.TestCase):
    """SqlContainerCreateUpdateProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SqlContainerCreateUpdateProperties:
        """Test SqlContainerCreateUpdateProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SqlContainerCreateUpdateProperties`
        """
        model = SqlContainerCreateUpdateProperties()
        if include_optional:
            return SqlContainerCreateUpdateProperties(
                options = {
                    'key' : ''
                    },
                resource = openapi_client.models.sql_container_resource.SqlContainerResource(
                    conflict_resolution_policy = openapi_client.models.conflict_resolution_policy.ConflictResolutionPolicy(
                        conflict_resolution_path = '', 
                        conflict_resolution_procedure = '', 
                        mode = 'LastWriterWins', ), 
                    default_ttl = 56, 
                    id = '', 
                    indexing_policy = openapi_client.models.indexing_policy.IndexingPolicy(
                        automatic = True, 
                        excluded_paths = [
                            openapi_client.models.excluded_path.ExcludedPath(
                                path = '', )
                            ], 
                        included_paths = [
                            openapi_client.models.included_path.IncludedPath(
                                indexes = [
                                    openapi_client.models.indexes.Indexes(
                                        data_type = 'String', 
                                        kind = 'Hash', 
                                        precision = 56, )
                                    ], 
                                path = '', )
                            ], 
                        indexing_mode = 'Consistent', ), 
                    partition_key = openapi_client.models.container_partition_key.ContainerPartitionKey(
                        kind = 'Hash', 
                        paths = [
                            ''
                            ], ), 
                    unique_key_policy = openapi_client.models.unique_key_policy.UniqueKeyPolicy(
                        unique_keys = [
                            openapi_client.models.unique_key.UniqueKey()
                            ], ), )
            )
        else:
            return SqlContainerCreateUpdateProperties(
                options = {
                    'key' : ''
                    },
                resource = openapi_client.models.sql_container_resource.SqlContainerResource(
                    conflict_resolution_policy = openapi_client.models.conflict_resolution_policy.ConflictResolutionPolicy(
                        conflict_resolution_path = '', 
                        conflict_resolution_procedure = '', 
                        mode = 'LastWriterWins', ), 
                    default_ttl = 56, 
                    id = '', 
                    indexing_policy = openapi_client.models.indexing_policy.IndexingPolicy(
                        automatic = True, 
                        excluded_paths = [
                            openapi_client.models.excluded_path.ExcludedPath(
                                path = '', )
                            ], 
                        included_paths = [
                            openapi_client.models.included_path.IncludedPath(
                                indexes = [
                                    openapi_client.models.indexes.Indexes(
                                        data_type = 'String', 
                                        kind = 'Hash', 
                                        precision = 56, )
                                    ], 
                                path = '', )
                            ], 
                        indexing_mode = 'Consistent', ), 
                    partition_key = openapi_client.models.container_partition_key.ContainerPartitionKey(
                        kind = 'Hash', 
                        paths = [
                            ''
                            ], ), 
                    unique_key_policy = openapi_client.models.unique_key_policy.UniqueKeyPolicy(
                        unique_keys = [
                            openapi_client.models.unique_key.UniqueKey()
                            ], ), ),
        )
        """

    def testSqlContainerCreateUpdateProperties(self):
        """Test SqlContainerCreateUpdateProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
