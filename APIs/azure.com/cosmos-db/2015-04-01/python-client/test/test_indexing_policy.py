# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2015-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.indexing_policy import IndexingPolicy

class TestIndexingPolicy(unittest.TestCase):
    """IndexingPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IndexingPolicy:
        """Test IndexingPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IndexingPolicy`
        """
        model = IndexingPolicy()
        if include_optional:
            return IndexingPolicy(
                automatic = True,
                excluded_paths = [
                    openapi_client.models.excluded_path.ExcludedPath(
                        path = '', )
                    ],
                included_paths = [
                    openapi_client.models.included_path.IncludedPath(
                        indexes = [
                            openapi_client.models.indexes.Indexes(
                                data_type = 'String', 
                                kind = 'Hash', 
                                precision = 56, )
                            ], 
                        path = '', )
                    ],
                indexing_mode = 'Consistent'
            )
        else:
            return IndexingPolicy(
        )
        """

    def testIndexingPolicy(self):
        """Test IndexingPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
