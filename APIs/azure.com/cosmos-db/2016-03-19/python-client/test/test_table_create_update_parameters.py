# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2016-03-19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.table_create_update_parameters import TableCreateUpdateParameters

class TestTableCreateUpdateParameters(unittest.TestCase):
    """TableCreateUpdateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TableCreateUpdateParameters:
        """Test TableCreateUpdateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TableCreateUpdateParameters`
        """
        model = TableCreateUpdateParameters()
        if include_optional:
            return TableCreateUpdateParameters(
                properties = openapi_client.models.table_create_update_properties.TableCreateUpdateProperties(
                    options = {
                        'key' : ''
                        }, 
                    resource = openapi_client.models.table_resource.TableResource(
                        id = '', ), )
            )
        else:
            return TableCreateUpdateParameters(
                properties = openapi_client.models.table_create_update_properties.TableCreateUpdateProperties(
                    options = {
                        'key' : ''
                        }, 
                    resource = openapi_client.models.table_resource.TableResource(
                        id = '', ), ),
        )
        """

    def testTableCreateUpdateParameters(self):
        """Test TableCreateUpdateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
