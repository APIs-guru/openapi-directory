# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2016-03-19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.percentile_metric_list_result import PercentileMetricListResult

class TestPercentileMetricListResult(unittest.TestCase):
    """PercentileMetricListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PercentileMetricListResult:
        """Test PercentileMetricListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PercentileMetricListResult`
        """
        model = PercentileMetricListResult()
        if include_optional:
            return PercentileMetricListResult(
                value = [
                    openapi_client.models.percentile_metric.PercentileMetric(
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        metric_values = [
                            openapi_client.models.percentile_metric_value.PercentileMetricValue(
                                p10 = 1.337, 
                                p25 = 1.337, 
                                p50 = 1.337, 
                                p75 = 1.337, 
                                p90 = 1.337, 
                                p95 = 1.337, 
                                p99 = 1.337, )
                            ], 
                        name = openapi_client.models.metric_name.MetricName(
                            localized_value = '', 
                            value = '', ), 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_grain = '', 
                        unit = 'Count', )
                    ]
            )
        else:
            return PercentileMetricListResult(
        )
        """

    def testPercentileMetricListResult(self):
        """Test PercentileMetricListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
