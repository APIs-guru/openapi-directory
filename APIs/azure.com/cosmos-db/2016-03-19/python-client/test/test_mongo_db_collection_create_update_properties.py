# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2016-03-19
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mongo_db_collection_create_update_properties import MongoDBCollectionCreateUpdateProperties

class TestMongoDBCollectionCreateUpdateProperties(unittest.TestCase):
    """MongoDBCollectionCreateUpdateProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MongoDBCollectionCreateUpdateProperties:
        """Test MongoDBCollectionCreateUpdateProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MongoDBCollectionCreateUpdateProperties`
        """
        model = MongoDBCollectionCreateUpdateProperties()
        if include_optional:
            return MongoDBCollectionCreateUpdateProperties(
                options = {
                    'key' : ''
                    },
                resource = openapi_client.models.mongo_db_collection_resource.MongoDBCollectionResource(
                    id = '', 
                    indexes = [
                        openapi_client.models.mongo_index.MongoIndex(
                            key = openapi_client.models.mongo_index_keys.MongoIndexKeys(
                                keys = [
                                    ''
                                    ], ), 
                            options = openapi_client.models.mongo_index_options.MongoIndexOptions(
                                expire_after_seconds = 56, 
                                unique = True, ), )
                        ], 
                    shard_key = {
                        'key' : ''
                        }, )
            )
        else:
            return MongoDBCollectionCreateUpdateProperties(
                options = {
                    'key' : ''
                    },
                resource = openapi_client.models.mongo_db_collection_resource.MongoDBCollectionResource(
                    id = '', 
                    indexes = [
                        openapi_client.models.mongo_index.MongoIndex(
                            key = openapi_client.models.mongo_index_keys.MongoIndexKeys(
                                keys = [
                                    ''
                                    ], ), 
                            options = openapi_client.models.mongo_index_options.MongoIndexOptions(
                                expire_after_seconds = 56, 
                                unique = True, ), )
                        ], 
                    shard_key = {
                        'key' : ''
                        }, ),
        )
        """

    def testMongoDBCollectionCreateUpdateProperties(self):
        """Test MongoDBCollectionCreateUpdateProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
