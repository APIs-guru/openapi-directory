# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2019-12-12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cassandra_table_create_update_properties import CassandraTableCreateUpdateProperties

class TestCassandraTableCreateUpdateProperties(unittest.TestCase):
    """CassandraTableCreateUpdateProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CassandraTableCreateUpdateProperties:
        """Test CassandraTableCreateUpdateProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CassandraTableCreateUpdateProperties`
        """
        model = CassandraTableCreateUpdateProperties()
        if include_optional:
            return CassandraTableCreateUpdateProperties(
                options = {
                    'key' : ''
                    },
                resource = openapi_client.models.cassandra_table_resource.CassandraTableResource(
                    default_ttl = 56, 
                    id = '', 
                    schema = openapi_client.models.cassandra_schema.CassandraSchema(
                        cluster_keys = [
                            openapi_client.models.cluster_key.ClusterKey(
                                name = '', 
                                order_by = '', )
                            ], 
                        columns = [
                            openapi_client.models.column.Column(
                                name = '', 
                                type = '', )
                            ], 
                        partition_keys = [
                            openapi_client.models.cassandra_partition_key.CassandraPartitionKey(
                                name = '', )
                            ], ), )
            )
        else:
            return CassandraTableCreateUpdateProperties(
                options = {
                    'key' : ''
                    },
                resource = openapi_client.models.cassandra_table_resource.CassandraTableResource(
                    default_ttl = 56, 
                    id = '', 
                    schema = openapi_client.models.cassandra_schema.CassandraSchema(
                        cluster_keys = [
                            openapi_client.models.cluster_key.ClusterKey(
                                name = '', 
                                order_by = '', )
                            ], 
                        columns = [
                            openapi_client.models.column.Column(
                                name = '', 
                                type = '', )
                            ], 
                        partition_keys = [
                            openapi_client.models.cassandra_partition_key.CassandraPartitionKey(
                                name = '', )
                            ], ), ),
        )
        """

    def testCassandraTableCreateUpdateProperties(self):
        """Test CassandraTableCreateUpdateProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
