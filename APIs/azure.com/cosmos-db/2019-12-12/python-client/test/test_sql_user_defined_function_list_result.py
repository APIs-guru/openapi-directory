# coding: utf-8

"""
    Cosmos DB

    Azure Cosmos DB Database Service Resource Provider REST API

    The version of the OpenAPI document: 2019-12-12
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sql_user_defined_function_list_result import SqlUserDefinedFunctionListResult

class TestSqlUserDefinedFunctionListResult(unittest.TestCase):
    """SqlUserDefinedFunctionListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SqlUserDefinedFunctionListResult:
        """Test SqlUserDefinedFunctionListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SqlUserDefinedFunctionListResult`
        """
        model = SqlUserDefinedFunctionListResult()
        if include_optional:
            return SqlUserDefinedFunctionListResult(
                value = [
                    openapi_client.models.sql_user_defined_function_get_results.SqlUserDefinedFunctionGetResults(
                        properties = openapi_client.models.sql_user_defined_function_get_properties.SqlUserDefinedFunctionGetProperties(
                            resource = openapi_client.models.sql_user_defined_function_get_properties_resource.SqlUserDefinedFunctionGetProperties_resource(), ), )
                    ]
            )
        else:
            return SqlUserDefinedFunctionListResult(
        )
        """

    def testSqlUserDefinedFunctionListResult(self):
        """Test SqlUserDefinedFunctionListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
