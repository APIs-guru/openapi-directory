# coding: utf-8

"""
    BlueprintClient

    Azure Blueprint Client.

    The version of the OpenAPI document: 2017-11-11-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.role_assignment_artifact import RoleAssignmentArtifact

class TestRoleAssignmentArtifact(unittest.TestCase):
    """RoleAssignmentArtifact unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RoleAssignmentArtifact:
        """Test RoleAssignmentArtifact
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RoleAssignmentArtifact`
        """
        model = RoleAssignmentArtifact()
        if include_optional:
            return RoleAssignmentArtifact(
                properties = openapi_client.models.role_assignment_artifact_properties.RoleAssignmentArtifactProperties(
                    principal_ids = openapi_client.models.principal_ids.principalIds(), 
                    resource_group = '', 
                    role_definition_id = '', ),
                kind = 'template',
                id = '',
                name = '',
                type = ''
            )
        else:
            return RoleAssignmentArtifact(
                properties = openapi_client.models.role_assignment_artifact_properties.RoleAssignmentArtifactProperties(
                    principal_ids = openapi_client.models.principal_ids.principalIds(), 
                    resource_group = '', 
                    role_definition_id = '', ),
                kind = 'template',
        )
        """

    def testRoleAssignmentArtifact(self):
        """Test RoleAssignmentArtifact"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
