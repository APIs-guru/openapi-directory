# coding: utf-8

"""
    Management Groups

    The Azure Management Groups API enables consolidation of multiple subscriptions/resources into an organizational hierarchy and centrally manage access control, policies, alerting and reporting for those resources.

    The version of the OpenAPI document: 2019-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.entity_list_result import EntityListResult

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class EntitiesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def entities_list(
        self,
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2018-01-01-preview.")],
        skiptoken: Annotated[Optional[StrictStr], Field(description="Page continuation token is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.")] = None,
        skip: Annotated[Optional[StrictInt], Field(description="Number of entities to skip over when retrieving results. Passing this in will override $skipToken.")] = None,
        top: Annotated[Optional[StrictInt], Field(description="Number of elements to return when retrieving results. Passing this in will override $skipToken.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain, e.g. '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override select in $skipToken.")] = None,
        search: Annotated[Optional[StrictStr], Field(description="The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on the parameter passed in. With $search=AllowedParents the API will return the entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.With $search=AllowedChildren the API will return the entity info of all entities that can be added as children of the requested entity.With $search=ParentAndFirstLevelChildren the API will return the parent and  first level of children that the user has either direct access to or indirect access via one of their descendants.With $search=ParentOnly the API will return only the group if the user has access to at least one of the descendants of the group.With $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.  The user must have direct access to the children entities or one of it's descendants for it to show up in the results.")] = None,
        filter: Annotated[Optional[StrictStr], Field(description="The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name field (e.g. name eq '{entityName}')  and you can check for substrings on either the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')). Note that the '{entityName}' and '{substringToSearch}' fields are checked case insensitively.")] = None,
        view: Annotated[Optional[StrictStr], Field(description="The view parameter allows clients to filter the type of data that is returned by the getEntities call.")] = None,
        group_name: Annotated[Optional[StrictStr], Field(description="A filter which allows the get entities call to focus on a particular group (i.e. \"$filter=name eq 'groupName'\")")] = None,
        cache_control: Annotated[Optional[StrictStr], Field(description="Indicates that the request shouldn't utilize any caches.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> EntityListResult:
        """entities_list

        List all entities (Management Groups, Subscriptions, etc.) for the authenticated user.

        :param api_version: Version of the API to be used with the client request. The current version is 2018-01-01-preview. (required)
        :type api_version: str
        :param skiptoken: Page continuation token is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
        :type skiptoken: str
        :param skip: Number of entities to skip over when retrieving results. Passing this in will override $skipToken.
        :type skip: int
        :param top: Number of elements to return when retrieving results. Passing this in will override $skipToken.
        :type top: int
        :param select: This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain, e.g. '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override select in $skipToken.
        :type select: str
        :param search: The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on the parameter passed in. With $search=AllowedParents the API will return the entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.With $search=AllowedChildren the API will return the entity info of all entities that can be added as children of the requested entity.With $search=ParentAndFirstLevelChildren the API will return the parent and  first level of children that the user has either direct access to or indirect access via one of their descendants.With $search=ParentOnly the API will return only the group if the user has access to at least one of the descendants of the group.With $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.  The user must have direct access to the children entities or one of it's descendants for it to show up in the results.
        :type search: str
        :param filter: The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name field (e.g. name eq '{entityName}')  and you can check for substrings on either the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')). Note that the '{entityName}' and '{substringToSearch}' fields are checked case insensitively.
        :type filter: str
        :param view: The view parameter allows clients to filter the type of data that is returned by the getEntities call.
        :type view: str
        :param group_name: A filter which allows the get entities call to focus on a particular group (i.e. \"$filter=name eq 'groupName'\")
        :type group_name: str
        :param cache_control: Indicates that the request shouldn't utilize any caches.
        :type cache_control: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._entities_list_serialize(
            api_version=api_version,
            skiptoken=skiptoken,
            skip=skip,
            top=top,
            select=select,
            search=search,
            filter=filter,
            view=view,
            group_name=group_name,
            cache_control=cache_control,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EntityListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def entities_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2018-01-01-preview.")],
        skiptoken: Annotated[Optional[StrictStr], Field(description="Page continuation token is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.")] = None,
        skip: Annotated[Optional[StrictInt], Field(description="Number of entities to skip over when retrieving results. Passing this in will override $skipToken.")] = None,
        top: Annotated[Optional[StrictInt], Field(description="Number of elements to return when retrieving results. Passing this in will override $skipToken.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain, e.g. '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override select in $skipToken.")] = None,
        search: Annotated[Optional[StrictStr], Field(description="The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on the parameter passed in. With $search=AllowedParents the API will return the entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.With $search=AllowedChildren the API will return the entity info of all entities that can be added as children of the requested entity.With $search=ParentAndFirstLevelChildren the API will return the parent and  first level of children that the user has either direct access to or indirect access via one of their descendants.With $search=ParentOnly the API will return only the group if the user has access to at least one of the descendants of the group.With $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.  The user must have direct access to the children entities or one of it's descendants for it to show up in the results.")] = None,
        filter: Annotated[Optional[StrictStr], Field(description="The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name field (e.g. name eq '{entityName}')  and you can check for substrings on either the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')). Note that the '{entityName}' and '{substringToSearch}' fields are checked case insensitively.")] = None,
        view: Annotated[Optional[StrictStr], Field(description="The view parameter allows clients to filter the type of data that is returned by the getEntities call.")] = None,
        group_name: Annotated[Optional[StrictStr], Field(description="A filter which allows the get entities call to focus on a particular group (i.e. \"$filter=name eq 'groupName'\")")] = None,
        cache_control: Annotated[Optional[StrictStr], Field(description="Indicates that the request shouldn't utilize any caches.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[EntityListResult]:
        """entities_list

        List all entities (Management Groups, Subscriptions, etc.) for the authenticated user.

        :param api_version: Version of the API to be used with the client request. The current version is 2018-01-01-preview. (required)
        :type api_version: str
        :param skiptoken: Page continuation token is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
        :type skiptoken: str
        :param skip: Number of entities to skip over when retrieving results. Passing this in will override $skipToken.
        :type skip: int
        :param top: Number of elements to return when retrieving results. Passing this in will override $skipToken.
        :type top: int
        :param select: This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain, e.g. '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override select in $skipToken.
        :type select: str
        :param search: The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on the parameter passed in. With $search=AllowedParents the API will return the entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.With $search=AllowedChildren the API will return the entity info of all entities that can be added as children of the requested entity.With $search=ParentAndFirstLevelChildren the API will return the parent and  first level of children that the user has either direct access to or indirect access via one of their descendants.With $search=ParentOnly the API will return only the group if the user has access to at least one of the descendants of the group.With $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.  The user must have direct access to the children entities or one of it's descendants for it to show up in the results.
        :type search: str
        :param filter: The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name field (e.g. name eq '{entityName}')  and you can check for substrings on either the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')). Note that the '{entityName}' and '{substringToSearch}' fields are checked case insensitively.
        :type filter: str
        :param view: The view parameter allows clients to filter the type of data that is returned by the getEntities call.
        :type view: str
        :param group_name: A filter which allows the get entities call to focus on a particular group (i.e. \"$filter=name eq 'groupName'\")
        :type group_name: str
        :param cache_control: Indicates that the request shouldn't utilize any caches.
        :type cache_control: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._entities_list_serialize(
            api_version=api_version,
            skiptoken=skiptoken,
            skip=skip,
            top=top,
            select=select,
            search=search,
            filter=filter,
            view=view,
            group_name=group_name,
            cache_control=cache_control,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EntityListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def entities_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Version of the API to be used with the client request. The current version is 2018-01-01-preview.")],
        skiptoken: Annotated[Optional[StrictStr], Field(description="Page continuation token is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.")] = None,
        skip: Annotated[Optional[StrictInt], Field(description="Number of entities to skip over when retrieving results. Passing this in will override $skipToken.")] = None,
        top: Annotated[Optional[StrictInt], Field(description="Number of elements to return when retrieving results. Passing this in will override $skipToken.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain, e.g. '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override select in $skipToken.")] = None,
        search: Annotated[Optional[StrictStr], Field(description="The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on the parameter passed in. With $search=AllowedParents the API will return the entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.With $search=AllowedChildren the API will return the entity info of all entities that can be added as children of the requested entity.With $search=ParentAndFirstLevelChildren the API will return the parent and  first level of children that the user has either direct access to or indirect access via one of their descendants.With $search=ParentOnly the API will return only the group if the user has access to at least one of the descendants of the group.With $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.  The user must have direct access to the children entities or one of it's descendants for it to show up in the results.")] = None,
        filter: Annotated[Optional[StrictStr], Field(description="The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name field (e.g. name eq '{entityName}')  and you can check for substrings on either the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')). Note that the '{entityName}' and '{substringToSearch}' fields are checked case insensitively.")] = None,
        view: Annotated[Optional[StrictStr], Field(description="The view parameter allows clients to filter the type of data that is returned by the getEntities call.")] = None,
        group_name: Annotated[Optional[StrictStr], Field(description="A filter which allows the get entities call to focus on a particular group (i.e. \"$filter=name eq 'groupName'\")")] = None,
        cache_control: Annotated[Optional[StrictStr], Field(description="Indicates that the request shouldn't utilize any caches.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """entities_list

        List all entities (Management Groups, Subscriptions, etc.) for the authenticated user.

        :param api_version: Version of the API to be used with the client request. The current version is 2018-01-01-preview. (required)
        :type api_version: str
        :param skiptoken: Page continuation token is only used if a previous operation returned a partial result. If a previous response contains a nextLink element, the value of the nextLink element will include a token parameter that specifies a starting point to use for subsequent calls.
        :type skiptoken: str
        :param skip: Number of entities to skip over when retrieving results. Passing this in will override $skipToken.
        :type skip: int
        :param top: Number of elements to return when retrieving results. Passing this in will override $skipToken.
        :type top: int
        :param select: This parameter specifies the fields to include in the response. Can include any combination of Name,DisplayName,Type,ParentDisplayNameChain,ParentChain, e.g. '$select=Name,DisplayName,Type,ParentDisplayNameChain,ParentNameChain'. When specified the $select parameter can override select in $skipToken.
        :type select: str
        :param search: The $search parameter is used in conjunction with the $filter parameter to return three different outputs depending on the parameter passed in. With $search=AllowedParents the API will return the entity info of all groups that the requested entity will be able to reparent to as determined by the user's permissions.With $search=AllowedChildren the API will return the entity info of all entities that can be added as children of the requested entity.With $search=ParentAndFirstLevelChildren the API will return the parent and  first level of children that the user has either direct access to or indirect access via one of their descendants.With $search=ParentOnly the API will return only the group if the user has access to at least one of the descendants of the group.With $search=ChildrenOnly the API will return only the first level of children of the group entity info specified in $filter.  The user must have direct access to the children entities or one of it's descendants for it to show up in the results.
        :type search: str
        :param filter: The filter parameter allows you to filter on the the name or display name fields. You can check for equality on the name field (e.g. name eq '{entityName}')  and you can check for substrings on either the name or display name fields(e.g. contains(name, '{substringToSearch}'), contains(displayName, '{substringToSearch')). Note that the '{entityName}' and '{substringToSearch}' fields are checked case insensitively.
        :type filter: str
        :param view: The view parameter allows clients to filter the type of data that is returned by the getEntities call.
        :type view: str
        :param group_name: A filter which allows the get entities call to focus on a particular group (i.e. \"$filter=name eq 'groupName'\")
        :type group_name: str
        :param cache_control: Indicates that the request shouldn't utilize any caches.
        :type cache_control: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._entities_list_serialize(
            api_version=api_version,
            skiptoken=skiptoken,
            skip=skip,
            top=top,
            select=select,
            search=search,
            filter=filter,
            view=view,
            group_name=group_name,
            cache_control=cache_control,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "EntityListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _entities_list_serialize(
        self,
        api_version,
        skiptoken,
        skip,
        top,
        select,
        search,
        filter,
        view,
        group_name,
        cache_control,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if skiptoken is not None:
            
            _query_params.append(('$skiptoken', skiptoken))
            
        if skip is not None:
            
            _query_params.append(('$skip', skip))
            
        if top is not None:
            
            _query_params.append(('$top', top))
            
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if search is not None:
            
            _query_params.append(('$search', search))
            
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if view is not None:
            
            _query_params.append(('$view', view))
            
        if group_name is not None:
            
            _query_params.append(('groupName', group_name))
            
        # process the header parameters
        if cache_control is not None:
            _header_params['Cache-Control'] = cache_control
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/providers/Microsoft.Management/getEntities',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


