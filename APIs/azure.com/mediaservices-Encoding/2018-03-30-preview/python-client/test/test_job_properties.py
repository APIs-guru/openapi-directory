# coding: utf-8

"""
    Azure Media Services

    This Swagger was generated by the API Framework.

    The version of the OpenAPI document: 2018-03-30-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_properties import JobProperties

class TestJobProperties(unittest.TestCase):
    """JobProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobProperties:
        """Test JobProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobProperties`
        """
        model = JobProperties()
        if include_optional:
            return JobProperties(
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                description = '',
                input = openapi_client.models.job_input.JobInput(
                    @odata/type = '', 
                    label = '', ),
                last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                outputs = [
                    openapi_client.models.job_output.JobOutput(
                        @odata/type = '', 
                        error = openapi_client.models.job_error.JobError(
                            category = 'Service', 
                            code = 'ServiceError', 
                            details = [
                                openapi_client.models.job_error_detail.JobErrorDetail(
                                    code = '', 
                                    message = '', )
                                ], 
                            message = '', 
                            retry = 'DoNotRetry', ), 
                        progress = 56, 
                        state = 'Canceled', )
                    ],
                priority = 'Low',
                state = 'Canceled'
            )
        else:
            return JobProperties(
                input = openapi_client.models.job_input.JobInput(
                    @odata/type = '', 
                    label = '', ),
                outputs = [
                    openapi_client.models.job_output.JobOutput(
                        @odata/type = '', 
                        error = openapi_client.models.job_error.JobError(
                            category = 'Service', 
                            code = 'ServiceError', 
                            details = [
                                openapi_client.models.job_error_detail.JobErrorDetail(
                                    code = '', 
                                    message = '', )
                                ], 
                            message = '', 
                            retry = 'DoNotRetry', ), 
                        progress = 56, 
                        state = 'Canceled', )
                    ],
        )
        """

    def testJobProperties(self):
        """Test JobProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
