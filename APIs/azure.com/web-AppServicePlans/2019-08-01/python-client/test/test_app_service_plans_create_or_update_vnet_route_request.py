# coding: utf-8

"""
    AppServicePlans API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-08-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_service_plans_create_or_update_vnet_route_request import AppServicePlansCreateOrUpdateVnetRouteRequest

class TestAppServicePlansCreateOrUpdateVnetRouteRequest(unittest.TestCase):
    """AppServicePlansCreateOrUpdateVnetRouteRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppServicePlansCreateOrUpdateVnetRouteRequest:
        """Test AppServicePlansCreateOrUpdateVnetRouteRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppServicePlansCreateOrUpdateVnetRouteRequest`
        """
        model = AppServicePlansCreateOrUpdateVnetRouteRequest()
        if include_optional:
            return AppServicePlansCreateOrUpdateVnetRouteRequest(
                properties = openapi_client.models.app_service_plans_list_vnets_200_response_inner_properties_routes_inner_properties.AppServicePlans_ListVnets_200_response_inner_properties_routes_inner_properties(
                    end_address = '', 
                    route_type = 'DEFAULT', 
                    start_address = '', ),
                id = '',
                kind = '',
                name = '',
                type = ''
            )
        else:
            return AppServicePlansCreateOrUpdateVnetRouteRequest(
        )
        """

    def testAppServicePlansCreateOrUpdateVnetRouteRequest(self):
        """Test AppServicePlansCreateOrUpdateVnetRouteRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
