# coding: utf-8

"""
    AppServicePlans API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_service_plans_list_web_apps200_response_value_inner_properties_geo_distributions_inner import AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner

class TestAppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner(unittest.TestCase):
    """AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner:
        """Test AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner`
        """
        model = AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner()
        if include_optional:
            return AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner(
                location = '',
                number_of_workers = 56
            )
        else:
            return AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner(
        )
        """

    def testAppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner(self):
        """Test AppServicePlansListWebApps200ResponseValueInnerPropertiesGeoDistributionsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
