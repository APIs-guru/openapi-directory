# coding: utf-8

"""
    AppServicePlans API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_service_plans_list_usages200_response_value_inner import AppServicePlansListUsages200ResponseValueInner

class TestAppServicePlansListUsages200ResponseValueInner(unittest.TestCase):
    """AppServicePlansListUsages200ResponseValueInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppServicePlansListUsages200ResponseValueInner:
        """Test AppServicePlansListUsages200ResponseValueInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppServicePlansListUsages200ResponseValueInner`
        """
        model = AppServicePlansListUsages200ResponseValueInner()
        if include_optional:
            return AppServicePlansListUsages200ResponseValueInner(
                current_value = 56,
                limit = 56,
                name = openapi_client.models.app_service_plans_list_usages_200_response_value_inner_name.AppServicePlans_ListUsages_200_response_value_inner_name(
                    localized_value = '', 
                    value = '', ),
                next_reset_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                unit = ''
            )
        else:
            return AppServicePlansListUsages200ResponseValueInner(
        )
        """

    def testAppServicePlansListUsages200ResponseValueInner(self):
        """Test AppServicePlansListUsages200ResponseValueInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
