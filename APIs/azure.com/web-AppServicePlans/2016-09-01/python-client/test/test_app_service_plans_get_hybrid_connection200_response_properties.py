# coding: utf-8

"""
    AppServicePlans API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-09-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_service_plans_get_hybrid_connection200_response_properties import AppServicePlansGetHybridConnection200ResponseProperties

class TestAppServicePlansGetHybridConnection200ResponseProperties(unittest.TestCase):
    """AppServicePlansGetHybridConnection200ResponseProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppServicePlansGetHybridConnection200ResponseProperties:
        """Test AppServicePlansGetHybridConnection200ResponseProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppServicePlansGetHybridConnection200ResponseProperties`
        """
        model = AppServicePlansGetHybridConnection200ResponseProperties()
        if include_optional:
            return AppServicePlansGetHybridConnection200ResponseProperties(
                hostname = '',
                port = 56,
                relay_arm_uri = '',
                relay_name = '',
                send_key_name = '',
                send_key_value = '',
                service_bus_namespace = '',
                service_bus_suffix = ''
            )
        else:
            return AppServicePlansGetHybridConnection200ResponseProperties(
        )
        """

    def testAppServicePlansGetHybridConnection200ResponseProperties(self):
        """Test AppServicePlansGetHybridConnection200ResponseProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
