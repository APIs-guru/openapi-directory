# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).

    The version of the OpenAPI document: 2019-12-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.authorization_server_update_request_properties import AuthorizationServerUpdateRequestProperties

class TestAuthorizationServerUpdateRequestProperties(unittest.TestCase):
    """AuthorizationServerUpdateRequestProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AuthorizationServerUpdateRequestProperties:
        """Test AuthorizationServerUpdateRequestProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AuthorizationServerUpdateRequestProperties`
        """
        model = AuthorizationServerUpdateRequestProperties()
        if include_optional:
            return AuthorizationServerUpdateRequestProperties(
                authorization_endpoint = '',
                client_id = '',
                client_registration_endpoint = '',
                client_secret = '',
                display_name = '0',
                grant_types = [
                    'authorizationCode'
                    ]
            )
        else:
            return AuthorizationServerUpdateRequestProperties(
        )
        """

    def testAuthorizationServerUpdateRequestProperties(self):
        """Test AuthorizationServerUpdateRequestProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
