# coding: utf-8

"""
    ApiManagementClient

    Use these REST APIs for managing OAuth2 servers configuration in your Azure API Management deployment. OAuth 2.0 can be used to authorize developer accounts for Azure API Management. For more information refer to [How to OAuth2](https://docs.microsoft.com/en-us/azure/api-management/api-management-howto-oauth2).

    The version of the OpenAPI document: 2016-10-10
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.o_auth2_authorization_server_update_contract import OAuth2AuthorizationServerUpdateContract

class TestOAuth2AuthorizationServerUpdateContract(unittest.TestCase):
    """OAuth2AuthorizationServerUpdateContract unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OAuth2AuthorizationServerUpdateContract:
        """Test OAuth2AuthorizationServerUpdateContract
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OAuth2AuthorizationServerUpdateContract`
        """
        model = OAuth2AuthorizationServerUpdateContract()
        if include_optional:
            return OAuth2AuthorizationServerUpdateContract(
                authorization_endpoint = '',
                authorization_methods = [
                    'HEAD'
                    ],
                bearer_token_sending_methods = [
                    'authorizationHeader'
                    ],
                client_authentication_method = [
                    'Basic'
                    ],
                client_id = '',
                client_registration_endpoint = '',
                client_secret = '',
                default_scope = '',
                description = '',
                grant_types = [
                    'authorizationCode'
                    ],
                name = '0',
                resource_owner_password = '',
                resource_owner_username = '',
                support_state = True,
                token_body_parameters = [
                    openapi_client.models.token_body_parameter_contract.TokenBodyParameterContract(
                        name = '', 
                        value = '', )
                    ],
                token_endpoint = ''
            )
        else:
            return OAuth2AuthorizationServerUpdateContract(
        )
        """

    def testOAuth2AuthorizationServerUpdateContract(self):
        """Test OAuth2AuthorizationServerUpdateContract"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
