# coding: utf-8

"""
    QnAMaker Client

    An API for QnAMaker Service

    The version of the OpenAPI document: 4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.replace_kb_dto import ReplaceKbDTO

class TestReplaceKbDTO(unittest.TestCase):
    """ReplaceKbDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReplaceKbDTO:
        """Test ReplaceKbDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReplaceKbDTO`
        """
        model = ReplaceKbDTO()
        if include_optional:
            return ReplaceKbDTO(
                qn_a_list = [
                    openapi_client.models.qn_adto.QnADTO(
                        answer = '0', 
                        context = openapi_client.models.context.context(), 
                        id = 56, 
                        metadata = [
                            openapi_client.models.metadata_dto.MetadataDTO(
                                name = '0', 
                                value = '0', )
                            ], 
                        questions = [
                            ''
                            ], 
                        source = '', )
                    ]
            )
        else:
            return ReplaceKbDTO(
                qn_a_list = [
                    openapi_client.models.qn_adto.QnADTO(
                        answer = '0', 
                        context = openapi_client.models.context.context(), 
                        id = 56, 
                        metadata = [
                            openapi_client.models.metadata_dto.MetadataDTO(
                                name = '0', 
                                value = '0', )
                            ], 
                        questions = [
                            ''
                            ], 
                        source = '', )
                    ],
        )
        """

    def testReplaceKbDTO(self):
        """Test ReplaceKbDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
