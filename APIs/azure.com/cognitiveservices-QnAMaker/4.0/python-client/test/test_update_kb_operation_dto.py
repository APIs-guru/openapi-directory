# coding: utf-8

"""
    QnAMaker Client

    An API for QnAMaker Service

    The version of the OpenAPI document: 4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_kb_operation_dto import UpdateKbOperationDTO

class TestUpdateKbOperationDTO(unittest.TestCase):
    """UpdateKbOperationDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateKbOperationDTO:
        """Test UpdateKbOperationDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateKbOperationDTO`
        """
        model = UpdateKbOperationDTO()
        if include_optional:
            return UpdateKbOperationDTO(
                add = openapi_client.models.create_kb_input_dto.CreateKbInputDTO(
                    files = [
                        openapi_client.models.file_dto.FileDTO(
                            file_name = '0', 
                            file_uri = '', )
                        ], 
                    qna_list = [
                        openapi_client.models.qn_adto.QnADTO(
                            answer = '0', 
                            context = openapi_client.models.context.context(), 
                            id = 56, 
                            metadata = [
                                openapi_client.models.metadata_dto.MetadataDTO(
                                    name = '0', 
                                    value = '0', )
                                ], 
                            questions = [
                                ''
                                ], 
                            source = '', )
                        ], 
                    urls = [
                        ''
                        ], ),
                default_answer_used_for_extraction = '0',
                delete = openapi_client.models.delete_kb_contents_dto.DeleteKbContentsDTO(
                    ids = [
                        56
                        ], 
                    sources = [
                        ''
                        ], ),
                enable_hierarchical_extraction = True,
                update = openapi_client.models.update_kb_contents_dto.UpdateKbContentsDTO(
                    name = '', 
                    qna_list = [
                        openapi_client.models.update_qna_dto.UpdateQnaDTO(
                            answer = '', 
                            context = openapi_client.models.context.context(), 
                            id = 0, 
                            metadata = openapi_client.models.metadata.metadata(), 
                            questions = openapi_client.models.questions.questions(), 
                            source = '', )
                        ], 
                    urls = [
                        ''
                        ], )
            )
        else:
            return UpdateKbOperationDTO(
        )
        """

    def testUpdateKbOperationDTO(self):
        """Test UpdateKbOperationDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
