# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2018-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.windows_configuration import WindowsConfiguration

class TestWindowsConfiguration(unittest.TestCase):
    """WindowsConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WindowsConfiguration:
        """Test WindowsConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WindowsConfiguration`
        """
        model = WindowsConfiguration()
        if include_optional:
            return WindowsConfiguration(
                additional_unattend_content = [
                    openapi_client.models.additional_unattend_content.AdditionalUnattendContent(
                        component_name = 'Microsoft-Windows-Shell-Setup', 
                        content = '', 
                        pass_name = 'OobeSystem', 
                        setting_name = 'AutoLogon', )
                    ],
                enable_automatic_updates = True,
                provision_vm_agent = True,
                time_zone = '',
                win_rm = openapi_client.models.win_rm_configuration.WinRMConfiguration(
                    listeners = [
                        openapi_client.models.win_rm_listener.WinRMListener(
                            certificate_url = '', 
                            protocol = 'Http', )
                        ], )
            )
        else:
            return WindowsConfiguration(
        )
        """

    def testWindowsConfiguration(self):
        """Test WindowsConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
