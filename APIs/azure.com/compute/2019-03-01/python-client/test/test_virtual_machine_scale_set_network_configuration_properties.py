# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_machine_scale_set_network_configuration_properties import VirtualMachineScaleSetNetworkConfigurationProperties

class TestVirtualMachineScaleSetNetworkConfigurationProperties(unittest.TestCase):
    """VirtualMachineScaleSetNetworkConfigurationProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualMachineScaleSetNetworkConfigurationProperties:
        """Test VirtualMachineScaleSetNetworkConfigurationProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualMachineScaleSetNetworkConfigurationProperties`
        """
        model = VirtualMachineScaleSetNetworkConfigurationProperties()
        if include_optional:
            return VirtualMachineScaleSetNetworkConfigurationProperties(
                dns_settings = openapi_client.models.virtual_machine_scale_set_network_configuration_dns_settings.VirtualMachineScaleSetNetworkConfigurationDnsSettings(
                    dns_servers = [
                        ''
                        ], ),
                enable_accelerated_networking = True,
                enable_ip_forwarding = True,
                ip_configurations = [
                    openapi_client.models.virtual_machine_scale_set_ip_configuration.VirtualMachineScaleSetIPConfiguration(
                        name = '', 
                        properties = openapi_client.models.virtual_machine_scale_set_ip_configuration_properties.VirtualMachineScaleSetIPConfigurationProperties(
                            application_gateway_backend_address_pools = [
                                openapi_client.models.sub_resource.SubResource(
                                    id = '', )
                                ], 
                            application_security_groups = [
                                openapi_client.models.sub_resource.SubResource(
                                    id = '', )
                                ], 
                            load_balancer_backend_address_pools = [
                                
                                ], 
                            load_balancer_inbound_nat_pools = [
                                
                                ], 
                            primary = True, 
                            private_ip_address_version = 'IPv4', 
                            public_ip_address_configuration = openapi_client.models.virtual_machine_scale_set_public_ip_address_configuration.VirtualMachineScaleSetPublicIPAddressConfiguration(
                                name = '', ), 
                            subnet = openapi_client.models.api_entity_reference.ApiEntityReference(
                                id = '', ), ), )
                    ],
                network_security_group = openapi_client.models.sub_resource.SubResource(
                    id = '', ),
                primary = True
            )
        else:
            return VirtualMachineScaleSetNetworkConfigurationProperties(
                ip_configurations = [
                    openapi_client.models.virtual_machine_scale_set_ip_configuration.VirtualMachineScaleSetIPConfiguration(
                        name = '', 
                        properties = openapi_client.models.virtual_machine_scale_set_ip_configuration_properties.VirtualMachineScaleSetIPConfigurationProperties(
                            application_gateway_backend_address_pools = [
                                openapi_client.models.sub_resource.SubResource(
                                    id = '', )
                                ], 
                            application_security_groups = [
                                openapi_client.models.sub_resource.SubResource(
                                    id = '', )
                                ], 
                            load_balancer_backend_address_pools = [
                                
                                ], 
                            load_balancer_inbound_nat_pools = [
                                
                                ], 
                            primary = True, 
                            private_ip_address_version = 'IPv4', 
                            public_ip_address_configuration = openapi_client.models.virtual_machine_scale_set_public_ip_address_configuration.VirtualMachineScaleSetPublicIPAddressConfiguration(
                                name = '', ), 
                            subnet = openapi_client.models.api_entity_reference.ApiEntityReference(
                                id = '', ), ), )
                    ],
        )
        """

    def testVirtualMachineScaleSetNetworkConfigurationProperties(self):
        """Test VirtualMachineScaleSetNetworkConfigurationProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
