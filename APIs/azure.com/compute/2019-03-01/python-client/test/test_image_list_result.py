# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.image_list_result import ImageListResult

class TestImageListResult(unittest.TestCase):
    """ImageListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ImageListResult:
        """Test ImageListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ImageListResult`
        """
        model = ImageListResult()
        if include_optional:
            return ImageListResult(
                next_link = '',
                value = [
                    openapi_client.models.image.Image(
                        properties = openapi_client.models.image_properties.ImageProperties(
                            hyper_v_generation = 'V1', 
                            provisioning_state = '', 
                            source_virtual_machine = openapi_client.models.sub_resource.SubResource(
                                id = '', ), 
                            storage_profile = openapi_client.models.image_storage_profile.ImageStorageProfile(
                                data_disks = [
                                    openapi_client.models.image_data_disk.ImageDataDisk(
                                        blob_uri = '', 
                                        caching = 'None', 
                                        disk_size_gb = 56, 
                                        lun = 56, 
                                        managed_disk = openapi_client.models.sub_resource.SubResource(
                                            id = '', ), 
                                        snapshot = , 
                                        storage_account_type = 'Standard_LRS', )
                                    ], 
                                os_disk = openapi_client.models.image_os_disk.ImageOSDisk(
                                    blob_uri = '', 
                                    caching = 'None', 
                                    disk_size_gb = 56, 
                                    os_state = 'Generalized', 
                                    os_type = 'Windows', ), 
                                zone_resilient = True, ), ), )
                    ]
            )
        else:
            return ImageListResult(
                value = [
                    openapi_client.models.image.Image(
                        properties = openapi_client.models.image_properties.ImageProperties(
                            hyper_v_generation = 'V1', 
                            provisioning_state = '', 
                            source_virtual_machine = openapi_client.models.sub_resource.SubResource(
                                id = '', ), 
                            storage_profile = openapi_client.models.image_storage_profile.ImageStorageProfile(
                                data_disks = [
                                    openapi_client.models.image_data_disk.ImageDataDisk(
                                        blob_uri = '', 
                                        caching = 'None', 
                                        disk_size_gb = 56, 
                                        lun = 56, 
                                        managed_disk = openapi_client.models.sub_resource.SubResource(
                                            id = '', ), 
                                        snapshot = , 
                                        storage_account_type = 'Standard_LRS', )
                                    ], 
                                os_disk = openapi_client.models.image_os_disk.ImageOSDisk(
                                    blob_uri = '', 
                                    caching = 'None', 
                                    disk_size_gb = 56, 
                                    os_state = 'Generalized', 
                                    os_type = 'Windows', ), 
                                zone_resilient = True, ), ), )
                    ],
        )
        """

    def testImageListResult(self):
        """Test ImageListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
