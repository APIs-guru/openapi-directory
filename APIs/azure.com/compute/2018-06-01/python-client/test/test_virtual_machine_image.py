# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2018-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_machine_image import VirtualMachineImage

class TestVirtualMachineImage(unittest.TestCase):
    """VirtualMachineImage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualMachineImage:
        """Test VirtualMachineImage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualMachineImage`
        """
        model = VirtualMachineImage()
        if include_optional:
            return VirtualMachineImage(
                properties = openapi_client.models.virtual_machine_image_properties.VirtualMachineImageProperties(
                    data_disk_images = [
                        openapi_client.models.data_disk_image.DataDiskImage(
                            lun = 56, )
                        ], 
                    os_disk_image = openapi_client.models.os_disk_image.OSDiskImage(
                        operating_system = 'Windows', ), 
                    plan = openapi_client.models.purchase_plan.PurchasePlan(
                        name = '', 
                        product = '', 
                        publisher = '', ), ),
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                id = ''
            )
        else:
            return VirtualMachineImage(
                location = '',
                name = '',
        )
        """

    def testVirtualMachineImage(self):
        """Test VirtualMachineImage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
