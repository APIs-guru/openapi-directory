# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2017-03-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.virtual_machine_extension import VirtualMachineExtension

class TestVirtualMachineExtension(unittest.TestCase):
    """VirtualMachineExtension unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VirtualMachineExtension:
        """Test VirtualMachineExtension
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VirtualMachineExtension`
        """
        model = VirtualMachineExtension()
        if include_optional:
            return VirtualMachineExtension(
                properties = openapi_client.models.virtual_machine_extension_properties.VirtualMachineExtensionProperties(
                    auto_upgrade_minor_version = True, 
                    force_update_tag = '', 
                    instance_view = openapi_client.models.virtual_machine_extension_instance_view.VirtualMachineExtensionInstanceView(
                        name = '', 
                        statuses = [
                            openapi_client.models.instance_view_status.InstanceViewStatus(
                                code = '', 
                                display_status = '', 
                                level = 'Info', 
                                message = '', 
                                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        substatuses = [
                            openapi_client.models.instance_view_status.InstanceViewStatus(
                                code = '', 
                                display_status = '', 
                                level = 'Info', 
                                message = '', 
                                time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        type = '', 
                        type_handler_version = '', ), 
                    protected_settings = openapi_client.models.protected_settings.protectedSettings(), 
                    provisioning_state = '', 
                    publisher = '', 
                    settings = openapi_client.models.settings.settings(), 
                    type = '', 
                    type_handler_version = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return VirtualMachineExtension(
                location = '',
        )
        """

    def testVirtualMachineExtension(self):
        """Test VirtualMachineExtension"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
