# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2017-03-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.availability_set import AvailabilitySet

class TestAvailabilitySet(unittest.TestCase):
    """AvailabilitySet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AvailabilitySet:
        """Test AvailabilitySet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AvailabilitySet`
        """
        model = AvailabilitySet()
        if include_optional:
            return AvailabilitySet(
                properties = openapi_client.models.availability_set_properties.AvailabilitySetProperties(
                    platform_fault_domain_count = 56, 
                    platform_update_domain_count = 56, 
                    statuses = [
                        openapi_client.models.instance_view_status.InstanceViewStatus(
                            code = '', 
                            display_status = '', 
                            level = 'Info', 
                            message = '', 
                            time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                        ], 
                    virtual_machines = [
                        openapi_client.models.sub_resource.SubResource(
                            id = '', )
                        ], ),
                sku = openapi_client.models.sku.Sku(
                    capacity = 56, 
                    name = '', 
                    tier = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return AvailabilitySet(
                location = '',
        )
        """

    def testAvailabilitySet(self):
        """Test AvailabilitySet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
