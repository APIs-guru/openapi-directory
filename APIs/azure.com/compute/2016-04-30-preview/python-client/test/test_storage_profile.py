# coding: utf-8

"""
    ComputeManagementClient

    The Compute Management Client.

    The version of the OpenAPI document: 2016-04-30-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.storage_profile import StorageProfile

class TestStorageProfile(unittest.TestCase):
    """StorageProfile unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageProfile:
        """Test StorageProfile
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageProfile`
        """
        model = StorageProfile()
        if include_optional:
            return StorageProfile(
                data_disks = [
                    openapi_client.models.data_disk.DataDisk(
                        caching = 'None', 
                        create_option = 'FromImage', 
                        disk_size_gb = 56, 
                        image = openapi_client.models.virtual_hard_disk.VirtualHardDisk(
                            uri = '', ), 
                        lun = 56, 
                        managed_disk = openapi_client.models.managed_disk_parameters.ManagedDiskParameters(
                            storage_account_type = 'Standard_LRS', ), 
                        name = '', 
                        vhd = openapi_client.models.virtual_hard_disk.VirtualHardDisk(
                            uri = '', ), )
                    ],
                image_reference = openapi_client.models.image_reference.ImageReference(
                    offer = '', 
                    publisher = '', 
                    sku = '', 
                    version = '', ),
                os_disk = openapi_client.models.os_disk.OSDisk(
                    caching = 'None', 
                    create_option = 'FromImage', 
                    disk_size_gb = 56, 
                    encryption_settings = openapi_client.models.disk_encryption_settings.DiskEncryptionSettings(
                        disk_encryption_key = openapi_client.models.key_vault_secret_reference.KeyVaultSecretReference(
                            secret_url = '', 
                            source_vault = openapi_client.models.sub_resource.SubResource(
                                id = '', ), ), 
                        enabled = True, 
                        key_encryption_key = openapi_client.models.key_vault_key_reference.KeyVaultKeyReference(
                            key_url = '', 
                            source_vault = openapi_client.models.sub_resource.SubResource(
                                id = '', ), ), ), 
                    image = openapi_client.models.virtual_hard_disk.VirtualHardDisk(
                        uri = '', ), 
                    managed_disk = openapi_client.models.managed_disk_parameters.ManagedDiskParameters(
                        storage_account_type = 'Standard_LRS', ), 
                    name = '', 
                    os_type = 'Windows', 
                    vhd = openapi_client.models.virtual_hard_disk.VirtualHardDisk(
                        uri = '', ), )
            )
        else:
            return StorageProfile(
        )
        """

    def testStorageProfile(self):
        """Test StorageProfile"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
