# coding: utf-8

"""
    StorageManagementClient

    The Azure Storage Management API.

    The version of the OpenAPI document: 2019-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.management_policy_definition import ManagementPolicyDefinition

class TestManagementPolicyDefinition(unittest.TestCase):
    """ManagementPolicyDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ManagementPolicyDefinition:
        """Test ManagementPolicyDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ManagementPolicyDefinition`
        """
        model = ManagementPolicyDefinition()
        if include_optional:
            return ManagementPolicyDefinition(
                actions = openapi_client.models.management_policy_action.ManagementPolicyAction(
                    base_blob = openapi_client.models.management_policy_base_blob.ManagementPolicyBaseBlob(
                        delete = openapi_client.models.date_after_modification.DateAfterModification(
                            days_after_modification_greater_than = 0, ), 
                        tier_to_archive = openapi_client.models.date_after_modification.DateAfterModification(
                            days_after_modification_greater_than = 0, ), 
                        tier_to_cool = , ), 
                    snapshot = openapi_client.models.management_policy_snap_shot.ManagementPolicySnapShot(), ),
                filters = openapi_client.models.management_policy_filter.ManagementPolicyFilter(
                    blob_types = [
                        ''
                        ], 
                    prefix_match = [
                        ''
                        ], )
            )
        else:
            return ManagementPolicyDefinition(
                actions = openapi_client.models.management_policy_action.ManagementPolicyAction(
                    base_blob = openapi_client.models.management_policy_base_blob.ManagementPolicyBaseBlob(
                        delete = openapi_client.models.date_after_modification.DateAfterModification(
                            days_after_modification_greater_than = 0, ), 
                        tier_to_archive = openapi_client.models.date_after_modification.DateAfterModification(
                            days_after_modification_greater_than = 0, ), 
                        tier_to_cool = , ), 
                    snapshot = openapi_client.models.management_policy_snap_shot.ManagementPolicySnapShot(), ),
        )
        """

    def testManagementPolicyDefinition(self):
        """Test ManagementPolicyDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
