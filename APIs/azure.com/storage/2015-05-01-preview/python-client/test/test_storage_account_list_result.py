# coding: utf-8

"""
    StorageManagementClient

    The Storage Management Client.

    The version of the OpenAPI document: 2015-05-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.storage_account_list_result import StorageAccountListResult

class TestStorageAccountListResult(unittest.TestCase):
    """StorageAccountListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StorageAccountListResult:
        """Test StorageAccountListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StorageAccountListResult`
        """
        model = StorageAccountListResult()
        if include_optional:
            return StorageAccountListResult(
                next_link = '',
                value = [
                    openapi_client.models.storage_account.StorageAccount(
                        properties = openapi_client.models.storage_account_properties.StorageAccountProperties(
                            account_type = 'Standard_LRS', 
                            creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            custom_domain = openapi_client.models.custom_domain.CustomDomain(
                                name = '', 
                                use_sub_domain_name = True, ), 
                            last_geo_failover_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            primary_endpoints = openapi_client.models.endpoints.Endpoints(
                                blob = '', 
                                queue = '', 
                                table = '', ), 
                            primary_location = '', 
                            provisioning_state = 'Creating', 
                            secondary_endpoints = openapi_client.models.endpoints.Endpoints(
                                blob = '', 
                                queue = '', 
                                table = '', ), 
                            secondary_location = '', 
                            status_of_primary = 'Available', 
                            status_of_secondary = 'Available', ), )
                    ]
            )
        else:
            return StorageAccountListResult(
        )
        """

    def testStorageAccountListResult(self):
        """Test StorageAccountListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
