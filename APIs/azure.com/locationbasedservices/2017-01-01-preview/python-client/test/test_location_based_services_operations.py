# coding: utf-8

"""
    Azure Location Based Services Resource Provider

    Resource Provider

    The version of the OpenAPI document: 2017-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.location_based_services_operations import LocationBasedServicesOperations

class TestLocationBasedServicesOperations(unittest.TestCase):
    """LocationBasedServicesOperations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LocationBasedServicesOperations:
        """Test LocationBasedServicesOperations
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LocationBasedServicesOperations`
        """
        model = LocationBasedServicesOperations()
        if include_optional:
            return LocationBasedServicesOperations(
                value = [
                    openapi_client.models.location_based_services_operations_value_inner.LocationBasedServicesOperations_value_inner(
                        display = openapi_client.models.location_based_services_operations_value_inner_display.LocationBasedServicesOperations_value_inner_display(
                            description = '', 
                            operation = '', 
                            provider = '', 
                            resource = '', ), 
                        name = '', 
                        origin = '', )
                    ]
            )
        else:
            return LocationBasedServicesOperations(
        )
        """

    def testLocationBasedServicesOperations(self):
        """Test LocationBasedServicesOperations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
