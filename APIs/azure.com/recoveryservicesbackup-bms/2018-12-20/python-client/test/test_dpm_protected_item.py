# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-12-20
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dpm_protected_item import DPMProtectedItem

class TestDPMProtectedItem(unittest.TestCase):
    """DPMProtectedItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DPMProtectedItem:
        """Test DPMProtectedItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DPMProtectedItem`
        """
        model = DPMProtectedItem()
        if include_optional:
            return DPMProtectedItem(
                backup_engine_name = '',
                extended_info = openapi_client.models.dpm_protected_item_extended_info.DPMProtectedItemExtendedInfo(
                    disk_storage_used_in_bytes = '', 
                    is_collocated = True, 
                    is_present_on_cloud = True, 
                    last_backup_status = '', 
                    last_refreshed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    oldest_recovery_point = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    on_premise_latest_recovery_point = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    on_premise_oldest_recovery_point = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    on_premise_recovery_point_count = 56, 
                    protectable_object_load_path = {
                        'key' : ''
                        }, 
                    protected = True, 
                    protection_group_name = '', 
                    recovery_point_count = 56, 
                    total_disk_storage_size_in_bytes = '', ),
                friendly_name = '',
                protection_state = 'Invalid'
            )
        else:
            return DPMProtectedItem(
        )
        """

    def testDPMProtectedItem(self):
        """Test DPMProtectedItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
