# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-12-20
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.crr_access_token import CrrAccessToken

class TestCrrAccessToken(unittest.TestCase):
    """CrrAccessToken unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CrrAccessToken:
        """Test CrrAccessToken
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CrrAccessToken`
        """
        model = CrrAccessToken()
        if include_optional:
            return CrrAccessToken(
                access_token_string = '',
                backup_management_type = '',
                container_name = '',
                container_type = '',
                coordinator_service_stamp_id = '',
                coordinator_service_stamp_uri = '',
                datasource_container_name = '',
                datasource_id = '',
                datasource_name = '',
                datasource_type = '',
                protection_service_stamp_id = '',
                protection_service_stamp_uri = '',
                recovery_point_id = '',
                recovery_point_time = '',
                resource_group_name = '',
                resource_id = '',
                resource_name = '',
                subscription_id = '',
                token_extended_information = ''
            )
        else:
            return CrrAccessToken(
        )
        """

    def testCrrAccessToken(self):
        """Test CrrAccessToken"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
