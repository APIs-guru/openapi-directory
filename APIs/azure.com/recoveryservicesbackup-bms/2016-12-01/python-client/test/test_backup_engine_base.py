# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-12-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backup_engine_base import BackupEngineBase

class TestBackupEngineBase(unittest.TestCase):
    """BackupEngineBase unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupEngineBase:
        """Test BackupEngineBase
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupEngineBase`
        """
        model = BackupEngineBase()
        if include_optional:
            return BackupEngineBase(
                azure_backup_agent_version = '',
                backup_engine_id = '',
                backup_engine_state = '',
                backup_engine_type = 'Invalid',
                backup_management_type = 'Invalid',
                can_re_register = True,
                dpm_version = '',
                extended_info = openapi_client.models.backup_engine_extended_info.BackupEngineExtendedInfo(
                    available_disk_space = 1.337, 
                    azure_protected_instances = 56, 
                    database_name = '', 
                    disk_count = 56, 
                    protected_items_count = 56, 
                    protected_servers_count = 56, 
                    refreshed_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    used_disk_space = 1.337, ),
                friendly_name = '',
                health_status = '',
                is_azure_backup_agent_upgrade_available = True,
                is_dpm_upgrade_available = True,
                registration_status = ''
            )
        else:
            return BackupEngineBase(
        )
        """

    def testBackupEngineBase(self):
        """Test BackupEngineBase"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
