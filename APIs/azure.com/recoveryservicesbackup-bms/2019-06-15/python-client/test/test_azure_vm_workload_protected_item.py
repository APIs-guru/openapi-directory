# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-06-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_vm_workload_protected_item import AzureVmWorkloadProtectedItem

class TestAzureVmWorkloadProtectedItem(unittest.TestCase):
    """AzureVmWorkloadProtectedItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureVmWorkloadProtectedItem:
        """Test AzureVmWorkloadProtectedItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureVmWorkloadProtectedItem`
        """
        model = AzureVmWorkloadProtectedItem()
        if include_optional:
            return AzureVmWorkloadProtectedItem(
                extended_info = openapi_client.models.azure_vm_workload_protected_item_extended_info.AzureVmWorkloadProtectedItemExtendedInfo(
                    oldest_recovery_point = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    policy_state = '', 
                    recovery_point_count = 56, ),
                friendly_name = '',
                last_backup_error_detail = openapi_client.models.error_detail.ErrorDetail(
                    code = '', 
                    message = '', 
                    recommendations = [
                        ''
                        ], ),
                last_backup_status = 'Invalid',
                last_backup_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                parent_name = '',
                parent_type = '',
                protected_item_data_source_id = '',
                protected_item_health_status = 'Invalid',
                protection_state = 'Invalid',
                protection_status = '',
                server_name = ''
            )
        else:
            return AzureVmWorkloadProtectedItem(
        )
        """

    def testAzureVmWorkloadProtectedItem(self):
        """Test AzureVmWorkloadProtectedItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
