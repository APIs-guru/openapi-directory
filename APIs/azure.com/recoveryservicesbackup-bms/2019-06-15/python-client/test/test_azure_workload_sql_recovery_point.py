# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-06-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_workload_sql_recovery_point import AzureWorkloadSQLRecoveryPoint

class TestAzureWorkloadSQLRecoveryPoint(unittest.TestCase):
    """AzureWorkloadSQLRecoveryPoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureWorkloadSQLRecoveryPoint:
        """Test AzureWorkloadSQLRecoveryPoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureWorkloadSQLRecoveryPoint`
        """
        model = AzureWorkloadSQLRecoveryPoint()
        if include_optional:
            return AzureWorkloadSQLRecoveryPoint(
                extended_info = openapi_client.models.azure_workload_sql_recovery_point_extended_info.AzureWorkloadSQLRecoveryPointExtendedInfo(
                    data_directory_paths = [
                        openapi_client.models.sql_data_directory.SQLDataDirectory(
                            logical_name = '', 
                            path = '', 
                            type = 'Invalid', )
                        ], 
                    data_directory_time_in_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return AzureWorkloadSQLRecoveryPoint(
        )
        """

    def testAzureWorkloadSQLRecoveryPoint(self):
        """Test AzureWorkloadSQLRecoveryPoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
