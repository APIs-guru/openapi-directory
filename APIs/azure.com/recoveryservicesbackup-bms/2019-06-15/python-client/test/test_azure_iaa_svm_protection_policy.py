# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-06-15
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_iaa_svm_protection_policy import AzureIaaSVMProtectionPolicy

class TestAzureIaaSVMProtectionPolicy(unittest.TestCase):
    """AzureIaaSVMProtectionPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureIaaSVMProtectionPolicy:
        """Test AzureIaaSVMProtectionPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureIaaSVMProtectionPolicy`
        """
        model = AzureIaaSVMProtectionPolicy()
        if include_optional:
            return AzureIaaSVMProtectionPolicy(
                instant_rp_details = openapi_client.models.instant_rp_additional_details.InstantRPAdditionalDetails(
                    azure_backup_rg_name_prefix = '', 
                    azure_backup_rg_name_suffix = '', ),
                instant_rp_retention_range_in_days = 56,
                retention_policy = openapi_client.models.retention_policy.RetentionPolicy(
                    retention_policy_type = '', ),
                schedule_policy = openapi_client.models.schedule_policy.SchedulePolicy(
                    schedule_policy_type = '', ),
                time_zone = ''
            )
        else:
            return AzureIaaSVMProtectionPolicy(
        )
        """

    def testAzureIaaSVMProtectionPolicy(self):
        """Test AzureIaaSVMProtectionPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
