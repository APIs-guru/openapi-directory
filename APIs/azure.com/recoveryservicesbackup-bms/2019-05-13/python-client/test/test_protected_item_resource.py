# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-05-13
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.protected_item_resource import ProtectedItemResource

class TestProtectedItemResource(unittest.TestCase):
    """ProtectedItemResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProtectedItemResource:
        """Test ProtectedItemResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProtectedItemResource`
        """
        model = ProtectedItemResource()
        if include_optional:
            return ProtectedItemResource(
                properties = openapi_client.models.protected_item.ProtectedItem(
                    backup_management_type = 'Invalid', 
                    backup_set_name = '', 
                    container_name = '', 
                    create_mode = 'Invalid', 
                    deferred_delete_time_in_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    deferred_delete_time_remaining = '', 
                    is_deferred_delete_schedule_upcoming = True, 
                    is_rehydrate = True, 
                    is_scheduled_for_deferred_delete = True, 
                    last_recovery_point = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    policy_id = '', 
                    source_resource_id = '', 
                    workload_type = 'Invalid', ),
                e_tag = '',
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return ProtectedItemResource(
        )
        """

    def testProtectedItemResource(self):
        """Test ProtectedItemResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
