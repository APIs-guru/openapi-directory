# coding: utf-8

"""
    RecoveryServicesBackupClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-05-13
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import ConfigDict
from typing import Any, ClassVar, Dict, List
from openapi_client.models.azure_vm_workload_protected_item import AzureVmWorkloadProtectedItem
from openapi_client.models.azure_vm_workload_protected_item_extended_info import AzureVmWorkloadProtectedItemExtendedInfo
from openapi_client.models.error_detail import ErrorDetail
from typing import Optional, Set
from typing_extensions import Self

class AzureVmWorkloadSQLDatabaseProtectedItem(AzureVmWorkloadProtectedItem):
    """
    Azure VM workload-specific protected item representing SQL Database.
    """ # noqa: E501
    __properties: ClassVar[List[str]] = ["extendedInfo", "friendlyName", "lastBackupErrorDetail", "lastBackupStatus", "lastBackupTime", "parentName", "parentType", "protectedItemDataSourceId", "protectedItemHealthStatus", "protectionState", "protectionStatus", "serverName", "backupManagementType", "backupSetName", "containerName", "createMode", "deferredDeleteTimeInUTC", "deferredDeleteTimeRemaining", "isDeferredDeleteScheduleUpcoming", "isRehydrate", "isScheduledForDeferredDelete", "lastRecoveryPoint", "policyId", "protectedItemType", "sourceResourceId", "workloadType"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of AzureVmWorkloadSQLDatabaseProtectedItem from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of extended_info
        if self.extended_info:
            _dict['extendedInfo'] = self.extended_info.to_dict()
        # override the default output from pydantic by calling `to_dict()` of last_backup_error_detail
        if self.last_backup_error_detail:
            _dict['lastBackupErrorDetail'] = self.last_backup_error_detail.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of AzureVmWorkloadSQLDatabaseProtectedItem from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "extendedInfo": AzureVmWorkloadProtectedItemExtendedInfo.from_dict(obj["extendedInfo"]) if obj.get("extendedInfo") is not None else None,
            "friendlyName": obj.get("friendlyName"),
            "lastBackupErrorDetail": ErrorDetail.from_dict(obj["lastBackupErrorDetail"]) if obj.get("lastBackupErrorDetail") is not None else None,
            "lastBackupStatus": obj.get("lastBackupStatus"),
            "lastBackupTime": obj.get("lastBackupTime"),
            "parentName": obj.get("parentName"),
            "parentType": obj.get("parentType"),
            "protectedItemDataSourceId": obj.get("protectedItemDataSourceId"),
            "protectedItemHealthStatus": obj.get("protectedItemHealthStatus"),
            "protectionState": obj.get("protectionState"),
            "protectionStatus": obj.get("protectionStatus"),
            "serverName": obj.get("serverName"),
            "backupManagementType": obj.get("backupManagementType"),
            "backupSetName": obj.get("backupSetName"),
            "containerName": obj.get("containerName"),
            "createMode": obj.get("createMode"),
            "deferredDeleteTimeInUTC": obj.get("deferredDeleteTimeInUTC"),
            "deferredDeleteTimeRemaining": obj.get("deferredDeleteTimeRemaining"),
            "isDeferredDeleteScheduleUpcoming": obj.get("isDeferredDeleteScheduleUpcoming"),
            "isRehydrate": obj.get("isRehydrate"),
            "isScheduledForDeferredDelete": obj.get("isScheduledForDeferredDelete"),
            "lastRecoveryPoint": obj.get("lastRecoveryPoint"),
            "policyId": obj.get("policyId"),
            "protectedItemType": obj.get("protectedItemType"),
            "sourceResourceId": obj.get("sourceResourceId"),
            "workloadType": obj.get("workloadType")
        })
        return _obj


