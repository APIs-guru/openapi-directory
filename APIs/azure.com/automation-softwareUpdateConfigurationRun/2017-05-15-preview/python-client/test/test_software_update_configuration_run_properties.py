# coding: utf-8

"""
    Update Management

    APIs for managing software update configurations.

    The version of the OpenAPI document: 2017-05-15-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.software_update_configuration_run_properties import SoftwareUpdateConfigurationRunProperties

class TestSoftwareUpdateConfigurationRunProperties(unittest.TestCase):
    """SoftwareUpdateConfigurationRunProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SoftwareUpdateConfigurationRunProperties:
        """Test SoftwareUpdateConfigurationRunProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SoftwareUpdateConfigurationRunProperties`
        """
        model = SoftwareUpdateConfigurationRunProperties()
        if include_optional:
            return SoftwareUpdateConfigurationRunProperties(
                computer_count = 56,
                configured_duration = '',
                created_by = '',
                creation_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                failed_count = 56,
                last_modified_by = '',
                last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                os_type = '',
                software_update_configuration = openapi_client.models.update_configuration_navigation.updateConfigurationNavigation(
                    name = '', ),
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                status = '',
                tasks = openapi_client.models.softare_update_configuration_run_tasks.softareUpdateConfigurationRunTasks(
                    post_task = openapi_client.models.softare_update_configuration_run_task_properties.softareUpdateConfigurationRunTaskProperties(
                        job_id = '', 
                        source = '', 
                        status = '', ), 
                    pre_task = openapi_client.models.softare_update_configuration_run_task_properties.softareUpdateConfigurationRunTaskProperties(
                        job_id = '', 
                        source = '', 
                        status = '', ), )
            )
        else:
            return SoftwareUpdateConfigurationRunProperties(
        )
        """

    def testSoftwareUpdateConfigurationRunProperties(self):
        """Test SoftwareUpdateConfigurationRunProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
