# coding: utf-8

"""
    Microsoft NetApp

    Microsoft NetApp Azure Resource Provider specification

    The version of the OpenAPI document: 2019-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mount_target_list import MountTargetList

class TestMountTargetList(unittest.TestCase):
    """MountTargetList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MountTargetList:
        """Test MountTargetList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MountTargetList`
        """
        model = MountTargetList()
        if include_optional:
            return MountTargetList(
                value = [
                    openapi_client.models.mount_target.mountTarget(
                        id = '', 
                        location = '', 
                        name = '', 
                        properties = openapi_client.models.mount_target_properties.mountTargetProperties(
                            file_system_id = '9760acf5-4638-11e7-9bdb-020073ca3333', 
                            ip_address = '1.2.3.4', 
                            mount_target_id = '9760acf5-4638-11e7-9bdb-020073ca3333', 
                            smb_server_fqdn = 'fullyqualified.domainname.com', ), 
                        tags = {
                            'key' : ''
                            }, 
                        type = '', )
                    ]
            )
        else:
            return MountTargetList(
        )
        """

    def testMountTargetList(self):
        """Test MountTargetList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
