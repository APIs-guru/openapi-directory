# coding: utf-8

"""
    Microsoft NetApp

    Microsoft NetApp Azure Resource Provider specification

    The version of the OpenAPI document: 2019-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.volume_patch_properties import VolumePatchProperties

class TestVolumePatchProperties(unittest.TestCase):
    """VolumePatchProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VolumePatchProperties:
        """Test VolumePatchProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VolumePatchProperties`
        """
        model = VolumePatchProperties()
        if include_optional:
            return VolumePatchProperties(
                export_policy = openapi_client.models.export_policy.exportPolicy(
                    rules = [
                        openapi_client.models.export_policy_rule.exportPolicyRule(
                            allowed_clients = '', 
                            cifs = True, 
                            nfsv3 = True, 
                            nfsv41 = True, 
                            rule_index = 56, 
                            unix_read_only = True, 
                            unix_read_write = True, )
                        ], ),
                service_level = 'Premium',
                usage_threshold = 107374182400
            )
        else:
            return VolumePatchProperties(
        )
        """

    def testVolumePatchProperties(self):
        """Test VolumePatchProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
