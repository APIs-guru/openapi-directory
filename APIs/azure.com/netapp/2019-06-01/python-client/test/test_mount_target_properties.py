# coding: utf-8

"""
    Microsoft NetApp

    Microsoft NetApp Azure Resource Provider specification

    The version of the OpenAPI document: 2019-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.mount_target_properties import MountTargetProperties

class TestMountTargetProperties(unittest.TestCase):
    """MountTargetProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MountTargetProperties:
        """Test MountTargetProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MountTargetProperties`
        """
        model = MountTargetProperties()
        if include_optional:
            return MountTargetProperties(
                end_ip = '1.2.3.4',
                file_system_id = '9760acf5-4638-11e7-9bdb-020073ca3333',
                gateway = '1.2.3.4',
                ip_address = '1.2.3.4',
                mount_target_id = '9760acf5-4638-11e7-9bdb-020073ca3333',
                netmask = '255.255.255.0',
                provisioning_state = '',
                smb_server_fqdn = 'fullyqualified.domainname.com',
                start_ip = '1.2.3.4',
                subnet = '1.2.3.4'
            )
        else:
            return MountTargetProperties(
                file_system_id = '9760acf5-4638-11e7-9bdb-020073ca3333',
        )
        """

    def testMountTargetProperties(self):
        """Test MountTargetProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
