# coding: utf-8

"""
    AzureAnalysisServices

    The Azure Analysis Services Web API provides a RESTful set of web services that enables users to create, retrieve, update, and delete Analysis Services servers

    The version of the OpenAPI document: 2017-07-14
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_services_server_mutable_properties import AnalysisServicesServerMutableProperties

class TestAnalysisServicesServerMutableProperties(unittest.TestCase):
    """AnalysisServicesServerMutableProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisServicesServerMutableProperties:
        """Test AnalysisServicesServerMutableProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisServicesServerMutableProperties`
        """
        model = AnalysisServicesServerMutableProperties()
        if include_optional:
            return AnalysisServicesServerMutableProperties(
                as_administrators = openapi_client.models.server_administrators.ServerAdministrators(
                    members = [
                        ''
                        ], ),
                backup_blob_container_uri = '',
                gateway_details = openapi_client.models.gateway_details.GatewayDetails(
                    dmts_cluster_uri = '', 
                    gateway_object_id = '', 
                    gateway_resource_id = '', )
            )
        else:
            return AnalysisServicesServerMutableProperties(
        )
        """

    def testAnalysisServicesServerMutableProperties(self):
        """Test AnalysisServicesServerMutableProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
