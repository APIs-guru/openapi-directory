# coding: utf-8

"""
    Azure Metrics

    A client for issuing REST requests to the Azure metrics service.

    The version of the OpenAPI document: 2018-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing_extensions import Annotated
from openapi_client.models.azure_metrics_document import AzureMetricsDocument
from openapi_client.models.azure_metrics_result import AzureMetricsResult

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class MetricsApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def metrics_create(
        self,
        content_type: Annotated[StrictStr, Field(description="Supports application/json and application/x-ndjson")],
        content_length: Annotated[StrictInt, Field(description="Content length of the payload")],
        authorization: Annotated[StrictStr, Field(description="Authorization token issue for issued for audience \"https:\\\\monitoring.azure.com\\\"")],
        subscription_id: Annotated[StrictStr, Field(description="The azure subscription id")],
        resource_group_name: Annotated[StrictStr, Field(description="The ARM resource group name")],
        resource_provider: Annotated[StrictStr, Field(description="The ARM resource provider name")],
        resource_type_name: Annotated[StrictStr, Field(description="The ARM resource type name")],
        resource_name: Annotated[StrictStr, Field(description="The ARM resource name")],
        body: Annotated[AzureMetricsDocument, Field(description="The Azure metrics document json payload")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> AzureMetricsResult:
        """metrics_create

        **Post the metric values for a resource**.

        :param content_type: Supports application/json and application/x-ndjson (required)
        :type content_type: str
        :param content_length: Content length of the payload (required)
        :type content_length: int
        :param authorization: Authorization token issue for issued for audience \"https:\\\\monitoring.azure.com\\\" (required)
        :type authorization: str
        :param subscription_id: The azure subscription id (required)
        :type subscription_id: str
        :param resource_group_name: The ARM resource group name (required)
        :type resource_group_name: str
        :param resource_provider: The ARM resource provider name (required)
        :type resource_provider: str
        :param resource_type_name: The ARM resource type name (required)
        :type resource_type_name: str
        :param resource_name: The ARM resource name (required)
        :type resource_name: str
        :param body: The Azure metrics document json payload (required)
        :type body: AzureMetricsDocument
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._metrics_create_serialize(
            content_type=content_type,
            content_length=content_length,
            authorization=authorization,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_provider=resource_provider,
            resource_type_name=resource_type_name,
            resource_name=resource_name,
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AzureMetricsResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def metrics_create_with_http_info(
        self,
        content_type: Annotated[StrictStr, Field(description="Supports application/json and application/x-ndjson")],
        content_length: Annotated[StrictInt, Field(description="Content length of the payload")],
        authorization: Annotated[StrictStr, Field(description="Authorization token issue for issued for audience \"https:\\\\monitoring.azure.com\\\"")],
        subscription_id: Annotated[StrictStr, Field(description="The azure subscription id")],
        resource_group_name: Annotated[StrictStr, Field(description="The ARM resource group name")],
        resource_provider: Annotated[StrictStr, Field(description="The ARM resource provider name")],
        resource_type_name: Annotated[StrictStr, Field(description="The ARM resource type name")],
        resource_name: Annotated[StrictStr, Field(description="The ARM resource name")],
        body: Annotated[AzureMetricsDocument, Field(description="The Azure metrics document json payload")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[AzureMetricsResult]:
        """metrics_create

        **Post the metric values for a resource**.

        :param content_type: Supports application/json and application/x-ndjson (required)
        :type content_type: str
        :param content_length: Content length of the payload (required)
        :type content_length: int
        :param authorization: Authorization token issue for issued for audience \"https:\\\\monitoring.azure.com\\\" (required)
        :type authorization: str
        :param subscription_id: The azure subscription id (required)
        :type subscription_id: str
        :param resource_group_name: The ARM resource group name (required)
        :type resource_group_name: str
        :param resource_provider: The ARM resource provider name (required)
        :type resource_provider: str
        :param resource_type_name: The ARM resource type name (required)
        :type resource_type_name: str
        :param resource_name: The ARM resource name (required)
        :type resource_name: str
        :param body: The Azure metrics document json payload (required)
        :type body: AzureMetricsDocument
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._metrics_create_serialize(
            content_type=content_type,
            content_length=content_length,
            authorization=authorization,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_provider=resource_provider,
            resource_type_name=resource_type_name,
            resource_name=resource_name,
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AzureMetricsResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def metrics_create_without_preload_content(
        self,
        content_type: Annotated[StrictStr, Field(description="Supports application/json and application/x-ndjson")],
        content_length: Annotated[StrictInt, Field(description="Content length of the payload")],
        authorization: Annotated[StrictStr, Field(description="Authorization token issue for issued for audience \"https:\\\\monitoring.azure.com\\\"")],
        subscription_id: Annotated[StrictStr, Field(description="The azure subscription id")],
        resource_group_name: Annotated[StrictStr, Field(description="The ARM resource group name")],
        resource_provider: Annotated[StrictStr, Field(description="The ARM resource provider name")],
        resource_type_name: Annotated[StrictStr, Field(description="The ARM resource type name")],
        resource_name: Annotated[StrictStr, Field(description="The ARM resource name")],
        body: Annotated[AzureMetricsDocument, Field(description="The Azure metrics document json payload")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """metrics_create

        **Post the metric values for a resource**.

        :param content_type: Supports application/json and application/x-ndjson (required)
        :type content_type: str
        :param content_length: Content length of the payload (required)
        :type content_length: int
        :param authorization: Authorization token issue for issued for audience \"https:\\\\monitoring.azure.com\\\" (required)
        :type authorization: str
        :param subscription_id: The azure subscription id (required)
        :type subscription_id: str
        :param resource_group_name: The ARM resource group name (required)
        :type resource_group_name: str
        :param resource_provider: The ARM resource provider name (required)
        :type resource_provider: str
        :param resource_type_name: The ARM resource type name (required)
        :type resource_type_name: str
        :param resource_name: The ARM resource name (required)
        :type resource_name: str
        :param body: The Azure metrics document json payload (required)
        :type body: AzureMetricsDocument
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._metrics_create_serialize(
            content_type=content_type,
            content_length=content_length,
            authorization=authorization,
            subscription_id=subscription_id,
            resource_group_name=resource_group_name,
            resource_provider=resource_provider,
            resource_type_name=resource_type_name,
            resource_name=resource_name,
            body=body,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "AzureMetricsResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _metrics_create_serialize(
        self,
        content_type,
        content_length,
        authorization,
        subscription_id,
        resource_group_name,
        resource_provider,
        resource_type_name,
        resource_name,
        body,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if resource_provider is not None:
            _path_params['resourceProvider'] = resource_provider
        if resource_type_name is not None:
            _path_params['resourceTypeName'] = resource_type_name
        if resource_name is not None:
            _path_params['resourceName'] = resource_name
        # process the query parameters
        # process the header parameters
        if content_type is not None:
            _header_params['Content-Type'] = content_type
        if content_length is not None:
            _header_params['Content-Length'] = content_length
        if authorization is not None:
            _header_params['Authorization'] = authorization
        # process the form parameters
        # process the body parameter
        if body is not None:
            _body_params = body


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourcegroups/{resourceGroupName}/providers/{resourceProvider}/{resourceTypeName}/{resourceName}/metrics',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


