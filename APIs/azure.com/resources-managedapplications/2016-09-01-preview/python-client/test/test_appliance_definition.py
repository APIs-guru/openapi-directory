# coding: utf-8

"""
    ManagedApplicationClient

    ARM managed applications (appliances)

    The version of the OpenAPI document: 2016-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.appliance_definition import ApplianceDefinition

class TestApplianceDefinition(unittest.TestCase):
    """ApplianceDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplianceDefinition:
        """Test ApplianceDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplianceDefinition`
        """
        model = ApplianceDefinition()
        if include_optional:
            return ApplianceDefinition(
                properties = openapi_client.models.appliance_definition_properties.ApplianceDefinitionProperties(
                    artifacts = [
                        openapi_client.models.appliance_artifact.ApplianceArtifact(
                            name = '', 
                            type = 'Template', 
                            uri = '', )
                        ], 
                    authorizations = [
                        openapi_client.models.appliance_provider_authorization.ApplianceProviderAuthorization(
                            principal_id = '', 
                            role_definition_id = '', )
                        ], 
                    description = '', 
                    display_name = '', 
                    lock_level = 'CanNotDelete', 
                    package_file_uri = '', ),
                identity = openapi_client.models.identity.Identity(
                    principal_id = '', 
                    tenant_id = '', 
                    type = 'SystemAssigned', ),
                managed_by = '',
                sku = openapi_client.models.sku.Sku(
                    capacity = 56, 
                    family = '', 
                    model = '', 
                    name = '', 
                    size = '', 
                    tier = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return ApplianceDefinition(
                properties = openapi_client.models.appliance_definition_properties.ApplianceDefinitionProperties(
                    artifacts = [
                        openapi_client.models.appliance_artifact.ApplianceArtifact(
                            name = '', 
                            type = 'Template', 
                            uri = '', )
                        ], 
                    authorizations = [
                        openapi_client.models.appliance_provider_authorization.ApplianceProviderAuthorization(
                            principal_id = '', 
                            role_definition_id = '', )
                        ], 
                    description = '', 
                    display_name = '', 
                    lock_level = 'CanNotDelete', 
                    package_file_uri = '', ),
        )
        """

    def testApplianceDefinition(self):
        """Test ApplianceDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
