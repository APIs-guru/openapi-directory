# coding: utf-8

"""
    ManagedApplicationClient

    ARM managed applications (appliances)

    The version of the OpenAPI document: 2016-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.appliance_definition_list_result import ApplianceDefinitionListResult

class TestApplianceDefinitionListResult(unittest.TestCase):
    """ApplianceDefinitionListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplianceDefinitionListResult:
        """Test ApplianceDefinitionListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplianceDefinitionListResult`
        """
        model = ApplianceDefinitionListResult()
        if include_optional:
            return ApplianceDefinitionListResult(
                next_link = '',
                value = [
                    openapi_client.models.appliance_definition.ApplianceDefinition(
                        properties = openapi_client.models.appliance_definition_properties.ApplianceDefinitionProperties(
                            artifacts = [
                                openapi_client.models.appliance_artifact.ApplianceArtifact(
                                    name = '', 
                                    type = 'Template', 
                                    uri = '', )
                                ], 
                            authorizations = [
                                openapi_client.models.appliance_provider_authorization.ApplianceProviderAuthorization(
                                    principal_id = '', 
                                    role_definition_id = '', )
                                ], 
                            description = '', 
                            display_name = '', 
                            lock_level = 'CanNotDelete', 
                            package_file_uri = '', ), )
                    ]
            )
        else:
            return ApplianceDefinitionListResult(
        )
        """

    def testApplianceDefinitionListResult(self):
        """Test ApplianceDefinitionListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
