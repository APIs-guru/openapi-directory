# coding: utf-8

"""
    ApplicationClient

    ARM applications

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_list_result import ApplicationListResult

class TestApplicationListResult(unittest.TestCase):
    """ApplicationListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationListResult:
        """Test ApplicationListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationListResult`
        """
        model = ApplicationListResult()
        if include_optional:
            return ApplicationListResult(
                next_link = '',
                value = [
                    openapi_client.models.application.Application(
                        identity = openapi_client.models.identity.Identity(
                            principal_id = '', 
                            tenant_id = '', 
                            type = 'SystemAssigned', ), 
                        kind = 'g', 
                        plan = openapi_client.models.plan.Plan(
                            name = '', 
                            product = '', 
                            promotion_code = '', 
                            publisher = '', 
                            version = '', ), 
                        properties = openapi_client.models.application_properties.ApplicationProperties(
                            application_definition_id = '', 
                            artifacts = [
                                openapi_client.models.application_artifact.ApplicationArtifact(
                                    name = 'NotSpecified', 
                                    type = 'NotSpecified', 
                                    uri = '', )
                                ], 
                            authorizations = [
                                openapi_client.models.application_authorization.ApplicationAuthorization(
                                    principal_id = '', 
                                    role_definition_id = '', )
                                ], 
                            billing_details = openapi_client.models.application_billing_details_definition.ApplicationBillingDetailsDefinition(
                                resource_usage_id = '', ), 
                            created_by = openapi_client.models.application_client_details.ApplicationClientDetails(
                                application_id = '', 
                                oid = '', 
                                puid = '', ), 
                            customer_support = openapi_client.models.application_package_contact.ApplicationPackageContact(
                                contact_name = '', 
                                email = '', 
                                phone = '', ), 
                            jit_access_policy = openapi_client.models.application_jit_access_policy.ApplicationJitAccessPolicy(
                                jit_access_enabled = True, 
                                jit_approval_mode = 'NotSpecified', 
                                jit_approvers = [
                                    openapi_client.models.jit_approver_definition.JitApproverDefinition(
                                        display_name = '', 
                                        id = '', )
                                    ], 
                                maximum_jit_access_duration = '', ), 
                            managed_resource_group_id = '', 
                            management_mode = 'NotSpecified', 
                            outputs = openapi_client.models.outputs.outputs(), 
                            parameters = openapi_client.models.parameters.parameters(), 
                            provisioning_state = 'NotSpecified', 
                            publisher_tenant_id = '', 
                            support_urls = openapi_client.models.application_package_support_urls.ApplicationPackageSupportUrls(
                                government_cloud = '', 
                                public_azure = '', ), 
                            updated_by = openapi_client.models.application_client_details.ApplicationClientDetails(
                                application_id = '', 
                                oid = '', 
                                puid = '', ), ), )
                    ]
            )
        else:
            return ApplicationListResult(
        )
        """

    def testApplicationListResult(self):
        """Test ApplicationListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
