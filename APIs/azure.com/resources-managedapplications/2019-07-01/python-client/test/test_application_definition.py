# coding: utf-8

"""
    ApplicationClient

    ARM applications

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_definition import ApplicationDefinition

class TestApplicationDefinition(unittest.TestCase):
    """ApplicationDefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationDefinition:
        """Test ApplicationDefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationDefinition`
        """
        model = ApplicationDefinition()
        if include_optional:
            return ApplicationDefinition(
                properties = openapi_client.models.application_definition_properties.ApplicationDefinitionProperties(
                    artifacts = [
                        openapi_client.models.application_definition_artifact.ApplicationDefinitionArtifact(
                            name = 'NotSpecified', 
                            type = 'NotSpecified', 
                            uri = '', )
                        ], 
                    authorizations = [
                        openapi_client.models.application_authorization.ApplicationAuthorization(
                            principal_id = '', 
                            role_definition_id = '', )
                        ], 
                    create_ui_definition = openapi_client.models.create_ui_definition.createUiDefinition(), 
                    deployment_policy = openapi_client.models.application_deployment_policy.ApplicationDeploymentPolicy(
                        deployment_mode = 'NotSpecified', ), 
                    description = '', 
                    display_name = '', 
                    is_enabled = True, 
                    lock_level = 'CanNotDelete', 
                    locking_policy = openapi_client.models.application_package_locking_policy_definition.ApplicationPackageLockingPolicyDefinition(
                        allowed_actions = [
                            ''
                            ], ), 
                    main_template = openapi_client.models.main_template.mainTemplate(), 
                    management_policy = openapi_client.models.application_management_policy.ApplicationManagementPolicy(
                        mode = 'NotSpecified', ), 
                    notification_policy = openapi_client.models.application_notification_policy.ApplicationNotificationPolicy(
                        notification_endpoints = [
                            openapi_client.models.application_notification_endpoint.ApplicationNotificationEndpoint(
                                uri = '', )
                            ], ), 
                    package_file_uri = '', 
                    policies = [
                        openapi_client.models.application_policy.ApplicationPolicy(
                            parameters = '', 
                            policy_definition_id = '', )
                        ], ),
                managed_by = '',
                sku = openapi_client.models.sku.Sku(
                    capacity = 56, 
                    family = '', 
                    model = '', 
                    name = '', 
                    size = '', 
                    tier = '', ),
                id = '',
                location = '',
                name = '',
                tags = {
                    'key' : ''
                    },
                type = ''
            )
        else:
            return ApplicationDefinition(
                properties = openapi_client.models.application_definition_properties.ApplicationDefinitionProperties(
                    artifacts = [
                        openapi_client.models.application_definition_artifact.ApplicationDefinitionArtifact(
                            name = 'NotSpecified', 
                            type = 'NotSpecified', 
                            uri = '', )
                        ], 
                    authorizations = [
                        openapi_client.models.application_authorization.ApplicationAuthorization(
                            principal_id = '', 
                            role_definition_id = '', )
                        ], 
                    create_ui_definition = openapi_client.models.create_ui_definition.createUiDefinition(), 
                    deployment_policy = openapi_client.models.application_deployment_policy.ApplicationDeploymentPolicy(
                        deployment_mode = 'NotSpecified', ), 
                    description = '', 
                    display_name = '', 
                    is_enabled = True, 
                    lock_level = 'CanNotDelete', 
                    locking_policy = openapi_client.models.application_package_locking_policy_definition.ApplicationPackageLockingPolicyDefinition(
                        allowed_actions = [
                            ''
                            ], ), 
                    main_template = openapi_client.models.main_template.mainTemplate(), 
                    management_policy = openapi_client.models.application_management_policy.ApplicationManagementPolicy(
                        mode = 'NotSpecified', ), 
                    notification_policy = openapi_client.models.application_notification_policy.ApplicationNotificationPolicy(
                        notification_endpoints = [
                            openapi_client.models.application_notification_endpoint.ApplicationNotificationEndpoint(
                                uri = '', )
                            ], ), 
                    package_file_uri = '', 
                    policies = [
                        openapi_client.models.application_policy.ApplicationPolicy(
                            parameters = '', 
                            policy_definition_id = '', )
                        ], ),
        )
        """

    def testApplicationDefinition(self):
        """Test ApplicationDefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
