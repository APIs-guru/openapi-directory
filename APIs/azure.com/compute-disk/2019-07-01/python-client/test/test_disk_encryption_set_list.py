# coding: utf-8

"""
    DiskResourceProviderClient

    The Disk Resource Provider Client.

    The version of the OpenAPI document: 2019-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.disk_encryption_set_list import DiskEncryptionSetList

class TestDiskEncryptionSetList(unittest.TestCase):
    """DiskEncryptionSetList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DiskEncryptionSetList:
        """Test DiskEncryptionSetList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DiskEncryptionSetList`
        """
        model = DiskEncryptionSetList()
        if include_optional:
            return DiskEncryptionSetList(
                next_link = '',
                value = [
                    openapi_client.models.disk_encryption_set.DiskEncryptionSet(
                        identity = openapi_client.models.encryption_set_identity.EncryptionSetIdentity(
                            principal_id = '', 
                            tenant_id = '', 
                            type = 'SystemAssigned', ), 
                        properties = openapi_client.models.encryption_set_properties.EncryptionSetProperties(
                            active_key = openapi_client.models.key_vault_and_key_reference.KeyVaultAndKeyReference(
                                key_url = '', 
                                source_vault = openapi_client.models.source_vault.SourceVault(
                                    id = '', ), ), 
                            previous_keys = [
                                openapi_client.models.key_vault_and_key_reference.KeyVaultAndKeyReference(
                                    key_url = '', 
                                    source_vault = openapi_client.models.source_vault.SourceVault(
                                        id = '', ), )
                                ], 
                            provisioning_state = '', ), )
                    ]
            )
        else:
            return DiskEncryptionSetList(
                value = [
                    openapi_client.models.disk_encryption_set.DiskEncryptionSet(
                        identity = openapi_client.models.encryption_set_identity.EncryptionSetIdentity(
                            principal_id = '', 
                            tenant_id = '', 
                            type = 'SystemAssigned', ), 
                        properties = openapi_client.models.encryption_set_properties.EncryptionSetProperties(
                            active_key = openapi_client.models.key_vault_and_key_reference.KeyVaultAndKeyReference(
                                key_url = '', 
                                source_vault = openapi_client.models.source_vault.SourceVault(
                                    id = '', ), ), 
                            previous_keys = [
                                openapi_client.models.key_vault_and_key_reference.KeyVaultAndKeyReference(
                                    key_url = '', 
                                    source_vault = openapi_client.models.source_vault.SourceVault(
                                        id = '', ), )
                                ], 
                            provisioning_state = '', ), )
                    ],
        )
        """

    def testDiskEncryptionSetList(self):
        """Test DiskEncryptionSetList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
