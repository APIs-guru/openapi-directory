# coding: utf-8

"""
    DiskResourceProviderClient

    The Disk Resource Provider Client.

    The version of the OpenAPI document: 2017-03-30
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.disk_update import DiskUpdate

class TestDiskUpdate(unittest.TestCase):
    """DiskUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DiskUpdate:
        """Test DiskUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DiskUpdate`
        """
        model = DiskUpdate()
        if include_optional:
            return DiskUpdate(
                properties = openapi_client.models.disk_update_properties.DiskUpdateProperties(
                    disk_size_gb = 56, 
                    encryption_settings = openapi_client.models.encryption_settings.EncryptionSettings(
                        disk_encryption_key = openapi_client.models.key_vault_and_secret_reference.KeyVaultAndSecretReference(
                            secret_url = '', 
                            source_vault = openapi_client.models.source_vault.SourceVault(
                                id = '', ), ), 
                        enabled = True, 
                        key_encryption_key = openapi_client.models.key_vault_and_key_reference.KeyVaultAndKeyReference(
                            key_url = '', 
                            source_vault = openapi_client.models.source_vault.SourceVault(
                                id = '', ), ), ), 
                    os_type = 'Windows', ),
                sku = openapi_client.models.disk_sku.DiskSku(
                    name = 'Standard_LRS', 
                    tier = 'Standard', ),
                tags = {
                    'key' : ''
                    }
            )
        else:
            return DiskUpdate(
        )
        """

    def testDiskUpdate(self):
        """Test DiskUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
