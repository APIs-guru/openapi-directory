# coding: utf-8

"""
    Azure SQL Database replication links

    Provides read, delete, and failover functionality for Azure SQL Database replication links.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.replication_link_list_result import ReplicationLinkListResult

class TestReplicationLinkListResult(unittest.TestCase):
    """ReplicationLinkListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReplicationLinkListResult:
        """Test ReplicationLinkListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReplicationLinkListResult`
        """
        model = ReplicationLinkListResult()
        if include_optional:
            return ReplicationLinkListResult(
                value = [
                    openapi_client.models.replication_link.ReplicationLink(
                        location = '', 
                        properties = openapi_client.models.replication_link_properties.ReplicationLinkProperties(
                            is_termination_allowed = True, 
                            partner_database = '', 
                            partner_location = '', 
                            partner_role = 'Primary', 
                            partner_server = '', 
                            percent_complete = 56, 
                            replication_mode = '', 
                            replication_state = 'PENDING', 
                            role = 'Primary', 
                            start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                        type = '', )
                    ]
            )
        else:
            return ReplicationLinkListResult(
        )
        """

    def testReplicationLinkListResult(self):
        """Test ReplicationLinkListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
