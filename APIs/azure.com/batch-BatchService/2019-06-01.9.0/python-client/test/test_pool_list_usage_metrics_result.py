# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2019-06-01.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pool_list_usage_metrics_result import PoolListUsageMetricsResult

class TestPoolListUsageMetricsResult(unittest.TestCase):
    """PoolListUsageMetricsResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PoolListUsageMetricsResult:
        """Test PoolListUsageMetricsResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PoolListUsageMetricsResult`
        """
        model = PoolListUsageMetricsResult()
        if include_optional:
            return PoolListUsageMetricsResult(
                odata_next_link = '',
                value = [
                    openapi_client.models.usage_metrics_for_a_pool_across_an_aggregation_interval/.Usage metrics for a Pool across an aggregation interval.(
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        pool_id = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        total_core_hours = 1.337, 
                        vm_size = '', )
                    ]
            )
        else:
            return PoolListUsageMetricsResult(
        )
        """

    def testPoolListUsageMetricsResult(self):
        """Test PoolListUsageMetricsResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
