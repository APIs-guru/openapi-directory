# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2019-06-01.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cloud_task_list_subtasks_result import CloudTaskListSubtasksResult

class TestCloudTaskListSubtasksResult(unittest.TestCase):
    """CloudTaskListSubtasksResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CloudTaskListSubtasksResult:
        """Test CloudTaskListSubtasksResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CloudTaskListSubtasksResult`
        """
        model = CloudTaskListSubtasksResult()
        if include_optional:
            return CloudTaskListSubtasksResult(
                value = [
                    openapi_client.models.information_about_an_azure_batch_subtask/.Information about an Azure Batch subtask.(
                        container_info = openapi_client.models.contains_information_about_the_container_which_a_task_is_executing/.Contains information about the container which a Task is executing.(
                            container_id = '', 
                            error = '', 
                            state = '', ), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        exit_code = 56, 
                        failure_info = openapi_client.models.information_about_a_task_failure/.Information about a Task failure.(
                            category = 'usererror', 
                            code = '', 
                            details = [
                                openapi_client.models.represents_a_name_value_pair/.Represents a name-value pair.(
                                    name = '', 
                                    value = '', )
                                ], 
                            message = '', ), 
                        id = 56, 
                        node_info = openapi_client.models.information_about_the_compute_node_on_which_a_task_ran/.Information about the Compute Node on which a Task ran.(
                            affinity_id = '', 
                            node_id = '', 
                            node_url = '', 
                            pool_id = '', 
                            task_root_directory = '', 
                            task_root_directory_url = '', ), 
                        previous_state = 'preparing', 
                        previous_state_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        result = 'success', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        state = 'preparing', 
                        state_transition_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return CloudTaskListSubtasksResult(
        )
        """

    def testCloudTaskListSubtasksResult(self):
        """Test CloudTaskListSubtasksResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
