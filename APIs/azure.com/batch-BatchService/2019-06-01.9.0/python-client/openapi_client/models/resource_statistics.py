# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2019-06-01.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictFloat, StrictInt
from typing import Any, ClassVar, Dict, List, Union
from typing import Optional, Set
from typing_extensions import Self

class ResourceStatistics(BaseModel):
    """
    ResourceStatistics
    """ # noqa: E501
    avg_cpu_percentage: Union[StrictFloat, StrictInt] = Field(alias="avgCPUPercentage")
    avg_disk_gi_b: Union[StrictFloat, StrictInt] = Field(alias="avgDiskGiB")
    avg_memory_gi_b: Union[StrictFloat, StrictInt] = Field(alias="avgMemoryGiB")
    disk_read_gi_b: Union[StrictFloat, StrictInt] = Field(alias="diskReadGiB")
    disk_read_i_ops: StrictInt = Field(alias="diskReadIOps")
    disk_write_gi_b: Union[StrictFloat, StrictInt] = Field(alias="diskWriteGiB")
    disk_write_i_ops: StrictInt = Field(alias="diskWriteIOps")
    last_update_time: datetime = Field(alias="lastUpdateTime")
    network_read_gi_b: Union[StrictFloat, StrictInt] = Field(alias="networkReadGiB")
    network_write_gi_b: Union[StrictFloat, StrictInt] = Field(alias="networkWriteGiB")
    peak_disk_gi_b: Union[StrictFloat, StrictInt] = Field(alias="peakDiskGiB")
    peak_memory_gi_b: Union[StrictFloat, StrictInt] = Field(alias="peakMemoryGiB")
    start_time: datetime = Field(alias="startTime")
    __properties: ClassVar[List[str]] = ["avgCPUPercentage", "avgDiskGiB", "avgMemoryGiB", "diskReadGiB", "diskReadIOps", "diskWriteGiB", "diskWriteIOps", "lastUpdateTime", "networkReadGiB", "networkWriteGiB", "peakDiskGiB", "peakMemoryGiB", "startTime"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ResourceStatistics from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ResourceStatistics from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "avgCPUPercentage": obj.get("avgCPUPercentage"),
            "avgDiskGiB": obj.get("avgDiskGiB"),
            "avgMemoryGiB": obj.get("avgMemoryGiB"),
            "diskReadGiB": obj.get("diskReadGiB"),
            "diskReadIOps": obj.get("diskReadIOps"),
            "diskWriteGiB": obj.get("diskWriteGiB"),
            "diskWriteIOps": obj.get("diskWriteIOps"),
            "lastUpdateTime": obj.get("lastUpdateTime"),
            "networkReadGiB": obj.get("networkReadGiB"),
            "networkWriteGiB": obj.get("networkWriteGiB"),
            "peakDiskGiB": obj.get("peakDiskGiB"),
            "peakMemoryGiB": obj.get("peakMemoryGiB"),
            "startTime": obj.get("startTime")
        })
        return _obj


