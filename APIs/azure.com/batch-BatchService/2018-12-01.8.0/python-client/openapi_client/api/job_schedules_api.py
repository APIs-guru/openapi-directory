# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2018-12-01.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.cloud_job_schedule import CloudJobSchedule
from openapi_client.models.cloud_job_schedule_list_result import CloudJobScheduleListResult
from openapi_client.models.job_schedule_add_parameter import JobScheduleAddParameter
from openapi_client.models.job_schedule_patch_parameter import JobSchedulePatchParameter
from openapi_client.models.job_schedule_update_parameter import JobScheduleUpdateParameter

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class JobSchedulesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def job_schedule_add(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        cloud_job_schedule: Annotated[JobScheduleAddParameter, Field(description="The job schedule to be added.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Adds a job schedule to the specified account.


        :param api_version: Client API Version. (required)
        :type api_version: str
        :param cloud_job_schedule: The job schedule to be added. (required)
        :type cloud_job_schedule: JobScheduleAddParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_add_serialize(
            api_version=api_version,
            cloud_job_schedule=cloud_job_schedule,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_add_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        cloud_job_schedule: Annotated[JobScheduleAddParameter, Field(description="The job schedule to be added.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Adds a job schedule to the specified account.


        :param api_version: Client API Version. (required)
        :type api_version: str
        :param cloud_job_schedule: The job schedule to be added. (required)
        :type cloud_job_schedule: JobScheduleAddParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_add_serialize(
            api_version=api_version,
            cloud_job_schedule=cloud_job_schedule,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_add_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        cloud_job_schedule: Annotated[JobScheduleAddParameter, Field(description="The job schedule to be added.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Adds a job schedule to the specified account.


        :param api_version: Client API Version. (required)
        :type api_version: str
        :param cloud_job_schedule: The job schedule to be added. (required)
        :type cloud_job_schedule: JobScheduleAddParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_add_serialize(
            api_version=api_version,
            cloud_job_schedule=cloud_job_schedule,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '201': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_add_serialize(
        self,
        api_version,
        cloud_job_schedule,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        # process the form parameters
        # process the body parameter
        if cloud_job_schedule is not None:
            _body_params = cloud_job_schedule


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json; odata=minimalmetadata'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/jobschedules',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_delete(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to delete.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Deletes a job schedule from the specified account.

        When you delete a job schedule, this also deletes all jobs and tasks under that schedule. When tasks are deleted, all the files in their working directories on the compute nodes are also deleted (the retention period is ignored). The job schedule statistics are no longer accessible once the job schedule is deleted, though they are still counted towards account lifetime statistics.

        :param job_schedule_id: The ID of the job schedule to delete. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_delete_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_delete_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to delete.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Deletes a job schedule from the specified account.

        When you delete a job schedule, this also deletes all jobs and tasks under that schedule. When tasks are deleted, all the files in their working directories on the compute nodes are also deleted (the retention period is ignored). The job schedule statistics are no longer accessible once the job schedule is deleted, though they are still counted towards account lifetime statistics.

        :param job_schedule_id: The ID of the job schedule to delete. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_delete_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_delete_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to delete.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes a job schedule from the specified account.

        When you delete a job schedule, this also deletes all jobs and tasks under that schedule. When tasks are deleted, all the files in their working directories on the compute nodes are also deleted (the retention period is ignored). The job schedule statistics are no longer accessible once the job schedule is deleted, though they are still counted towards account lifetime statistics.

        :param job_schedule_id: The ID of the job schedule to delete. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_delete_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_delete_serialize(
        self,
        job_schedule_id,
        api_version,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/jobschedules/{jobScheduleId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_disable(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to disable.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Disables a job schedule.

        No new jobs will be created until the job schedule is enabled again.

        :param job_schedule_id: The ID of the job schedule to disable. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_disable_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_disable_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to disable.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Disables a job schedule.

        No new jobs will be created until the job schedule is enabled again.

        :param job_schedule_id: The ID of the job schedule to disable. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_disable_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_disable_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to disable.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Disables a job schedule.

        No new jobs will be created until the job schedule is enabled again.

        :param job_schedule_id: The ID of the job schedule to disable. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_disable_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_disable_serialize(
        self,
        job_schedule_id,
        api_version,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/jobschedules/{jobScheduleId}/disable',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_enable(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to enable.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Enables a job schedule.


        :param job_schedule_id: The ID of the job schedule to enable. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_enable_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_enable_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to enable.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Enables a job schedule.


        :param job_schedule_id: The ID of the job schedule to enable. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_enable_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_enable_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to enable.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Enables a job schedule.


        :param job_schedule_id: The ID of the job schedule to enable. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_enable_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_enable_serialize(
        self,
        job_schedule_id,
        api_version,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/jobschedules/{jobScheduleId}/enable',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_exists(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule which you want to check.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Checks the specified job schedule exists.


        :param job_schedule_id: The ID of the job schedule which you want to check. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_exists_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_exists_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule which you want to check.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Checks the specified job schedule exists.


        :param job_schedule_id: The ID of the job schedule which you want to check. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_exists_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_exists_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule which you want to check.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Checks the specified job schedule exists.


        :param job_schedule_id: The ID of the job schedule which you want to check. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_exists_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '404': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_exists_serialize(
        self,
        job_schedule_id,
        api_version,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='HEAD',
            resource_path='/jobschedules/{jobScheduleId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_get(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to get.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause.")] = None,
        expand: Annotated[Optional[StrictStr], Field(description="An OData $expand clause.")] = None,
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CloudJobSchedule:
        """job_schedule_get

        Gets information about the specified job schedule.

        :param job_schedule_id: The ID of the job schedule to get. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param select: An OData $select clause.
        :type select: str
        :param expand: An OData $expand clause.
        :type expand: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_get_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            select=select,
            expand=expand,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CloudJobSchedule",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_get_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to get.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause.")] = None,
        expand: Annotated[Optional[StrictStr], Field(description="An OData $expand clause.")] = None,
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CloudJobSchedule]:
        """job_schedule_get

        Gets information about the specified job schedule.

        :param job_schedule_id: The ID of the job schedule to get. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param select: An OData $select clause.
        :type select: str
        :param expand: An OData $expand clause.
        :type expand: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_get_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            select=select,
            expand=expand,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CloudJobSchedule",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_get_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to get.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause.")] = None,
        expand: Annotated[Optional[StrictStr], Field(description="An OData $expand clause.")] = None,
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """job_schedule_get

        Gets information about the specified job schedule.

        :param job_schedule_id: The ID of the job schedule to get. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param select: An OData $select clause.
        :type select: str
        :param expand: An OData $expand clause.
        :type expand: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_get_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            select=select,
            expand=expand,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CloudJobSchedule",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_get_serialize(
        self,
        job_schedule_id,
        api_version,
        select,
        expand,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if expand is not None:
            
            _query_params.append(('$expand', expand))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/jobschedules/{jobScheduleId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_list(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause.")] = None,
        expand: Annotated[Optional[StrictStr], Field(description="An OData $expand clause.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.")] = None,
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CloudJobScheduleListResult:
        """Lists all of the job schedules in the specified account.


        :param api_version: Client API Version. (required)
        :type api_version: str
        :param filter: An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.
        :type filter: str
        :param select: An OData $select clause.
        :type select: str
        :param expand: An OData $expand clause.
        :type expand: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.
        :type maxresults: int
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_list_serialize(
            api_version=api_version,
            filter=filter,
            select=select,
            expand=expand,
            maxresults=maxresults,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CloudJobScheduleListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause.")] = None,
        expand: Annotated[Optional[StrictStr], Field(description="An OData $expand clause.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.")] = None,
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CloudJobScheduleListResult]:
        """Lists all of the job schedules in the specified account.


        :param api_version: Client API Version. (required)
        :type api_version: str
        :param filter: An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.
        :type filter: str
        :param select: An OData $select clause.
        :type select: str
        :param expand: An OData $expand clause.
        :type expand: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.
        :type maxresults: int
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_list_serialize(
            api_version=api_version,
            filter=filter,
            select=select,
            expand=expand,
            maxresults=maxresults,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CloudJobScheduleListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause.")] = None,
        expand: Annotated[Optional[StrictStr], Field(description="An OData $expand clause.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.")] = None,
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Lists all of the job schedules in the specified account.


        :param api_version: Client API Version. (required)
        :type api_version: str
        :param filter: An OData $filter clause. For more information on constructing this filter, see https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-job-schedules.
        :type filter: str
        :param select: An OData $select clause.
        :type select: str
        :param expand: An OData $expand clause.
        :type expand: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.
        :type maxresults: int
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_list_serialize(
            api_version=api_version,
            filter=filter,
            select=select,
            expand=expand,
            maxresults=maxresults,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CloudJobScheduleListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_list_serialize(
        self,
        api_version,
        filter,
        select,
        expand,
        maxresults,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if expand is not None:
            
            _query_params.append(('$expand', expand))
            
        if maxresults is not None:
            
            _query_params.append(('maxresults', maxresults))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/jobschedules',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_patch(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to update.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        job_schedule_patch_parameter: Annotated[JobSchedulePatchParameter, Field(description="The parameters for the request.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Updates the properties of the specified job schedule.

        This replaces only the job schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.

        :param job_schedule_id: The ID of the job schedule to update. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param job_schedule_patch_parameter: The parameters for the request. (required)
        :type job_schedule_patch_parameter: JobSchedulePatchParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_patch_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            job_schedule_patch_parameter=job_schedule_patch_parameter,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_patch_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to update.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        job_schedule_patch_parameter: Annotated[JobSchedulePatchParameter, Field(description="The parameters for the request.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Updates the properties of the specified job schedule.

        This replaces only the job schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.

        :param job_schedule_id: The ID of the job schedule to update. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param job_schedule_patch_parameter: The parameters for the request. (required)
        :type job_schedule_patch_parameter: JobSchedulePatchParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_patch_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            job_schedule_patch_parameter=job_schedule_patch_parameter,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_patch_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to update.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        job_schedule_patch_parameter: Annotated[JobSchedulePatchParameter, Field(description="The parameters for the request.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Updates the properties of the specified job schedule.

        This replaces only the job schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.

        :param job_schedule_id: The ID of the job schedule to update. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param job_schedule_patch_parameter: The parameters for the request. (required)
        :type job_schedule_patch_parameter: JobSchedulePatchParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_patch_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            job_schedule_patch_parameter=job_schedule_patch_parameter,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_patch_serialize(
        self,
        job_schedule_id,
        api_version,
        job_schedule_patch_parameter,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter
        if job_schedule_patch_parameter is not None:
            _body_params = job_schedule_patch_parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json; odata=minimalmetadata'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PATCH',
            resource_path='/jobschedules/{jobScheduleId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_terminate(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to terminates.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Terminates a job schedule.


        :param job_schedule_id: The ID of the job schedule to terminates. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_terminate_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_terminate_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to terminates.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Terminates a job schedule.


        :param job_schedule_id: The ID of the job schedule to terminates. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_terminate_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_terminate_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to terminates.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Terminates a job schedule.


        :param job_schedule_id: The ID of the job schedule to terminates. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_terminate_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_terminate_serialize(
        self,
        job_schedule_id,
        api_version,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/jobschedules/{jobScheduleId}/terminate',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def job_schedule_update(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to update.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        job_schedule_update_parameter: Annotated[JobScheduleUpdateParameter, Field(description="The parameters for the request.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Updates the properties of the specified job schedule.

        This fully replaces all the updatable properties of the job schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.

        :param job_schedule_id: The ID of the job schedule to update. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param job_schedule_update_parameter: The parameters for the request. (required)
        :type job_schedule_update_parameter: JobScheduleUpdateParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_update_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            job_schedule_update_parameter=job_schedule_update_parameter,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def job_schedule_update_with_http_info(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to update.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        job_schedule_update_parameter: Annotated[JobScheduleUpdateParameter, Field(description="The parameters for the request.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Updates the properties of the specified job schedule.

        This fully replaces all the updatable properties of the job schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.

        :param job_schedule_id: The ID of the job schedule to update. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param job_schedule_update_parameter: The parameters for the request. (required)
        :type job_schedule_update_parameter: JobScheduleUpdateParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_update_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            job_schedule_update_parameter=job_schedule_update_parameter,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def job_schedule_update_without_preload_content(
        self,
        job_schedule_id: Annotated[StrictStr, Field(description="The ID of the job schedule to update.")],
        api_version: Annotated[StrictStr, Field(description="Client API Version.")],
        job_schedule_update_parameter: Annotated[JobScheduleUpdateParameter, Field(description="The parameters for the request.")],
        timeout: Annotated[Optional[StrictInt], Field(description="The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.")] = None,
        client_request_id: Annotated[Optional[StrictStr], Field(description="The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.")] = None,
        return_client_request_id: Annotated[Optional[StrictBool], Field(description="Whether the server should return the client-request-id in the response.")] = None,
        ocp_date: Annotated[Optional[StrictStr], Field(description="The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.")] = None,
        if_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.")] = None,
        if_none_match: Annotated[Optional[StrictStr], Field(description="An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.")] = None,
        if_modified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.")] = None,
        if_unmodified_since: Annotated[Optional[StrictStr], Field(description="A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Updates the properties of the specified job schedule.

        This fully replaces all the updatable properties of the job schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.

        :param job_schedule_id: The ID of the job schedule to update. (required)
        :type job_schedule_id: str
        :param api_version: Client API Version. (required)
        :type api_version: str
        :param job_schedule_update_parameter: The parameters for the request. (required)
        :type job_schedule_update_parameter: JobScheduleUpdateParameter
        :param timeout: The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
        :type timeout: int
        :param client_request_id: The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
        :type client_request_id: str
        :param return_client_request_id: Whether the server should return the client-request-id in the response.
        :type return_client_request_id: bool
        :param ocp_date: The time the request was issued. Client libraries typically set this to the current system clock time; set it explicitly if you are calling the REST API directly.
        :type ocp_date: str
        :param if_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service exactly matches the value specified by the client.
        :type if_match: str
        :param if_none_match: An ETag value associated with the version of the resource known to the client. The operation will be performed only if the resource's current ETag on the service does not match the value specified by the client.
        :type if_none_match: str
        :param if_modified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has been modified since the specified time.
        :type if_modified_since: str
        :param if_unmodified_since: A timestamp indicating the last modified time of the resource known to the client. The operation will be performed only if the resource on the service has not been modified since the specified time.
        :type if_unmodified_since: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._job_schedule_update_serialize(
            job_schedule_id=job_schedule_id,
            api_version=api_version,
            job_schedule_update_parameter=job_schedule_update_parameter,
            timeout=timeout,
            client_request_id=client_request_id,
            return_client_request_id=return_client_request_id,
            ocp_date=ocp_date,
            if_match=if_match,
            if_none_match=if_none_match,
            if_modified_since=if_modified_since,
            if_unmodified_since=if_unmodified_since,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _job_schedule_update_serialize(
        self,
        job_schedule_id,
        api_version,
        job_schedule_update_parameter,
        timeout,
        client_request_id,
        return_client_request_id,
        ocp_date,
        if_match,
        if_none_match,
        if_modified_since,
        if_unmodified_since,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if job_schedule_id is not None:
            _path_params['jobScheduleId'] = job_schedule_id
        # process the query parameters
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        if client_request_id is not None:
            _header_params['client-request-id'] = client_request_id
        if return_client_request_id is not None:
            _header_params['return-client-request-id'] = return_client_request_id
        if ocp_date is not None:
            _header_params['ocp-date'] = ocp_date
        if if_match is not None:
            _header_params['If-Match'] = if_match
        if if_none_match is not None:
            _header_params['If-None-Match'] = if_none_match
        if if_modified_since is not None:
            _header_params['If-Modified-Since'] = if_modified_since
        if if_unmodified_since is not None:
            _header_params['If-Unmodified-Since'] = if_unmodified_since
        # process the form parameters
        # process the body parameter
        if job_schedule_update_parameter is not None:
            _body_params = job_schedule_update_parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json; odata=minimalmetadata'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'api_key', 
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/jobschedules/{jobScheduleId}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


