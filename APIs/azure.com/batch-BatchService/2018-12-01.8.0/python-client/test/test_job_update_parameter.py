# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2018-12-01.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_update_parameter import JobUpdateParameter

class TestJobUpdateParameter(unittest.TestCase):
    """JobUpdateParameter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobUpdateParameter:
        """Test JobUpdateParameter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobUpdateParameter`
        """
        model = JobUpdateParameter()
        if include_optional:
            return JobUpdateParameter(
                constraints = openapi_client.models.the_execution_constraints_for_a_job/.The execution constraints for a job.(
                    max_task_retry_count = 56, 
                    max_wall_clock_time = '', ),
                metadata = [
                    openapi_client.models.a_name_value_pair_associated_with_a_batch_service_resource/.A name-value pair associated with a Batch service resource.(
                        name = '', 
                        value = '', )
                    ],
                on_all_tasks_complete = 'noaction',
                pool_info = openapi_client.models.specifies_how_a_job_should_be_assigned_to_a_pool/.Specifies how a job should be assigned to a pool.(
                    auto_pool_specification = openapi_client.models.specifies_characteristics_for_a_temporary_'auto_pool'/_the_batch_service_will_create_this_auto_pool_when_the_job_is_submitted/.Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool when the job is submitted.(
                        auto_pool_id_prefix = '', 
                        keep_alive = True, 
                        pool = openapi_client.models.specification_for_creating_a_new_pool/.Specification for creating a new pool.(
                            application_licenses = [
                                ''
                                ], 
                            application_package_references = [
                                openapi_client.models.a_reference_to_an_application_package_to_be_deployed_to_compute_nodes/.A reference to an application package to be deployed to compute nodes.(
                                    application_id = '', 
                                    version = '', )
                                ], 
                            auto_scale_evaluation_interval = '', 
                            auto_scale_formula = '', 
                            certificate_references = [
                                openapi_client.models.a_reference_to_a_certificate_to_be_installed_on_compute_nodes_in_a_pool/.A reference to a certificate to be installed on compute nodes in a pool.(
                                    store_location = 'currentuser', 
                                    store_name = '', 
                                    thumbprint = '', 
                                    thumbprint_algorithm = '', 
                                    visibility = [
                                        'starttask'
                                        ], )
                                ], 
                            cloud_service_configuration = openapi_client.models.the_configuration_for_nodes_in_a_pool_based_on_the_azure_cloud_services_platform/.The configuration for nodes in a pool based on the Azure Cloud Services platform.(
                                os_family = '', 
                                os_version = '', ), 
                            display_name = '', 
                            enable_auto_scale = True, 
                            enable_inter_node_communication = True, 
                            max_tasks_per_node = 56, 
                            metadata = [
                                openapi_client.models.a_name_value_pair_associated_with_a_batch_service_resource/.A name-value pair associated with a Batch service resource.(
                                    name = '', 
                                    value = '', )
                                ], 
                            network_configuration = openapi_client.models.network_configuration.NetworkConfiguration(
                                dynamic_v_net_assignment_scope = 'none', 
                                endpoint_configuration = openapi_client.models.the_endpoint_configuration_for_a_pool/.The endpoint configuration for a pool.(
                                    inbound_nat_pools = [
                                        openapi_client.models.a_inbound_nat_pool_that_can_be_used_to_address_specific_ports_on_compute_nodes_in_a_batch_pool_externally/.A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.(
                                            backend_port = 56, 
                                            frontend_port_range_end = 56, 
                                            frontend_port_range_start = 56, 
                                            name = '', 
                                            network_security_group_rules = [
                                                openapi_client.models.a_network_security_group_rule_to_apply_to_an_inbound_endpoint/.A network security group rule to apply to an inbound endpoint.(
                                                    access = 'allow', 
                                                    priority = 56, 
                                                    source_address_prefix = '', )
                                                ], 
                                            protocol = 'tcp', )
                                        ], ), 
                                subnet_id = '', ), 
                            resize_timeout = '', 
                            start_task = openapi_client.models.a_task_which_is_run_when_a_compute_node_joins_a_pool_in_the_azure_batch_service,_or_when_the_compute_node_is_rebooted_or_reimaged/.A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.(
                                command_line = '', 
                                container_settings = openapi_client.models.the_container_settings_for_a_task/.The container settings for a task.(
                                    container_run_options = '', 
                                    image_name = '', 
                                    registry = openapi_client.models.a_private_container_registry/.A private container registry.(
                                        password = '', 
                                        registry_server = '', 
                                        username = '', ), ), 
                                environment_settings = [
                                    openapi_client.models.an_environment_variable_to_be_set_on_a_task_process/.An environment variable to be set on a task process.(
                                        name = '', 
                                        value = '', )
                                    ], 
                                max_task_retry_count = 56, 
                                resource_files = [
                                    openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a compute node.(
                                        auto_storage_container_name = '', 
                                        blob_prefix = '', 
                                        file_mode = '', 
                                        file_path = '', 
                                        http_url = '', 
                                        storage_container_url = '', )
                                    ], 
                                user_identity = openapi_client.models.the_definition_of_the_user_identity_under_which_the_task_is_run/.The definition of the user identity under which the task is run.(
                                    auto_user = openapi_client.models.specifies_the_parameters_for_the_auto_user_that_runs_a_task_on_the_batch_service/.Specifies the parameters for the auto user that runs a task on the Batch service.(
                                        elevation_level = 'nonadmin', 
                                        scope = 'task', ), 
                                    username = '', ), 
                                wait_for_success = True, ), 
                            target_dedicated_nodes = 56, 
                            target_low_priority_nodes = 56, 
                            task_scheduling_policy = openapi_client.models.specifies_how_tasks_should_be_distributed_across_compute_nodes/.Specifies how tasks should be distributed across compute nodes.(
                                node_fill_type = 'spread', ), 
                            user_accounts = [
                                openapi_client.models.properties_used_to_create_a_user_used_to_execute_tasks_on_an_azure_batch_node/.Properties used to create a user used to execute tasks on an Azure Batch node.(
                                    linux_user_configuration = openapi_client.models.properties_used_to_create_a_user_account_on_a_linux_node/.Properties used to create a user account on a Linux node.(
                                        gid = 56, 
                                        ssh_private_key = '', 
                                        uid = 56, ), 
                                    name = '', 
                                    password = '', 
                                    windows_user_configuration = openapi_client.models.properties_used_to_create_a_user_account_on_a_windows_node/.Properties used to create a user account on a Windows node.(
                                        login_mode = 'batch', ), )
                                ], 
                            virtual_machine_configuration = openapi_client.models.the_configuration_for_compute_nodes_in_a_pool_based_on_the_azure_virtual_machines_infrastructure/.The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.(
                                container_configuration = openapi_client.models.the_configuration_for_container_enabled_pools/.The configuration for container-enabled pools.(
                                    container_image_names = [
                                        ''
                                        ], 
                                    container_registries = [
                                        openapi_client.models.a_private_container_registry/.A private container registry.(
                                            password = '', 
                                            registry_server = '', 
                                            username = '', )
                                        ], 
                                    type = 'dockerCompatible', ), 
                                data_disks = [
                                    openapi_client.models.settings_which_will_be_used_by_the_data_disks_associated_to_compute_nodes_in_the_pool/.Settings which will be used by the data disks associated to compute nodes in the pool.(
                                        caching = 'none', 
                                        disk_size_gb = 56, 
                                        lun = 56, 
                                        storage_account_type = 'standard_lrs', )
                                    ], 
                                image_reference = openapi_client.models.a_reference_to_an_azure_virtual_machines_marketplace_image_or_a_custom_azure_virtual_machine_image/_to_get_the_list_of_all_azure_marketplace_image_references_verified_by_azure_batch,_see_the_'list_node_agent_skus'_operation/.A reference to an Azure Virtual Machines Marketplace image or a custom Azure Virtual Machine image. To get the list of all Azure Marketplace image references verified by Azure Batch, see the 'List node agent SKUs' operation.(
                                    offer = '', 
                                    publisher = '', 
                                    sku = '', 
                                    version = '', 
                                    virtual_machine_image_id = '', ), 
                                license_type = '', 
                                node_agent_skuid = '', 
                                windows_configuration = openapi_client.models.windows_operating_system_settings_to_apply_to_the_virtual_machine/.Windows operating system settings to apply to the virtual machine.(
                                    enable_automatic_updates = True, ), ), 
                            vm_size = '', ), 
                        pool_lifetime_option = 'jobschedule', ), 
                    pool_id = '', ),
                priority = 56
            )
        else:
            return JobUpdateParameter(
                pool_info = openapi_client.models.specifies_how_a_job_should_be_assigned_to_a_pool/.Specifies how a job should be assigned to a pool.(
                    auto_pool_specification = openapi_client.models.specifies_characteristics_for_a_temporary_'auto_pool'/_the_batch_service_will_create_this_auto_pool_when_the_job_is_submitted/.Specifies characteristics for a temporary 'auto pool'. The Batch service will create this auto pool when the job is submitted.(
                        auto_pool_id_prefix = '', 
                        keep_alive = True, 
                        pool = openapi_client.models.specification_for_creating_a_new_pool/.Specification for creating a new pool.(
                            application_licenses = [
                                ''
                                ], 
                            application_package_references = [
                                openapi_client.models.a_reference_to_an_application_package_to_be_deployed_to_compute_nodes/.A reference to an application package to be deployed to compute nodes.(
                                    application_id = '', 
                                    version = '', )
                                ], 
                            auto_scale_evaluation_interval = '', 
                            auto_scale_formula = '', 
                            certificate_references = [
                                openapi_client.models.a_reference_to_a_certificate_to_be_installed_on_compute_nodes_in_a_pool/.A reference to a certificate to be installed on compute nodes in a pool.(
                                    store_location = 'currentuser', 
                                    store_name = '', 
                                    thumbprint = '', 
                                    thumbprint_algorithm = '', 
                                    visibility = [
                                        'starttask'
                                        ], )
                                ], 
                            cloud_service_configuration = openapi_client.models.the_configuration_for_nodes_in_a_pool_based_on_the_azure_cloud_services_platform/.The configuration for nodes in a pool based on the Azure Cloud Services platform.(
                                os_family = '', 
                                os_version = '', ), 
                            display_name = '', 
                            enable_auto_scale = True, 
                            enable_inter_node_communication = True, 
                            max_tasks_per_node = 56, 
                            metadata = [
                                openapi_client.models.a_name_value_pair_associated_with_a_batch_service_resource/.A name-value pair associated with a Batch service resource.(
                                    name = '', 
                                    value = '', )
                                ], 
                            network_configuration = openapi_client.models.network_configuration.NetworkConfiguration(
                                dynamic_v_net_assignment_scope = 'none', 
                                endpoint_configuration = openapi_client.models.the_endpoint_configuration_for_a_pool/.The endpoint configuration for a pool.(
                                    inbound_nat_pools = [
                                        openapi_client.models.a_inbound_nat_pool_that_can_be_used_to_address_specific_ports_on_compute_nodes_in_a_batch_pool_externally/.A inbound NAT pool that can be used to address specific ports on compute nodes in a Batch pool externally.(
                                            backend_port = 56, 
                                            frontend_port_range_end = 56, 
                                            frontend_port_range_start = 56, 
                                            name = '', 
                                            network_security_group_rules = [
                                                openapi_client.models.a_network_security_group_rule_to_apply_to_an_inbound_endpoint/.A network security group rule to apply to an inbound endpoint.(
                                                    access = 'allow', 
                                                    priority = 56, 
                                                    source_address_prefix = '', )
                                                ], 
                                            protocol = 'tcp', )
                                        ], ), 
                                subnet_id = '', ), 
                            resize_timeout = '', 
                            start_task = openapi_client.models.a_task_which_is_run_when_a_compute_node_joins_a_pool_in_the_azure_batch_service,_or_when_the_compute_node_is_rebooted_or_reimaged/.A task which is run when a compute node joins a pool in the Azure Batch service, or when the compute node is rebooted or reimaged.(
                                command_line = '', 
                                container_settings = openapi_client.models.the_container_settings_for_a_task/.The container settings for a task.(
                                    container_run_options = '', 
                                    image_name = '', 
                                    registry = openapi_client.models.a_private_container_registry/.A private container registry.(
                                        password = '', 
                                        registry_server = '', 
                                        username = '', ), ), 
                                environment_settings = [
                                    openapi_client.models.an_environment_variable_to_be_set_on_a_task_process/.An environment variable to be set on a task process.(
                                        name = '', 
                                        value = '', )
                                    ], 
                                max_task_retry_count = 56, 
                                resource_files = [
                                    openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a compute node.(
                                        auto_storage_container_name = '', 
                                        blob_prefix = '', 
                                        file_mode = '', 
                                        file_path = '', 
                                        http_url = '', 
                                        storage_container_url = '', )
                                    ], 
                                user_identity = openapi_client.models.the_definition_of_the_user_identity_under_which_the_task_is_run/.The definition of the user identity under which the task is run.(
                                    auto_user = openapi_client.models.specifies_the_parameters_for_the_auto_user_that_runs_a_task_on_the_batch_service/.Specifies the parameters for the auto user that runs a task on the Batch service.(
                                        elevation_level = 'nonadmin', 
                                        scope = 'task', ), 
                                    username = '', ), 
                                wait_for_success = True, ), 
                            target_dedicated_nodes = 56, 
                            target_low_priority_nodes = 56, 
                            task_scheduling_policy = openapi_client.models.specifies_how_tasks_should_be_distributed_across_compute_nodes/.Specifies how tasks should be distributed across compute nodes.(
                                node_fill_type = 'spread', ), 
                            user_accounts = [
                                openapi_client.models.properties_used_to_create_a_user_used_to_execute_tasks_on_an_azure_batch_node/.Properties used to create a user used to execute tasks on an Azure Batch node.(
                                    linux_user_configuration = openapi_client.models.properties_used_to_create_a_user_account_on_a_linux_node/.Properties used to create a user account on a Linux node.(
                                        gid = 56, 
                                        ssh_private_key = '', 
                                        uid = 56, ), 
                                    name = '', 
                                    password = '', 
                                    windows_user_configuration = openapi_client.models.properties_used_to_create_a_user_account_on_a_windows_node/.Properties used to create a user account on a Windows node.(
                                        login_mode = 'batch', ), )
                                ], 
                            virtual_machine_configuration = openapi_client.models.the_configuration_for_compute_nodes_in_a_pool_based_on_the_azure_virtual_machines_infrastructure/.The configuration for compute nodes in a pool based on the Azure Virtual Machines infrastructure.(
                                container_configuration = openapi_client.models.the_configuration_for_container_enabled_pools/.The configuration for container-enabled pools.(
                                    container_image_names = [
                                        ''
                                        ], 
                                    container_registries = [
                                        openapi_client.models.a_private_container_registry/.A private container registry.(
                                            password = '', 
                                            registry_server = '', 
                                            username = '', )
                                        ], 
                                    type = 'dockerCompatible', ), 
                                data_disks = [
                                    openapi_client.models.settings_which_will_be_used_by_the_data_disks_associated_to_compute_nodes_in_the_pool/.Settings which will be used by the data disks associated to compute nodes in the pool.(
                                        caching = 'none', 
                                        disk_size_gb = 56, 
                                        lun = 56, 
                                        storage_account_type = 'standard_lrs', )
                                    ], 
                                image_reference = openapi_client.models.a_reference_to_an_azure_virtual_machines_marketplace_image_or_a_custom_azure_virtual_machine_image/_to_get_the_list_of_all_azure_marketplace_image_references_verified_by_azure_batch,_see_the_'list_node_agent_skus'_operation/.A reference to an Azure Virtual Machines Marketplace image or a custom Azure Virtual Machine image. To get the list of all Azure Marketplace image references verified by Azure Batch, see the 'List node agent SKUs' operation.(
                                    offer = '', 
                                    publisher = '', 
                                    sku = '', 
                                    version = '', 
                                    virtual_machine_image_id = '', ), 
                                license_type = '', 
                                node_agent_skuid = '', 
                                windows_configuration = openapi_client.models.windows_operating_system_settings_to_apply_to_the_virtual_machine/.Windows operating system settings to apply to the virtual machine.(
                                    enable_automatic_updates = True, ), ), 
                            vm_size = '', ), 
                        pool_lifetime_option = 'jobschedule', ), 
                    pool_id = '', ),
        )
        """

    def testJobUpdateParameter(self):
        """Test JobUpdateParameter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
