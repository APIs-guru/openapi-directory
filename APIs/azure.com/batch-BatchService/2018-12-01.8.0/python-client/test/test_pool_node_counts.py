# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2018-12-01.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pool_node_counts import PoolNodeCounts

class TestPoolNodeCounts(unittest.TestCase):
    """PoolNodeCounts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PoolNodeCounts:
        """Test PoolNodeCounts
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PoolNodeCounts`
        """
        model = PoolNodeCounts()
        if include_optional:
            return PoolNodeCounts(
                dedicated = openapi_client.models.the_number_of_nodes_in_each_node_state/.The number of nodes in each node state.(
                    creating = 56, 
                    idle = 56, 
                    leaving_pool = 56, 
                    offline = 56, 
                    preempted = 56, 
                    rebooting = 56, 
                    reimaging = 56, 
                    running = 56, 
                    start_task_failed = 56, 
                    starting = 56, 
                    total = 56, 
                    unknown = 56, 
                    unusable = 56, 
                    waiting_for_start_task = 56, ),
                low_priority = openapi_client.models.the_number_of_nodes_in_each_node_state/.The number of nodes in each node state.(
                    creating = 56, 
                    idle = 56, 
                    leaving_pool = 56, 
                    offline = 56, 
                    preempted = 56, 
                    rebooting = 56, 
                    reimaging = 56, 
                    running = 56, 
                    start_task_failed = 56, 
                    starting = 56, 
                    total = 56, 
                    unknown = 56, 
                    unusable = 56, 
                    waiting_for_start_task = 56, ),
                pool_id = ''
            )
        else:
            return PoolNodeCounts(
                pool_id = '',
        )
        """

    def testPoolNodeCounts(self):
        """Test PoolNodeCounts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
