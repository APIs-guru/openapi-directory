# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2018-12-01.8.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_release_task import JobReleaseTask

class TestJobReleaseTask(unittest.TestCase):
    """JobReleaseTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobReleaseTask:
        """Test JobReleaseTask
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobReleaseTask`
        """
        model = JobReleaseTask()
        if include_optional:
            return JobReleaseTask(
                command_line = '',
                container_settings = openapi_client.models.the_container_settings_for_a_task/.The container settings for a task.(
                    container_run_options = '', 
                    image_name = '', 
                    registry = openapi_client.models.a_private_container_registry/.A private container registry.(
                        password = '', 
                        registry_server = '', 
                        username = '', ), ),
                environment_settings = [
                    openapi_client.models.an_environment_variable_to_be_set_on_a_task_process/.An environment variable to be set on a task process.(
                        name = '', 
                        value = '', )
                    ],
                id = '',
                max_wall_clock_time = '',
                resource_files = [
                    openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a compute node.(
                        auto_storage_container_name = '', 
                        blob_prefix = '', 
                        file_mode = '', 
                        file_path = '', 
                        http_url = '', 
                        storage_container_url = '', )
                    ],
                retention_time = '',
                user_identity = openapi_client.models.the_definition_of_the_user_identity_under_which_the_task_is_run/.The definition of the user identity under which the task is run.(
                    auto_user = openapi_client.models.specifies_the_parameters_for_the_auto_user_that_runs_a_task_on_the_batch_service/.Specifies the parameters for the auto user that runs a task on the Batch service.(
                        elevation_level = 'nonadmin', 
                        scope = 'task', ), 
                    username = '', )
            )
        else:
            return JobReleaseTask(
                command_line = '',
        )
        """

    def testJobReleaseTask(self):
        """Test JobReleaseTask"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
