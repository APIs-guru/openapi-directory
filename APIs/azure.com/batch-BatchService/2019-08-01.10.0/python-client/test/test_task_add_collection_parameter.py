# coding: utf-8

"""
    BatchService

    A client for issuing REST requests to the Azure Batch service.

    The version of the OpenAPI document: 2019-08-01.10.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.task_add_collection_parameter import TaskAddCollectionParameter

class TestTaskAddCollectionParameter(unittest.TestCase):
    """TaskAddCollectionParameter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskAddCollectionParameter:
        """Test TaskAddCollectionParameter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskAddCollectionParameter`
        """
        model = TaskAddCollectionParameter()
        if include_optional:
            return TaskAddCollectionParameter(
                value = [
                    openapi_client.models.an_azure_batch_task_to_add/.An Azure Batch Task to add.(
                        affinity_info = openapi_client.models.a_locality_hint_that_can_be_used_by_the_batch_service_to_select_a_compute_node_on_which_to_start_a_task/.A locality hint that can be used by the Batch service to select a Compute Node on which to start a Task.(
                            affinity_id = '', ), 
                        application_package_references = [
                            openapi_client.models.a_reference_to_an_package_to_be_deployed_to_compute_nodes/.A reference to an Package to be deployed to Compute Nodes.(
                                application_id = '', 
                                version = '', )
                            ], 
                        authentication_token_settings = openapi_client.models.the_settings_for_an_authentication_token_that_the_task_can_use_to_perform_batch_service_operations/.The settings for an authentication token that the Task can use to perform Batch service operations.(
                            access = [
                                'job'
                                ], ), 
                        command_line = '', 
                        constraints = openapi_client.models.execution_constraints_to_apply_to_a_task/.Execution constraints to apply to a Task.(
                            max_task_retry_count = 56, 
                            max_wall_clock_time = '', 
                            retention_time = '', ), 
                        container_settings = openapi_client.models.the_container_settings_for_a_task/.The container settings for a Task.(
                            container_run_options = '', 
                            image_name = '', 
                            registry = openapi_client.models.a_private_container_registry/.A private container registry.(
                                password = '', 
                                registry_server = '', 
                                username = '', ), 
                            working_directory = 'taskWorkingDirectory', ), 
                        depends_on = openapi_client.models.specifies_any_dependencies_of_a_task/_any_task_that_is_explicitly_specified_or_within_a_dependency_range_must_complete_before_the_dependant_task_will_be_scheduled/.Specifies any dependencies of a Task. Any Task that is explicitly specified or within a dependency range must complete before the dependant Task will be scheduled.(
                            task_id_ranges = [
                                openapi_client.models.a_range_of_task_ids_that_a_task_can_depend_on/_all_tasks_with_ids_in_the_range_must_complete_successfully_before_the_dependent_task_can_be_scheduled/.A range of Task IDs that a Task can depend on. All Tasks with IDs in the range must complete successfully before the dependent Task can be scheduled.(
                                    end = 56, 
                                    start = 56, )
                                ], 
                            task_ids = [
                                ''
                                ], ), 
                        display_name = '', 
                        environment_settings = [
                            openapi_client.models.an_environment_variable_to_be_set_on_a_task_process/.An environment variable to be set on a Task process.(
                                name = '', 
                                value = '', )
                            ], 
                        exit_conditions = openapi_client.models.specifies_how_the_batch_service_should_respond_when_the_task_completes/.Specifies how the Batch service should respond when the Task completes.(
                            default = openapi_client.models.specifies_how_the_batch_service_responds_to_a_particular_exit_condition/.Specifies how the Batch service responds to a particular exit condition.(
                                dependency_action = 'satisfy', 
                                job_action = 'none', ), 
                            exit_code_ranges = [
                                openapi_client.models.a_range_of_exit_codes_and_how_the_batch_service_should_respond_to_exit_codes_within_that_range/.A range of exit codes and how the Batch service should respond to exit codes within that range.(
                                    end = 56, 
                                    exit_options = openapi_client.models.specifies_how_the_batch_service_responds_to_a_particular_exit_condition/.Specifies how the Batch service responds to a particular exit condition.(
                                        dependency_action = 'satisfy', 
                                        job_action = 'none', ), 
                                    start = 56, )
                                ], 
                            exit_codes = [
                                openapi_client.models.how_the_batch_service_should_respond_if_a_task_exits_with_a_particular_exit_code/.How the Batch service should respond if a Task exits with a particular exit code.(
                                    code = 56, 
                                    exit_options = , )
                                ], 
                            file_upload_error = , 
                            pre_processing_error = , ), 
                        id = '', 
                        multi_instance_settings = openapi_client.models.settings_which_specify_how_to_run_a_multi_instance_task/.Settings which specify how to run a multi-instance Task.(
                            common_resource_files = [
                                openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a Compute Node.(
                                    auto_storage_container_name = '', 
                                    blob_prefix = '', 
                                    file_mode = '', 
                                    file_path = '', 
                                    http_url = '', 
                                    storage_container_url = '', )
                                ], 
                            coordination_command_line = '', 
                            number_of_instances = 56, ), 
                        output_files = [
                            openapi_client.models.a_specification_for_uploading_files_from_an_azure_batch_compute_node_to_another_location_after_the_batch_service_has_finished_executing_the_task_process/.A specification for uploading files from an Azure Batch Compute Node to another location after the Batch service has finished executing the Task process.(
                                destination = openapi_client.models.the_destination_to_which_a_file_should_be_uploaded/.The destination to which a file should be uploaded.(
                                    container = openapi_client.models.specifies_a_file_upload_destination_within_an_azure_blob_storage_container/.Specifies a file upload destination within an Azure blob storage container.(
                                        container_url = '', 
                                        path = '', ), ), 
                                file_pattern = '', 
                                upload_options = openapi_client.models.details_about_an_output_file_upload_operation,_including_under_what_conditions_to_perform_the_upload/.Details about an output file upload operation, including under what conditions to perform the upload.(
                                    upload_condition = 'tasksuccess', ), )
                            ], 
                        resource_files = [
                            openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a Compute Node.(
                                auto_storage_container_name = '', 
                                blob_prefix = '', 
                                file_mode = '', 
                                file_path = '', 
                                http_url = '', 
                                storage_container_url = '', )
                            ], 
                        user_identity = openapi_client.models.the_definition_of_the_user_identity_under_which_the_task_is_run/.The definition of the user identity under which the Task is run.(
                            auto_user = openapi_client.models.specifies_the_parameters_for_the_auto_user_that_runs_a_task_on_the_batch_service/.Specifies the parameters for the auto user that runs a Task on the Batch service.(
                                elevation_level = 'nonadmin', 
                                scope = 'task', ), 
                            username = '', ), )
                    ]
            )
        else:
            return TaskAddCollectionParameter(
                value = [
                    openapi_client.models.an_azure_batch_task_to_add/.An Azure Batch Task to add.(
                        affinity_info = openapi_client.models.a_locality_hint_that_can_be_used_by_the_batch_service_to_select_a_compute_node_on_which_to_start_a_task/.A locality hint that can be used by the Batch service to select a Compute Node on which to start a Task.(
                            affinity_id = '', ), 
                        application_package_references = [
                            openapi_client.models.a_reference_to_an_package_to_be_deployed_to_compute_nodes/.A reference to an Package to be deployed to Compute Nodes.(
                                application_id = '', 
                                version = '', )
                            ], 
                        authentication_token_settings = openapi_client.models.the_settings_for_an_authentication_token_that_the_task_can_use_to_perform_batch_service_operations/.The settings for an authentication token that the Task can use to perform Batch service operations.(
                            access = [
                                'job'
                                ], ), 
                        command_line = '', 
                        constraints = openapi_client.models.execution_constraints_to_apply_to_a_task/.Execution constraints to apply to a Task.(
                            max_task_retry_count = 56, 
                            max_wall_clock_time = '', 
                            retention_time = '', ), 
                        container_settings = openapi_client.models.the_container_settings_for_a_task/.The container settings for a Task.(
                            container_run_options = '', 
                            image_name = '', 
                            registry = openapi_client.models.a_private_container_registry/.A private container registry.(
                                password = '', 
                                registry_server = '', 
                                username = '', ), 
                            working_directory = 'taskWorkingDirectory', ), 
                        depends_on = openapi_client.models.specifies_any_dependencies_of_a_task/_any_task_that_is_explicitly_specified_or_within_a_dependency_range_must_complete_before_the_dependant_task_will_be_scheduled/.Specifies any dependencies of a Task. Any Task that is explicitly specified or within a dependency range must complete before the dependant Task will be scheduled.(
                            task_id_ranges = [
                                openapi_client.models.a_range_of_task_ids_that_a_task_can_depend_on/_all_tasks_with_ids_in_the_range_must_complete_successfully_before_the_dependent_task_can_be_scheduled/.A range of Task IDs that a Task can depend on. All Tasks with IDs in the range must complete successfully before the dependent Task can be scheduled.(
                                    end = 56, 
                                    start = 56, )
                                ], 
                            task_ids = [
                                ''
                                ], ), 
                        display_name = '', 
                        environment_settings = [
                            openapi_client.models.an_environment_variable_to_be_set_on_a_task_process/.An environment variable to be set on a Task process.(
                                name = '', 
                                value = '', )
                            ], 
                        exit_conditions = openapi_client.models.specifies_how_the_batch_service_should_respond_when_the_task_completes/.Specifies how the Batch service should respond when the Task completes.(
                            default = openapi_client.models.specifies_how_the_batch_service_responds_to_a_particular_exit_condition/.Specifies how the Batch service responds to a particular exit condition.(
                                dependency_action = 'satisfy', 
                                job_action = 'none', ), 
                            exit_code_ranges = [
                                openapi_client.models.a_range_of_exit_codes_and_how_the_batch_service_should_respond_to_exit_codes_within_that_range/.A range of exit codes and how the Batch service should respond to exit codes within that range.(
                                    end = 56, 
                                    exit_options = openapi_client.models.specifies_how_the_batch_service_responds_to_a_particular_exit_condition/.Specifies how the Batch service responds to a particular exit condition.(
                                        dependency_action = 'satisfy', 
                                        job_action = 'none', ), 
                                    start = 56, )
                                ], 
                            exit_codes = [
                                openapi_client.models.how_the_batch_service_should_respond_if_a_task_exits_with_a_particular_exit_code/.How the Batch service should respond if a Task exits with a particular exit code.(
                                    code = 56, 
                                    exit_options = , )
                                ], 
                            file_upload_error = , 
                            pre_processing_error = , ), 
                        id = '', 
                        multi_instance_settings = openapi_client.models.settings_which_specify_how_to_run_a_multi_instance_task/.Settings which specify how to run a multi-instance Task.(
                            common_resource_files = [
                                openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a Compute Node.(
                                    auto_storage_container_name = '', 
                                    blob_prefix = '', 
                                    file_mode = '', 
                                    file_path = '', 
                                    http_url = '', 
                                    storage_container_url = '', )
                                ], 
                            coordination_command_line = '', 
                            number_of_instances = 56, ), 
                        output_files = [
                            openapi_client.models.a_specification_for_uploading_files_from_an_azure_batch_compute_node_to_another_location_after_the_batch_service_has_finished_executing_the_task_process/.A specification for uploading files from an Azure Batch Compute Node to another location after the Batch service has finished executing the Task process.(
                                destination = openapi_client.models.the_destination_to_which_a_file_should_be_uploaded/.The destination to which a file should be uploaded.(
                                    container = openapi_client.models.specifies_a_file_upload_destination_within_an_azure_blob_storage_container/.Specifies a file upload destination within an Azure blob storage container.(
                                        container_url = '', 
                                        path = '', ), ), 
                                file_pattern = '', 
                                upload_options = openapi_client.models.details_about_an_output_file_upload_operation,_including_under_what_conditions_to_perform_the_upload/.Details about an output file upload operation, including under what conditions to perform the upload.(
                                    upload_condition = 'tasksuccess', ), )
                            ], 
                        resource_files = [
                            openapi_client.models.a_single_file_or_multiple_files_to_be_downloaded_to_a_compute_node/.A single file or multiple files to be downloaded to a Compute Node.(
                                auto_storage_container_name = '', 
                                blob_prefix = '', 
                                file_mode = '', 
                                file_path = '', 
                                http_url = '', 
                                storage_container_url = '', )
                            ], 
                        user_identity = openapi_client.models.the_definition_of_the_user_identity_under_which_the_task_is_run/.The definition of the user identity under which the Task is run.(
                            auto_user = openapi_client.models.specifies_the_parameters_for_the_auto_user_that_runs_a_task_on_the_batch_service/.Specifies the parameters for the auto user that runs a Task on the Batch service.(
                                elevation_level = 'nonadmin', 
                                scope = 'task', ), 
                            username = '', ), )
                    ],
        )
        """

    def testTaskAddCollectionParameter(self):
        """Test TaskAddCollectionParameter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
