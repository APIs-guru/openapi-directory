# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 7.0.0.42
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_resource_upgrade_progress_info import ApplicationResourceUpgradeProgressInfo

class TestApplicationResourceUpgradeProgressInfo(unittest.TestCase):
    """ApplicationResourceUpgradeProgressInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationResourceUpgradeProgressInfo:
        """Test ApplicationResourceUpgradeProgressInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationResourceUpgradeProgressInfo`
        """
        model = ApplicationResourceUpgradeProgressInfo()
        if include_optional:
            return ApplicationResourceUpgradeProgressInfo(
                application_upgrade_status_details = '',
                failure_timestamp_utc = '',
                name = '',
                percent_completed = '',
                rolling_upgrade_mode = 'Monitored',
                service_upgrade_progress = [
                    openapi_client.models.service_upgrade_progress.ServiceUpgradeProgress(
                        completed_replica_count = '', 
                        pending_replica_count = '', 
                        service_name = '', )
                    ],
                start_timestamp_utc = '',
                target_application_type_version = '',
                upgrade_duration = 'PT0H2M0S',
                upgrade_replica_set_check_timeout_in_seconds = 56,
                upgrade_state = 'Invalid'
            )
        else:
            return ApplicationResourceUpgradeProgressInfo(
        )
        """

    def testApplicationResourceUpgradeProgressInfo(self):
        """Test ApplicationResourceUpgradeProgressInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
