# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 7.0.0.42
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.paged_application_resource_description_list import PagedApplicationResourceDescriptionList

class TestPagedApplicationResourceDescriptionList(unittest.TestCase):
    """PagedApplicationResourceDescriptionList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PagedApplicationResourceDescriptionList:
        """Test PagedApplicationResourceDescriptionList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PagedApplicationResourceDescriptionList`
        """
        model = PagedApplicationResourceDescriptionList()
        if include_optional:
            return PagedApplicationResourceDescriptionList(
                continuation_token = '',
                items = [
                    openapi_client.models.application_resource_description.ApplicationResourceDescription(
                        identity = openapi_client.models.identity_description.IdentityDescription(
                            principal_id = '', 
                            tenant_id = '', 
                            token_service_endpoint = '', 
                            type = '', 
                            user_assigned_identities = {
                                'key' : openapi_client.models.identity_item_description.IdentityItemDescription(
                                    client_id = '', 
                                    principal_id = '', )
                                }, ), 
                        name = '', 
                        properties = openapi_client.models.application_properties.ApplicationProperties(
                            debug_params = '', 
                            description = '', 
                            diagnostics = openapi_client.models.diagnostics_description.DiagnosticsDescription(
                                default_sink_refs = [
                                    ''
                                    ], 
                                enabled = True, 
                                sinks = [
                                    openapi_client.models.diagnostics_sink_properties.DiagnosticsSinkProperties(
                                        description = '', 
                                        kind = 'Invalid', 
                                        name = '', )
                                    ], ), 
                            health_state = 'Invalid', 
                            service_names = [
                                ''
                                ], 
                            services = [
                                openapi_client.models.service_resource_description.ServiceResourceDescription(
                                    name = '', 
                                    properties = null, )
                                ], 
                            status = 'Unknown', 
                            status_details = '', 
                            unhealthy_evaluation = '', ), )
                    ]
            )
        else:
            return PagedApplicationResourceDescriptionList(
        )
        """

    def testPagedApplicationResourceDescriptionList(self):
        """Test PagedApplicationResourceDescriptionList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
