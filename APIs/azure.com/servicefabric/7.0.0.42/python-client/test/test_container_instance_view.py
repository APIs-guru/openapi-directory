# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 7.0.0.42
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.container_instance_view import ContainerInstanceView

class TestContainerInstanceView(unittest.TestCase):
    """ContainerInstanceView unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContainerInstanceView:
        """Test ContainerInstanceView
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContainerInstanceView`
        """
        model = ContainerInstanceView()
        if include_optional:
            return ContainerInstanceView(
                current_state = openapi_client.models.container_state.ContainerState(
                    detail_status = '', 
                    exit_code = '', 
                    finish_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    state = '', ),
                events = [
                    openapi_client.models.container_event.ContainerEvent(
                        count = 56, 
                        first_timestamp = '', 
                        last_timestamp = '', 
                        message = '', 
                        name = '', 
                        type = '', )
                    ],
                previous_state = openapi_client.models.container_state.ContainerState(
                    detail_status = '', 
                    exit_code = '', 
                    finish_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    state = '', ),
                restart_count = 56
            )
        else:
            return ContainerInstanceView(
        )
        """

    def testContainerInstanceView(self):
        """Test ContainerInstanceView"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
