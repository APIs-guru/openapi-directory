# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.3.0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_type_info import ServiceTypeInfo

class TestServiceTypeInfo(unittest.TestCase):
    """ServiceTypeInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceTypeInfo:
        """Test ServiceTypeInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceTypeInfo`
        """
        model = ServiceTypeInfo()
        if include_optional:
            return ServiceTypeInfo(
                is_service_group = True,
                service_manifest_name = '',
                service_manifest_version = '',
                service_type_description = openapi_client.models.service_type_description.ServiceTypeDescription(
                    extensions = [
                        openapi_client.models.service_type_extension_description.ServiceTypeExtensionDescription(
                            key = '', 
                            value = '', )
                        ], 
                    is_stateful = True, 
                    kind = 'Invalid', 
                    load_metrics = [
                        openapi_client.models.service_load_metric_description.ServiceLoadMetricDescription(
                            default_load = 56, 
                            name = '', 
                            primary_default_load = 56, 
                            secondary_default_load = 56, 
                            weight = 'Zero', )
                        ], 
                    placement_constraints = '', 
                    service_placement_policies = [
                        openapi_client.models.service_placement_policy_description.ServicePlacementPolicyDescription(
                            type = 'Invalid', )
                        ], 
                    service_type_name = '', )
            )
        else:
            return ServiceTypeInfo(
        )
        """

    def testServiceTypeInfo(self):
        """Test ServiceTypeInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
