# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.3.0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.current_upgrade_domain_progress_info import CurrentUpgradeDomainProgressInfo

class TestCurrentUpgradeDomainProgressInfo(unittest.TestCase):
    """CurrentUpgradeDomainProgressInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CurrentUpgradeDomainProgressInfo:
        """Test CurrentUpgradeDomainProgressInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CurrentUpgradeDomainProgressInfo`
        """
        model = CurrentUpgradeDomainProgressInfo()
        if include_optional:
            return CurrentUpgradeDomainProgressInfo(
                domain_name = '',
                node_upgrade_progress_list = [
                    openapi_client.models.node_upgrade_progress_info.NodeUpgradeProgressInfo(
                        node_name = '', 
                        pending_safety_checks = [
                            openapi_client.models.safety_check_wrapper.SafetyCheckWrapper(
                                safety_check = openapi_client.models.safety_check.SafetyCheck(
                                    kind = 'Invalid', ), )
                            ], 
                        upgrade_phase = 'Invalid', )
                    ]
            )
        else:
            return CurrentUpgradeDomainProgressInfo(
        )
        """

    def testCurrentUpgradeDomainProgressInfo(self):
        """Test CurrentUpgradeDomainProgressInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
