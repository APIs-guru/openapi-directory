# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.1.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.successful_property_batch_info import SuccessfulPropertyBatchInfo

class TestSuccessfulPropertyBatchInfo(unittest.TestCase):
    """SuccessfulPropertyBatchInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SuccessfulPropertyBatchInfo:
        """Test SuccessfulPropertyBatchInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SuccessfulPropertyBatchInfo`
        """
        model = SuccessfulPropertyBatchInfo()
        if include_optional:
            return SuccessfulPropertyBatchInfo(
                properties = {
                    'key' : openapi_client.models.property_info.PropertyInfo(
                        metadata = openapi_client.models.property_metadata.PropertyMetadata(
                            custom_type_id = '', 
                            last_modified_utc_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            parent = '', 
                            sequence_number = '', 
                            size_in_bytes = 56, 
                            type_id = 'Invalid', ), 
                        name = '', 
                        value = openapi_client.models.property_value.PropertyValue(
                            kind = 'Invalid', ), )
                    }
            )
        else:
            return SuccessfulPropertyBatchInfo(
        )
        """

    def testSuccessfulPropertyBatchInfo(self):
        """Test SuccessfulPropertyBatchInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
