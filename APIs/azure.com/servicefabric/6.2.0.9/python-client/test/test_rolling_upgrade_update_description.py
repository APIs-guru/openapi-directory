# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.2.0.9
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rolling_upgrade_update_description import RollingUpgradeUpdateDescription

class TestRollingUpgradeUpdateDescription(unittest.TestCase):
    """RollingUpgradeUpdateDescription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RollingUpgradeUpdateDescription:
        """Test RollingUpgradeUpdateDescription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RollingUpgradeUpdateDescription`
        """
        model = RollingUpgradeUpdateDescription()
        if include_optional:
            return RollingUpgradeUpdateDescription(
                failure_action = 'Invalid',
                force_restart = True,
                health_check_retry_timeout_in_milliseconds = 'PT0H10M0S',
                health_check_stable_duration_in_milliseconds = 'PT0H2M0S',
                health_check_wait_duration_in_milliseconds = '0',
                replica_set_check_timeout_in_milliseconds = 56,
                rolling_upgrade_mode = 'UnmonitoredAuto',
                upgrade_domain_timeout_in_milliseconds = 'P10675199DT02H48M05.4775807S',
                upgrade_timeout_in_milliseconds = 'P10675199DT02H48M05.4775807S'
            )
        else:
            return RollingUpgradeUpdateDescription(
                rolling_upgrade_mode = 'UnmonitoredAuto',
        )
        """

    def testRollingUpgradeUpdateDescription(self):
        """Test RollingUpgradeUpdateDescription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
