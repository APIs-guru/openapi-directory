# coding: utf-8

"""
    ServiceFabricClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.default_api import DefaultApi


class TestDefaultApi(unittest.TestCase):
    """DefaultApi unit test stubs"""

    def setUp(self) -> None:
        self.api = DefaultApi()

    def tearDown(self) -> None:
        pass

    def test_application_healths_get(self) -> None:
        """Test case for application_healths_get

        """
        pass

    def test_application_healths_send(self) -> None:
        """Test case for application_healths_send

        """
        pass

    def test_application_manifests_get(self) -> None:
        """Test case for application_manifests_get

        """
        pass

    def test_application_types_get(self) -> None:
        """Test case for application_types_get

        """
        pass

    def test_application_types_list(self) -> None:
        """Test case for application_types_list

        """
        pass

    def test_application_types_register(self) -> None:
        """Test case for application_types_register

        """
        pass

    def test_application_types_unregister(self) -> None:
        """Test case for application_types_unregister

        """
        pass

    def test_application_upgrade_rollbacks_start(self) -> None:
        """Test case for application_upgrade_rollbacks_start

        """
        pass

    def test_application_upgrades_get(self) -> None:
        """Test case for application_upgrades_get

        """
        pass

    def test_application_upgrades_resume(self) -> None:
        """Test case for application_upgrades_resume

        """
        pass

    def test_application_upgrades_start(self) -> None:
        """Test case for application_upgrades_start

        """
        pass

    def test_application_upgrades_update(self) -> None:
        """Test case for application_upgrades_update

        """
        pass

    def test_applications_create(self) -> None:
        """Test case for applications_create

        """
        pass

    def test_applications_get(self) -> None:
        """Test case for applications_get

        """
        pass

    def test_applications_list(self) -> None:
        """Test case for applications_list

        """
        pass

    def test_applications_remove(self) -> None:
        """Test case for applications_remove

        """
        pass

    def test_cluster_healths_get(self) -> None:
        """Test case for cluster_healths_get

        """
        pass

    def test_cluster_healths_send(self) -> None:
        """Test case for cluster_healths_send

        """
        pass

    def test_cluster_load_informations_get(self) -> None:
        """Test case for cluster_load_informations_get

        """
        pass

    def test_cluster_manifests_get(self) -> None:
        """Test case for cluster_manifests_get

        """
        pass

    def test_cluster_packages_register(self) -> None:
        """Test case for cluster_packages_register

        """
        pass

    def test_cluster_packages_unregister(self) -> None:
        """Test case for cluster_packages_unregister

        """
        pass

    def test_cluster_upgrades_resume(self) -> None:
        """Test case for cluster_upgrades_resume

        """
        pass

    def test_cluster_upgrades_rollback(self) -> None:
        """Test case for cluster_upgrades_rollback

        """
        pass

    def test_cluster_upgrades_start(self) -> None:
        """Test case for cluster_upgrades_start

        """
        pass

    def test_cluster_upgrades_update(self) -> None:
        """Test case for cluster_upgrades_update

        """
        pass

    def test_deployed_application_healths_get(self) -> None:
        """Test case for deployed_application_healths_get

        """
        pass

    def test_deployed_application_healths_send(self) -> None:
        """Test case for deployed_application_healths_send

        """
        pass

    def test_deployed_applications_get(self) -> None:
        """Test case for deployed_applications_get

        """
        pass

    def test_deployed_applications_list(self) -> None:
        """Test case for deployed_applications_list

        """
        pass

    def test_deployed_code_packages_get(self) -> None:
        """Test case for deployed_code_packages_get

        """
        pass

    def test_deployed_replica_details_get(self) -> None:
        """Test case for deployed_replica_details_get

        """
        pass

    def test_deployed_replicas_get(self) -> None:
        """Test case for deployed_replicas_get

        """
        pass

    def test_deployed_service_package_healths_get(self) -> None:
        """Test case for deployed_service_package_healths_get

        """
        pass

    def test_deployed_service_package_healths_send(self) -> None:
        """Test case for deployed_service_package_healths_send

        """
        pass

    def test_deployed_service_packages_get(self) -> None:
        """Test case for deployed_service_packages_get

        """
        pass

    def test_deployed_service_types_get(self) -> None:
        """Test case for deployed_service_types_get

        """
        pass

    def test_node_healths_get(self) -> None:
        """Test case for node_healths_get

        """
        pass

    def test_node_healths_send(self) -> None:
        """Test case for node_healths_send

        """
        pass

    def test_node_load_informations_get(self) -> None:
        """Test case for node_load_informations_get

        """
        pass

    def test_node_states_remove(self) -> None:
        """Test case for node_states_remove

        """
        pass

    def test_nodes_disable(self) -> None:
        """Test case for nodes_disable

        """
        pass

    def test_nodes_enable(self) -> None:
        """Test case for nodes_enable

        """
        pass

    def test_nodes_get(self) -> None:
        """Test case for nodes_get

        """
        pass

    def test_nodes_list(self) -> None:
        """Test case for nodes_list

        """
        pass

    def test_partition_healths_get(self) -> None:
        """Test case for partition_healths_get

        """
        pass

    def test_partition_healths_send(self) -> None:
        """Test case for partition_healths_send

        """
        pass

    def test_partition_lists_repair(self) -> None:
        """Test case for partition_lists_repair

        """
        pass

    def test_partition_load_informations_get(self) -> None:
        """Test case for partition_load_informations_get

        """
        pass

    def test_partition_loads_reset(self) -> None:
        """Test case for partition_loads_reset

        """
        pass

    def test_partitions_get(self) -> None:
        """Test case for partitions_get

        """
        pass

    def test_partitions_list(self) -> None:
        """Test case for partitions_list

        """
        pass

    def test_partitions_repair(self) -> None:
        """Test case for partitions_repair

        """
        pass

    def test_replica_healths_get(self) -> None:
        """Test case for replica_healths_get

        """
        pass

    def test_replica_healths_send(self) -> None:
        """Test case for replica_healths_send

        """
        pass

    def test_replica_load_informations_get(self) -> None:
        """Test case for replica_load_informations_get

        """
        pass

    def test_replicas_get(self) -> None:
        """Test case for replicas_get

        """
        pass

    def test_replicas_list(self) -> None:
        """Test case for replicas_list

        """
        pass

    def test_service_descriptions_get(self) -> None:
        """Test case for service_descriptions_get

        """
        pass

    def test_service_from_templates_create(self) -> None:
        """Test case for service_from_templates_create

        """
        pass

    def test_service_group_descriptions_get(self) -> None:
        """Test case for service_group_descriptions_get

        """
        pass

    def test_service_group_from_templates_create(self) -> None:
        """Test case for service_group_from_templates_create

        """
        pass

    def test_service_group_members_get(self) -> None:
        """Test case for service_group_members_get

        """
        pass

    def test_service_groups_create(self) -> None:
        """Test case for service_groups_create

        """
        pass

    def test_service_groups_remove(self) -> None:
        """Test case for service_groups_remove

        """
        pass

    def test_service_groups_update(self) -> None:
        """Test case for service_groups_update

        """
        pass

    def test_service_healths_get(self) -> None:
        """Test case for service_healths_get

        """
        pass

    def test_service_healths_send(self) -> None:
        """Test case for service_healths_send

        """
        pass

    def test_service_manifests_get(self) -> None:
        """Test case for service_manifests_get

        """
        pass

    def test_service_types_get(self) -> None:
        """Test case for service_types_get

        """
        pass

    def test_services_create(self) -> None:
        """Test case for services_create

        """
        pass

    def test_services_get(self) -> None:
        """Test case for services_get

        """
        pass

    def test_services_list(self) -> None:
        """Test case for services_list

        """
        pass

    def test_services_remove(self) -> None:
        """Test case for services_remove

        """
        pass

    def test_services_resolve(self) -> None:
        """Test case for services_resolve

        """
        pass

    def test_services_update(self) -> None:
        """Test case for services_update

        """
        pass

    def test_upgrade_progresses_get(self) -> None:
        """Test case for upgrade_progresses_get

        """
        pass


if __name__ == '__main__':
    unittest.main()
