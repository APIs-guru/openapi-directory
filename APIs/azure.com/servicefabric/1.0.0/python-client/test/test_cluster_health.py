# coding: utf-8

"""
    ServiceFabricClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster_health import ClusterHealth

class TestClusterHealth(unittest.TestCase):
    """ClusterHealth unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusterHealth:
        """Test ClusterHealth
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusterHealth`
        """
        model = ClusterHealth()
        if include_optional:
            return ClusterHealth(
                aggregated_health_state = 'Invalid',
                application_health_state = [
                    openapi_client.models.cluster_health_application_health_state_inner.ClusterHealth_ApplicationHealthState_inner(
                        aggregated_health_state = 'Invalid', 
                        name = '', )
                    ],
                health_events = [
                    openapi_client.models.health_event.HealthEvent(
                        description = '', 
                        health_state = 'Invalid', 
                        is_expired = True, 
                        last_error_transition_at = '', 
                        last_modified_utc_timestamp = '', 
                        last_ok_transition_at = '', 
                        last_warning_transition_at = '', 
                        property = '', 
                        remove_when_expired = True, 
                        sequence_number = '', 
                        source_id = '', 
                        source_utc_timestamp = '', 
                        time_to_live_in_milli_seconds = '', )
                    ],
                node_health_states = [
                    openapi_client.models.cluster_health_node_health_states_inner.ClusterHealth_NodeHealthStates_inner(
                        aggregated_health_state = 'Invalid', 
                        id = openapi_client.models.cluster_health_node_health_states_inner_id.ClusterHealth_NodeHealthStates_inner_Id(), 
                        name = '', )
                    ],
                unhealthy_evaluations = [
                    openapi_client.models.unhealthy_evaluation.UnhealthyEvaluation(
                        health_evaluation = openapi_client.models.health_evaluation.HealthEvaluation(
                            aggregated_health_state = 'Invalid', 
                            description = '', 
                            kind = 'Invalid', ), )
                    ]
            )
        else:
            return ClusterHealth(
        )
        """

    def testClusterHealth(self):
        """Test ClusterHealth"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
