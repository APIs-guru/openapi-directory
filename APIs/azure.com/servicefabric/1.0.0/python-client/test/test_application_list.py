# coding: utf-8

"""
    ServiceFabricClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_list import ApplicationList

class TestApplicationList(unittest.TestCase):
    """ApplicationList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationList:
        """Test ApplicationList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationList`
        """
        model = ApplicationList()
        if include_optional:
            return ApplicationList(
                continuation_token = '',
                items = [
                    openapi_client.models.application.Application(
                        health_state = 'Invalid', 
                        id = '', 
                        name = '', 
                        parameters = [
                            openapi_client.models.application_parameters_inner.Application_Parameters_inner(
                                key = '', 
                                value = '', )
                            ], 
                        status = '', 
                        type_name = '', 
                        type_version = '', )
                    ]
            )
        else:
            return ApplicationList(
        )
        """

    def testApplicationList(self):
        """Test ApplicationList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
