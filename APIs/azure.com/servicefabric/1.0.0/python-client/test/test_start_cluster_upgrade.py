# coding: utf-8

"""
    ServiceFabricClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.start_cluster_upgrade import StartClusterUpgrade

class TestStartClusterUpgrade(unittest.TestCase):
    """StartClusterUpgrade unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StartClusterUpgrade:
        """Test StartClusterUpgrade
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StartClusterUpgrade`
        """
        model = StartClusterUpgrade()
        if include_optional:
            return StartClusterUpgrade(
                application_health_policy_map = openapi_client.models.application_health_policy_map.ApplicationHealthPolicyMap(
                    consider_warning_as_error = True, 
                    default_service_type_health_policy = 56, 
                    max_percent_unhealthy_deployed_applications = 56, 
                    max_percent_unhealthy_partitions_per_service = 56, 
                    max_percent_unhealthy_replicas_per_partition = 56, 
                    max_percent_unhealthy_services = 56, ),
                cluster_upgrade_health_policy = openapi_client.models.cluster_upgrade_health_policy.ClusterUpgradeHealthPolicy(
                    max_percent_delta_unhealthy_nodes = 56, 
                    max_percent_upgrade_domain_delta_unhealthy_nodes = 56, ),
                code_version = '',
                config_version = '',
                enable_delta_health_evaluation = True,
                force_restart = True,
                monitoring_policy = None,
                rolling_upgrade_mode = 'Invalid',
                upgrade_kind = '',
                upgrade_replica_set_check_timeout_in_seconds = 56
            )
        else:
            return StartClusterUpgrade(
        )
        """

    def testStartClusterUpgrade(self):
        """Test StartClusterUpgrade"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
