# coding: utf-8

"""
    ServiceFabricClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.partition import Partition

class TestPartition(unittest.TestCase):
    """Partition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Partition:
        """Test Partition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Partition`
        """
        model = Partition()
        if include_optional:
            return Partition(
                current_configuration_epoch = openapi_client.models.partition_current_configuration_epoch.Partition_CurrentConfigurationEpoch(
                    configuration_version = '', 
                    data_loss_version = '', ),
                health_state = 'Invalid',
                instance_count = 56,
                min_replica_set_size = 56,
                partition_information = openapi_client.models.partition_information.PartitionInformation(
                    high_key = '', 
                    id = '', 
                    low_key = '', 
                    name = [
                        ''
                        ], 
                    service_partition_kind = 'Invalid', ),
                partition_status = 'Invalid',
                service_kind = 'Invalid',
                target_replica_set_size = 56
            )
        else:
            return Partition(
        )
        """

    def testPartition(self):
        """Test Partition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
