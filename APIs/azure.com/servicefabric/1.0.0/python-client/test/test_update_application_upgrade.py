# coding: utf-8

"""
    ServiceFabricClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.update_application_upgrade import UpdateApplicationUpgrade

class TestUpdateApplicationUpgrade(unittest.TestCase):
    """UpdateApplicationUpgrade unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateApplicationUpgrade:
        """Test UpdateApplicationUpgrade
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateApplicationUpgrade`
        """
        model = UpdateApplicationUpgrade()
        if include_optional:
            return UpdateApplicationUpgrade(
                application_health_policy = openapi_client.models.application_health_policy.ApplicationHealthPolicy(
                    consider_warning_as_error = True, 
                    default_service_type_health_policy = openapi_client.models.application_health_policy_default_service_type_health_policy.ApplicationHealthPolicy_DefaultServiceTypeHealthPolicy(
                        max_percent_unhealthy_partitions_per_service = 56, 
                        max_percent_unhealthy_replicas_per_partition = 56, 
                        max_percent_unhealthy_services = 56, ), 
                    max_percent_unhealthy_deployed_applications = 56, ),
                name = '',
                update_description = openapi_client.models.update_description.UpdateDescription(
                    failure_action = '', 
                    force_restart = True, 
                    health_check_retry_timeout_in_milliseconds = '', 
                    health_check_stable_duration_in_milliseconds = '', 
                    health_check_wait_duration_in_milliseconds = '', 
                    rolling_upgrade_mode = 'Invalid', 
                    upgrade_domain_timeout_in_milliseconds = '', 
                    upgrade_replica_set_check_timeout_in_seconds = 56, 
                    upgrade_timeout_in_milliseconds = '', ),
                upgrade_kind = ''
            )
        else:
            return UpdateApplicationUpgrade(
        )
        """

    def testUpdateApplicationUpgrade(self):
        """Test UpdateApplicationUpgrade"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
