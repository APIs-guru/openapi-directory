# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.4.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictStr, field_validator
from typing import List, Optional
from typing_extensions import Annotated
from openapi_client.models.application_event import ApplicationEvent
from openapi_client.models.cluster_event import ClusterEvent
from openapi_client.models.container_instance_event import ContainerInstanceEvent
from openapi_client.models.fabric_event import FabricEvent
from openapi_client.models.node_event import NodeEvent
from openapi_client.models.partition_event import PartitionEvent
from openapi_client.models.replica_event import ReplicaEvent
from openapi_client.models.service_event import ServiceEvent

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class EventsStoreApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def get_application_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        application_id: Annotated[StrictStr, Field(description="The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ApplicationEvent]:
        """Gets an Application-related events.

        The response is list of ApplicationEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param application_id: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions. (required)
        :type application_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_application_event_list_serialize(
            api_version=api_version,
            application_id=application_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_application_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        application_id: Annotated[StrictStr, Field(description="The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ApplicationEvent]]:
        """Gets an Application-related events.

        The response is list of ApplicationEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param application_id: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions. (required)
        :type application_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_application_event_list_serialize(
            api_version=api_version,
            application_id=application_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_application_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        application_id: Annotated[StrictStr, Field(description="The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets an Application-related events.

        The response is list of ApplicationEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param application_id: The identity of the application. This is typically the full name of the application without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the application name is \"fabric:/myapp/app1\", the application identity would be \"myapp~app1\" in 6.0+ and \"myapp/app1\" in previous versions. (required)
        :type application_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_application_event_list_serialize(
            api_version=api_version,
            application_id=application_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_application_event_list_serialize(
        self,
        api_version,
        application_id,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if application_id is not None:
            _path_params['applicationId'] = application_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Applications/{applicationId}/$/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_applications_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ApplicationEvent]:
        """Gets all Applications-related events.

        The response is list of ApplicationEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_applications_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_applications_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ApplicationEvent]]:
        """Gets all Applications-related events.

        The response is list of ApplicationEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_applications_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_applications_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Applications-related events.

        The response is list of ApplicationEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_applications_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ApplicationEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_applications_event_list_serialize(
        self,
        api_version,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Applications/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_cluster_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ClusterEvent]:
        """Gets all Cluster-related events.

        The response is list of ClusterEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_cluster_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ClusterEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_cluster_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ClusterEvent]]:
        """Gets all Cluster-related events.

        The response is list of ClusterEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_cluster_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ClusterEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_cluster_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Cluster-related events.

        The response is list of ClusterEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_cluster_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ClusterEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_cluster_event_list_serialize(
        self,
        api_version,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Cluster/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_containers_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.2-preview'.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ContainerInstanceEvent]:
        """Gets all Containers-related events.

        The response is list of ContainerInstanceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.2-preview'. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_containers_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ContainerInstanceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_containers_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.2-preview'.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ContainerInstanceEvent]]:
        """Gets all Containers-related events.

        The response is list of ContainerInstanceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.2-preview'. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_containers_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ContainerInstanceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_containers_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.2-preview'.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Containers-related events.

        The response is list of ContainerInstanceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.2-preview'. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_containers_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ContainerInstanceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_containers_event_list_serialize(
        self,
        api_version,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Containers/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_correlated_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        event_instance_id: Annotated[StrictStr, Field(description="The EventInstanceId.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[FabricEvent]:
        """Gets all correlated events for a given event.

        The response is list of FabricEvents.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param event_instance_id: The EventInstanceId. (required)
        :type event_instance_id: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_correlated_event_list_serialize(
            api_version=api_version,
            event_instance_id=event_instance_id,
            timeout=timeout,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[FabricEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_correlated_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        event_instance_id: Annotated[StrictStr, Field(description="The EventInstanceId.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[FabricEvent]]:
        """Gets all correlated events for a given event.

        The response is list of FabricEvents.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param event_instance_id: The EventInstanceId. (required)
        :type event_instance_id: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_correlated_event_list_serialize(
            api_version=api_version,
            event_instance_id=event_instance_id,
            timeout=timeout,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[FabricEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_correlated_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        event_instance_id: Annotated[StrictStr, Field(description="The EventInstanceId.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all correlated events for a given event.

        The response is list of FabricEvents.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param event_instance_id: The EventInstanceId. (required)
        :type event_instance_id: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_correlated_event_list_serialize(
            api_version=api_version,
            event_instance_id=event_instance_id,
            timeout=timeout,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[FabricEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_correlated_event_list_serialize(
        self,
        api_version,
        event_instance_id,
        timeout,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if event_instance_id is not None:
            _path_params['eventInstanceId'] = event_instance_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/CorrelatedEvents/{eventInstanceId}/$/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_node_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        node_name: Annotated[StrictStr, Field(description="The name of the node.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[NodeEvent]:
        """Gets a Node-related events.

        The response is list of NodeEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param node_name: The name of the node. (required)
        :type node_name: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_node_event_list_serialize(
            api_version=api_version,
            node_name=node_name,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[NodeEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_node_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        node_name: Annotated[StrictStr, Field(description="The name of the node.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[NodeEvent]]:
        """Gets a Node-related events.

        The response is list of NodeEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param node_name: The name of the node. (required)
        :type node_name: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_node_event_list_serialize(
            api_version=api_version,
            node_name=node_name,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[NodeEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_node_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        node_name: Annotated[StrictStr, Field(description="The name of the node.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a Node-related events.

        The response is list of NodeEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param node_name: The name of the node. (required)
        :type node_name: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_node_event_list_serialize(
            api_version=api_version,
            node_name=node_name,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[NodeEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_node_event_list_serialize(
        self,
        api_version,
        node_name,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if node_name is not None:
            _path_params['nodeName'] = node_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Nodes/{nodeName}/$/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_nodes_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[NodeEvent]:
        """Gets all Nodes-related Events.

        The response is list of NodeEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_nodes_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[NodeEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_nodes_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[NodeEvent]]:
        """Gets all Nodes-related Events.

        The response is list of NodeEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_nodes_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[NodeEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_nodes_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Nodes-related Events.

        The response is list of NodeEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_nodes_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[NodeEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_nodes_event_list_serialize(
        self,
        api_version,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Nodes/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_partition_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[PartitionEvent]:
        """Gets a Partition-related events.

        The response is list of PartitionEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[PartitionEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_partition_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[PartitionEvent]]:
        """Gets a Partition-related events.

        The response is list of PartitionEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[PartitionEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_partition_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a Partition-related events.

        The response is list of PartitionEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[PartitionEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_partition_event_list_serialize(
        self,
        api_version,
        partition_id,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if partition_id is not None:
            _path_params['partitionId'] = partition_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Partitions/{partitionId}/$/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_partition_replica_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        replica_id: Annotated[StrictStr, Field(description="The identifier of the replica.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ReplicaEvent]:
        """Gets a Partition Replica-related events.

        The response is list of ReplicaEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param replica_id: The identifier of the replica. (required)
        :type replica_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_replica_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            replica_id=replica_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ReplicaEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_partition_replica_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        replica_id: Annotated[StrictStr, Field(description="The identifier of the replica.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ReplicaEvent]]:
        """Gets a Partition Replica-related events.

        The response is list of ReplicaEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param replica_id: The identifier of the replica. (required)
        :type replica_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_replica_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            replica_id=replica_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ReplicaEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_partition_replica_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        replica_id: Annotated[StrictStr, Field(description="The identifier of the replica.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a Partition Replica-related events.

        The response is list of ReplicaEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param replica_id: The identifier of the replica. (required)
        :type replica_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_replica_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            replica_id=replica_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ReplicaEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_partition_replica_event_list_serialize(
        self,
        api_version,
        partition_id,
        replica_id,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if partition_id is not None:
            _path_params['partitionId'] = partition_id
        if replica_id is not None:
            _path_params['replicaId'] = replica_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Partitions/{partitionId}/$/Replicas/{replicaId}/$/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_partition_replicas_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ReplicaEvent]:
        """Gets all Replicas-related events for a Partition.

        The response is list of ReplicaEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_replicas_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ReplicaEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_partition_replicas_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ReplicaEvent]]:
        """Gets all Replicas-related events for a Partition.

        The response is list of ReplicaEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_replicas_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ReplicaEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_partition_replicas_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        partition_id: Annotated[StrictStr, Field(description="The identity of the partition.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Replicas-related events for a Partition.

        The response is list of ReplicaEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param partition_id: The identity of the partition. (required)
        :type partition_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partition_replicas_event_list_serialize(
            api_version=api_version,
            partition_id=partition_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ReplicaEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_partition_replicas_event_list_serialize(
        self,
        api_version,
        partition_id,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if partition_id is not None:
            _path_params['partitionId'] = partition_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Partitions/{partitionId}/$/Replicas/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_partitions_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[PartitionEvent]:
        """Gets all Partitions-related events.

        The response is list of PartitionEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partitions_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[PartitionEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_partitions_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[PartitionEvent]]:
        """Gets all Partitions-related events.

        The response is list of PartitionEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partitions_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[PartitionEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_partitions_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Partitions-related events.

        The response is list of PartitionEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_partitions_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[PartitionEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_partitions_event_list_serialize(
        self,
        api_version,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Partitions/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_service_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        service_id: Annotated[StrictStr, Field(description="The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ServiceEvent]:
        """Gets a Service-related events.

        The response is list of ServiceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param service_id: The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions. (required)
        :type service_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_service_event_list_serialize(
            api_version=api_version,
            service_id=service_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ServiceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_service_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        service_id: Annotated[StrictStr, Field(description="The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ServiceEvent]]:
        """Gets a Service-related events.

        The response is list of ServiceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param service_id: The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions. (required)
        :type service_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_service_event_list_serialize(
            api_version=api_version,
            service_id=service_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ServiceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_service_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        service_id: Annotated[StrictStr, Field(description="The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets a Service-related events.

        The response is list of ServiceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param service_id: The identity of the service. This ID is typically the full name of the service without the 'fabric:' URI scheme. Starting from version 6.0, hierarchical names are delimited with the \"~\" character. For example, if the service name is \"fabric:/myapp/app1/svc1\", the service identity would be \"myapp~app1~svc1\" in 6.0+ and \"myapp/app1/svc1\" in previous versions. (required)
        :type service_id: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_service_event_list_serialize(
            api_version=api_version,
            service_id=service_id,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ServiceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_service_event_list_serialize(
        self,
        api_version,
        service_id,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if service_id is not None:
            _path_params['serviceId'] = service_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Services/{serviceId}/$/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def get_services_event_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[ServiceEvent]:
        """Gets all Services-related events.

        The response is list of ServiceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_services_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ServiceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def get_services_event_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[ServiceEvent]]:
        """Gets all Services-related events.

        The response is list of ServiceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_services_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ServiceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def get_services_event_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version.")],
        start_time_utc: Annotated[StrictStr, Field(description="The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        end_time_utc: Annotated[StrictStr, Field(description="The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ.")],
        timeout: Annotated[Optional[Annotated[int, Field(le=4294967295, strict=True, ge=1)]], Field(description="The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.")] = None,
        events_types_filter: Annotated[Optional[StrictStr], Field(description="This is a comma separated string specifying the types of FabricEvents that should only be included in the response.")] = None,
        exclude_analysis_events: Annotated[Optional[StrictBool], Field(description="This param disables the retrieval of AnalysisEvents if true is passed.")] = None,
        skip_correlation_lookup: Annotated[Optional[StrictBool], Field(description="This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets all Services-related events.

        The response is list of ServiceEvent objects.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4'.  Service Fabric REST API version is based on the runtime version in which the API was introduced or was changed. Service Fabric runtime supports more than one version of the API. This version is the latest supported version of the API. If a lower API version is passed, the returned response may be different from the one documented in this specification.  Additionally the runtime accepts any version that is higher than the latest supported version up to the current version of the runtime. So if the latest API version is 6.0 and the runtime is 6.1, the runtime will accept version 6.1 for that API. However the behavior of the API will be as per the documented 6.0 version. (required)
        :type api_version: str
        :param start_time_utc: The start time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type start_time_utc: str
        :param end_time_utc: The end time of a lookup query in ISO UTC yyyy-MM-ddTHH:mm:ssZ. (required)
        :type end_time_utc: str
        :param timeout: The server timeout for performing the operation in seconds. This timeout specifies the time duration that the client is willing to wait for the requested operation to complete. The default value for this parameter is 60 seconds.
        :type timeout: int
        :param events_types_filter: This is a comma separated string specifying the types of FabricEvents that should only be included in the response.
        :type events_types_filter: str
        :param exclude_analysis_events: This param disables the retrieval of AnalysisEvents if true is passed.
        :type exclude_analysis_events: bool
        :param skip_correlation_lookup: This param disables the search of CorrelatedEvents information if true is passed. otherwise the CorrelationEvents get processed and HasCorrelatedEvents field in every FabricEvent gets populated.
        :type skip_correlation_lookup: bool
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._get_services_event_list_serialize(
            api_version=api_version,
            start_time_utc=start_time_utc,
            end_time_utc=end_time_utc,
            timeout=timeout,
            events_types_filter=events_types_filter,
            exclude_analysis_events=exclude_analysis_events,
            skip_correlation_lookup=skip_correlation_lookup,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[ServiceEvent]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _get_services_event_list_serialize(
        self,
        api_version,
        start_time_utc,
        end_time_utc,
        timeout,
        events_types_filter,
        exclude_analysis_events,
        skip_correlation_lookup,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        if timeout is not None:
            
            _query_params.append(('timeout', timeout))
            
        if start_time_utc is not None:
            
            _query_params.append(('StartTimeUtc', start_time_utc))
            
        if end_time_utc is not None:
            
            _query_params.append(('EndTimeUtc', end_time_utc))
            
        if events_types_filter is not None:
            
            _query_params.append(('EventsTypesFilter', events_types_filter))
            
        if exclude_analysis_events is not None:
            
            _query_params.append(('ExcludeAnalysisEvents', exclude_analysis_events))
            
        if skip_correlation_lookup is not None:
            
            _query_params.append(('SkipCorrelationLookup', skip_correlation_lookup))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/EventsStore/Services/Events',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


