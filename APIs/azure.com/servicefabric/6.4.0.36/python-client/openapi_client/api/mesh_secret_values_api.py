# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.4.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing_extensions import Annotated
from openapi_client.models.paged_secret_value_resource_description_list import PagedSecretValueResourceDescriptionList
from openapi_client.models.secret_value import SecretValue
from openapi_client.models.secret_value_resource_description import SecretValueResourceDescription

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class MeshSecretValuesApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def mesh_secret_value_add_value(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        secret_value_resource_description: Annotated[SecretValueResourceDescription, Field(description="Description for creating a value of a secret resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SecretValueResourceDescription:
        """Adds the specified value as a new version of the specified secret resource.

        Creates a new value of the specified secret resource. The name of the value is typically the version identifier. Once created the value cannot be changed.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param secret_value_resource_description: Description for creating a value of a secret resource. (required)
        :type secret_value_resource_description: SecretValueResourceDescription
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_add_value_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            secret_value_resource_description=secret_value_resource_description,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValueResourceDescription",
            '201': "SecretValueResourceDescription",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def mesh_secret_value_add_value_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        secret_value_resource_description: Annotated[SecretValueResourceDescription, Field(description="Description for creating a value of a secret resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SecretValueResourceDescription]:
        """Adds the specified value as a new version of the specified secret resource.

        Creates a new value of the specified secret resource. The name of the value is typically the version identifier. Once created the value cannot be changed.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param secret_value_resource_description: Description for creating a value of a secret resource. (required)
        :type secret_value_resource_description: SecretValueResourceDescription
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_add_value_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            secret_value_resource_description=secret_value_resource_description,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValueResourceDescription",
            '201': "SecretValueResourceDescription",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def mesh_secret_value_add_value_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        secret_value_resource_description: Annotated[SecretValueResourceDescription, Field(description="Description for creating a value of a secret resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Adds the specified value as a new version of the specified secret resource.

        Creates a new value of the specified secret resource. The name of the value is typically the version identifier. Once created the value cannot be changed.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param secret_value_resource_description: Description for creating a value of a secret resource. (required)
        :type secret_value_resource_description: SecretValueResourceDescription
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_add_value_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            secret_value_resource_description=secret_value_resource_description,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValueResourceDescription",
            '201': "SecretValueResourceDescription",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _mesh_secret_value_add_value_serialize(
        self,
        api_version,
        secret_resource_name,
        secret_value_resource_name,
        secret_value_resource_description,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if secret_resource_name is not None:
            _path_params['secretResourceName'] = secret_resource_name
        if secret_value_resource_name is not None:
            _path_params['secretValueResourceName'] = secret_value_resource_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if secret_value_resource_description is not None:
            _body_params = secret_value_resource_description


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def mesh_secret_value_delete(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """Deletes the specified  value of the named secret resource.

        Deletes the secret value resource identified by the name. The name of the resource is typically the version associated with that value. Deletion will fail if the specified value is in use.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_delete_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def mesh_secret_value_delete_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """Deletes the specified  value of the named secret resource.

        Deletes the secret value resource identified by the name. The name of the resource is typically the version associated with that value. Deletion will fail if the specified value is in use.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_delete_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def mesh_secret_value_delete_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes the specified  value of the named secret resource.

        Deletes the secret value resource identified by the name. The name of the resource is typically the version associated with that value. Deletion will fail if the specified value is in use.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_delete_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _mesh_secret_value_delete_serialize(
        self,
        api_version,
        secret_resource_name,
        secret_value_resource_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if secret_resource_name is not None:
            _path_params['secretResourceName'] = secret_resource_name
        if secret_value_resource_name is not None:
            _path_params['secretValueResourceName'] = secret_value_resource_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def mesh_secret_value_get(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SecretValueResourceDescription:
        """Gets the specified secret value resource.

        Get the information about the specified named secret value resources. The information does not include the actual value of the secret.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_get_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValueResourceDescription",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def mesh_secret_value_get_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SecretValueResourceDescription]:
        """Gets the specified secret value resource.

        Get the information about the specified named secret value resources. The information does not include the actual value of the secret.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_get_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValueResourceDescription",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def mesh_secret_value_get_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the specified secret value resource.

        Get the information about the specified named secret value resources. The information does not include the actual value of the secret.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_get_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValueResourceDescription",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _mesh_secret_value_get_serialize(
        self,
        api_version,
        secret_resource_name,
        secret_value_resource_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if secret_resource_name is not None:
            _path_params['secretResourceName'] = secret_resource_name
        if secret_value_resource_name is not None:
            _path_params['secretValueResourceName'] = secret_value_resource_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def mesh_secret_value_list(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> PagedSecretValueResourceDescriptionList:
        """List names of all values of the specified secret resource.

        Gets information about all secret value resources of the specified secret resource. The information includes the names of the secret value resources, but not the actual values.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_list_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PagedSecretValueResourceDescriptionList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def mesh_secret_value_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[PagedSecretValueResourceDescriptionList]:
        """List names of all values of the specified secret resource.

        Gets information about all secret value resources of the specified secret resource. The information includes the names of the secret value resources, but not the actual values.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_list_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PagedSecretValueResourceDescriptionList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def mesh_secret_value_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """List names of all values of the specified secret resource.

        Gets information about all secret value resources of the specified secret resource. The information includes the names of the secret value resources, but not the actual values.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_list_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "PagedSecretValueResourceDescriptionList",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _mesh_secret_value_list_serialize(
        self,
        api_version,
        secret_resource_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if secret_resource_name is not None:
            _path_params['secretResourceName'] = secret_resource_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/Resources/Secrets/{secretResourceName}/values',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def mesh_secret_value_show(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> SecretValue:
        """Lists the specified value of the secret resource.

        Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_show_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValue",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def mesh_secret_value_show_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[SecretValue]:
        """Lists the specified value of the secret resource.

        Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_show_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValue",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def mesh_secret_value_show_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="The version of the API. This parameter is required and its value must be '6.4-preview'.")],
        secret_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource.")],
        secret_value_resource_name: Annotated[StrictStr, Field(description="The name of the secret resource value which is typically the version identifier for the value.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Lists the specified value of the secret resource.

        Lists the decrypted value of the specified named value of the secret resource. This is a privileged operation.

        :param api_version: The version of the API. This parameter is required and its value must be '6.4-preview'. (required)
        :type api_version: str
        :param secret_resource_name: The name of the secret resource. (required)
        :type secret_resource_name: str
        :param secret_value_resource_name: The name of the secret resource value which is typically the version identifier for the value. (required)
        :type secret_value_resource_name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._mesh_secret_value_show_serialize(
            api_version=api_version,
            secret_resource_name=secret_resource_name,
            secret_value_resource_name=secret_value_resource_name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "SecretValue",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _mesh_secret_value_show_serialize(
        self,
        api_version,
        secret_resource_name,
        secret_value_resource_name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if secret_resource_name is not None:
            _path_params['secretResourceName'] = secret_resource_name
        if secret_value_resource_name is not None:
            _path_params['secretValueResourceName'] = secret_value_resource_name
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/Resources/Secrets/{secretResourceName}/values/{secretValueResourceName}/list_value',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


