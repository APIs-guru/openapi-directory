# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.4.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deployed_application_health_state_chunk import DeployedApplicationHealthStateChunk

class TestDeployedApplicationHealthStateChunk(unittest.TestCase):
    """DeployedApplicationHealthStateChunk unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeployedApplicationHealthStateChunk:
        """Test DeployedApplicationHealthStateChunk
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeployedApplicationHealthStateChunk`
        """
        model = DeployedApplicationHealthStateChunk()
        if include_optional:
            return DeployedApplicationHealthStateChunk(
                deployed_service_package_health_state_chunks = openapi_client.models.deployed_service_package_health_state_chunk_list.DeployedServicePackageHealthStateChunkList(
                    items = [
                        openapi_client.models.deployed_service_package_health_state_chunk.DeployedServicePackageHealthStateChunk(
                            service_manifest_name = '', 
                            service_package_activation_id = '', )
                        ], ),
                node_name = '',
                health_state = 'Invalid'
            )
        else:
            return DeployedApplicationHealthStateChunk(
        )
        """

    def testDeployedApplicationHealthStateChunk(self):
        """Test DeployedApplicationHealthStateChunk"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
