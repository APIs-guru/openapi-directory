# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.4.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deployed_stateful_service_replica_detail_info import DeployedStatefulServiceReplicaDetailInfo

class TestDeployedStatefulServiceReplicaDetailInfo(unittest.TestCase):
    """DeployedStatefulServiceReplicaDetailInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeployedStatefulServiceReplicaDetailInfo:
        """Test DeployedStatefulServiceReplicaDetailInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeployedStatefulServiceReplicaDetailInfo`
        """
        model = DeployedStatefulServiceReplicaDetailInfo()
        if include_optional:
            return DeployedStatefulServiceReplicaDetailInfo(
                current_replicator_operation = 'Invalid',
                deployed_service_replica_query_result = openapi_client.models.deployed_stateful_service_replica_info.DeployedStatefulServiceReplicaInfo(
                    reconfiguration_information = openapi_client.models.reconfiguration_information.ReconfigurationInformation(
                        previous_configuration_role = 'Unknown', 
                        reconfiguration_phase = 'Unknown', 
                        reconfiguration_start_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        reconfiguration_type = 'Unknown', ), 
                    replica_id = '', 
                    replica_role = 'Unknown', ),
                read_status = 'Invalid',
                replica_id = '',
                replica_status = openapi_client.models.key_value_store_replica_status.KeyValueStoreReplicaStatus(
                    copy_notification_current_key_filter = '', 
                    copy_notification_current_progress = '', 
                    database_logical_size_estimate = '', 
                    database_row_count_estimate = '', 
                    status_details = '', ),
                replicator_status = openapi_client.models.replicator_status.ReplicatorStatus(
                    kind = 'Unknown', ),
                write_status = 'Invalid'
            )
        else:
            return DeployedStatefulServiceReplicaDetailInfo(
        )
        """

    def testDeployedStatefulServiceReplicaDetailInfo(self):
        """Test DeployedStatefulServiceReplicaDetailInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
