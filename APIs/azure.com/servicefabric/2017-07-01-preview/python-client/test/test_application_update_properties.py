# coding: utf-8

"""
    ServiceFabricManagementClient

    Azure Service Fabric Resource Provider API Client

    The version of the OpenAPI document: 2017-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application_update_properties import ApplicationUpdateProperties

class TestApplicationUpdateProperties(unittest.TestCase):
    """ApplicationUpdateProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ApplicationUpdateProperties:
        """Test ApplicationUpdateProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ApplicationUpdateProperties`
        """
        model = ApplicationUpdateProperties()
        if include_optional:
            return ApplicationUpdateProperties(
                maximum_nodes = 0,
                metrics = [
                    openapi_client.models.application_metric_description.ApplicationMetricDescription(
                        maximum_capacity = 56, 
                        name = '', 
                        reservation_capacity = 56, 
                        total_application_capacity = 56, )
                    ],
                minimum_nodes = 0,
                parameters = [
                    openapi_client.models.application_parameter.ApplicationParameter(
                        key = '', 
                        value = '', )
                    ],
                remove_application_capacity = True,
                type_version = '',
                upgrade_policy = openapi_client.models.application_upgrade_policy.ApplicationUpgradePolicy(
                    application_health_policy = openapi_client.models.application_health_policy.ApplicationHealthPolicy(
                        consider_warning_as_error = True, 
                        default_service_type_health_policy = openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                            max_percent_unhealthy_partitions_per_service = 56, 
                            max_percent_unhealthy_replicas_per_partition = 56, 
                            max_percent_unhealthy_services = 56, ), 
                        max_percent_unhealthy_deployed_applications = 56, 
                        service_type_health_policy_map = [
                            openapi_client.models.service_type_health_policy_map_item.ServiceTypeHealthPolicyMapItem(
                                key = '', 
                                value = openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                    max_percent_unhealthy_partitions_per_service = 56, 
                                    max_percent_unhealthy_replicas_per_partition = 56, 
                                    max_percent_unhealthy_services = 56, ), )
                            ], ), 
                    force_restart = True, 
                    rolling_upgrade_monitoring_policy = openapi_client.models.rolling_upgrade_monitoring_policy.RollingUpgradeMonitoringPolicy(
                        health_check_retry_timeout = 'PT0H10M0S', 
                        health_check_stable_duration = 'PT0H2M0S', 
                        health_check_wait_duration = '0', 
                        upgrade_domain_timeout = 'P10675199DT02H48M05.4775807S', 
                        upgrade_timeout = 'P10675199DT02H48M05.4775807S', ), 
                    upgrade_replica_set_check_timeout = 56, )
            )
        else:
            return ApplicationUpdateProperties(
        )
        """

    def testApplicationUpdateProperties(self):
        """Test ApplicationUpdateProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
