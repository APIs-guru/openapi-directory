# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.5.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.load_metric_information import LoadMetricInformation

class TestLoadMetricInformation(unittest.TestCase):
    """LoadMetricInformation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LoadMetricInformation:
        """Test LoadMetricInformation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LoadMetricInformation`
        """
        model = LoadMetricInformation()
        if include_optional:
            return LoadMetricInformation(
                action = '',
                activity_threshold = '',
                balancing_threshold = '',
                buffered_cluster_capacity_remaining = '',
                cluster_buffered_capacity = '',
                cluster_capacity = '',
                cluster_capacity_remaining = '',
                cluster_load = '',
                cluster_remaining_buffered_capacity = '',
                cluster_remaining_capacity = '',
                current_cluster_load = '',
                deviation_after = '',
                deviation_before = '',
                is_balanced_after = True,
                is_balanced_before = True,
                is_cluster_capacity_violation = True,
                max_node_load_node_id = openapi_client.models.node_id.NodeId(
                    id = '', ),
                max_node_load_value = '',
                maximum_node_load = '',
                min_node_load_node_id = openapi_client.models.node_id.NodeId(
                    id = '', ),
                min_node_load_value = '',
                minimum_node_load = '',
                name = '',
                node_buffer_percentage = '',
                planned_load_removal = ''
            )
        else:
            return LoadMetricInformation(
        )
        """

    def testLoadMetricInformation(self):
        """Test LoadMetricInformation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
