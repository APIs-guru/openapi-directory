# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.5.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster_configuration_upgrade_description import ClusterConfigurationUpgradeDescription

class TestClusterConfigurationUpgradeDescription(unittest.TestCase):
    """ClusterConfigurationUpgradeDescription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusterConfigurationUpgradeDescription:
        """Test ClusterConfigurationUpgradeDescription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusterConfigurationUpgradeDescription`
        """
        model = ClusterConfigurationUpgradeDescription()
        if include_optional:
            return ClusterConfigurationUpgradeDescription(
                application_health_policies = openapi_client.models.application_health_policies.ApplicationHealthPolicies(
                    application_health_policy_map = [
                        openapi_client.models.application_health_policy_map_item.ApplicationHealthPolicyMapItem(
                            key = '', 
                            value = openapi_client.models.application_health_policy.ApplicationHealthPolicy(
                                consider_warning_as_error = True, 
                                default_service_type_health_policy = openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                    max_percent_unhealthy_partitions_per_service = 56, 
                                    max_percent_unhealthy_replicas_per_partition = 56, 
                                    max_percent_unhealthy_services = 56, ), 
                                max_percent_unhealthy_deployed_applications = 56, 
                                service_type_health_policy_map = [
                                    openapi_client.models.service_type_health_policy_map_item.ServiceTypeHealthPolicyMapItem(
                                        key = '', 
                                        value = openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                            max_percent_unhealthy_partitions_per_service = 56, 
                                            max_percent_unhealthy_replicas_per_partition = 56, 
                                            max_percent_unhealthy_services = 56, ), )
                                    ], ), )
                        ], ),
                cluster_config = '',
                health_check_retry_timeout = 'PT0H0M0S',
                health_check_stable_duration_in_seconds = 'PT0H0M0S',
                health_check_wait_duration_in_seconds = 'PT0H0M0S',
                max_percent_delta_unhealthy_nodes = 56,
                max_percent_unhealthy_applications = 56,
                max_percent_unhealthy_nodes = 56,
                max_percent_upgrade_domain_delta_unhealthy_nodes = 56,
                upgrade_domain_timeout_in_seconds = 'PT0H0M0S',
                upgrade_timeout_in_seconds = 'PT0H0M0S'
            )
        else:
            return ClusterConfigurationUpgradeDescription(
                cluster_config = '',
        )
        """

    def testClusterConfigurationUpgradeDescription(self):
        """Test ClusterConfigurationUpgradeDescription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
