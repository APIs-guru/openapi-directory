# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.5.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_backup_by_storage_query_description import GetBackupByStorageQueryDescription

class TestGetBackupByStorageQueryDescription(unittest.TestCase):
    """GetBackupByStorageQueryDescription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetBackupByStorageQueryDescription:
        """Test GetBackupByStorageQueryDescription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetBackupByStorageQueryDescription`
        """
        model = GetBackupByStorageQueryDescription()
        if include_optional:
            return GetBackupByStorageQueryDescription(
                backup_entity = openapi_client.models.backup_entity.BackupEntity(
                    entity_kind = 'Invalid', ),
                end_date_time_filter = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                latest = True,
                start_date_time_filter = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                storage = openapi_client.models.backup_storage_description.BackupStorageDescription(
                    friendly_name = '', 
                    storage_kind = 'Invalid', )
            )
        else:
            return GetBackupByStorageQueryDescription(
                backup_entity = openapi_client.models.backup_entity.BackupEntity(
                    entity_kind = 'Invalid', ),
                storage = openapi_client.models.backup_storage_description.BackupStorageDescription(
                    friendly_name = '', 
                    storage_kind = 'Invalid', ),
        )
        """

    def testGetBackupByStorageQueryDescription(self):
        """Test GetBackupByStorageQueryDescription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
