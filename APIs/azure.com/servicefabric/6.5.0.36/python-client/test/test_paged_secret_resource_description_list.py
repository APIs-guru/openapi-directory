# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.5.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.paged_secret_resource_description_list import PagedSecretResourceDescriptionList

class TestPagedSecretResourceDescriptionList(unittest.TestCase):
    """PagedSecretResourceDescriptionList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PagedSecretResourceDescriptionList:
        """Test PagedSecretResourceDescriptionList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PagedSecretResourceDescriptionList`
        """
        model = PagedSecretResourceDescriptionList()
        if include_optional:
            return PagedSecretResourceDescriptionList(
                continuation_token = '',
                items = [
                    openapi_client.models.secret_resource_description.SecretResourceDescription(
                        name = '', 
                        properties = openapi_client.models.secret_resource_properties.SecretResourceProperties(
                            content_type = '', 
                            description = '', 
                            status = 'Unknown', 
                            status_details = '', ), )
                    ]
            )
        else:
            return PagedSecretResourceDescriptionList(
        )
        """

    def testPagedSecretResourceDescriptionList(self):
        """Test PagedSecretResourceDescriptionList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
