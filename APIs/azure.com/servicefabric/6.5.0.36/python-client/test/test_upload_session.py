# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.5.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.upload_session import UploadSession

class TestUploadSession(unittest.TestCase):
    """UploadSession unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UploadSession:
        """Test UploadSession
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UploadSession`
        """
        model = UploadSession()
        if include_optional:
            return UploadSession(
                upload_sessions = [
                    openapi_client.models.upload_session_info.UploadSessionInfo(
                        expected_ranges = [
                            openapi_client.models.upload_chunk_range.UploadChunkRange(
                                end_position = '', 
                                start_position = '', )
                            ], 
                        file_size = '', 
                        modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        session_id = '', 
                        store_relative_path = '', )
                    ]
            )
        else:
            return UploadSession(
        )
        """

    def testUploadSession(self):
        """Test UploadSession"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
