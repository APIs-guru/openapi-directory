# coding: utf-8

"""
    Service Fabric Client APIs

    Service Fabric REST Client APIs allows management of Service Fabric clusters, applications and services.

    The version of the OpenAPI document: 6.5.0.36
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.http_route_config import HttpRouteConfig

class TestHttpRouteConfig(unittest.TestCase):
    """HttpRouteConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HttpRouteConfig:
        """Test HttpRouteConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HttpRouteConfig`
        """
        model = HttpRouteConfig()
        if include_optional:
            return HttpRouteConfig(
                destination = openapi_client.models.gateway_destination.GatewayDestination(
                    application_name = '', 
                    endpoint_name = '', 
                    service_name = '', ),
                match = openapi_client.models.http_route_match_rule.HttpRouteMatchRule(
                    headers = [
                        openapi_client.models.http_route_match_header.HttpRouteMatchHeader(
                            name = '', 
                            type = 'exact', 
                            value = '', )
                        ], 
                    path = openapi_client.models.http_route_match_path.HttpRouteMatchPath(
                        rewrite = '', 
                        type = 'prefix', 
                        value = '', ), ),
                name = ''
            )
        else:
            return HttpRouteConfig(
                destination = openapi_client.models.gateway_destination.GatewayDestination(
                    application_name = '', 
                    endpoint_name = '', 
                    service_name = '', ),
                match = openapi_client.models.http_route_match_rule.HttpRouteMatchRule(
                    headers = [
                        openapi_client.models.http_route_match_header.HttpRouteMatchHeader(
                            name = '', 
                            type = 'exact', 
                            value = '', )
                        ], 
                    path = openapi_client.models.http_route_match_path.HttpRouteMatchPath(
                        rewrite = '', 
                        type = 'prefix', 
                        value = '', ), ),
                name = '',
        )
        """

    def testHttpRouteConfig(self):
        """Test HttpRouteConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
