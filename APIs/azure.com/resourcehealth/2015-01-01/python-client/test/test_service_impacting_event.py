# coding: utf-8

"""
    Microsoft.ResourceHealth

    The Resource Health Client.

    The version of the OpenAPI document: 2015-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_impacting_event import ServiceImpactingEvent

class TestServiceImpactingEvent(unittest.TestCase):
    """ServiceImpactingEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceImpactingEvent:
        """Test ServiceImpactingEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceImpactingEvent`
        """
        model = ServiceImpactingEvent()
        if include_optional:
            return ServiceImpactingEvent(
                correlation_id = '',
                event_start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                event_status_last_modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                incident_properties = openapi_client.models.service_impacting_event_incident_properties.serviceImpactingEvent_incidentProperties(
                    incident_type = '', 
                    region = '', 
                    service = '', 
                    title = '', ),
                status = openapi_client.models.service_impacting_event_status.serviceImpactingEvent_status(
                    value = '', )
            )
        else:
            return ServiceImpactingEvent(
        )
        """

    def testServiceImpactingEvent(self):
        """Test ServiceImpactingEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
