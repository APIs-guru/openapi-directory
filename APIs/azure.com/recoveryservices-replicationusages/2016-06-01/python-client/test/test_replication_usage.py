# coding: utf-8

"""
    RecoveryServicesClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.replication_usage import ReplicationUsage

class TestReplicationUsage(unittest.TestCase):
    """ReplicationUsage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReplicationUsage:
        """Test ReplicationUsage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReplicationUsage`
        """
        model = ReplicationUsage()
        if include_optional:
            return ReplicationUsage(
                jobs_summary = openapi_client.models.jobs_summary.JobsSummary(
                    failed_jobs = 56, 
                    in_progress_jobs = 56, 
                    suspended_jobs = 56, ),
                monitoring_summary = openapi_client.models.monitoring_summary.MonitoringSummary(
                    deprecated_provider_count = 56, 
                    events_count = 56, 
                    supported_provider_count = 56, 
                    un_healthy_provider_count = 56, 
                    un_healthy_vm_count = 56, 
                    unsupported_provider_count = 56, ),
                protected_item_count = 56,
                recovery_plan_count = 56,
                recovery_services_provider_auth_type = 56,
                registered_servers_count = 56
            )
        else:
            return ReplicationUsage(
        )
        """

    def testReplicationUsage(self):
        """Test ReplicationUsage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
