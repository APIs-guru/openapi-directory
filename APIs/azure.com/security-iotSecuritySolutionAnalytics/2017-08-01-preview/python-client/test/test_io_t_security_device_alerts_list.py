# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2017-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.io_t_security_device_alerts_list import IoTSecurityDeviceAlertsList

class TestIoTSecurityDeviceAlertsList(unittest.TestCase):
    """IoTSecurityDeviceAlertsList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoTSecurityDeviceAlertsList:
        """Test IoTSecurityDeviceAlertsList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoTSecurityDeviceAlertsList`
        """
        model = IoTSecurityDeviceAlertsList()
        if include_optional:
            return IoTSecurityDeviceAlertsList(
                next_link = '',
                value = [
                    openapi_client.models.io_t_security_device_alert.IoTSecurityDeviceAlert(
                        alert_display_name = '', 
                        alerts_count = 56, 
                        reported_severity = 'Informational', )
                    ]
            )
        else:
            return IoTSecurityDeviceAlertsList(
                value = [
                    openapi_client.models.io_t_security_device_alert.IoTSecurityDeviceAlert(
                        alert_display_name = '', 
                        alerts_count = 56, 
                        reported_severity = 'Informational', )
                    ],
        )
        """

    def testIoTSecurityDeviceAlertsList(self):
        """Test IoTSecurityDeviceAlertsList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
