# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2017-08-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.io_t_security_aggregated_recommendation import IoTSecurityAggregatedRecommendation

class TestIoTSecurityAggregatedRecommendation(unittest.TestCase):
    """IoTSecurityAggregatedRecommendation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IoTSecurityAggregatedRecommendation:
        """Test IoTSecurityAggregatedRecommendation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IoTSecurityAggregatedRecommendation`
        """
        model = IoTSecurityAggregatedRecommendation()
        if include_optional:
            return IoTSecurityAggregatedRecommendation(
                properties = openapi_client.models.io_t_security_aggregated_recommendation_properties.IoTSecurityAggregatedRecommendationProperties(
                    description = '', 
                    detected_by = '', 
                    healthy_devices = 56, 
                    log_analytics_query = '', 
                    recommendation_display_name = '', 
                    recommendation_name = '', 
                    recommendation_type_id = '', 
                    remediation_steps = '', 
                    reported_severity = 'Informational', 
                    unhealthy_device_count = 56, ),
                tags = {
                    'key' : ''
                    },
                id = '',
                name = '',
                type = ''
            )
        else:
            return IoTSecurityAggregatedRecommendation(
        )
        """

    def testIoTSecurityAggregatedRecommendation(self):
        """Test IoTSecurityAggregatedRecommendation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
