# coding: utf-8

"""
    AdvisorManagementClient

    REST APIs for Azure Advisor

    The version of the OpenAPI document: 2020-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.configuration_list_result import ConfigurationListResult

class TestConfigurationListResult(unittest.TestCase):
    """ConfigurationListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConfigurationListResult:
        """Test ConfigurationListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConfigurationListResult`
        """
        model = ConfigurationListResult()
        if include_optional:
            return ConfigurationListResult(
                next_link = '',
                value = [
                    openapi_client.models.config_data.ConfigData(
                        properties = openapi_client.models.config_data_properties.ConfigDataProperties(
                            digests = [
                                openapi_client.models.digest_config.DigestConfig(
                                    action_group_resource_id = '', 
                                    categories = [
                                        'HighAvailability'
                                        ], 
                                    frequency = 56, 
                                    language = '', 
                                    name = '', 
                                    state = 'Active', )
                                ], 
                            exclude = True, 
                            low_cpu_threshold = '5', ), )
                    ]
            )
        else:
            return ConfigurationListResult(
        )
        """

    def testConfigurationListResult(self):
        """Test ConfigurationListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
