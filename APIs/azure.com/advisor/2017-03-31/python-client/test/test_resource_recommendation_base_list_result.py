# coding: utf-8

"""
    AdvisorManagementClient

    REST APIs for Azure Advisor

    The version of the OpenAPI document: 2017-03-31
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resource_recommendation_base_list_result import ResourceRecommendationBaseListResult

class TestResourceRecommendationBaseListResult(unittest.TestCase):
    """ResourceRecommendationBaseListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceRecommendationBaseListResult:
        """Test ResourceRecommendationBaseListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceRecommendationBaseListResult`
        """
        model = ResourceRecommendationBaseListResult()
        if include_optional:
            return ResourceRecommendationBaseListResult(
                next_link = '',
                value = [
                    openapi_client.models.resource_recommendation_base.ResourceRecommendationBase(
                        properties = openapi_client.models.recommendation_properties.RecommendationProperties(
                            category = 'HighAvailability', 
                            impact = 'High', 
                            impacted_field = '', 
                            impacted_value = '', 
                            last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            metadata = {
                                'key' : None
                                }, 
                            recommendation_type_id = '', 
                            risk = 'Error', 
                            short_description = openapi_client.models.short_description.ShortDescription(
                                problem = '', 
                                solution = '', ), 
                            suppression_ids = [
                                ''
                                ], ), )
                    ]
            )
        else:
            return ResourceRecommendationBaseListResult(
        )
        """

    def testResourceRecommendationBaseListResult(self):
        """Test ResourceRecommendationBaseListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
