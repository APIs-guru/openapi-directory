# coding: utf-8

"""
    StorageImportExport

    The Storage Import/Export Resource Provider API.

    The version of the OpenAPI document: 2016-11-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.put_job_parameters import PutJobParameters

class TestPutJobParameters(unittest.TestCase):
    """PutJobParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PutJobParameters:
        """Test PutJobParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PutJobParameters`
        """
        model = PutJobParameters()
        if include_optional:
            return PutJobParameters(
                location = '',
                properties = openapi_client.models.job_details.JobDetails(
                    backup_drive_manifest = True, 
                    cancel_requested = True, 
                    delivery_package = openapi_client.models.package_infomation.PackageInfomation(
                        carrier_name = '', 
                        drive_count = 56, 
                        ship_date = '', 
                        tracking_number = '', ), 
                    diagnostics_path = '', 
                    drive_list = [
                        openapi_client.models.drive_status.DriveStatus(
                            bit_locker_key = '', 
                            bytes_succeeded = 56, 
                            copy_status = '', 
                            drive_header_hash = '', 
                            drive_id = '', 
                            error_log_uri = '', 
                            manifest_file = '', 
                            manifest_hash = '', 
                            manifest_uri = '', 
                            percent_complete = 56, 
                            state = 'Specified', 
                            verbose_log_uri = '', )
                        ], 
                    export = openapi_client.models.export.Export(
                        blob_list = openapi_client.models.export_blob_list.Export_blobList(
                            blob_path = [
                                ''
                                ], 
                            blob_path_prefix = [
                                ''
                                ], ), 
                        blob_listblob_path = '', ), 
                    incomplete_blob_list_uri = '', 
                    job_type = '', 
                    log_level = '', 
                    percent_complete = 56, 
                    provisioning_state = '', 
                    return_address = openapi_client.models.return_address.ReturnAddress(
                        city = '', 
                        country_or_region = '', 
                        email = '', 
                        phone = '', 
                        postal_code = '', 
                        recipient_name = '', 
                        state_or_province = '', 
                        street_address1 = '', 
                        street_address2 = '', ), 
                    return_package = openapi_client.models.package_infomation.PackageInfomation(
                        carrier_name = '', 
                        drive_count = 56, 
                        ship_date = '', 
                        tracking_number = '', ), 
                    return_shipping = openapi_client.models.return_shipping.ReturnShipping(
                        carrier_account_number = '', 
                        carrier_name = '', ), 
                    shipping_information = openapi_client.models.shipping_information.ShippingInformation(
                        city = '', 
                        country_or_region = '', 
                        phone = '', 
                        postal_code = '', 
                        recipient_name = '', 
                        state_or_province = '', 
                        street_address1 = '', 
                        street_address2 = '', ), 
                    state = '', 
                    storage_account_id = '', ),
                tags = None
            )
        else:
            return PutJobParameters(
        )
        """

    def testPutJobParameters(self):
        """Test PutJobParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
