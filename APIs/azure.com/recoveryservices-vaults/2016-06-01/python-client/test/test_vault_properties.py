# coding: utf-8

"""
    RecoveryServicesClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-06-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vault_properties import VaultProperties

class TestVaultProperties(unittest.TestCase):
    """VaultProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VaultProperties:
        """Test VaultProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VaultProperties`
        """
        model = VaultProperties()
        if include_optional:
            return VaultProperties(
                provisioning_state = '',
                upgrade_details = openapi_client.models.upgrade_details.UpgradeDetails(
                    end_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    message = '', 
                    operation_id = '', 
                    previous_resource_id = '', 
                    start_time_utc = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    status = 'Unknown', 
                    trigger_type = 'UserTriggered', 
                    upgraded_resource_id = '', )
            )
        else:
            return VaultProperties(
        )
        """

    def testVaultProperties(self):
        """Test VaultProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
