# coding: utf-8

"""
    ADHybridHealthService

    REST APIs for Azure Active Directory Connect Health

    The version of the OpenAPI document: 2014-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import datetime
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class ExportError(BaseModel):
    """
    The export error details.
    """ # noqa: E501
    aad_display_name: Optional[StrictStr] = Field(default=None, description="The AAD side display name", alias="aadDisplayName")
    aad_distinguished_name: Optional[StrictStr] = Field(default=None, description="The AAD side distinguished name for the object.", alias="aadDistinguishedName")
    aad_mail: Optional[StrictStr] = Field(default=None, description="The AAD side email for the object.", alias="aadMail")
    aad_object_guid: Optional[StrictStr] = Field(default=None, description="The AAD side object guid.", alias="aadObjectGuid")
    aad_object_type: Optional[StrictStr] = Field(default=None, description="The AAD side object type.", alias="aadObjectType")
    aad_source_of_authority: Optional[StrictStr] = Field(default=None, description="The AAD side source of authority for the object.", alias="aadSourceOfAuthority")
    aad_user_principal_name: Optional[StrictStr] = Field(default=None, description="The AAD side user principal name.", alias="aadUserPrincipalName")
    ad_display_name: Optional[StrictStr] = Field(default=None, description="The display name for the AD object.", alias="adDisplayName")
    ad_distinguished_name: Optional[StrictStr] = Field(default=None, description="The distinguished name for the AD object.", alias="adDistinguishedName")
    ad_mail: Optional[StrictStr] = Field(default=None, description="The email for the AD object.", alias="adMail")
    ad_object_guid: Optional[StrictStr] = Field(default=None, description="The AD object guid.", alias="adObjectGuid")
    ad_object_type: Optional[StrictStr] = Field(default=None, description="The AD object type", alias="adObjectType")
    ad_source_anchor: Optional[StrictStr] = Field(default=None, description="The AD source anchor.", alias="adSourceAnchor")
    ad_source_of_authority: Optional[StrictStr] = Field(default=None, description="The source of authority for the AD object.", alias="adSourceOfAuthority")
    ad_user_principal_name: Optional[StrictStr] = Field(default=None, description="The user principal name for the AD object.", alias="adUserPrincipalName")
    attribute_multi_value: Optional[StrictBool] = Field(default=None, description="Indicates if the attribute is multi valued or not.", alias="attributeMultiValue")
    attribute_name: Optional[StrictStr] = Field(default=None, description="The attribute name.", alias="attributeName")
    attribute_value: Optional[StrictStr] = Field(default=None, description="The attribute value.", alias="attributeValue")
    cloud_anchor: Optional[StrictStr] = Field(default=None, description="The name of the cloud anchor.", alias="cloudAnchor")
    connector_id: Optional[StrictStr] = Field(default=None, description="The connector Id.", alias="connectorId")
    cs_object_id: Optional[StrictStr] = Field(default=None, description="The cloud object Id.", alias="csObjectId")
    dn: Optional[StrictStr] = Field(default=None, description="The distinguished name.")
    error_code: Optional[StrictStr] = Field(default=None, description="The error code.", alias="errorCode")
    id: Optional[StrictStr] = Field(default=None, description="The error Id.")
    last_dir_sync_time: Optional[datetime] = Field(default=None, description="The date and time of last sync run.", alias="lastDirSyncTime")
    max_limit: Optional[StrictStr] = Field(default=None, description="The maximum limit.", alias="maxLimit")
    message: Optional[StrictStr] = Field(default=None, description="The export error message.")
    min_limit: Optional[StrictStr] = Field(default=None, description="The minimum limit.", alias="minLimit")
    modified_attribute_value: Optional[StrictStr] = Field(default=None, description="The modified attribute value.", alias="modifiedAttributeValue")
    object_id_conflict: Optional[StrictStr] = Field(default=None, description="The object Id with which there was an attribute conflict.", alias="objectIdConflict")
    retry_count: Optional[StrictInt] = Field(default=None, description="The retry count.", alias="retryCount")
    run_step_result_id: Optional[StrictStr] = Field(default=None, description="The run step result Id.", alias="runStepResultId")
    sam_account_name: Optional[StrictStr] = Field(default=None, description="The SAM account name.", alias="samAccountName")
    server_error_detail: Optional[StrictStr] = Field(default=None, description="The server error detail.", alias="serverErrorDetail")
    time_first_occured: Optional[datetime] = Field(default=None, description="The date and time when the export error first occurred.", alias="timeFirstOccured")
    time_occured: Optional[datetime] = Field(default=None, description="The date and time of occurrence.", alias="timeOccured")
    type: Optional[StrictStr] = Field(default=None, description="The type of error.")
    __properties: ClassVar[List[str]] = ["aadDisplayName", "aadDistinguishedName", "aadMail", "aadObjectGuid", "aadObjectType", "aadSourceOfAuthority", "aadUserPrincipalName", "adDisplayName", "adDistinguishedName", "adMail", "adObjectGuid", "adObjectType", "adSourceAnchor", "adSourceOfAuthority", "adUserPrincipalName", "attributeMultiValue", "attributeName", "attributeValue", "cloudAnchor", "connectorId", "csObjectId", "dn", "errorCode", "id", "lastDirSyncTime", "maxLimit", "message", "minLimit", "modifiedAttributeValue", "objectIdConflict", "retryCount", "runStepResultId", "samAccountName", "serverErrorDetail", "timeFirstOccured", "timeOccured", "type"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of ExportError from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of ExportError from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "aadDisplayName": obj.get("aadDisplayName"),
            "aadDistinguishedName": obj.get("aadDistinguishedName"),
            "aadMail": obj.get("aadMail"),
            "aadObjectGuid": obj.get("aadObjectGuid"),
            "aadObjectType": obj.get("aadObjectType"),
            "aadSourceOfAuthority": obj.get("aadSourceOfAuthority"),
            "aadUserPrincipalName": obj.get("aadUserPrincipalName"),
            "adDisplayName": obj.get("adDisplayName"),
            "adDistinguishedName": obj.get("adDistinguishedName"),
            "adMail": obj.get("adMail"),
            "adObjectGuid": obj.get("adObjectGuid"),
            "adObjectType": obj.get("adObjectType"),
            "adSourceAnchor": obj.get("adSourceAnchor"),
            "adSourceOfAuthority": obj.get("adSourceOfAuthority"),
            "adUserPrincipalName": obj.get("adUserPrincipalName"),
            "attributeMultiValue": obj.get("attributeMultiValue"),
            "attributeName": obj.get("attributeName"),
            "attributeValue": obj.get("attributeValue"),
            "cloudAnchor": obj.get("cloudAnchor"),
            "connectorId": obj.get("connectorId"),
            "csObjectId": obj.get("csObjectId"),
            "dn": obj.get("dn"),
            "errorCode": obj.get("errorCode"),
            "id": obj.get("id"),
            "lastDirSyncTime": obj.get("lastDirSyncTime"),
            "maxLimit": obj.get("maxLimit"),
            "message": obj.get("message"),
            "minLimit": obj.get("minLimit"),
            "modifiedAttributeValue": obj.get("modifiedAttributeValue"),
            "objectIdConflict": obj.get("objectIdConflict"),
            "retryCount": obj.get("retryCount"),
            "runStepResultId": obj.get("runStepResultId"),
            "samAccountName": obj.get("samAccountName"),
            "serverErrorDetail": obj.get("serverErrorDetail"),
            "timeFirstOccured": obj.get("timeFirstOccured"),
            "timeOccured": obj.get("timeOccured"),
            "type": obj.get("type")
        })
        return _obj


