# coding: utf-8

"""
    ADHybridHealthService

    REST APIs for Azure Active Directory Connect Health

    The version of the OpenAPI document: 2014-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.alerts import Alerts

class TestAlerts(unittest.TestCase):
    """Alerts unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Alerts:
        """Test Alerts
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Alerts`
        """
        model = Alerts()
        if include_optional:
            return Alerts(
                continuation_token = '',
                next_link = '',
                total_count = 56,
                value = [
                    openapi_client.models.alert.Alert(
                        active_alert_properties = [
                            openapi_client.models.item.Item(
                                key = '', 
                                value = '', )
                            ], 
                        additional_information = [
                            openapi_client.models.additional_information.AdditionalInformation(
                                has_properties = True, 
                                properties = openapi_client.models.properties.properties(), 
                                title_name = '', 
                                title_value = '', )
                            ], 
                        alert_id = '', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        display_name = '', 
                        last_updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        level = 'Warning', 
                        monitor_role_type = '', 
                        related_links = [
                            openapi_client.models.help_link.HelpLink(
                                title = '', 
                                url = '', )
                            ], 
                        remediation = '', 
                        resolved_alert_properties = [
                            openapi_client.models.item.Item(
                                key = '', 
                                value = '', )
                            ], 
                        resolved_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        scope = '', 
                        service_id = '', 
                        service_member_id = '', 
                        short_name = '', 
                        state = 'Active', 
                        tenant_id = '', )
                    ]
            )
        else:
            return Alerts(
        )
        """

    def testAlerts(self):
        """Test Alerts"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
