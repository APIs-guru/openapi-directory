# coding: utf-8

"""
    ADHybridHealthService

    REST APIs for Azure Active Directory Connect Health

    The version of the OpenAPI document: 2014-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inbound_replication_neighbor import InboundReplicationNeighbor

class TestInboundReplicationNeighbor(unittest.TestCase):
    """InboundReplicationNeighbor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InboundReplicationNeighbor:
        """Test InboundReplicationNeighbor
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InboundReplicationNeighbor`
        """
        model = InboundReplicationNeighbor()
        if include_optional:
            return InboundReplicationNeighbor(
                additional_info = '',
                consecutive_failure_count = 56,
                error_description = '',
                error_title = '',
                fix_details = '',
                fix_link = '',
                last_attempted_sync = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_error_code = 56,
                last_error_message = '',
                last_successful_sync = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                naming_context = '',
                source_domain_controller = '',
                status = 56
            )
        else:
            return InboundReplicationNeighbor(
        )
        """

    def testInboundReplicationNeighbor(self):
        """Test InboundReplicationNeighbor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
