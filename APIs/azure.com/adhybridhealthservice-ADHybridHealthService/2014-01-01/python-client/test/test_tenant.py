# coding: utf-8

"""
    ADHybridHealthService

    REST APIs for Azure Active Directory Connect Health

    The version of the OpenAPI document: 2014-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tenant import Tenant

class TestTenant(unittest.TestCase):
    """Tenant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Tenant:
        """Test Tenant
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Tenant`
        """
        model = Tenant()
        if include_optional:
            return Tenant(
                aad_license = '',
                aad_premium = True,
                agent_auto_update = True,
                alert_suppression_time_in_mins = 56,
                consented_to_microsoft_dev_ops = True,
                country_letter_code = '',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                dev_ops_ttl = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                disabled = True,
                disabled_reason = 56,
                global_admins_email = [
                    ''
                    ],
                initial_domain = '',
                last_disabled = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                last_verified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                onboarded = True,
                onboarding_allowed = True,
                pks_certificate = None,
                private_preview_tenant = True,
                tenant_id = '',
                tenant_in_quarantine = True,
                tenant_name = ''
            )
        else:
            return Tenant(
        )
        """

    def testTenant(self):
        """Test Tenant"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
