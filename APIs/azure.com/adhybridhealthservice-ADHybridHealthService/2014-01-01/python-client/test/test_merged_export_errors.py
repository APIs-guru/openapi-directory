# coding: utf-8

"""
    ADHybridHealthService

    REST APIs for Azure Active Directory Connect Health

    The version of the OpenAPI document: 2014-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merged_export_errors import MergedExportErrors

class TestMergedExportErrors(unittest.TestCase):
    """MergedExportErrors unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MergedExportErrors:
        """Test MergedExportErrors
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MergedExportErrors`
        """
        model = MergedExportErrors()
        if include_optional:
            return MergedExportErrors(
                value = [
                    openapi_client.models.merged_export_error.MergedExportError(
                        attribute_name = '', 
                        attribute_value = '', 
                        created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        cs_object_id = '', 
                        dn = '', 
                        existing_object = openapi_client.models.associated_object.AssociatedObject(
                            display_name = '', 
                            distinguished_name = '', 
                            last_dir_sync_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            mail = '', 
                            object_guid = '', 
                            object_type = '', 
                            onpremises_user_principal_name = '', 
                            proxy_addresses = '', 
                            source_anchor = '', 
                            source_of_authority = '', 
                            time_occurred = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            user_principal_name = '', ), 
                        export_error_status = 56, 
                        id = '', 
                        incoming_object = openapi_client.models.associated_object.AssociatedObject(
                            display_name = '', 
                            distinguished_name = '', 
                            last_dir_sync_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            mail = '', 
                            object_guid = '', 
                            object_type = '', 
                            onpremises_user_principal_name = '', 
                            proxy_addresses = '', 
                            source_anchor = '', 
                            source_of_authority = '', 
                            time_occurred = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            user_principal_name = '', ), 
                        incoming_object_display_name = '', 
                        incoming_object_type = '', 
                        merged_entity_id = '', 
                        modified_or_removed_attribute_value = '', 
                        run_step_result_id = '', 
                        sam_account_name = '', 
                        server_error_detail = '', 
                        service_id = '', 
                        service_member_id = '', 
                        time_first_occurred = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_occurred = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = '', 
                        user_principal_name = '', )
                    ]
            )
        else:
            return MergedExportErrors(
        )
        """

    def testMergedExportErrors(self):
        """Test MergedExportErrors"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
