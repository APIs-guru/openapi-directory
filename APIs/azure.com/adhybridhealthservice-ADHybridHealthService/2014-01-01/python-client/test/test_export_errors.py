# coding: utf-8

"""
    ADHybridHealthService

    REST APIs for Azure Active Directory Connect Health

    The version of the OpenAPI document: 2014-01-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.export_errors import ExportErrors

class TestExportErrors(unittest.TestCase):
    """ExportErrors unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportErrors:
        """Test ExportErrors
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportErrors`
        """
        model = ExportErrors()
        if include_optional:
            return ExportErrors(
                value = [
                    openapi_client.models.export_error.ExportError(
                        aad_display_name = '', 
                        aad_distinguished_name = '', 
                        aad_mail = '', 
                        aad_object_guid = '', 
                        aad_object_type = '', 
                        aad_source_of_authority = '', 
                        aad_user_principal_name = '', 
                        ad_display_name = '', 
                        ad_distinguished_name = '', 
                        ad_mail = '', 
                        ad_object_guid = '', 
                        ad_object_type = '', 
                        ad_source_anchor = '', 
                        ad_source_of_authority = '', 
                        ad_user_principal_name = '', 
                        attribute_multi_value = True, 
                        attribute_name = '', 
                        attribute_value = '', 
                        cloud_anchor = '', 
                        connector_id = '', 
                        cs_object_id = '', 
                        dn = '', 
                        error_code = '', 
                        id = '', 
                        last_dir_sync_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        max_limit = '', 
                        message = '', 
                        min_limit = '', 
                        modified_attribute_value = '', 
                        object_id_conflict = '', 
                        retry_count = 56, 
                        run_step_result_id = '', 
                        sam_account_name = '', 
                        server_error_detail = '', 
                        time_first_occured = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_occured = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = '', )
                    ]
            )
        else:
            return ExportErrors(
        )
        """

    def testExportErrors(self):
        """Test ExportErrors"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
