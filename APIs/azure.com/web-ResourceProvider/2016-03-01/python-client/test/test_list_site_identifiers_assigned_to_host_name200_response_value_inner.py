# coding: utf-8

"""
     API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_site_identifiers_assigned_to_host_name200_response_value_inner import ListSiteIdentifiersAssignedToHostName200ResponseValueInner

class TestListSiteIdentifiersAssignedToHostName200ResponseValueInner(unittest.TestCase):
    """ListSiteIdentifiersAssignedToHostName200ResponseValueInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListSiteIdentifiersAssignedToHostName200ResponseValueInner:
        """Test ListSiteIdentifiersAssignedToHostName200ResponseValueInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListSiteIdentifiersAssignedToHostName200ResponseValueInner`
        """
        model = ListSiteIdentifiersAssignedToHostName200ResponseValueInner()
        if include_optional:
            return ListSiteIdentifiersAssignedToHostName200ResponseValueInner(
                properties = openapi_client.models.list_site_identifiers_assigned_to_host_name_200_response_value_inner_properties.ListSiteIdentifiersAssignedToHostName_200_response_value_inner_properties(
                    id = '', )
            )
        else:
            return ListSiteIdentifiersAssignedToHostName200ResponseValueInner(
        )
        """

    def testListSiteIdentifiersAssignedToHostName200ResponseValueInner(self):
        """Test ListSiteIdentifiersAssignedToHostName200ResponseValueInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
