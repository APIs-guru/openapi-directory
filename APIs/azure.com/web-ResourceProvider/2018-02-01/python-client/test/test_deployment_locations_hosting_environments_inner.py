# coding: utf-8

"""
     API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deployment_locations_hosting_environments_inner import DeploymentLocationsHostingEnvironmentsInner

class TestDeploymentLocationsHostingEnvironmentsInner(unittest.TestCase):
    """DeploymentLocationsHostingEnvironmentsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeploymentLocationsHostingEnvironmentsInner:
        """Test DeploymentLocationsHostingEnvironmentsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeploymentLocationsHostingEnvironmentsInner`
        """
        model = DeploymentLocationsHostingEnvironmentsInner()
        if include_optional:
            return DeploymentLocationsHostingEnvironmentsInner(
                allowed_multi_sizes = '',
                allowed_worker_sizes = '',
                api_management_account_id = '',
                cluster_settings = [
                    openapi_client.models.deployment_locations_hosting_environments_inner_cluster_settings_inner.DeploymentLocations_hostingEnvironments_inner_clusterSettings_inner(
                        name = '', 
                        value = '', )
                    ],
                database_edition = '',
                database_service_objective = '',
                default_front_end_scale_factor = 56,
                dns_suffix = '',
                dynamic_cache_enabled = True,
                environment_capacities = [
                    openapi_client.models.deployment_locations_hosting_environments_inner_environment_capacities_inner.DeploymentLocations_hostingEnvironments_inner_environmentCapacities_inner(
                        available_capacity = 56, 
                        compute_mode = 'Shared', 
                        exclude_from_capacity_allocation = True, 
                        is_applicable_for_all_compute_modes = True, 
                        is_linux = True, 
                        name = '', 
                        site_mode = '', 
                        total_capacity = 56, 
                        unit = '', 
                        worker_size = 'Small', 
                        worker_size_id = 56, )
                    ],
                environment_is_healthy = True,
                environment_status = '',
                front_end_scale_factor = 56,
                has_linux_workers = True,
                internal_load_balancing_mode = 'None',
                ipssl_address_count = 56,
                last_action = '',
                last_action_result = '',
                location = '',
                maximum_number_of_machines = 56,
                multi_role_count = 56,
                multi_size = '',
                name = '',
                network_access_control_list = [
                    openapi_client.models.deployment_locations_hosting_environments_inner_network_access_control_list_inner.DeploymentLocations_hostingEnvironments_inner_networkAccessControlList_inner(
                        action = 'Permit', 
                        description = '', 
                        order = 56, 
                        remote_subnet = '', )
                    ],
                provisioning_state = 'Succeeded',
                resource_group = '',
                ssl_cert_key_vault_id = '',
                ssl_cert_key_vault_secret_name = '',
                status = 'Preparing',
                subscription_id = '',
                suspended = True,
                upgrade_domains = 56,
                user_whitelisted_ip_ranges = [
                    ''
                    ],
                vip_mappings = [
                    openapi_client.models.deployment_locations_hosting_environments_inner_vip_mappings_inner.DeploymentLocations_hostingEnvironments_inner_vipMappings_inner(
                        in_use = True, 
                        internal_http_port = 56, 
                        internal_https_port = 56, 
                        virtual_ip = '', )
                    ],
                virtual_network = openapi_client.models.deployment_locations_hosting_environments_inner_virtual_network.DeploymentLocations_hostingEnvironments_inner_virtualNetwork(
                    id = '', 
                    name = '', 
                    subnet = '', 
                    type = '', ),
                vnet_name = '',
                vnet_resource_group_name = '',
                vnet_subnet_name = '',
                worker_pools = [
                    openapi_client.models.deployment_locations_hosting_environments_inner_worker_pools_inner.DeploymentLocations_hostingEnvironments_inner_workerPools_inner(
                        compute_mode = 'Shared', 
                        instance_names = [
                            ''
                            ], 
                        worker_count = 56, 
                        worker_size = '', 
                        worker_size_id = 56, )
                    ]
            )
        else:
            return DeploymentLocationsHostingEnvironmentsInner(
                location = '',
                name = '',
                virtual_network = openapi_client.models.deployment_locations_hosting_environments_inner_virtual_network.DeploymentLocations_hostingEnvironments_inner_virtualNetwork(
                    id = '', 
                    name = '', 
                    subnet = '', 
                    type = '', ),
                worker_pools = [
                    openapi_client.models.deployment_locations_hosting_environments_inner_worker_pools_inner.DeploymentLocations_hostingEnvironments_inner_workerPools_inner(
                        compute_mode = 'Shared', 
                        instance_names = [
                            ''
                            ], 
                        worker_count = 56, 
                        worker_size = '', 
                        worker_size_id = 56, )
                    ],
        )
        """

    def testDeploymentLocationsHostingEnvironmentsInner(self):
        """Test DeploymentLocationsHostingEnvironmentsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
