# coding: utf-8

"""
     API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deployment_locations_hosting_environments_inner_worker_pools_inner import DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner

class TestDeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner(unittest.TestCase):
    """DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner:
        """Test DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner`
        """
        model = DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner()
        if include_optional:
            return DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner(
                compute_mode = 'Shared',
                instance_names = [
                    ''
                    ],
                worker_count = 56,
                worker_size = '',
                worker_size_id = 56
            )
        else:
            return DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner(
        )
        """

    def testDeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner(self):
        """Test DeploymentLocationsHostingEnvironmentsInnerWorkerPoolsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
