# coding: utf-8

"""
    Security Center

    API spec for Microsoft.Security (Azure Security Center) resource provider

    The version of the OpenAPI document: 2019-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.regulatory_compliance_standard_list import RegulatoryComplianceStandardList

class TestRegulatoryComplianceStandardList(unittest.TestCase):
    """RegulatoryComplianceStandardList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegulatoryComplianceStandardList:
        """Test RegulatoryComplianceStandardList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegulatoryComplianceStandardList`
        """
        model = RegulatoryComplianceStandardList()
        if include_optional:
            return RegulatoryComplianceStandardList(
                next_link = '',
                value = [
                    openapi_client.models.regulatory_compliance_standard.RegulatoryComplianceStandard(
                        properties = openapi_client.models.regulatory_compliance_standard_properties.RegulatoryComplianceStandardProperties(
                            failed_controls = 56, 
                            passed_controls = 56, 
                            skipped_controls = 56, 
                            state = 'Passed', 
                            unsupported_controls = 56, ), )
                    ]
            )
        else:
            return RegulatoryComplianceStandardList(
                value = [
                    openapi_client.models.regulatory_compliance_standard.RegulatoryComplianceStandard(
                        properties = openapi_client.models.regulatory_compliance_standard_properties.RegulatoryComplianceStandardProperties(
                            failed_controls = 56, 
                            passed_controls = 56, 
                            skipped_controls = 56, 
                            state = 'Passed', 
                            unsupported_controls = 56, ), )
                    ],
        )
        """

    def testRegulatoryComplianceStandardList(self):
        """Test RegulatoryComplianceStandardList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
