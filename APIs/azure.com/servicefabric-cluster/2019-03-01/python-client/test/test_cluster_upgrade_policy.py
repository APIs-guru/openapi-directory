# coding: utf-8

"""
    ServiceFabricManagementClient

    Azure Service Fabric Resource Provider API Client

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster_upgrade_policy import ClusterUpgradePolicy

class TestClusterUpgradePolicy(unittest.TestCase):
    """ClusterUpgradePolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusterUpgradePolicy:
        """Test ClusterUpgradePolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusterUpgradePolicy`
        """
        model = ClusterUpgradePolicy()
        if include_optional:
            return ClusterUpgradePolicy(
                delta_health_policy = openapi_client.models.cluster_upgrade_delta_health_policy.ClusterUpgradeDeltaHealthPolicy(
                    application_delta_health_policies = {
                        'key' : openapi_client.models.application_delta_health_policy.ApplicationDeltaHealthPolicy(
                            default_service_type_delta_health_policy = openapi_client.models.service_type_delta_health_policy.ServiceTypeDeltaHealthPolicy(
                                max_percent_delta_unhealthy_services = 0, ), 
                            service_type_delta_health_policies = {
                                'key' : openapi_client.models.service_type_delta_health_policy.ServiceTypeDeltaHealthPolicy(
                                    max_percent_delta_unhealthy_services = 0, )
                                }, )
                        }, 
                    max_percent_delta_unhealthy_applications = 0, 
                    max_percent_delta_unhealthy_nodes = 0, 
                    max_percent_upgrade_domain_delta_unhealthy_nodes = 0, ),
                force_restart = True,
                health_check_retry_timeout = '',
                health_check_stable_duration = '',
                health_check_wait_duration = '',
                health_policy = openapi_client.models.cluster_health_policy.ClusterHealthPolicy(
                    application_health_policies = {
                        'key' : openapi_client.models.application_health_policy.ApplicationHealthPolicy(
                            default_service_type_health_policy = openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                max_percent_unhealthy_services = 0, ), 
                            service_type_health_policies = {
                                'key' : openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                    max_percent_unhealthy_services = 0, )
                                }, )
                        }, 
                    max_percent_unhealthy_applications = 0, 
                    max_percent_unhealthy_nodes = 0, ),
                upgrade_domain_timeout = '',
                upgrade_replica_set_check_timeout = '',
                upgrade_timeout = ''
            )
        else:
            return ClusterUpgradePolicy(
                health_check_retry_timeout = '',
                health_check_stable_duration = '',
                health_check_wait_duration = '',
                health_policy = openapi_client.models.cluster_health_policy.ClusterHealthPolicy(
                    application_health_policies = {
                        'key' : openapi_client.models.application_health_policy.ApplicationHealthPolicy(
                            default_service_type_health_policy = openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                max_percent_unhealthy_services = 0, ), 
                            service_type_health_policies = {
                                'key' : openapi_client.models.service_type_health_policy.ServiceTypeHealthPolicy(
                                    max_percent_unhealthy_services = 0, )
                                }, )
                        }, 
                    max_percent_unhealthy_applications = 0, 
                    max_percent_unhealthy_nodes = 0, ),
                upgrade_domain_timeout = '',
                upgrade_replica_set_check_timeout = '',
                upgrade_timeout = '',
        )
        """

    def testClusterUpgradePolicy(self):
        """Test ClusterUpgradePolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
