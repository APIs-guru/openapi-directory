# coding: utf-8

"""
    AuthorizationManagementClient

    Role based access control provides you a way to apply granular level policy administration down to individual resources or resource groups. These operations enable you to manage role definitions and role assignments. A role definition describes the set of actions that can be performed on resources. A role assignment grants access to Azure Active Directory users.

    The version of the OpenAPI document: 2015-07-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resource_type import ResourceType

class TestResourceType(unittest.TestCase):
    """ResourceType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourceType:
        """Test ResourceType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourceType`
        """
        model = ResourceType()
        if include_optional:
            return ResourceType(
                display_name = '',
                name = '',
                operations = [
                    openapi_client.models.provider_operation.ProviderOperation(
                        description = '', 
                        display_name = '', 
                        name = '', 
                        origin = '', 
                        properties = openapi_client.models.properties.properties(), )
                    ]
            )
        else:
            return ResourceType(
        )
        """

    def testResourceType(self):
        """Test ResourceType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
