# coding: utf-8

"""
    Azure Machine Learning Compute Management Client

    These APIs allow end users to operate on Azure Machine Learning Compute resources. They support the following operations:<ul><li>Create or update a cluster</li><li>Get a cluster</li><li>Patch a cluster</li><li>Delete a cluster</li><li>Get keys for a cluster</li><li>Check if updates are available for system services in a cluster</li><li>Update system services in a cluster</li><li>Get all clusters in a resource group</li><li>Get all clusters in a subscription</li></ul>

    The version of the OpenAPI document: 2017-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.async_operation_status import AsyncOperationStatus

class TestAsyncOperationStatus(unittest.TestCase):
    """AsyncOperationStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AsyncOperationStatus:
        """Test AsyncOperationStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AsyncOperationStatus`
        """
        model = AsyncOperationStatus()
        if include_optional:
            return AsyncOperationStatus(
                end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                error_info = openapi_client.models.async_operation_error_info.AsyncOperationErrorInfo(
                    code = '', 
                    details = [
                        openapi_client.models.async_operation_error_info.AsyncOperationErrorInfo(
                            code = '', 
                            message = '', 
                            target = '', )
                        ], 
                    message = '', 
                    target = '', ),
                id = '',
                name = '',
                percent_complete = 1.337,
                provisioning_state = 'Unknown',
                start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return AsyncOperationStatus(
        )
        """

    def testAsyncOperationStatus(self):
        """Test AsyncOperationStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
