# coding: utf-8

"""
    MonitorManagementClient

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2019-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.single_metric_baseline import SingleMetricBaseline

class TestSingleMetricBaseline(unittest.TestCase):
    """SingleMetricBaseline unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SingleMetricBaseline:
        """Test SingleMetricBaseline
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SingleMetricBaseline`
        """
        model = SingleMetricBaseline()
        if include_optional:
            return SingleMetricBaseline(
                id = '',
                name = '',
                properties = openapi_client.models.metric_baselines_properties.MetricBaselinesProperties(
                    baselines = [
                        openapi_client.models.time_series_baseline.TimeSeriesBaseline(
                            aggregation = '', 
                            data = [
                                openapi_client.models.single_baseline.SingleBaseline(
                                    high_thresholds = [
                                        1.337
                                        ], 
                                    low_thresholds = [
                                        1.337
                                        ], 
                                    sensitivity = 'Low', )
                                ], 
                            dimensions = [
                                openapi_client.models.metric_single_dimension.MetricSingleDimension(
                                    name = '', 
                                    value = '', )
                                ], 
                            metadata = [
                                openapi_client.models.baseline_metadata.BaselineMetadata(
                                    name = '', 
                                    value = '', )
                                ], 
                            timestamps = [
                                datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                                ], )
                        ], 
                    interval = '', 
                    namespace = '', 
                    timespan = '', ),
                type = ''
            )
        else:
            return SingleMetricBaseline(
                id = '',
                name = '',
                properties = openapi_client.models.metric_baselines_properties.MetricBaselinesProperties(
                    baselines = [
                        openapi_client.models.time_series_baseline.TimeSeriesBaseline(
                            aggregation = '', 
                            data = [
                                openapi_client.models.single_baseline.SingleBaseline(
                                    high_thresholds = [
                                        1.337
                                        ], 
                                    low_thresholds = [
                                        1.337
                                        ], 
                                    sensitivity = 'Low', )
                                ], 
                            dimensions = [
                                openapi_client.models.metric_single_dimension.MetricSingleDimension(
                                    name = '', 
                                    value = '', )
                                ], 
                            metadata = [
                                openapi_client.models.baseline_metadata.BaselineMetadata(
                                    name = '', 
                                    value = '', )
                                ], 
                            timestamps = [
                                datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
                                ], )
                        ], 
                    interval = '', 
                    namespace = '', 
                    timespan = '', ),
                type = '',
        )
        """

    def testSingleMetricBaseline(self):
        """Test SingleMetricBaseline"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
