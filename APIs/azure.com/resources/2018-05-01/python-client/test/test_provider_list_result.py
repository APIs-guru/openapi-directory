# coding: utf-8

"""
    ResourceManagementClient

    Provides operations for working with resources and resource groups.

    The version of the OpenAPI document: 2018-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.provider_list_result import ProviderListResult

class TestProviderListResult(unittest.TestCase):
    """ProviderListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderListResult:
        """Test ProviderListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProviderListResult`
        """
        model = ProviderListResult()
        if include_optional:
            return ProviderListResult(
                next_link = '',
                value = [
                    openapi_client.models.provider.Provider(
                        id = '', 
                        namespace = '', 
                        registration_state = '', 
                        resource_types = [
                            openapi_client.models.provider_resource_type.ProviderResourceType(
                                aliases = [
                                    openapi_client.models.alias_type.AliasType(
                                        name = '', 
                                        paths = [
                                            openapi_client.models.alias_path_type.AliasPathType(
                                                api_versions = [
                                                    ''
                                                    ], 
                                                path = '', )
                                            ], )
                                    ], 
                                api_versions = [
                                    ''
                                    ], 
                                locations = [
                                    ''
                                    ], 
                                properties = {
                                    'key' : ''
                                    }, 
                                resource_type = '', )
                            ], )
                    ]
            )
        else:
            return ProviderListResult(
        )
        """

    def testProviderListResult(self):
        """Test ProviderListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
