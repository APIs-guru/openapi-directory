# coding: utf-8

"""
    ResourceManagementClient

    Provides operations for working with resources and resource groups.

    The version of the OpenAPI document: 2019-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.provider import Provider

class TestProvider(unittest.TestCase):
    """Provider unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Provider:
        """Test Provider
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Provider`
        """
        model = Provider()
        if include_optional:
            return Provider(
                id = '',
                namespace = '',
                registration_policy = '',
                registration_state = '',
                resource_types = [
                    openapi_client.models.provider_resource_type.ProviderResourceType(
                        aliases = [
                            openapi_client.models.alias_type.AliasType(
                                name = '', 
                                paths = [
                                    openapi_client.models.alias_path_type.AliasPathType(
                                        api_versions = [
                                            ''
                                            ], 
                                        path = '', )
                                    ], )
                            ], 
                        api_versions = [
                            ''
                            ], 
                        capabilities = '', 
                        locations = [
                            ''
                            ], 
                        properties = {
                            'key' : ''
                            }, 
                        resource_type = '', )
                    ]
            )
        else:
            return Provider(
        )
        """

    def testProvider(self):
        """Test Provider"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
