# coding: utf-8

"""
    ResourceManagementClient

    Provides operations for working with resources and resource groups.

    The version of the OpenAPI document: 2019-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deployment_operation import DeploymentOperation

class TestDeploymentOperation(unittest.TestCase):
    """DeploymentOperation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeploymentOperation:
        """Test DeploymentOperation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeploymentOperation`
        """
        model = DeploymentOperation()
        if include_optional:
            return DeploymentOperation(
                id = '',
                operation_id = '',
                properties = openapi_client.models.deployment_operation_properties.DeploymentOperationProperties(
                    duration = '', 
                    provisioning_state = '', 
                    request = openapi_client.models.http_message.HttpMessage(
                        content = openapi_client.models.content.content(), ), 
                    response = openapi_client.models.http_message.HttpMessage(
                        content = openapi_client.models.content.content(), ), 
                    service_request_id = '', 
                    status_code = '', 
                    status_message = openapi_client.models.status_message.statusMessage(), 
                    target_resource = openapi_client.models.target_resource.TargetResource(
                        id = '', 
                        resource_name = '', 
                        resource_type = '', ), 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
            )
        else:
            return DeploymentOperation(
        )
        """

    def testDeploymentOperation(self):
        """Test DeploymentOperation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
