# coding: utf-8

"""
    Azure SQL Database

    Provides create, read, update and delete functionality for Azure SQL Database resources including recommendations and operations.

    The version of the OpenAPI document: 2014-04-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties import RecommendedElasticPoolPropertiesDatabasesInnerProperties

class TestRecommendedElasticPoolPropertiesDatabasesInnerProperties(unittest.TestCase):
    """RecommendedElasticPoolPropertiesDatabasesInnerProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecommendedElasticPoolPropertiesDatabasesInnerProperties:
        """Test RecommendedElasticPoolPropertiesDatabasesInnerProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecommendedElasticPoolPropertiesDatabasesInnerProperties`
        """
        model = RecommendedElasticPoolPropertiesDatabasesInnerProperties()
        if include_optional:
            return RecommendedElasticPoolPropertiesDatabasesInnerProperties(
                collation = '',
                containment_state = 56,
                create_mode = 'Copy',
                creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                current_service_objective_id = '',
                database_id = '',
                default_secondary_location = '',
                earliest_restore_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                edition = 'Web',
                elastic_pool_name = '',
                failover_group_id = '',
                max_size_bytes = '',
                read_scale = 'Enabled',
                recommended_index = [
                    openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_recommended_index_inner.RecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner(
                        properties = openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_recommended_index_inner_properties.RecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties(
                            action = 'Create', 
                            columns = [
                                ''
                                ], 
                            created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            estimated_impact = [
                                openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_recommended_index_inner_properties_estimated_impact_inner.RecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner(
                                    change_value_absolute = 1.337, 
                                    change_value_relative = 1.337, 
                                    name = '', 
                                    unit = '', )
                                ], 
                            included_columns = [
                                ''
                                ], 
                            index_script = '', 
                            index_type = 'CLUSTERED', 
                            last_modified = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            reported_impact = [
                                openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_recommended_index_inner_properties_estimated_impact_inner.RecommendedElasticPoolProperties_databases_inner_properties_recommendedIndex_inner_properties_estimatedImpact_inner(
                                    change_value_absolute = 1.337, 
                                    change_value_relative = 1.337, 
                                    name = '', 
                                    unit = '', )
                                ], 
                            schema = '', 
                            state = 'Active', 
                            table = '', ), )
                    ],
                recovery_services_recovery_point_resource_id = '',
                requested_service_objective_id = '',
                requested_service_objective_name = 'System',
                restore_point_in_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                sample_name = 'AdventureWorksLT',
                service_level_objective = 'System',
                service_tier_advisors = [
                    openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_service_tier_advisors_inner.RecommendedElasticPoolProperties_databases_inner_properties_serviceTierAdvisors_inner(
                        properties = openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_service_tier_advisors_inner_properties.RecommendedElasticPoolProperties_databases_inner_properties_serviceTierAdvisors_inner_properties(
                            active_time_ratio = 1.337, 
                            avg_dtu = 1.337, 
                            confidence = 1.337, 
                            current_service_level_objective = '', 
                            current_service_level_objective_id = '', 
                            database_size_based_recommendation_service_level_objective = '', 
                            database_size_based_recommendation_service_level_objective_id = '', 
                            disaster_plan_based_recommendation_service_level_objective = '', 
                            disaster_plan_based_recommendation_service_level_objective_id = '', 
                            max_dtu = 1.337, 
                            max_size_in_gb = 1.337, 
                            min_dtu = 1.337, 
                            observation_period_end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            observation_period_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            overall_recommendation_service_level_objective = '', 
                            overall_recommendation_service_level_objective_id = '', 
                            service_level_objective_usage_metrics = [
                                openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_service_tier_advisors_inner_properties_service_level_objective_usage_metrics_inner.RecommendedElasticPoolProperties_databases_inner_properties_serviceTierAdvisors_inner_properties_serviceLevelObjectiveUsageMetrics_inner(
                                    in_range_time_ratio = 1.337, 
                                    service_level_objective = 'System', 
                                    service_level_objective_id = '', )
                                ], 
                            usage_based_recommendation_service_level_objective = '', 
                            usage_based_recommendation_service_level_objective_id = '', ), )
                    ],
                source_database_deletion_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                source_database_id = '',
                status = '',
                transparent_data_encryption = [
                    openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_transparent_data_encryption_inner.RecommendedElasticPoolProperties_databases_inner_properties_transparentDataEncryption_inner(
                        location = '', 
                        properties = openapi_client.models.recommended_elastic_pool_properties_databases_inner_properties_transparent_data_encryption_inner_properties.RecommendedElasticPoolProperties_databases_inner_properties_transparentDataEncryption_inner_properties(
                            status = 'Enabled', ), )
                    ],
                zone_redundant = True
            )
        else:
            return RecommendedElasticPoolPropertiesDatabasesInnerProperties(
        )
        """

    def testRecommendedElasticPoolPropertiesDatabasesInnerProperties(self):
        """Test RecommendedElasticPoolPropertiesDatabasesInnerProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
