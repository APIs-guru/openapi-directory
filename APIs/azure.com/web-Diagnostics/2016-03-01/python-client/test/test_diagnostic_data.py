# coding: utf-8

"""
    Diagnostics API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.diagnostic_data import DiagnosticData

class TestDiagnosticData(unittest.TestCase):
    """DiagnosticData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DiagnosticData:
        """Test DiagnosticData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DiagnosticData`
        """
        model = DiagnosticData()
        if include_optional:
            return DiagnosticData(
                rendering_properties = openapi_client.models.rendering.Rendering(
                    description = '', 
                    rendering_type = 'NoGraph', 
                    title = '', ),
                table = openapi_client.models.data_table_response_object.DataTableResponseObject(
                    columns = [
                        openapi_client.models.data_table_response_column.DataTableResponseColumn(
                            column_name = '', 
                            column_type = '', 
                            data_type = '', )
                        ], 
                    rows = [
                        [
                            ''
                            ]
                        ], 
                    table_name = '', )
            )
        else:
            return DiagnosticData(
        )
        """

    def testDiagnosticData(self):
        """Test DiagnosticData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
