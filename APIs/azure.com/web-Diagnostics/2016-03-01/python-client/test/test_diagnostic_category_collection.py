# coding: utf-8

"""
    Diagnostics API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2016-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.diagnostic_category_collection import DiagnosticCategoryCollection

class TestDiagnosticCategoryCollection(unittest.TestCase):
    """DiagnosticCategoryCollection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DiagnosticCategoryCollection:
        """Test DiagnosticCategoryCollection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DiagnosticCategoryCollection`
        """
        model = DiagnosticCategoryCollection()
        if include_optional:
            return DiagnosticCategoryCollection(
                next_link = '',
                value = [
                    openapi_client.models.diagnostic_category.DiagnosticCategory(
                        properties = openapi_client.models.properties.properties(
                            description = '', ), )
                    ]
            )
        else:
            return DiagnosticCategoryCollection(
                value = [
                    openapi_client.models.diagnostic_category.DiagnosticCategory(
                        properties = openapi_client.models.properties.properties(
                            description = '', ), )
                    ],
        )
        """

    def testDiagnosticCategoryCollection(self):
        """Test DiagnosticCategoryCollection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
