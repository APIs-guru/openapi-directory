# coding: utf-8

"""
    Diagnostics API Client

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2018-02-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_data import AnalysisData

class TestAnalysisData(unittest.TestCase):
    """AnalysisData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisData:
        """Test AnalysisData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisData`
        """
        model = AnalysisData()
        if include_optional:
            return AnalysisData(
                data = [
                    [
                        openapi_client.models.analysis_data_data_inner_inner.AnalysisData_data_inner_inner(
                            name = '', 
                            value = '', )
                        ]
                    ],
                detector_definition = openapi_client.models.detector_definition.DetectorDefinition(
                    properties = openapi_client.models.properties.properties(
                        description = '', 
                        display_name = '', 
                        is_enabled = True, 
                        rank = 1.337, ), ),
                detector_meta_data = openapi_client.models.response_meta_data.ResponseMetaData(
                    data_source = openapi_client.models.data_source.DataSource(
                        data_source_uri = [
                            openapi_client.models.analysis_data_data_inner_inner.AnalysisData_data_inner_inner(
                                name = '', 
                                value = '', )
                            ], 
                        instructions = [
                            ''
                            ], ), ),
                metrics = [
                    openapi_client.models.diagnostic_metric_set.DiagnosticMetricSet(
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        name = '', 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_grain = '', 
                        unit = '', 
                        values = [
                            openapi_client.models.diagnostic_metric_sample.DiagnosticMetricSample(
                                is_aggregated = True, 
                                maximum = 1.337, 
                                minimum = 1.337, 
                                role_instance = '', 
                                timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                total = 1.337, )
                            ], )
                    ],
                source = ''
            )
        else:
            return AnalysisData(
        )
        """

    def testAnalysisData(self):
        """Test AnalysisData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
