# coding: utf-8

"""
    BatchAI

    The Azure BatchAI Management API.

    The version of the OpenAPI document: 2018-03-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictStr, field_validator
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.file_list_result import FileListResult
from openapi_client.models.job import Job
from openapi_client.models.job_create_parameters import JobCreateParameters
from openapi_client.models.job_list_result import JobListResult
from openapi_client.models.remote_login_information_list_result import RemoteLoginInformationListResult

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class JobApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def jobs_create(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        parameters: Annotated[JobCreateParameters, Field(description="The parameters to provide for job creation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Job:
        """jobs_create

        Adds a Job that gets executed on a cluster.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param parameters: The parameters to provide for job creation. (required)
        :type parameters: JobCreateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_create_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Job",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_create_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        parameters: Annotated[JobCreateParameters, Field(description="The parameters to provide for job creation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Job]:
        """jobs_create

        Adds a Job that gets executed on a cluster.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param parameters: The parameters to provide for job creation. (required)
        :type parameters: JobCreateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_create_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Job",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_create_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        parameters: Annotated[JobCreateParameters, Field(description="The parameters to provide for job creation.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_create

        Adds a Job that gets executed on a cluster.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param parameters: The parameters to provide for job creation. (required)
        :type parameters: JobCreateParameters
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_create_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            parameters=parameters,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Job",
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_create_serialize(
        self,
        resource_group_name,
        job_name,
        api_version,
        subscription_id,
        parameters,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if parameters is not None:
            _body_params = parameters


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='PUT',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_delete(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """jobs_delete

        Deletes the specified Batch AI job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_delete_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_delete_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """jobs_delete

        Deletes the specified Batch AI job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_delete_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_delete_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_delete

        Deletes the specified Batch AI job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_delete_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
            '204': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_delete_serialize(
        self,
        resource_group_name,
        job_name,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_get(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Job:
        """jobs_get

        Gets information about the specified Batch AI job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_get_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Job",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_get_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Job]:
        """jobs_get

        Gets information about the specified Batch AI job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_get_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Job",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_get_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_get

        Gets information about the specified Batch AI job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_get_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Job",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_get_serialize(
        self,
        resource_group_name,
        job_name,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_list(
        self,
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. Used to filter results that are returned in the GET response.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause. Used to select the properties to be returned in the GET response.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> JobListResult:
        """jobs_list

        Gets information about the jobs associated with the subscription.

        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param filter: An OData $filter clause. Used to filter results that are returned in the GET response.
        :type filter: str
        :param select: An OData $select clause. Used to select the properties to be returned in the GET response.
        :type select: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            filter=filter,
            select=select,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "JobListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_list_with_http_info(
        self,
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. Used to filter results that are returned in the GET response.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause. Used to select the properties to be returned in the GET response.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[JobListResult]:
        """jobs_list

        Gets information about the jobs associated with the subscription.

        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param filter: An OData $filter clause. Used to filter results that are returned in the GET response.
        :type filter: str
        :param select: An OData $select clause. Used to select the properties to be returned in the GET response.
        :type select: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            filter=filter,
            select=select,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "JobListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_list_without_preload_content(
        self,
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. Used to filter results that are returned in the GET response.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause. Used to select the properties to be returned in the GET response.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_list

        Gets information about the jobs associated with the subscription.

        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param filter: An OData $filter clause. Used to filter results that are returned in the GET response.
        :type filter: str
        :param select: An OData $select clause. Used to select the properties to be returned in the GET response.
        :type select: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_serialize(
            api_version=api_version,
            subscription_id=subscription_id,
            filter=filter,
            select=select,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "JobListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_list_serialize(
        self,
        api_version,
        subscription_id,
        filter,
        select,
        maxresults,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if maxresults is not None:
            
            _query_params.append(('maxresults', maxresults))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/providers/Microsoft.BatchAI/jobs',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_list_by_resource_group(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. Used to filter results that are returned in the GET response.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause. Used to select the properties to be returned in the GET response.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> JobListResult:
        """jobs_list_by_resource_group

        Gets information about the Batch AI jobs associated within the specified resource group.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param filter: An OData $filter clause. Used to filter results that are returned in the GET response.
        :type filter: str
        :param select: An OData $select clause. Used to select the properties to be returned in the GET response.
        :type select: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_by_resource_group_serialize(
            resource_group_name=resource_group_name,
            api_version=api_version,
            subscription_id=subscription_id,
            filter=filter,
            select=select,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "JobListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_list_by_resource_group_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. Used to filter results that are returned in the GET response.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause. Used to select the properties to be returned in the GET response.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[JobListResult]:
        """jobs_list_by_resource_group

        Gets information about the Batch AI jobs associated within the specified resource group.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param filter: An OData $filter clause. Used to filter results that are returned in the GET response.
        :type filter: str
        :param select: An OData $select clause. Used to select the properties to be returned in the GET response.
        :type select: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_by_resource_group_serialize(
            resource_group_name=resource_group_name,
            api_version=api_version,
            subscription_id=subscription_id,
            filter=filter,
            select=select,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "JobListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_list_by_resource_group_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        filter: Annotated[Optional[StrictStr], Field(description="An OData $filter clause. Used to filter results that are returned in the GET response.")] = None,
        select: Annotated[Optional[StrictStr], Field(description="An OData $select clause. Used to select the properties to be returned in the GET response.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_list_by_resource_group

        Gets information about the Batch AI jobs associated within the specified resource group.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param filter: An OData $filter clause. Used to filter results that are returned in the GET response.
        :type filter: str
        :param select: An OData $select clause. Used to select the properties to be returned in the GET response.
        :type select: str
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_by_resource_group_serialize(
            resource_group_name=resource_group_name,
            api_version=api_version,
            subscription_id=subscription_id,
            filter=filter,
            select=select,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "JobListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_list_by_resource_group_serialize(
        self,
        resource_group_name,
        api_version,
        subscription_id,
        filter,
        select,
        maxresults,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if filter is not None:
            
            _query_params.append(('$filter', filter))
            
        if select is not None:
            
            _query_params.append(('$select', select))
            
        if maxresults is not None:
            
            _query_params.append(('maxresults', maxresults))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_list_output_files(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        outputdirectoryid: Annotated[StrictStr, Field(description="Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        directory: Annotated[Optional[StrictStr], Field(description="The path to the directory.")] = None,
        linkexpiryinminutes: Annotated[Optional[Annotated[int, Field(le=600, strict=True, ge=5)]], Field(description="The number of minutes after which the download link will expire.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> FileListResult:
        """jobs_list_output_files

        List all directories and files inside the given directory of the output directory (Only if the output directory is on Azure File Share or Azure Storage container).

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param outputdirectoryid: Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job. (required)
        :type outputdirectoryid: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param directory: The path to the directory.
        :type directory: str
        :param linkexpiryinminutes: The number of minutes after which the download link will expire.
        :type linkexpiryinminutes: int
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_output_files_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            outputdirectoryid=outputdirectoryid,
            api_version=api_version,
            subscription_id=subscription_id,
            directory=directory,
            linkexpiryinminutes=linkexpiryinminutes,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "FileListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_list_output_files_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        outputdirectoryid: Annotated[StrictStr, Field(description="Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        directory: Annotated[Optional[StrictStr], Field(description="The path to the directory.")] = None,
        linkexpiryinminutes: Annotated[Optional[Annotated[int, Field(le=600, strict=True, ge=5)]], Field(description="The number of minutes after which the download link will expire.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[FileListResult]:
        """jobs_list_output_files

        List all directories and files inside the given directory of the output directory (Only if the output directory is on Azure File Share or Azure Storage container).

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param outputdirectoryid: Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job. (required)
        :type outputdirectoryid: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param directory: The path to the directory.
        :type directory: str
        :param linkexpiryinminutes: The number of minutes after which the download link will expire.
        :type linkexpiryinminutes: int
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_output_files_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            outputdirectoryid=outputdirectoryid,
            api_version=api_version,
            subscription_id=subscription_id,
            directory=directory,
            linkexpiryinminutes=linkexpiryinminutes,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "FileListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_list_output_files_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        outputdirectoryid: Annotated[StrictStr, Field(description="Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        directory: Annotated[Optional[StrictStr], Field(description="The path to the directory.")] = None,
        linkexpiryinminutes: Annotated[Optional[Annotated[int, Field(le=600, strict=True, ge=5)]], Field(description="The number of minutes after which the download link will expire.")] = None,
        maxresults: Annotated[Optional[Annotated[int, Field(le=1000, strict=True, ge=1)]], Field(description="The maximum number of items to return in the response. A maximum of 1000 files can be returned.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_list_output_files

        List all directories and files inside the given directory of the output directory (Only if the output directory is on Azure File Share or Azure Storage container).

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param outputdirectoryid: Id of the job output directory. This is the OutputDirectory-->id parameter that is given by the user during Create Job. (required)
        :type outputdirectoryid: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param directory: The path to the directory.
        :type directory: str
        :param linkexpiryinminutes: The number of minutes after which the download link will expire.
        :type linkexpiryinminutes: int
        :param maxresults: The maximum number of items to return in the response. A maximum of 1000 files can be returned.
        :type maxresults: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_output_files_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            outputdirectoryid=outputdirectoryid,
            api_version=api_version,
            subscription_id=subscription_id,
            directory=directory,
            linkexpiryinminutes=linkexpiryinminutes,
            maxresults=maxresults,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "FileListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_list_output_files_serialize(
        self,
        resource_group_name,
        job_name,
        outputdirectoryid,
        api_version,
        subscription_id,
        directory,
        linkexpiryinminutes,
        maxresults,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if outputdirectoryid is not None:
            
            _query_params.append(('outputdirectoryid', outputdirectoryid))
            
        if directory is not None:
            
            _query_params.append(('directory', directory))
            
        if linkexpiryinminutes is not None:
            
            _query_params.append(('linkexpiryinminutes', linkexpiryinminutes))
            
        if maxresults is not None:
            
            _query_params.append(('maxresults', maxresults))
            
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/listOutputFiles',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_list_remote_login_information(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RemoteLoginInformationListResult:
        """jobs_list_remote_login_information

        Gets the IP address and port information of all the compute nodes which are used for job execution.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_remote_login_information_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RemoteLoginInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_list_remote_login_information_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RemoteLoginInformationListResult]:
        """jobs_list_remote_login_information

        Gets the IP address and port information of all the compute nodes which are used for job execution.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_remote_login_information_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RemoteLoginInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_list_remote_login_information_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_list_remote_login_information

        Gets the IP address and port information of all the compute nodes which are used for job execution.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_list_remote_login_information_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RemoteLoginInformationListResult",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_list_remote_login_information_serialize(
        self,
        resource_group_name,
        job_name,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/listRemoteLoginInformation',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def jobs_terminate(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> None:
        """jobs_terminate

        Terminates a job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_terminate_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def jobs_terminate_with_http_info(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[None]:
        """jobs_terminate

        Terminates a job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_terminate_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def jobs_terminate_without_preload_content(
        self,
        resource_group_name: Annotated[str, Field(strict=True, description="Name of the resource group to which the resource belongs.")],
        job_name: Annotated[str, Field(min_length=1, strict=True, max_length=64, description="The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long.")],
        api_version: Annotated[StrictStr, Field(description="Specifies the version of API used for this request.")],
        subscription_id: Annotated[StrictStr, Field(description="The subscriptionID for the Azure user.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """jobs_terminate

        Terminates a job.

        :param resource_group_name: Name of the resource group to which the resource belongs. (required)
        :type resource_group_name: str
        :param job_name: The name of the job within the specified resource group. Job names can only contain a combination of alphanumeric characters along with dash (-) and underscore (_). The name must be from 1 through 64 characters long. (required)
        :type job_name: str
        :param api_version: Specifies the version of API used for this request. (required)
        :type api_version: str
        :param subscription_id: The subscriptionID for the Azure user. (required)
        :type subscription_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._jobs_terminate_serialize(
            resource_group_name=resource_group_name,
            job_name=job_name,
            api_version=api_version,
            subscription_id=subscription_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': None,
            '202': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _jobs_terminate_serialize(
        self,
        resource_group_name,
        job_name,
        api_version,
        subscription_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if resource_group_name is not None:
            _path_params['resourceGroupName'] = resource_group_name
        if job_name is not None:
            _path_params['jobName'] = job_name
        if subscription_id is not None:
            _path_params['subscriptionId'] = subscription_id
        # process the query parameters
        if api_version is not None:
            
            _query_params.append(('api-version', api_version))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
            'azure_auth'
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.BatchAI/jobs/{jobName}/terminate',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


