# coding: utf-8

"""
    BatchAI

    The Azure BatchAI Management API.

    The version of the OpenAPI document: 2018-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.file_server_create_parameters import FileServerCreateParameters

class TestFileServerCreateParameters(unittest.TestCase):
    """FileServerCreateParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FileServerCreateParameters:
        """Test FileServerCreateParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FileServerCreateParameters`
        """
        model = FileServerCreateParameters()
        if include_optional:
            return FileServerCreateParameters(
                properties = openapi_client.models.file_server_base_properties.FileServerBaseProperties(
                    data_disks = openapi_client.models.data_disks.DataDisks(
                        caching_type = 'none', 
                        disk_count = 56, 
                        disk_size_in_gb = 56, 
                        storage_account_type = 'Standard_LRS', ), 
                    ssh_configuration = openapi_client.models.ssh_configuration.SshConfiguration(
                        public_ips_to_allow = [
                            ''
                            ], 
                        user_account_settings = openapi_client.models.user_account_settings.UserAccountSettings(
                            admin_user_name = '', 
                            admin_user_password = '', 
                            admin_user_ssh_public_key = '', ), ), 
                    subnet = openapi_client.models.resource_id.ResourceId(
                        id = '', ), 
                    vm_size = '', )
            )
        else:
            return FileServerCreateParameters(
        )
        """

    def testFileServerCreateParameters(self):
        """Test FileServerCreateParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
