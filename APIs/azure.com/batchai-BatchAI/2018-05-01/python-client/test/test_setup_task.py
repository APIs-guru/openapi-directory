# coding: utf-8

"""
    BatchAI

    The Azure BatchAI Management API.

    The version of the OpenAPI document: 2018-05-01
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.setup_task import SetupTask

class TestSetupTask(unittest.TestCase):
    """SetupTask unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SetupTask:
        """Test SetupTask
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SetupTask`
        """
        model = SetupTask()
        if include_optional:
            return SetupTask(
                command_line = '',
                environment_variables = [
                    openapi_client.models.environment_variable.EnvironmentVariable(
                        name = '', 
                        value = '', )
                    ],
                secrets = [
                    openapi_client.models.environment_variable_with_secret_value.EnvironmentVariableWithSecretValue(
                        name = '', 
                        value = '', 
                        value_secret_reference = openapi_client.models.key_vault_secret_reference.KeyVaultSecretReference(
                            secret_url = '', 
                            source_vault = openapi_client.models.resource_id.ResourceId(
                                id = '', ), ), )
                    ],
                std_out_err_path_prefix = '',
                std_out_err_path_suffix = ''
            )
        else:
            return SetupTask(
                command_line = '',
                std_out_err_path_prefix = '',
        )
        """

    def testSetupTask(self):
        """Test SetupTask"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
