# coding: utf-8

"""
    PeeringManagementClient

    APIs to manage Peering resources through the Azure Resource Manager.

    The version of the OpenAPI document: 2019-06-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.peering_location_properties_direct import PeeringLocationPropertiesDirect

class TestPeeringLocationPropertiesDirect(unittest.TestCase):
    """PeeringLocationPropertiesDirect unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeeringLocationPropertiesDirect:
        """Test PeeringLocationPropertiesDirect
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeeringLocationPropertiesDirect`
        """
        model = PeeringLocationPropertiesDirect()
        if include_optional:
            return PeeringLocationPropertiesDirect(
                bandwidth_offers = [
                    openapi_client.models.peering_bandwidth_offer.PeeringBandwidthOffer(
                        offer_name = '', 
                        value_in_mbps = 56, )
                    ],
                peering_facilities = [
                    openapi_client.models.direct_peering_facility.DirectPeeringFacility(
                        address = '', 
                        peering_db_facility_id = 56, 
                        peering_db_facility_link = '', )
                    ]
            )
        else:
            return PeeringLocationPropertiesDirect(
        )
        """

    def testPeeringLocationPropertiesDirect(self):
        """Test PeeringLocationPropertiesDirect"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
