# coding: utf-8

"""
    PeeringManagementClient

    APIs to manage Peering resources through the Azure Resource Manager.

    The version of the OpenAPI document: 2019-07-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.peer_asn_list_result import PeerAsnListResult

class TestPeerAsnListResult(unittest.TestCase):
    """PeerAsnListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeerAsnListResult:
        """Test PeerAsnListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeerAsnListResult`
        """
        model = PeerAsnListResult()
        if include_optional:
            return PeerAsnListResult(
                next_link = '',
                value = [
                    openapi_client.models.peer_asn.PeerAsn(
                        properties = openapi_client.models.peer_asn_properties.PeerAsnProperties(
                            peer_asn = 56, 
                            peer_contact_info = openapi_client.models.contact_info.ContactInfo(
                                emails = [
                                    ''
                                    ], 
                                phone = [
                                    ''
                                    ], ), 
                            peer_name = '', 
                            validation_state = 'None', ), )
                    ]
            )
        else:
            return PeerAsnListResult(
        )
        """

    def testPeerAsnListResult(self):
        """Test PeerAsnListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
