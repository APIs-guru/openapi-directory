# coding: utf-8

"""
    PeeringManagementClient

    APIs to manage Peering resources through the Azure Resource Manager.

    The version of the OpenAPI document: 2020-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.exchange_peering_facility import ExchangePeeringFacility

class TestExchangePeeringFacility(unittest.TestCase):
    """ExchangePeeringFacility unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExchangePeeringFacility:
        """Test ExchangePeeringFacility
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExchangePeeringFacility`
        """
        model = ExchangePeeringFacility()
        if include_optional:
            return ExchangePeeringFacility(
                bandwidth_in_mbps = 56,
                exchange_name = '',
                facility_ipv4_prefix = '',
                facility_ipv6_prefix = '',
                microsoft_ipv4_address = '',
                microsoft_ipv6_address = '',
                peering_db_facility_id = 56,
                peering_db_facility_link = ''
            )
        else:
            return ExchangePeeringFacility(
        )
        """

    def testExchangePeeringFacility(self):
        """Test ExchangePeeringFacility"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
