# coding: utf-8

"""
    PeeringManagementClient

    APIs to manage Peering resources through the Azure Resource Manager.

    The version of the OpenAPI document: 2020-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.peering_registered_prefix_properties import PeeringRegisteredPrefixProperties

class TestPeeringRegisteredPrefixProperties(unittest.TestCase):
    """PeeringRegisteredPrefixProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeeringRegisteredPrefixProperties:
        """Test PeeringRegisteredPrefixProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeeringRegisteredPrefixProperties`
        """
        model = PeeringRegisteredPrefixProperties()
        if include_optional:
            return PeeringRegisteredPrefixProperties(
                error_message = '',
                peering_service_prefix_key = '',
                prefix = '',
                prefix_validation_state = 'None',
                provisioning_state = 'Succeeded'
            )
        else:
            return PeeringRegisteredPrefixProperties(
        )
        """

    def testPeeringRegisteredPrefixProperties(self):
        """Test PeeringRegisteredPrefixProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
