# coding: utf-8

"""
    PeeringManagementClient

    APIs to manage Peering resources through the Azure Resource Manager.

    The version of the OpenAPI document: 2020-01-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.peering_service_prefix_event import PeeringServicePrefixEvent

class TestPeeringServicePrefixEvent(unittest.TestCase):
    """PeeringServicePrefixEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeeringServicePrefixEvent:
        """Test PeeringServicePrefixEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeeringServicePrefixEvent`
        """
        model = PeeringServicePrefixEvent()
        if include_optional:
            return PeeringServicePrefixEvent(
                event_description = '',
                event_level = '',
                event_summary = '',
                event_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                event_type = ''
            )
        else:
            return PeeringServicePrefixEvent(
        )
        """

    def testPeeringServicePrefixEvent(self):
        """Test PeeringServicePrefixEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
