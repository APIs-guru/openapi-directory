# coding: utf-8

"""
    PeeringManagementClient

    APIs to manage Peering resources through the Azure Resource Manager.

    The version of the OpenAPI document: 2019-09-01-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.peering_location import PeeringLocation

class TestPeeringLocation(unittest.TestCase):
    """PeeringLocation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PeeringLocation:
        """Test PeeringLocation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PeeringLocation`
        """
        model = PeeringLocation()
        if include_optional:
            return PeeringLocation(
                kind = 'Direct',
                properties = openapi_client.models.peering_location_properties.PeeringLocationProperties(
                    azure_region = '', 
                    country = '', 
                    direct = openapi_client.models.peering_location_properties_direct.PeeringLocationPropertiesDirect(
                        bandwidth_offers = [
                            openapi_client.models.peering_bandwidth_offer.PeeringBandwidthOffer(
                                offer_name = '', 
                                value_in_mbps = 56, )
                            ], 
                        peering_facilities = [
                            openapi_client.models.direct_peering_facility.DirectPeeringFacility(
                                address = '', 
                                direct_peering_type = 'Edge', 
                                peering_db_facility_id = 56, 
                                peering_db_facility_link = '', )
                            ], ), 
                    exchange = openapi_client.models.peering_location_properties_exchange.PeeringLocationPropertiesExchange(), 
                    peering_location = '', ),
                id = '',
                name = '',
                type = ''
            )
        else:
            return PeeringLocation(
        )
        """

    def testPeeringLocation(self):
        """Test PeeringLocation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
