# coding: utf-8

"""
    Form Recognizer Client

    Extracts information from forms and images into structured data based on a model created by a set of representative training forms.

    The version of the OpenAPI document: 1.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analyze_result import AnalyzeResult

class TestAnalyzeResult(unittest.TestCase):
    """AnalyzeResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyzeResult:
        """Test AnalyzeResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyzeResult`
        """
        model = AnalyzeResult()
        if include_optional:
            return AnalyzeResult(
                errors = [
                    openapi_client.models.form_operation_error.FormOperationError(
                        error_message = '', )
                    ],
                pages = [
                    openapi_client.models.extracted_page.ExtractedPage(
                        cluster_id = 56, 
                        height = 56, 
                        key_value_pairs = [
                            openapi_client.models.extracted_key_value_pair.ExtractedKeyValuePair(
                                key = [
                                    openapi_client.models.extracted_token.ExtractedToken(
                                        bounding_box = [
                                            1.337
                                            ], 
                                        confidence = 1.337, 
                                        text = '', )
                                    ], 
                                value = [
                                    openapi_client.models.extracted_token.ExtractedToken(
                                        confidence = 1.337, 
                                        text = '', )
                                    ], )
                            ], 
                        number = 56, 
                        tables = [
                            openapi_client.models.extracted_table.ExtractedTable(
                                columns = [
                                    openapi_client.models.extracted_table_column.ExtractedTableColumn(
                                        entries = [
                                            [
                                                
                                                ]
                                            ], 
                                        header = [
                                            
                                            ], )
                                    ], 
                                id = '', )
                            ], 
                        width = 56, )
                    ],
                status = 'success'
            )
        else:
            return AnalyzeResult(
        )
        """

    def testAnalyzeResult(self):
        """Test AnalyzeResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
