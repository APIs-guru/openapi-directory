# coding: utf-8

"""
    Form Recognizer Client

    Extracts information from forms and images into structured data.

    The version of the OpenAPI document: 2.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.models import Models

class TestModels(unittest.TestCase):
    """Models unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Models:
        """Test Models
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Models`
        """
        model = Models()
        if include_optional:
            return Models(
                model_list = [
                    openapi_client.models.model_info.ModelInfo(
                        created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        last_updated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        model_id = '', 
                        status = 'creating', )
                    ],
                next_link = '',
                summary = openapi_client.models.models_summary.Models_summary(
                    count = 56, 
                    last_updated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    limit = 56, )
            )
        else:
            return Models(
        )
        """

    def testModels(self):
        """Test Models"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
