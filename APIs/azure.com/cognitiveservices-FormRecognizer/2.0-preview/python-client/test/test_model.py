# coding: utf-8

"""
    Form Recognizer Client

    Extracts information from forms and images into structured data.

    The version of the OpenAPI document: 2.0-preview
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.model import Model

class TestModel(unittest.TestCase):
    """Model unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Model:
        """Test Model
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Model`
        """
        model = Model()
        if include_optional:
            return Model(
                keys = openapi_client.models.keys_result.KeysResult(
                    clusters = {
                        'key' : [
                            ''
                            ]
                        }, ),
                model_info = openapi_client.models.model_info.ModelInfo(
                    created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    model_id = '', 
                    status = 'creating', ),
                train_result = openapi_client.models.train_result.TrainResult(
                    average_model_accuracy = 1.337, 
                    errors = [
                        openapi_client.models.error_information.ErrorInformation(
                            code = '', 
                            message = '', )
                        ], 
                    fields = [
                        openapi_client.models.form_fields_report.FormFieldsReport(
                            accuracy = 1.337, 
                            field_name = '', )
                        ], 
                    training_documents = [
                        openapi_client.models.training_document_info.TrainingDocumentInfo(
                            document_name = '', 
                            errors = [
                                openapi_client.models.error_information.ErrorInformation(
                                    code = '', 
                                    message = '', )
                                ], 
                            pages = 56, 
                            status = 'succeeded', )
                        ], )
            )
        else:
            return Model(
                model_info = openapi_client.models.model_info.ModelInfo(
                    created_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    last_updated_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    model_id = '', 
                    status = 'creating', ),
        )
        """

    def testModel(self):
        """Test Model"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
