# coding: utf-8

"""
    Billingo API v3

    This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.

    The version of the OpenAPI document: 3.0.7
    Contact: hello@billingo.hu
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.document_summary import DocumentSummary

class TestDocumentSummary(unittest.TestCase):
    """DocumentSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentSummary:
        """Test DocumentSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentSummary`
        """
        model = DocumentSummary()
        if include_optional:
            return DocumentSummary(
                gross_amount_local = 1.337,
                net_amount = 1.337,
                net_amount_local = 1.337,
                vat_amount = 1.337,
                vat_amount_local = 1.337,
                vat_rate_summary = [
                    openapi_client.models.document_vat_rate_summary.DocumentVatRateSummary(
                        vat_name = '', 
                        vat_percentage = 1.337, 
                        vat_rate_gross_amount = 1.337, 
                        vat_rate_net_amount = 1.337, 
                        vat_rate_vat_amount = 1.337, 
                        vat_rate_vat_amount_local = 1.337, )
                    ]
            )
        else:
            return DocumentSummary(
        )
        """

    def testDocumentSummary(self):
        """Test DocumentSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
