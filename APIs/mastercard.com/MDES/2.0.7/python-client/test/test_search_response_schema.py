# coding: utf-8

"""
    MDES Customer Service

    This API provides our Issuer partners with resources to help resolve consumer queries about payment accounts enabled through our digitization platform.

    The version of the OpenAPI document: 2.0.7
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_response_schema import SearchResponseSchema

class TestSearchResponseSchema(unittest.TestCase):
    """SearchResponseSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchResponseSchema:
        """Test SearchResponseSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchResponseSchema`
        """
        model = SearchResponseSchema()
        if include_optional:
            return SearchResponseSchema(
                search_response = openapi_client.models.search_response.SearchResponse(
                    accounts = openapi_client.models.accounts.Accounts(
                        account = [
                            openapi_client.models.account.Account(
                                account_pan_suffix = '1234', 
                                alternate_account_identifier_suffix = '4300', 
                                expiration_date = '1225', 
                                tokens = openapi_client.models.tokens.Tokens(
                                    token = [
                                        openapi_client.models.token.Token(
                                            account_pan_sequence_number = '59', 
                                            activation_code_expiration_date_time = '2015-01-21T00:04:35.000Z', 
                                            correlation_id = '98765432101234', 
                                            current_status_code = 'A', 
                                            current_status_date_time = '2015-01-21T00:04:35.000Z', 
                                            current_status_description = 'Active', 
                                            device = openapi_client.models.device.Device(
                                                device_id = 'C2ZBY14310005664', 
                                                device_name = 'John's phone', 
                                                device_type = '14', 
                                                secure_element_id = '92de9357a535b2c21a3566e446f43c532a46b54c46', ), 
                                            digitization_request_date_time = '2015-01-21T00:04:35.000Z', 
                                            expiration_date = '1026', 
                                            final_tokenization_decision = 'A', 
                                            last_comment_id = 'ABC123456', 
                                            payment_app_instance_id = '645b532a245e4723d7a9c4f62b24f24a24ba98e27d43e34e', 
                                            primary_account_number_unique_reference = 'FWSPMC0000000004793dac803f190a4dca4bad33c90a11d3', 
                                            provisioning_status_code = 'P', 
                                            provisioning_status_description = 'Provisioning successful', 
                                            storage_technology = 'S', 
                                            suspenders = openapi_client.models.suspenders.Suspenders(
                                                suspender = [
                                                    'I'
                                                    ], ), 
                                            token_activated_date_time = '2015-01-21T00:04:35.000Z', 
                                            token_assurance_level = '1', 
                                            token_deleted_from_consumer_app = 'false', 
                                            token_requestor_consumer_facing_entity_name = 'Sunday Store', 
                                            token_requestor_id = '212345678', 
                                            token_requestor_name = 'Popular High Street Merchant', 
                                            token_suffix = '7890', 
                                            token_type = 'S', 
                                            token_unique_reference = 'DWSPMC00000000010906a349d9ca4eb1a4d53e3c90a11d9c', 
                                            wallet_id = '123', )
                                        ], ), )
                            ], ), )
            )
        else:
            return SearchResponseSchema(
        )
        """

    def testSearchResponseSchema(self):
        """Test SearchResponseSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
