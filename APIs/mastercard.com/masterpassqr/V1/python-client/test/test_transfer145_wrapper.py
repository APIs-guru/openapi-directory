# coding: utf-8

"""
    Send Person to Merchant

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: V1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.transfer145_wrapper import Transfer145Wrapper

class TestTransfer145Wrapper(unittest.TestCase):
    """Transfer145Wrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Transfer145Wrapper:
        """Test Transfer145Wrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Transfer145Wrapper`
        """
        model = Transfer145Wrapper()
        if include_optional:
            return Transfer145Wrapper(
                transfer = openapi_client.models.transfer_145.Transfer_145(
                    channel = 'WEB', 
                    created = '2015-03-18T14:18:55Z', 
                    device_id = 'DEV123456', 
                    id = 'trn_9abcd233jk23l6c5lw5f', 
                    location = 'state:MO', 
                    original_status = 'APPROVED', 
                    payment_type = 'P2M', 
                    recipient = openapi_client.models.recipient_149.Recipient_149(
                        address = openapi_client.models.address_150.Address_150(
                            city = 'OFallon', 
                            country = 'USA', 
                            country_subdivision = 'MO', 
                            line1 = '1 Main St', 
                            line2 = 'Apartment 9', 
                            postal_code = '63368', ), 
                        date_of_birth = '1999-12-30', 
                        email = 'Jane.Smith123@abcmail.com', 
                        first_name = 'John', 
                        government_ids = openapi_client.models.government_ids_151.GovernmentIds_151(
                            government_id_uri = [
                                ''
                                ], ), 
                        last_name = 'Jones', 
                        middle_name = 'Tyler', 
                        nationality = 'USA', 
                        phone = '11234567890', 
                        sanction_score = '20', ), 
                    recipient_account_uri = 'pan:************7372', 
                    reconciliation_data = openapi_client.models.reconciliation_data_157.ReconciliationData_157(
                        custom_field = [
                            openapi_client.models.custom_field_158.CustomField_158(
                                name = 'TransactionID', 
                                value = '456FDWBS43', )
                            ], ), 
                    resource_type = 'transfer', 
                    sanction_screening_override = True, 
                    sender = openapi_client.models.sender_146.Sender_146(
                        date_of_birth = '1999-12-30', 
                        email = 'jane.smith123@abcmail.com', 
                        first_name = 'John', 
                        last_name = 'Jones', 
                        middle_name = 'Tyler', 
                        nationality = 'USA', 
                        phone = '11234567890', 
                        sanction_score = '20', ), 
                    sender_account_uri = 'pan:************9012', 
                    statement_descriptor = 'TST*THANKYOU', 
                    status = 'APPROVED', 
                    status_timestamp = '2015-03-18T14:18:55Z', 
                    transaction_history = openapi_client.models.transaction_history_153.TransactionHistory_153(
                        data = openapi_client.models.data_154.Data_154(
                            transaction = [
                                openapi_client.models.transaction_155.Transaction_155(
                                    account_uri = 'pan:************9012', 
                                    authorization_id = '67DS21', 
                                    create_timestamp = '2015-03-18T14:18:55Z', 
                                    id = 'trn_8h4me233jk23l6c5lw5f', 
                                    network = 'MasterCard', 
                                    network_status_code = '54', 
                                    network_status_description = 'Expired Card.', 
                                    payment_account_reference = '5001ESVM4JQAAOP5JKSK1XGAPOPG2', 
                                    resource_type = 'transaction', 
                                    retrieval_reference = '624200192616', 
                                    reversal_reason = 'Incorrect Amount', 
                                    status = 'APPROVED', 
                                    status_reason = 'APPROVED', 
                                    status_timestamp = '2015-03-18T14:18:56Z', 
                                    system_trace_audit_number = '926162', 
                                    transaction_amount = openapi_client.models.transaction_amount_156.TransactionAmount_156(
                                        currency = 'USD', 
                                        value = '5300', ), 
                                    type = 'PAYMENT', )
                                ], ), 
                        item_count = 1, 
                        resource_type = 'list', ), 
                    transfer_amount = openapi_client.models.transfer_amount_152.TransferAmount_152(
                        currency = 'USD', 
                        value = '5300', ), 
                    transfer_reference = 'DEF123456', )
            )
        else:
            return Transfer145Wrapper(
        )
        """

    def testTransfer145Wrapper(self):
        """Test Transfer145Wrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
