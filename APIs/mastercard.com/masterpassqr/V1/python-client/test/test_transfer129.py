# coding: utf-8

"""
    Send Person to Merchant

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: V1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.transfer129 import Transfer129

class TestTransfer129(unittest.TestCase):
    """Transfer129 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Transfer129:
        """Test Transfer129
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Transfer129`
        """
        model = Transfer129()
        if include_optional:
            return Transfer129(
                channel = 'WEB',
                created = '2015-03-18T14:18:55Z',
                device_id = 'DEV123456',
                id = 'trn_9abcd233jk23l6c5lw5f',
                interchange_rate_designator = 'QR',
                location = 'state:MO',
                original_status = 'APPROVED',
                payment_type = 'P2M',
                recipient = openapi_client.models.recipient_134.Recipient_134(
                    address = openapi_client.models.address_135.Address_135(
                        city = 'OFallon', 
                        country = 'USA', 
                        country_subdivision = 'MO', 
                        line1 = '1 Main St', 
                        line2 = 'Apartment 9', 
                        postal_code = '63368', ), 
                    date_of_birth = '1999-12-30', 
                    email = 'Jane.Smith123@abcmail.com', 
                    first_name = 'John', 
                    government_ids = openapi_client.models.government_ids_136.GovernmentIds_136(
                        government_id_uri = [
                            ''
                            ], ), 
                    last_name = 'Jones', 
                    merchant_category_code = '0763', 
                    middle_name = 'Tyler', 
                    nationality = 'USA', 
                    phone = '11234567890', 
                    sanction_score = '20', ),
                recipient_account_uri = 'pan:************7372',
                reconciliation_data = openapi_client.models.reconciliation_data_142.ReconciliationData_142(
                    custom_field = [
                        openapi_client.models.custom_field_143.CustomField_143(
                            name = 'TransactionID', 
                            value = '456FDWBS43', )
                        ], ),
                resource_type = 'transfer',
                sanction_screening_override = True,
                sender = openapi_client.models.sender_130.Sender_130(
                    additional_merchant_data = openapi_client.models.additional_merchant_data_132.AdditionalMerchantData_132(
                        payment_facilitator_id = 123456, 
                        sub_merchant_id = 'A1234', ), 
                    address = openapi_client.models.address_131.Address_131(
                        city = 'OFallon', 
                        country = 'USA', 
                        country_subdivision = 'MO', 
                        line1 = '1 Main St', 
                        line2 = 'Apartment 9', 
                        postal_code = '63368', ), 
                    date_of_birth = '1999-12-30', 
                    email = 'jane.smith123@abcmail.com', 
                    first_name = 'John', 
                    government_ids = openapi_client.models.government_ids_133.GovernmentIds_133(
                        government_id_uri = [
                            ''
                            ], ), 
                    last_name = 'Jones', 
                    middle_name = 'Tyler', 
                    nationality = 'USA', 
                    phone = '11234567890', 
                    sanction_score = '20', ),
                sender_account_uri = 'pan:************9012',
                statement_descriptor = 'TST*THANKYOU',
                status = 'APPROVED',
                status_timestamp = '2015-03-18T14:18:55Z',
                transaction_history = openapi_client.models.transaction_history_138.TransactionHistory_138(
                    data = openapi_client.models.data_139.Data_139(
                        transaction = [
                            openapi_client.models.transaction_140.Transaction_140(
                                account_uri = 'pan:************9012', 
                                authorization_id = '801726', 
                                create_timestamp = '2015-03-18T14:18:55Z', 
                                id = 'trn_8h4me233jk23l6c5lw5f', 
                                network = 'MasterCard', 
                                network_status_code = '54', 
                                network_status_description = 'Expired Card.', 
                                payment_account_reference = '5001ESVM4JQAAOP5JKSK1XGAPOPG2', 
                                resource_type = 'transaction', 
                                retrieval_reference = '624200192616', 
                                status = 'APPROVED', 
                                status_reason = 'APPROVED', 
                                status_timestamp = '2015-03-18T14:18:56Z', 
                                system_trace_audit_number = '926162', 
                                transaction_amount = openapi_client.models.transaction_amount_141.TransactionAmount_141(
                                    currency = 'USD', 
                                    value = '5300', ), 
                                type = 'FUNDING', )
                            ], ), 
                    item_count = 1, 
                    resource_type = 'list', ),
                transfer_amount = openapi_client.models.transfer_amount_137.TransferAmount_137(
                    currency = 'USD', 
                    value = '5300', ),
                transfer_reference = 'DEF123456'
            )
        else:
            return Transfer129(
        )
        """

    def testTransfer129(self):
        """Test Transfer129"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
