# coding: utf-8

"""
    Locations API

    The Locations API provides access to MasterCard's ATM and Merchant location database

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merchants import Merchants

class TestMerchants(unittest.TestCase):
    """Merchants unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Merchants:
        """Test Merchants
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Merchants`
        """
        model = Merchants()
        if include_optional:
            return Merchants(
                merchant = [
                    openapi_client.models.merchant.Merchant(
                        acceptance = openapi_client.models.acceptance.Acceptance(
                            pay_pass = openapi_client.models.pay_pass.PayPass(
                                concession = True, 
                                drive_thru = True, 
                                fuel_pump = True, 
                                pharmacy = True, 
                                register = True, 
                                ticketing = True, 
                                toll_booth = True, 
                                vending_machine = True, ), ), 
                        category = 'DINING AND ENTERTAINMENT', 
                        features = openapi_client.models.features.Features(
                            cashback = openapi_client.models.cashback.Cashback(
                                maximum_amount = 40, ), ), 
                        id = '2801796', 
                        location = openapi_client.models.location.Location(
                            address = openapi_client.models.address.Address(
                                city = 'CHICAGO', 
                                country = openapi_client.models.country.Country(
                                    code = 'AFG', 
                                    geocoding = True, 
                                    name = 'AFGHANISTAN', ), 
                                country_subdivision = openapi_client.models.country_subdivision.CountrySubdivision(
                                    code = 'IL', 
                                    name = 'ILLINOIS', ), 
                                line1 = '42 ELM AVENUE', 
                                line2 = 'SUITE 100', 
                                postal_code = '60601', ), 
                            distance = 0.91, 
                            distance_unit = 'KILOMETER', 
                            location_type = openapi_client.models.location_type.LocationType(
                                airport_code = 'JFK', 
                                type = 'AIRPORT', ), 
                            name = 'QUIK TRIP STORE 1', 
                            point = openapi_client.models.point.Point(
                                latitude = 32.75723000000001, 
                                longitude = 89.700215, ), ), 
                        merchant_offer_id = '1143109', 
                        name = 'MCDONALDS', 
                        phone_number = '8165442210', 
                        products = openapi_client.models.products.Products(
                            prepaid_travelcard = True, ), 
                        topup = openapi_client.models.topup.Topup(
                            re_power = openapi_client.models.re_power.rePower(
                                card_swipe = True, 
                                money_pak = True, ), ), 
                        website_url = 'www.mcdonalds.com', )
                    ],
                page_offset = '25',
                total_count = 86
            )
        else:
            return Merchants(
        )
        """

    def testMerchants(self):
        """Test Merchants"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
