# coding: utf-8

"""
    Open Banking - Payments initiation service

    Open Banking - Payments initiation service

    The version of the OpenAPI document: 1.16.0
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body import PostPaymentsDomesticCreditTransfersConsentsParamsBody

class TestPostPaymentsDomesticCreditTransfersConsentsParamsBody(unittest.TestCase):
    """PostPaymentsDomesticCreditTransfersConsentsParamsBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostPaymentsDomesticCreditTransfersConsentsParamsBody:
        """Test PostPaymentsDomesticCreditTransfersConsentsParamsBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostPaymentsDomesticCreditTransfersConsentsParamsBody`
        """
        model = PostPaymentsDomesticCreditTransfersConsentsParamsBody()
        if include_optional:
            return PostPaymentsDomesticCreditTransfersConsentsParamsBody(
                payments = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments.postPaymentsDomesticCreditTransfersConsentsParamsBodyPayments(
                    creditor_account = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_creditor_account.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount(
                        identification = '30087236', 
                        scheme_name = 'UK.AccountNumber', ), 
                    creditor_address = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_creditor_address.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress(
                        building_number = '15', 
                        city = 'City', 
                        country = 'CC', 
                        country_sub_division = 'Division', 
                        postal_code = 'PostCode', 
                        street = 'Street', ), 
                    creditor_agent = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_creditor_agent.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent(
                        clearing_system_identification = 'UK.SortCode', 
                        member_identification = '283746', ), 
                    creditor_name = 'Wood bank', 
                    debtor_account = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_debtor_account.postPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount(
                        identification = '0', ), 
                    debtor_agent = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_debtor_agent.postPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent(
                        identification = '0', ), 
                    end_to_end_identification = 'Notification', 
                    instructed_amount = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_instructed_amount.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount(
                        amount = 100.23, 
                        currency = 'GBP', ), 
                    instruction_identification = '0', 
                    instruction_priority = 'Normal', 
                    local_instrument = 'UK.FasterPayments', 
                    remittance_information_reference = 'UniqueRef1', 
                    remittance_information_unstructured = 'Payment for fruits', 
                    requested_execution_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    schedule = openapi_client.models.request_pis_domestic_schedule.RequestPisDomesticSchedule(
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        frequency = 'DAIL', 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), ),
                request_info = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_request_info.postPaymentsDomesticCreditTransfersConsentsParamsBodyRequestInfo(
                    aspsp_id = '420e5cff-0e2a-4156-991a-f6eeef0478cf', 
                    flags = [
                        'Return.Raw.Consent'
                        ], 
                    merchant = openapi_client.models.merchant.Merchant(
                        id = 'MerchantId', 
                        name = 'MerchantName', ), 
                    tpp_redirect_uri = 'https://tpp-ob.com/callback', 
                    x_request_id = '123e4567-e89b-12d3-a456-426655440000', )
            )
        else:
            return PostPaymentsDomesticCreditTransfersConsentsParamsBody(
                payments = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments.postPaymentsDomesticCreditTransfersConsentsParamsBodyPayments(
                    creditor_account = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_creditor_account.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAccount(
                        identification = '30087236', 
                        scheme_name = 'UK.AccountNumber', ), 
                    creditor_address = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_creditor_address.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAddress(
                        building_number = '15', 
                        city = 'City', 
                        country = 'CC', 
                        country_sub_division = 'Division', 
                        postal_code = 'PostCode', 
                        street = 'Street', ), 
                    creditor_agent = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_creditor_agent.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsCreditorAgent(
                        clearing_system_identification = 'UK.SortCode', 
                        member_identification = '283746', ), 
                    creditor_name = 'Wood bank', 
                    debtor_account = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_debtor_account.postPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAccount(
                        identification = '0', ), 
                    debtor_agent = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_debtor_agent.postPaymentsDomesticCreditTransfersConsentsParamsBodyPayments_debtorAgent(
                        identification = '0', ), 
                    end_to_end_identification = 'Notification', 
                    instructed_amount = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_payments_instructed_amount.postPaymentsDomesticCreditTransfersConsentsParamsBodyPaymentsInstructedAmount(
                        amount = 100.23, 
                        currency = 'GBP', ), 
                    instruction_identification = '0', 
                    instruction_priority = 'Normal', 
                    local_instrument = 'UK.FasterPayments', 
                    remittance_information_reference = 'UniqueRef1', 
                    remittance_information_unstructured = 'Payment for fruits', 
                    requested_execution_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    schedule = openapi_client.models.request_pis_domestic_schedule.RequestPisDomesticSchedule(
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        frequency = 'DAIL', 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), ),
                request_info = openapi_client.models.post_payments_domestic_credit_transfers_consents_params_body_request_info.postPaymentsDomesticCreditTransfersConsentsParamsBodyRequestInfo(
                    aspsp_id = '420e5cff-0e2a-4156-991a-f6eeef0478cf', 
                    flags = [
                        'Return.Raw.Consent'
                        ], 
                    merchant = openapi_client.models.merchant.Merchant(
                        id = 'MerchantId', 
                        name = 'MerchantName', ), 
                    tpp_redirect_uri = 'https://tpp-ob.com/callback', 
                    x_request_id = '123e4567-e89b-12d3-a456-426655440000', ),
        )
        """

    def testPostPaymentsDomesticCreditTransfersConsentsParamsBody(self):
        """Test PostPaymentsDomesticCreditTransfersConsentsParamsBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
