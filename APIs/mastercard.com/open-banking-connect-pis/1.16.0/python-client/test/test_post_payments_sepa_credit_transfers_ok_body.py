# coding: utf-8

"""
    Open Banking - Payments initiation service

    Open Banking - Payments initiation service

    The version of the OpenAPI document: 1.16.0
    Contact: apisupport@mastercard.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.post_payments_sepa_credit_transfers_ok_body import PostPaymentsSepaCreditTransfersOKBody

class TestPostPaymentsSepaCreditTransfersOKBody(unittest.TestCase):
    """PostPaymentsSepaCreditTransfersOKBody unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostPaymentsSepaCreditTransfersOKBody:
        """Test PostPaymentsSepaCreditTransfersOKBody
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostPaymentsSepaCreditTransfersOKBody`
        """
        model = PostPaymentsSepaCreditTransfersOKBody()
        if include_optional:
            return PostPaymentsSepaCreditTransfersOKBody(
                consent = openapi_client.models.sepa_payment_consent.SepaPaymentConsent(
                    consent_id = '', 
                    consent_request_id = '', ),
                original_request_info = openapi_client.models.post_payments_sepa_credit_transfers_ok_body_original_request_info.postPaymentsSepaCreditTransfersOKBodyOriginalRequestInfo(
                    x_request_id = '444e4567-e55b-12d3-a456-426655448888', ),
                transfer = openapi_client.models.post_payments_sepa_credit_transfers_ok_body_transfer.postPaymentsSepaCreditTransfersOKBodyTransfer(
                    payment_id = 'trasnferIdentificaion1', 
                    status_reason_code = 'AM04', 
                    transaction_status = 'ACCP', )
            )
        else:
            return PostPaymentsSepaCreditTransfersOKBody(
                consent = openapi_client.models.sepa_payment_consent.SepaPaymentConsent(
                    consent_id = '', 
                    consent_request_id = '', ),
                original_request_info = openapi_client.models.post_payments_sepa_credit_transfers_ok_body_original_request_info.postPaymentsSepaCreditTransfersOKBodyOriginalRequestInfo(
                    x_request_id = '444e4567-e55b-12d3-a456-426655448888', ),
                transfer = openapi_client.models.post_payments_sepa_credit_transfers_ok_body_transfer.postPaymentsSepaCreditTransfersOKBodyTransfer(
                    payment_id = 'trasnferIdentificaion1', 
                    status_reason_code = 'AM04', 
                    transaction_status = 'ACCP', ),
        )
        """

    def testPostPaymentsSepaCreditTransfersOKBody(self):
        """Test PostPaymentsSepaCreditTransfersOKBody"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
