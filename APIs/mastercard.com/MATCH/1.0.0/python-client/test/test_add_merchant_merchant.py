# coding: utf-8

"""
    MATCH API

    Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.add_merchant_merchant import AddMerchantMerchant

class TestAddMerchantMerchant(unittest.TestCase):
    """AddMerchantMerchant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddMerchantMerchant:
        """Test AddMerchantMerchant
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddMerchantMerchant`
        """
        model = AddMerchantMerchant()
        if include_optional:
            return AddMerchantMerchant(
                address = openapi_client.models.address.Address(
                    city = 'DALLAS', 
                    country = 'USA', 
                    country_subdivision = 'IL', 
                    line1 = '42 ELM AVENUE', 
                    line2 = 'SUITE 201', 
                    postal_code = '66579', 
                    province = '', ),
                alt_phone_number = '6367558968',
                cat_flag = 'Y',
                comments = 'Added for reasons of fraud',
                country_subdivision_tax_id = '*****',
                date_closed = '10/12/2014',
                date_opened = '12/31/2013',
                doing_business_as_name = 'BAIT R US',
                merchant_category = '0742',
                merchant_id = '@random-string[14]@',
                name = 'THE BAIT SHOP',
                national_tax_id = '*****',
                phone_number = '6367558963',
                principal = openapi_client.models.principal.Principal(
                    address = openapi_client.models.address.Address(
                        city = 'DALLAS', 
                        country = 'USA', 
                        country_subdivision = 'IL', 
                        line1 = '42 ELM AVENUE', 
                        line2 = 'SUITE 201', 
                        postal_code = '66579', 
                        province = '', ), 
                    alt_phone_number = '3165557625', 
                    drivers_license = openapi_client.models.drivers_license.DriversLicense(
                        country = 'USA', 
                        country_subdivision = 'IL', 
                        number = 'M15698025', ), 
                    first_name = 'DAVID', 
                    last_name = 'SMITH', 
                    middle_initial = 'P', 
                    national_id = '541022104', 
                    phone_number = '3165557625', 
                    search_criteria = openapi_client.models.search_criteria.SearchCriteria(
                        country = [
                            'USA'
                            ], 
                        min_possible_match_count = '3', 
                        region = [
                            'A'
                            ], 
                        search_all = 'N', ), ),
                reason_code = '13',
                service_prov_dba = 'XYZ FINANCIAL SERVICE',
                service_prov_legal = 'XYZ FINANCIAL SERVICE INCORPORATED',
                url = [
                    'www.testmerchant.com '
                    ]
            )
        else:
            return AddMerchantMerchant(
                cat_flag = 'Y',
                country_subdivision_tax_id = '*****',
                date_closed = '10/12/2014',
                date_opened = '12/31/2013',
                merchant_category = '0742',
                merchant_id = '@random-string[14]@',
                name = 'THE BAIT SHOP',
                phone_number = '6367558963',
                reason_code = '13',
        )
        """

    def testAddMerchantMerchant(self):
        """Test AddMerchantMerchant"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
