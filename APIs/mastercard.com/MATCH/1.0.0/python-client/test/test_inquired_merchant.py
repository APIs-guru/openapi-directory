# coding: utf-8

"""
    MATCH API

    Helps acquirers identify potentially high-risk merchants before entering to a merchant agreement.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inquired_merchant import InquiredMerchant

class TestInquiredMerchant(unittest.TestCase):
    """InquiredMerchant unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InquiredMerchant:
        """Test InquiredMerchant
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InquiredMerchant`
        """
        model = InquiredMerchant()
        if include_optional:
            return InquiredMerchant(
                merchant = openapi_client.models.inquired_merchant_merchant.InquiredMerchant_Merchant(
                    added_by_acquirer_id = '1234', 
                    added_on_date = '12/03/2009', 
                    address = openapi_client.models.address.Address(
                        city = 'DALLAS', 
                        country = 'USA', 
                        country_subdivision = 'IL', 
                        line1 = '42 ELM AVENUE', 
                        line2 = 'SUITE 201', 
                        postal_code = '66579', 
                        province = '', ), 
                    alt_phone_number = '6367558968', 
                    country_subdivision_tax_id = '*****', 
                    doing_business_as_name = 'BAIT R US', 
                    merchant_match = openapi_client.models.merchant_match.MerchantMatch(
                        alt_phone_number = '6367558968', 
                        country_subdivision_tax_id = '*****', 
                        doing_business_as_name = 'BAIT R US', 
                        name = 'THE BAIT SHOP', 
                        national_tax_id = '*****', 
                        phone_number = '6367558963', 
                        principal_match = [
                            openapi_client.models.principal_match.PrincipalMatch(
                                alt_phone_number = '3165557625', 
                                drivers_license = openapi_client.models.drivers_license.DriversLicense(
                                    country = 'USA', 
                                    country_subdivision = 'IL', 
                                    number = 'M15698025', ), 
                                first_name = 'DAVID', 
                                last_name = 'SMITH', 
                                middle_initial = 'P', 
                                name = 'THE BAIT SHOP', 
                                national_id = '541022104', 
                                phone_number = '3165557625', 
                                search_criteria = openapi_client.models.search_criteria.SearchCriteria(
                                    country = [
                                        'USA'
                                        ], 
                                    min_possible_match_count = '3', 
                                    region = [
                                        'A'
                                        ], 
                                    search_all = 'N', ), )
                            ], 
                        service_prov_dba = 'XYZ FINANCIAL SERVICE', 
                        service_prov_legal = 'XYZ FINANCIAL SERVICE INCORPORATED', ), 
                    name = 'THE BAIT SHOP', 
                    national_tax_id = '*****', 
                    phone_number = '6367558963', 
                    principal = openapi_client.models.principal.Principal(
                        alt_phone_number = '3165557625', 
                        first_name = 'DAVID', 
                        last_name = 'SMITH', 
                        middle_initial = 'P', 
                        national_id = '541022104', 
                        phone_number = '3165557625', ), 
                    service_prov_dba = 'XYZ FINANCIAL SERVICE', 
                    service_prov_legal = 'XYZ FINANCIAL SERVICE INCORPORATED', 
                    termination_reason_code = '13', 
                    url_group = openapi_client.models.url_group.UrlGroup(
                        close_match_urls = [
                            openapi_client.models.url.Url(
                                url = [
                                    'WWW.SHOESHOP.COM'
                                    ], )
                            ], 
                        exact_match_urls = [
                            openapi_client.models.url.Url()
                            ], 
                        no_match_urls = , ), )
            )
        else:
            return InquiredMerchant(
        )
        """

    def testInquiredMerchant(self):
        """Test InquiredMerchant"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
