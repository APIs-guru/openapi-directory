# coding: utf-8

"""
    Spending Pulse

    This API will provide monthly data which includes metrics such as sales volume and growth rate.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.spending_pulse_record import SpendingPulseRecord

class TestSpendingPulseRecord(unittest.TestCase):
    """SpendingPulseRecord unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SpendingPulseRecord:
        """Test SpendingPulseRecord
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SpendingPulseRecord`
        """
        model = SpendingPulseRecord()
        if include_optional:
            return SpendingPulseRecord(
                country = 'UK',
                currency_of_for_sales_value = 'us dollar',
                ecomm = 'true',
                implied_deflator_month_over_month_change = '2',
                implied_deflator_year_over_year_change = '1',
                non_gregorian_reporting_period = '2015-01',
                period = 'Week',
                period_end_date = '05/31/2015',
                period_start_date = '05/01/2015',
                price_adjustment_flag = 'true',
                price_index3_month_moving_average_change = '11',
                price_index_month_over_month_change = '10',
                price_index_value = '8',
                price_index_year_over_year_change = '9',
                product_line = 'US Executive',
                publication_coverage_period = 'March 2015',
                report_type = 'monitor',
                reporting_calender = 'gregorian',
                sales3_month_moving_average_change = '6',
                sales_month_over_month_change = '5',
                sales_value_index = '3',
                sales_year_over_year_change = '4',
                sales_year_to_date_change = '7',
                same_store_sales_index3_month_moving_average_change = '17',
                same_store_sales_index_year_over_year_change = '16',
                seasonal_adjustment_flag = 'true',
                sector = 'Petrol',
                segment = 'Fine Dining',
                sub_geography_value = 'region',
                sub_sector = 'Electronics',
                transaction_index3_month_moving_average_change = '3',
                transaction_index_month_over_month_change = '14',
                transaction_index_value = '12',
                transaction_index_year_over_year_change = '13'
            )
        else:
            return SpendingPulseRecord(
        )
        """

    def testSpendingPulseRecord(self):
        """Test SpendingPulseRecord"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
