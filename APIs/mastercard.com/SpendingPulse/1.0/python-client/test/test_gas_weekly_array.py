# coding: utf-8

"""
    Spending Pulse

    This API will provide monthly data which includes metrics such as sales volume and growth rate.

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.gas_weekly_array import GasWeeklyArray

class TestGasWeeklyArray(unittest.TestCase):
    """GasWeeklyArray unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GasWeeklyArray:
        """Test GasWeeklyArray
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GasWeeklyArray`
        """
        model = GasWeeklyArray()
        if include_optional:
            return GasWeeklyArray(
                gas_weekly_record = [
                    openapi_client.models.gas_weekly_record.GasWeeklyRecord(
                        average_price_per_gal_regular_gasoline = 'true', 
                        country = 'UK', 
                        padd_code = 'West Coast', 
                        padd_millionsof_barrels_sold = '12.023', 
                        padd_percent_change_in_barrels_from_prior_week = '0.021', 
                        padd_percent_changein_barrelsfrom52_weeks_ago = 'true', 
                        period = 'Week', 
                        product_line = 'US Weekly Gasoline Demand Report', 
                        publication_coverage_period = '20150710', 
                        report_type = 'monitor', 
                        sector = 'Gas', 
                        segment = 'true', 
                        sub_sector = 'true', 
                        total_barrels_change_from_prior_week = '1.426', 
                        total_millions_of_barrels4_week_average = '66.78', 
                        total_millions_of_barrels_daily_average = '9.759', 
                        total_millions_of_barrels_sold = '68.313', 
                        total_percent_change_in_barrels_from52_weeks_ago = 'true', 
                        total_percent_change_in_barrels_from_prior_week = '0.021', 
                        total_percent_change_in_the4_week_average_from52_weeks_ago = 'true', 
                        week_end_date = '5/1/2015', )
                    ]
            )
        else:
            return GasWeeklyArray(
        )
        """

    def testGasWeeklyArray(self):
        """Test GasWeeklyArray"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
