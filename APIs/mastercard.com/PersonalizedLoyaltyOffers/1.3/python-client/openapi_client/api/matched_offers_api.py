# coding: utf-8

"""
    Personalized Offers

    This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.

    The version of the OpenAPI document: 1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing import Optional
from typing_extensions import Annotated
from openapi_client.models.matched_offers_response import MatchedOffersResponse

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class MatchedOffersApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def matchedoffers_get(
        self,
        fid: Annotated[StrictStr, Field(description="Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.")],
        user_token: Annotated[StrictStr, Field(description="Session identifier as returned by the UserToken resource.")],
        lang: Annotated[Optional[StrictStr], Field(description="When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.")] = None,
        merchant_name: Annotated[Optional[StrictStr], Field(description="Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.")] = None,
        category: Annotated[Optional[StrictStr], Field(description="Offer Categories.")] = None,
        offer_type: Annotated[Optional[StrictStr], Field(description="The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Segment of offers to return.")] = None,
        items_per_page: Annotated[Optional[StrictInt], Field(description="Segment size of offer to be returned. Default is 25.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> MatchedOffersResponse:
        """Returns Matched Offers

        This resource returns offers that are available to the user and conform to the search criteria (if specified). 

        :param fid: Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation. (required)
        :type fid: str
        :param user_token: Session identifier as returned by the UserToken resource. (required)
        :type user_token: str
        :param lang: When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.
        :type lang: str
        :param merchant_name: Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.
        :type merchant_name: str
        :param category: Offer Categories.
        :type category: str
        :param offer_type: The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.
        :type offer_type: str
        :param page_number: Segment of offers to return.
        :type page_number: int
        :param items_per_page: Segment size of offer to be returned. Default is 25.
        :type items_per_page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._matchedoffers_get_serialize(
            fid=fid,
            user_token=user_token,
            lang=lang,
            merchant_name=merchant_name,
            category=category,
            offer_type=offer_type,
            page_number=page_number,
            items_per_page=items_per_page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MatchedOffersResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def matchedoffers_get_with_http_info(
        self,
        fid: Annotated[StrictStr, Field(description="Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.")],
        user_token: Annotated[StrictStr, Field(description="Session identifier as returned by the UserToken resource.")],
        lang: Annotated[Optional[StrictStr], Field(description="When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.")] = None,
        merchant_name: Annotated[Optional[StrictStr], Field(description="Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.")] = None,
        category: Annotated[Optional[StrictStr], Field(description="Offer Categories.")] = None,
        offer_type: Annotated[Optional[StrictStr], Field(description="The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Segment of offers to return.")] = None,
        items_per_page: Annotated[Optional[StrictInt], Field(description="Segment size of offer to be returned. Default is 25.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[MatchedOffersResponse]:
        """Returns Matched Offers

        This resource returns offers that are available to the user and conform to the search criteria (if specified). 

        :param fid: Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation. (required)
        :type fid: str
        :param user_token: Session identifier as returned by the UserToken resource. (required)
        :type user_token: str
        :param lang: When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.
        :type lang: str
        :param merchant_name: Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.
        :type merchant_name: str
        :param category: Offer Categories.
        :type category: str
        :param offer_type: The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.
        :type offer_type: str
        :param page_number: Segment of offers to return.
        :type page_number: int
        :param items_per_page: Segment size of offer to be returned. Default is 25.
        :type items_per_page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._matchedoffers_get_serialize(
            fid=fid,
            user_token=user_token,
            lang=lang,
            merchant_name=merchant_name,
            category=category,
            offer_type=offer_type,
            page_number=page_number,
            items_per_page=items_per_page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MatchedOffersResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def matchedoffers_get_without_preload_content(
        self,
        fid: Annotated[StrictStr, Field(description="Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.")],
        user_token: Annotated[StrictStr, Field(description="Session identifier as returned by the UserToken resource.")],
        lang: Annotated[Optional[StrictStr], Field(description="When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.")] = None,
        merchant_name: Annotated[Optional[StrictStr], Field(description="Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.")] = None,
        category: Annotated[Optional[StrictStr], Field(description="Offer Categories.")] = None,
        offer_type: Annotated[Optional[StrictStr], Field(description="The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.")] = None,
        page_number: Annotated[Optional[StrictInt], Field(description="Segment of offers to return.")] = None,
        items_per_page: Annotated[Optional[StrictInt], Field(description="Segment size of offer to be returned. Default is 25.")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns Matched Offers

        This resource returns offers that are available to the user and conform to the search criteria (if specified). 

        :param fid: Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation. (required)
        :type fid: str
        :param user_token: Session identifier as returned by the UserToken resource. (required)
        :type user_token: str
        :param lang: When utilized with a multi-lingual implementation, may be the tongue and country of the user in ISO 639-1, underscore, ISO 3166-1 alpha-2 format.
        :type lang: str
        :param merchant_name: Fuzzy term to search retailers with offers for the user. In general, searching of Matched Offers is not advised as users generally have a modest selection of highly relevant promotions.
        :type merchant_name: str
        :param category: Offer Categories.
        :type category: str
        :param offer_type: The kind of deal. POSTPAIDCREDIT- Statement Credit Offer, which is a discount that is automatically applied to the card linked to the user and utilized to make the purchase.
        :type offer_type: str
        :param page_number: Segment of offers to return.
        :type page_number: int
        :param items_per_page: Segment size of offer to be returned. Default is 25.
        :type items_per_page: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._matchedoffers_get_serialize(
            fid=fid,
            user_token=user_token,
            lang=lang,
            merchant_name=merchant_name,
            category=category,
            offer_type=offer_type,
            page_number=page_number,
            items_per_page=items_per_page,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "MatchedOffersResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _matchedoffers_get_serialize(
        self,
        fid,
        user_token,
        lang,
        merchant_name,
        category,
        offer_type,
        page_number,
        items_per_page,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if fid is not None:
            
            _query_params.append(('FId', fid))
            
        if user_token is not None:
            
            _query_params.append(('UserToken', user_token))
            
        if lang is not None:
            
            _query_params.append(('Lang', lang))
            
        if merchant_name is not None:
            
            _query_params.append(('MerchantName', merchant_name))
            
        if category is not None:
            
            _query_params.append(('Category', category))
            
        if offer_type is not None:
            
            _query_params.append(('OfferType', offer_type))
            
        if page_number is not None:
            
            _query_params.append(('PageNumber', page_number))
            
        if items_per_page is not None:
            
            _query_params.append(('ItemsPerPage', items_per_page))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/matchedoffers',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


