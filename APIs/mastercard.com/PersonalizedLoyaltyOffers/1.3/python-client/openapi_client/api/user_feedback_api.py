# coding: utf-8

"""
    Personalized Offers

    This API provides content for financial instutions participating in Mastercard Personalized Offers to use in online and mobile banking applications for cardholders.

    The version of the OpenAPI document: 1.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictInt, StrictStr
from typing_extensions import Annotated
from openapi_client.models.user_feedback_response import UserFeedbackResponse

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class UserFeedbackApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def userfeedback_post(
        self,
        fid: Annotated[StrictStr, Field(description="Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.")],
        user_token: Annotated[StrictStr, Field(description="Session identifier as returned by the UserToken resource.")],
        offer_id: Annotated[StrictStr, Field(description="System-wide identifier for the campaign, not intended for end-user display.")],
        feedback: Annotated[StrictInt, Field(description="User response to the offer. 0- Dislike offer. 1- Like offer.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> UserFeedbackResponse:
        """Provide User Feedback on Offer

        This resource allows a user to provide a thumbs-up or a thumbs-down rating of the specified offer. Offer matches that are disliked will be supressed from the results of future calls to Matched Offers. 

        :param fid: Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation. (required)
        :type fid: str
        :param user_token: Session identifier as returned by the UserToken resource. (required)
        :type user_token: str
        :param offer_id: System-wide identifier for the campaign, not intended for end-user display. (required)
        :type offer_id: str
        :param feedback: User response to the offer. 0- Dislike offer. 1- Like offer. (required)
        :type feedback: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._userfeedback_post_serialize(
            fid=fid,
            user_token=user_token,
            offer_id=offer_id,
            feedback=feedback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UserFeedbackResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def userfeedback_post_with_http_info(
        self,
        fid: Annotated[StrictStr, Field(description="Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.")],
        user_token: Annotated[StrictStr, Field(description="Session identifier as returned by the UserToken resource.")],
        offer_id: Annotated[StrictStr, Field(description="System-wide identifier for the campaign, not intended for end-user display.")],
        feedback: Annotated[StrictInt, Field(description="User response to the offer. 0- Dislike offer. 1- Like offer.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[UserFeedbackResponse]:
        """Provide User Feedback on Offer

        This resource allows a user to provide a thumbs-up or a thumbs-down rating of the specified offer. Offer matches that are disliked will be supressed from the results of future calls to Matched Offers. 

        :param fid: Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation. (required)
        :type fid: str
        :param user_token: Session identifier as returned by the UserToken resource. (required)
        :type user_token: str
        :param offer_id: System-wide identifier for the campaign, not intended for end-user display. (required)
        :type offer_id: str
        :param feedback: User response to the offer. 0- Dislike offer. 1- Like offer. (required)
        :type feedback: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._userfeedback_post_serialize(
            fid=fid,
            user_token=user_token,
            offer_id=offer_id,
            feedback=feedback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UserFeedbackResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def userfeedback_post_without_preload_content(
        self,
        fid: Annotated[StrictStr, Field(description="Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation.")],
        user_token: Annotated[StrictStr, Field(description="Session identifier as returned by the UserToken resource.")],
        offer_id: Annotated[StrictStr, Field(description="System-wide identifier for the campaign, not intended for end-user display.")],
        feedback: Annotated[StrictInt, Field(description="User response to the offer. 0- Dislike offer. 1- Like offer.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Provide User Feedback on Offer

        This resource allows a user to provide a thumbs-up or a thumbs-down rating of the specified offer. Offer matches that are disliked will be supressed from the results of future calls to Matched Offers. 

        :param fid: Financial Institution Identifier. Code that specifies the platform and configuration instance, provided by Mastercard during implementation. (required)
        :type fid: str
        :param user_token: Session identifier as returned by the UserToken resource. (required)
        :type user_token: str
        :param offer_id: System-wide identifier for the campaign, not intended for end-user display. (required)
        :type offer_id: str
        :param feedback: User response to the offer. 0- Dislike offer. 1- Like offer. (required)
        :type feedback: int
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._userfeedback_post_serialize(
            fid=fid,
            user_token=user_token,
            offer_id=offer_id,
            feedback=feedback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "UserFeedbackResponse",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _userfeedback_post_serialize(
        self,
        fid,
        user_token,
        offer_id,
        feedback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if fid is not None:
            
            _query_params.append(('FId', fid))
            
        if user_token is not None:
            
            _query_params.append(('UserToken', user_token))
            
        if offer_id is not None:
            
            _query_params.append(('OfferId', offer_id))
            
        if feedback is not None:
            
            _query_params.append(('Feedback', feedback))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/userfeedback',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


