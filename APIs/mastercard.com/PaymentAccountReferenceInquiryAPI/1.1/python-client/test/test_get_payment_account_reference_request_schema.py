# coding: utf-8

"""
    Payment Account Reference Inquiry API

    The Payment Account Reference Inquiry API is the unified Mastercard interface for allowing Mastercard Customers involved in payment card acceptance -- whether Merchants, Acquirers, or Digital Activity Customers (DACs) -- to enquire the PAR Vault for getting the PAR, when providing an Account Primary Account Number (PAN) linked to a digitized PAN.

    The version of the OpenAPI document: 1.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_payment_account_reference_request_schema import GetPaymentAccountReferenceRequestSchema

class TestGetPaymentAccountReferenceRequestSchema(unittest.TestCase):
    """GetPaymentAccountReferenceRequestSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetPaymentAccountReferenceRequestSchema:
        """Test GetPaymentAccountReferenceRequestSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetPaymentAccountReferenceRequestSchema`
        """
        model = GetPaymentAccountReferenceRequestSchema()
        if include_optional:
            return GetPaymentAccountReferenceRequestSchema(
                encrypted_payload = openapi_client.models.encrypted_payload_data.encryptedPayloadData(
                    encrypted_data = '4ca442de53910ea8f29602a749a51da64913b5c1b167b798c18e36ddaa05a6ba6619fdd7e8cecc249d93c31217e83e8f', 
                    encrypted_key = 'a207fc78e0dbf4d4daab90aefe7058bb846f345e1c4ac3af5536a7cf93591a05e2e0ea5b1a23835a0954e8303addaeb4fa0abb78e3586a3523343dbedea05381c012864433dbac25106fedb061c85c5a8ac9ea60be497c82ba236fe54c83744b3f0d1825222e0a320c277900b528cb0f093e724ef8c0626d53c273b7c81b70458819251e4fc7cb065072bf034796f7d1a911c2e2bfd0cf208036dda0b18a39eee66de04df8a22b26cd00e235de300f25f9c4cf7cb120212dbce5ad93ae65721c21902d3ae7d9d6904814e76cc5c6e92ea132c6cbd4ab835167601cef01f9d915a1f7b5bca117ef321118acabbdd6d02760ced68fcb2c4d6d7e7c558b0f23a07e', 
                    iv = '91f86d9252849db2538f4224c4816433', 
                    oaep_hashing_algorithm = 'SHA256', 
                    public_key_fingerprint = '4c4ead5927f0df8117f178eea9308daa58e27c2b', ),
                request_id = '123456'
            )
        else:
            return GetPaymentAccountReferenceRequestSchema(
                encrypted_payload = openapi_client.models.encrypted_payload_data.encryptedPayloadData(
                    encrypted_data = '4ca442de53910ea8f29602a749a51da64913b5c1b167b798c18e36ddaa05a6ba6619fdd7e8cecc249d93c31217e83e8f', 
                    encrypted_key = 'a207fc78e0dbf4d4daab90aefe7058bb846f345e1c4ac3af5536a7cf93591a05e2e0ea5b1a23835a0954e8303addaeb4fa0abb78e3586a3523343dbedea05381c012864433dbac25106fedb061c85c5a8ac9ea60be497c82ba236fe54c83744b3f0d1825222e0a320c277900b528cb0f093e724ef8c0626d53c273b7c81b70458819251e4fc7cb065072bf034796f7d1a911c2e2bfd0cf208036dda0b18a39eee66de04df8a22b26cd00e235de300f25f9c4cf7cb120212dbce5ad93ae65721c21902d3ae7d9d6904814e76cc5c6e92ea132c6cbd4ab835167601cef01f9d915a1f7b5bca117ef321118acabbdd6d02760ced68fcb2c4d6d7e7c558b0f23a07e', 
                    iv = '91f86d9252849db2538f4224c4816433', 
                    oaep_hashing_algorithm = 'SHA256', 
                    public_key_fingerprint = '4c4ead5927f0df8117f178eea9308daa58e27c2b', ),
                request_id = '123456',
        )
        """

    def testGetPaymentAccountReferenceRequestSchema(self):
        """Test GetPaymentAccountReferenceRequestSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
