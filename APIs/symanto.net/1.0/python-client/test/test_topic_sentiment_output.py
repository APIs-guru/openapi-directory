# coding: utf-8

"""
    Psycholinguistic Text Analytics

    We aim to provide the deepest understanding of people through psychology & AI

    The version of the OpenAPI document: 1.0
    Contact: support@symanto.net
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.topic_sentiment_output import TopicSentimentOutput

class TestTopicSentimentOutput(unittest.TestCase):
    """TopicSentimentOutput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TopicSentimentOutput:
        """Test TopicSentimentOutput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TopicSentimentOutput`
        """
        model = TopicSentimentOutput()
        if include_optional:
            return TopicSentimentOutput(
                id = '',
                language = '',
                sentiments = [
                    openapi_client.models.sentiment.Sentiment(
                        category = '', 
                        end = 56, 
                        negation_term = '', 
                        parent_category = '', 
                        positive = True, 
                        scale = 1.337, 
                        start = 56, 
                        text = '', )
                    ],
                text = '',
                topic_sentiments = [
                    openapi_client.models.topic_sentiment.TopicSentiment(
                        sentence = '', 
                        sentiment = openapi_client.models.sentiment.Sentiment(
                            category = '', 
                            end = 56, 
                            negation_term = '', 
                            parent_category = '', 
                            positive = True, 
                            scale = 1.337, 
                            start = 56, 
                            text = '', ), 
                        topic = openapi_client.models.topic.Topic(
                            category = '', 
                            end = 56, 
                            polarity = 1.337, 
                            start = 56, 
                            text = '', ), )
                    ],
                topics = [
                    openapi_client.models.topic.Topic(
                        category = '', 
                        end = 56, 
                        polarity = 1.337, 
                        start = 56, 
                        text = '', 
                        topic = '', )
                    ]
            )
        else:
            return TopicSentimentOutput(
        )
        """

    def testTopicSentimentOutput(self):
        """Test TopicSentimentOutput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
