# coding: utf-8

"""
    smart-me

    With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.folder_menu_item import FolderMenuItem

class TestFolderMenuItem(unittest.TestCase):
    """FolderMenuItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FolderMenuItem:
        """Test FolderMenuItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FolderMenuItem`
        """
        model = FolderMenuItem()
        if include_optional:
            return FolderMenuItem(
                auto_export_settings = openapi_client.models.auto_export_settings.AutoExportSettings(
                    export_format = '', 
                    export_interval = 'NoExport', 
                    meter_point_id = '', 
                    upload_type = '', ),
                children = [
                    openapi_client.models.folder_menu_item.FolderMenuItem(
                        auto_export_settings = openapi_client.models.auto_export_settings.AutoExportSettings(
                            export_format = '', 
                            export_interval = 'NoExport', 
                            meter_point_id = '', 
                            upload_type = '', ), 
                        description = '', 
                        folder_type = 'Folder', 
                        icon = '', 
                        id = '', 
                        meter_serial_number = '', 
                        name = '', 
                        user_id = '', )
                    ],
                description = '',
                folder_type = 'Folder',
                icon = '',
                id = '',
                meter_serial_number = '',
                name = '',
                user_id = ''
            )
        else:
            return FolderMenuItem(
        )
        """

    def testFolderMenuItem(self):
        """Test FolderMenuItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
