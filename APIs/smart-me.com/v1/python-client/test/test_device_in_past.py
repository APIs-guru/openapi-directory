# coding: utf-8

"""
    smart-me

    With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.device_in_past import DeviceInPast

class TestDeviceInPast(unittest.TestCase):
    """DeviceInPast unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeviceInPast:
        """Test DeviceInPast
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeviceInPast`
        """
        model = DeviceInPast()
        if include_optional:
            return DeviceInPast(
                counter_reading = 1.337,
                counter_reading_export = 1.337,
                counter_reading_export_t1 = 1.337,
                counter_reading_export_t2 = 1.337,
                counter_reading_export_t3 = 1.337,
                counter_reading_export_t4 = 1.337,
                counter_reading_import = 1.337,
                counter_reading_import_t1 = 1.337,
                counter_reading_import_t2 = 1.337,
                counter_reading_import_t3 = 1.337,
                counter_reading_import_t4 = 1.337,
                counter_reading_t1 = 1.337,
                counter_reading_t2 = 1.337,
                counter_reading_t3 = 1.337,
                counter_reading_t4 = 1.337,
                counter_reading_unit = '',
                var_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                id = '',
                serial = 56
            )
        else:
            return DeviceInPast(
        )
        """

    def testDeviceInPast(self):
        """Test DeviceInPast"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
