# coding: utf-8

"""
    smart-me

    With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pico_charging_data import PicoChargingData

class TestPicoChargingData(unittest.TestCase):
    """PicoChargingData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PicoChargingData:
        """Test PicoChargingData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PicoChargingData`
        """
        model = PicoChargingData()
        if include_optional:
            return PicoChargingData(
                active_charging_energy = 1.337,
                active_charging_power = 1.337,
                connection_mode = 'NetworkToCloudConnectionMode_NoConnection',
                duration = 56,
                last_warning_or_error = 'MeterDataloggerEvent',
                last_warning_or_error_message = '',
                last_warning_or_error_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                load_shedding_state = 'MaxCurrent',
                loadmanagement_group_name = '',
                max_allowed_charging_current = 56,
                max_dynamic_current = 56,
                max_loadmanagement_group_current = 56,
                max_station_current = 56,
                min_station_current = 56,
                rssi = 56,
                state = 'Booting',
                value_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PicoChargingData(
        )
        """

    def testPicoChargingData(self):
        """Test PicoChargingData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
