# coding: utf-8

"""
    smart-me

    With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So its an easy way to add the smart-me Cloud support to your Hardware or Software Product.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pico_settings_dto import PicoSettingsDto

class TestPicoSettingsDto(unittest.TestCase):
    """PicoSettingsDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PicoSettingsDto:
        """Test PicoSettingsDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PicoSettingsDto`
        """
        model = PicoSettingsDto()
        if include_optional:
            return PicoSettingsDto(
                authentication_type = 'None',
                car_id_detection = True,
                display_brightness = 'YQ==',
                dns_name = '',
                fix_cable_lock_enable = True,
                idle_image_url = '',
                internal_ip = '',
                loadmanagement_group_id = '',
                max_current = 56,
                min_current = 56,
                modbus_tcp = True,
                name = '',
                serial_number = ''
            )
        else:
            return PicoSettingsDto(
        )
        """

    def testPicoSettingsDto(self):
        """Test PicoSettingsDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
