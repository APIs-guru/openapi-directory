# coding: utf-8

"""
    SheerSEO API

    Sheerseo API has 2 stages:<br>First stage - initiating the task: You fill in your task and receive in return the task id. <br>Second stage - collecting the results: send a request containing the task ids you got at the first stage and collecting the results.

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rank_collect_response_tasks_inner_task_id import RankCollectResponseTasksInnerTaskId

class TestRankCollectResponseTasksInnerTaskId(unittest.TestCase):
    """RankCollectResponseTasksInnerTaskId unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RankCollectResponseTasksInnerTaskId:
        """Test RankCollectResponseTasksInnerTaskId
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RankCollectResponseTasksInnerTaskId`
        """
        model = RankCollectResponseTasksInnerTaskId()
        if include_optional:
            return RankCollectResponseTasksInnerTaskId(
                error_message = '',
                keyword = 'seo software',
                local_pack_rank = 1,
                localization_code = 'us',
                localization_zip = '',
                rank = 1,
                ready = 'true',
                search_engine = 'google',
                status = 'ok'
            )
        else:
            return RankCollectResponseTasksInnerTaskId(
        )
        """

    def testRankCollectResponseTasksInnerTaskId(self):
        """Test RankCollectResponseTasksInnerTaskId"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
