# coding: utf-8

"""
    iQualify Management API

    The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pulse_response import PulseResponse

class TestPulseResponse(unittest.TestCase):
    """PulseResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PulseResponse:
        """Test PulseResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PulseResponse`
        """
        model = PulseResponse()
        if include_optional:
            return PulseResponse(
                learner_first_name = '',
                learner_id = '',
                learner_last_name = '',
                pulse_base_id = '',
                pulse_instance_id = '',
                pulse_question = '',
                pulse_run_duration_minutes = 56,
                pulse_run_start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                pulse_type = '',
                response = openapi_client.models.answer.Answer(
                    multi_choice_answer = [
                        openapi_client.models.multi_choice_option.MultiChoiceOption(
                            option = '', 
                            value = True, )
                        ], 
                    spatial_answer = [
                        openapi_client.models.spatial_option.SpatialOption(
                            option = '', 
                            value = 1.337, )
                        ], 
                    text_answer = '', ),
                response_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return PulseResponse(
        )
        """

    def testPulseResponse(self):
        """Test PulseResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
