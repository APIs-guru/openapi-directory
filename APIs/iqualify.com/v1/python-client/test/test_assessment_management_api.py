# coding: utf-8

"""
    iQualify Management API

    The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.assessment_management_api import AssessmentManagementApi


class TestAssessmentManagementApi(unittest.TestCase):
    """AssessmentManagementApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AssessmentManagementApi()

    def tearDown(self) -> None:
        pass

    def test_offerings_offering_id_activities_openresponse_get(self) -> None:
        """Test case for offerings_offering_id_activities_openresponse_get

        Find offering's activities
        """
        pass

    def test_offerings_offering_id_assessments_assessment_id_documents_document_id_delete(self) -> None:
        """Test case for offerings_offering_id_assessments_assessment_id_documents_document_id_delete

        Remove assessment document
        """
        pass

    def test_offerings_offering_id_assessments_assessment_id_patch(self) -> None:
        """Test case for offerings_offering_id_assessments_assessment_id_patch

        Update assessment details
        """
        pass

    def test_offerings_offering_id_assessments_assessment_id_user_email_patch(self) -> None:
        """Test case for offerings_offering_id_assessments_assessment_id_user_email_patch

        Update the due dates for a learner's quiz attempt
        """
        pass

    def test_offerings_offering_id_assessments_get(self) -> None:
        """Test case for offerings_offering_id_assessments_get

        Find offering's assessments
        """
        pass

    def test_offerings_offering_id_learners_pending_submission_get(self) -> None:
        """Test case for offerings_offering_id_learners_pending_submission_get

        Find learners with assessments pending x days before due date within the specified offeringId
        """
        pass

    def test_offerings_offering_id_users_user_email_assessments_assessment_id_delete(self) -> None:
        """Test case for offerings_offering_id_users_user_email_assessments_assessment_id_delete

        Reset user's assessment to draft state
        """
        pass

    def test_offerings_offering_id_users_user_email_submissions_open_response_get(self) -> None:
        """Test case for offerings_offering_id_users_user_email_submissions_open_response_get

        Find learner's open response assessment submissions
        """
        pass


if __name__ == '__main__':
    unittest.main()
