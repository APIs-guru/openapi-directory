# coding: utf-8

"""
    iQualify Management API

    The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.offerings_offering_id_users_post207_response_inner import OfferingsOfferingIdUsersPost207ResponseInner

class TestOfferingsOfferingIdUsersPost207ResponseInner(unittest.TestCase):
    """OfferingsOfferingIdUsersPost207ResponseInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OfferingsOfferingIdUsersPost207ResponseInner:
        """Test OfferingsOfferingIdUsersPost207ResponseInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OfferingsOfferingIdUsersPost207ResponseInner`
        """
        model = OfferingsOfferingIdUsersPost207ResponseInner()
        if include_optional:
            return OfferingsOfferingIdUsersPost207ResponseInner(
                email = '0',
                first_name = '0',
                invite = openapi_client.models.invite.Invite(
                    url = '', ),
                is_facilitator = True,
                is_marker = True,
                is_readonly = True,
                last_name = '0',
                metadata = openapi_client.models.user_metadata.UserMetadata(
                    tags = [
                        ''
                        ], ),
                person_id = '0',
                profile = openapi_client.models.user_profile_request.UserProfileRequest(
                    display_name = '', ),
                send_invite = True,
                send_notification_email = True,
                error = openapi_client.models.error_error.Error_error(
                    details = '', 
                    name = '', )
            )
        else:
            return OfferingsOfferingIdUsersPost207ResponseInner(
        )
        """

    def testOfferingsOfferingIdUsersPost207ResponseInner(self):
        """Test OfferingsOfferingIdUsersPost207ResponseInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
