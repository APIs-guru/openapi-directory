# coding: utf-8

"""
    iQualify Management API

    The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.offering_response import OfferingResponse

class TestOfferingResponse(unittest.TestCase):
    """OfferingResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OfferingResponse:
        """Test OfferingResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OfferingResponse`
        """
        model = OfferingResponse()
        if include_optional:
            return OfferingResponse(
                content_id = '0',
                cover_image_url = '0',
                currency = '',
                description = '0',
                early_close_off_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                enrollment_limit = 1.337,
                has_early_close_off = True,
                id = '',
                identifier = '',
                is_readonly = True,
                name = '0',
                price = 1.337,
                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                tasks_enabled = True,
                trailer_video_url = '0'
            )
        else:
            return OfferingResponse(
        )
        """

    def testOfferingResponse(self):
        """Test OfferingResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
