# coding: utf-8

"""
    iQualify Management API

    The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.submission_mark_response import SubmissionMarkResponse

class TestSubmissionMarkResponse(unittest.TestCase):
    """SubmissionMarkResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubmissionMarkResponse:
        """Test SubmissionMarkResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubmissionMarkResponse`
        """
        model = SubmissionMarkResponse()
        if include_optional:
            return SubmissionMarkResponse(
                assessment_id = '',
                assessment_item_details = '',
                assessment_item_name = '',
                course_name = '',
                files = [
                    openapi_client.models.document.Document(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        filename = '', 
                        id = '', 
                        mimetype = '', 
                        size = 56, 
                        url = '', )
                    ],
                html = '',
                learner_email = '',
                learner_first_name = '',
                learner_last_name = '',
                learner_person_id = '',
                marks = [
                    openapi_client.models.mark.Mark(
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        feedback = '', 
                        id = '', 
                        mark = '', 
                        mark_feedback = [
                            openapi_client.models.mark_feedback.MarkFeedback(
                                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                feedback = '', 
                                feedback_by = '', 
                                id = '', 
                                mark = '', 
                                marker_id = '', )
                            ], 
                        marked_by = '', 
                        marker_id = '', )
                    ],
                status = '',
                submission_date_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SubmissionMarkResponse(
        )
        """

    def testSubmissionMarkResponse(self):
        """Test SubmissionMarkResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
