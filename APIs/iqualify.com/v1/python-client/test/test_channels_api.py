# coding: utf-8

"""
    iQualify Management API

    The iQualify API offers management responses for building learning experiences using your iQualify instance data.  Once youâ€™ve registered with iQualify, you can request an API access token by navigating to the API access section of the \"Account Settings\" area.  Find out how to [Request your API access token](https://www.iqualify.com/help/connecting-iqualify-to-other-systems/api/how-to-access-and-manage-your-api-token) on our Knowledge base.  All endpoints are only accessible via https and are located at api.iqualify.com. For instance: you can find your current offerings by accessing the following URL:      https://api.iqualify.com/v1/offerings/current  

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.channels_api import ChannelsApi


class TestChannelsApi(unittest.TestCase):
    """ChannelsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ChannelsApi()

    def tearDown(self) -> None:
        pass

    def test_offerings_offering_id_analytics_channels_channel_id_comments_get(self) -> None:
        """Test case for offerings_offering_id_analytics_channels_channel_id_comments_get

        Find comments
        """
        pass

    def test_offerings_offering_id_analytics_channels_channel_id_posts_get(self) -> None:
        """Test case for offerings_offering_id_analytics_channels_channel_id_posts_get

        Find posts
        """
        pass

    def test_offerings_offering_id_analytics_channels_channel_id_replies_get(self) -> None:
        """Test case for offerings_offering_id_analytics_channels_channel_id_replies_get

        Find replies
        """
        pass

    def test_offerings_offering_id_channels_channel_id_learners_delete(self) -> None:
        """Test case for offerings_offering_id_channels_channel_id_learners_delete

        Remove learners from a group channel
        """
        pass

    def test_offerings_offering_id_channels_channel_id_learners_get(self) -> None:
        """Test case for offerings_offering_id_channels_channel_id_learners_get

        Find learners in a group channel
        """
        pass

    def test_offerings_offering_id_channels_channel_id_learners_post(self) -> None:
        """Test case for offerings_offering_id_channels_channel_id_learners_post

        Add learners to a group channel
        """
        pass

    def test_offerings_offering_id_channels_channel_id_patch(self) -> None:
        """Test case for offerings_offering_id_channels_channel_id_patch

        Update channel
        """
        pass

    def test_offerings_offering_id_channels_get(self) -> None:
        """Test case for offerings_offering_id_channels_get

        Find channels
        """
        pass

    def test_offerings_offering_id_channels_post(self) -> None:
        """Test case for offerings_offering_id_channels_post

        Add channel
        """
        pass


if __name__ == '__main__':
    unittest.main()
