# coding: utf-8

"""
    SchoolDigger API V1

    Get detailed data on over 120,000 schools and 18,500 districts in the U.S.

    The version of the OpenAPI document: v1
    Contact: api@schooldigger.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictFloat, StrictInt
from typing import Any, ClassVar, Dict, List, Optional, Union
from typing import Optional, Set
from typing_extensions import Self

class APIYearlyDemographics(BaseModel):
    """
    APIYearlyDemographics
    """ # noqa: E501
    number_of_students: Optional[StrictInt] = Field(default=None, description="Count of students attending the school", alias="numberOfStudents")
    numberof_african_american_students: Optional[StrictInt] = Field(default=None, description="NCES definition: A person having origins in any of the black racial groups of Africa.  (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofAfricanAmericanStudents")
    numberof_asian_students: Optional[StrictInt] = Field(default=None, description="NCES definition: A person having origins in any of the original peoples of the Far East, Southeast Asia, or the Indian subcontinent, including, for example, Cambodia, China, India, Japan, Korea, Malaysia, Pakistan, the Philippine Islands, Thailand, and Vietnam.  (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofAsianStudents")
    numberof_hispanic_students: Optional[StrictInt] = Field(default=None, description="NCES definition: A person of Cuban, Mexican, Puerto Rican, South or Central American, or other Spanish culture or origin, regardless of race. (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofHispanicStudents")
    numberof_indian_students: Optional[StrictInt] = Field(default=None, description="NCES definition: A person having origins in any of the original peoples of the Far East, Southeast Asia, or the Indian subcontinent, including, for example, Cambodia, China, India, Japan, Korea, Malaysia, Pakistan, the Philippine Islands, Thailand, and Vietnam. (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofIndianStudents")
    numberof_pacific_islander_students: Optional[StrictInt] = Field(default=None, description="NCES definition: A person having origins in any of the original peoples of Hawaii, Guam, Samoa, or other Pacific Islands. (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofPacificIslanderStudents")
    numberof_two_or_more_race_students: Optional[StrictInt] = Field(default=None, description="NCES definition: Includes any combination of two or more races and not Hispanic/Latino ethnicity. (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofTwoOrMoreRaceStudents")
    numberof_unspecified_race_students: Optional[StrictInt] = Field(default=None, alias="numberofUnspecifiedRaceStudents")
    numberof_white_students: Optional[StrictInt] = Field(default=None, description="NCES definition: A person having origins in any of the original peoples of Europe, the Middle East, or North Africa. (https://nces.ed.gov/statprog/2002/std1_5.asp)", alias="numberofWhiteStudents")
    percent_free_disc_lunch: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Percent of students receiving a free or discounted lunch in the National School Lunch Program", alias="percentFreeDiscLunch")
    percentof_african_american_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofAfricanAmericanStudents")
    percentof_asian_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofAsianStudents")
    percentof_hispanic_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofHispanicStudents")
    percentof_indian_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofIndianStudents")
    percentof_pacific_islander_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofPacificIslanderStudents")
    percentof_two_or_more_race_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofTwoOrMoreRaceStudents")
    percentof_unspecified_race_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofUnspecifiedRaceStudents")
    percentof_white_students: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, alias="percentofWhiteStudents")
    pupil_teacher_ratio: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Number of students / number of full-time equivalent teachers", alias="pupilTeacherRatio")
    teachers_fulltime: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="Number of full-time equivalent teachers employed at the school", alias="teachersFulltime")
    year: Optional[StrictInt] = Field(default=None, description="School year (2018 = 2017-18)")
    __properties: ClassVar[List[str]] = ["numberOfStudents", "numberofAfricanAmericanStudents", "numberofAsianStudents", "numberofHispanicStudents", "numberofIndianStudents", "numberofPacificIslanderStudents", "numberofTwoOrMoreRaceStudents", "numberofUnspecifiedRaceStudents", "numberofWhiteStudents", "percentFreeDiscLunch", "percentofAfricanAmericanStudents", "percentofAsianStudents", "percentofHispanicStudents", "percentofIndianStudents", "percentofPacificIslanderStudents", "percentofTwoOrMoreRaceStudents", "percentofUnspecifiedRaceStudents", "percentofWhiteStudents", "pupilTeacherRatio", "teachersFulltime", "year"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of APIYearlyDemographics from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of APIYearlyDemographics from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "numberOfStudents": obj.get("numberOfStudents"),
            "numberofAfricanAmericanStudents": obj.get("numberofAfricanAmericanStudents"),
            "numberofAsianStudents": obj.get("numberofAsianStudents"),
            "numberofHispanicStudents": obj.get("numberofHispanicStudents"),
            "numberofIndianStudents": obj.get("numberofIndianStudents"),
            "numberofPacificIslanderStudents": obj.get("numberofPacificIslanderStudents"),
            "numberofTwoOrMoreRaceStudents": obj.get("numberofTwoOrMoreRaceStudents"),
            "numberofUnspecifiedRaceStudents": obj.get("numberofUnspecifiedRaceStudents"),
            "numberofWhiteStudents": obj.get("numberofWhiteStudents"),
            "percentFreeDiscLunch": obj.get("percentFreeDiscLunch"),
            "percentofAfricanAmericanStudents": obj.get("percentofAfricanAmericanStudents"),
            "percentofAsianStudents": obj.get("percentofAsianStudents"),
            "percentofHispanicStudents": obj.get("percentofHispanicStudents"),
            "percentofIndianStudents": obj.get("percentofIndianStudents"),
            "percentofPacificIslanderStudents": obj.get("percentofPacificIslanderStudents"),
            "percentofTwoOrMoreRaceStudents": obj.get("percentofTwoOrMoreRaceStudents"),
            "percentofUnspecifiedRaceStudents": obj.get("percentofUnspecifiedRaceStudents"),
            "percentofWhiteStudents": obj.get("percentofWhiteStudents"),
            "pupilTeacherRatio": obj.get("pupilTeacherRatio"),
            "teachersFulltime": obj.get("teachersFulltime"),
            "year": obj.get("year")
        })
        return _obj


