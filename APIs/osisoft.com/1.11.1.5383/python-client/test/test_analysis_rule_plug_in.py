# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_rule_plug_in import AnalysisRulePlugIn

class TestAnalysisRulePlugIn(unittest.TestCase):
    """AnalysisRulePlugIn unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisRulePlugIn:
        """Test AnalysisRulePlugIn
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisRulePlugIn`
        """
        model = AnalysisRulePlugIn()
        if include_optional:
            return AnalysisRulePlugIn(
                assembly_file_name = 'OSIsoft.AF.Analysis.AnalysisRule.Imbalance.dll',
                assembly_id = '1acd00c2-79d0-4818-a03c-0616c4513750',
                assembly_load_properties = [None],
                assembly_time = '2016-05-25T14:01:07Z',
                compatibility_version = 2,
                description = 'Calculates simple material imbalances on nodes of a model.',
                id = '9a2a6c05-6f61-467a-854a-16dbfb9d8c03',
                is_browsable = True,
                is_non_editable_config = False,
                links = openapi_client.models.analysis_rule_plug_in_links.AnalysisRulePlugInLinks(
                    asset_server = '', 
                    self = '', ),
                loaded_assembly_time = '1970-01-01T00:00Z',
                loaded_version = '',
                name = 'Imbalance',
                path = '\\MyAssetServer\PlugInsAnalysisRule[Imbalance]',
                version = '2.8.5.7552',
                web_exception = openapi_client.models.web_exception.WebException(
                    errors = [An error has occurred.], 
                    status_code = 500, ),
                web_id = 'I1XPDqD5loBNH0erqeqJodtALABWwqmmFvekaFShbb-52MAw'
            )
        else:
            return AnalysisRulePlugIn(
        )
        """

    def testAnalysisRulePlugIn(self):
        """Test AnalysisRulePlugIn"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
