# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.items_attribute_trait import ItemsAttributeTrait

class TestItemsAttributeTrait(unittest.TestCase):
    """ItemsAttributeTrait unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemsAttributeTrait:
        """Test ItemsAttributeTrait
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemsAttributeTrait`
        """
        model = ItemsAttributeTrait()
        if include_optional:
            return ItemsAttributeTrait(
                items = [
                    openapi_client.models.attribute_trait.AttributeTrait(
                        abbreviation = 'LoLo', 
                        allow_child_attributes = False, 
                        allow_duplicates = False, 
                        is_allowed_on_root_attribute = False, 
                        is_type_inherited = True, 
                        is_uom_inherited = True, 
                        links = openapi_client.models.attribute_trait_links.AttributeTraitLinks(
                            self = '', ), 
                        name = 'LimitLoLo', 
                        require_numeric = True, 
                        require_string = False, 
                        web_exception = openapi_client.models.web_exception.WebException(
                            errors = [An error has occurred.], 
                            status_code = 500, ), )
                    ],
                links = openapi_client.models.pagination_links.PaginationLinks(
                    first = '', 
                    last = '', 
                    next = '', 
                    previous = '', )
            )
        else:
            return ItemsAttributeTrait(
        )
        """

    def testItemsAttributeTrait(self):
        """Test ItemsAttributeTrait"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
