# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.event_frame_api import EventFrameApi


class TestEventFrameApi(unittest.TestCase):
    """EventFrameApi unit test stubs"""

    def setUp(self) -> None:
        self.api = EventFrameApi()

    def tearDown(self) -> None:
        pass

    def test_event_frame_acknowledge(self) -> None:
        """Test case for event_frame_acknowledge

        Calls the EventFrame's Acknowledge method.
        """
        pass

    def test_event_frame_capture_values(self) -> None:
        """Test case for event_frame_capture_values

        Calls the EventFrame's CaptureValues method.
        """
        pass

    def test_event_frame_create_annotation(self) -> None:
        """Test case for event_frame_create_annotation

        Create an annotation on an event frame.
        """
        pass

    def test_event_frame_create_attribute(self) -> None:
        """Test case for event_frame_create_attribute

        Create a new attribute of the specified event frame.
        """
        pass

    def test_event_frame_create_config(self) -> None:
        """Test case for event_frame_create_config

        Executes the create configuration function of the data references found within the attributes of the event frame, and optionally, its children.
        """
        pass

    def test_event_frame_create_event_frame(self) -> None:
        """Test case for event_frame_create_event_frame

        Create an event frame as a child of the specified event frame.
        """
        pass

    def test_event_frame_create_search_by_attribute(self) -> None:
        """Test case for event_frame_create_search_by_attribute

        Create a link for a \"Search EventFrames By Attribute Value\" operation, whose queries are specified in the request content. The SearchRoot is specified by the Web Id of the root EventFrame. If the SearchRoot is not specified, then the search starts at the Asset Database. ElementTemplate must be provided as the Web ID of the ElementTemplate, which are used to create the EventFrames. All the attributes in the queries must be defined as AttributeTemplates on the ElementTemplate. An array of attribute value queries are ANDed together to find the desired Element objects. At least one value query must be specified. There are limitations on SearchOperators.
        """
        pass

    def test_event_frame_create_security_entry(self) -> None:
        """Test case for event_frame_create_security_entry

        Create a security entry owned by the event frame.
        """
        pass

    def test_event_frame_delete(self) -> None:
        """Test case for event_frame_delete

        Delete an event frame.
        """
        pass

    def test_event_frame_delete_annotation(self) -> None:
        """Test case for event_frame_delete_annotation

        Delete an annotation on an event frame. If the annotation has attached media, the attached media will also be deleted.
        """
        pass

    def test_event_frame_delete_annotation_attachment_media_by_id(self) -> None:
        """Test case for event_frame_delete_annotation_attachment_media_by_id

        Delete attached media from an annotation on an event frame.
        """
        pass

    def test_event_frame_delete_security_entry(self) -> None:
        """Test case for event_frame_delete_security_entry

        Delete a security entry owned by the event frame.
        """
        pass

    def test_event_frame_execute_search_by_attribute(self) -> None:
        """Test case for event_frame_execute_search_by_attribute

        Execute a \"Search EventFrames By Attribute Value\" operation.
        """
        pass

    def test_event_frame_find_event_frame_attributes(self) -> None:
        """Test case for event_frame_find_event_frame_attributes

        Retrieves a list of event frame attributes matching the specified filters from the specified event frame.
        """
        pass

    def test_event_frame_get(self) -> None:
        """Test case for event_frame_get

        Retrieve an event frame.
        """
        pass

    def test_event_frame_get_annotation_attachment_media_metadata_by_id(self) -> None:
        """Test case for event_frame_get_annotation_attachment_media_metadata_by_id

        Gets the metadata of the media attached to the specified annotation.
        """
        pass

    def test_event_frame_get_annotation_by_id(self) -> None:
        """Test case for event_frame_get_annotation_by_id

        Get a specific annotation on an event frame.
        """
        pass

    def test_event_frame_get_annotations(self) -> None:
        """Test case for event_frame_get_annotations

        Get an event frame's annotations.
        """
        pass

    def test_event_frame_get_attributes(self) -> None:
        """Test case for event_frame_get_attributes

        Get the attributes of the specified event frame.
        """
        pass

    def test_event_frame_get_by_path(self) -> None:
        """Test case for event_frame_get_by_path

        Retrieve an event frame by path.
        """
        pass

    def test_event_frame_get_categories(self) -> None:
        """Test case for event_frame_get_categories

        Get an event frame's categories.
        """
        pass

    def test_event_frame_get_event_frames(self) -> None:
        """Test case for event_frame_get_event_frames

        Retrieve event frames based on the specified conditions. By default, returns all children of the specified root event frame that have been active in the past 8 hours.
        """
        pass

    def test_event_frame_get_event_frames_query(self) -> None:
        """Test case for event_frame_get_event_frames_query

        Retrieve event frames based on the specified conditions. Returns event frames using the specified search query string.
        """
        pass

    def test_event_frame_get_multiple(self) -> None:
        """Test case for event_frame_get_multiple

        Retrieve multiple event frames by web ids or paths.
        """
        pass

    def test_event_frame_get_referenced_elements(self) -> None:
        """Test case for event_frame_get_referenced_elements

        Retrieve the event frame's referenced elements.
        """
        pass

    def test_event_frame_get_security(self) -> None:
        """Test case for event_frame_get_security

        Get the security information of the specified security item associated with the event frame for a specified user.
        """
        pass

    def test_event_frame_get_security_entries(self) -> None:
        """Test case for event_frame_get_security_entries

        Retrieve the security entries associated with the event frame based on the specified criteria. By default, all security entries for this event frame are returned.
        """
        pass

    def test_event_frame_get_security_entry_by_name(self) -> None:
        """Test case for event_frame_get_security_entry_by_name

        Retrieve the security entry associated with the event frame with the specified name.
        """
        pass

    def test_event_frame_update(self) -> None:
        """Test case for event_frame_update

        Update an event frame by replacing items in its definition.
        """
        pass

    def test_event_frame_update_annotation(self) -> None:
        """Test case for event_frame_update_annotation

        Update an annotation on an event frame by replacing items in its definition.
        """
        pass

    def test_event_frame_update_security_entry(self) -> None:
        """Test case for event_frame_update_security_entry

        Update a security entry owned by the event frame.
        """
        pass


if __name__ == '__main__':
    unittest.main()
