# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.element import Element

class TestElement(unittest.TestCase):
    """Element unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Element:
        """Test Element
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Element`
        """
        model = Element()
        if include_optional:
            return Element(
                category_names = [Equipment Assets],
                description = 'Manufacturing Equipment MachineName',
                errors = [
                    openapi_client.models.property_error.PropertyError(
                        field_name = 'Value', 
                        message = [An error has occurred.], )
                    ],
                extended_properties = {
                    'key' : openapi_client.models.value.Value(
                        exception = openapi_client.models.errors.Errors(
                            errors = [An error has occurred.], ), 
                        value = 12.3, 
                        web_exception = openapi_client.models.web_exception.WebException(
                            status_code = 500, ), )
                    },
                has_children = False,
                id = 'cbb28260-853d-11e4-80c5-00155d844304',
                links = openapi_client.models.element_links.ElementLinks(
                    analyses = '', 
                    attributes = '', 
                    categories = '', 
                    database = '', 
                    default_attribute = '', 
                    elements = '', 
                    end_value = '', 
                    event_frames = '', 
                    interpolated_data = '', 
                    notification_rules = '', 
                    parent = '', 
                    plot_data = '', 
                    recorded_data = '', 
                    security = '', 
                    security_entries = '', 
                    self = '', 
                    summary_data = '', 
                    template = '', 
                    value = '', ),
                name = 'MachineName',
                path = '\\MyAssetServer\MyDatabase\CityName\EngineeringProcess\Equipment\MachineName',
                paths = [
                    ''
                    ],
                template_name = 'MachineName',
                web_exception = openapi_client.models.web_exception.WebException(
                    errors = [An error has occurred.], 
                    status_code = 500, ),
                web_id = 'I1EmDqD5loBNH0erqeqJodtALAYIKyyz2F5BGAxQAVXYRDBA'
            )
        else:
            return Element(
        )
        """

    def testElement(self):
        """Test Element"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
