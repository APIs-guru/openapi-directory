# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.items_annotation import ItemsAnnotation

class TestItemsAnnotation(unittest.TestCase):
    """ItemsAnnotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemsAnnotation:
        """Test ItemsAnnotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemsAnnotation`
        """
        model = ItemsAnnotation()
        if include_optional:
            return ItemsAnnotation(
                items = [
                    openapi_client.models.annotation.Annotation(
                        creation_date = '2016-06-21T14:45:50.298832100Z', 
                        creator = 'MyDomain\UserA', 
                        description = 'Signifies a spike in temperature.', 
                        errors = [
                            openapi_client.models.property_error.PropertyError(
                                field_name = 'Value', 
                                message = [An error has occurred.], )
                            ], 
                        id = '512b6616-ce39-4f70-9048-8c6a025fb592', 
                        links = openapi_client.models.annotation_links.AnnotationLinks(
                            media_data = '', 
                            media_metadata = '', 
                            owner = '', 
                            self = '', ), 
                        modifier = 'MyDomain\UserA', 
                        modify_date = '2016-06-21T14:45:50.298832100Z', 
                        name = 'Temperature Annotation', 
                        value = "The temperature spiked because of a malfunction with a unit in our west plant.", 
                        web_exception = openapi_client.models.web_exception.WebException(
                            status_code = 500, ), )
                    ],
                links = openapi_client.models.pagination_links.PaginationLinks(
                    first = '', 
                    last = '', 
                    next = '', 
                    previous = '', )
            )
        else:
            return ItemsAnnotation(
        )
        """

    def testItemsAnnotation(self):
        """Test ItemsAnnotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
