# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analysis_rule import AnalysisRule

class TestAnalysisRule(unittest.TestCase):
    """AnalysisRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalysisRule:
        """Test AnalysisRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalysisRule`
        """
        model = AnalysisRule()
        if include_optional:
            return AnalysisRule(
                config_string = 'a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;',
                description = 'Runs a performance equation.',
                display_string = 'a := TagVal('sinusoid'); b := Pow(a, 2); c := a + b;',
                editor_type = 'OSIsoft.AF.Analysis.AnalysisRule.PEAnalysisRuleEditor',
                has_children = False,
                id = 'ca9d257f-94c2-11e7-8443-00155d84c200',
                is_configured = False,
                is_initializing = False,
                links = openapi_client.models.analysis_rule_links.AnalysisRuleLinks(
                    analysis = '', 
                    analysis_rules = '', 
                    analysis_template = '', 
                    parent = '', 
                    plug_in = '', 
                    self = '', ),
                name = 'PerformanceEquation',
                path = '\\MyAssetServer\MyDatabase\MyElement\Analyses[MyAnalysis]\AnalysisRule',
                plug_in_name = 'PerformanceEquation',
                supported_behaviors = [SupportsRunningCase, SupportStatePassing, OutputCorrectAfterSkipping],
                variable_mapping = 'b||Attribute1;c||Attribute2',
                web_exception = openapi_client.models.web_exception.WebException(
                    errors = [An error has occurred.], 
                    status_code = 500, ),
                web_id = 'I1XRXDqD5loBNH0erqeqJodtALAfyWdysKU5xGEQwAVXYTCAAfyWdysKU5xGEQwAVXYTCAA'
            )
        else:
            return AnalysisRule(
        )
        """

    def testAnalysisRule(self):
        """Test AnalysisRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
