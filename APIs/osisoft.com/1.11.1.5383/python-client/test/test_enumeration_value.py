# coding: utf-8

"""
    PI Web API 2018 SP1 Swagger Spec

    Swagger Spec file that describes PI Web API

    The version of the OpenAPI document: 1.11.1.5383
    Contact: techsupport@osisoft.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enumeration_value import EnumerationValue

class TestEnumerationValue(unittest.TestCase):
    """EnumerationValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnumerationValue:
        """Test EnumerationValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnumerationValue`
        """
        model = EnumerationValue()
        if include_optional:
            return EnumerationValue(
                description = 'Model Number of CarBrand',
                id = '982a8694-6fe9-4cb3-a011-09d278649eef',
                links = openapi_client.models.enumeration_value_links.EnumerationValueLinks(
                    enumeration_set = '', 
                    parent = '', 
                    self = '', ),
                name = 'CarBrand|Model3',
                parent = 'CarBrand',
                path = '\\MyAssetServer\MyDatabase\EnumerationSets[Model Number]\CarBrand|Model3',
                serialize_description = True,
                serialize_id = True,
                serialize_links = True,
                serialize_path = True,
                serialize_web_id = True,
                value = 2005,
                web_exception = openapi_client.models.web_exception.WebException(
                    errors = [An error has occurred.], 
                    status_code = 500, ),
                web_id = 'I1MVRDqD5loBNH0erqeqJodtALAT_x3jpGsKUCB1vtmvQHUMQlIYqmOlvs0ygEQnSeGSe7w'
            )
        else:
            return EnumerationValue(
        )
        """

    def testEnumerationValue(self):
        """Test EnumerationValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
