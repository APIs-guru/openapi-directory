# coding: utf-8

"""
    Airbyte Configuration API

    Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 

    The version of the OpenAPI document: 1.0.0
    Contact: contact@airbyte.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.source_definition_api import SourceDefinitionApi


class TestSourceDefinitionApi(unittest.TestCase):
    """SourceDefinitionApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SourceDefinitionApi()

    def tearDown(self) -> None:
        pass

    def test_create_custom_source_definition(self) -> None:
        """Test case for create_custom_source_definition

        Creates a custom sourceDefinition for the given workspace
        """
        pass

    def test_delete_source_definition(self) -> None:
        """Test case for delete_source_definition

        Delete a source definition
        """
        pass

    def test_get_source_definition(self) -> None:
        """Test case for get_source_definition

        Get source
        """
        pass

    def test_get_source_definition_for_workspace(self) -> None:
        """Test case for get_source_definition_for_workspace

        Get a sourceDefinition that is configured for the given workspace
        """
        pass

    def test_grant_source_definition_to_workspace(self) -> None:
        """Test case for grant_source_definition_to_workspace

        grant a private, non-custom sourceDefinition to a given workspace
        """
        pass

    def test_list_latest_source_definitions(self) -> None:
        """Test case for list_latest_source_definitions

        List the latest sourceDefinitions Airbyte supports
        """
        pass

    def test_list_private_source_definitions(self) -> None:
        """Test case for list_private_source_definitions

        List all private, non-custom sourceDefinitions, and for each indicate whether the given workspace has a grant for using the definition. Used by admins to view and modify a given workspace's grants.
        """
        pass

    def test_list_source_definitions(self) -> None:
        """Test case for list_source_definitions

        List all the sourceDefinitions the current Airbyte deployment is configured to use
        """
        pass

    def test_list_source_definitions_for_workspace(self) -> None:
        """Test case for list_source_definitions_for_workspace

        List all the sourceDefinitions the given workspace is configured to use
        """
        pass

    def test_revoke_source_definition_from_workspace(self) -> None:
        """Test case for revoke_source_definition_from_workspace

        revoke a grant to a private, non-custom sourceDefinition from a given workspace
        """
        pass

    def test_update_source_definition(self) -> None:
        """Test case for update_source_definition

        Update a sourceDefinition
        """
        pass


if __name__ == '__main__':
    unittest.main()
