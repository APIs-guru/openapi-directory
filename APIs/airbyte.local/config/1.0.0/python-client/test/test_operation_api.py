# coding: utf-8

"""
    Airbyte Configuration API

    Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 

    The version of the OpenAPI document: 1.0.0
    Contact: contact@airbyte.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.operation_api import OperationApi


class TestOperationApi(unittest.TestCase):
    """OperationApi unit test stubs"""

    def setUp(self) -> None:
        self.api = OperationApi()

    def tearDown(self) -> None:
        pass

    def test_check_operation(self) -> None:
        """Test case for check_operation

        Check if an operation to be created is valid
        """
        pass

    def test_create_operation(self) -> None:
        """Test case for create_operation

        Create an operation to be applied as part of a connection pipeline
        """
        pass

    def test_delete_operation(self) -> None:
        """Test case for delete_operation

        Delete an operation
        """
        pass

    def test_get_operation(self) -> None:
        """Test case for get_operation

        Returns an operation
        """
        pass

    def test_list_operations_for_connection(self) -> None:
        """Test case for list_operations_for_connection

        Returns all operations for a connection.
        """
        pass

    def test_update_operation(self) -> None:
        """Test case for update_operation

        Update an operation
        """
        pass


if __name__ == '__main__':
    unittest.main()
