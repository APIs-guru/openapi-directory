# coding: utf-8

"""
    Airbyte Configuration API

    Airbyte Configuration API [https://airbyte.io](https://airbyte.io).  This API is a collection of HTTP RPC-style methods. While it is not a REST API, those familiar with REST should find the conventions of this API recognizable.  Here are some conventions that this API follows: * All endpoints are http POST methods. * All endpoints accept data via `application/json` request bodies. The API does not accept any data via query params. * The naming convention for endpoints is: localhost:8000/{VERSION}/{METHOD_FAMILY}/{METHOD_NAME} e.g. `localhost:8000/v1/connections/create`. * For all `update` methods, the whole object must be passed in, even the fields that did not change.  Authentication (OSS): * When authenticating to the Configuration API, you must use Basic Authentication by setting the Authentication Header to Basic and base64 encoding the username and password (which are `airbyte` and `password` by default - so base64 encoding `airbyte:password` results in `YWlyYnl0ZTpwYXNzd29yZA==`). So the full header reads `'Authorization': \"Basic YWlyYnl0ZTpwYXNzd29yZA==\"` 

    The version of the OpenAPI document: 1.0.0
    Contact: contact@airbyte.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.jobs_api import JobsApi


class TestJobsApi(unittest.TestCase):
    """JobsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = JobsApi()

    def tearDown(self) -> None:
        pass

    def test_cancel_job(self) -> None:
        """Test case for cancel_job

        Cancels a job
        """
        pass

    def test_get_attempt_normalization_statuses_for_job(self) -> None:
        """Test case for get_attempt_normalization_statuses_for_job

        Get normalization status to determine if we can bypass normalization phase
        """
        pass

    def test_get_job_debug_info(self) -> None:
        """Test case for get_job_debug_info

        Gets all information needed to debug this job
        """
        pass

    def test_get_job_info(self) -> None:
        """Test case for get_job_info

        Get information about a job
        """
        pass

    def test_get_job_info_light(self) -> None:
        """Test case for get_job_info_light

        Get information about a job excluding attempt info and logs
        """
        pass

    def test_get_last_replication_job(self) -> None:
        """Test case for get_last_replication_job

        """
        pass

    def test_list_jobs_for(self) -> None:
        """Test case for list_jobs_for

        Returns recent jobs for a connection. Jobs are returned in descending order by createdAt.
        """
        pass


if __name__ == '__main__':
    unittest.main()
