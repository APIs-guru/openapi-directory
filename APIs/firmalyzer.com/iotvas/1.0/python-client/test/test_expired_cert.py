# coding: utf-8

"""
    IoTVAS API

    IOTVAS API enables you to discover IoT/Connected devices in the network and provides      detailed real-time risk analysis, including firmware vulnerability analysis without requiring the user to upload the firmware file.     Please visit the [signup page](https://iotvas-api.firmalyzer.com/portal/signup) to create an API key.     IoTVAS API can be easily integrated with vulnerability scanning and network port scanner tools. For example,     we have also released the [IOTVAS NSE script](https://github.com/firmalyzer/iotvas-nmap) that turns the nmap port scanner      to a IoT/connected device discovery and real-time risk assessment tool. For more infromation on IoTVAS and other      solutions please visit [Firmalyzer web site](https://www.firmalyzer.com).

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.expired_cert import ExpiredCert

class TestExpiredCert(unittest.TestCase):
    """ExpiredCert unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExpiredCert:
        """Test ExpiredCert
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExpiredCert`
        """
        model = ExpiredCert()
        if include_optional:
            return ExpiredCert(
                file_hash = '',
                file_name = '',
                public_key = openapi_client.models.public_key.PublicKey(
                    algorithm = '', 
                    bits = 56, ),
                subject_name = '',
                thumb_print = '',
                valid_from = '',
                valid_to = ''
            )
        else:
            return ExpiredCert(
        )
        """

    def testExpiredCert(self):
        """Test ExpiredCert"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
