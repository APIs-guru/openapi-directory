# coding: utf-8

"""
    Frankie Financial API

    ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 

    The version of the OpenAPI document: 1.5.3
    Contact: dev-support@frankiefinancial.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import json
from enum import Enum
from typing_extensions import Self


class EnumIdType(str, Enum):
    """
    Valid ID types   - \"OTHER\": Generic document type. Unspecified.   - \"DRIVERS_LICENCE\": Driver's licence.   - \"PASSPORT\": Passport   - \"VISA\": Visa document (not Visa payment card)   - \"IMMIGRATION\": Immigration card   - \"NATIONAL_ID\": Any national ID card   - \"TAX_ID\": Any national tax identifier   - \"NATIONAL_HEALTH_ID\": Any national health program ID card (e.g. Medicare, NHS)   - \"CONCESSION\": State issued concession card   - \"HEALTH_CONCESSION\": State issued health specific concession card   - \"PENSION\": State issued pension ID   - \"MILITARY_ID\": Military ID   - \"BIRTH_CERT\": Birth certificate   - \"CITIZENSHIP\": Citizenship certificate   - \"MARRIAGE_CERT\": Marriage certificate   - \"DEATH_CERT\": Death certificate   - \"NAME_CHANGE\": Name chage confirmation   - \"UTILITY_BILL\": Regulated utility bill, such as electricity, gas, etc   - \"BANK_STATEMENT\": Bank/card statement   - \"BANK_ACCOUNT\": Bank account   - \"INTENT_PROOF\": A proof of intent. Generally a photo/video, or a scanned letter   - \"ATTESTATION\": A document of attestation (e.g. Statutory Declaration)   - \"SELF_IMAGE\": A \"selfie\" used for comparisions   - \"EMAIL_ADDRESS\": An email address   - \"MSISDN\": A mobile phone number   - \"DEVICE\": A device ID   - \"VEHICLE_REGISTRATION\": Vehicle registration number Business related documentation   - \"EXTERNAL_ADMIN\": Details of appointed administrator.   - \"CHARGES\": Details of any charges that have been laid against a company or director   - \"PRE_ASIC\": Any documents that are Pre-ASIC   - \"ANNUAL_RETURN\": Details of a company's annual return   - \"REPORT\": Frankie generated report. Special document types   - \"CHECK_RESULTS\": A special document type for specifying results of checks completed other than through Frankie. 
    """

    """
    allowed enum values
    """
    OTHER = 'OTHER'
    DRIVERS_LICENCE = 'DRIVERS_LICENCE'
    PASSPORT = 'PASSPORT'
    VISA = 'VISA'
    IMMIGRATION = 'IMMIGRATION'
    NATIONAL_ID = 'NATIONAL_ID'
    TAX_ID = 'TAX_ID'
    NATIONAL_HEALTH_ID = 'NATIONAL_HEALTH_ID'
    CONCESSION = 'CONCESSION'
    HEALTH_CONCESSION = 'HEALTH_CONCESSION'
    PENSION = 'PENSION'
    MILITARY_ID = 'MILITARY_ID'
    BIRTH_CERT = 'BIRTH_CERT'
    CITIZENSHIP = 'CITIZENSHIP'
    MARRIAGE_CERT = 'MARRIAGE_CERT'
    DEATH_CERT = 'DEATH_CERT'
    NAME_CHANGE = 'NAME_CHANGE'
    MOBILE_PHONE = 'MOBILE_PHONE'
    UTILITY_BILL = 'UTILITY_BILL'
    BANK_STATEMENT = 'BANK_STATEMENT'
    BANK_ACCOUNT = 'BANK_ACCOUNT'
    INTENT_PROOF = 'INTENT_PROOF'
    ATTESTATION = 'ATTESTATION'
    SELF_IMAGE = 'SELF_IMAGE'
    EMAIL_ADDRESS = 'EMAIL_ADDRESS'
    MSISDN = 'MSISDN'
    DEVICE = 'DEVICE'
    VEHICLE_REGISTRATION = 'VEHICLE_REGISTRATION'
    EXTERNAL_ADMIN = 'EXTERNAL_ADMIN'
    CHARGES = 'CHARGES'
    PRE_ASIC = 'PRE_ASIC'
    ANNUAL_RETURN = 'ANNUAL_RETURN'
    REPORT = 'REPORT'
    CHECK_RESULTS = 'CHECK_RESULTS'

    @classmethod
    def from_json(cls, json_str: str) -> Self:
        """Create an instance of EnumIdType from a JSON string"""
        return cls(json.loads(json_str))


