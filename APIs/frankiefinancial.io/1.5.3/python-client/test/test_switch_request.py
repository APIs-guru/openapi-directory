# coding: utf-8

"""
    Frankie Financial API

    ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 

    The version of the OpenAPI document: 1.5.3
    Contact: dev-support@frankiefinancial.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.switch_request import SwitchRequest

class TestSwitchRequest(unittest.TestCase):
    """SwitchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SwitchRequest:
        """Test SwitchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SwitchRequest`
        """
        model = SwitchRequest()
        if include_optional:
            return SwitchRequest(
                confirmation = [
                    ''
                    ],
                correlation_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                details = openapi_client.models.switch_details.SwitchDetails(
                    customer_details = openapi_client.models.switch_details_customer_details.SwitchDetails_customerDetails(
                        address = 'Level 3, 9 Help Street, Chatswood, NSW 2067', 
                        date_of_birth = '22/04/1983', 
                        email = 'jane.doe@email.com', 
                        evidence_of_identity = openapi_client.models.switch_details_customer_details_evidence_of_identity.SwitchDetails_customerDetails_evidenceOfIdentity(
                            drivers_licence = openapi_client.models.drivers_licence.DriversLicence(
                                expiry_date = '10/2022', 
                                number = '1234567890', 
                                state = 'NSW', 
                                type = 'driverslicence', ), 
                            medicare_card = openapi_client.models.medicare_card.MedicareCard(
                                card_color = 'green', 
                                expiry_date = '2022-10', 
                                middle_name = '', 
                                number = '1234567890', 
                                reference_number = '1', 
                                type = 'medicare', ), 
                            passport = openapi_client.models.passport.Passport(
                                country = 'Australia', 
                                expiry_date = '10/2022', 
                                number = 'B765435', 
                                type = 'passport', ), ), 
                        mobile = '+555 13384337', 
                        name = openapi_client.models.switch_details_customer_details_name.SwitchDetails_customerDetails_name(
                            first = 'Jane', 
                            last = 'Doe', 
                            middle = 'Joan', 
                            title = 'Miss', ), ), )
            )
        else:
            return SwitchRequest(
                correlation_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851',
                details = openapi_client.models.switch_details.SwitchDetails(
                    customer_details = openapi_client.models.switch_details_customer_details.SwitchDetails_customerDetails(
                        address = 'Level 3, 9 Help Street, Chatswood, NSW 2067', 
                        date_of_birth = '22/04/1983', 
                        email = 'jane.doe@email.com', 
                        evidence_of_identity = openapi_client.models.switch_details_customer_details_evidence_of_identity.SwitchDetails_customerDetails_evidenceOfIdentity(
                            drivers_licence = openapi_client.models.drivers_licence.DriversLicence(
                                expiry_date = '10/2022', 
                                number = '1234567890', 
                                state = 'NSW', 
                                type = 'driverslicence', ), 
                            medicare_card = openapi_client.models.medicare_card.MedicareCard(
                                card_color = 'green', 
                                expiry_date = '2022-10', 
                                middle_name = '', 
                                number = '1234567890', 
                                reference_number = '1', 
                                type = 'medicare', ), 
                            passport = openapi_client.models.passport.Passport(
                                country = 'Australia', 
                                expiry_date = '10/2022', 
                                number = 'B765435', 
                                type = 'passport', ), ), 
                        mobile = '+555 13384337', 
                        name = openapi_client.models.switch_details_customer_details_name.SwitchDetails_customerDetails_name(
                            first = 'Jane', 
                            last = 'Doe', 
                            middle = 'Joan', 
                            title = 'Miss', ), ), ),
        )
        """

    def testSwitchRequest(self):
        """Test SwitchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
