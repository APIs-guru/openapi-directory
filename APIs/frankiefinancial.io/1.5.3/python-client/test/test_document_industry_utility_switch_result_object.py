# coding: utf-8

"""
    Frankie Financial API

    ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 

    The version of the OpenAPI document: 1.5.3
    Contact: dev-support@frankiefinancial.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.document_industry_utility_switch_result_object import DocumentIndustryUtilitySwitchResultObject

class TestDocumentIndustryUtilitySwitchResultObject(unittest.TestCase):
    """DocumentIndustryUtilitySwitchResultObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DocumentIndustryUtilitySwitchResultObject:
        """Test DocumentIndustryUtilitySwitchResultObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DocumentIndustryUtilitySwitchResultObject`
        """
        model = DocumentIndustryUtilitySwitchResultObject()
        if include_optional:
            return DocumentIndustryUtilitySwitchResultObject(
                document_id = '84a9a860-68ae-4d7d-9a53-54a1116d5051',
                industry_process = 'elecSwitchResult',
                request_id = '01BFJA617JMJXEW6G7TDDXNSHX',
                utility_switch_result = openapi_client.models.document_industry_utility_switch_result_object_utility_switch_result.DocumentIndustryUtilitySwitchResultObject_utilitySwitchResult(
                    error = openapi_client.models.switch_error.SwitchError(
                        correlation_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851', 
                        error_code = 400, 
                        message = 'The request was malformed', 
                        version = '200.132bfab', ), 
                    result = openapi_client.models.switch_response.SwitchResponse(
                        correlation_id = 'd290f1ee-6c54-4b01-90e6-d701748f0851', 
                        next_steps = [
                            openapi_client.models.display_mark_up.DisplayMarkUp(
                                attribute = 'bold', 
                                children = [
                                    openapi_client.models.display_mark_up.DisplayMarkUp(
                                        attribute = 'bold', 
                                        confirmation = 'optional', 
                                        key = 'understand_and_agree', 
                                        name = 'Billing Address', 
                                        parameters = {
                                            'key' : openapi_client.models.display_mark_up_parameters_value.DisplayMarkUp_parameters_value(
                                                name = 'Product Details', 
                                                type = 'link', 
                                                value = 'https://www.accurassi.com', )
                                            }, 
                                        type = 'text', 
                                        value = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis auctor erat ligula, faucibus mattis felis vestibulum et', )
                                    ], 
                                confirmation = 'optional', 
                                key = 'understand_and_agree', 
                                name = 'Billing Address', 
                                parameters = {
                                    'key' : openapi_client.models.display_mark_up_parameters_value.DisplayMarkUp_parameters_value(
                                        name = 'Product Details', 
                                        type = 'link', 
                                        value = 'https://www.accurassi.com', )
                                    }, 
                                type = 'text', 
                                value = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis auctor erat ligula, faucibus mattis felis vestibulum et', )
                            ], 
                        plan = openapi_client.models.plan.Plan(
                            benefits = openapi_client.models.benefits.Benefits(
                                discounts = [
                                    openapi_client.models.benefits_discounts_inner.Benefits_discounts_inner(
                                        condition = 'Discount applies to GST exclusive usage and supply charges, and not to fees and other charges such as late payment fees or Greenpower.', 
                                        name = 'Guaranteed discount on total bill(usage and supply)', 
                                        value = '13%', )
                                    ], 
                                incentives = [
                                    openapi_client.models.benefits_incentives_inner.Benefits_incentives_inner(
                                        name = '$50 Welcome credit (GST incl)', 
                                        value = 'We'll provide the welcome credit for each new supply address you sign up via www.accurassi.com, as an offset against the charges on your first electricity bill (excluding a final bill). Terms and conditions apply.', )
                                    ], 
                                name = 'Benefits', ), 
                            conditions = openapi_client.models.conditions.Conditions(
                                name = 'Conditions', 
                                value = [
                                    openapi_client.models.name_value.NameValue(
                                        name = '', 
                                        value = [
                                            ''
                                            ], )
                                    ], ), 
                            contract = openapi_client.models.contract.Contract(
                                name = 'Contract Details', 
                                value = [
                                    openapi_client.models.name_value.NameValue(
                                        name = '', 
                                        value = [
                                            ''
                                            ], )
                                    ], ), 
                            default_offer_message = 'The annualised price of this plan is $1,764 and is 14% less than the Reference Price.', 
                            direct_debit_required = False, 
                            discounts = openapi_client.models.plan_discounts.Plan_discounts(
                                direct_debit = 43.84, 
                                pay_on_time = 60.23, ), 
                            estimated_base_cost = 704.8, 
                            estimated_saving = 179.8, 
                            estimated_total_cost = 704.8, 
                            fees_and_charges = openapi_client.models.fees.Fees(
                                additional_fee_info = '', 
                                name = '', 
                                value = [
                                    openapi_client.models.name_value_description.NameValueDescription(
                                        description = '', 
                                        name = '', 
                                        value = '', )
                                    ], ), 
                            green_options = , 
                            id = 100456, 
                            name = 'Accurassi Energy All Time Saver', 
                            pay_on_time_required = False, 
                            payment_options = , 
                            rates = openapi_client.models.rates.Rates(
                                name = 'Rates', ), 
                            retailer = openapi_client.models.retailer.Retailer(
                                email = 'energy@accurassi.com', 
                                id = 123456, 
                                name = 'Accurassi Energy Retailer', 
                                phone = '+555 13384337', ), 
                            type = 'SR', 
                            url = 'https://www.energymadeeasy.gov.au/offer/1008406?postcode=2067', ), 
                        reference = 'bdacdabc-e3f7-4f6d-93d3-ffa83e419762', 
                        switch_date = '2018-11-03T00:00:00.000+11:00', 
                        version = '200.132bfab', ), )
            )
        else:
            return DocumentIndustryUtilitySwitchResultObject(
        )
        """

    def testDocumentIndustryUtilitySwitchResultObject(self):
        """Test DocumentIndustryUtilitySwitchResultObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
