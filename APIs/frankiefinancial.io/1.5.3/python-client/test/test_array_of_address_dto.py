# coding: utf-8

"""
    Frankie Financial API

    ------   This API allows developers to integrate the Frankie Financial Compliance Utility into their applications. The API allows:   - Checking name, address, date of birth against national databases   - Validating Australian driver's licences, passports, medicare, visas and other Australian national ID documents   - Validating Australian electricity bills   - Validating NZ driver's licences   - Validating Chinese bank cards and national ID card   - Validating International passports and national ID documents   - PEP, Sanctions, Watchlist and adverse media checking   - Australian visa checks    - Fraud list and fraud background checks   - ID validation and selfie check comparisons.    ------     Industry specific services    - Comparing Australian electricity retailers for a better deal.  ------     KYB specific services    - Query organisation ownership   - Perform KYC & AML checks on shareholders, beneficial owners and office bearers.   - Query credit score and credit reports   - International company searches   - International company profiles    ------   The full version of this documentation along with supplemental articles can be found here:   - https://apidocs.frankiefinancial.com/  The traditional Swagger view of this documentation can be found here:   - https://app.swaggerhub.com/apis-docs/FrankieFinancial/kycutility  ------   Sandbox base URL is:   - https://api.demo.frankiefinancial.io/compliance/v1.2      - We do have an old sandbox at https://sandbox.frankiefinancial.com/compliance/v1.2 but this has been retired.    - All calls are the same as production, only with canned data.     - Full Swagger definition, along with test data for playing in the sandbox can be obtained once initial commercial discussions have commenced.    - Production and optional UAT access will be opened up only to those with a signed commercial contract.    ------   Contact us at hello@frankiefinancial.com to speak with a sales rep about issuing a Customer ID and Sandbox api key. 

    The version of the OpenAPI document: 1.5.3
    Contact: dev-support@frankiefinancial.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.array_of_address_dto import ArrayOfAddressDTO

class TestArrayOfAddressDTO(unittest.TestCase):
    """ArrayOfAddressDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayOfAddressDTO:
        """Test ArrayOfAddressDTO
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayOfAddressDTO`
        """
        model = ArrayOfAddressDTO()
        if include_optional:
            return ArrayOfAddressDTO(
                addresses = [
                    openapi_client.models.address_dto.AddressDTO(
                        address_in_one_line = '', 
                        address_line1 = '', 
                        address_line2 = '', 
                        address_line3 = '', 
                        address_line4 = '', 
                        address_line5 = '', 
                        city_town = '', 
                        country = '', 
                        email = '', 
                        fax_number = '', 
                        line = openapi_client.models.array_of_address_line_dto.ArrayOfAddressLineDTO(
                            address_line_dto = [
                                openapi_client.models.address_line_dto.AddressLineDTO(
                                    type = '', 
                                    type_code = '', )
                                ], ), 
                        postcode = '', 
                        region_state = '', 
                        telephone_number = '', 
                        type = '', 
                        type_code = '', 
                        website_url = '', )
                    ]
            )
        else:
            return ArrayOfAddressDTO(
        )
        """

    def testArrayOfAddressDTO(self):
        """Test ArrayOfAddressDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
