# coding: utf-8

"""
    Ntropy Transaction API v1

    Ntropy Transaction API for transaction classification & management  Contact Support:  Name: API Support  Email: api@ntropy.network

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_a_batch_of_consumer_transaction_classification_results200_response_results_inner import GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner

class TestGetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner(unittest.TestCase):
    """GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner:
        """Test GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner`
        """
        model = GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner()
        if include_optional:
            return GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner(
                contact = openapi_client.models.get_a_batch_of_consumer_transaction_classification_results_200_response_results_inner_contact.getABatchOfConsumerTransactionClassificationResults_200_response_results_inner_contact(
                    email = 'hUkvsYKUamGpI@rWdfbzlEMyCxWD.ep', 
                    phone = 'exercitation esse sed nisi', ),
                labels = ["eu quis pr","eu"],
                location = openapi_client.models.get_a_batch_of_consumer_transaction_classification_results_200_response_results_inner_location.getABatchOfConsumerTransactionClassificationResults_200_response_results_inner_location(
                    address = 'pariatur esse officia cupidatat', 
                    city = 'fugiat tempor reprehenderit', 
                    country = 'ad ea ut id', 
                    lat = -68164400.35857312, 
                    lon = 85118979.13578662, 
                    postal_code = 'minim est', ),
                logo = 'laborum fugiat',
                merchant = 'do enim ullamco irure',
                person = 'non',
                rating = openapi_client.models.get_a_batch_of_consumer_transaction_classification_results_200_response_results_inner_rating.getABatchOfConsumerTransactionClassificationResults_200_response_results_inner_rating(
                    reviews = 49181631, 
                    value = -18636660.679956168, ),
                transaction_id = 'proident occaecat',
                website = ''
            )
        else:
            return GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner(
        )
        """

    def testGetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner(self):
        """Test GetABatchOfConsumerTransactionClassificationResults200ResponseResultsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
