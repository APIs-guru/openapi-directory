# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account_cart_add import AccountCartAdd

class TestAccountCartAdd(unittest.TestCase):
    """AccountCartAdd unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountCartAdd:
        """Test AccountCartAdd
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountCartAdd`
        """
        model = AccountCartAdd()
        if include_optional:
            return AccountCartAdd(
                var_3dcart_access_token = '',
                var_3dcart_private_key = '',
                var_3dcartapi_api_key = '',
                amazon_access_key_id = '',
                amazon_access_token = '',
                amazon_marketplaces_ids = '',
                amazon_secret_key = '',
                amazon_seller_id = '',
                amazon_sp_api_environment = 'production',
                amazon_sp_aws_region = 'eu-west-1',
                amazon_sp_aws_role_arn = '',
                amazon_sp_aws_user_key_id = '',
                amazon_sp_aws_user_secret = '',
                amazon_sp_client_id = '',
                amazon_sp_client_secret = '',
                amazon_sp_refresh_token = '',
                aspdotnetstorefront_api_pass = '',
                aspdotnetstorefront_api_user = '',
                bigcommerceapi_access_token = '',
                bigcommerceapi_admin_account = '',
                bigcommerceapi_api_key = '',
                bigcommerceapi_api_path = '',
                bigcommerceapi_client_id = '',
                bigcommerceapi_context = '',
                bridge_url = '',
                cart_id = '3DCart',
                commercehq_api_key = '',
                commercehq_api_password = '',
                db_tables_prefix = '',
                demandware_api_password = '',
                demandware_client_id = '',
                demandware_user_name = '',
                demandware_user_password = '',
                ebay_access_token = '',
                ebay_client_id = '',
                ebay_client_secret = '',
                ebay_environment = 'production',
                ebay_refresh_token = '',
                ebay_runame = '',
                ebay_site_id = 56,
                ecwid_acess_token = '',
                ecwid_store_id = '',
                etsy_access_token = '',
                etsy_client_id = '',
                etsy_keystring = '',
                etsy_refresh_token = '',
                etsy_shared_secret = '',
                etsy_token_secret = '',
                ftp_host = '',
                ftp_password = '',
                ftp_port = 56,
                ftp_store_dir = '',
                ftp_user = '',
                hybris_client_id = '',
                hybris_client_secret = '',
                hybris_password = '',
                hybris_username = '',
                hybris_websites = [
                    openapi_client.models.account_cart_add_hybris_websites_inner.AccountCartAdd_hybris_websites_inner(
                        store_ids = [
                            ''
                            ], 
                        uid = '', 
                        url = '', )
                    ],
                lightspeed_api_key = '',
                lightspeed_api_secret = '',
                magento_access_token = '',
                magento_consumer_key = '',
                magento_consumer_secret = '',
                magento_token_secret = '',
                mercado_libre_app_id = '',
                mercado_libre_app_secret_key = '',
                mercado_libre_refresh_token = '',
                neto_api_key = '',
                neto_api_username = '',
                prestashop_webservice_key = '',
                shopify_access_token = '',
                shopify_api_key = '',
                shopify_api_password = '',
                shopify_shared_secret = '',
                shopware_access_key = '',
                shopware_api_key = '',
                shopware_api_secret = '',
                squarespace_api_key = '',
                store_key = '',
                store_root = '',
                store_url = '',
                validate_version = True,
                verify = True,
                volusion_login = '',
                volusion_password = '',
                walmart_channel_type = '',
                walmart_client_id = '',
                walmart_client_secret = '',
                walmart_environment = 'production',
                wc_consumer_key = '',
                wc_consumer_secret = '',
                wix_app_id = '',
                wix_app_secret_key = '',
                wix_refresh_token = '',
                zid_access_token = '',
                zid_authorization = '',
                zid_client_id = 56,
                zid_client_secret = '',
                zid_refresh_token = ''
            )
        else:
            return AccountCartAdd(
                amazon_sp_aws_region = 'eu-west-1',
                amazon_sp_aws_role_arn = '',
                amazon_sp_aws_user_key_id = '',
                amazon_sp_aws_user_secret = '',
                amazon_sp_client_id = '',
                amazon_sp_client_secret = '',
                amazon_sp_refresh_token = '',
                cart_id = '3DCart',
                etsy_client_id = '',
                etsy_refresh_token = '',
                store_url = '',
        )
        """

    def testAccountCartAdd(self):
        """Test AccountCartAdd"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
