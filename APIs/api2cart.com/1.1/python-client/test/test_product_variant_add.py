# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.product_variant_add import ProductVariantAdd

class TestProductVariantAdd(unittest.TestCase):
    """ProductVariantAdd unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductVariantAdd:
        """Test ProductVariantAdd
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductVariantAdd`
        """
        model = ProductVariantAdd()
        if include_optional:
            return ProductVariantAdd(
                attributes = [
                    openapi_client.models.product_variant_add_attributes_inner.ProductVariantAdd_attributes_inner(
                        attribute_name = '', 
                        attribute_price = 1.337, 
                        attribute_value = '', )
                    ],
                available_for_sale = True,
                available_for_view = True,
                barcode = '',
                clear_cache = True,
                cost_price = 1.337,
                country_of_origin = '',
                created_at = '',
                description = '',
                harmonized_system_code = '',
                height = 1.337,
                lang_id = '',
                length = 1.337,
                manage_stock = True,
                manufacturer = '',
                meta_description = '',
                meta_keywords = '',
                meta_title = '',
                model = '',
                name = '',
                price = 1.337,
                product_id = '',
                quantity = 1.337,
                short_description = '',
                sku = '',
                special_price = 1.337,
                sprice_create = '',
                sprice_expire = '',
                sprice_modified = '',
                store_id = '',
                tax_class_id = '',
                taxable = True,
                url = '',
                warehouse_id = '',
                weight = 1.337,
                weight_unit = '',
                width = 1.337
            )
        else:
            return ProductVariantAdd(
                model = '',
        )
        """

    def testProductVariantAdd(self):
        """Test ProductVariantAdd"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
