# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.product_add import ProductAdd

class TestProductAdd(unittest.TestCase):
    """ProductAdd unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductAdd:
        """Test ProductAdd
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductAdd`
        """
        model = ProductAdd()
        if include_optional:
            return ProductAdd(
                attribute_name = '',
                attribute_set_name = 'Default',
                avail_from = '',
                available_for_sale = True,
                available_for_view = True,
                backorder_status = '',
                barcode = '',
                best_offer = [
                    ''
                    ],
                brand_name = '',
                categories_ids = '',
                category_id = '',
                clear_cache = True,
                condition = '',
                cost_price = 1.337,
                country_of_origin = '',
                created_at = '',
                description = '',
                downloadable = True,
                ean = '',
                files = [
                    openapi_client.models.product_add_files_inner.ProductAdd_files_inner(
                        name = '', 
                        url = '', )
                    ],
                group_prices = [
                    openapi_client.models.product_add_group_prices_inner.ProductAdd_group_prices_inner(
                        group_id = '', 
                        price = 1.337, )
                    ],
                gtin = '',
                harmonized_system_code = '',
                height = 1.337,
                image_name = '',
                image_url = '',
                isbn = '',
                lang_id = '',
                length = 1.337,
                listing_duration = '',
                listing_type = 'FixedPrice',
                manage_stock = True,
                manufacturer = '',
                marketplace_item_properties = 'false',
                meta_description = '',
                meta_keywords = '',
                meta_title = '',
                model = '',
                mpn = '',
                name = '',
                old_price = 1.337,
                ordered_count = 56,
                package_details = [
                    ''
                    ],
                payment_methods = [
                    ''
                    ],
                paypal_email = '',
                price = 1.337,
                product_class = '',
                quantity = 1.337,
                return_accepted = True,
                sales_tax = [
                    ''
                    ],
                search_keywords = '',
                seller_profiles = openapi_client.models.product_add_seller_profiles.ProductAdd_seller_profiles(
                    payment_profile_id = '', 
                    return_profile_id = '', 
                    shipping_profile_id = '', ),
                seo_url = '',
                shipping_details = [
                    openapi_client.models.product_add_shipping_details_inner.ProductAdd_shipping_details_inner(
                        shipping_cost = 1.337, 
                        shipping_service = '', 
                        shipping_type = '', )
                    ],
                shipping_template_id = 56,
                short_description = '',
                sku = '',
                special_price = 1.337,
                specifics = [
                    ''
                    ],
                sprice_create = '',
                sprice_expire = '',
                sprice_modified = '',
                status = '',
                store_id = '',
                stores_ids = '0',
                tags = '',
                tax_class_id = '',
                taxable = True,
                tier_prices = [
                    openapi_client.models.product_add_tier_prices_inner.ProductAdd_tier_prices_inner(
                        price = 1.337, 
                        quantity = 1.337, )
                    ],
                type = 'simple',
                upc = '',
                url = '',
                viewed_count = 56,
                visible = '',
                warehouse_id = '',
                weight = 1.337,
                weight_unit = '',
                wholesale_price = 1.337,
                width = 1.337
            )
        else:
            return ProductAdd(
                description = '',
                model = '',
                name = '',
                price = 1.337,
        )
        """

    def testProductAdd(self):
        """Test ProductAdd"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
