# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.model_response_order_transaction_list import ModelResponseOrderTransactionList

class TestModelResponseOrderTransactionList(unittest.TestCase):
    """ModelResponseOrderTransactionList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelResponseOrderTransactionList:
        """Test ModelResponseOrderTransactionList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelResponseOrderTransactionList`
        """
        model = ModelResponseOrderTransactionList()
        if include_optional:
            return ModelResponseOrderTransactionList(
                additional_fields = None,
                custom_fields = None,
                pagination = openapi_client.models.pagination.Pagination(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    next = '', 
                    previous = '', ),
                result = openapi_client.models.response_order_transaction_list_result.Response_Order_Transaction_List_Result(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    transactions = [
                        openapi_client.models.order_transaction.Order_Transaction(
                            additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                            amount = 1.337, 
                            avs_message = '', 
                            avs_postal_resp_code = '', 
                            avs_street_resp_code = '', 
                            card_bin = '', 
                            card_brand = '', 
                            card_last_four = '', 
                            created_time = openapi_client.models.a2_c_date_time.A2CDateTime(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                format = '', 
                                value = '', ), 
                            currency = '', 
                            custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                            cvv_code = '', 
                            cvv_message = '', 
                            description = '', 
                            gateway = '', 
                            id = '', 
                            is_test_mode = True, 
                            order_id = '', 
                            parent_id = '', 
                            reference_number = '', 
                            settlement_amount = 1.337, 
                            settlement_created_time = openapi_client.models.a2_c_date_time.A2CDateTime(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                format = '', 
                                value = '', ), 
                            settlement_currency = '', 
                            status = '', 
                            transaction_id = '', )
                        ], 
                    transactions_count = 56, ),
                return_code = 56,
                return_message = ''
            )
        else:
            return ModelResponseOrderTransactionList(
        )
        """

    def testModelResponseOrderTransactionList(self):
        """Test ModelResponseOrderTransactionList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
