# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.product_variant_update import ProductVariantUpdate

class TestProductVariantUpdate(unittest.TestCase):
    """ProductVariantUpdate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductVariantUpdate:
        """Test ProductVariantUpdate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductVariantUpdate`
        """
        model = ProductVariantUpdate()
        if include_optional:
            return ProductVariantUpdate(
                available_for_sale = True,
                backorder_status = '',
                barcode = '',
                clear_cache = True,
                cost_price = 1.337,
                country_of_origin = '',
                description = '',
                gtin = '',
                harmonized_system_code = '',
                height = 1.337,
                id = '',
                in_stock = True,
                increase_quantity = 1.337,
                lang_id = '',
                length = 1.337,
                manage_stock = True,
                meta_description = '',
                meta_keywords = '',
                meta_title = '',
                model = '',
                name = '',
                old_price = 1.337,
                options = [
                    openapi_client.models.product_variant_update_options_inner.ProductVariantUpdate_options_inner(
                        option_name = '', 
                        option_value = '', )
                    ],
                price = 1.337,
                product_id = '',
                quantity = 1.337,
                reduce_quantity = 1.337,
                reindex = True,
                reserve_quantity = 1.337,
                retail_price = 1.337,
                short_description = '',
                sku = '',
                special_price = 1.337,
                sprice_create = '',
                sprice_expire = '',
                status = '',
                store_id = '',
                taxable = True,
                visible = '',
                warehouse_id = '',
                weight = 1.337,
                width = 1.337
            )
        else:
            return ProductVariantUpdate(
        )
        """

    def testProductVariantUpdate(self):
        """Test ProductVariantUpdate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
