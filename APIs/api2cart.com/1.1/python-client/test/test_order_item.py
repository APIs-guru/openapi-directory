# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_item import OrderItem

class TestOrderItem(unittest.TestCase):
    """OrderItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderItem:
        """Test OrderItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderItem`
        """
        model = OrderItem()
        if include_optional:
            return OrderItem(
                additional_fields = openapi_client.models.additional_fields.additional_fields(),
                barcode = '',
                custom_fields = openapi_client.models.custom_fields.custom_fields(),
                discount_amount = 1.337,
                model = '',
                name = '',
                options = [
                    openapi_client.models.order_item_option.Order_Item_Option(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        name = '', 
                        option_id = '', 
                        price = 1.337, 
                        product_option_value_id = '', 
                        type = '', 
                        value = '', 
                        weight = 1.337, )
                    ],
                order_product_id = '',
                parent_order_product_id = '',
                price = 1.337,
                price_inc_tax = 1.337,
                product_id = '',
                quantity = 1.337,
                tax_percent = 1.337,
                tax_value = 1.337,
                tax_value_after_discount = 1.337,
                total_price = 1.337,
                variant_id = '',
                weight = 1.337,
                weight_unit = ''
            )
        else:
            return OrderItem(
        )
        """

    def testOrderItem(self):
        """Test OrderItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
