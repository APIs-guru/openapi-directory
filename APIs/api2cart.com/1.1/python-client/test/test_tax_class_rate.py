# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tax_class_rate import TaxClassRate

class TestTaxClassRate(unittest.TestCase):
    """TaxClassRate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaxClassRate:
        """Test TaxClassRate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaxClassRate`
        """
        model = TaxClassRate()
        if include_optional:
            return TaxClassRate(
                additional_fields = openapi_client.models.additional_fields.additional_fields(),
                address = [
                    ''
                    ],
                cities = [
                    ''
                    ],
                countries = [
                    openapi_client.models.tax_class_countries.TaxClass_Countries(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        code = '', 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        id = '', 
                        name = '', 
                        states = [
                            openapi_client.models.tax_class_states.TaxClass_States(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                code = '', 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                id = '', 
                                name = '', 
                                tax = 1.337, 
                                tax_type = 56, 
                                zip_codes = [
                                    openapi_client.models.tax_class_zip_codes.TaxClass_ZipCodes(
                                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                        fields = [
                                            openapi_client.models.tax_class_zip_codes_range.TaxClass_ZipCodes_Range(
                                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                                from = '', 
                                                to = '', )
                                            ], 
                                        is_range = True, 
                                        range = [
                                            ''
                                            ], )
                                    ], )
                            ], 
                        tax = 1.337, 
                        tax_type = 56, )
                    ],
                custom_fields = openapi_client.models.custom_fields.custom_fields(),
                id = '',
                name = '',
                tax = 1.337,
                tax_based_on = '',
                tax_type = 56,
                zip_codes = [
                    openapi_client.models.tax_class_zip_codes.TaxClass_ZipCodes(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        fields = [
                            openapi_client.models.tax_class_zip_codes_range.TaxClass_ZipCodes_Range(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                from = '', 
                                to = '', )
                            ], 
                        is_range = True, 
                        range = [
                            ''
                            ], )
                    ]
            )
        else:
            return TaxClassRate(
        )
        """

    def testTaxClassRate(self):
        """Test TaxClassRate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
