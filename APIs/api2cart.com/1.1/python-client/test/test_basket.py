# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.basket import Basket

class TestBasket(unittest.TestCase):
    """Basket unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Basket:
        """Test Basket
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Basket`
        """
        model = Basket()
        if include_optional:
            return Basket(
                additional_fields = None,
                basket_products = [
                    openapi_client.models.basket_item.Basket_Item(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        id = '', 
                        name = '', 
                        options = [
                            openapi_client.models.basket_item_option.Basket_Item_Option(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                id = '', 
                                name = '', 
                                used_in_combination = True, 
                                value = '', 
                                value_id = '', )
                            ], 
                        parent_id = '', 
                        price = 1.337, 
                        product_id = '', 
                        quantity = 1.337, 
                        sku = '', 
                        tax = 1.337, 
                        variant_id = '', 
                        weight = 1.337, 
                        weight_unit = '', )
                    ],
                basket_url = '',
                created_at = openapi_client.models.a2_c_date_time.A2CDateTime(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    format = '', 
                    value = '', ),
                currency = openapi_client.models.currency.Currency(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    avail = True, 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    default = True, 
                    id = '', 
                    iso3 = '', 
                    name = '', 
                    rate = 1.337, 
                    symbol_left = '', 
                    symbol_right = '', ),
                custom_fields = None,
                customer = openapi_client.models.base_customer.BaseCustomer(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    email = '', 
                    first_name = '', 
                    id = '', 
                    last_name = '', 
                    phone = '', ),
                id = '',
                modified_at = openapi_client.models.a2_c_date_time.A2CDateTime(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    format = '', 
                    value = '', )
            )
        else:
            return Basket(
        )
        """

    def testBasket(self):
        """Test Basket"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
