# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.response_category_list_result import ResponseCategoryListResult

class TestResponseCategoryListResult(unittest.TestCase):
    """ResponseCategoryListResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResponseCategoryListResult:
        """Test ResponseCategoryListResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResponseCategoryListResult`
        """
        model = ResponseCategoryListResult()
        if include_optional:
            return ResponseCategoryListResult(
                additional_fields = openapi_client.models.additional_fields.additional_fields(),
                categories_count = 56,
                category = [
                    openapi_client.models.category.Category(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        avail = True, 
                        created_at = openapi_client.models.a2_c_date_time.A2CDateTime(
                            additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                            custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                            format = '', 
                            value = '', ), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        description = '', 
                        id = '', 
                        images = [
                            openapi_client.models.image.Image(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                alt = '', 
                                avail = True, 
                                create_at = openapi_client.models.a2_c_date_time.A2CDateTime(
                                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                    format = '', 
                                    value = '', ), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                file_name = '', 
                                http_path = '', 
                                id = '', 
                                mime_type = '', 
                                modified_at = , 
                                size = 56, 
                                sort_order = 56, 
                                type = '', )
                            ], 
                        keywords = '', 
                        meta_description = '', 
                        meta_title = '', 
                        modified_at = , 
                        name = '', 
                        parent_id = '', 
                        path = '', 
                        seo_url = '', 
                        short_description = '', 
                        sort_order = 56, 
                        stores_ids = [
                            ''
                            ], )
                    ],
                custom_fields = openapi_client.models.custom_fields.custom_fields()
            )
        else:
            return ResponseCategoryListResult(
        )
        """

    def testResponseCategoryListResult(self):
        """Test ResponseCategoryListResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
