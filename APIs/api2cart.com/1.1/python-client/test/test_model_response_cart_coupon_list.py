# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.model_response_cart_coupon_list import ModelResponseCartCouponList

class TestModelResponseCartCouponList(unittest.TestCase):
    """ModelResponseCartCouponList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ModelResponseCartCouponList:
        """Test ModelResponseCartCouponList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ModelResponseCartCouponList`
        """
        model = ModelResponseCartCouponList()
        if include_optional:
            return ModelResponseCartCouponList(
                additional_fields = None,
                custom_fields = None,
                pagination = openapi_client.models.pagination.Pagination(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    next = '', 
                    previous = '', ),
                result = openapi_client.models.response_cart_coupon_list_result.Response_Cart_Coupon_List_Result(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    coupon = [
                        openapi_client.models.coupon.Coupon(
                            actions = [
                                openapi_client.models.coupon_action.Coupon_Action(
                                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                    amount = 1.337, 
                                    apply_to = '', 
                                    conditions = [
                                        openapi_client.models.coupon_condition.Coupon_Condition(
                                            additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                            custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                            entity = '', 
                                            id = '', 
                                            key = '', 
                                            logic_operator = '', 
                                            match_items = '', 
                                            operator = '', 
                                            sub_conditions = [
                                                openapi_client.models.coupon_condition.Coupon_Condition(
                                                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                                    entity = '', 
                                                    id = '', 
                                                    key = '', 
                                                    logic_operator = '', 
                                                    match_items = '', 
                                                    operator = '', 
                                                    value = '', )
                                                ], 
                                            value = '', )
                                        ], 
                                    currency_code = '', 
                                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                    discount_quantity_step = 56, 
                                    discounted_quantity = 1.337, 
                                    include_tax = True, 
                                    logic_operator = '', 
                                    scope = '', 
                                    type = '', )
                                ], 
                            additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                            avail = True, 
                            code = '', 
                            codes = [
                                openapi_client.models.coupon_code.Coupon_Code(
                                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                    code = '', 
                                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                    id = '', 
                                    used_times = 56, )
                                ], 
                            conditions = [
                                
                                ], 
                            custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                            date_end = openapi_client.models.a2_c_date_time.A2CDateTime(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                format = '', 
                                value = '', ), 
                            date_start = openapi_client.models.a2_c_date_time.A2CDateTime(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                format = '', 
                                value = '', ), 
                            description = '', 
                            id = '', 
                            logic_operator = '', 
                            name = '', 
                            priority = 56, 
                            usage_history = [
                                openapi_client.models.coupon_history.Coupon_History(
                                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                    amount = 1.337, 
                                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                    order_id = '', )
                                ], 
                            usage_limit = 56, 
                            usage_limit_per_customer = 56, 
                            used_times = 56, )
                        ], 
                    coupon_count = 56, 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), ),
                return_code = 56,
                return_message = ''
            )
        else:
            return ModelResponseCartCouponList(
        )
        """

    def testModelResponseCartCouponList(self):
        """Test ModelResponseCartCouponList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
