# coding: utf-8

"""
    Swagger API2Cart

    API2Cart

    The version of the OpenAPI document: 1.1
    Contact: contact@api2cart.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cart_store_info import CartStoreInfo

class TestCartStoreInfo(unittest.TestCase):
    """CartStoreInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CartStoreInfo:
        """Test CartStoreInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CartStoreInfo`
        """
        model = CartStoreInfo()
        if include_optional:
            return CartStoreInfo(
                active = True,
                additional_fields = openapi_client.models.additional_fields.additional_fields(),
                carrier_info = [
                    openapi_client.models.carrier.Carrier(
                        active = True, 
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        id = '', 
                        name = '', 
                        shipping_methods = [
                            openapi_client.models.order_shipping_method.Order_ShippingMethod(
                                additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                                custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                                name = '', )
                            ], )
                    ],
                channels = [
                    openapi_client.models.cart_channel.Cart_Channel(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        id = '', 
                        is_enabled = True, 
                        name = '', 
                        platform = '', )
                    ],
                country = '',
                currency = openapi_client.models.currency.Currency(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    avail = True, 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    default = True, 
                    id = '', 
                    iso3 = '', 
                    name = '', 
                    rate = 1.337, 
                    symbol_left = '', 
                    symbol_right = '', ),
                custom_fields = openapi_client.models.custom_fields.custom_fields(),
                default_warehouse_id = '',
                dimension_unit = '',
                language = '',
                multi_store_url = '',
                name = '',
                prices_include_tax = True,
                root_category_id = '',
                store_currencies = [
                    openapi_client.models.currency.Currency(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        avail = True, 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        default = True, 
                        id = '', 
                        iso3 = '', 
                        name = '', 
                        rate = 1.337, 
                        symbol_left = '', 
                        symbol_right = '', )
                    ],
                store_id = '',
                store_languages = [
                    openapi_client.models.language.Language(
                        additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                        custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                        id = '', 
                        iso_code = '', 
                        name = '', )
                    ],
                store_owner_info = openapi_client.models.info.Info(
                    additional_fields = openapi_client.models.additional_fields.additional_fields(), 
                    city = '', 
                    country = '', 
                    custom_fields = openapi_client.models.custom_fields.custom_fields(), 
                    email = '', 
                    owner = '', 
                    phone = '', 
                    state = '', 
                    state_code = '', 
                    street_address = '', 
                    street_address_line_2 = '', 
                    zip_code = '', ),
                timezone = '',
                weight_unit = ''
            )
        else:
            return CartStoreInfo(
        )
        """

    def testCartStoreInfo(self):
        """Test CartStoreInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
