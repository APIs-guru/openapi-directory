# coding: utf-8

"""
    REST API Version 2

    Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)

    The version of the OpenAPI document: 2.9.235
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictFloat, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional, Union
from openapi_client.models.space_item import SpaceItem
from typing import Optional, Set
from typing_extensions import Self

class SpaceTopic(BaseModel):
    """
    SpaceTopic
    """ # noqa: E501
    last_content_creation_time: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The last time new content was created", alias="lastContentCreationTime")
    last_content_creator_id: Optional[StrictStr] = Field(default=None, description="The Id of the last content creator", alias="lastContentCreatorId")
    number_of_replies: Optional[Union[StrictFloat, StrictInt]] = Field(default=None, description="The number of replies this topic has", alias="numberOfReplies")
    pinned: Optional[StrictBool] = Field(default=None, description="Is this topic pinned")
    space_item: Optional[SpaceItem] = Field(default=None, alias="spaceItem")
    subject: Optional[StrictStr] = Field(default=None, description="The subject of this topic")
    tags: Optional[List[StrictStr]] = Field(default=None, description="The tags ")
    __properties: ClassVar[List[str]] = ["lastContentCreationTime", "lastContentCreatorId", "numberOfReplies", "pinned", "spaceItem", "subject", "tags"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of SpaceTopic from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of space_item
        if self.space_item:
            _dict['spaceItem'] = self.space_item.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of SpaceTopic from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "lastContentCreationTime": obj.get("lastContentCreationTime"),
            "lastContentCreatorId": obj.get("lastContentCreatorId"),
            "numberOfReplies": obj.get("numberOfReplies"),
            "pinned": obj.get("pinned"),
            "spaceItem": SpaceItem.from_dict(obj["spaceItem"]) if obj.get("spaceItem") is not None else None,
            "subject": obj.get("subject"),
            "tags": obj.get("tags")
        })
        return _obj


