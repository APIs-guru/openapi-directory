# coding: utf-8

"""
    REST API Version 2

    Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)

    The version of the OpenAPI document: 2.9.235
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.conversations_api import ConversationsApi


class TestConversationsApi(unittest.TestCase):
    """ConversationsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ConversationsApi()

    def tearDown(self) -> None:
        pass

    def test_add_favorite(self) -> None:
        """Test case for add_favorite

        Adds a conversation to the favorites
        """
        pass

    def test_add_label(self) -> None:
        """Test case for add_label

        Add a user label
        """
        pass

    def test_add_moderators(self) -> None:
        """Test case for add_moderators

        Add moderators
        """
        pass

    def test_add_participant_community(self) -> None:
        """Test case for add_participant_community

        Adds participants to a community
        """
        pass

    def test_add_participant_group(self) -> None:
        """Test case for add_participant_group

        Adds participants to a group conversation
        """
        pass

    def test_add_text_item(self) -> None:
        """Test case for add_text_item

        Adds a message to a conversation
        """
        pass

    def test_add_text_item_with_parent(self) -> None:
        """Test case for add_text_item_with_parent

        Adds a message to an item
        """
        pass

    def test_archive_conversation(self) -> None:
        """Test case for archive_conversation

        Archives conversation
        """
        pass

    def test_assign_label(self) -> None:
        """Test case for assign_label

        Adds a label to a conversation
        """
        pass

    def test_create_community_conversation(self) -> None:
        """Test case for create_community_conversation

        Creates a community conversation
        """
        pass

    def test_create_direct_conversation(self) -> None:
        """Test case for create_direct_conversation

        Creates a 1-to-1 conversation
        """
        pass

    def test_create_group_conversation(self) -> None:
        """Test case for create_group_conversation

        Creates a group conversation
        """
        pass

    def test_delete_favorite(self) -> None:
        """Test case for delete_favorite

        Removes a conversation from favorites
        """
        pass

    def test_delete_text_item(self) -> None:
        """Test case for delete_text_item

        Deletes a message from a conversation
        """
        pass

    def test_flag_item(self) -> None:
        """Test case for flag_item

        Adds a flag to a message in a conversation
        """
        pass

    def test_get_community_conversations(self) -> None:
        """Test case for get_community_conversations

        Gets a list of communities
        """
        pass

    def test_get_conversation_items(self) -> None:
        """Test case for get_conversation_items

        Gets a list of conversation items
        """
        pass

    def test_get_conversationby_id(self) -> None:
        """Test case for get_conversationby_id

        Gets a conversation
        """
        pass

    def test_get_conversations(self) -> None:
        """Test case for get_conversations

        Gets a list of conversations
        """
        pass

    def test_get_conversations_by_id(self) -> None:
        """Test case for get_conversations_by_id

        Gets conversations
        """
        pass

    def test_get_conversations_by_label(self) -> None:
        """Test case for get_conversations_by_label

        Returns conversations with a certain label
        """
        pass

    def test_get_direct_conversation(self) -> None:
        """Test case for get_direct_conversation

        Checks for a 1-to-1 conversation
        """
        pass

    def test_get_favorite_conversations(self) -> None:
        """Test case for get_favorite_conversations

        Gets favorite conversations
        """
        pass

    def test_get_flag_item(self) -> None:
        """Test case for get_flag_item

        Gets a list of the flagged messages of a conversation
        """
        pass

    def test_get_flag_item_conv(self) -> None:
        """Test case for get_flag_item_conv

        Gets a list of the flagged messages
        """
        pass

    def test_get_join_details(self) -> None:
        """Test case for get_join_details

        Gets the conference details of a conversation
        """
        pass

    def test_get_join_details_multiple(self) -> None:
        """Test case for get_join_details_multiple

        Gets the conference details for multiple conversations
        """
        pass

    def test_get_participants_by_conv_id(self) -> None:
        """Test case for get_participants_by_conv_id

        Performs a list of participants
        """
        pass

    def test_get_pinned_conversations(self) -> None:
        """Test case for get_pinned_conversations

        Returns pinned topics of a conversation
        """
        pass

    def test_get_single_conversationtem(self) -> None:
        """Test case for get_single_conversationtem

        Returns a text item
        """
        pass

    def test_join_community_conversation(self) -> None:
        """Test case for join_community_conversation

        Adds the authenticated user to a community
        """
        pass

    def test_like_item(self) -> None:
        """Test case for like_item

        Adds a \"like\" to a message
        """
        pass

    def test_moderate_conversation(self) -> None:
        """Test case for moderate_conversation

        Set conversation moderated
        """
        pass

    def test_pin_a_conversation(self) -> None:
        """Test case for pin_a_conversation

        Pins a topic of a conversation
        """
        pass

    def test_remove_label(self) -> None:
        """Test case for remove_label

        Remove a user label
        """
        pass

    def test_remove_moderators(self) -> None:
        """Test case for remove_moderators

        Remove moderators
        """
        pass

    def test_remove_participant_community(self) -> None:
        """Test case for remove_participant_community

        Removes participants from a community
        """
        pass

    def test_remove_participant_group(self) -> None:
        """Test case for remove_participant_group

        Removes participants from a group conversation
        """
        pass

    def test_resolve_invitation_token(self) -> None:
        """Test case for resolve_invitation_token

        Resolves an invite token to a conversation
        """
        pass

    def test_search_conversations(self) -> None:
        """Test case for search_conversations

        Performs a conversation search
        """
        pass

    def test_un_flag_item(self) -> None:
        """Test case for un_flag_item

        Removes the flag from a message
        """
        pass

    def test_un_pin_a_conversation(self) -> None:
        """Test case for un_pin_a_conversation

        Unpins a topic of a conversation
        """
        pass

    def test_unassign_label(self) -> None:
        """Test case for unassign_label

        Removes a label from a conversation
        """
        pass

    def test_undo_archive_conversation(self) -> None:
        """Test case for undo_archive_conversation

        Unmute conversation
        """
        pass

    def test_unlike_item(self) -> None:
        """Test case for unlike_item

        Removes a \"like\" from a message
        """
        pass

    def test_unmoderate_conversation(self) -> None:
        """Test case for unmoderate_conversation

        Set conversation unmoderated
        """
        pass

    def test_update_conversation_community(self) -> None:
        """Test case for update_conversation_community

        Updates the information of a community
        """
        pass

    def test_update_conversation_group(self) -> None:
        """Test case for update_conversation_group

        Updates the information of a group conversation
        """
        pass

    def test_update_profile(self) -> None:
        """Test case for update_profile

        Updates the user profile
        """
        pass

    def test_update_text_item(self) -> None:
        """Test case for update_text_item

        Updates a message
        """
        pass


if __name__ == '__main__':
    unittest.main()
