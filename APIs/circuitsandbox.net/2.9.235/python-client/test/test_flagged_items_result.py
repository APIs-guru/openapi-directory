# coding: utf-8

"""
    REST API Version 2

    Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)

    The version of the OpenAPI document: 2.9.235
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.flagged_items_result import FlaggedItemsResult

class TestFlaggedItemsResult(unittest.TestCase):
    """FlaggedItemsResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FlaggedItemsResult:
        """Test FlaggedItemsResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FlaggedItemsResult`
        """
        model = FlaggedItemsResult()
        if include_optional:
            return FlaggedItemsResult(
                flagged_items = [
                    openapi_client.models.flagged_item.FlaggedItem(
                        item = openapi_client.models.space_item.SpaceItem(
                            status = '', 
                            attachments = [
                                openapi_client.models.space_attachment.SpaceAttachment(
                                    creation_time = 1.337, 
                                    creator_id = '', 
                                    file_id = '', 
                                    file_name = '', 
                                    inline_usage = True, 
                                    item_id = '', 
                                    layout = '', 
                                    mime_type = '', 
                                    modification_time = 1.337, 
                                    size = 1.337, 
                                    space_id = '', 
                                    thumbnail_id = '', )
                                ], 
                            complex = True, 
                            content = '', 
                            creation_time = 1.337, 
                            creator_id = '', 
                            deleted_by = '', 
                            external_attachments = [
                                openapi_client.models.space_external_attachment.SpaceExternalAttachment(
                                    attachment = openapi_client.models.space_attachment.SpaceAttachment(
                                        creation_time = 1.337, 
                                        creator_id = '', 
                                        file_id = '', 
                                        file_name = '', 
                                        inline_usage = True, 
                                        item_id = '', 
                                        layout = '', 
                                        mime_type = '', 
                                        modification_time = 1.337, 
                                        size = 1.337, 
                                        space_id = '', 
                                        thumbnail_id = '', ), 
                                    download_location = '', 
                                    preview_location = '', 
                                    share_link_token = '', 
                                    type = '', )
                                ], 
                            form_meta_data = '', 
                            item_id = '', 
                            mentioned_users = [
                                ''
                                ], 
                            modification_time = 1.337, 
                            number_of_likes = 1.337, 
                            previews = [
                                openapi_client.models.space_item_preview.SpaceItemPreview(
                                    description = '', 
                                    html = '', 
                                    image_uri = '', 
                                    provider = '', 
                                    src_url = '', 
                                    title = '', 
                                    type = '', )
                                ], 
                            shared_items = [
                                openapi_client.models.shared_item.SharedItem(
                                    container_id = '', 
                                    container_name = '', 
                                    container_type = '', 
                                    creation_time = 1.337, 
                                    creator_id = '', 
                                    item_id = '', 
                                    parent_topic_id = '', 
                                    sub_type = '', )
                                ], 
                            space_id = '', 
                            tenant_id = '', ), 
                        parent_item = openapi_client.models.space_item.SpaceItem(
                            status = '', 
                            complex = True, 
                            content = '', 
                            creation_time = 1.337, 
                            creator_id = '', 
                            deleted_by = '', 
                            form_meta_data = '', 
                            item_id = '', 
                            modification_time = 1.337, 
                            number_of_likes = 1.337, 
                            space_id = '', 
                            tenant_id = '', ), )
                    ],
                has_more = True,
                search_pointer = ''
            )
        else:
            return FlaggedItemsResult(
        )
        """

    def testFlaggedItemsResult(self):
        """Test FlaggedItemsResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
