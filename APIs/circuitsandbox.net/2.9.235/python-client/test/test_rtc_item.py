# coding: utf-8

"""
    REST API Version 2

    Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)

    The version of the OpenAPI document: 2.9.235
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rtc_item import RtcItem

class TestRtcItem(unittest.TestCase):
    """RtcItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RtcItem:
        """Test RtcItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RtcItem`
        """
        model = RtcItem()
        if include_optional:
            return RtcItem(
                ended = openapi_client.models.rtc_ended.RtcEnded(
                    duration = 1.337, 
                    max_number_of_attendees = 1.337, 
                    pick_from_participant = '', ),
                missed = '',
                moved = openapi_client.models.rtc_moved.RtcMoved(
                    conversation_id = '', 
                    direction = '', ),
                rtc_participants = [
                    openapi_client.models.rtc_participant.RtcParticipant(
                        display_name = '', 
                        fully_qualified_number = '', 
                        phone_number = '', 
                        resolved_user = null, 
                        type = '', 
                        user_id = '', )
                    ],
                type = ''
            )
        else:
            return RtcItem(
        )
        """

    def testRtcItem(self):
        """Test RtcItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
