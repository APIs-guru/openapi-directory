# coding: utf-8

"""
    REST API Version 2

    Circuit REST API to interact with the Circuit system.  [Learn more about the Circuit Development Community](https://www.circuit.com/web/developers/home)

    The version of the OpenAPI document: 2.9.235
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.conversation_item import ConversationItem

class TestConversationItem(unittest.TestCase):
    """ConversationItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConversationItem:
        """Test ConversationItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConversationItem`
        """
        model = ConversationItem()
        if include_optional:
            return ConversationItem(
                attachments = [
                    openapi_client.models.attachment.Attachment(
                        creation_time = 1.337, 
                        creator_id = '', 
                        delete_url = '', 
                        file_id = '', 
                        file_name = '', 
                        item_id = '', 
                        mime_type = '', 
                        modification_time = 1.337, 
                        size = 1.337, 
                        url = '', )
                    ],
                conv_id = '',
                creation_time = 1.337,
                creator_id = '',
                include_in_unread_count = True,
                item_id = '',
                modification_time = 1.337,
                rtc = openapi_client.models.rtc_item.RtcItem(
                    ended = openapi_client.models.rtc_ended.RtcEnded(
                        duration = 1.337, 
                        max_number_of_attendees = 1.337, 
                        pick_from_participant = '', ), 
                    missed = '', 
                    moved = openapi_client.models.rtc_moved.RtcMoved(
                        conversation_id = '', 
                        direction = '', ), 
                    rtc_participants = [
                        openapi_client.models.rtc_participant.RtcParticipant(
                            display_name = '', 
                            fully_qualified_number = '', 
                            phone_number = '', 
                            resolved_user = null, 
                            type = '', 
                            user_id = '', )
                        ], 
                    type = '', ),
                system = openapi_client.models.system_item.SystemItem(
                    affected_participants = [
                        ''
                        ], 
                    new_topic = '', 
                    old_topic = '', 
                    type = '', ),
                text = openapi_client.models.conversation_text_item.ConversationTextItem(
                    content = '', 
                    content_type = '', 
                    form_meta_data = '', 
                    is_webhook_message = True, 
                    liked_user_ids = [
                        ''
                        ], 
                    parent_id = '', 
                    preview = openapi_client.models.preview.Preview(
                        image_uri = '', 
                        src_url = '', 
                        title = '', 
                        type = '', ), 
                    state = '', 
                    subject = '', ),
                type = ''
            )
        else:
            return ConversationItem(
        )
        """

    def testConversationItem(self):
        """Test ConversationItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
