# coding: utf-8

"""
    Product Finder API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fee_charge_cap_inner import FeeChargeCapInner

class TestFeeChargeCapInner(unittest.TestCase):
    """FeeChargeCapInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FeeChargeCapInner:
        """Test FeeChargeCapInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FeeChargeCapInner`
        """
        model = FeeChargeCapInner()
        if include_optional:
            return FeeChargeCapInner(
                capping_period = 'Day',
                fee_cap_amount = '-80728880015.0217',
                fee_cap_occurrence = 1.337,
                fee_type = [
                    'ATMDeposATMPaidIn'
                    ],
                min_max_type = 'Minimum',
                notes = [
                    '0'
                    ],
                other_fee_type = [
                    openapi_client.models.other_fee_type_inner.OtherFeeType_inner(
                        code = '', 
                        description = '0', 
                        name = '0', )
                    ]
            )
        else:
            return FeeChargeCapInner(
                fee_type = [
                    'ATMDeposATMPaidIn'
                    ],
                min_max_type = 'Minimum',
        )
        """

    def testFeeChargeCapInner(self):
        """Test FeeChargeCapInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
