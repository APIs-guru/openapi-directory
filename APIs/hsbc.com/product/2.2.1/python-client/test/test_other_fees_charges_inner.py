# coding: utf-8

"""
    Product Finder API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.other_fees_charges_inner import OtherFeesChargesInner

class TestOtherFeesChargesInner(unittest.TestCase):
    """OtherFeesChargesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OtherFeesChargesInner:
        """Test OtherFeesChargesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OtherFeesChargesInner`
        """
        model = OtherFeesChargesInner()
        if include_optional:
            return OtherFeesChargesInner(
                fee_charge_cap = [
                    openapi_client.models.fee_charge_cap_inner.FeeChargeCap_inner(
                        capping_period = 'Day', 
                        fee_cap_amount = '-80728880015.0217', 
                        fee_cap_occurrence = 1.337, 
                        fee_type = [
                            'ATMDeposATMPaidIn'
                            ], 
                        min_max_type = 'Minimum', 
                        notes = [
                            '0'
                            ], 
                        other_fee_type = [
                            openapi_client.models.other_fee_type_inner.OtherFeeType_inner(
                                code = '', 
                                description = '0', 
                                name = '0', )
                            ], )
                    ],
                fee_charge_detail = [
                    openapi_client.models.fee_charge_detail_inner.FeeChargeDetail_inner(
                        application_frequency = 'OnClosing', 
                        calculation_frequency = 'OnClosing', 
                        fee_amount = '-80728880015.0217', 
                        fee_applicable_range = openapi_client.models.fee_applicable_range.FeeApplicableRange(), 
                        fee_category = 'Auto', 
                        fee_rate = '-807', 
                        fee_rate_type = 'Gross', 
                        fee_type = 'ATMDeposATMPaidIn', 
                        included_in_monthly_charge_indicator = True, 
                        negotiable_indicator = True, 
                        notes = [
                            '0'
                            ], 
                        other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(), 
                        other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(), 
                        other_fee_category = openapi_client.models.other_fee_category.OtherFeeCategory(), 
                        other_fee_rate_type = openapi_client.models.other_fee_rate_type.OtherFeeRateType(), 
                        other_fee_type = openapi_client.models.other_fee_type.OtherFeeType(), )
                    ],
                other_tariff_type = openapi_client.models.other_tariff_type.OtherTariffType(),
                tariff_name = '0',
                tariff_type = 'Electronic'
            )
        else:
            return OtherFeesChargesInner(
                fee_charge_detail = [
                    openapi_client.models.fee_charge_detail_inner.FeeChargeDetail_inner(
                        application_frequency = 'OnClosing', 
                        calculation_frequency = 'OnClosing', 
                        fee_amount = '-80728880015.0217', 
                        fee_applicable_range = openapi_client.models.fee_applicable_range.FeeApplicableRange(), 
                        fee_category = 'Auto', 
                        fee_rate = '-807', 
                        fee_rate_type = 'Gross', 
                        fee_type = 'ATMDeposATMPaidIn', 
                        included_in_monthly_charge_indicator = True, 
                        negotiable_indicator = True, 
                        notes = [
                            '0'
                            ], 
                        other_application_frequency = openapi_client.models.other_application_frequency.OtherApplicationFrequency(), 
                        other_calculation_frequency = openapi_client.models.other_calculation_frequency.OtherCalculationFrequency(), 
                        other_fee_category = openapi_client.models.other_fee_category.OtherFeeCategory(), 
                        other_fee_rate_type = openapi_client.models.other_fee_rate_type.OtherFeeRateType(), 
                        other_fee_type = openapi_client.models.other_fee_type.OtherFeeType(), )
                    ],
        )
        """

    def testOtherFeesChargesInner(self):
        """Test OtherFeesChargesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
