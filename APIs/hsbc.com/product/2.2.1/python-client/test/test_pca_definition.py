# coding: utf-8

"""
    Product Finder API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 2.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pca_definition import PCADefinition

class TestPCADefinition(unittest.TestCase):
    """PCADefinition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PCADefinition:
        """Test PCADefinition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PCADefinition`
        """
        model = PCADefinition()
        if include_optional:
            return PCADefinition(
                brand = [
                    openapi_client.models.brand_inner_2.Brand_inner_2(
                        brand_name = '0', 
                        pca = [
                            openapi_client.models.pca_inner.PCA_inner(
                                identification = '0', 
                                name = '0', 
                                notes = [
                                    '0'
                                    ], 
                                on_sale_indicator = True, 
                                pca_marketing_state = [
                                    openapi_client.models.pca_marketing_state_inner.PCAMarketingState_inner(
                                        core_product = openapi_client.models.core_product.CoreProduct(), 
                                        credit_interest = openapi_client.models.credit_interest.CreditInterest(), 
                                        eligibility = openapi_client.models.eligibility.Eligibility(), 
                                        features_and_benefits = openapi_client.models.features_and_benefits.FeaturesAndBenefits(), 
                                        first_marketed_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        identification = '0', 
                                        last_marketed_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        marketing_state = 'Promotional', 
                                        other_fees_charges = openapi_client.models.other_fees_charges.OtherFeesCharges(), 
                                        overdraft = openapi_client.models.overdraft.Overdraft(), 
                                        predecessor_id = '0', 
                                        state_tenure_length = 1.337, 
                                        state_tenure_period = 'Day', )
                                    ], 
                                segment = [
                                    'Basic'
                                    ], )
                            ], )
                    ]
            )
        else:
            return PCADefinition(
                brand = [
                    openapi_client.models.brand_inner_2.Brand_inner_2(
                        brand_name = '0', 
                        pca = [
                            openapi_client.models.pca_inner.PCA_inner(
                                identification = '0', 
                                name = '0', 
                                notes = [
                                    '0'
                                    ], 
                                on_sale_indicator = True, 
                                pca_marketing_state = [
                                    openapi_client.models.pca_marketing_state_inner.PCAMarketingState_inner(
                                        core_product = openapi_client.models.core_product.CoreProduct(), 
                                        credit_interest = openapi_client.models.credit_interest.CreditInterest(), 
                                        eligibility = openapi_client.models.eligibility.Eligibility(), 
                                        features_and_benefits = openapi_client.models.features_and_benefits.FeaturesAndBenefits(), 
                                        first_marketed_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        identification = '0', 
                                        last_marketed_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                                        marketing_state = 'Promotional', 
                                        other_fees_charges = openapi_client.models.other_fees_charges.OtherFeesCharges(), 
                                        overdraft = openapi_client.models.overdraft.Overdraft(), 
                                        predecessor_id = '0', 
                                        state_tenure_length = 1.337, 
                                        state_tenure_period = 'Day', )
                                    ], 
                                segment = [
                                    'Basic'
                                    ], )
                            ], )
                    ],
        )
        """

    def testPCADefinition(self):
        """Test PCADefinition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
