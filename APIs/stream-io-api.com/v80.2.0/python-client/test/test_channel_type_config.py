# coding: utf-8

"""
    Stream Chat API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v80.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.channel_type_config import ChannelTypeConfig

class TestChannelTypeConfig(unittest.TestCase):
    """ChannelTypeConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChannelTypeConfig:
        """Test ChannelTypeConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChannelTypeConfig`
        """
        model = ChannelTypeConfig()
        if include_optional:
            return ChannelTypeConfig(
                automod = 'disabled',
                automod_behavior = 'flag',
                automod_thresholds = openapi_client.models.auto_moderation_thresholds.Auto moderation thresholds(
                    explicit = openapi_client.models.label_thresholds.LabelThresholds(
                        block = 0, 
                        flag = 0, ), 
                    spam = openapi_client.models.label_thresholds.LabelThresholds(
                        block = 0, 
                        flag = 0, ), 
                    toxic = , ),
                blocklist = '',
                blocklist_behavior = 'flag',
                commands = [
                    openapi_client.models.command.Command(
                        args = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        name = '', 
                        set = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                connect_events = True,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_events = True,
                grants = {
                    'key' : [
                        ''
                        ]
                    },
                max_message_length = 56,
                message_retention = '',
                mutes = True,
                name = '',
                permissions = [
                    openapi_client.models.policy_request_1.PolicyRequest_1(
                        action = 'Deny', 
                        name = '', 
                        owner = True, 
                        priority = 1, 
                        resources = [
                            ''
                            ], 
                        roles = [
                            ''
                            ], )
                    ],
                push_notifications = True,
                quotes = True,
                reactions = True,
                read_events = True,
                reminders = True,
                replies = True,
                search = True,
                typing_events = True,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                uploads = True,
                url_enrichment = True
            )
        else:
            return ChannelTypeConfig(
                automod = 'disabled',
                automod_behavior = 'flag',
                commands = [
                    openapi_client.models.command.Command(
                        args = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        description = '', 
                        name = '', 
                        set = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                connect_events = True,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                custom_events = True,
                grants = {
                    'key' : [
                        ''
                        ]
                    },
                max_message_length = 56,
                message_retention = '',
                mutes = True,
                name = '',
                permissions = [
                    openapi_client.models.policy_request_1.PolicyRequest_1(
                        action = 'Deny', 
                        name = '', 
                        owner = True, 
                        priority = 1, 
                        resources = [
                            ''
                            ], 
                        roles = [
                            ''
                            ], )
                    ],
                push_notifications = True,
                quotes = True,
                reactions = True,
                read_events = True,
                reminders = True,
                replies = True,
                search = True,
                typing_events = True,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                uploads = True,
                url_enrichment = True,
        )
        """

    def testChannelTypeConfig(self):
        """Test ChannelTypeConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
