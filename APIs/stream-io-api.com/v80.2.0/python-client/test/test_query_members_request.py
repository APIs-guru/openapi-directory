# coding: utf-8

"""
    Stream Chat API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v80.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.query_members_request import QueryMembersRequest

class TestQueryMembersRequest(unittest.TestCase):
    """QueryMembersRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryMembersRequest:
        """Test QueryMembersRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryMembersRequest`
        """
        model = QueryMembersRequest()
        if include_optional:
            return QueryMembersRequest(
                created_at_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at_after_or_equal = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at_before_or_equal = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                filter_conditions = {
                    'key' : null
                    },
                id = '',
                limit = 0,
                members = [
                    openapi_client.models.channel_member.Channel member(
                        ban_expires = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        banned = True, 
                        channel_role = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        invite_accepted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        invite_rejected_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        invited = True, 
                        is_moderator = True, 
                        role = 'member', 
                        shadow_banned = True, 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        user = { }, 
                        user_id = '', )
                    ],
                offset = 56,
                sort = [
                    openapi_client.models.sort_param.SortParam(
                        direction = 56, 
                        field = '', )
                    ],
                type = '',
                user = { },
                user_id = '',
                user_id_gt = '',
                user_id_gte = '',
                user_id_lt = '',
                user_id_lte = ''
            )
        else:
            return QueryMembersRequest(
                filter_conditions = {
                    'key' : null
                    },
                type = '',
        )
        """

    def testQueryMembersRequest(self):
        """Test QueryMembersRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
