# coding: utf-8

"""
    Stream Chat API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v80.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.call_type import CallType

class TestCallType(unittest.TestCase):
    """CallType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CallType:
        """Test CallType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CallType`
        """
        model = CallType()
        if include_optional:
            return CallType(
                app_pk = 56,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                pk = 56,
                settings = openapi_client.models.call_settings.CallSettings(
                    audio = openapi_client.models.audio_settings.AudioSettings(
                        access_request_enabled = True, 
                        opus_dtx_enabled = True, 
                        redundant_coding_enabled = True, ), 
                    backstage = openapi_client.models.backstage_settings.BackstageSettings(
                        enabled = True, ), 
                    broadcasting = openapi_client.models.broadcast_settings.BroadcastSettings(
                        enabled = True, 
                        hls = openapi_client.models.hls_settings.HLSSettings(
                            auto_on = True, 
                            enabled = True, 
                            quality_tracks = [
                                ''
                                ], ), ), 
                    geofencing = openapi_client.models.geofence_settings.GeofenceSettings(
                        names = [
                            ''
                            ], ), 
                    recording = openapi_client.models.record_settings.RecordSettings(
                        audio_only = True, 
                        mode = 'available', 
                        quality = 'audio-only', ), 
                    ring = openapi_client.models.ring_settings.RingSettings(
                        auto_cancel_timeout_ms = 56, 
                        auto_reject_timeout_ms = 56, ), 
                    screensharing = openapi_client.models.screensharing_settings.ScreensharingSettings(
                        access_request_enabled = True, 
                        enabled = True, ), 
                    transcription = openapi_client.models.transcription_settings.TranscriptionSettings(
                        closed_caption_mode = '', 
                        mode = 'available', ), 
                    video = openapi_client.models.video_settings.VideoSettings(
                        access_request_enabled = True, 
                        enabled = True, ), ),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return CallType(
                app_pk = 56,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                name = '',
                pk = 56,
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testCallType(self):
        """Test CallType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
