# coding: utf-8

"""
    SIGNL4 API

    <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.inventory_script_info import InventoryScriptInfo

class TestInventoryScriptInfo(unittest.TestCase):
    """InventoryScriptInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InventoryScriptInfo:
        """Test InventoryScriptInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InventoryScriptInfo`
        """
        model = InventoryScriptInfo()
        if include_optional:
            return InventoryScriptInfo(
                config = None,
                data = openapi_client.models.script_description_data.ScriptDescriptionData(
                    description = '', 
                    name = '', 
                    script_type = '', 
                    short_description = '', ),
                event_pattern = None,
                script_id = '',
                script_localization_details = [
                    openapi_client.models.script_localization_detail.ScriptLocalizationDetail(
                        config_metadata = null, 
                        data = openapi_client.models.script_description_data.ScriptDescriptionData(
                            description = '', 
                            name = '', 
                            script_type = '', 
                            short_description = '', ), 
                        language = '', )
                    ],
                script_name = '',
                visibility = ''
            )
        else:
            return InventoryScriptInfo(
        )
        """

    def testInventoryScriptInfo(self):
        """Test InventoryScriptInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
