# coding: utf-8

"""
    SIGNL4 API

    <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.categories_api import CategoriesApi


class TestCategoriesApi(unittest.TestCase):
    """CategoriesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CategoriesApi()

    def tearDown(self) -> None:
        pass

    def test_categories_images_get(self) -> None:
        """Test case for categories_images_get

        Gets the names of all alert category images.  You can get the image by going to account.signl4.com/images/alerts/categoryImageName.svg
        """
        pass

    def test_categories_team_id_category_id_delete(self) -> None:
        """Test case for categories_team_id_category_id_delete

        Delete an existing category
        """
        pass

    def test_categories_team_id_category_id_get(self) -> None:
        """Test case for categories_team_id_category_id_get

        Get a specific category
        """
        pass

    def test_categories_team_id_category_id_metrics_get(self) -> None:
        """Test case for categories_team_id_category_id_metrics_get

        Get metrics for a specific category
        """
        pass

    def test_categories_team_id_category_id_put(self) -> None:
        """Test case for categories_team_id_category_id_put

        Update an existing category
        """
        pass

    def test_categories_team_id_category_id_subscriptions_get(self) -> None:
        """Test case for categories_team_id_category_id_subscriptions_get

        Get category subscriptions
        """
        pass

    def test_categories_team_id_category_id_subscriptions_post(self) -> None:
        """Test case for categories_team_id_category_id_subscriptions_post

        Set category subscriptions
        """
        pass

    def test_categories_team_id_get(self) -> None:
        """Test case for categories_team_id_get

        Get all categories
        """
        pass

    def test_categories_team_id_metrics_get(self) -> None:
        """Test case for categories_team_id_metrics_get

        Get metrics for all categories
        """
        pass

    def test_categories_team_id_post(self) -> None:
        """Test case for categories_team_id_post

        Create a new category
        """
        pass


if __name__ == '__main__':
    unittest.main()
