# coding: utf-8

"""
    SIGNL4 API

    <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.scripts_api import ScriptsApi


class TestScriptsApi(unittest.TestCase):
    """ScriptsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ScriptsApi()

    def tearDown(self) -> None:
        pass

    def test_scripts_instances_get(self) -> None:
        """Test case for scripts_instances_get

        Returns all script instances of the SIGNL4 team
        """
        pass

    def test_scripts_instances_instance_id_data_put(self) -> None:
        """Test case for scripts_instances_instance_id_data_put

        Updates custom data of a given script instance which includes its display name.
        """
        pass

    def test_scripts_instances_instance_id_delete(self) -> None:
        """Test case for scripts_instances_instance_id_delete

        Deletes a script instance.
        """
        pass

    def test_scripts_instances_instance_id_disable_post(self) -> None:
        """Test case for scripts_instances_instance_id_disable_post

        Disables a given script instance.
        """
        pass

    def test_scripts_instances_instance_id_enable_post(self) -> None:
        """Test case for scripts_instances_instance_id_enable_post

        Enables a script instance.
        """
        pass

    def test_scripts_instances_instance_id_get(self) -> None:
        """Test case for scripts_instances_instance_id_get

        Returns all information about a given script instance which includes its runtime status.
        """
        pass

    def test_scripts_instances_instance_id_put(self) -> None:
        """Test case for scripts_instances_instance_id_put

        Updates a given script instance, typically used for updating the configuration of a script.
        """
        pass

    def test_scripts_instances_post(self) -> None:
        """Test case for scripts_instances_post

        Creates a new script instance in the in the SIGNL4 team.
        """
        pass

    def test_scripts_inventory_get(self) -> None:
        """Test case for scripts_inventory_get

        Returns all available inventory scripts which can be added to a SIGNL4 subscription.
        """
        pass

    def test_scripts_inventory_parsed_get(self) -> None:
        """Test case for scripts_inventory_parsed_get

        Returns all inventory scripts.
        """
        pass

    def test_scripts_inventory_parsed_script_id_get(self) -> None:
        """Test case for scripts_inventory_parsed_script_id_get

        Returns an inventory script by its id.
        """
        pass


if __name__ == '__main__':
    unittest.main()
