# coding: utf-8

"""
    SIGNL4 API

    <p>Use our API for systems integration or to build your own use cases. Sample scenarios include but are not limited to:</p><ul><li>2-way integration: Triggering of Signls and updates in the third party systems when alert state changes occur</li><li>Retrieving alarms for logging purposes</li><li>Calendar integrations: Creation and management of on-call duties</li><li>Punch users in and out based on external calendars</li><li>etc.</li></ul><p>AUTHENTICATION<br>Using the API requires an API key, which you can generate in the SIGNL4 portal under 'Developers'.<br>This key must then be specified in a special header in every HTTP request.<br>This header is called <b style='color:#F8B41F'>X-S4-Api-Key</b>.<br><br>The base URL of the API is <a rel='noopener noreferrer' target='_blank' href='https://connect.signl4.com/api/'>https://connect.signl4.com/api/</a>.<br>Copyright Â© Derdack GmbH<br></p>

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.alerts_api import AlertsApi


class TestAlertsApi(unittest.TestCase):
    """AlertsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AlertsApi()

    def tearDown(self) -> None:
        pass

    def test_alerts_acknowledge_all_post(self) -> None:
        """Test case for alerts_acknowledge_all_post

        Confirms all visible alerts
        """
        pass

    def test_alerts_acknowledge_multiple_post(self) -> None:
        """Test case for alerts_acknowledge_multiple_post

        Acknowlegde multiple alerts
        """
        pass

    def test_alerts_alert_id_acknowledge_post(self) -> None:
        """Test case for alerts_alert_id_acknowledge_post

        Acknowledge an alert
        """
        pass

    def test_alerts_alert_id_annotate_post(self) -> None:
        """Test case for alerts_alert_id_annotate_post

        Annotate Alert
        """
        pass

    def test_alerts_alert_id_annotations_get(self) -> None:
        """Test case for alerts_alert_id_annotations_get

        Get annotations of an alert
        """
        pass

    def test_alerts_alert_id_attachments_attachment_id_get(self) -> None:
        """Test case for alerts_alert_id_attachments_attachment_id_get

        Gets a specified attachment of a specified alert.
        """
        pass

    def test_alerts_alert_id_attachments_get(self) -> None:
        """Test case for alerts_alert_id_attachments_get

        Get attachments of an alert
        """
        pass

    def test_alerts_alert_id_close_post(self) -> None:
        """Test case for alerts_alert_id_close_post

        Close an alert
        """
        pass

    def test_alerts_alert_id_get(self) -> None:
        """Test case for alerts_alert_id_get

        Get Alert
        """
        pass

    def test_alerts_alert_id_notifications_get(self) -> None:
        """Test case for alerts_alert_id_notifications_get

        Get alert notifications
        """
        pass

    def test_alerts_alert_id_overview_get(self) -> None:
        """Test case for alerts_alert_id_overview_get

        Get an overview alert.
        """
        pass

    def test_alerts_alert_id_undo_acknowledge_post(self) -> None:
        """Test case for alerts_alert_id_undo_acknowledge_post

        Undo the acknowledgement of an alert.
        """
        pass

    def test_alerts_alert_id_undo_close_post(self) -> None:
        """Test case for alerts_alert_id_undo_close_post

        Undo the closure of an alert.
        """
        pass

    def test_alerts_close_all_post(self) -> None:
        """Test case for alerts_close_all_post

        Close all acknowledged alerts.
        """
        pass

    def test_alerts_close_multiple_post(self) -> None:
        """Test case for alerts_close_multiple_post

        Close multiple alerts
        """
        pass

    def test_alerts_paged_post(self) -> None:
        """Test case for alerts_paged_post

        Gets alerts paged
        """
        pass

    def test_alerts_post(self) -> None:
        """Test case for alerts_post

        Trigger Alert
        """
        pass

    def test_alerts_report_get(self) -> None:
        """Test case for alerts_report_get

        Get Alert Report
        """
        pass

    def test_alerts_undo_acknowledge_multiple_post(self) -> None:
        """Test case for alerts_undo_acknowledge_multiple_post

        Queue undo of multiple acknowledgments.
        """
        pass

    def test_alerts_undo_close_multiple_post(self) -> None:
        """Test case for alerts_undo_close_multiple_post

        Withdraw closure of multiple alerts
        """
        pass


if __name__ == '__main__':
    unittest.main()
