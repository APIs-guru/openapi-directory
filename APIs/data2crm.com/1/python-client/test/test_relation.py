# coding: utf-8

"""
    Data2CRM.API

    <p>Make use of our in-depth documentation to get more information about the various functions of the service. Those willing to explore the mechanics of Data2CRM.API can test it in live regime using the short code samples.</p><p>Select CRM: <span id=\"docs-select-crm\" style=\"font-weight: bold\">Loading... please wait</span></p><p>Here are the API access keys:<br><b>X-API2CRM-USER-KEY</b>: <span id=\"docs-user-key\">e2a6379ab878ae7e58119d4ec842bf9c</span><br><b>X-API2CRM-APPLICATION-KEY</b>: <span id=\"docs-crm-key\">7ae5b17008fb414d84981191cf3b66a476ef8bef</span></p><p id=\"docs-crm-access\">The CRM access details are:<br><b>URL</b>: <a id=\"docs-crm-url\" href=\"https://login.salesforce.com/\" target=\"_blank\">https://login.salesforce.com/</a><br><b>E-mail / Username</b>: <span id=\"docs-crm-username\">developers.data2crm.api+1@magneticone.com</span><br><b>Password</b>: <span id=\"docs-crm-password\">data2crmapi123</span></p>

    The version of the OpenAPI document: 1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.relation import Relation

class TestRelation(unittest.TestCase):
    """Relation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Relation:
        """Test Relation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Relation`
        """
        model = Relation()
        if include_optional:
            return Relation(
                account = [
                    openapi_client.models.account_relation.AccountRelation(
                        entity = openapi_client.models.account_entity_relation.AccountEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                attachment = [
                    openapi_client.models.attachment_relation.AttachmentRelation(
                        entity = openapi_client.models.attachment_entity_relation.AttachmentEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                call = [
                    openapi_client.models.call_relation.CallRelation(
                        entity = openapi_client.models.call_entity_relation.CallEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                campaign = [
                    openapi_client.models.campaign_relation.CampaignRelation(
                        entity = openapi_client.models.campaign_entity_relation.CampaignEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                case = [
                    openapi_client.models.case_relation.CaseRelation(
                        entity = openapi_client.models.cases_entity_relation.CasesEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                comment = [
                    openapi_client.models.comment_relation.CommentRelation(
                        entity = openapi_client.models.comment_entity_relation.CommentEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                contact = [
                    openapi_client.models.contact_relation.ContactRelation(
                        entity = openapi_client.models.contact_entity_relation.ContactEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                email = [
                    openapi_client.models.email_relation.EmailRelation(
                        entity = openapi_client.models.email_entity_relation.EmailEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                event = [
                    openapi_client.models.event_relation.EventRelation(
                        entity = openapi_client.models.event_entity_relation.EventEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                invoice = [
                    openapi_client.models.invoice_relation.InvoiceRelation(
                        entity = openapi_client.models.invoice_entity_relation.InvoiceEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                invoice_item = [
                    openapi_client.models.invoice_item_relation.InvoiceItemRelation(
                        entity = openapi_client.models.invoice_item_entity_relation.InvoiceItemEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                lead = [
                    openapi_client.models.lead_relation.LeadRelation(
                        entity = openapi_client.models.lead_entity_relation.LeadEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                meeting = [
                    openapi_client.models.meeting_relation.MeetingRelation(
                        entity = openapi_client.models.meeting_entity_relation.MeetingEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                note = [
                    openapi_client.models.note_relation.NoteRelation(
                        entity = openapi_client.models.note_entity_relation.NoteEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                opportunity = [
                    openapi_client.models.opportunity_relation.OpportunityRelation(
                        entity = openapi_client.models.opportunity_entity_relation.OpportunityEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                opportunity_product = [
                    openapi_client.models.opportunity_product_relation.OpportunityProductRelation(
                        entity = openapi_client.models.opportunity_product_entity_relation.OpportunityProductEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                post = [
                    openapi_client.models.post_relation.PostRelation(
                        entity = openapi_client.models.post_entity_relation.PostEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                price_book = [
                    openapi_client.models.price_book_relation.PriceBookRelation(
                        entity = openapi_client.models.price_book_entity_relation.PriceBookEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                price_book_item = [
                    openapi_client.models.price_book_item_relation.PriceBookItemRelation(
                        entity = openapi_client.models.price_book_item_entity_relation.PriceBookItemEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                product = [
                    openapi_client.models.product_relation.ProductRelation(
                        entity = openapi_client.models.product_entity_relation.ProductEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                project = [
                    openapi_client.models.project_relation.ProjectRelation(
                        entity = openapi_client.models.project_entity_relation.ProjectEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                quote = [
                    openapi_client.models.quote_relation.QuoteRelation(
                        entity = openapi_client.models.quote_entity_relation.QuoteEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                quote_item = [
                    openapi_client.models.quote_item_relation.QuoteItemRelation(
                        entity = openapi_client.models.quote_item_entity_relation.QuoteItemEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                tag = [
                    openapi_client.models.tag_relation.TagRelation(
                        entity = openapi_client.models.tag_entity_relation.TagEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                task = [
                    openapi_client.models.task_relation.TaskRelation(
                        entity = openapi_client.models.task_entity_relation.TaskEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                ticket = [
                    openapi_client.models.ticket_relation.TicketRelation(
                        entity = openapi_client.models.ticket_entity_relation.TicketEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ],
                user = [
                    openapi_client.models.user_relation.UserRelation(
                        entity = openapi_client.models.user_entity_relation.UserEntityRelation(
                            id = '21312411', ), 
                        type = 'General', )
                    ]
            )
        else:
            return Relation(
        )
        """

    def testRelation(self):
        """Test Relation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
