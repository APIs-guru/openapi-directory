# coding: utf-8

"""
    Trello

    This document describes the REST API of Trello as published by Trello.com.  - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>  - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.boards import Boards

class TestBoards(unittest.TestCase):
    """Boards unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Boards:
        """Test Boards
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Boards`
        """
        model = Boards()
        if include_optional:
            return Boards(
                closed = '',
                desc = '',
                id_board_source = '',
                id_organization = '',
                keep_from_source = '',
                label_names_blue = '',
                label_names_green = '',
                label_names_orange = '',
                label_names_purple = '',
                label_names_red = '',
                label_names_yellow = '',
                name = '',
                power_ups = '',
                prefs_background = '',
                prefs_calendar_feed_enabled = '',
                prefs_card_aging = '',
                prefs_card_covers = '',
                prefs_comments = '',
                prefs_invitations = '',
                prefs_permission_level = '',
                prefs_self_join = '',
                prefs_voting = '',
                prefs_background = '',
                prefs_card_aging = '',
                prefs_card_covers = '',
                prefs_comments = '',
                prefs_invitations = '',
                prefs_permission_level = '',
                prefs_self_join = '',
                prefs_voting = '',
                subscribed = ''
            )
        else:
            return Boards(
        )
        """

    def testBoards(self):
        """Test Boards"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
