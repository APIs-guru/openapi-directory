# coding: utf-8

"""
    Neblio REST API Suite

    APIs for Interacting with NTP1 Tokens & The Neblio Blockchain

    The version of the OpenAPI document: 1.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_transaction_info_response import GetTransactionInfoResponse

class TestGetTransactionInfoResponse(unittest.TestCase):
    """GetTransactionInfoResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetTransactionInfoResponse:
        """Test GetTransactionInfoResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetTransactionInfoResponse`
        """
        model = GetTransactionInfoResponse()
        if include_optional:
            return GetTransactionInfoResponse(
                blockhash = '',
                blockheight = 1.337,
                blocktime = 1.337,
                confirmations = 1.337,
                fee = 1.337,
                hex = '',
                locktime = 1.337,
                time = 1.337,
                totalsent = 1.337,
                txid = '',
                version = 1.337,
                vin = [
                    openapi_client.models.get_transaction_info_response_vin_inner.getTransactionInfoResponse_vin_inner(
                        previous_output = openapi_client.models.get_transaction_info_response_vin_inner_previous_output.getTransactionInfoResponse_vin_inner_previousOutput(
                            addresses = [
                                ''
                                ], 
                            asm = '', 
                            hex = '', 
                            req_sigs = 1.337, 
                            type = '', ), 
                        script_sig = openapi_client.models.get_transaction_info_response_vin_inner_script_sig.getTransactionInfoResponse_vin_inner_scriptSig(
                            asm = '', 
                            hex = '', ), 
                        sequence = 1.337, 
                        tokens = [
                            openapi_client.models.get_transaction_info_response_vin_inner_tokens_inner.getTransactionInfoResponse_vin_inner_tokens_inner(
                                aggregation_policy = '', 
                                amount = 1.337, 
                                divisibility = 1.337, 
                                issue_txid = '', 
                                lock_status = True, 
                                token_id = '', )
                            ], 
                        txid = '', 
                        value = 1.337, 
                        vout = 1.337, )
                    ],
                vout = [
                    openapi_client.models.get_transaction_info_response_vout_inner.getTransactionInfoResponse_vout_inner(
                        blockheight = 1.337, 
                        n = 1.337, 
                        script_pub_key = openapi_client.models.get_transaction_info_response_vin_inner_previous_output.getTransactionInfoResponse_vin_inner_previousOutput(
                            addresses = [
                                ''
                                ], 
                            asm = '', 
                            hex = '', 
                            req_sigs = 1.337, 
                            type = '', ), 
                        tokens = [
                            openapi_client.models.get_transaction_info_response_vin_inner_tokens_inner.getTransactionInfoResponse_vin_inner_tokens_inner(
                                aggregation_policy = '', 
                                amount = 1.337, 
                                divisibility = 1.337, 
                                issue_txid = '', 
                                lock_status = True, 
                                token_id = '', )
                            ], 
                        used = True, 
                        used_blockheight = 1.337, 
                        used_txid = '', 
                        value = 1.337, )
                    ]
            )
        else:
            return GetTransactionInfoResponse(
        )
        """

    def testGetTransactionInfoResponse(self):
        """Test GetTransactionInfoResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
