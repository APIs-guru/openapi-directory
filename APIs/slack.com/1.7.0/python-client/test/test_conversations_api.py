# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.conversations_api import ConversationsApi


class TestConversationsApi(unittest.TestCase):
    """ConversationsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ConversationsApi()

    def tearDown(self) -> None:
        pass

    def test_conversations_archive(self) -> None:
        """Test case for conversations_archive

        """
        pass

    def test_conversations_close(self) -> None:
        """Test case for conversations_close

        """
        pass

    def test_conversations_create(self) -> None:
        """Test case for conversations_create

        """
        pass

    def test_conversations_history(self) -> None:
        """Test case for conversations_history

        """
        pass

    def test_conversations_info(self) -> None:
        """Test case for conversations_info

        """
        pass

    def test_conversations_invite(self) -> None:
        """Test case for conversations_invite

        """
        pass

    def test_conversations_join(self) -> None:
        """Test case for conversations_join

        """
        pass

    def test_conversations_kick(self) -> None:
        """Test case for conversations_kick

        """
        pass

    def test_conversations_leave(self) -> None:
        """Test case for conversations_leave

        """
        pass

    def test_conversations_list(self) -> None:
        """Test case for conversations_list

        """
        pass

    def test_conversations_mark(self) -> None:
        """Test case for conversations_mark

        """
        pass

    def test_conversations_members(self) -> None:
        """Test case for conversations_members

        """
        pass

    def test_conversations_open(self) -> None:
        """Test case for conversations_open

        """
        pass

    def test_conversations_rename(self) -> None:
        """Test case for conversations_rename

        """
        pass

    def test_conversations_replies(self) -> None:
        """Test case for conversations_replies

        """
        pass

    def test_conversations_set_purpose(self) -> None:
        """Test case for conversations_set_purpose

        """
        pass

    def test_conversations_set_topic(self) -> None:
        """Test case for conversations_set_topic

        """
        pass

    def test_conversations_unarchive(self) -> None:
        """Test case for conversations_unarchive

        """
        pass


if __name__ == '__main__':
    unittest.main()
