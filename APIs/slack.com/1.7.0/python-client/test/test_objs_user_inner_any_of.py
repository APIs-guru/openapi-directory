# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.objs_user_inner_any_of import ObjsUserInnerAnyOf

class TestObjsUserInnerAnyOf(unittest.TestCase):
    """ObjsUserInnerAnyOf unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ObjsUserInnerAnyOf:
        """Test ObjsUserInnerAnyOf
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ObjsUserInnerAnyOf`
        """
        model = ObjsUserInnerAnyOf()
        if include_optional:
            return ObjsUserInnerAnyOf(
                color = '62ECB0',
                deleted = True,
                enterprise_user = openapi_client.models.objs_enterprise_user.objs_enterprise_user(
                    enterprise_id = 'EQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    enterprise_name = '', 
                    id = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    is_admin = True, 
                    is_owner = True, 
                    teams = [
                        'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8'
                        ], ),
                has_2fa = True,
                id = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
                is_admin = True,
                is_app_user = True,
                is_bot = True,
                is_external = True,
                is_forgotten = True,
                is_invited_user = True,
                is_owner = True,
                is_primary_owner = True,
                is_restricted = True,
                is_stranger = True,
                is_ultra_restricted = True,
                locale = '',
                name = '',
                presence = '',
                profile = openapi_client.models.user_profile_object.User profile object(
                    always_active = True, 
                    api_app_id = 'AQ6ZGC', 
                    avatar_hash = '', 
                    bot_id = 'B8Q6ZGCKEC0L3O4GI7XH', 
                    display_name = '', 
                    display_name_normalized = '', 
                    email = '', 
                    fields = [
                        None
                        ], 
                    first_name = '', 
                    guest_expiration_ts = 56, 
                    guest_invited_by = '', 
                    image_1024 = '', 
                    image_192 = '', 
                    image_24 = '', 
                    image_32 = '', 
                    image_48 = '', 
                    image_512 = '', 
                    image_72 = '', 
                    image_original = '', 
                    is_app_user = True, 
                    is_custom_image = True, 
                    is_restricted = True, 
                    is_ultra_restricted = True, 
                    last_avatar_image_hash = '', 
                    last_name = '', 
                    memberships_count = 56, 
                    name = '', 
                    phone = '', 
                    pronouns = '', 
                    real_name = '', 
                    real_name_normalized = '', 
                    skype = '', 
                    status_default_emoji = '', 
                    status_default_text = '', 
                    status_default_text_canonical = '', 
                    status_emoji = '', 
                    status_expiration = 56, 
                    status_text = '', 
                    status_text_canonical = '', 
                    team = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    title = '', 
                    updated = 56, 
                    user_id = '', 
                    username = '', ),
                real_name = '',
                team = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0',
                team_id = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0',
                team_profile = openapi_client.models.objs_user_inner_any_of_team_profile.objs_user_inner_anyOf_team_profile(
                    fields = [
                        openapi_client.models.objs_team_profile_field.objs_team_profile_field(
                            field_name = '', 
                            hint = '', 
                            id = 'XCu2LC4aWwWL9Y864DZtaGRyyGFZKkkp4zca0U0gGbVVjddR9l98FWekFL9DLW', 
                            is_hidden = True, 
                            label = '', 
                            options = [
                                null
                                ], 
                            ordering = 1.337, 
                            possible_values = [
                                ''
                                ], 
                            type = 'text', )
                        ], ),
                two_factor_type = '',
                tz = [
                    null
                    ],
                tz_label = '',
                tz_offset = 1.337,
                updated = 1.337
            )
        else:
            return ObjsUserInnerAnyOf(
                id = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
                is_app_user = True,
                is_bot = True,
                name = '',
                profile = openapi_client.models.user_profile_object.User profile object(
                    always_active = True, 
                    api_app_id = 'AQ6ZGC', 
                    avatar_hash = '', 
                    bot_id = 'B8Q6ZGCKEC0L3O4GI7XH', 
                    display_name = '', 
                    display_name_normalized = '', 
                    email = '', 
                    fields = [
                        None
                        ], 
                    first_name = '', 
                    guest_expiration_ts = 56, 
                    guest_invited_by = '', 
                    image_1024 = '', 
                    image_192 = '', 
                    image_24 = '', 
                    image_32 = '', 
                    image_48 = '', 
                    image_512 = '', 
                    image_72 = '', 
                    image_original = '', 
                    is_app_user = True, 
                    is_custom_image = True, 
                    is_restricted = True, 
                    is_ultra_restricted = True, 
                    last_avatar_image_hash = '', 
                    last_name = '', 
                    memberships_count = 56, 
                    name = '', 
                    phone = '', 
                    pronouns = '', 
                    real_name = '', 
                    real_name_normalized = '', 
                    skype = '', 
                    status_default_emoji = '', 
                    status_default_text = '', 
                    status_default_text_canonical = '', 
                    status_emoji = '', 
                    status_expiration = 56, 
                    status_text = '', 
                    status_text_canonical = '', 
                    team = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    title = '', 
                    updated = 56, 
                    user_id = '', 
                    username = '', ),
                updated = 1.337,
        )
        """

    def testObjsUserInnerAnyOf(self):
        """Test ObjsUserInnerAnyOf"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
