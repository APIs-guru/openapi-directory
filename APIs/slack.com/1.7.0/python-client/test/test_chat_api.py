# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.chat_api import ChatApi


class TestChatApi(unittest.TestCase):
    """ChatApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ChatApi()

    def tearDown(self) -> None:
        pass

    def test_chat_delete(self) -> None:
        """Test case for chat_delete

        """
        pass

    def test_chat_delete_scheduled_message(self) -> None:
        """Test case for chat_delete_scheduled_message

        """
        pass

    def test_chat_get_permalink(self) -> None:
        """Test case for chat_get_permalink

        """
        pass

    def test_chat_me_message(self) -> None:
        """Test case for chat_me_message

        """
        pass

    def test_chat_post_ephemeral(self) -> None:
        """Test case for chat_post_ephemeral

        """
        pass

    def test_chat_post_message(self) -> None:
        """Test case for chat_post_message

        """
        pass

    def test_chat_schedule_message(self) -> None:
        """Test case for chat_schedule_message

        """
        pass

    def test_chat_scheduled_messages_list_0(self) -> None:
        """Test case for chat_scheduled_messages_list_0

        """
        pass

    def test_chat_unfurl(self) -> None:
        """Test case for chat_unfurl

        """
        pass

    def test_chat_update(self) -> None:
        """Test case for chat_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
