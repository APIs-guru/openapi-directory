# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.conversation_object_shares_inner import ConversationObjectSharesInner

class TestConversationObjectSharesInner(unittest.TestCase):
    """ConversationObjectSharesInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConversationObjectSharesInner:
        """Test ConversationObjectSharesInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConversationObjectSharesInner`
        """
        model = ConversationObjectSharesInner()
        if include_optional:
            return ConversationObjectSharesInner(
                accepted_user = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
                is_active = True,
                team = openapi_client.models.team_object.Team Object(
                    archived = True, 
                    avatar_base_url = '', 
                    created = 56, 
                    date_create = 56, 
                    deleted = True, 
                    description = '', 
                    discoverable = [
                        null
                        ], 
                    domain = '', 
                    email_domain = '', 
                    enterprise_id = 'EQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    enterprise_name = '', 
                    external_org_migrations = openapi_client.models.external_org_migrations.External Org Migrations(
                        current = [
                            openapi_client.models.objs_external_org_migrations_current_inner.objs_external_org_migrations_current_inner(
                                date_started = 56, 
                                team_id = '', )
                            ], 
                        date_updated = 56, ), 
                    has_compliance_export = True, 
                    icon = openapi_client.models.objs_icon.objs_icon(
                        image_102 = '', 
                        image_132 = '', 
                        image_230 = '', 
                        image_34 = '', 
                        image_44 = '', 
                        image_68 = '', 
                        image_88 = '', 
                        image_default = True, ), 
                    id = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    is_assigned = True, 
                    is_enterprise = 56, 
                    is_over_storage_limit = True, 
                    limit_ts = 56, 
                    locale = '', 
                    messages_count = 56, 
                    msg_edit_window_mins = 56, 
                    name = '', 
                    over_integrations_limit = True, 
                    over_storage_limit = True, 
                    pay_prod_cur = '', 
                    plan = '', 
                    primary_owner = openapi_client.models.objs_primary_owner.objs_primary_owner(
                        email = '', 
                        id = '', ), 
                    sso_provider = openapi_client.models.objs_team_sso_provider.objs_team_sso_provider(
                        label = '', 
                        name = '', 
                        type = '', ), ),
                user = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8'
            )
        else:
            return ConversationObjectSharesInner(
                is_active = True,
                team = openapi_client.models.team_object.Team Object(
                    archived = True, 
                    avatar_base_url = '', 
                    created = 56, 
                    date_create = 56, 
                    deleted = True, 
                    description = '', 
                    discoverable = [
                        null
                        ], 
                    domain = '', 
                    email_domain = '', 
                    enterprise_id = 'EQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    enterprise_name = '', 
                    external_org_migrations = openapi_client.models.external_org_migrations.External Org Migrations(
                        current = [
                            openapi_client.models.objs_external_org_migrations_current_inner.objs_external_org_migrations_current_inner(
                                date_started = 56, 
                                team_id = '', )
                            ], 
                        date_updated = 56, ), 
                    has_compliance_export = True, 
                    icon = openapi_client.models.objs_icon.objs_icon(
                        image_102 = '', 
                        image_132 = '', 
                        image_230 = '', 
                        image_34 = '', 
                        image_44 = '', 
                        image_68 = '', 
                        image_88 = '', 
                        image_default = True, ), 
                    id = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                    is_assigned = True, 
                    is_enterprise = 56, 
                    is_over_storage_limit = True, 
                    limit_ts = 56, 
                    locale = '', 
                    messages_count = 56, 
                    msg_edit_window_mins = 56, 
                    name = '', 
                    over_integrations_limit = True, 
                    over_storage_limit = True, 
                    pay_prod_cur = '', 
                    plan = '', 
                    primary_owner = openapi_client.models.objs_primary_owner.objs_primary_owner(
                        email = '', 
                        id = '', ), 
                    sso_provider = openapi_client.models.objs_team_sso_provider.objs_team_sso_provider(
                        label = '', 
                        name = '', 
                        type = '', ), ),
                user = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
        )
        """

    def testConversationObjectSharesInner(self):
        """Test ConversationObjectSharesInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
