# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.chat_scheduled_messages_list_schema import ChatScheduledMessagesListSchema

class TestChatScheduledMessagesListSchema(unittest.TestCase):
    """ChatScheduledMessagesListSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatScheduledMessagesListSchema:
        """Test ChatScheduledMessagesListSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatScheduledMessagesListSchema`
        """
        model = ChatScheduledMessagesListSchema()
        if include_optional:
            return ChatScheduledMessagesListSchema(
                ok = True,
                response_metadata = openapi_client.models.admin_conversations_get_teams_schema_response_metadata.admin_conversations_getTeams_schema_response_metadata(
                    next_cursor = '', ),
                scheduled_messages = [
                    openapi_client.models.chat_scheduled_messages_list_schema_scheduled_messages_inner.chat_scheduledMessages_list_schema_scheduled_messages_inner(
                        channel_id = 'CQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8', 
                        date_created = 56, 
                        id = 'QQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                        post_at = 56, 
                        text = '', )
                    ]
            )
        else:
            return ChatScheduledMessagesListSchema(
                ok = True,
                response_metadata = openapi_client.models.admin_conversations_get_teams_schema_response_metadata.admin_conversations_getTeams_schema_response_metadata(
                    next_cursor = '', ),
                scheduled_messages = [
                    openapi_client.models.chat_scheduled_messages_list_schema_scheduled_messages_inner.chat_scheduledMessages_list_schema_scheduled_messages_inner(
                        channel_id = 'CQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8', 
                        date_created = 56, 
                        id = 'QQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8IQ37LLR1PLNJKTGOS9HDVPWI4JDIXDXXML6JAJ4SWHSA0', 
                        post_at = 56, 
                        text = '', )
                    ],
        )
        """

    def testChatScheduledMessagesListSchema(self):
        """Test ChatScheduledMessagesListSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
