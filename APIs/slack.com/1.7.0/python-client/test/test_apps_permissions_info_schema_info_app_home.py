# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.apps_permissions_info_schema_info_app_home import AppsPermissionsInfoSchemaInfoAppHome

class TestAppsPermissionsInfoSchemaInfoAppHome(unittest.TestCase):
    """AppsPermissionsInfoSchemaInfoAppHome unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppsPermissionsInfoSchemaInfoAppHome:
        """Test AppsPermissionsInfoSchemaInfoAppHome
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppsPermissionsInfoSchemaInfoAppHome`
        """
        model = AppsPermissionsInfoSchemaInfoAppHome()
        if include_optional:
            return AppsPermissionsInfoSchemaInfoAppHome(
                resources = openapi_client.models.resources_in_info_from_apps/permissions/info.resources in info from apps.permissions.info(
                    excluded_ids = [
                        [
                            null
                            ]
                        ], 
                    ids = [
                        [
                            null
                            ]
                        ], 
                    wildcard = True, ),
                scopes = [
                    ''
                    ]
            )
        else:
            return AppsPermissionsInfoSchemaInfoAppHome(
        )
        """

    def testAppsPermissionsInfoSchemaInfoAppHome(self):
        """Test AppsPermissionsInfoSchemaInfoAppHome"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
