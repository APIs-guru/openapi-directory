# coding: utf-8

"""
    Slack Web API

    One way to interact with the Slack platform is its HTTP RPC-based Web API, a collection of methods requiring OAuth 2.0-based user, bot, or workspace tokens blessed with related OAuth scopes.

    The version of the OpenAPI document: 1.7.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.chat_schedule_message_success_schema_message import ChatScheduleMessageSuccessSchemaMessage

class TestChatScheduleMessageSuccessSchemaMessage(unittest.TestCase):
    """ChatScheduleMessageSuccessSchemaMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChatScheduleMessageSuccessSchemaMessage:
        """Test ChatScheduleMessageSuccessSchemaMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChatScheduleMessageSuccessSchemaMessage`
        """
        model = ChatScheduleMessageSuccessSchemaMessage()
        if include_optional:
            return ChatScheduleMessageSuccessSchemaMessage(
                bot_id = 'B8Q6ZGCKEC0L3O4GI7XH',
                bot_profile = openapi_client.models.bot_profile_object.Bot Profile Object(
                    app_id = 'A8', 
                    deleted = True, 
                    icons = openapi_client.models.bots_info_schema_bot_icons.bots_info_schema_bot_icons(
                        image_36 = '', 
                        image_48 = '', 
                        image_72 = '', ), 
                    id = 'B8Q6ZGCKEC0L3O4GI7XH', 
                    name = '', 
                    team_id = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8', 
                    updated = 56, ),
                team = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
                text = '',
                type = '',
                user = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
                username = ''
            )
        else:
            return ChatScheduleMessageSuccessSchemaMessage(
                bot_id = 'B8Q6ZGCKEC0L3O4GI7XH',
                team = 'TQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
                text = '',
                type = '',
                user = 'WQ6ZGCKEC0L3O4GI7XHK0JCY075UA034PGMUG8',
        )
        """

    def testChatScheduleMessageSuccessSchemaMessage(self):
        """Test ChatScheduleMessageSuccessSchemaMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
