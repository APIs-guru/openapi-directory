# coding: utf-8

"""
    Weatherbit - Interactive Swagger UI Documentation

    This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictFloat, StrictInt, StrictStr, field_validator
from typing import Optional, Union
from typing_extensions import Annotated
from openapi_client.models.current_obs_group import CurrentObsGroup

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class CurrentWeatherDataApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def currentcitiescities_get(
        self,
        cities: Annotated[StrictStr, Field(description="Comma separated list of City ID's. Example: 4487042, 4494942, 4504871")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a group of observations given a list of cities

        Returns a group of Current Observations - Given a list of City IDs. 

        :param cities: Comma separated list of City ID's. Example: 4487042, 4494942, 4504871 (required)
        :type cities: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcitiescities_get_serialize(
            cities=cities,
            key=key,
            units=units,
            marine=marine,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentcitiescities_get_with_http_info(
        self,
        cities: Annotated[StrictStr, Field(description="Comma separated list of City ID's. Example: 4487042, 4494942, 4504871")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a group of observations given a list of cities

        Returns a group of Current Observations - Given a list of City IDs. 

        :param cities: Comma separated list of City ID's. Example: 4487042, 4494942, 4504871 (required)
        :type cities: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcitiescities_get_serialize(
            cities=cities,
            key=key,
            units=units,
            marine=marine,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentcitiescities_get_without_preload_content(
        self,
        cities: Annotated[StrictStr, Field(description="Comma separated list of City ID's. Example: 4487042, 4494942, 4504871")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a group of observations given a list of cities

        Returns a group of Current Observations - Given a list of City IDs. 

        :param cities: Comma separated list of City ID's. Example: 4487042, 4494942, 4504871 (required)
        :type cities: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcitiescities_get_serialize(
            cities=cities,
            key=key,
            units=units,
            marine=marine,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentcitiescities_get_serialize(
        self,
        cities,
        key,
        units,
        marine,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if cities is not None:
            _path_params['cities'] = cities
        # process the query parameters
        if units is not None:
            
            _query_params.append(('units', units))
            
        if marine is not None:
            
            _query_params.append(('marine', marine))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?cities={cities}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentcity_idcity_id_get(
        self,
        city_id: Annotated[StrictStr, Field(description="City ID. Example: 4487042")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a current observation by city id.

        Returns current weather observation - Given a City ID. 

        :param city_id: City ID. Example: 4487042 (required)
        :type city_id: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcity_idcity_id_get_serialize(
            city_id=city_id,
            key=key,
            units=units,
            include=include,
            marine=marine,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentcity_idcity_id_get_with_http_info(
        self,
        city_id: Annotated[StrictStr, Field(description="City ID. Example: 4487042")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a current observation by city id.

        Returns current weather observation - Given a City ID. 

        :param city_id: City ID. Example: 4487042 (required)
        :type city_id: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcity_idcity_id_get_serialize(
            city_id=city_id,
            key=key,
            units=units,
            include=include,
            marine=marine,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentcity_idcity_id_get_without_preload_content(
        self,
        city_id: Annotated[StrictStr, Field(description="City ID. Example: 4487042")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a current observation by city id.

        Returns current weather observation - Given a City ID. 

        :param city_id: City ID. Example: 4487042 (required)
        :type city_id: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcity_idcity_id_get_serialize(
            city_id=city_id,
            key=key,
            units=units,
            include=include,
            marine=marine,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentcity_idcity_id_get_serialize(
        self,
        city_id,
        key,
        units,
        include,
        marine,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if city_id is not None:
            _path_params['city_id'] = city_id
        # process the query parameters
        if units is not None:
            
            _query_params.append(('units', units))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if marine is not None:
            
            _query_params.append(('marine', marine))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?city_id={city_id}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentcitycitycountrycountry_get(
        self,
        city: Annotated[StrictStr, Field(description="City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR")],
        country: Annotated[StrictStr, Field(description="Country Code (2 letter).")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        state: Annotated[Optional[StrictStr], Field(description="Full name of state.")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a Current Observation - Given City and/or State, Country.

        Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.

        :param city: City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR (required)
        :type city: str
        :param country: Country Code (2 letter). (required)
        :type country: str
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param state: Full name of state.
        :type state: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcitycitycountrycountry_get_serialize(
            city=city,
            country=country,
            key=key,
            include=include,
            state=state,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentcitycitycountrycountry_get_with_http_info(
        self,
        city: Annotated[StrictStr, Field(description="City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR")],
        country: Annotated[StrictStr, Field(description="Country Code (2 letter).")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        state: Annotated[Optional[StrictStr], Field(description="Full name of state.")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a Current Observation - Given City and/or State, Country.

        Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.

        :param city: City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR (required)
        :type city: str
        :param country: Country Code (2 letter). (required)
        :type country: str
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param state: Full name of state.
        :type state: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcitycitycountrycountry_get_serialize(
            city=city,
            country=country,
            key=key,
            include=include,
            state=state,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentcitycitycountrycountry_get_without_preload_content(
        self,
        city: Annotated[StrictStr, Field(description="City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR")],
        country: Annotated[StrictStr, Field(description="Country Code (2 letter).")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        state: Annotated[Optional[StrictStr], Field(description="Full name of state.")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a Current Observation - Given City and/or State, Country.

        Returns a Current Observation - Given a city in the format of City,ST or City. The state, and country parameters can be provided to make the search more accurate.

        :param city: City search.. Example - &city=Raleigh,NC or &city=Berlin,DE or city=Paris&country=FR (required)
        :type city: str
        :param country: Country Code (2 letter). (required)
        :type country: str
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param state: Full name of state.
        :type state: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentcitycitycountrycountry_get_serialize(
            city=city,
            country=country,
            key=key,
            include=include,
            state=state,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentcitycitycountrycountry_get_serialize(
        self,
        city,
        country,
        key,
        include,
        state,
        marine,
        units,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if city is not None:
            _path_params['city'] = city
        if country is not None:
            _path_params['country'] = country
        # process the query parameters
        if include is not None:
            
            _query_params.append(('include', include))
            
        if state is not None:
            
            _query_params.append(('state', state))
            
        if marine is not None:
            
            _query_params.append(('marine', marine))
            
        if units is not None:
            
            _query_params.append(('units', units))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?city={city}&country={country}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentlatlatlonlon_get(
        self,
        lat: Annotated[Union[StrictFloat, StrictInt], Field(description="Latitude component of location.")],
        lon: Annotated[Union[StrictFloat, StrictInt], Field(description="Longitude component of location.")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a Current Observation - Given a lat/lon.

        Returns a Current Observation - given a lat, and a lon.

        :param lat: Latitude component of location. (required)
        :type lat: float
        :param lon: Longitude component of location. (required)
        :type lon: float
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentlatlatlonlon_get_serialize(
            lat=lat,
            lon=lon,
            key=key,
            include=include,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentlatlatlonlon_get_with_http_info(
        self,
        lat: Annotated[Union[StrictFloat, StrictInt], Field(description="Latitude component of location.")],
        lon: Annotated[Union[StrictFloat, StrictInt], Field(description="Longitude component of location.")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a Current Observation - Given a lat/lon.

        Returns a Current Observation - given a lat, and a lon.

        :param lat: Latitude component of location. (required)
        :type lat: float
        :param lon: Longitude component of location. (required)
        :type lon: float
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentlatlatlonlon_get_serialize(
            lat=lat,
            lon=lon,
            key=key,
            include=include,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentlatlatlonlon_get_without_preload_content(
        self,
        lat: Annotated[Union[StrictFloat, StrictInt], Field(description="Latitude component of location.")],
        lon: Annotated[Union[StrictFloat, StrictInt], Field(description="Longitude component of location.")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a Current Observation - Given a lat/lon.

        Returns a Current Observation - given a lat, and a lon.

        :param lat: Latitude component of location. (required)
        :type lat: float
        :param lon: Longitude component of location. (required)
        :type lon: float
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentlatlatlonlon_get_serialize(
            lat=lat,
            lon=lon,
            key=key,
            include=include,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentlatlatlonlon_get_serialize(
        self,
        lat,
        lon,
        key,
        include,
        marine,
        units,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if lat is not None:
            _path_params['lat'] = lat
        if lon is not None:
            _path_params['lon'] = lon
        # process the query parameters
        if include is not None:
            
            _query_params.append(('include', include))
            
        if marine is not None:
            
            _query_params.append(('marine', marine))
            
        if units is not None:
            
            _query_params.append(('units', units))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?lat={lat}&lon={lon}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentpointspoints_get(
        self,
        points: Annotated[StrictStr, Field(description="Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5)")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a group of observations given a list of points in the format (lat1, lon1), (lat2, lon2), (latN, lonN), ...

        Returns a group of Current Observations - Given a list of points (lat1, lon1), (lat2, lon2), (latN, lonN), ...

        :param points: Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
        :type points: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentpointspoints_get_serialize(
            points=points,
            key=key,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentpointspoints_get_with_http_info(
        self,
        points: Annotated[StrictStr, Field(description="Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5)")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a group of observations given a list of points in the format (lat1, lon1), (lat2, lon2), (latN, lonN), ...

        Returns a group of Current Observations - Given a list of points (lat1, lon1), (lat2, lon2), (latN, lonN), ...

        :param points: Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
        :type points: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentpointspoints_get_serialize(
            points=points,
            key=key,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentpointspoints_get_without_preload_content(
        self,
        points: Annotated[StrictStr, Field(description="Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5)")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a group of observations given a list of points in the format (lat1, lon1), (lat2, lon2), (latN, lonN), ...

        Returns a group of Current Observations - Given a list of points (lat1, lon1), (lat2, lon2), (latN, lonN), ...

        :param points: Comma separated list of points. Example: (35.5, -75.5),(45, 65),(45.12, -130.5) (required)
        :type points: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentpointspoints_get_serialize(
            points=points,
            key=key,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentpointspoints_get_serialize(
        self,
        points,
        key,
        units,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if points is not None:
            _path_params['points'] = points
        # process the query parameters
        if units is not None:
            
            _query_params.append(('units', units))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?points={points}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentpostal_codepostal_code_get(
        self,
        postal_code: Annotated[StrictStr, Field(description="Postal Code. Example: 28546")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        country: Annotated[Optional[StrictStr], Field(description="Country Code (2 letter).")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a current observation by postal code.

        Returns current weather observation - Given a Postal Code. 

        :param postal_code: Postal Code. Example: 28546 (required)
        :type postal_code: str
        :param key: Your registered API key. (required)
        :type key: str
        :param country: Country Code (2 letter).
        :type country: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentpostal_codepostal_code_get_serialize(
            postal_code=postal_code,
            key=key,
            country=country,
            include=include,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentpostal_codepostal_code_get_with_http_info(
        self,
        postal_code: Annotated[StrictStr, Field(description="Postal Code. Example: 28546")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        country: Annotated[Optional[StrictStr], Field(description="Country Code (2 letter).")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a current observation by postal code.

        Returns current weather observation - Given a Postal Code. 

        :param postal_code: Postal Code. Example: 28546 (required)
        :type postal_code: str
        :param key: Your registered API key. (required)
        :type key: str
        :param country: Country Code (2 letter).
        :type country: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentpostal_codepostal_code_get_serialize(
            postal_code=postal_code,
            key=key,
            country=country,
            include=include,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentpostal_codepostal_code_get_without_preload_content(
        self,
        postal_code: Annotated[StrictStr, Field(description="Postal Code. Example: 28546")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        country: Annotated[Optional[StrictStr], Field(description="Country Code (2 letter).")] = None,
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        marine: Annotated[Optional[StrictStr], Field(description="Marine stations only (buoys, oil platforms, etc)")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback - Example - callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a current observation by postal code.

        Returns current weather observation - Given a Postal Code. 

        :param postal_code: Postal Code. Example: 28546 (required)
        :type postal_code: str
        :param key: Your registered API key. (required)
        :type key: str
        :param country: Country Code (2 letter).
        :type country: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param marine: Marine stations only (buoys, oil platforms, etc)
        :type marine: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback - Example - callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentpostal_codepostal_code_get_serialize(
            postal_code=postal_code,
            key=key,
            country=country,
            include=include,
            marine=marine,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentpostal_codepostal_code_get_serialize(
        self,
        postal_code,
        key,
        country,
        include,
        marine,
        units,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if postal_code is not None:
            _path_params['postal_code'] = postal_code
        # process the query parameters
        if country is not None:
            
            _query_params.append(('country', country))
            
        if include is not None:
            
            _query_params.append(('include', include))
            
        if marine is not None:
            
            _query_params.append(('marine', marine))
            
        if units is not None:
            
            _query_params.append(('units', units))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?postal_code={postal_code}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentstationsstations_get(
        self,
        stations: Annotated[StrictStr, Field(description="Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a group of observations given a list of stations

        Returns a group of Current Observations - Given a list of Station Call IDs. 

        :param stations: Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY (required)
        :type stations: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentstationsstations_get_serialize(
            stations=stations,
            key=key,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentstationsstations_get_with_http_info(
        self,
        stations: Annotated[StrictStr, Field(description="Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a group of observations given a list of stations

        Returns a group of Current Observations - Given a list of Station Call IDs. 

        :param stations: Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY (required)
        :type stations: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentstationsstations_get_serialize(
            stations=stations,
            key=key,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentstationsstations_get_without_preload_content(
        self,
        stations: Annotated[StrictStr, Field(description="Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a group of observations given a list of stations

        Returns a group of Current Observations - Given a list of Station Call IDs. 

        :param stations: Comma separated list of Station Call ID's. Example: KRDU,KBFI,KVNY (required)
        :type stations: str
        :param key: Your registered API key. (required)
        :type key: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentstationsstations_get_serialize(
            stations=stations,
            key=key,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentstationsstations_get_serialize(
        self,
        stations,
        key,
        units,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if stations is not None:
            _path_params['stations'] = stations
        # process the query parameters
        if units is not None:
            
            _query_params.append(('units', units))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?stations={stations}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def currentstationstation_get(
        self,
        station: Annotated[StrictStr, Field(description="Station Call ID.")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> CurrentObsGroup:
        """Returns a Current Observation. - Given a station ID.

        Returns a Current Observation - Given a station ID.

        :param station: Station Call ID. (required)
        :type station: str
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentstationstation_get_serialize(
            station=station,
            key=key,
            include=include,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def currentstationstation_get_with_http_info(
        self,
        station: Annotated[StrictStr, Field(description="Station Call ID.")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[CurrentObsGroup]:
        """Returns a Current Observation. - Given a station ID.

        Returns a Current Observation - Given a station ID.

        :param station: Station Call ID. (required)
        :type station: str
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentstationstation_get_serialize(
            station=station,
            key=key,
            include=include,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def currentstationstation_get_without_preload_content(
        self,
        station: Annotated[StrictStr, Field(description="Station Call ID.")],
        key: Annotated[StrictStr, Field(description="Your registered API key.")],
        include: Annotated[Optional[StrictStr], Field(description="Include 1 hour - minutely forecast in the response")] = None,
        units: Annotated[Optional[StrictStr], Field(description="Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>")] = None,
        lang: Annotated[Optional[StrictStr], Field(description="Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>")] = None,
        param_callback: Annotated[Optional[StrictStr], Field(description="Wraps return in jsonp callback. Example: callback=func")] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Returns a Current Observation. - Given a station ID.

        Returns a Current Observation - Given a station ID.

        :param station: Station Call ID. (required)
        :type station: str
        :param key: Your registered API key. (required)
        :type key: str
        :param include: Include 1 hour - minutely forecast in the response
        :type include: str
        :param units: Convert to units. Default Metric See <a target='blank' href='/api/requests'>units field description</a>
        :type units: str
        :param lang: Language (Default: English) See <a target='blank' href='/api/requests'>language field description</a>
        :type lang: str
        :param param_callback: Wraps return in jsonp callback. Example: callback=func
        :type param_callback: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._currentstationstation_get_serialize(
            station=station,
            key=key,
            include=include,
            units=units,
            lang=lang,
            param_callback=param_callback,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "CurrentObsGroup",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _currentstationstation_get_serialize(
        self,
        station,
        key,
        include,
        units,
        lang,
        param_callback,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if station is not None:
            _path_params['station'] = station
        # process the query parameters
        if include is not None:
            
            _query_params.append(('include', include))
            
        if units is not None:
            
            _query_params.append(('units', units))
            
        if lang is not None:
            
            _query_params.append(('lang', lang))
            
        if param_callback is not None:
            
            _query_params.append(('callback', param_callback))
            
        if key is not None:
            
            _query_params.append(('key', key))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/current?station={station}',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


