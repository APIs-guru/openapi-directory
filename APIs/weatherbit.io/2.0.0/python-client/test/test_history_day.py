# coding: utf-8

"""
    Weatherbit - Interactive Swagger UI Documentation

    This an interactive version of the documentation for the Weatherbit API.  The base URL for the API is [http://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/) or [https://api.weatherbit.io/v2.0/](http://api.weatherbit.io/v2.0/). Below is the Swagger UI documentation for the API. All API requests require the `key` parameter.        An Example for a 48 hour forecast for London, UK would be `http://api.weatherbit.io/v2.0/forecast/hourly?lat=51.5072`&`lon=-0.1276`. See our [Weather API description page](https://www.weatherbit.io/api) for the full documentation.

    The version of the OpenAPI document: 2.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.history_day import HistoryDay

class TestHistoryDay(unittest.TestCase):
    """HistoryDay unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HistoryDay:
        """Test HistoryDay
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HistoryDay`
        """
        model = HistoryDay()
        if include_optional:
            return HistoryDay(
                city_name = 'Seattle',
                country_code = 'US',
                data = [
                    openapi_client.models.history_day_obj.HistoryDayObj(
                        datetime = '2015-01-03', 
                        dewpt = -1.5, 
                        dhi = 125, 
                        dni = 125, 
                        ghi = 125, 
                        max_temp = 1.5, 
                        max_temp_ts = 1501970816, 
                        max_uv = 6.0, 
                        max_wind_dir = 325, 
                        max_wind_spd = 19.98, 
                        max_wind_spd_ts = 1501970516, 
                        min_temp = 11.7, 
                        min_temp_ts = 1501970516, 
                        precip = 3.0, 
                        precip_gpm = 3.0, 
                        pres = 885.1, 
                        revision_status = 'final', 
                        rh = 85, 
                        slp = 1020.1, 
                        snow = 30.0, 
                        snow_depth = 60.0, 
                        t_dhi = 4500, 
                        t_dni = 4500, 
                        t_ghi = 4500, 
                        temp = 1.0, 
                        ts = 1501970516, 
                        wind_dir = 325, 
                        wind_gust_spd = 40.98, 
                        wind_spd = 14.98, )
                    ],
                lat = '47.61',
                lon = '-122.33',
                sources = [
                    '12345-89083'
                    ],
                state_code = 'WA',
                timezone = 'America/New_York'
            )
        else:
            return HistoryDay(
        )
        """

    def testHistoryDay(self):
        """Test HistoryDay"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
