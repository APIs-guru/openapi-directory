# coding: utf-8

"""
    Clever-Cloud API

    Public API for managing Clever-Cloud data and products

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.wannabe_addon_provider_api import WannabeAddonProviderAPI

class TestWannabeAddonProviderAPI(unittest.TestCase):
    """WannabeAddonProviderAPI unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WannabeAddonProviderAPI:
        """Test WannabeAddonProviderAPI
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WannabeAddonProviderAPI`
        """
        model = WannabeAddonProviderAPI()
        if include_optional:
            return WannabeAddonProviderAPI(
                config_vars = [
                    ''
                    ],
                password = '',
                production = openapi_client.models.wannabe_addon_provider_api_url.WannabeAddonProviderAPIUrl(
                    base_url = '', 
                    sso_url = '', ),
                regions = [
                    ''
                    ],
                sso_salt = '',
                test = openapi_client.models.wannabe_addon_provider_api_url.WannabeAddonProviderAPIUrl(
                    base_url = '', 
                    sso_url = '', )
            )
        else:
            return WannabeAddonProviderAPI(
                config_vars = [
                    ''
                    ],
                password = '',
                sso_salt = '',
        )
        """

    def testWannabeAddonProviderAPI(self):
        """Test WannabeAddonProviderAPI"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
