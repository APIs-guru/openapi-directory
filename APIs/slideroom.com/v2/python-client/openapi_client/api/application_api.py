# coding: utf-8

"""
    SlideRoom API V2

    SlideRoom provides a RESTful API for exporting data out of your organizations SlideRoom account.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501

import warnings
from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from pydantic import Field, StrictBool, StrictInt, StrictStr, field_validator
from typing import Dict, List, Optional
from typing_extensions import Annotated
from openapi_client.models.request_application_export_result_v2 import RequestApplicationExportResultV2

from openapi_client.api_client import ApiClient, RequestSerialized
from openapi_client.api_response import ApiResponse
from openapi_client.rest import RESTResponseType


class ApplicationApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client


    @validate_call
    def application_delete_attributes_v2(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        name: Annotated[StrictStr, Field(description="The name of the attribute to be deleted.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> str:
        """Deletes a custom attribute for an application.


        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param name: The name of the attribute to be deleted. (required)
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_delete_attributes_v2_serialize(
            application_id=application_id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "str",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_delete_attributes_v2_with_http_info(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        name: Annotated[StrictStr, Field(description="The name of the attribute to be deleted.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[str]:
        """Deletes a custom attribute for an application.


        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param name: The name of the attribute to be deleted. (required)
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_delete_attributes_v2_serialize(
            application_id=application_id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "str",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_delete_attributes_v2_without_preload_content(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        name: Annotated[StrictStr, Field(description="The name of the attribute to be deleted.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Deletes a custom attribute for an application.


        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param name: The name of the attribute to be deleted. (required)
        :type name: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_delete_attributes_v2_serialize(
            application_id=application_id,
            name=name,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "str",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_delete_attributes_v2_serialize(
        self,
        application_id,
        name,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if application_id is not None:
            _path_params['applicationId'] = application_id
        # process the query parameters
        if name is not None:
            
            _query_params.append(('name', name))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/json', 
                    'application/xml', 
                    'text/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='DELETE',
            resource_path='/api/v2/application/{applicationId}/attributes',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_get_attribute_names_v2(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> List[str]:
        """Gets the custom application attributes used by the organization.


        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_get_attribute_names_v2_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[str]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_get_attribute_names_v2_with_http_info(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[List[str]]:
        """Gets the custom application attributes used by the organization.


        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_get_attribute_names_v2_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[str]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_get_attribute_names_v2_without_preload_content(
        self,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the custom application attributes used by the organization.


        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_get_attribute_names_v2_serialize(
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "List[str]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_get_attribute_names_v2_serialize(
        self,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/json', 
                    'application/xml', 
                    'text/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/application/attributes/names',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_get_attributes_v2(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> Dict[str, str]:
        """Gets the custom attributes for an application.


        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_get_attributes_v2_serialize(
            application_id=application_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Dict[str, str]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_get_attributes_v2_with_http_info(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[Dict[str, str]]:
        """Gets the custom attributes for an application.


        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_get_attributes_v2_serialize(
            application_id=application_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Dict[str, str]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_get_attributes_v2_without_preload_content(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Gets the custom attributes for an application.


        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_get_attributes_v2_serialize(
            application_id=application_id,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "Dict[str, str]",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_get_attributes_v2_serialize(
        self,
        application_id,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if application_id is not None:
            _path_params['applicationId'] = application_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/json', 
                    'application/xml', 
                    'text/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='GET',
            resource_path='/api/v2/application/{applicationId}/attributes',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_post_attributes_v2(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        data: Annotated[Dict[str, StrictStr], Field(description="The name/value pairs of the attributes.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> str:
        """Updates the custom attributes for an application. API Import is available in the Advanced Plan.

        This method only adds or updates attributes. Null values will be updated as nulls, but not deleted.

        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param data: The name/value pairs of the attributes. (required)
        :type data: Dict[str, str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_post_attributes_v2_serialize(
            application_id=application_id,
            data=data,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "str",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_post_attributes_v2_with_http_info(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        data: Annotated[Dict[str, StrictStr], Field(description="The name/value pairs of the attributes.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[str]:
        """Updates the custom attributes for an application. API Import is available in the Advanced Plan.

        This method only adds or updates attributes. Null values will be updated as nulls, but not deleted.

        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param data: The name/value pairs of the attributes. (required)
        :type data: Dict[str, str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_post_attributes_v2_serialize(
            application_id=application_id,
            data=data,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "str",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_post_attributes_v2_without_preload_content(
        self,
        application_id: Annotated[StrictStr, Field(description="The ID of the application.")],
        data: Annotated[Dict[str, StrictStr], Field(description="The name/value pairs of the attributes.")],
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Updates the custom attributes for an application. API Import is available in the Advanced Plan.

        This method only adds or updates attributes. Null values will be updated as nulls, but not deleted.

        :param application_id: The ID of the application. (required)
        :type application_id: str
        :param data: The name/value pairs of the attributes. (required)
        :type data: Dict[str, str]
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_post_attributes_v2_serialize(
            application_id=application_id,
            data=data,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "str",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_post_attributes_v2_serialize(
        self,
        application_id,
        data,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if application_id is not None:
            _path_params['applicationId'] = application_id
        # process the query parameters
        # process the header parameters
        # process the form parameters
        # process the body parameter
        if data is not None:
            _body_params = data


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/json', 
                    'application/xml', 
                    'text/xml'
                ]
            )

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params['Content-Type'] = _content_type
        else:
            _default_content_type = (
                self.api_client.select_header_content_type(
                    [
                        'application/json', 
                        'text/json', 
                        'application/xml', 
                        'text/xml', 
                        'application/x-www-form-urlencoded'
                    ]
                )
            )
            if _default_content_type is not None:
                _header_params['Content-Type'] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/v2/application/{applicationId}/attributes',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_request_export_by_application_id_v2(
        self,
        application_id: Annotated[StrictStr, Field(description="The id of the application to export")],
        format: Optional[StrictStr] = None,
        round_type: Optional[StrictStr] = None,
        round_name: Optional[StrictStr] = None,
        tab_export: Optional[StrictStr] = None,
        pdf_include_forms: Optional[StrictBool] = None,
        pdf_include_references: Optional[StrictBool] = None,
        pdf_include_media: Optional[StrictBool] = None,
        pdf_include_applicant_attachments: Optional[StrictBool] = None,
        pdf_include_organization_attachments: Optional[StrictBool] = None,
        pdf_include_ratings: Optional[StrictBool] = None,
        pdf_include_full_page_media: Optional[StrictBool] = None,
        pdf_include_highlights: Optional[StrictBool] = None,
        pdf_include_comments: Optional[StrictBool] = None,
        pdf_include_common_app: Optional[StrictBool] = None,
        zip_original_media: Optional[StrictBool] = None,
        zip_include_forms: Optional[StrictBool] = None,
        zip_include_references: Optional[StrictBool] = None,
        zip_include_media: Optional[StrictBool] = None,
        zip_include_applicant_attachments: Optional[StrictBool] = None,
        zip_include_organization_attachments: Optional[StrictBool] = None,
        zip_include_ratings: Optional[StrictBool] = None,
        zip_include_comments: Optional[StrictBool] = None,
        zip_include_common_app: Optional[StrictBool] = None,
        delivery_account: Optional[StrictStr] = None,
        delivery_folder: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RequestApplicationExportResultV2:
        """Requests the generation of a single application export file (tabular, pdf, zip).

        Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.

        :param application_id: The id of the application to export (required)
        :type application_id: str
        :param format:
        :type format: str
        :param round_type:
        :type round_type: str
        :param round_name:
        :type round_name: str
        :param tab_export:
        :type tab_export: str
        :param pdf_include_forms:
        :type pdf_include_forms: bool
        :param pdf_include_references:
        :type pdf_include_references: bool
        :param pdf_include_media:
        :type pdf_include_media: bool
        :param pdf_include_applicant_attachments:
        :type pdf_include_applicant_attachments: bool
        :param pdf_include_organization_attachments:
        :type pdf_include_organization_attachments: bool
        :param pdf_include_ratings:
        :type pdf_include_ratings: bool
        :param pdf_include_full_page_media:
        :type pdf_include_full_page_media: bool
        :param pdf_include_highlights:
        :type pdf_include_highlights: bool
        :param pdf_include_comments:
        :type pdf_include_comments: bool
        :param pdf_include_common_app:
        :type pdf_include_common_app: bool
        :param zip_original_media:
        :type zip_original_media: bool
        :param zip_include_forms:
        :type zip_include_forms: bool
        :param zip_include_references:
        :type zip_include_references: bool
        :param zip_include_media:
        :type zip_include_media: bool
        :param zip_include_applicant_attachments:
        :type zip_include_applicant_attachments: bool
        :param zip_include_organization_attachments:
        :type zip_include_organization_attachments: bool
        :param zip_include_ratings:
        :type zip_include_ratings: bool
        :param zip_include_comments:
        :type zip_include_comments: bool
        :param zip_include_common_app:
        :type zip_include_common_app: bool
        :param delivery_account:
        :type delivery_account: str
        :param delivery_folder:
        :type delivery_folder: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_request_export_by_application_id_v2_serialize(
            application_id=application_id,
            format=format,
            round_type=round_type,
            round_name=round_name,
            tab_export=tab_export,
            pdf_include_forms=pdf_include_forms,
            pdf_include_references=pdf_include_references,
            pdf_include_media=pdf_include_media,
            pdf_include_applicant_attachments=pdf_include_applicant_attachments,
            pdf_include_organization_attachments=pdf_include_organization_attachments,
            pdf_include_ratings=pdf_include_ratings,
            pdf_include_full_page_media=pdf_include_full_page_media,
            pdf_include_highlights=pdf_include_highlights,
            pdf_include_comments=pdf_include_comments,
            pdf_include_common_app=pdf_include_common_app,
            zip_original_media=zip_original_media,
            zip_include_forms=zip_include_forms,
            zip_include_references=zip_include_references,
            zip_include_media=zip_include_media,
            zip_include_applicant_attachments=zip_include_applicant_attachments,
            zip_include_organization_attachments=zip_include_organization_attachments,
            zip_include_ratings=zip_include_ratings,
            zip_include_comments=zip_include_comments,
            zip_include_common_app=zip_include_common_app,
            delivery_account=delivery_account,
            delivery_folder=delivery_folder,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "RequestApplicationExportResultV2",
            '400': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_request_export_by_application_id_v2_with_http_info(
        self,
        application_id: Annotated[StrictStr, Field(description="The id of the application to export")],
        format: Optional[StrictStr] = None,
        round_type: Optional[StrictStr] = None,
        round_name: Optional[StrictStr] = None,
        tab_export: Optional[StrictStr] = None,
        pdf_include_forms: Optional[StrictBool] = None,
        pdf_include_references: Optional[StrictBool] = None,
        pdf_include_media: Optional[StrictBool] = None,
        pdf_include_applicant_attachments: Optional[StrictBool] = None,
        pdf_include_organization_attachments: Optional[StrictBool] = None,
        pdf_include_ratings: Optional[StrictBool] = None,
        pdf_include_full_page_media: Optional[StrictBool] = None,
        pdf_include_highlights: Optional[StrictBool] = None,
        pdf_include_comments: Optional[StrictBool] = None,
        pdf_include_common_app: Optional[StrictBool] = None,
        zip_original_media: Optional[StrictBool] = None,
        zip_include_forms: Optional[StrictBool] = None,
        zip_include_references: Optional[StrictBool] = None,
        zip_include_media: Optional[StrictBool] = None,
        zip_include_applicant_attachments: Optional[StrictBool] = None,
        zip_include_organization_attachments: Optional[StrictBool] = None,
        zip_include_ratings: Optional[StrictBool] = None,
        zip_include_comments: Optional[StrictBool] = None,
        zip_include_common_app: Optional[StrictBool] = None,
        delivery_account: Optional[StrictStr] = None,
        delivery_folder: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RequestApplicationExportResultV2]:
        """Requests the generation of a single application export file (tabular, pdf, zip).

        Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.

        :param application_id: The id of the application to export (required)
        :type application_id: str
        :param format:
        :type format: str
        :param round_type:
        :type round_type: str
        :param round_name:
        :type round_name: str
        :param tab_export:
        :type tab_export: str
        :param pdf_include_forms:
        :type pdf_include_forms: bool
        :param pdf_include_references:
        :type pdf_include_references: bool
        :param pdf_include_media:
        :type pdf_include_media: bool
        :param pdf_include_applicant_attachments:
        :type pdf_include_applicant_attachments: bool
        :param pdf_include_organization_attachments:
        :type pdf_include_organization_attachments: bool
        :param pdf_include_ratings:
        :type pdf_include_ratings: bool
        :param pdf_include_full_page_media:
        :type pdf_include_full_page_media: bool
        :param pdf_include_highlights:
        :type pdf_include_highlights: bool
        :param pdf_include_comments:
        :type pdf_include_comments: bool
        :param pdf_include_common_app:
        :type pdf_include_common_app: bool
        :param zip_original_media:
        :type zip_original_media: bool
        :param zip_include_forms:
        :type zip_include_forms: bool
        :param zip_include_references:
        :type zip_include_references: bool
        :param zip_include_media:
        :type zip_include_media: bool
        :param zip_include_applicant_attachments:
        :type zip_include_applicant_attachments: bool
        :param zip_include_organization_attachments:
        :type zip_include_organization_attachments: bool
        :param zip_include_ratings:
        :type zip_include_ratings: bool
        :param zip_include_comments:
        :type zip_include_comments: bool
        :param zip_include_common_app:
        :type zip_include_common_app: bool
        :param delivery_account:
        :type delivery_account: str
        :param delivery_folder:
        :type delivery_folder: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_request_export_by_application_id_v2_serialize(
            application_id=application_id,
            format=format,
            round_type=round_type,
            round_name=round_name,
            tab_export=tab_export,
            pdf_include_forms=pdf_include_forms,
            pdf_include_references=pdf_include_references,
            pdf_include_media=pdf_include_media,
            pdf_include_applicant_attachments=pdf_include_applicant_attachments,
            pdf_include_organization_attachments=pdf_include_organization_attachments,
            pdf_include_ratings=pdf_include_ratings,
            pdf_include_full_page_media=pdf_include_full_page_media,
            pdf_include_highlights=pdf_include_highlights,
            pdf_include_comments=pdf_include_comments,
            pdf_include_common_app=pdf_include_common_app,
            zip_original_media=zip_original_media,
            zip_include_forms=zip_include_forms,
            zip_include_references=zip_include_references,
            zip_include_media=zip_include_media,
            zip_include_applicant_attachments=zip_include_applicant_attachments,
            zip_include_organization_attachments=zip_include_organization_attachments,
            zip_include_ratings=zip_include_ratings,
            zip_include_comments=zip_include_comments,
            zip_include_common_app=zip_include_common_app,
            delivery_account=delivery_account,
            delivery_folder=delivery_folder,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "RequestApplicationExportResultV2",
            '400': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_request_export_by_application_id_v2_without_preload_content(
        self,
        application_id: Annotated[StrictStr, Field(description="The id of the application to export")],
        format: Optional[StrictStr] = None,
        round_type: Optional[StrictStr] = None,
        round_name: Optional[StrictStr] = None,
        tab_export: Optional[StrictStr] = None,
        pdf_include_forms: Optional[StrictBool] = None,
        pdf_include_references: Optional[StrictBool] = None,
        pdf_include_media: Optional[StrictBool] = None,
        pdf_include_applicant_attachments: Optional[StrictBool] = None,
        pdf_include_organization_attachments: Optional[StrictBool] = None,
        pdf_include_ratings: Optional[StrictBool] = None,
        pdf_include_full_page_media: Optional[StrictBool] = None,
        pdf_include_highlights: Optional[StrictBool] = None,
        pdf_include_comments: Optional[StrictBool] = None,
        pdf_include_common_app: Optional[StrictBool] = None,
        zip_original_media: Optional[StrictBool] = None,
        zip_include_forms: Optional[StrictBool] = None,
        zip_include_references: Optional[StrictBool] = None,
        zip_include_media: Optional[StrictBool] = None,
        zip_include_applicant_attachments: Optional[StrictBool] = None,
        zip_include_organization_attachments: Optional[StrictBool] = None,
        zip_include_ratings: Optional[StrictBool] = None,
        zip_include_comments: Optional[StrictBool] = None,
        zip_include_common_app: Optional[StrictBool] = None,
        delivery_account: Optional[StrictStr] = None,
        delivery_folder: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Requests the generation of a single application export file (tabular, pdf, zip).

        Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.

        :param application_id: The id of the application to export (required)
        :type application_id: str
        :param format:
        :type format: str
        :param round_type:
        :type round_type: str
        :param round_name:
        :type round_name: str
        :param tab_export:
        :type tab_export: str
        :param pdf_include_forms:
        :type pdf_include_forms: bool
        :param pdf_include_references:
        :type pdf_include_references: bool
        :param pdf_include_media:
        :type pdf_include_media: bool
        :param pdf_include_applicant_attachments:
        :type pdf_include_applicant_attachments: bool
        :param pdf_include_organization_attachments:
        :type pdf_include_organization_attachments: bool
        :param pdf_include_ratings:
        :type pdf_include_ratings: bool
        :param pdf_include_full_page_media:
        :type pdf_include_full_page_media: bool
        :param pdf_include_highlights:
        :type pdf_include_highlights: bool
        :param pdf_include_comments:
        :type pdf_include_comments: bool
        :param pdf_include_common_app:
        :type pdf_include_common_app: bool
        :param zip_original_media:
        :type zip_original_media: bool
        :param zip_include_forms:
        :type zip_include_forms: bool
        :param zip_include_references:
        :type zip_include_references: bool
        :param zip_include_media:
        :type zip_include_media: bool
        :param zip_include_applicant_attachments:
        :type zip_include_applicant_attachments: bool
        :param zip_include_organization_attachments:
        :type zip_include_organization_attachments: bool
        :param zip_include_ratings:
        :type zip_include_ratings: bool
        :param zip_include_comments:
        :type zip_include_comments: bool
        :param zip_include_common_app:
        :type zip_include_common_app: bool
        :param delivery_account:
        :type delivery_account: str
        :param delivery_folder:
        :type delivery_folder: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_request_export_by_application_id_v2_serialize(
            application_id=application_id,
            format=format,
            round_type=round_type,
            round_name=round_name,
            tab_export=tab_export,
            pdf_include_forms=pdf_include_forms,
            pdf_include_references=pdf_include_references,
            pdf_include_media=pdf_include_media,
            pdf_include_applicant_attachments=pdf_include_applicant_attachments,
            pdf_include_organization_attachments=pdf_include_organization_attachments,
            pdf_include_ratings=pdf_include_ratings,
            pdf_include_full_page_media=pdf_include_full_page_media,
            pdf_include_highlights=pdf_include_highlights,
            pdf_include_comments=pdf_include_comments,
            pdf_include_common_app=pdf_include_common_app,
            zip_original_media=zip_original_media,
            zip_include_forms=zip_include_forms,
            zip_include_references=zip_include_references,
            zip_include_media=zip_include_media,
            zip_include_applicant_attachments=zip_include_applicant_attachments,
            zip_include_organization_attachments=zip_include_organization_attachments,
            zip_include_ratings=zip_include_ratings,
            zip_include_comments=zip_include_comments,
            zip_include_common_app=zip_include_common_app,
            delivery_account=delivery_account,
            delivery_folder=delivery_folder,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '202': "RequestApplicationExportResultV2",
            '400': None,
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_request_export_by_application_id_v2_serialize(
        self,
        application_id,
        format,
        round_type,
        round_name,
        tab_export,
        pdf_include_forms,
        pdf_include_references,
        pdf_include_media,
        pdf_include_applicant_attachments,
        pdf_include_organization_attachments,
        pdf_include_ratings,
        pdf_include_full_page_media,
        pdf_include_highlights,
        pdf_include_comments,
        pdf_include_common_app,
        zip_original_media,
        zip_include_forms,
        zip_include_references,
        zip_include_media,
        zip_include_applicant_attachments,
        zip_include_organization_attachments,
        zip_include_ratings,
        zip_include_comments,
        zip_include_common_app,
        delivery_account,
        delivery_folder,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        if application_id is not None:
            _path_params['applicationId'] = application_id
        # process the query parameters
        if format is not None:
            
            _query_params.append(('format', format))
            
        if round_type is not None:
            
            _query_params.append(('roundType', round_type))
            
        if round_name is not None:
            
            _query_params.append(('roundName', round_name))
            
        if tab_export is not None:
            
            _query_params.append(('tab.export', tab_export))
            
        if pdf_include_forms is not None:
            
            _query_params.append(('pdf.includeForms', pdf_include_forms))
            
        if pdf_include_references is not None:
            
            _query_params.append(('pdf.includeReferences', pdf_include_references))
            
        if pdf_include_media is not None:
            
            _query_params.append(('pdf.includeMedia', pdf_include_media))
            
        if pdf_include_applicant_attachments is not None:
            
            _query_params.append(('pdf.includeApplicantAttachments', pdf_include_applicant_attachments))
            
        if pdf_include_organization_attachments is not None:
            
            _query_params.append(('pdf.includeOrganizationAttachments', pdf_include_organization_attachments))
            
        if pdf_include_ratings is not None:
            
            _query_params.append(('pdf.includeRatings', pdf_include_ratings))
            
        if pdf_include_full_page_media is not None:
            
            _query_params.append(('pdf.includeFullPageMedia', pdf_include_full_page_media))
            
        if pdf_include_highlights is not None:
            
            _query_params.append(('pdf.includeHighlights', pdf_include_highlights))
            
        if pdf_include_comments is not None:
            
            _query_params.append(('pdf.includeComments', pdf_include_comments))
            
        if pdf_include_common_app is not None:
            
            _query_params.append(('pdf.includeCommonApp', pdf_include_common_app))
            
        if zip_original_media is not None:
            
            _query_params.append(('zip.originalMedia', zip_original_media))
            
        if zip_include_forms is not None:
            
            _query_params.append(('zip.includeForms', zip_include_forms))
            
        if zip_include_references is not None:
            
            _query_params.append(('zip.includeReferences', zip_include_references))
            
        if zip_include_media is not None:
            
            _query_params.append(('zip.includeMedia', zip_include_media))
            
        if zip_include_applicant_attachments is not None:
            
            _query_params.append(('zip.includeApplicantAttachments', zip_include_applicant_attachments))
            
        if zip_include_organization_attachments is not None:
            
            _query_params.append(('zip.includeOrganizationAttachments', zip_include_organization_attachments))
            
        if zip_include_ratings is not None:
            
            _query_params.append(('zip.includeRatings', zip_include_ratings))
            
        if zip_include_comments is not None:
            
            _query_params.append(('zip.includeComments', zip_include_comments))
            
        if zip_include_common_app is not None:
            
            _query_params.append(('zip.includeCommonApp', zip_include_common_app))
            
        if delivery_account is not None:
            
            _query_params.append(('delivery.account', delivery_account))
            
        if delivery_folder is not None:
            
            _query_params.append(('delivery.folder', delivery_folder))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/json', 
                    'application/xml', 
                    'text/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/v2/application/{applicationId}/request-export',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )




    @validate_call
    def application_request_export_v2(
        self,
        format: Optional[StrictStr] = None,
        round_type: Optional[StrictStr] = None,
        round_name: Optional[StrictStr] = None,
        tab_export: Optional[StrictStr] = None,
        pdf_include_forms: Optional[StrictBool] = None,
        pdf_include_references: Optional[StrictBool] = None,
        pdf_include_media: Optional[StrictBool] = None,
        pdf_include_applicant_attachments: Optional[StrictBool] = None,
        pdf_include_organization_attachments: Optional[StrictBool] = None,
        pdf_include_ratings: Optional[StrictBool] = None,
        pdf_include_full_page_media: Optional[StrictBool] = None,
        pdf_include_highlights: Optional[StrictBool] = None,
        pdf_include_comments: Optional[StrictBool] = None,
        pdf_include_common_app: Optional[StrictBool] = None,
        zip_original_media: Optional[StrictBool] = None,
        zip_include_forms: Optional[StrictBool] = None,
        zip_include_references: Optional[StrictBool] = None,
        zip_include_media: Optional[StrictBool] = None,
        zip_include_applicant_attachments: Optional[StrictBool] = None,
        zip_include_organization_attachments: Optional[StrictBool] = None,
        zip_include_ratings: Optional[StrictBool] = None,
        zip_include_comments: Optional[StrictBool] = None,
        zip_include_common_app: Optional[StrictBool] = None,
        delivery_account: Optional[StrictStr] = None,
        delivery_folder: Optional[StrictStr] = None,
        since: Optional[StrictInt] = None,
        pool: Optional[StrictStr] = None,
        status: Optional[StrictStr] = None,
        search_name: Optional[StrictStr] = None,
        email: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RequestApplicationExportResultV2:
        """Requests the generation of application export files (tabular, pdf, zip).

        Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.  PDF and ZIP exports are available in the Advanced Plan.

        :param format:
        :type format: str
        :param round_type:
        :type round_type: str
        :param round_name:
        :type round_name: str
        :param tab_export:
        :type tab_export: str
        :param pdf_include_forms:
        :type pdf_include_forms: bool
        :param pdf_include_references:
        :type pdf_include_references: bool
        :param pdf_include_media:
        :type pdf_include_media: bool
        :param pdf_include_applicant_attachments:
        :type pdf_include_applicant_attachments: bool
        :param pdf_include_organization_attachments:
        :type pdf_include_organization_attachments: bool
        :param pdf_include_ratings:
        :type pdf_include_ratings: bool
        :param pdf_include_full_page_media:
        :type pdf_include_full_page_media: bool
        :param pdf_include_highlights:
        :type pdf_include_highlights: bool
        :param pdf_include_comments:
        :type pdf_include_comments: bool
        :param pdf_include_common_app:
        :type pdf_include_common_app: bool
        :param zip_original_media:
        :type zip_original_media: bool
        :param zip_include_forms:
        :type zip_include_forms: bool
        :param zip_include_references:
        :type zip_include_references: bool
        :param zip_include_media:
        :type zip_include_media: bool
        :param zip_include_applicant_attachments:
        :type zip_include_applicant_attachments: bool
        :param zip_include_organization_attachments:
        :type zip_include_organization_attachments: bool
        :param zip_include_ratings:
        :type zip_include_ratings: bool
        :param zip_include_comments:
        :type zip_include_comments: bool
        :param zip_include_common_app:
        :type zip_include_common_app: bool
        :param delivery_account:
        :type delivery_account: str
        :param delivery_folder:
        :type delivery_folder: str
        :param since:
        :type since: int
        :param pool:
        :type pool: str
        :param status:
        :type status: str
        :param search_name:
        :type search_name: str
        :param email:
        :type email: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_request_export_v2_serialize(
            format=format,
            round_type=round_type,
            round_name=round_name,
            tab_export=tab_export,
            pdf_include_forms=pdf_include_forms,
            pdf_include_references=pdf_include_references,
            pdf_include_media=pdf_include_media,
            pdf_include_applicant_attachments=pdf_include_applicant_attachments,
            pdf_include_organization_attachments=pdf_include_organization_attachments,
            pdf_include_ratings=pdf_include_ratings,
            pdf_include_full_page_media=pdf_include_full_page_media,
            pdf_include_highlights=pdf_include_highlights,
            pdf_include_comments=pdf_include_comments,
            pdf_include_common_app=pdf_include_common_app,
            zip_original_media=zip_original_media,
            zip_include_forms=zip_include_forms,
            zip_include_references=zip_include_references,
            zip_include_media=zip_include_media,
            zip_include_applicant_attachments=zip_include_applicant_attachments,
            zip_include_organization_attachments=zip_include_organization_attachments,
            zip_include_ratings=zip_include_ratings,
            zip_include_comments=zip_include_comments,
            zip_include_common_app=zip_include_common_app,
            delivery_account=delivery_account,
            delivery_folder=delivery_folder,
            since=since,
            pool=pool,
            status=status,
            search_name=search_name,
            email=email,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RequestApplicationExportResultV2",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data


    @validate_call
    def application_request_export_v2_with_http_info(
        self,
        format: Optional[StrictStr] = None,
        round_type: Optional[StrictStr] = None,
        round_name: Optional[StrictStr] = None,
        tab_export: Optional[StrictStr] = None,
        pdf_include_forms: Optional[StrictBool] = None,
        pdf_include_references: Optional[StrictBool] = None,
        pdf_include_media: Optional[StrictBool] = None,
        pdf_include_applicant_attachments: Optional[StrictBool] = None,
        pdf_include_organization_attachments: Optional[StrictBool] = None,
        pdf_include_ratings: Optional[StrictBool] = None,
        pdf_include_full_page_media: Optional[StrictBool] = None,
        pdf_include_highlights: Optional[StrictBool] = None,
        pdf_include_comments: Optional[StrictBool] = None,
        pdf_include_common_app: Optional[StrictBool] = None,
        zip_original_media: Optional[StrictBool] = None,
        zip_include_forms: Optional[StrictBool] = None,
        zip_include_references: Optional[StrictBool] = None,
        zip_include_media: Optional[StrictBool] = None,
        zip_include_applicant_attachments: Optional[StrictBool] = None,
        zip_include_organization_attachments: Optional[StrictBool] = None,
        zip_include_ratings: Optional[StrictBool] = None,
        zip_include_comments: Optional[StrictBool] = None,
        zip_include_common_app: Optional[StrictBool] = None,
        delivery_account: Optional[StrictStr] = None,
        delivery_folder: Optional[StrictStr] = None,
        since: Optional[StrictInt] = None,
        pool: Optional[StrictStr] = None,
        status: Optional[StrictStr] = None,
        search_name: Optional[StrictStr] = None,
        email: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RequestApplicationExportResultV2]:
        """Requests the generation of application export files (tabular, pdf, zip).

        Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.  PDF and ZIP exports are available in the Advanced Plan.

        :param format:
        :type format: str
        :param round_type:
        :type round_type: str
        :param round_name:
        :type round_name: str
        :param tab_export:
        :type tab_export: str
        :param pdf_include_forms:
        :type pdf_include_forms: bool
        :param pdf_include_references:
        :type pdf_include_references: bool
        :param pdf_include_media:
        :type pdf_include_media: bool
        :param pdf_include_applicant_attachments:
        :type pdf_include_applicant_attachments: bool
        :param pdf_include_organization_attachments:
        :type pdf_include_organization_attachments: bool
        :param pdf_include_ratings:
        :type pdf_include_ratings: bool
        :param pdf_include_full_page_media:
        :type pdf_include_full_page_media: bool
        :param pdf_include_highlights:
        :type pdf_include_highlights: bool
        :param pdf_include_comments:
        :type pdf_include_comments: bool
        :param pdf_include_common_app:
        :type pdf_include_common_app: bool
        :param zip_original_media:
        :type zip_original_media: bool
        :param zip_include_forms:
        :type zip_include_forms: bool
        :param zip_include_references:
        :type zip_include_references: bool
        :param zip_include_media:
        :type zip_include_media: bool
        :param zip_include_applicant_attachments:
        :type zip_include_applicant_attachments: bool
        :param zip_include_organization_attachments:
        :type zip_include_organization_attachments: bool
        :param zip_include_ratings:
        :type zip_include_ratings: bool
        :param zip_include_comments:
        :type zip_include_comments: bool
        :param zip_include_common_app:
        :type zip_include_common_app: bool
        :param delivery_account:
        :type delivery_account: str
        :param delivery_folder:
        :type delivery_folder: str
        :param since:
        :type since: int
        :param pool:
        :type pool: str
        :param status:
        :type status: str
        :param search_name:
        :type search_name: str
        :param email:
        :type email: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_request_export_v2_serialize(
            format=format,
            round_type=round_type,
            round_name=round_name,
            tab_export=tab_export,
            pdf_include_forms=pdf_include_forms,
            pdf_include_references=pdf_include_references,
            pdf_include_media=pdf_include_media,
            pdf_include_applicant_attachments=pdf_include_applicant_attachments,
            pdf_include_organization_attachments=pdf_include_organization_attachments,
            pdf_include_ratings=pdf_include_ratings,
            pdf_include_full_page_media=pdf_include_full_page_media,
            pdf_include_highlights=pdf_include_highlights,
            pdf_include_comments=pdf_include_comments,
            pdf_include_common_app=pdf_include_common_app,
            zip_original_media=zip_original_media,
            zip_include_forms=zip_include_forms,
            zip_include_references=zip_include_references,
            zip_include_media=zip_include_media,
            zip_include_applicant_attachments=zip_include_applicant_attachments,
            zip_include_organization_attachments=zip_include_organization_attachments,
            zip_include_ratings=zip_include_ratings,
            zip_include_comments=zip_include_comments,
            zip_include_common_app=zip_include_common_app,
            delivery_account=delivery_account,
            delivery_folder=delivery_folder,
            since=since,
            pool=pool,
            status=status,
            search_name=search_name,
            email=email,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RequestApplicationExportResultV2",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )


    @validate_call
    def application_request_export_v2_without_preload_content(
        self,
        format: Optional[StrictStr] = None,
        round_type: Optional[StrictStr] = None,
        round_name: Optional[StrictStr] = None,
        tab_export: Optional[StrictStr] = None,
        pdf_include_forms: Optional[StrictBool] = None,
        pdf_include_references: Optional[StrictBool] = None,
        pdf_include_media: Optional[StrictBool] = None,
        pdf_include_applicant_attachments: Optional[StrictBool] = None,
        pdf_include_organization_attachments: Optional[StrictBool] = None,
        pdf_include_ratings: Optional[StrictBool] = None,
        pdf_include_full_page_media: Optional[StrictBool] = None,
        pdf_include_highlights: Optional[StrictBool] = None,
        pdf_include_comments: Optional[StrictBool] = None,
        pdf_include_common_app: Optional[StrictBool] = None,
        zip_original_media: Optional[StrictBool] = None,
        zip_include_forms: Optional[StrictBool] = None,
        zip_include_references: Optional[StrictBool] = None,
        zip_include_media: Optional[StrictBool] = None,
        zip_include_applicant_attachments: Optional[StrictBool] = None,
        zip_include_organization_attachments: Optional[StrictBool] = None,
        zip_include_ratings: Optional[StrictBool] = None,
        zip_include_comments: Optional[StrictBool] = None,
        zip_include_common_app: Optional[StrictBool] = None,
        delivery_account: Optional[StrictStr] = None,
        delivery_folder: Optional[StrictStr] = None,
        since: Optional[StrictInt] = None,
        pool: Optional[StrictStr] = None,
        status: Optional[StrictStr] = None,
        search_name: Optional[StrictStr] = None,
        email: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)],
                Annotated[StrictFloat, Field(gt=0)]
            ]
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Requests the generation of application export files (tabular, pdf, zip).

        Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.  PDF and ZIP exports are available in the Advanced Plan.

        :param format:
        :type format: str
        :param round_type:
        :type round_type: str
        :param round_name:
        :type round_name: str
        :param tab_export:
        :type tab_export: str
        :param pdf_include_forms:
        :type pdf_include_forms: bool
        :param pdf_include_references:
        :type pdf_include_references: bool
        :param pdf_include_media:
        :type pdf_include_media: bool
        :param pdf_include_applicant_attachments:
        :type pdf_include_applicant_attachments: bool
        :param pdf_include_organization_attachments:
        :type pdf_include_organization_attachments: bool
        :param pdf_include_ratings:
        :type pdf_include_ratings: bool
        :param pdf_include_full_page_media:
        :type pdf_include_full_page_media: bool
        :param pdf_include_highlights:
        :type pdf_include_highlights: bool
        :param pdf_include_comments:
        :type pdf_include_comments: bool
        :param pdf_include_common_app:
        :type pdf_include_common_app: bool
        :param zip_original_media:
        :type zip_original_media: bool
        :param zip_include_forms:
        :type zip_include_forms: bool
        :param zip_include_references:
        :type zip_include_references: bool
        :param zip_include_media:
        :type zip_include_media: bool
        :param zip_include_applicant_attachments:
        :type zip_include_applicant_attachments: bool
        :param zip_include_organization_attachments:
        :type zip_include_organization_attachments: bool
        :param zip_include_ratings:
        :type zip_include_ratings: bool
        :param zip_include_comments:
        :type zip_include_comments: bool
        :param zip_include_common_app:
        :type zip_include_common_app: bool
        :param delivery_account:
        :type delivery_account: str
        :param delivery_folder:
        :type delivery_folder: str
        :param since:
        :type since: int
        :param pool:
        :type pool: str
        :param status:
        :type status: str
        :param search_name:
        :type search_name: str
        :param email:
        :type email: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """ # noqa: E501

        _param = self._application_request_export_v2_serialize(
            format=format,
            round_type=round_type,
            round_name=round_name,
            tab_export=tab_export,
            pdf_include_forms=pdf_include_forms,
            pdf_include_references=pdf_include_references,
            pdf_include_media=pdf_include_media,
            pdf_include_applicant_attachments=pdf_include_applicant_attachments,
            pdf_include_organization_attachments=pdf_include_organization_attachments,
            pdf_include_ratings=pdf_include_ratings,
            pdf_include_full_page_media=pdf_include_full_page_media,
            pdf_include_highlights=pdf_include_highlights,
            pdf_include_comments=pdf_include_comments,
            pdf_include_common_app=pdf_include_common_app,
            zip_original_media=zip_original_media,
            zip_include_forms=zip_include_forms,
            zip_include_references=zip_include_references,
            zip_include_media=zip_include_media,
            zip_include_applicant_attachments=zip_include_applicant_attachments,
            zip_include_organization_attachments=zip_include_organization_attachments,
            zip_include_ratings=zip_include_ratings,
            zip_include_comments=zip_include_comments,
            zip_include_common_app=zip_include_common_app,
            delivery_account=delivery_account,
            delivery_folder=delivery_folder,
            since=since,
            pool=pool,
            status=status,
            search_name=search_name,
            email=email,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index
        )

        _response_types_map: Dict[str, Optional[str]] = {
            '200': "RequestApplicationExportResultV2",
        }
        response_data = self.api_client.call_api(
            *_param,
            _request_timeout=_request_timeout
        )
        return response_data.response


    def _application_request_export_v2_serialize(
        self,
        format,
        round_type,
        round_name,
        tab_export,
        pdf_include_forms,
        pdf_include_references,
        pdf_include_media,
        pdf_include_applicant_attachments,
        pdf_include_organization_attachments,
        pdf_include_ratings,
        pdf_include_full_page_media,
        pdf_include_highlights,
        pdf_include_comments,
        pdf_include_common_app,
        zip_original_media,
        zip_include_forms,
        zip_include_references,
        zip_include_media,
        zip_include_applicant_attachments,
        zip_include_organization_attachments,
        zip_include_ratings,
        zip_include_comments,
        zip_include_common_app,
        delivery_account,
        delivery_folder,
        since,
        pool,
        status,
        search_name,
        email,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:

        _host = None

        _collection_formats: Dict[str, str] = {
        }

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[
            str, Union[str, bytes, List[str], List[bytes], List[Tuple[str, bytes]]]
        ] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        if format is not None:
            
            _query_params.append(('format', format))
            
        if round_type is not None:
            
            _query_params.append(('roundType', round_type))
            
        if round_name is not None:
            
            _query_params.append(('roundName', round_name))
            
        if tab_export is not None:
            
            _query_params.append(('tab.export', tab_export))
            
        if pdf_include_forms is not None:
            
            _query_params.append(('pdf.includeForms', pdf_include_forms))
            
        if pdf_include_references is not None:
            
            _query_params.append(('pdf.includeReferences', pdf_include_references))
            
        if pdf_include_media is not None:
            
            _query_params.append(('pdf.includeMedia', pdf_include_media))
            
        if pdf_include_applicant_attachments is not None:
            
            _query_params.append(('pdf.includeApplicantAttachments', pdf_include_applicant_attachments))
            
        if pdf_include_organization_attachments is not None:
            
            _query_params.append(('pdf.includeOrganizationAttachments', pdf_include_organization_attachments))
            
        if pdf_include_ratings is not None:
            
            _query_params.append(('pdf.includeRatings', pdf_include_ratings))
            
        if pdf_include_full_page_media is not None:
            
            _query_params.append(('pdf.includeFullPageMedia', pdf_include_full_page_media))
            
        if pdf_include_highlights is not None:
            
            _query_params.append(('pdf.includeHighlights', pdf_include_highlights))
            
        if pdf_include_comments is not None:
            
            _query_params.append(('pdf.includeComments', pdf_include_comments))
            
        if pdf_include_common_app is not None:
            
            _query_params.append(('pdf.includeCommonApp', pdf_include_common_app))
            
        if zip_original_media is not None:
            
            _query_params.append(('zip.originalMedia', zip_original_media))
            
        if zip_include_forms is not None:
            
            _query_params.append(('zip.includeForms', zip_include_forms))
            
        if zip_include_references is not None:
            
            _query_params.append(('zip.includeReferences', zip_include_references))
            
        if zip_include_media is not None:
            
            _query_params.append(('zip.includeMedia', zip_include_media))
            
        if zip_include_applicant_attachments is not None:
            
            _query_params.append(('zip.includeApplicantAttachments', zip_include_applicant_attachments))
            
        if zip_include_organization_attachments is not None:
            
            _query_params.append(('zip.includeOrganizationAttachments', zip_include_organization_attachments))
            
        if zip_include_ratings is not None:
            
            _query_params.append(('zip.includeRatings', zip_include_ratings))
            
        if zip_include_comments is not None:
            
            _query_params.append(('zip.includeComments', zip_include_comments))
            
        if zip_include_common_app is not None:
            
            _query_params.append(('zip.includeCommonApp', zip_include_common_app))
            
        if delivery_account is not None:
            
            _query_params.append(('delivery.account', delivery_account))
            
        if delivery_folder is not None:
            
            _query_params.append(('delivery.folder', delivery_folder))
            
        if since is not None:
            
            _query_params.append(('since', since))
            
        if pool is not None:
            
            _query_params.append(('pool', pool))
            
        if status is not None:
            
            _query_params.append(('status', status))
            
        if search_name is not None:
            
            _query_params.append(('searchName', search_name))
            
        if email is not None:
            
            _query_params.append(('email', email))
            
        # process the header parameters
        # process the form parameters
        # process the body parameter


        # set the HTTP header `Accept`
        if 'Accept' not in _header_params:
            _header_params['Accept'] = self.api_client.select_header_accept(
                [
                    'application/json', 
                    'text/json', 
                    'application/xml', 
                    'text/xml'
                ]
            )


        # authentication setting
        _auth_settings: List[str] = [
        ]

        return self.api_client.param_serialize(
            method='POST',
            resource_path='/api/v2/application/request-export',
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth
        )


