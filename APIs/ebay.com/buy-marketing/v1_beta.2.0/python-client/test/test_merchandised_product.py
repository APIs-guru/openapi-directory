# coding: utf-8

"""
    Buy Marketing API

    The Marketing API retrieves eBay products based on a metric, such as Best Selling, as well as products that were also bought and also viewed.

    The version of the OpenAPI document: v1_beta.2.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.merchandised_product import MerchandisedProduct

class TestMerchandisedProduct(unittest.TestCase):
    """MerchandisedProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MerchandisedProduct:
        """Test MerchandisedProduct
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MerchandisedProduct`
        """
        model = MerchandisedProduct()
        if include_optional:
            return MerchandisedProduct(
                average_rating = '',
                epid = '',
                image = openapi_client.models.image.Image(
                    height = 56, 
                    image_url = '', 
                    width = 56, ),
                market_price_details = [
                    openapi_client.models.market_price_detail.MarketPriceDetail(
                        condition_group = '', 
                        condition_ids = [
                            ''
                            ], 
                        estimated_start_price = openapi_client.models.amount.Amount(
                            currency = '', 
                            value = '', ), )
                    ],
                rating_aspects = [
                    openapi_client.models.rating_aspect.RatingAspect(
                        count = 56, 
                        description = '', 
                        name = '', 
                        rating_aspect_distributions = [
                            openapi_client.models.rating_aspect_distribution.RatingAspectDistribution(
                                count = 56, 
                                percentage = '', 
                                value = '', )
                            ], )
                    ],
                rating_count = 56,
                review_count = 56,
                title = ''
            )
        else:
            return MerchandisedProduct(
        )
        """

    def testMerchandisedProduct(self):
        """Test MerchandisedProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
