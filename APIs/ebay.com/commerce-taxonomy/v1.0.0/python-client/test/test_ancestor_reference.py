# coding: utf-8

"""
    Taxonomy API

    Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ancestor_reference import AncestorReference

class TestAncestorReference(unittest.TestCase):
    """AncestorReference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AncestorReference:
        """Test AncestorReference
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AncestorReference`
        """
        model = AncestorReference()
        if include_optional:
            return AncestorReference(
                category_id = '',
                category_name = '',
                category_subtree_node_href = '',
                category_tree_node_level = 56
            )
        else:
            return AncestorReference(
        )
        """

    def testAncestorReference(self):
        """Test AncestorReference"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
