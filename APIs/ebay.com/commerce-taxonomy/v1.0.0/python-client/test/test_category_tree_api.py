# coding: utf-8

"""
    Taxonomy API

    Use the Taxonomy API to discover the most appropriate eBay categories under which sellers can offer inventory items for sale, and the most likely categories under which buyers can browse or search for items to purchase. In addition, the Taxonomy API provides metadata about the required and recommended category aspects to include in listings, and also has two operations to retrieve parts compatibility information.

    The version of the OpenAPI document: v1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.category_tree_api import CategoryTreeApi


class TestCategoryTreeApi(unittest.TestCase):
    """CategoryTreeApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CategoryTreeApi()

    def tearDown(self) -> None:
        pass

    def test_fetch_item_aspects(self) -> None:
        """Test case for fetch_item_aspects

        Get Aspects for All Leaf Categories in a Marketplace
        """
        pass

    def test_get_category_subtree(self) -> None:
        """Test case for get_category_subtree

        Get a Category Subtree
        """
        pass

    def test_get_category_suggestions(self) -> None:
        """Test case for get_category_suggestions

        Get Suggested Categories
        """
        pass

    def test_get_category_tree(self) -> None:
        """Test case for get_category_tree

        Get a Category Tree
        """
        pass

    def test_get_compatibility_properties(self) -> None:
        """Test case for get_compatibility_properties

        Get Compatibility Properties
        """
        pass

    def test_get_compatibility_property_values(self) -> None:
        """Test case for get_compatibility_property_values

        Get Compatibility Property Values
        """
        pass

    def test_get_default_category_tree_id(self) -> None:
        """Test case for get_default_category_tree_id

        Get a Default Category Tree ID
        """
        pass

    def test_get_item_aspects_for_category(self) -> None:
        """Test case for get_item_aspects_for_category

        """
        pass


if __name__ == '__main__':
    unittest.main()
