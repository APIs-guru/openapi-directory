# coding: utf-8

"""
    Marketing API

    <p>The <i>Marketing API </i> offers two platforms that sellers can use to promote and advertise their products:</p> <ul><li><b>Promoted Listings</b> is an eBay ad service that lets sellers set up <i>ad campaigns </i> for the products they want to promote. eBay displays the ads in search results and in other marketing modules as <b>SPONSORED</b> listings. If an item in a Promoted Listings campaign sells, the seller is assessed a Promoted Listings fee, which is a seller-specified percentage applied to the sales price. For complete details, refer to the <a href=\"/api-docs/sell/static/marketing/pl-landing.html\">Promoted Listings playbook</a>.</li><li><b>Promotions Manager</b> gives sellers a way to offer discounts on specific items as a way to attract buyers to their inventory. Sellers can set up discounts (such as \"20% off\" and other types of offers) on specific items or on an entire customer order. To further attract buyers, eBay prominently displays promotion <i>teasers</i> throughout buyer flows. For complete details, see <a href=\"/api-docs/sell/static/marketing/promotions-manager.html\">Promotions Manager</a>.</li></ul>  <p><b>Marketing reports</b>, on both the Promoted Listings and Promotions Manager platforms, give sellers information that shows the effectiveness of their marketing strategies. The data gives sellers the ability to review and fine tune their marketing efforts.</p> <p class=\"tablenote\"><b>Important!</b> Sellers must have an active eBay Store subscription, and they must accept the <b>Terms and Conditions</b> before they can make requests to these APIs in the Production environment. There are also site-specific listings requirements and restrictions associated with these marketing tools, as listed in the \"requirements and restrictions\" sections for <a href=\"/api-docs/sell/marketing/static/overview.html#PL-requirements\">Promoted Listings</a> and <a href=\"/api-docs/sell/marketing/static/overview.html#PM-requirements\">Promotions Manager</a>.</p> <p>The table below lists all the Marketing API calls grouped by resource.</p>

    The version of the OpenAPI document: v1.15.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.campaign_api import CampaignApi


class TestCampaignApi(unittest.TestCase):
    """CampaignApi unit test stubs"""

    def setUp(self) -> None:
        self.api = CampaignApi()

    def tearDown(self) -> None:
        pass

    def test_clone_campaign(self) -> None:
        """Test case for clone_campaign

        """
        pass

    def test_create_campaign(self) -> None:
        """Test case for create_campaign

        """
        pass

    def test_delete_campaign(self) -> None:
        """Test case for delete_campaign

        """
        pass

    def test_end_campaign(self) -> None:
        """Test case for end_campaign

        """
        pass

    def test_find_campaign_by_ad_reference(self) -> None:
        """Test case for find_campaign_by_ad_reference

        """
        pass

    def test_get_campaign(self) -> None:
        """Test case for get_campaign

        """
        pass

    def test_get_campaign_by_name(self) -> None:
        """Test case for get_campaign_by_name

        """
        pass

    def test_get_campaigns(self) -> None:
        """Test case for get_campaigns

        """
        pass

    def test_pause_campaign(self) -> None:
        """Test case for pause_campaign

        """
        pass

    def test_resume_campaign(self) -> None:
        """Test case for resume_campaign

        """
        pass

    def test_suggest_items(self) -> None:
        """Test case for suggest_items

        """
        pass

    def test_update_ad_rate_strategy(self) -> None:
        """Test case for update_ad_rate_strategy

        """
        pass

    def test_update_campaign_budget(self) -> None:
        """Test case for update_campaign_budget

        """
        pass

    def test_update_campaign_identification(self) -> None:
        """Test case for update_campaign_identification

        """
        pass


if __name__ == '__main__':
    unittest.main()
