# coding: utf-8

"""
    Account API

    The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

    The version of the OpenAPI document: v1.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.payments_program_onboarding_response import PaymentsProgramOnboardingResponse

class TestPaymentsProgramOnboardingResponse(unittest.TestCase):
    """PaymentsProgramOnboardingResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaymentsProgramOnboardingResponse:
        """Test PaymentsProgramOnboardingResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaymentsProgramOnboardingResponse`
        """
        model = PaymentsProgramOnboardingResponse()
        if include_optional:
            return PaymentsProgramOnboardingResponse(
                onboarding_status = '',
                steps = [
                    openapi_client.models.payments_program_onboarding_steps.PaymentsProgramOnboardingSteps(
                        name = '', 
                        status = '', 
                        web_url = '', )
                    ]
            )
        else:
            return PaymentsProgramOnboardingResponse(
        )
        """

    def testPaymentsProgramOnboardingResponse(self):
        """Test PaymentsProgramOnboardingResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
