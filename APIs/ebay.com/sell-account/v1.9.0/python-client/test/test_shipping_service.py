# coding: utf-8

"""
    Account API

    The <b>Account API</b> gives sellers the ability to configure their eBay seller accounts, including the seller's policies (eBay business policies and seller-defined custom policies), opt in and out of eBay seller programs, configure sales tax tables, and get account information.  <br/><br/>For details on the availability of the methods in this API, see <a href=\"/api-docs/sell/account/overview.html#requirements\">Account API requirements and restrictions</a>.

    The version of the OpenAPI document: v1.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.shipping_service import ShippingService

class TestShippingService(unittest.TestCase):
    """ShippingService unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ShippingService:
        """Test ShippingService
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ShippingService`
        """
        model = ShippingService()
        if include_optional:
            return ShippingService(
                additional_shipping_cost = openapi_client.models.amount.Amount(
                    currency = '', 
                    value = '', ),
                buyer_responsible_for_pickup = True,
                buyer_responsible_for_shipping = True,
                cash_on_delivery_fee = openapi_client.models.amount.Amount(
                    currency = '', 
                    value = '', ),
                free_shipping = True,
                ship_to_locations = openapi_client.models.region_set.RegionSet(
                    region_excluded = [
                        openapi_client.models.region.Region(
                            region_name = '', 
                            region_type = '', )
                        ], 
                    region_included = [
                        openapi_client.models.region.Region(
                            region_name = '', 
                            region_type = '', )
                        ], ),
                shipping_carrier_code = '',
                shipping_cost = openapi_client.models.amount.Amount(
                    currency = '', 
                    value = '', ),
                shipping_service_code = '',
                sort_order = 56,
                surcharge = openapi_client.models.amount.Amount(
                    currency = '', 
                    value = '', )
            )
        else:
            return ShippingService(
        )
        """

    def testShippingService(self):
        """Test ShippingService"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
