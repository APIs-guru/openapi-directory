# coding: utf-8

"""
    Feed API

    <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>

    The version of the OpenAPI document: v1.3.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_schedule_response import UserScheduleResponse

class TestUserScheduleResponse(unittest.TestCase):
    """UserScheduleResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserScheduleResponse:
        """Test UserScheduleResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserScheduleResponse`
        """
        model = UserScheduleResponse()
        if include_optional:
            return UserScheduleResponse(
                creation_date = '',
                feed_type = '',
                last_modified_date = '',
                preferred_trigger_day_of_month = 56,
                preferred_trigger_day_of_week = '',
                preferred_trigger_hour = '',
                schedule_end_date = '',
                schedule_id = '',
                schedule_name = '',
                schedule_start_date = '',
                schedule_template_id = '',
                schema_version = '',
                status = '',
                status_reason = ''
            )
        else:
            return UserScheduleResponse(
        )
        """

    def testUserScheduleResponse(self):
        """Test UserScheduleResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
