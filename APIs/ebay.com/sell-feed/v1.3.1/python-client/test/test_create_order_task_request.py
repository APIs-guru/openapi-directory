# coding: utf-8

"""
    Feed API

    <p>The <strong>Feed API</strong> lets sellers upload input files, download reports and files including their status, filter reports using URI parameters, and retrieve customer service metrics task details.</p>

    The version of the OpenAPI document: v1.3.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_order_task_request import CreateOrderTaskRequest

class TestCreateOrderTaskRequest(unittest.TestCase):
    """CreateOrderTaskRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateOrderTaskRequest:
        """Test CreateOrderTaskRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateOrderTaskRequest`
        """
        model = CreateOrderTaskRequest()
        if include_optional:
            return CreateOrderTaskRequest(
                feed_type = '',
                filter_criteria = openapi_client.models.order_filter_criteria.OrderFilterCriteria(
                    creation_date_range = openapi_client.models.date_range.DateRange(
                        from = '', 
                        to = '', ), 
                    modified_date_range = openapi_client.models.date_range.DateRange(
                        from = '', 
                        to = '', ), 
                    order_status = '', ),
                schema_version = ''
            )
        else:
            return CreateOrderTaskRequest(
        )
        """

    def testCreateOrderTaskRequest(self):
        """Test CreateOrderTaskRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
