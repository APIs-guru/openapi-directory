# coding: utf-8

"""
    Charity API

    The Charity API allows third-party developers to search for and access details on supported charitable organizations.

    The version of the OpenAPI document: v1.2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.charity_search_response import CharitySearchResponse

class TestCharitySearchResponse(unittest.TestCase):
    """CharitySearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CharitySearchResponse:
        """Test CharitySearchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CharitySearchResponse`
        """
        model = CharitySearchResponse()
        if include_optional:
            return CharitySearchResponse(
                charity_orgs = [
                    openapi_client.models.charity_org.CharityOrg(
                        charity_org_id = '', 
                        description = '', 
                        location = openapi_client.models.location.Location(
                            address = openapi_client.models.address.Address(
                                city = '', 
                                country = '', 
                                postal_code = '', 
                                state_or_province = '', ), 
                            geo_coordinates = openapi_client.models.geo_coordinates.GeoCoordinates(
                                latitude = 1.337, 
                                longitude = 1.337, ), ), 
                        logo_image = openapi_client.models.image.Image(
                            height = '', 
                            image_url = '', 
                            width = '', ), 
                        mission_statement = '', 
                        name = '', 
                        registration_id = '', 
                        website = '', )
                    ],
                href = '',
                limit = 56,
                next = '',
                offset = 56,
                prev = '',
                total = 56
            )
        else:
            return CharitySearchResponse(
        )
        """

    def testCharitySearchResponse(self):
        """Test CharitySearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
