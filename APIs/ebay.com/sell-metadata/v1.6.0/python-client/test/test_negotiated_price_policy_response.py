# coding: utf-8

"""
    Metadata API

    The Metadata API has operations that retrieve configuration details pertaining to the different eBay marketplaces. In addition to marketplace information, the API also has operations that get information that helps sellers list items on eBay.

    The version of the OpenAPI document: v1.6.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.negotiated_price_policy_response import NegotiatedPricePolicyResponse

class TestNegotiatedPricePolicyResponse(unittest.TestCase):
    """NegotiatedPricePolicyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NegotiatedPricePolicyResponse:
        """Test NegotiatedPricePolicyResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NegotiatedPricePolicyResponse`
        """
        model = NegotiatedPricePolicyResponse()
        if include_optional:
            return NegotiatedPricePolicyResponse(
                negotiated_price_policies = [
                    openapi_client.models.negotiated_price_policy.NegotiatedPricePolicy(
                        best_offer_auto_accept_enabled = True, 
                        best_offer_auto_decline_enabled = True, 
                        best_offer_counter_enabled = True, 
                        category_id = '', 
                        category_tree_id = '', )
                    ],
                warnings = [
                    openapi_client.models.error.Error(
                        category = '', 
                        domain = '', 
                        error_id = 56, 
                        input_ref_ids = [
                            ''
                            ], 
                        long_message = '', 
                        message = '', 
                        output_ref_ids = [
                            ''
                            ], 
                        parameters = [
                            openapi_client.models.error_parameter.ErrorParameter(
                                name = '', 
                                value = '', )
                            ], 
                        subdomain = '', )
                    ]
            )
        else:
            return NegotiatedPricePolicyResponse(
        )
        """

    def testNegotiatedPricePolicyResponse(self):
        """Test NegotiatedPricePolicyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
