# coding: utf-8

"""
    Listing API

    <span class=\"tablenote\"><b>Note:</b> This is a <a href=\"https://developer.ebay.com/api-docs/static/versioning.html#limited\" target=\"_blank\"> <img src=\"/cms/img/docs/partners-api.svg\" class=\"legend-icon partners-icon\" title=\"Limited Release\"  alt=\"Limited Release\" />(Limited Release)</a> API available only to select developers approved by business units.</span><br /><br />Enables a seller adding an ad or item on a Partner's site to automatically create an eBay listing draft using the item details from the Partner's site.

    The version of the OpenAPI document: v1_beta.3.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.item_draft import ItemDraft

class TestItemDraft(unittest.TestCase):
    """ItemDraft unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ItemDraft:
        """Test ItemDraft
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ItemDraft`
        """
        model = ItemDraft()
        if include_optional:
            return ItemDraft(
                category_id = '',
                charity = openapi_client.models.charity.Charity(
                    charity_id = '', 
                    donation_percentage = '', ),
                condition = '',
                format = '',
                pricing_summary = openapi_client.models.pricing_summary.PricingSummary(
                    auction_reserve_price = openapi_client.models.amount.Amount(
                        currency = '', 
                        value = '', ), 
                    auction_start_price = openapi_client.models.amount.Amount(
                        currency = '', 
                        value = '', ), 
                    price = , ),
                product = openapi_client.models.product.Product(
                    aspects = [
                        openapi_client.models.aspect.Aspect(
                            name = '', 
                            values = [
                                ''
                                ], )
                        ], 
                    brand = '', 
                    description = '', 
                    epid = '', 
                    image_urls = [
                        ''
                        ], 
                    title = '', )
            )
        else:
            return ItemDraft(
        )
        """

    def testItemDraft(self):
        """Test ItemDraft"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
