# coding: utf-8

"""
    Cloud Key Management Service (KMS) API

    Manages keys and performs cryptographic operations in a central cloud service, for direct use by other cloud resources and applications. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_resolver import ServiceResolver

class TestServiceResolver(unittest.TestCase):
    """ServiceResolver unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceResolver:
        """Test ServiceResolver
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceResolver`
        """
        model = ServiceResolver()
        if include_optional:
            return ServiceResolver(
                endpoint_filter = '',
                hostname = '',
                server_certificates = [
                    openapi_client.models.certificate.Certificate(
                        issuer = '', 
                        not_after_time = '', 
                        not_before_time = '', 
                        parsed = True, 
                        raw_der = 'YQ==', 
                        serial_number = '', 
                        sha256_fingerprint = '', 
                        subject = '', 
                        subject_alternative_dns_names = [
                            ''
                            ], )
                    ],
                service_directory_service = ''
            )
        else:
            return ServiceResolver(
        )
        """

    def testServiceResolver(self):
        """Test ServiceResolver"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
