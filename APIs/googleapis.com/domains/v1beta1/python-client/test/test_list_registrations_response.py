# coding: utf-8

"""
    Cloud Domains API

    Enables management and configuration of domain names.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_registrations_response import ListRegistrationsResponse

class TestListRegistrationsResponse(unittest.TestCase):
    """ListRegistrationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListRegistrationsResponse:
        """Test ListRegistrationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListRegistrationsResponse`
        """
        model = ListRegistrationsResponse()
        if include_optional:
            return ListRegistrationsResponse(
                next_page_token = '',
                registrations = [
                    openapi_client.models.registration.Registration(
                        contact_settings = openapi_client.models.contact_settings.ContactSettings(
                            admin_contact = openapi_client.models.contact.Contact(
                                email = '', 
                                fax_number = '', 
                                phone_number = '', 
                                postal_address = openapi_client.models.postal_address.PostalAddress(
                                    address_lines = [
                                        ''
                                        ], 
                                    administrative_area = '', 
                                    language_code = '', 
                                    locality = '', 
                                    organization = '', 
                                    postal_code = '', 
                                    recipients = [
                                        ''
                                        ], 
                                    region_code = '', 
                                    revision = 56, 
                                    sorting_code = '', 
                                    sublocality = '', ), ), 
                            privacy = 'CONTACT_PRIVACY_UNSPECIFIED', 
                            registrant_contact = openapi_client.models.contact.Contact(
                                email = '', 
                                fax_number = '', 
                                phone_number = '', ), 
                            technical_contact = , ), 
                        create_time = '', 
                        dns_settings = openapi_client.models.dns_settings.DnsSettings(
                            custom_dns = openapi_client.models.custom_dns.CustomDns(
                                ds_records = [
                                    openapi_client.models.ds_record.DsRecord(
                                        algorithm = 'ALGORITHM_UNSPECIFIED', 
                                        digest = '', 
                                        digest_type = 'DIGEST_TYPE_UNSPECIFIED', 
                                        key_tag = 56, )
                                    ], 
                                name_servers = [
                                    ''
                                    ], ), 
                            glue_records = [
                                openapi_client.models.glue_record.GlueRecord(
                                    host_name = '', 
                                    ipv4_addresses = [
                                        ''
                                        ], 
                                    ipv6_addresses = [
                                        ''
                                        ], )
                                ], 
                            google_domains_dns = openapi_client.models.google_domains_dns.GoogleDomainsDns(
                                ds_state = 'DS_STATE_UNSPECIFIED', ), ), 
                        domain_name = '', 
                        expire_time = '', 
                        issues = [
                            'ISSUE_UNSPECIFIED'
                            ], 
                        labels = {
                            'key' : ''
                            }, 
                        management_settings = openapi_client.models.management_settings.ManagementSettings(
                            preferred_renewal_method = 'RENEWAL_METHOD_UNSPECIFIED', 
                            renewal_method = 'RENEWAL_METHOD_UNSPECIFIED', 
                            transfer_lock_state = 'TRANSFER_LOCK_STATE_UNSPECIFIED', ), 
                        name = '', 
                        pending_contact_settings = openapi_client.models.contact_settings.ContactSettings(
                            privacy = 'CONTACT_PRIVACY_UNSPECIFIED', ), 
                        register_failure_reason = 'REGISTER_FAILURE_REASON_UNSPECIFIED', 
                        state = 'STATE_UNSPECIFIED', 
                        supported_privacy = [
                            'CONTACT_PRIVACY_UNSPECIFIED'
                            ], 
                        transfer_failure_reason = 'TRANSFER_FAILURE_REASON_UNSPECIFIED', )
                    ]
            )
        else:
            return ListRegistrationsResponse(
        )
        """

    def testListRegistrationsResponse(self):
        """Test ListRegistrationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
