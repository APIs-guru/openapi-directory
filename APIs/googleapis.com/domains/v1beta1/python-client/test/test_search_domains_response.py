# coding: utf-8

"""
    Cloud Domains API

    Enables management and configuration of domain names.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_domains_response import SearchDomainsResponse

class TestSearchDomainsResponse(unittest.TestCase):
    """SearchDomainsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchDomainsResponse:
        """Test SearchDomainsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchDomainsResponse`
        """
        model = SearchDomainsResponse()
        if include_optional:
            return SearchDomainsResponse(
                register_parameters = [
                    openapi_client.models.register_parameters.RegisterParameters(
                        availability = 'AVAILABILITY_UNSPECIFIED', 
                        domain_name = '', 
                        domain_notices = [
                            'DOMAIN_NOTICE_UNSPECIFIED'
                            ], 
                        supported_privacy = [
                            'CONTACT_PRIVACY_UNSPECIFIED'
                            ], 
                        yearly_price = openapi_client.models.money.Money(
                            currency_code = '', 
                            nanos = 56, 
                            units = '', ), )
                    ]
            )
        else:
            return SearchDomainsResponse(
        )
        """

    def testSearchDomainsResponse(self):
        """Test SearchDomainsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
