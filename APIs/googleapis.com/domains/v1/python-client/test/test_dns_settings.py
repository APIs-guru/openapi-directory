# coding: utf-8

"""
    Cloud Domains API

    Enables management and configuration of domain names.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dns_settings import DnsSettings

class TestDnsSettings(unittest.TestCase):
    """DnsSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DnsSettings:
        """Test DnsSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DnsSettings`
        """
        model = DnsSettings()
        if include_optional:
            return DnsSettings(
                custom_dns = openapi_client.models.custom_dns.CustomDns(
                    ds_records = [
                        openapi_client.models.ds_record.DsRecord(
                            algorithm = 'ALGORITHM_UNSPECIFIED', 
                            digest = '', 
                            digest_type = 'DIGEST_TYPE_UNSPECIFIED', 
                            key_tag = 56, )
                        ], 
                    name_servers = [
                        ''
                        ], ),
                glue_records = [
                    openapi_client.models.glue_record.GlueRecord(
                        host_name = '', 
                        ipv4_addresses = [
                            ''
                            ], 
                        ipv6_addresses = [
                            ''
                            ], )
                    ],
                google_domains_dns = openapi_client.models.google_domains_dns.GoogleDomainsDns(
                    ds_records = [
                        openapi_client.models.ds_record.DsRecord(
                            algorithm = 'ALGORITHM_UNSPECIFIED', 
                            digest = '', 
                            digest_type = 'DIGEST_TYPE_UNSPECIFIED', 
                            key_tag = 56, )
                        ], 
                    ds_state = 'DS_STATE_UNSPECIFIED', 
                    name_servers = [
                        ''
                        ], )
            )
        else:
            return DnsSettings(
        )
        """

    def testDnsSettings(self):
        """Test DnsSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
