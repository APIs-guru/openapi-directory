# coding: utf-8

"""
    Cloud Testing API

    Allows developers to run automated tests for their mobile applications on Google infrastructure.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.android_device_catalog import AndroidDeviceCatalog

class TestAndroidDeviceCatalog(unittest.TestCase):
    """AndroidDeviceCatalog unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AndroidDeviceCatalog:
        """Test AndroidDeviceCatalog
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AndroidDeviceCatalog`
        """
        model = AndroidDeviceCatalog()
        if include_optional:
            return AndroidDeviceCatalog(
                models = [
                    openapi_client.models.android_model.AndroidModel(
                        brand = '', 
                        codename = '', 
                        form = 'DEVICE_FORM_UNSPECIFIED', 
                        form_factor = 'DEVICE_FORM_FACTOR_UNSPECIFIED', 
                        id = '', 
                        low_fps_video_recording = True, 
                        manufacturer = '', 
                        name = '', 
                        per_version_info = [
                            openapi_client.models.per_android_version_info.PerAndroidVersionInfo(
                                device_capacity = 'DEVICE_CAPACITY_UNSPECIFIED', 
                                direct_access_version_info = openapi_client.models.direct_access_version_info.DirectAccessVersionInfo(
                                    direct_access_supported = True, 
                                    minimum_android_studio_version = '', ), 
                                interactive_device_availability_estimate = '', 
                                version_id = '', )
                            ], 
                        screen_density = 56, 
                        screen_x = 56, 
                        screen_y = 56, 
                        supported_abis = [
                            ''
                            ], 
                        supported_version_ids = [
                            ''
                            ], 
                        tags = [
                            ''
                            ], 
                        thumbnail_url = '', )
                    ],
                runtime_configuration = openapi_client.models.android_runtime_configuration.AndroidRuntimeConfiguration(
                    locales = [
                        openapi_client.models.locale.Locale(
                            id = '', 
                            name = '', 
                            region = '', 
                            tags = [
                                ''
                                ], )
                        ], 
                    orientations = [
                        openapi_client.models.orientation.Orientation(
                            id = '', 
                            name = '', )
                        ], ),
                versions = [
                    openapi_client.models.android_version.AndroidVersion(
                        api_level = 56, 
                        code_name = '', 
                        distribution = openapi_client.models.distribution.Distribution(
                            market_share = 1.337, 
                            measurement_time = '', ), 
                        id = '', 
                        release_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), 
                        tags = [
                            ''
                            ], 
                        version_string = '', )
                    ]
            )
        else:
            return AndroidDeviceCatalog(
        )
        """

    def testAndroidDeviceCatalog(self):
        """Test AndroidDeviceCatalog"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
