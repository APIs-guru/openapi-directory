# coding: utf-8

"""
    Cloud Testing API

    Allows developers to run automated tests for their mobile applications on Google infrastructure.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_setup import TestSetup

class TestTestSetup(unittest.TestCase):
    """TestSetup unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestSetup:
        """Test TestSetup
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestSetup`
        """
        model = TestSetup()
        if include_optional:
            return TestSetup(
                account = openapi_client.models.account.Account(
                    google_auto = openapi_client.models.google_auto.googleAuto(), ),
                additional_apks = [
                    openapi_client.models.apk.Apk(
                        location = openapi_client.models.file_reference.FileReference(
                            gcs_path = '', ), 
                        package_name = '', )
                    ],
                directories_to_pull = [
                    ''
                    ],
                dont_autogrant_permissions = True,
                environment_variables = [
                    openapi_client.models.environment_variable.EnvironmentVariable(
                        key = '', 
                        value = '', )
                    ],
                files_to_push = [
                    openapi_client.models.device_file.DeviceFile(
                        obb_file = openapi_client.models.obb_file.ObbFile(
                            obb = openapi_client.models.file_reference.FileReference(
                                gcs_path = '', ), 
                            obb_file_name = '', ), 
                        regular_file = openapi_client.models.regular_file.RegularFile(
                            content = openapi_client.models.file_reference.FileReference(
                                gcs_path = '', ), 
                            device_path = '', ), )
                    ],
                initial_setup_apks = [
                    openapi_client.models.apk.Apk(
                        location = openapi_client.models.file_reference.FileReference(
                            gcs_path = '', ), 
                        package_name = '', )
                    ],
                network_profile = '',
                systrace = openapi_client.models.systrace_setup.SystraceSetup(
                    duration_seconds = 56, )
            )
        else:
            return TestSetup(
        )
        """

    def testTestSetup(self):
        """Test TestSetup"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
