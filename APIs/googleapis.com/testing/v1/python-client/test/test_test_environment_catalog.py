# coding: utf-8

"""
    Cloud Testing API

    Allows developers to run automated tests for their mobile applications on Google infrastructure.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_environment_catalog import TestEnvironmentCatalog

class TestTestEnvironmentCatalog(unittest.TestCase):
    """TestEnvironmentCatalog unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestEnvironmentCatalog:
        """Test TestEnvironmentCatalog
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestEnvironmentCatalog`
        """
        model = TestEnvironmentCatalog()
        if include_optional:
            return TestEnvironmentCatalog(
                android_device_catalog = openapi_client.models.android_device_catalog.AndroidDeviceCatalog(
                    models = [
                        openapi_client.models.android_model.AndroidModel(
                            brand = '', 
                            codename = '', 
                            form = 'DEVICE_FORM_UNSPECIFIED', 
                            form_factor = 'DEVICE_FORM_FACTOR_UNSPECIFIED', 
                            id = '', 
                            low_fps_video_recording = True, 
                            manufacturer = '', 
                            name = '', 
                            per_version_info = [
                                openapi_client.models.per_android_version_info.PerAndroidVersionInfo(
                                    device_capacity = 'DEVICE_CAPACITY_UNSPECIFIED', 
                                    direct_access_version_info = openapi_client.models.direct_access_version_info.DirectAccessVersionInfo(
                                        direct_access_supported = True, 
                                        minimum_android_studio_version = '', ), 
                                    interactive_device_availability_estimate = '', 
                                    version_id = '', )
                                ], 
                            screen_density = 56, 
                            screen_x = 56, 
                            screen_y = 56, 
                            supported_abis = [
                                ''
                                ], 
                            supported_version_ids = [
                                ''
                                ], 
                            tags = [
                                ''
                                ], 
                            thumbnail_url = '', )
                        ], 
                    runtime_configuration = openapi_client.models.android_runtime_configuration.AndroidRuntimeConfiguration(
                        locales = [
                            openapi_client.models.locale.Locale(
                                id = '', 
                                name = '', 
                                region = '', )
                            ], 
                        orientations = [
                            openapi_client.models.orientation.Orientation(
                                id = '', 
                                name = '', )
                            ], ), 
                    versions = [
                        openapi_client.models.android_version.AndroidVersion(
                            api_level = 56, 
                            code_name = '', 
                            distribution = openapi_client.models.distribution.Distribution(
                                market_share = 1.337, 
                                measurement_time = '', ), 
                            id = '', 
                            release_date = openapi_client.models.date.Date(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            version_string = '', )
                        ], ),
                device_ip_block_catalog = openapi_client.models.device_ip_block_catalog.DeviceIpBlockCatalog(
                    ip_blocks = [
                        openapi_client.models.device_ip_block.DeviceIpBlock(
                            added_date = openapi_client.models.date.Date(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            block = '', 
                            form = 'DEVICE_FORM_UNSPECIFIED', )
                        ], ),
                ios_device_catalog = openapi_client.models.ios_device_catalog.IosDeviceCatalog(
                    models = [
                        openapi_client.models.ios_model.IosModel(
                            device_capabilities = [
                                ''
                                ], 
                            form_factor = 'DEVICE_FORM_FACTOR_UNSPECIFIED', 
                            id = '', 
                            name = '', 
                            per_version_info = [
                                openapi_client.models.per_ios_version_info.PerIosVersionInfo(
                                    device_capacity = 'DEVICE_CAPACITY_UNSPECIFIED', 
                                    version_id = '', )
                                ], 
                            screen_density = 56, 
                            screen_x = 56, 
                            screen_y = 56, 
                            supported_version_ids = [
                                ''
                                ], 
                            tags = [
                                ''
                                ], )
                        ], 
                    runtime_configuration = openapi_client.models.ios_runtime_configuration.IosRuntimeConfiguration(
                        locales = [
                            openapi_client.models.locale.Locale(
                                id = '', 
                                name = '', 
                                region = '', )
                            ], 
                        orientations = [
                            openapi_client.models.orientation.Orientation(
                                id = '', 
                                name = '', )
                            ], ), 
                    versions = [
                        openapi_client.models.ios_version.IosVersion(
                            id = '', 
                            major_version = 56, 
                            minor_version = 56, 
                            supported_xcode_version_ids = [
                                ''
                                ], )
                        ], 
                    xcode_versions = [
                        openapi_client.models.xcode_version.XcodeVersion(
                            version = '', )
                        ], ),
                network_configuration_catalog = openapi_client.models.network_configuration_catalog.NetworkConfigurationCatalog(
                    configurations = [
                        openapi_client.models.network_configuration.NetworkConfiguration(
                            down_rule = openapi_client.models.traffic_rule.TrafficRule(
                                bandwidth = 1.337, 
                                burst = 1.337, 
                                delay = '', 
                                packet_duplication_ratio = 1.337, 
                                packet_loss_ratio = 1.337, ), 
                            id = '', 
                            up_rule = openapi_client.models.traffic_rule.TrafficRule(
                                bandwidth = 1.337, 
                                burst = 1.337, 
                                delay = '', 
                                packet_duplication_ratio = 1.337, 
                                packet_loss_ratio = 1.337, ), )
                        ], ),
                software_catalog = openapi_client.models.provided_software_catalog.ProvidedSoftwareCatalog(
                    androidx_orchestrator_version = '', 
                    orchestrator_version = '', )
            )
        else:
            return TestEnvironmentCatalog(
        )
        """

    def testTestEnvironmentCatalog(self):
        """Test TestEnvironmentCatalog"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
