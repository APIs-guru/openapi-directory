# coding: utf-8

"""
    Cloud Testing API

    Allows developers to run automated tests for their mobile applications on Google infrastructure.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.android_robo_test import AndroidRoboTest

class TestAndroidRoboTest(unittest.TestCase):
    """AndroidRoboTest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AndroidRoboTest:
        """Test AndroidRoboTest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AndroidRoboTest`
        """
        model = AndroidRoboTest()
        if include_optional:
            return AndroidRoboTest(
                app_apk = openapi_client.models.file_reference.FileReference(
                    gcs_path = '', ),
                app_bundle = openapi_client.models.app_bundle.AppBundle(
                    bundle_location = openapi_client.models.file_reference.FileReference(
                        gcs_path = '', ), ),
                app_initial_activity = '',
                app_package_id = '',
                max_depth = 56,
                max_steps = 56,
                robo_directives = [
                    openapi_client.models.robo_directive.RoboDirective(
                        action_type = 'ACTION_TYPE_UNSPECIFIED', 
                        input_text = '', 
                        resource_name = '', )
                    ],
                robo_mode = 'ROBO_MODE_UNSPECIFIED',
                robo_script = openapi_client.models.file_reference.FileReference(
                    gcs_path = '', ),
                starting_intents = [
                    openapi_client.models.robo_starting_intent.RoboStartingIntent(
                        launcher_activity = openapi_client.models.launcher_activity_intent.LauncherActivityIntent(), 
                        no_activity = openapi_client.models.no_activity_intent.NoActivityIntent(), 
                        start_activity = openapi_client.models.start_activity_intent.StartActivityIntent(
                            action = '', 
                            categories = [
                                ''
                                ], 
                            uri = '', ), 
                        timeout = '', )
                    ]
            )
        else:
            return AndroidRoboTest(
        )
        """

    def testAndroidRoboTest(self):
        """Test AndroidRoboTest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
