# coding: utf-8

"""
    Idea Hub API

    This is an invitation-only API.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_search_ideahub_v1alpha_list_ideas_response import GoogleSearchIdeahubV1alphaListIdeasResponse

class TestGoogleSearchIdeahubV1alphaListIdeasResponse(unittest.TestCase):
    """GoogleSearchIdeahubV1alphaListIdeasResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleSearchIdeahubV1alphaListIdeasResponse:
        """Test GoogleSearchIdeahubV1alphaListIdeasResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleSearchIdeahubV1alphaListIdeasResponse`
        """
        model = GoogleSearchIdeahubV1alphaListIdeasResponse()
        if include_optional:
            return GoogleSearchIdeahubV1alphaListIdeasResponse(
                ideas = [
                    openapi_client.models.google_search_ideahub_v1alpha_idea.GoogleSearchIdeahubV1alphaIdea(
                        name = '', 
                        text = '', 
                        topics = [
                            openapi_client.models.google_search_ideahub_v1alpha_topic.GoogleSearchIdeahubV1alphaTopic(
                                display_name = '', 
                                mid = '', 
                                name = '', )
                            ], )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleSearchIdeahubV1alphaListIdeasResponse(
        )
        """

    def testGoogleSearchIdeahubV1alphaListIdeasResponse(self):
        """Test GoogleSearchIdeahubV1alphaListIdeasResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
