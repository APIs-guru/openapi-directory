# coding: utf-8

"""
    Android Device Provisioning Partner API

    Automates Android zero-touch enrollment for device resellers, customers, and EMMs.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.customer_remove_configuration_request import CustomerRemoveConfigurationRequest

class TestCustomerRemoveConfigurationRequest(unittest.TestCase):
    """CustomerRemoveConfigurationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomerRemoveConfigurationRequest:
        """Test CustomerRemoveConfigurationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomerRemoveConfigurationRequest`
        """
        model = CustomerRemoveConfigurationRequest()
        if include_optional:
            return CustomerRemoveConfigurationRequest(
                device = openapi_client.models.device_reference.DeviceReference(
                    device_id = '', 
                    device_identifier = openapi_client.models.device_identifier.DeviceIdentifier(
                        chrome_os_attested_device_id = '', 
                        device_type = 'DEVICE_TYPE_UNSPECIFIED', 
                        imei = '', 
                        manufacturer = '', 
                        meid = '', 
                        model = '', 
                        serial_number = '', ), )
            )
        else:
            return CustomerRemoveConfigurationRequest(
        )
        """

    def testCustomerRemoveConfigurationRequest(self):
        """Test CustomerRemoveConfigurationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
