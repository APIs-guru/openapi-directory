# coding: utf-8

"""
    Android Device Provisioning Partner API

    Automates Android zero-touch enrollment for device resellers, customers, and EMMs.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.devices_long_running_operation_response import DevicesLongRunningOperationResponse

class TestDevicesLongRunningOperationResponse(unittest.TestCase):
    """DevicesLongRunningOperationResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DevicesLongRunningOperationResponse:
        """Test DevicesLongRunningOperationResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DevicesLongRunningOperationResponse`
        """
        model = DevicesLongRunningOperationResponse()
        if include_optional:
            return DevicesLongRunningOperationResponse(
                per_device_status = [
                    openapi_client.models.operation_per_device.OperationPerDevice(
                        claim = openapi_client.models.partner_claim.PartnerClaim(
                            configuration_id = '', 
                            customer_id = '', 
                            device_identifier = openapi_client.models.device_identifier.DeviceIdentifier(
                                chrome_os_attested_device_id = '', 
                                device_type = 'DEVICE_TYPE_UNSPECIFIED', 
                                imei = '', 
                                manufacturer = '', 
                                meid = '', 
                                model = '', 
                                serial_number = '', ), 
                            device_metadata = openapi_client.models.device_metadata.DeviceMetadata(
                                entries = {
                                    'key' : ''
                                    }, ), 
                            google_workspace_customer_id = '', 
                            pre_provisioning_token = '', 
                            section_type = 'SECTION_TYPE_UNSPECIFIED', 
                            simlock_profile_id = '', ), 
                        result = openapi_client.models.per_device_status_in_batch.PerDeviceStatusInBatch(
                            device_id = '', 
                            error_identifier = '', 
                            error_message = '', 
                            status = 'SINGLE_DEVICE_STATUS_UNSPECIFIED', ), 
                        unclaim = openapi_client.models.partner_unclaim.PartnerUnclaim(
                            device_id = '', 
                            section_type = 'SECTION_TYPE_UNSPECIFIED', 
                            vacation_mode_days = 56, 
                            vacation_mode_expire_time = '', ), 
                        update_metadata = openapi_client.models.update_metadata_arguments.UpdateMetadataArguments(
                            device_id = '', ), )
                    ],
                success_count = 56
            )
        else:
            return DevicesLongRunningOperationResponse(
        )
        """

    def testDevicesLongRunningOperationResponse(self):
        """Test DevicesLongRunningOperationResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
