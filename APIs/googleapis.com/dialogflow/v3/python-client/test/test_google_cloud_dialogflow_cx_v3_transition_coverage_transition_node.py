# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_transition_coverage_transition_node import GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode

class TestGoogleCloudDialogflowCxV3TransitionCoverageTransitionNode(unittest.TestCase):
    """GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode:
        """Test GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode`
        """
        model = GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode()
        if include_optional:
            return GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode(
                flow = openapi_client.models.google_cloud_dialogflow_cx_v3_flow.GoogleCloudDialogflowCxV3Flow(
                    advanced_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings.GoogleCloudDialogflowCxV3AdvancedSettings(
                        audio_export_gcs_destination = openapi_client.models.google_cloud_dialogflow_cx_v3_gcs_destination.GoogleCloudDialogflowCxV3GcsDestination(
                            uri = '', ), 
                        dtmf_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings_dtmf_settings.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings(
                            enabled = True, 
                            finish_digit = '', 
                            max_digits = 56, ), 
                        logging_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings_logging_settings.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings(
                            enable_interaction_logging = True, 
                            enable_stackdriver_logging = True, ), ), 
                    description = '', 
                    display_name = '', 
                    event_handlers = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_event_handler.GoogleCloudDialogflowCxV3EventHandler(
                            event = '', 
                            name = '', 
                            target_flow = '', 
                            target_page = '', 
                            trigger_fulfillment = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment.GoogleCloudDialogflowCxV3Fulfillment(
                                conditional_cases = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(
                                        cases = [
                                            openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase(
                                                case_content = [
                                                    openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case_case_content.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(
                                                        additional_cases = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(), 
                                                        message = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                                            channel = '', 
                                                            conversation_success = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_conversation_success.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess(
                                                                metadata = {
                                                                    'key' : null
                                                                    }, ), 
                                                            end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                                                            knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                                                            live_agent_handoff = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_live_agent_handoff.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff(), 
                                                            mixed_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio.GoogleCloudDialogflowCxV3ResponseMessageMixedAudio(
                                                                segments = [
                                                                    openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio_segment.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment(
                                                                        allow_playback_interruption = True, 
                                                                        audio = 'YQ==', 
                                                                        uri = '', )
                                                                    ], ), 
                                                            output_audio_text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_output_audio_text.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText(
                                                                allow_playback_interruption = True, 
                                                                ssml = '', 
                                                                text = '', ), 
                                                            payload = {
                                                                'key' : null
                                                                }, 
                                                            play_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_play_audio.GoogleCloudDialogflowCxV3ResponseMessagePlayAudio(
                                                                allow_playback_interruption = True, 
                                                                audio_uri = '', ), 
                                                            response_type = 'RESPONSE_TYPE_UNSPECIFIED', 
                                                            telephony_transfer_call = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_telephony_transfer_call.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall(
                                                                phone_number = '', ), 
                                                            text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_text.GoogleCloudDialogflowCxV3ResponseMessageText(
                                                                allow_playback_interruption = True, ), ), )
                                                    ], 
                                                condition = '', )
                                            ], )
                                    ], 
                                enable_generative_fallback = True, 
                                messages = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                        channel = '', 
                                        end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                                        knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                                        response_type = 'RESPONSE_TYPE_UNSPECIFIED', )
                                    ], 
                                return_partial_responses = True, 
                                set_parameter_actions = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_set_parameter_action.GoogleCloudDialogflowCxV3FulfillmentSetParameterAction(
                                        parameter = '', 
                                        value = null, )
                                    ], 
                                tag = '', 
                                webhook = '', ), )
                        ], 
                    knowledge_connector_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_knowledge_connector_settings.GoogleCloudDialogflowCxV3KnowledgeConnectorSettings(
                        data_store_connections = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_data_store_connection.GoogleCloudDialogflowCxV3DataStoreConnection(
                                data_store = '', 
                                data_store_type = 'DATA_STORE_TYPE_UNSPECIFIED', )
                            ], 
                        enabled = True, 
                        target_flow = '', 
                        target_page = '', ), 
                    name = '', 
                    nlu_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_nlu_settings.GoogleCloudDialogflowCxV3NluSettings(
                        classification_threshold = 1.337, 
                        model_training_mode = 'MODEL_TRAINING_MODE_UNSPECIFIED', 
                        model_type = 'MODEL_TYPE_UNSPECIFIED', ), 
                    transition_route_groups = [
                        ''
                        ], 
                    transition_routes = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_transition_route.GoogleCloudDialogflowCxV3TransitionRoute(
                            condition = '', 
                            description = '', 
                            intent = '', 
                            name = '', 
                            target_flow = '', 
                            target_page = '', )
                        ], ),
                page = openapi_client.models.google_cloud_dialogflow_cx_v3_page.GoogleCloudDialogflowCxV3Page(
                    advanced_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings.GoogleCloudDialogflowCxV3AdvancedSettings(
                        audio_export_gcs_destination = openapi_client.models.google_cloud_dialogflow_cx_v3_gcs_destination.GoogleCloudDialogflowCxV3GcsDestination(
                            uri = '', ), 
                        dtmf_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings_dtmf_settings.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings(
                            enabled = True, 
                            finish_digit = '', 
                            max_digits = 56, ), 
                        logging_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings_logging_settings.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings(
                            enable_interaction_logging = True, 
                            enable_stackdriver_logging = True, ), ), 
                    description = '', 
                    display_name = '', 
                    entry_fulfillment = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment.GoogleCloudDialogflowCxV3Fulfillment(
                        conditional_cases = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(
                                cases = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase(
                                        case_content = [
                                            openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case_case_content.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(
                                                additional_cases = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(), 
                                                message = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                                    channel = '', 
                                                    conversation_success = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_conversation_success.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess(
                                                        metadata = {
                                                            'key' : null
                                                            }, ), 
                                                    end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                                                    knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                                                    live_agent_handoff = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_live_agent_handoff.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff(), 
                                                    mixed_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio.GoogleCloudDialogflowCxV3ResponseMessageMixedAudio(
                                                        segments = [
                                                            openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio_segment.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment(
                                                                allow_playback_interruption = True, 
                                                                audio = 'YQ==', 
                                                                uri = '', )
                                                            ], ), 
                                                    output_audio_text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_output_audio_text.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText(
                                                        allow_playback_interruption = True, 
                                                        ssml = '', 
                                                        text = '', ), 
                                                    payload = {
                                                        'key' : null
                                                        }, 
                                                    play_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_play_audio.GoogleCloudDialogflowCxV3ResponseMessagePlayAudio(
                                                        allow_playback_interruption = True, 
                                                        audio_uri = '', ), 
                                                    response_type = 'RESPONSE_TYPE_UNSPECIFIED', 
                                                    telephony_transfer_call = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_telephony_transfer_call.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall(
                                                        phone_number = '', ), 
                                                    text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_text.GoogleCloudDialogflowCxV3ResponseMessageText(
                                                        allow_playback_interruption = True, ), ), )
                                            ], 
                                        condition = '', )
                                    ], )
                            ], 
                        enable_generative_fallback = True, 
                        messages = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                channel = '', 
                                end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                                knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                                response_type = 'RESPONSE_TYPE_UNSPECIFIED', )
                            ], 
                        return_partial_responses = True, 
                        set_parameter_actions = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_set_parameter_action.GoogleCloudDialogflowCxV3FulfillmentSetParameterAction(
                                parameter = '', 
                                value = null, )
                            ], 
                        tag = '', 
                        webhook = '', ), 
                    event_handlers = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_event_handler.GoogleCloudDialogflowCxV3EventHandler(
                            event = '', 
                            name = '', 
                            target_flow = '', 
                            target_page = '', 
                            trigger_fulfillment = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment.GoogleCloudDialogflowCxV3Fulfillment(
                                enable_generative_fallback = True, 
                                return_partial_responses = True, 
                                tag = '', 
                                webhook = '', ), )
                        ], 
                    form = openapi_client.models.google_cloud_dialogflow_cx_v3_form.GoogleCloudDialogflowCxV3Form(
                        parameters = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_form_parameter.GoogleCloudDialogflowCxV3FormParameter(
                                default_value = null, 
                                display_name = '', 
                                entity_type = '', 
                                fill_behavior = openapi_client.models.google_cloud_dialogflow_cx_v3_form_parameter_fill_behavior.GoogleCloudDialogflowCxV3FormParameterFillBehavior(
                                    initial_prompt_fulfillment = , 
                                    reprompt_event_handlers = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3_event_handler.GoogleCloudDialogflowCxV3EventHandler(
                                            event = '', 
                                            name = '', 
                                            target_flow = '', 
                                            target_page = '', )
                                        ], ), 
                                is_list = True, 
                                redact = True, 
                                required = True, )
                            ], ), 
                    knowledge_connector_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_knowledge_connector_settings.GoogleCloudDialogflowCxV3KnowledgeConnectorSettings(
                        data_store_connections = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_data_store_connection.GoogleCloudDialogflowCxV3DataStoreConnection(
                                data_store = '', 
                                data_store_type = 'DATA_STORE_TYPE_UNSPECIFIED', )
                            ], 
                        enabled = True, 
                        target_flow = '', 
                        target_page = '', ), 
                    name = '', 
                    transition_route_groups = [
                        ''
                        ], 
                    transition_routes = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_transition_route.GoogleCloudDialogflowCxV3TransitionRoute(
                            condition = '', 
                            description = '', 
                            intent = '', 
                            name = '', 
                            target_flow = '', 
                            target_page = '', )
                        ], )
            )
        else:
            return GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode(
        )
        """

    def testGoogleCloudDialogflowCxV3TransitionCoverageTransitionNode(self):
        """Test GoogleCloudDialogflowCxV3TransitionCoverageTransitionNode"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
