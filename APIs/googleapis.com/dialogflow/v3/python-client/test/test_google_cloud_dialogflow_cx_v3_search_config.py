# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_search_config import GoogleCloudDialogflowCxV3SearchConfig

class TestGoogleCloudDialogflowCxV3SearchConfig(unittest.TestCase):
    """GoogleCloudDialogflowCxV3SearchConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3SearchConfig:
        """Test GoogleCloudDialogflowCxV3SearchConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3SearchConfig`
        """
        model = GoogleCloudDialogflowCxV3SearchConfig()
        if include_optional:
            return GoogleCloudDialogflowCxV3SearchConfig(
                boost_specs = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3_boost_specs.GoogleCloudDialogflowCxV3BoostSpecs(
                        data_stores = [
                            ''
                            ], 
                        spec = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_boost_spec.GoogleCloudDialogflowCxV3BoostSpec(
                                condition_boost_specs = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_boost_spec_condition_boost_spec.GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec(
                                        boost = 1.337, 
                                        condition = '', )
                                    ], )
                            ], )
                    ],
                filter_specs = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3_filter_specs.GoogleCloudDialogflowCxV3FilterSpecs(
                        data_stores = [
                            ''
                            ], 
                        filter = '', )
                    ]
            )
        else:
            return GoogleCloudDialogflowCxV3SearchConfig(
        )
        """

    def testGoogleCloudDialogflowCxV3SearchConfig(self):
        """Test GoogleCloudDialogflowCxV3SearchConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
