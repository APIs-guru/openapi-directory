# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v3alpha1_turn_signals import GoogleCloudDialogflowV3alpha1TurnSignals

class TestGoogleCloudDialogflowV3alpha1TurnSignals(unittest.TestCase):
    """GoogleCloudDialogflowV3alpha1TurnSignals unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV3alpha1TurnSignals:
        """Test GoogleCloudDialogflowV3alpha1TurnSignals
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV3alpha1TurnSignals`
        """
        model = GoogleCloudDialogflowV3alpha1TurnSignals()
        if include_optional:
            return GoogleCloudDialogflowV3alpha1TurnSignals(
                agent_escalated = True,
                dtmf_used = True,
                failure_reasons = [
                    'FAILURE_REASON_UNSPECIFIED'
                    ],
                no_match = True,
                no_user_input = True,
                reached_end_page = True,
                sentiment_magnitude = 1.337,
                sentiment_score = 1.337,
                triggered_abandonment_event = True,
                user_escalated = True,
                webhook_statuses = [
                    ''
                    ]
            )
        else:
            return GoogleCloudDialogflowV3alpha1TurnSignals(
        )
        """

    def testGoogleCloudDialogflowV3alpha1TurnSignals(self):
        """Test GoogleCloudDialogflowV3alpha1TurnSignals"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
