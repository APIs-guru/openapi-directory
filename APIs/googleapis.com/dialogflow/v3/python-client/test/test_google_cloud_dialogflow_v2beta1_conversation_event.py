# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2beta1_conversation_event import GoogleCloudDialogflowV2beta1ConversationEvent

class TestGoogleCloudDialogflowV2beta1ConversationEvent(unittest.TestCase):
    """GoogleCloudDialogflowV2beta1ConversationEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2beta1ConversationEvent:
        """Test GoogleCloudDialogflowV2beta1ConversationEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2beta1ConversationEvent`
        """
        model = GoogleCloudDialogflowV2beta1ConversationEvent()
        if include_optional:
            return GoogleCloudDialogflowV2beta1ConversationEvent(
                conversation = '',
                error_status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                new_message_payload = openapi_client.models.google_cloud_dialogflow_v2beta1_message.GoogleCloudDialogflowV2beta1Message(
                    content = '', 
                    create_time = '', 
                    language_code = '', 
                    message_annotation = openapi_client.models.google_cloud_dialogflow_v2beta1_message_annotation.GoogleCloudDialogflowV2beta1MessageAnnotation(
                        contain_entities = True, 
                        parts = [
                            openapi_client.models.google_cloud_dialogflow_v2beta1_annotated_message_part.GoogleCloudDialogflowV2beta1AnnotatedMessagePart(
                                entity_type = '', 
                                formatted_value = null, 
                                text = '', )
                            ], ), 
                    name = '', 
                    participant = '', 
                    participant_role = 'ROLE_UNSPECIFIED', 
                    send_time = '', 
                    sentiment_analysis = openapi_client.models.google_cloud_dialogflow_v2beta1_sentiment_analysis_result.GoogleCloudDialogflowV2beta1SentimentAnalysisResult(
                        query_text_sentiment = openapi_client.models.google_cloud_dialogflow_v2beta1_sentiment.GoogleCloudDialogflowV2beta1Sentiment(
                            magnitude = 1.337, 
                            score = 1.337, ), ), ),
                type = 'TYPE_UNSPECIFIED'
            )
        else:
            return GoogleCloudDialogflowV2beta1ConversationEvent(
        )
        """

    def testGoogleCloudDialogflowV2beta1ConversationEvent(self):
        """Test GoogleCloudDialogflowV2beta1ConversationEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
