# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_output_audio_config import GoogleCloudDialogflowCxV3OutputAudioConfig

class TestGoogleCloudDialogflowCxV3OutputAudioConfig(unittest.TestCase):
    """GoogleCloudDialogflowCxV3OutputAudioConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3OutputAudioConfig:
        """Test GoogleCloudDialogflowCxV3OutputAudioConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3OutputAudioConfig`
        """
        model = GoogleCloudDialogflowCxV3OutputAudioConfig()
        if include_optional:
            return GoogleCloudDialogflowCxV3OutputAudioConfig(
                audio_encoding = 'OUTPUT_AUDIO_ENCODING_UNSPECIFIED',
                sample_rate_hertz = 56,
                synthesize_speech_config = openapi_client.models.google_cloud_dialogflow_cx_v3_synthesize_speech_config.GoogleCloudDialogflowCxV3SynthesizeSpeechConfig(
                    effects_profile_id = [
                        ''
                        ], 
                    pitch = 1.337, 
                    speaking_rate = 1.337, 
                    voice = openapi_client.models.google_cloud_dialogflow_cx_v3_voice_selection_params.GoogleCloudDialogflowCxV3VoiceSelectionParams(
                        name = '', 
                        ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', ), 
                    volume_gain_db = 1.337, )
            )
        else:
            return GoogleCloudDialogflowCxV3OutputAudioConfig(
        )
        """

    def testGoogleCloudDialogflowCxV3OutputAudioConfig(self):
        """Test GoogleCloudDialogflowCxV3OutputAudioConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
