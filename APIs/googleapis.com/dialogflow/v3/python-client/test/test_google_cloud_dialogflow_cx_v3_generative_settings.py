# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_generative_settings import GoogleCloudDialogflowCxV3GenerativeSettings

class TestGoogleCloudDialogflowCxV3GenerativeSettings(unittest.TestCase):
    """GoogleCloudDialogflowCxV3GenerativeSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3GenerativeSettings:
        """Test GoogleCloudDialogflowCxV3GenerativeSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3GenerativeSettings`
        """
        model = GoogleCloudDialogflowCxV3GenerativeSettings()
        if include_optional:
            return GoogleCloudDialogflowCxV3GenerativeSettings(
                fallback_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_generative_settings_fallback_settings.GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettings(
                    prompt_templates = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_generative_settings_fallback_settings_prompt_template.GoogleCloudDialogflowCxV3GenerativeSettingsFallbackSettingsPromptTemplate(
                            display_name = '', 
                            frozen = True, 
                            prompt_text = '', )
                        ], 
                    selected_prompt = '', ),
                generative_safety_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_safety_settings.GoogleCloudDialogflowCxV3SafetySettings(
                    banned_phrases = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_safety_settings_phrase.GoogleCloudDialogflowCxV3SafetySettingsPhrase(
                            language_code = '', 
                            text = '', )
                        ], ),
                knowledge_connector_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_generative_settings_knowledge_connector_settings.GoogleCloudDialogflowCxV3GenerativeSettingsKnowledgeConnectorSettings(
                    agent = '', 
                    agent_identity = '', 
                    agent_scope = '', 
                    business = '', 
                    business_description = '', 
                    disable_data_store_fallback = True, ),
                language_code = '',
                name = ''
            )
        else:
            return GoogleCloudDialogflowCxV3GenerativeSettings(
        )
        """

    def testGoogleCloudDialogflowCxV3GenerativeSettings(self):
        """Test GoogleCloudDialogflowCxV3GenerativeSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
