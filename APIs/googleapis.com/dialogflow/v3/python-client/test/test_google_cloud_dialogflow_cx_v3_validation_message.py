# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_validation_message import GoogleCloudDialogflowCxV3ValidationMessage

class TestGoogleCloudDialogflowCxV3ValidationMessage(unittest.TestCase):
    """GoogleCloudDialogflowCxV3ValidationMessage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3ValidationMessage:
        """Test GoogleCloudDialogflowCxV3ValidationMessage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3ValidationMessage`
        """
        model = GoogleCloudDialogflowCxV3ValidationMessage()
        if include_optional:
            return GoogleCloudDialogflowCxV3ValidationMessage(
                detail = '',
                resource_names = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3_resource_name.GoogleCloudDialogflowCxV3ResourceName(
                        display_name = '', 
                        name = '', )
                    ],
                resource_type = 'RESOURCE_TYPE_UNSPECIFIED',
                resources = [
                    ''
                    ],
                severity = 'SEVERITY_UNSPECIFIED'
            )
        else:
            return GoogleCloudDialogflowCxV3ValidationMessage(
        )
        """

    def testGoogleCloudDialogflowCxV3ValidationMessage(self):
        """Test GoogleCloudDialogflowCxV3ValidationMessage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
