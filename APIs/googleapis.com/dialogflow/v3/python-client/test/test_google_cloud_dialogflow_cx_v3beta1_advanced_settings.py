# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings import GoogleCloudDialogflowCxV3beta1AdvancedSettings

class TestGoogleCloudDialogflowCxV3beta1AdvancedSettings(unittest.TestCase):
    """GoogleCloudDialogflowCxV3beta1AdvancedSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3beta1AdvancedSettings:
        """Test GoogleCloudDialogflowCxV3beta1AdvancedSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3beta1AdvancedSettings`
        """
        model = GoogleCloudDialogflowCxV3beta1AdvancedSettings()
        if include_optional:
            return GoogleCloudDialogflowCxV3beta1AdvancedSettings(
                audio_export_gcs_destination = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_gcs_destination.GoogleCloudDialogflowCxV3beta1GcsDestination(
                    uri = '', ),
                dtmf_settings = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings_dtmf_settings.GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings(
                    enabled = True, 
                    finish_digit = '', 
                    max_digits = 56, ),
                logging_settings = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings_logging_settings.GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings(
                    enable_interaction_logging = True, 
                    enable_stackdriver_logging = True, )
            )
        else:
            return GoogleCloudDialogflowCxV3beta1AdvancedSettings(
        )
        """

    def testGoogleCloudDialogflowCxV3beta1AdvancedSettings(self):
        """Test GoogleCloudDialogflowCxV3beta1AdvancedSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
