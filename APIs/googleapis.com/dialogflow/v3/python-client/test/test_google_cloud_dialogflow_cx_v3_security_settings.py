# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_security_settings import GoogleCloudDialogflowCxV3SecuritySettings

class TestGoogleCloudDialogflowCxV3SecuritySettings(unittest.TestCase):
    """GoogleCloudDialogflowCxV3SecuritySettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3SecuritySettings:
        """Test GoogleCloudDialogflowCxV3SecuritySettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3SecuritySettings`
        """
        model = GoogleCloudDialogflowCxV3SecuritySettings()
        if include_optional:
            return GoogleCloudDialogflowCxV3SecuritySettings(
                audio_export_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_security_settings_audio_export_settings.GoogleCloudDialogflowCxV3SecuritySettingsAudioExportSettings(
                    audio_export_pattern = '', 
                    audio_format = 'AUDIO_FORMAT_UNSPECIFIED', 
                    enable_audio_redaction = True, 
                    gcs_bucket = '', ),
                deidentify_template = '',
                display_name = '',
                insights_export_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_security_settings_insights_export_settings.GoogleCloudDialogflowCxV3SecuritySettingsInsightsExportSettings(
                    enable_insights_export = True, ),
                inspect_template = '',
                name = '',
                purge_data_types = [
                    'PURGE_DATA_TYPE_UNSPECIFIED'
                    ],
                redaction_scope = 'REDACTION_SCOPE_UNSPECIFIED',
                redaction_strategy = 'REDACTION_STRATEGY_UNSPECIFIED',
                retention_strategy = 'RETENTION_STRATEGY_UNSPECIFIED',
                retention_window_days = 56
            )
        else:
            return GoogleCloudDialogflowCxV3SecuritySettings(
        )
        """

    def testGoogleCloudDialogflowCxV3SecuritySettings(self):
        """Test GoogleCloudDialogflowCxV3SecuritySettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
