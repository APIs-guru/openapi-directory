# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_fulfill_intent_request import GoogleCloudDialogflowCxV3FulfillIntentRequest

class TestGoogleCloudDialogflowCxV3FulfillIntentRequest(unittest.TestCase):
    """GoogleCloudDialogflowCxV3FulfillIntentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3FulfillIntentRequest:
        """Test GoogleCloudDialogflowCxV3FulfillIntentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3FulfillIntentRequest`
        """
        model = GoogleCloudDialogflowCxV3FulfillIntentRequest()
        if include_optional:
            return GoogleCloudDialogflowCxV3FulfillIntentRequest(
                match = openapi_client.models.google_cloud_dialogflow_cx_v3_match.GoogleCloudDialogflowCxV3Match(
                    confidence = 1.337, 
                    event = '', 
                    intent = openapi_client.models.google_cloud_dialogflow_cx_v3_intent.GoogleCloudDialogflowCxV3Intent(
                        description = '', 
                        display_name = '', 
                        is_fallback = True, 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        parameters = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_intent_parameter.GoogleCloudDialogflowCxV3IntentParameter(
                                entity_type = '', 
                                id = '', 
                                is_list = True, 
                                redact = True, )
                            ], 
                        priority = 56, 
                        training_phrases = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_intent_training_phrase.GoogleCloudDialogflowCxV3IntentTrainingPhrase(
                                id = '', 
                                parts = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_intent_training_phrase_part.GoogleCloudDialogflowCxV3IntentTrainingPhrasePart(
                                        parameter_id = '', 
                                        text = '', )
                                    ], 
                                repeat_count = 56, )
                            ], ), 
                    match_type = 'MATCH_TYPE_UNSPECIFIED', 
                    parameters = {
                        'key' : null
                        }, 
                    resolved_input = '', ),
                match_intent_request = openapi_client.models.google_cloud_dialogflow_cx_v3_match_intent_request.GoogleCloudDialogflowCxV3MatchIntentRequest(
                    persist_parameter_changes = True, 
                    query_input = openapi_client.models.google_cloud_dialogflow_cx_v3_query_input.GoogleCloudDialogflowCxV3QueryInput(
                        audio = openapi_client.models.google_cloud_dialogflow_cx_v3_audio_input.GoogleCloudDialogflowCxV3AudioInput(
                            config = openapi_client.models.google_cloud_dialogflow_cx_v3_input_audio_config.GoogleCloudDialogflowCxV3InputAudioConfig(
                                audio_encoding = 'AUDIO_ENCODING_UNSPECIFIED', 
                                barge_in_config = openapi_client.models.google_cloud_dialogflow_cx_v3_barge_in_config.GoogleCloudDialogflowCxV3BargeInConfig(
                                    no_barge_in_duration = '', 
                                    total_duration = '', ), 
                                enable_word_info = True, 
                                model = '', 
                                model_variant = 'SPEECH_MODEL_VARIANT_UNSPECIFIED', 
                                opt_out_conformer_model_migration = True, 
                                phrase_hints = [
                                    ''
                                    ], 
                                sample_rate_hertz = 56, 
                                single_utterance = True, ), ), 
                        dtmf = openapi_client.models.google_cloud_dialogflow_cx_v3_dtmf_input.GoogleCloudDialogflowCxV3DtmfInput(
                            digits = '', 
                            finish_digit = '', ), 
                        event = openapi_client.models.google_cloud_dialogflow_cx_v3_event_input.GoogleCloudDialogflowCxV3EventInput(), 
                        intent = openapi_client.models.google_cloud_dialogflow_cx_v3_intent_input.GoogleCloudDialogflowCxV3IntentInput(), 
                        language_code = '', 
                        text = openapi_client.models.google_cloud_dialogflow_cx_v3_text_input.GoogleCloudDialogflowCxV3TextInput(), ), 
                    query_params = openapi_client.models.google_cloud_dialogflow_cx_v3_query_parameters.GoogleCloudDialogflowCxV3QueryParameters(
                        analyze_query_text_sentiment = True, 
                        channel = '', 
                        current_page = '', 
                        disable_webhook = True, 
                        end_user_metadata = {
                            'key' : null
                            }, 
                        flow_versions = [
                            ''
                            ], 
                        geo_location = openapi_client.models.google_type_lat_lng.GoogleTypeLatLng(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        parameters = {
                            'key' : null
                            }, 
                        payload = {
                            'key' : null
                            }, 
                        search_config = openapi_client.models.google_cloud_dialogflow_cx_v3_search_config.GoogleCloudDialogflowCxV3SearchConfig(
                            boost_specs = [
                                openapi_client.models.google_cloud_dialogflow_cx_v3_boost_specs.GoogleCloudDialogflowCxV3BoostSpecs(
                                    data_stores = [
                                        ''
                                        ], 
                                    spec = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3_boost_spec.GoogleCloudDialogflowCxV3BoostSpec(
                                            condition_boost_specs = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_boost_spec_condition_boost_spec.GoogleCloudDialogflowCxV3BoostSpecConditionBoostSpec(
                                                    boost = 1.337, 
                                                    condition = '', )
                                                ], )
                                        ], )
                                ], 
                            filter_specs = [
                                openapi_client.models.google_cloud_dialogflow_cx_v3_filter_specs.GoogleCloudDialogflowCxV3FilterSpecs(
                                    filter = '', )
                                ], ), 
                        session_entity_types = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_session_entity_type.GoogleCloudDialogflowCxV3SessionEntityType(
                                entities = [
                                    openapi_client.models.google_cloud_dialogflow_cx_v3_entity_type_entity.GoogleCloudDialogflowCxV3EntityTypeEntity(
                                        synonyms = [
                                            ''
                                            ], 
                                        value = '', )
                                    ], 
                                entity_override_mode = 'ENTITY_OVERRIDE_MODE_UNSPECIFIED', 
                                name = '', )
                            ], 
                        session_ttl = '', 
                        time_zone = '', 
                        webhook_headers = {
                            'key' : ''
                            }, ), ),
                output_audio_config = openapi_client.models.google_cloud_dialogflow_cx_v3_output_audio_config.GoogleCloudDialogflowCxV3OutputAudioConfig(
                    audio_encoding = 'OUTPUT_AUDIO_ENCODING_UNSPECIFIED', 
                    sample_rate_hertz = 56, 
                    synthesize_speech_config = openapi_client.models.google_cloud_dialogflow_cx_v3_synthesize_speech_config.GoogleCloudDialogflowCxV3SynthesizeSpeechConfig(
                        effects_profile_id = [
                            ''
                            ], 
                        pitch = 1.337, 
                        speaking_rate = 1.337, 
                        voice = openapi_client.models.google_cloud_dialogflow_cx_v3_voice_selection_params.GoogleCloudDialogflowCxV3VoiceSelectionParams(
                            name = '', 
                            ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', ), 
                        volume_gain_db = 1.337, ), )
            )
        else:
            return GoogleCloudDialogflowCxV3FulfillIntentRequest(
        )
        """

    def testGoogleCloudDialogflowCxV3FulfillIntentRequest(self):
        """Test GoogleCloudDialogflowCxV3FulfillIntentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
