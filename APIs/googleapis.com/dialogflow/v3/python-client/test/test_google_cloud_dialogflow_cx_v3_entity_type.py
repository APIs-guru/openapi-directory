# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_entity_type import GoogleCloudDialogflowCxV3EntityType

class TestGoogleCloudDialogflowCxV3EntityType(unittest.TestCase):
    """GoogleCloudDialogflowCxV3EntityType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3EntityType:
        """Test GoogleCloudDialogflowCxV3EntityType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3EntityType`
        """
        model = GoogleCloudDialogflowCxV3EntityType()
        if include_optional:
            return GoogleCloudDialogflowCxV3EntityType(
                auto_expansion_mode = 'AUTO_EXPANSION_MODE_UNSPECIFIED',
                display_name = '',
                enable_fuzzy_extraction = True,
                entities = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3_entity_type_entity.GoogleCloudDialogflowCxV3EntityTypeEntity(
                        synonyms = [
                            ''
                            ], 
                        value = '', )
                    ],
                excluded_phrases = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3_entity_type_excluded_phrase.GoogleCloudDialogflowCxV3EntityTypeExcludedPhrase(
                        value = '', )
                    ],
                kind = 'KIND_UNSPECIFIED',
                name = '',
                redact = True
            )
        else:
            return GoogleCloudDialogflowCxV3EntityType(
        )
        """

    def testGoogleCloudDialogflowCxV3EntityType(self):
        """Test GoogleCloudDialogflowCxV3EntityType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
