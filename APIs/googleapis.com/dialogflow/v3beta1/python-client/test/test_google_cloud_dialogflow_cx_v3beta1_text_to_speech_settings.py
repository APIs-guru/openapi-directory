# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3beta1_text_to_speech_settings import GoogleCloudDialogflowCxV3beta1TextToSpeechSettings

class TestGoogleCloudDialogflowCxV3beta1TextToSpeechSettings(unittest.TestCase):
    """GoogleCloudDialogflowCxV3beta1TextToSpeechSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3beta1TextToSpeechSettings:
        """Test GoogleCloudDialogflowCxV3beta1TextToSpeechSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3beta1TextToSpeechSettings`
        """
        model = GoogleCloudDialogflowCxV3beta1TextToSpeechSettings()
        if include_optional:
            return GoogleCloudDialogflowCxV3beta1TextToSpeechSettings(
                synthesize_speech_configs = {
                    'key' : openapi_client.models.google_cloud_dialogflow_cx_v3beta1_synthesize_speech_config.GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig(
                        effects_profile_id = [
                            ''
                            ], 
                        pitch = 1.337, 
                        speaking_rate = 1.337, 
                        voice = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_voice_selection_params.GoogleCloudDialogflowCxV3beta1VoiceSelectionParams(
                            name = '', 
                            ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', ), 
                        volume_gain_db = 1.337, )
                    }
            )
        else:
            return GoogleCloudDialogflowCxV3beta1TextToSpeechSettings(
        )
        """

    def testGoogleCloudDialogflowCxV3beta1TextToSpeechSettings(self):
        """Test GoogleCloudDialogflowCxV3beta1TextToSpeechSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
