# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2_conversation_model import GoogleCloudDialogflowV2ConversationModel

class TestGoogleCloudDialogflowV2ConversationModel(unittest.TestCase):
    """GoogleCloudDialogflowV2ConversationModel unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2ConversationModel:
        """Test GoogleCloudDialogflowV2ConversationModel
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2ConversationModel`
        """
        model = GoogleCloudDialogflowV2ConversationModel()
        if include_optional:
            return GoogleCloudDialogflowV2ConversationModel(
                article_suggestion_model_metadata = openapi_client.models.google_cloud_dialogflow_v2_article_suggestion_model_metadata.GoogleCloudDialogflowV2ArticleSuggestionModelMetadata(
                    training_model_type = 'MODEL_TYPE_UNSPECIFIED', ),
                create_time = '',
                datasets = [
                    openapi_client.models.google_cloud_dialogflow_v2_input_dataset.GoogleCloudDialogflowV2InputDataset(
                        dataset = '', )
                    ],
                display_name = '',
                language_code = '',
                name = '',
                smart_reply_model_metadata = openapi_client.models.google_cloud_dialogflow_v2_smart_reply_model_metadata.GoogleCloudDialogflowV2SmartReplyModelMetadata(
                    training_model_type = 'MODEL_TYPE_UNSPECIFIED', ),
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return GoogleCloudDialogflowV2ConversationModel(
        )
        """

    def testGoogleCloudDialogflowV2ConversationModel(self):
        """Test GoogleCloudDialogflowV2ConversationModel"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
