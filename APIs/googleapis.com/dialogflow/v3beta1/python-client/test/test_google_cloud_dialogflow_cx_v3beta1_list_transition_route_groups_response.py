# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3beta1_list_transition_route_groups_response import GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse

class TestGoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse(unittest.TestCase):
    """GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse:
        """Test GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse`
        """
        model = GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse()
        if include_optional:
            return GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse(
                next_page_token = '',
                transition_route_groups = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3beta1_transition_route_group.GoogleCloudDialogflowCxV3beta1TransitionRouteGroup(
                        display_name = '', 
                        name = '', 
                        transition_routes = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3beta1_transition_route.GoogleCloudDialogflowCxV3beta1TransitionRoute(
                                condition = '', 
                                description = '', 
                                intent = '', 
                                name = '', 
                                target_flow = '', 
                                target_page = '', 
                                trigger_fulfillment = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_fulfillment.GoogleCloudDialogflowCxV3beta1Fulfillment(
                                    advanced_settings = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings.GoogleCloudDialogflowCxV3beta1AdvancedSettings(
                                        audio_export_gcs_destination = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_gcs_destination.GoogleCloudDialogflowCxV3beta1GcsDestination(
                                            uri = '', ), 
                                        dtmf_settings = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings_dtmf_settings.GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings(
                                            enabled = True, 
                                            finish_digit = '', 
                                            max_digits = 56, ), 
                                        logging_settings = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_advanced_settings_logging_settings.GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings(
                                            enable_interaction_logging = True, 
                                            enable_stackdriver_logging = True, ), ), 
                                    conditional_cases = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases(
                                            cases = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_conditional_cases_case.GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase(
                                                    case_content = [
                                                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_conditional_cases_case_case_content.GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent(
                                                            additional_cases = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases(), 
                                                            message = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message.GoogleCloudDialogflowCxV3beta1ResponseMessage(
                                                                channel = '', 
                                                                conversation_success = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_conversation_success.GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess(
                                                                    metadata = {
                                                                        'key' : null
                                                                        }, ), 
                                                                end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_end_interaction.GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction(), 
                                                                knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard(), 
                                                                live_agent_handoff = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_live_agent_handoff.GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff(), 
                                                                mixed_audio = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_mixed_audio.GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio(
                                                                    segments = [
                                                                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_mixed_audio_segment.GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment(
                                                                            allow_playback_interruption = True, 
                                                                            audio = 'YQ==', 
                                                                            uri = '', )
                                                                        ], ), 
                                                                output_audio_text = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_output_audio_text.GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText(
                                                                    allow_playback_interruption = True, 
                                                                    ssml = '', 
                                                                    text = '', ), 
                                                                payload = {
                                                                    'key' : null
                                                                    }, 
                                                                play_audio = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_play_audio.GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio(
                                                                    allow_playback_interruption = True, 
                                                                    audio_uri = '', ), 
                                                                telephony_transfer_call = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_telephony_transfer_call.GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall(
                                                                    phone_number = '', ), 
                                                                text = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message_text.GoogleCloudDialogflowCxV3beta1ResponseMessageText(
                                                                    allow_playback_interruption = True, ), ), )
                                                        ], 
                                                    condition = '', )
                                                ], )
                                        ], 
                                    enable_generative_fallback = True, 
                                    messages = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_response_message.GoogleCloudDialogflowCxV3beta1ResponseMessage(
                                            channel = '', )
                                        ], 
                                    return_partial_responses = True, 
                                    set_parameter_actions = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_fulfillment_set_parameter_action.GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction(
                                            parameter = '', 
                                            value = null, )
                                        ], 
                                    tag = '', 
                                    webhook = '', ), )
                            ], )
                    ]
            )
        else:
            return GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse(
        )
        """

    def testGoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse(self):
        """Test GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
