# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case_case_content import GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent

class TestGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(unittest.TestCase):
    """GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent:
        """Test GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent`
        """
        model = GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent()
        if include_optional:
            return GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(
                additional_cases = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(
                    cases = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase(
                            case_content = [
                                openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case_case_content.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(
                                    message = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                        channel = '', 
                                        conversation_success = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_conversation_success.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess(
                                            metadata = {
                                                'key' : null
                                                }, ), 
                                        end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                                        knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                                        live_agent_handoff = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_live_agent_handoff.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff(), 
                                        mixed_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio.GoogleCloudDialogflowCxV3ResponseMessageMixedAudio(
                                            segments = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio_segment.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment(
                                                    allow_playback_interruption = True, 
                                                    audio = 'YQ==', 
                                                    uri = '', )
                                                ], ), 
                                        output_audio_text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_output_audio_text.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText(
                                            allow_playback_interruption = True, 
                                            ssml = '', 
                                            text = '', ), 
                                        payload = {
                                            'key' : null
                                            }, 
                                        play_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_play_audio.GoogleCloudDialogflowCxV3ResponseMessagePlayAudio(
                                            allow_playback_interruption = True, 
                                            audio_uri = '', ), 
                                        response_type = 'RESPONSE_TYPE_UNSPECIFIED', 
                                        telephony_transfer_call = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_telephony_transfer_call.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall(
                                            phone_number = '', ), 
                                        text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_text.GoogleCloudDialogflowCxV3ResponseMessageText(
                                            allow_playback_interruption = True, ), ), )
                                ], 
                            condition = '', )
                        ], ),
                message = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                    channel = '', 
                    conversation_success = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_conversation_success.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess(
                        metadata = {
                            'key' : null
                            }, ), 
                    end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                    knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                    live_agent_handoff = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_live_agent_handoff.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff(), 
                    mixed_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio.GoogleCloudDialogflowCxV3ResponseMessageMixedAudio(
                        segments = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio_segment.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment(
                                allow_playback_interruption = True, 
                                audio = 'YQ==', 
                                uri = '', )
                            ], ), 
                    output_audio_text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_output_audio_text.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText(
                        allow_playback_interruption = True, 
                        ssml = '', 
                        text = '', ), 
                    payload = {
                        'key' : null
                        }, 
                    play_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_play_audio.GoogleCloudDialogflowCxV3ResponseMessagePlayAudio(
                        allow_playback_interruption = True, 
                        audio_uri = '', ), 
                    response_type = 'RESPONSE_TYPE_UNSPECIFIED', 
                    telephony_transfer_call = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_telephony_transfer_call.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall(
                        phone_number = '', ), 
                    text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_text.GoogleCloudDialogflowCxV3ResponseMessageText(
                        allow_playback_interruption = True, ), )
            )
        else:
            return GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(
        )
        """

    def testGoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(self):
        """Test GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
