# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3beta1_query_parameters import GoogleCloudDialogflowCxV3beta1QueryParameters

class TestGoogleCloudDialogflowCxV3beta1QueryParameters(unittest.TestCase):
    """GoogleCloudDialogflowCxV3beta1QueryParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3beta1QueryParameters:
        """Test GoogleCloudDialogflowCxV3beta1QueryParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3beta1QueryParameters`
        """
        model = GoogleCloudDialogflowCxV3beta1QueryParameters()
        if include_optional:
            return GoogleCloudDialogflowCxV3beta1QueryParameters(
                analyze_query_text_sentiment = True,
                channel = '',
                current_page = '',
                disable_webhook = True,
                end_user_metadata = {
                    'key' : null
                    },
                flow_versions = [
                    ''
                    ],
                geo_location = openapi_client.models.google_type_lat_lng.GoogleTypeLatLng(
                    latitude = 1.337, 
                    longitude = 1.337, ),
                parameters = {
                    'key' : null
                    },
                payload = {
                    'key' : null
                    },
                search_config = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_search_config.GoogleCloudDialogflowCxV3beta1SearchConfig(
                    boost_specs = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_boost_specs.GoogleCloudDialogflowCxV3beta1BoostSpecs(
                            data_stores = [
                                ''
                                ], 
                            spec = [
                                openapi_client.models.google_cloud_dialogflow_cx_v3beta1_boost_spec.GoogleCloudDialogflowCxV3beta1BoostSpec(
                                    condition_boost_specs = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_boost_spec_condition_boost_spec.GoogleCloudDialogflowCxV3beta1BoostSpecConditionBoostSpec(
                                            boost = 1.337, 
                                            condition = '', )
                                        ], )
                                ], )
                        ], 
                    filter_specs = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_filter_specs.GoogleCloudDialogflowCxV3beta1FilterSpecs(
                            filter = '', )
                        ], ),
                session_entity_types = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3beta1_session_entity_type.GoogleCloudDialogflowCxV3beta1SessionEntityType(
                        entities = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3beta1_entity_type_entity.GoogleCloudDialogflowCxV3beta1EntityTypeEntity(
                                synonyms = [
                                    ''
                                    ], 
                                value = '', )
                            ], 
                        entity_override_mode = 'ENTITY_OVERRIDE_MODE_UNSPECIFIED', 
                        name = '', )
                    ],
                session_ttl = '',
                time_zone = '',
                webhook_headers = {
                    'key' : ''
                    }
            )
        else:
            return GoogleCloudDialogflowCxV3beta1QueryParameters(
        )
        """

    def testGoogleCloudDialogflowCxV3beta1QueryParameters(self):
        """Test GoogleCloudDialogflowCxV3beta1QueryParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
