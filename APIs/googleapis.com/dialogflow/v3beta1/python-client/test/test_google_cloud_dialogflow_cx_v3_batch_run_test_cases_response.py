# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_batch_run_test_cases_response import GoogleCloudDialogflowCxV3BatchRunTestCasesResponse

class TestGoogleCloudDialogflowCxV3BatchRunTestCasesResponse(unittest.TestCase):
    """GoogleCloudDialogflowCxV3BatchRunTestCasesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3BatchRunTestCasesResponse:
        """Test GoogleCloudDialogflowCxV3BatchRunTestCasesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3BatchRunTestCasesResponse`
        """
        model = GoogleCloudDialogflowCxV3BatchRunTestCasesResponse()
        if include_optional:
            return GoogleCloudDialogflowCxV3BatchRunTestCasesResponse(
                results = [
                    openapi_client.models.google_cloud_dialogflow_cx_v3_test_case_result.GoogleCloudDialogflowCxV3TestCaseResult(
                        conversation_turns = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3_conversation_turn.GoogleCloudDialogflowCxV3ConversationTurn(
                                user_input = openapi_client.models.google_cloud_dialogflow_cx_v3_conversation_turn_user_input.GoogleCloudDialogflowCxV3ConversationTurnUserInput(
                                    enable_sentiment_analysis = True, 
                                    injected_parameters = {
                                        'key' : null
                                        }, 
                                    input = openapi_client.models.google_cloud_dialogflow_cx_v3_query_input.GoogleCloudDialogflowCxV3QueryInput(
                                        audio = openapi_client.models.google_cloud_dialogflow_cx_v3_audio_input.GoogleCloudDialogflowCxV3AudioInput(
                                            config = openapi_client.models.google_cloud_dialogflow_cx_v3_input_audio_config.GoogleCloudDialogflowCxV3InputAudioConfig(
                                                audio_encoding = 'AUDIO_ENCODING_UNSPECIFIED', 
                                                barge_in_config = openapi_client.models.google_cloud_dialogflow_cx_v3_barge_in_config.GoogleCloudDialogflowCxV3BargeInConfig(
                                                    no_barge_in_duration = '', 
                                                    total_duration = '', ), 
                                                enable_word_info = True, 
                                                model = '', 
                                                model_variant = 'SPEECH_MODEL_VARIANT_UNSPECIFIED', 
                                                opt_out_conformer_model_migration = True, 
                                                phrase_hints = [
                                                    ''
                                                    ], 
                                                sample_rate_hertz = 56, 
                                                single_utterance = True, ), ), 
                                        dtmf = openapi_client.models.google_cloud_dialogflow_cx_v3_dtmf_input.GoogleCloudDialogflowCxV3DtmfInput(
                                            digits = '', 
                                            finish_digit = '', ), 
                                        event = openapi_client.models.google_cloud_dialogflow_cx_v3_event_input.GoogleCloudDialogflowCxV3EventInput(), 
                                        intent = openapi_client.models.google_cloud_dialogflow_cx_v3_intent_input.GoogleCloudDialogflowCxV3IntentInput(), 
                                        language_code = '', 
                                        text = openapi_client.models.google_cloud_dialogflow_cx_v3_text_input.GoogleCloudDialogflowCxV3TextInput(), ), 
                                    is_webhook_enabled = True, ), 
                                virtual_agent_output = openapi_client.models.google_cloud_dialogflow_cx_v3_conversation_turn_virtual_agent_output.GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput(
                                    current_page = openapi_client.models.google_cloud_dialogflow_cx_v3_page.GoogleCloudDialogflowCxV3Page(
                                        advanced_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings.GoogleCloudDialogflowCxV3AdvancedSettings(
                                            audio_export_gcs_destination = openapi_client.models.google_cloud_dialogflow_cx_v3_gcs_destination.GoogleCloudDialogflowCxV3GcsDestination(
                                                uri = '', ), 
                                            dtmf_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings_dtmf_settings.GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings(
                                                enabled = True, 
                                                finish_digit = '', 
                                                max_digits = 56, ), 
                                            logging_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_advanced_settings_logging_settings.GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings(
                                                enable_interaction_logging = True, 
                                                enable_stackdriver_logging = True, ), ), 
                                        description = '', 
                                        display_name = '', 
                                        entry_fulfillment = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment.GoogleCloudDialogflowCxV3Fulfillment(
                                            conditional_cases = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(
                                                    cases = [
                                                        openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase(
                                                            case_content = [
                                                                openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases_case_case_content.GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent(
                                                                    additional_cases = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_conditional_cases.GoogleCloudDialogflowCxV3FulfillmentConditionalCases(), 
                                                                    message = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                                                        channel = '', 
                                                                        conversation_success = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_conversation_success.GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess(
                                                                            metadata = {
                                                                                'key' : null
                                                                                }, ), 
                                                                        end_interaction = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_end_interaction.GoogleCloudDialogflowCxV3ResponseMessageEndInteraction(), 
                                                                        knowledge_info_card = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_knowledge_info_card.GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard(), 
                                                                        live_agent_handoff = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_live_agent_handoff.GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff(), 
                                                                        mixed_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio.GoogleCloudDialogflowCxV3ResponseMessageMixedAudio(
                                                                            segments = [
                                                                                openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_mixed_audio_segment.GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment(
                                                                                    allow_playback_interruption = True, 
                                                                                    uri = '', )
                                                                                ], ), 
                                                                        output_audio_text = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_output_audio_text.GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText(
                                                                            allow_playback_interruption = True, 
                                                                            ssml = '', ), 
                                                                        payload = {
                                                                            'key' : null
                                                                            }, 
                                                                        play_audio = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_play_audio.GoogleCloudDialogflowCxV3ResponseMessagePlayAudio(
                                                                            allow_playback_interruption = True, 
                                                                            audio_uri = '', ), 
                                                                        response_type = 'RESPONSE_TYPE_UNSPECIFIED', 
                                                                        telephony_transfer_call = openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_telephony_transfer_call.GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall(
                                                                            phone_number = '', ), ), )
                                                                ], 
                                                            condition = '', )
                                                        ], )
                                                ], 
                                            enable_generative_fallback = True, 
                                            messages = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_response_message.GoogleCloudDialogflowCxV3ResponseMessage(
                                                    channel = '', 
                                                    response_type = 'RESPONSE_TYPE_UNSPECIFIED', )
                                                ], 
                                            return_partial_responses = True, 
                                            set_parameter_actions = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment_set_parameter_action.GoogleCloudDialogflowCxV3FulfillmentSetParameterAction(
                                                    parameter = '', 
                                                    value = null, )
                                                ], 
                                            tag = '', 
                                            webhook = '', ), 
                                        event_handlers = [
                                            openapi_client.models.google_cloud_dialogflow_cx_v3_event_handler.GoogleCloudDialogflowCxV3EventHandler(
                                                name = '', 
                                                target_flow = '', 
                                                target_page = '', 
                                                trigger_fulfillment = openapi_client.models.google_cloud_dialogflow_cx_v3_fulfillment.GoogleCloudDialogflowCxV3Fulfillment(
                                                    enable_generative_fallback = True, 
                                                    return_partial_responses = True, 
                                                    tag = '', 
                                                    webhook = '', ), )
                                            ], 
                                        form = openapi_client.models.google_cloud_dialogflow_cx_v3_form.GoogleCloudDialogflowCxV3Form(
                                            parameters = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_form_parameter.GoogleCloudDialogflowCxV3FormParameter(
                                                    default_value = null, 
                                                    display_name = '', 
                                                    entity_type = '', 
                                                    fill_behavior = openapi_client.models.google_cloud_dialogflow_cx_v3_form_parameter_fill_behavior.GoogleCloudDialogflowCxV3FormParameterFillBehavior(
                                                        initial_prompt_fulfillment = , 
                                                        reprompt_event_handlers = [
                                                            openapi_client.models.google_cloud_dialogflow_cx_v3_event_handler.GoogleCloudDialogflowCxV3EventHandler(
                                                                name = '', 
                                                                target_flow = '', 
                                                                target_page = '', )
                                                            ], ), 
                                                    is_list = True, 
                                                    redact = True, 
                                                    required = True, )
                                                ], ), 
                                        knowledge_connector_settings = openapi_client.models.google_cloud_dialogflow_cx_v3_knowledge_connector_settings.GoogleCloudDialogflowCxV3KnowledgeConnectorSettings(
                                            data_store_connections = [
                                                openapi_client.models.google_cloud_dialogflow_cx_v3_data_store_connection.GoogleCloudDialogflowCxV3DataStoreConnection(
                                                    data_store = '', 
                                                    data_store_type = 'DATA_STORE_TYPE_UNSPECIFIED', )
                                                ], 
                                            enabled = True, 
                                            target_flow = '', 
                                            target_page = '', ), 
                                        name = '', 
                                        transition_route_groups = [
                                            ''
                                            ], 
                                        transition_routes = [
                                            openapi_client.models.google_cloud_dialogflow_cx_v3_transition_route.GoogleCloudDialogflowCxV3TransitionRoute(
                                                condition = '', 
                                                description = '', 
                                                name = '', 
                                                target_flow = '', 
                                                target_page = '', )
                                            ], ), 
                                    diagnostic_info = {
                                        'key' : null
                                        }, 
                                    differences = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3_test_run_difference.GoogleCloudDialogflowCxV3TestRunDifference(
                                            description = '', 
                                            type = 'DIFF_TYPE_UNSPECIFIED', )
                                        ], 
                                    session_parameters = {
                                        'key' : null
                                        }, 
                                    status = openapi_client.models.google_rpc_status.GoogleRpcStatus(
                                        code = 56, 
                                        details = [
                                            {
                                                'key' : null
                                                }
                                            ], ), 
                                    text_responses = [
                                        openapi_client.models.google_cloud_dialogflow_cx_v3_response_message_text.GoogleCloudDialogflowCxV3ResponseMessageText(
                                            allow_playback_interruption = True, )
                                        ], 
                                    triggered_intent = openapi_client.models.google_cloud_dialogflow_cx_v3_intent.GoogleCloudDialogflowCxV3Intent(
                                        description = '', 
                                        display_name = '', 
                                        is_fallback = True, 
                                        labels = {
                                            'key' : ''
                                            }, 
                                        name = '', 
                                        priority = 56, 
                                        training_phrases = [
                                            openapi_client.models.google_cloud_dialogflow_cx_v3_intent_training_phrase.GoogleCloudDialogflowCxV3IntentTrainingPhrase(
                                                id = '', 
                                                parts = [
                                                    openapi_client.models.google_cloud_dialogflow_cx_v3_intent_training_phrase_part.GoogleCloudDialogflowCxV3IntentTrainingPhrasePart(
                                                        parameter_id = '', )
                                                    ], 
                                                repeat_count = 56, )
                                            ], ), ), )
                            ], 
                        environment = '', 
                        name = '', 
                        test_result = 'TEST_RESULT_UNSPECIFIED', 
                        test_time = '', )
                    ]
            )
        else:
            return GoogleCloudDialogflowCxV3BatchRunTestCasesResponse(
        )
        """

    def testGoogleCloudDialogflowCxV3BatchRunTestCasesResponse(self):
        """Test GoogleCloudDialogflowCxV3BatchRunTestCasesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
