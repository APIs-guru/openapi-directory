# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_carousel_card import GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard

class TestGoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard(unittest.TestCase):
    """GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard:
        """Test GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard`
        """
        model = GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard()
        if include_optional:
            return GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard(
                card_contents = [
                    openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_card_content.GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent(
                        description = '', 
                        media = openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_card_content_rbm_media.GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia(
                            file_uri = '', 
                            height = 'HEIGHT_UNSPECIFIED', 
                            thumbnail_uri = '', ), 
                        suggestions = [
                            openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_suggestion.GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion(
                                action = openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_suggested_action.GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction(
                                    dial = openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_suggested_action_rbm_suggested_action_dial.GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial(
                                        phone_number = '', ), 
                                    open_url = openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_suggested_action_rbm_suggested_action_open_uri.GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri(
                                        uri = '', ), 
                                    postback_data = '', 
                                    share_location = openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_suggested_action_rbm_suggested_action_share_location.GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation(), 
                                    text = '', ), 
                                reply = openapi_client.models.google_cloud_dialogflow_v2beta1_intent_message_rbm_suggested_reply.GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply(
                                    postback_data = '', 
                                    text = '', ), )
                            ], 
                        title = '', )
                    ],
                card_width = 'CARD_WIDTH_UNSPECIFIED'
            )
        else:
            return GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard(
        )
        """

    def testGoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard(self):
        """Test GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
