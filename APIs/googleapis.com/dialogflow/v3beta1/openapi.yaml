openapi: 3.0.0
servers:
  - url: https://dialogflow.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Dialogflow API
  version: v3beta1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://dialogflow.googleapis.com/$discovery/rest?version=v3beta1
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: dialogflow
externalDocs:
  url: https://cloud.google.com/dialogflow/
tags:
  - name: projects
paths:
  /v3beta1/{agent}/testCases:calculateCoverage:
    get:
      description: Calculates the test coverage for an agent.
      operationId: dialogflow.projects.locations.agents.testCases.calculateCoverage
      parameters:
        - description: "Required. The agent to calculate coverage for. Format: `projects//locations//agents/`."
          in: path
          name: agent
          required: true
          schema:
            type: string
        - description: Required. The type of coverage requested.
          in: query
          name: type
          schema:
            enum:
              - COVERAGE_TYPE_UNSPECIFIED
              - INTENT
              - PAGE_TRANSITION
              - TRANSITION_ROUTE_GROUP
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{baseVersion}:compareVersions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Compares the specified base version with target version.
      operationId: dialogflow.projects.locations.agents.flows.versions.compareVersions
      parameters:
        - description: "Required. Name of the base flow version to compare with the target version. Use version ID `0` to indicate the draft version of the specified flow. Format: `projects//locations//agents/ /flows//versions/`."
          in: path
          name: baseVersion
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1CompareVersionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1CompareVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{environment}:deployFlow:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Deploys a flow to the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: DeployFlowMetadata - `response`: DeployFlowResponse"
      operationId: dialogflow.projects.locations.agents.environments.deployFlow
      parameters:
        - description: "Required. The environment to deploy the flow to. Format: `projects//locations//agents// environments/`."
          in: path
          name: environment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DeployFlowRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{environment}:runContinuousTest:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Kicks off a continuous test under the specified Environment. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: RunContinuousTestMetadata - `response`: RunContinuousTestResponse"
      operationId: dialogflow.projects.locations.agents.environments.runContinuousTest
      parameters:
        - description: "Required. Format: `projects//locations//agents//environments/`."
          in: path
          name: environment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RunContinuousTestRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:
    delete:
      description: Deletes the specified SecuritySettings.
      operationId: dialogflow.projects.locations.securitySettings.delete
      parameters:
        - description: "Required. The name of the SecuritySettings to delete. Format: `projects//locations//securitySettings/`."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "This field has no effect for webhook not being used. For webhooks that are used by pages/flows/transition route groups: * If `force` is set to false, an error will be returned with message indicating the referenced resources. * If `force` is set to true, Dialogflow will remove the webhook, as well as any references to the webhook (i.e. Webhook and tagin fulfillments that point to this webhook will be removed)."
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dialogflow.projects.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "The language to retrieve the transition route group for. The following fields are language dependent: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified SecuritySettings.
      operationId: dialogflow.projects.locations.securitySettings.patch
      parameters:
        - description: "Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: dialogflow.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudLocationListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: dialogflow.projects.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: dialogflow.projects.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Exports the specified flow to a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportFlowResponse Note that resources (e.g. intents, entities, webhooks) that the flow references will also be exported."
      operationId: dialogflow.projects.locations.agents.flows.export
      parameters:
        - description: "Required. The name of the flow to export. Format: `projects//locations//agents//flows/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExportFlowRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:load:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Loads resources in the specified version to the draft flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)"
      operationId: dialogflow.projects.locations.agents.flows.versions.load
      parameters:
        - description: "Required. The Version to be loaded to draft flow. Format: `projects//locations//agents//flows//versions/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1LoadVersionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:lookupEnvironmentHistory:
    get:
      description: Looks up the history of the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.lookupEnvironmentHistory
      parameters:
        - description: "Required. Resource name of the environment to look up the history for. Format: `projects//locations//agents//environments/`."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{name}:restore:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Restores the specified agent from a binary file. Replaces the current agent with a new one. Note that all existing resources in agent (e.g. intents, entity types, flows) will be removed. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.restore
      parameters:
        - description: "Required. The name of the agent to restore into. Format: `projects//locations//agents/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RestoreAgentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:run:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Kicks off a test case run. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: RunTestCaseMetadata - `response`: RunTestCaseResponse"
      operationId: dialogflow.projects.locations.agents.testCases.run
      parameters:
        - description: "Required. Format of test case name to run: `projects//locations/ /agents//testCases/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RunTestCaseRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:start:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts the specified Experiment. This rpc only changes the state of experiment from PENDING to RUNNING.
      operationId: dialogflow.projects.locations.agents.environments.experiments.start
      parameters:
        - description: "Required. Resource name of the experiment to start. Format: `projects//locations//agents//environments//experiments/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1StartExperimentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Experiment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:stop:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Stops the specified Experiment. This rpc only changes the state of experiment from RUNNING to DONE.
      operationId: dialogflow.projects.locations.agents.environments.experiments.stop
      parameters:
        - description: "Required. Resource name of the experiment to stop. Format: `projects//locations//agents//environments//experiments/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1StopExperimentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Experiment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:train:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Trains the specified flow. Note that only the flow in 'draft' environment is trained. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.flows.train
      parameters:
        - description: "Required. The flow to train. Format: `projects//locations//agents//flows/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TrainFlowRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{name}:validate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Validates the specified flow and creates or updates validation results. Please call this API after the training is completed to get the complete validation results.
      operationId: dialogflow.projects.locations.agents.flows.validate
      parameters:
        - description: "Required. The flow to validate. Format: `projects//locations//agents//flows/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ValidateFlowRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FlowValidationResult"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/agents:
    get:
      description: Returns the list of all agents in the specified location.
      operationId: dialogflow.projects.locations.agents.list
      parameters:
        - description: "Required. The location to list all agents for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListAgentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates an agent in the specified location. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.create
      parameters:
        - description: "Required. The location to create a agent for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Agent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Agent"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/changelogs:
    get:
      description: Returns the list of Changelogs.
      operationId: dialogflow.projects.locations.agents.changelogs.list
      parameters:
        - description: "Required. The agent containing the changelogs. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The filter string. Supports filter by user_email, resource, type and create_time. Some examples: 1. By user email: user_email = "someone@google.com" 2. By resource name: resource = "projects/123/locations/global/agents/456/flows/789" 3. By resource display name: display_name = "my agent" 4. By action: action = "Create" 5. By type: type = "flows" 6. By create time. Currently predicates on `create_time` and `create_time_epoch_seconds` are supported: create_time_epoch_seconds > 1551790877 AND create_time <= 2017-01-15T01:30:15.01Z 7. Combination of above filters: resource = "projects/123/locations/global/agents/456/flows/789" AND user_email = "someone@google.com" AND create_time <= 2017-01-15T01:30:15.01Z'
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListChangelogsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{parent}/continuousTestResults:
    get:
      description: Fetches a list of continuous test results for a given environment.
      operationId: dialogflow.projects.locations.agents.environments.continuousTestResults.list
      parameters:
        - description: "Required. The environment to list results for. Format: `projects//locations//agents// environments/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{parent}/deployments:
    get:
      description: Returns the list of all deployments in the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.deployments.list
      parameters:
        - description: "Required. The Environment to list all environments for. Format: `projects//locations//agents//environments/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 20 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{parent}/entityTypes:
    get:
      description: Returns the list of all session entity types in the specified session.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.list
      parameters:
        - description: "Required. The session to list all session entity types from. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a session entity type.
      operationId: dialogflow.projects.locations.agents.sessions.entityTypes.create
      parameters:
        - description: "Required. The session to create a session entity type for. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language of the following fields in `entity_type`: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionEntityType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionEntityType"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/entityTypes:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Exports the selected entity types.
      operationId: dialogflow.projects.locations.agents.entityTypes.export
      parameters:
        - description: "Required. The name of the parent agent to export entity types. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/entityTypes:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports the specified entitytypes into the agent.
      operationId: dialogflow.projects.locations.agents.entityTypes.import
      parameters:
        - description: "Required. The agent to import the entity types into. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/environments:
    get:
      description: Returns the list of all environments in the specified Agent.
      operationId: dialogflow.projects.locations.agents.environments.list
      parameters:
        - description: "Required. The Agent to list all environments for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 20 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates an Environment in the specified Agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: Environment"
      operationId: dialogflow.projects.locations.agents.environments.create
      parameters:
        - description: "Required. The Agent to create an Environment for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Environment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/experiments:
    get:
      description: Returns the list of all experiments in the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.list
      parameters:
        - description: "Required. The Environment to list all environments for. Format: `projects//locations//agents//environments/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 20 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListExperimentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an Experiment in the specified Environment.
      operationId: dialogflow.projects.locations.agents.environments.experiments.create
      parameters:
        - description: "Required. The Agent to create an Environment for. Format: `projects//locations//agents//environments/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Experiment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Experiment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/flows:
    get:
      description: Returns the list of all flows in the specified agent.
      operationId: dialogflow.projects.locations.agents.flows.list
      parameters:
        - description: "Required. The agent containing the flows. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language to list flows for. The following fields are language dependent: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.event_handlers.trigger_fulfillment.conditional_cases` * `Flow.transition_routes.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListFlowsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a flow in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.flows.create
      parameters:
        - description: "Required. The agent to create a flow for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language of the following fields in `flow`: * `Flow.event_handlers.trigger_fulfillment.messages` * `Flow.event_handlers.trigger_fulfillment.conditional_cases` * `Flow.transition_routes.trigger_fulfillment.messages` * `Flow.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Flow"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Flow"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/flows:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Imports the specified flow to the specified agent from a binary file. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ImportFlowResponse Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.flows.import
      parameters:
        - description: "Required. The agent to import the flow into. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportFlowRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/generators:
    get:
      description: Returns the list of all generators in the specified agent.
      operationId: dialogflow.projects.locations.agents.generators.list
      parameters:
        - description: "Required. The agent to list all generators for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The language to list generators for.
          in: query
          name: languageCode
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListGeneratorsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a generator in the specified agent.
      operationId: dialogflow.projects.locations.agents.generators.create
      parameters:
        - description: "Required. The agent to create a generator for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language to create generators for the following fields: * `Generator.prompt_text.text` If not specified, the agent's default language is used."
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Generator"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Generator"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/intents:
    get:
      description: Returns the list of all intents in the specified agent.
      operationId: dialogflow.projects.locations.agents.intents.list
      parameters:
        - description: "Required. The agent to list all intents for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The resource view to apply to the returned intent.
          in: query
          name: intentView
          schema:
            enum:
              - INTENT_VIEW_UNSPECIFIED
              - INTENT_VIEW_PARTIAL
              - INTENT_VIEW_FULL
            type: string
        - description: "The language to list intents for. The following fields are language dependent: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListIntentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates an intent in the specified agent. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.intents.create
      parameters:
        - description: "Required. The agent to create an intent for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language of the following fields in `intent`: * `Intent.training_phrases.parts.text` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/intents:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Exports the selected intents. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ExportIntentsMetadata - `response`: ExportIntentsResponse"
      operationId: dialogflow.projects.locations.agents.intents.export
      parameters:
        - description: "Required. The name of the parent agent to export intents. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExportIntentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/intents:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Imports the specified intents into the agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ImportIntentsMetadata - `response`: ImportIntentsResponse"
      operationId: dialogflow.projects.locations.agents.intents.import
      parameters:
        - description: "Required. The agent to import the intents into. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportIntentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/pages:
    get:
      description: Returns the list of all pages in the specified flow.
      operationId: dialogflow.projects.locations.agents.flows.pages.list
      parameters:
        - description: "Required. The flow to list all pages for. Format: `projects//locations//agents//flows/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language to list pages for. The following fields are language dependent: * `Page.entry_fulfillment.messages` * `Page.entry_fulfillment.conditional_cases` * `Page.event_handlers.trigger_fulfillment.messages` * `Page.event_handlers.trigger_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListPagesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a page in the specified flow.
      operationId: dialogflow.projects.locations.agents.flows.pages.create
      parameters:
        - description: "Required. The flow to create a page for. Format: `projects//locations//agents//flows/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language of the following fields in `page`: * `Page.entry_fulfillment.messages` * `Page.entry_fulfillment.conditional_cases` * `Page.event_handlers.trigger_fulfillment.messages` * `Page.event_handlers.trigger_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.messages` * `Page.form.parameters.fill_behavior.initial_prompt_fulfillment.conditional_cases` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.messages` * `Page.form.parameters.fill_behavior.reprompt_event_handlers.conditional_cases` * `Page.transition_routes.trigger_fulfillment.messages` * `Page.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/results:
    get:
      description: Fetches the list of run results for the given test case. A maximum of 100 results are kept for each test case.
      operationId: dialogflow.projects.locations.agents.testCases.results.list
      parameters:
        - description: "Required. The test case to list results for. Format: `projects//locations//agents// testCases/`. Specify a `-` as a wildcard for TestCase ID to list results across multiple test cases."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The filter expression used to filter test case results. See [API Filtering](https://aip.dev/160). The expression is case insensitive. Only 'AND' is supported for logical operators. The supported syntax is listed below in detail: [AND ] ... [AND latest] The supported fields and operators are: field operator `environment` `=`, `IN` (Use value `draft` for draft environment) `test_time` `>`, `<` `latest` only returns the latest test result in all results for each test case. Examples: * \"environment=draft AND latest\" matches the latest test result for each test case in the draft environment. * \"environment IN (e1,e2)\" matches any test case results with an environment resource name of either \"e1\" or \"e2\". * \"test_time > 1602540713\" matches any test case results with test time later than a unix timestamp in seconds 1602540713."
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v3beta1/{parent}/securitySettings:
    get:
      description: Returns the list of all security settings in the specified location.
      operationId: dialogflow.projects.locations.securitySettings.list
      parameters:
        - description: "Required. The location to list all security settings for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 20 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create security settings in the specified location.
      operationId: dialogflow.projects.locations.securitySettings.create
      parameters:
        - description: "Required. The location to create an SecuritySettings for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/testCases:
    get:
      description: Fetches a list of test cases for a given agent.
      operationId: dialogflow.projects.locations.agents.testCases.list
      parameters:
        - description: "Required. The agent to list all pages for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 20. Note that when TestCaseView = FULL, the maximum page size allowed is 20. When TestCaseView = BASIC, the maximum page size allowed is 500.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies whether response should include all fields or just the metadata.
          in: query
          name: view
          schema:
            enum:
              - TEST_CASE_VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListTestCasesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a test case for the given agent.
      operationId: dialogflow.projects.locations.agents.testCases.create
      parameters:
        - description: "Required. The agent to create the test case for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCase"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCase"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/testCases:batchDelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batch deletes test cases.
      operationId: dialogflow.projects.locations.agents.testCases.batchDelete
      parameters:
        - description: "Required. The agent to delete test cases from. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BatchDeleteTestCasesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/testCases:batchRun:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Kicks off a batch run of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: BatchRunTestCasesMetadata - `response`: BatchRunTestCasesResponse"
      operationId: dialogflow.projects.locations.agents.testCases.batchRun
      parameters:
        - description: "Required. Agent name. Format: `projects//locations//agents/ `."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BatchRunTestCasesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/testCases:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Exports the test cases under the agent to a Cloud Storage bucket or a local file. Filter can be applied to export a subset of test cases. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ExportTestCasesMetadata - `response`: ExportTestCasesResponse"
      operationId: dialogflow.projects.locations.agents.testCases.export
      parameters:
        - description: "Required. The agent where to export test cases from. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/testCases:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Imports the test cases from a Cloud Storage bucket or a local file. It always creates new test cases and won't overwrite any existing ones. The provided ID in the imported test case is neglected. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: ImportTestCasesMetadata - `response`: ImportTestCasesResponse"
      operationId: dialogflow.projects.locations.agents.testCases.import
      parameters:
        - description: "Required. The agent to import test cases to. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportTestCasesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/transitionRouteGroups:
    get:
      description: Returns the list of all transition route groups in the specified flow.
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.list
      parameters:
        - description: "Required. The flow to list all transition route groups for. Format: `projects//locations//agents//flows/` or `projects//locations//agents/."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language to list transition route groups for. The following fields are language dependent: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates an TransitionRouteGroup in the specified flow. Note: You should always train a flow prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/cx/docs/concept/training)."
      operationId: dialogflow.projects.locations.agents.transitionRouteGroups.create
      parameters:
        - description: "Required. The flow to create an TransitionRouteGroup for. Format: `projects//locations//agents//flows/` or `projects//locations//agents/` for agent-level groups."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The language of the following fields in `TransitionRouteGroup`: * `TransitionRouteGroup.transition_routes.trigger_fulfillment.messages` * `TransitionRouteGroup.transition_routes.trigger_fulfillment.conditional_cases` If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/cx/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/versions:
    get:
      description: Returns the list of all versions in the specified Flow.
      operationId: dialogflow.projects.locations.agents.flows.versions.list
      parameters:
        - description: "Required. The Flow to list all versions for. Format: `projects//locations//agents//flows/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 20 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a Version in the specified Flow. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateVersionOperationMetadata - `response`: Version"
      operationId: dialogflow.projects.locations.agents.flows.versions.create
      parameters:
        - description: "Required. The Flow to create an Version for. Format: `projects//locations//agents//flows/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Version"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{parent}/webhooks:
    get:
      description: Returns the list of all webhooks in the specified agent.
      operationId: dialogflow.projects.locations.agents.webhooks.list
      parameters:
        - description: "Required. The agent to list all webhooks for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ListWebhooksResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a webhook in the specified agent.
      operationId: dialogflow.projects.locations.agents.webhooks.create
      parameters:
        - description: "Required. The agent to create a webhook for. Format: `projects//locations//agents/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Webhook"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Webhook"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{session}:detectIntent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version)."
      operationId: dialogflow.projects.locations.agents.sessions.detectIntent
      parameters:
        - description: "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version)."
          in: path
          name: session
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DetectIntentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DetectIntentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{session}:fulfillIntent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Fulfills a matched intent returned by MatchIntent. Must be called after MatchIntent, with input from MatchIntentResponse. Otherwise, the behavior is undefined.
      operationId: dialogflow.projects.locations.agents.sessions.fulfillIntent
      parameters:
        - description: "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
          in: path
          name: session
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillIntentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillIntentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{session}:matchIntent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns preliminary intent match results, doesn't change the session status.
      operationId: dialogflow.projects.locations.agents.sessions.matchIntent
      parameters:
        - description: "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session)."
          in: path
          name: session
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1MatchIntentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1MatchIntentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{session}:serverStreamingDetectIntent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Processes a natural language query and returns structured, actionable data as a result through server-side streaming. Server-side streaming allows Dialogflow to send [partial responses](https://cloud.google.com/dialogflow/cx/docs/concept/fulfillment#partial-response) earlier in a single request.
      operationId: dialogflow.projects.locations.agents.sessions.serverStreamingDetectIntent
      parameters:
        - description: "Required. The name of the session this query is sent to. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length of the `Session ID` must not exceed 36 characters. For more information, see the [sessions guide](https://cloud.google.com/dialogflow/cx/docs/concept/session). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/cx/docs/concept/version)."
          in: path
          name: session
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DetectIntentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DetectIntentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v3beta1/{session}:submitAnswerFeedback:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the feedback received from the user for a single turn of the bot response.
      operationId: dialogflow.projects.locations.agents.sessions.submitAnswerFeedback
      parameters:
        - description: Required. The name of the session the feedback was sent to.
          in: path
          name: session
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AnswerFeedback"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudDialogflowCxV3AdvancedSettings:
      description: "Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter."
      properties:
        audioExportGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GcsDestination"
          description: "If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level"
        dtmfSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings"
          description: "Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level."
        loggingSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings"
          description: "Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level."
      type: object
    GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings:
      description: Define behaviors for DTMF (dual tone multi frequency).
      properties:
        enabled:
          description: If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
          type: boolean
        finishDigit:
          description: The digit that terminates a DTMF digit sequence.
          type: string
        maxDigits:
          description: Max length of DTMF digits.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings:
      description: Define behaviors on logging.
      properties:
        enableInteractionLogging:
          description: If true, DF Interaction logging is currently enabled.
          type: boolean
        enableStackdriverLogging:
          description: If true, StackDriver logging is currently enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3AudioInput:
      description: Represents the natural speech audio to be processed.
      properties:
        audio:
          description: The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
          format: byte
          type: string
        config:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3InputAudioConfig"
          description: Required. Instructs the speech recognizer how to process the speech audio.
      type: object
    GoogleCloudDialogflowCxV3BargeInConfig:
      description: "Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length from the the start of the input audio. No-speech event is a response with END_OF_UTTERANCE without any transcript following up."
      properties:
        noBargeInDuration:
          description: Duration that is not eligible for barge-in at the beginning of the input audio.
          format: google-duration
          type: string
        totalDuration:
          description: Total duration for the playback at the beginning of the input audio.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata:
      description: Metadata returned for the TestCases.BatchRunTestCases long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3BatchRunTestCasesResponse:
      description: The response message for TestCases.BatchRunTestCases.
      properties:
        results:
          description: The test case results. The detailed conversation turns are empty in this response.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ContinuousTestResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        name:
          description: "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`."
          type: string
        result:
          description: The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not.
          enum:
            - AGGREGATED_TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        runTime:
          description: Time when the continuous testing run starts.
          format: google-datetime
          type: string
        testCaseResults:
          description: A list of individual test case results names in this continuous test run.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ConversationSignals:
      description: This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to BigQuery.
      properties:
        turnSignals:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TurnSignals"
          description: Required. Turn signals for the current turn.
      type: object
    GoogleCloudDialogflowCxV3ConversationTurn:
      description: One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
      properties:
        userInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurnUserInput"
          description: The user input.
        virtualAgentOutput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput"
          description: The virtual agent output.
      type: object
    GoogleCloudDialogflowCxV3ConversationTurnUserInput:
      description: The input from the human user.
      properties:
        enableSentimentAnalysis:
          description: Whether sentiment analysis is enabled.
          type: boolean
        injectedParameters:
          additionalProperties:
            description: Properties of the object.
          description: Parameters that need to be injected into the conversation during intent detection.
          type: object
        input:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3QueryInput"
          description: Supports text input, event input, dtmf input in the test case.
        isWebhookEnabled:
          description: If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput:
      description: The output from the virtual agent.
      properties:
        currentPage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Page"
          description: The Page on which the utterance was spoken. Only name and displayName will be set.
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
          type: object
        differences:
          description: Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestRunDifference"
          readOnly: true
          type: array
        sessionParameters:
          additionalProperties:
            description: Properties of the object.
          description: The session parameters available to the bot at this point.
          type: object
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Response error from the agent in the test result. If set, other output is empty.
        textResponses:
          description: The text responses from the agent for the turn.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageText"
          type: array
        triggeredIntent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Intent"
          description: The Intent that triggered the response. Only name and displayName will be set.
      type: object
    GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata:
      description: Metadata for CreateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3CreateVersionOperationMetadata:
      description: Metadata associated with the long running operation for Versions.CreateVersion.
      properties:
        version:
          description: "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3DataStoreConnection:
      description: A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
      properties:
        dataStore:
          description: "The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`"
          type: string
        dataStoreType:
          description: The type of the connected data store.
          enum:
            - DATA_STORE_TYPE_UNSPECIFIED
            - PUBLIC_WEB
            - UNSTRUCTURED
            - STRUCTURED
          type: string
      type: object
    GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata:
      description: Metadata for DeleteDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3DeployFlowMetadata:
      description: Metadata returned for the Environments.DeployFlow long running operation.
      properties:
        testErrors:
          description: Errors of running deployment tests.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3DeployFlowResponse:
      description: The response message for Environments.DeployFlow.
      properties:
        deployment:
          description: "The name of the flow version Deployment. Format: `projects//locations//agents// environments//deployments/`."
          type: string
        environment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Environment"
          description: The updated environment where the flow is deployed.
      type: object
    GoogleCloudDialogflowCxV3DtmfInput:
      description: Represents the input for dtmf event.
      properties:
        digits:
          description: The dtmf digits.
          type: string
        finishDigit:
          description: The finish digit (if any).
          type: string
      type: object
    GoogleCloudDialogflowCxV3Environment:
      description: Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.
      properties:
        description:
          description: The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.
          type: string
        name:
          description: "The name of the environment. Format: `projects//locations//agents//environments/`."
          type: string
        testCasesConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig"
          description: The test cases config for continuous tests of this environment.
        updateTime:
          description: Output only. Update time of this environment.
          format: google-datetime
          readOnly: true
          type: string
        versionConfigs:
          description: A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EnvironmentVersionConfig"
          type: array
        webhookConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EnvironmentWebhookConfig"
          description: The webhook configuration for this environment.
      type: object
    GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig:
      description: The configuration for continuous tests.
      properties:
        enableContinuousRun:
          description: Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
          type: boolean
        enablePredeploymentRun:
          description: Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
          type: boolean
        testCases:
          description: "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`"
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3EnvironmentVersionConfig:
      description: Configuration for the version.
      properties:
        version:
          description: "Required. Format: projects//locations//agents//flows//versions/."
          type: string
      type: object
    GoogleCloudDialogflowCxV3EnvironmentWebhookConfig:
      description: Configuration for webhooks.
      properties:
        webhookOverrides:
          description: The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Webhook"
          type: array
      type: object
    GoogleCloudDialogflowCxV3EventHandler:
      description: "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow."
      properties:
        event:
          description: Required. The name of the event to handle.
          type: string
        name:
          description: Output only. The unique identifier of this event handler.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
      type: object
    GoogleCloudDialogflowCxV3EventInput:
      description: Represents the event to trigger.
      properties:
        event:
          description: Name of the event.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Uncompressed raw byte content for agent. This field is populated if none of `agent_uri` and `git_destination` are specified in ExportAgentRequest.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated if `agent_uri` is specified in ExportAgentRequest.
          type: string
        commitSha:
          description: Commit SHA of the git push. This field is populated if `git_destination` is specified in ExportAgentRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ExportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ExportEntityTypesResponse:
      description: The response message for EntityTypes.ExportEntityTypes.
      properties:
        entityTypesContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3InlineDestination"
          description: Uncompressed byte content for entity types. This field is populated only if `entity_types_content_inline` is set to true in ExportEntityTypesRequest.
        entityTypesUri:
          description: The URI to a file containing the exported entity types. This field is populated only if `entity_types_uri` is specified in ExportEntityTypesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportFlowResponse:
      description: The response message for Flows.ExportFlow.
      properties:
        flowContent:
          description: Uncompressed raw byte content for flow.
          format: byte
          type: string
        flowUri:
          description: The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportIntentsMetadata:
      description: Metadata returned for the Intents.ExportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ExportIntentsResponse:
      description: The response message for Intents.ExportIntents.
      properties:
        intentsContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3InlineDestination"
          description: Uncompressed byte content for intents. This field is populated only if `intents_content_inline` is set to true in ExportIntentsRequest.
        intentsUri:
          description: The URI to a file containing the exported intents. This field is populated only if `intents_uri` is specified in ExportIntentsRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportTestCasesMetadata:
      description: Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ExportTestCasesResponse:
      description: The response message for TestCases.ExportTestCases.
      properties:
        content:
          description: Uncompressed raw byte content for test cases.
          format: byte
          type: string
        gcsUri:
          description: The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3Form:
      description: A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
      properties:
        parameters:
          description: Parameters to collect from the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FormParameter"
          type: array
      type: object
    GoogleCloudDialogflowCxV3FormParameter:
      description: Represents a form parameter.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings"
          description: Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
        defaultValue:
          description: The default value of an optional parameter. If the parameter is required, the default value will be ignored.
        displayName:
          description: Required. The human-readable name of the parameter, unique within the form.
          type: string
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        fillBehavior:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FormParameterFillBehavior"
          description: Required. Defines fill behavior for the parameter.
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
        required:
          description: Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3FormParameterFillBehavior:
      description: Configuration for how the filling of a parameter should be handled.
      properties:
        initialPromptFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
        repromptEventHandlers:
          description: "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EventHandler"
          type: array
      type: object
    GoogleCloudDialogflowCxV3Fulfillment:
      description: "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both."
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings"
          description: Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
        conditionalCases:
          description: Conditional cases for this fulfillment.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          type: array
        enableGenerativeFallback:
          description: If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
          type: boolean
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          type: array
        returnPartialResponses:
          description: "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
          type: boolean
        setParameterActions:
          description: Set parameter values before executing the webhook.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentSetParameterAction"
          type: array
        tag:
          description: The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
          type: string
        webhook:
          description: "The webhook to call. Format: `projects//locations//agents//webhooks/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3FulfillmentConditionalCases:
      description: A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
      properties:
        cases:
          description: A list of cascading if-else conditions.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase:
      description: Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
      properties:
        caseContent:
          description: A list of case content.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"
          type: array
        condition:
          description: The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
      type: object
    GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent:
      description: The list of messages or conditional cases to activate for this case.
      properties:
        additionalCases:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          description: Additional cases to be evaluated.
        message:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          description: Returned message.
      type: object
    GoogleCloudDialogflowCxV3FulfillmentSetParameterAction:
      description: Setting a parameter value.
      properties:
        parameter:
          description: Display name of the parameter.
          type: string
        value:
          description: The new value of the parameter. A null value clears the parameter.
      type: object
    GoogleCloudDialogflowCxV3GcsDestination:
      description: Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
      properties:
        uri:
          description: "Required. The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation."
          type: string
      type: object
    GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata:
      description: Metadata for ImportDocuments operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ImportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ImportEntityTypesResponse:
      description: The response message for EntityTypes.ImportEntityTypes.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportEntityTypesRequest.
        entityTypes:
          description: "The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        entityTypeDisplayNames:
          description: Display names of conflicting entity types.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportFlowResponse:
      description: The response message for Flows.ImportFlow.
      properties:
        flow:
          description: "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3ImportIntentsMetadata:
      description: Metadata returned for the Intents.ImportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ImportIntentsResponse:
      description: The response message for Intents.ImportIntents.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportIntentsRequest.
        intents:
          description: "The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        intentDisplayNames:
          description: Display names of conflicting intents.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportTestCasesMetadata:
      description: Metadata returned for the TestCases.ImportTestCases long running operation.
      properties:
        errors:
          description: Errors for failed test cases.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportTestCasesResponse:
      description: The response message for TestCases.ImportTestCases.
      properties:
        names:
          description: "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3InlineDestination:
      description: Inline destination for a Dialogflow operation that writes or exports objects (e.g. intents) outside of Dialogflow.
      properties:
        content:
          description: Output only. The uncompressed byte content for the objects. Only populated in responses.
          format: byte
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3InputAudioConfig:
      description: Instructs the speech recognizer on how to process the audio content.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
          type: string
        bargeInConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3BargeInConfig"
          description: Configuration of barge-in behavior during the streaming of input audio.
        enableWordInfo:
          description: Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
          type: boolean
        model:
          description: Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: string
        modelVariant:
          description: Optional. Which variant of the Speech model to use.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
          type: string
        optOutConformerModelMigration:
          description: If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow CX Speech model migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
          type: boolean
        phraseHints:
          description: Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
          items:
            type: string
          type: array
        sampleRateHertz:
          description: Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
          format: int32
          type: integer
        singleUtterance:
          description: "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3Intent:
      description: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: Required. The human-readable name of the intent, unique within the agent.
          type: string
        isFallback:
          description: Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys.contextual\" means the intent is a contextual intent."
          type: object
        name:
          description: "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          description: The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentParameter"
          type: array
        priority:
          description: The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        trainingPhrases:
          description: The collection of training phrases the agent is trained on to identify the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentTrainingPhrase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3IntentInput:
      description: Represents the intent to trigger programmatically rather than as a result of natural language processing.
      properties:
        intent:
          description: "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3IntentParameter:
      description: Represents an intent parameter.
      properties:
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        id:
          description: Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3IntentTrainingPhrase:
      description: Represents an example that the agent is trained on to identify the intent.
      properties:
        id:
          description: Output only. The unique identifier of the training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
          type: array
        repeatCount:
          description: Indicates how many times this example was added to the intent.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        parameterId:
          description: The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
      type: object
    GoogleCloudDialogflowCxV3KnowledgeConnectorSettings:
      description: The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
      properties:
        dataStoreConnections:
          description: Optional. List of related data store connections.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnection"
          type: array
        enabled:
          description: Whether Knowledge Connector is enabled or not.
          type: boolean
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
      type: object
    GoogleCloudDialogflowCxV3Page:
      description: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings"
          description: Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
        description:
          description: The description of the page. The maximum length is 500 characters.
          type: string
        displayName:
          description: Required. The human-readable name of the page, unique within the flow.
          type: string
        entryFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to call when the session is entering the page.
        eventHandlers:
          description: Handlers associated with the page to handle events such as webhook errors, no match or no input.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EventHandler"
          type: array
        form:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Form"
          description: The form associated with the page, used for collecting parameters relevant to the page.
        knowledgeConnectorSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3KnowledgeConnectorSettings"
          description: Optional. Knowledge connector configuration.
        name:
          description: "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
          type: string
        transitionRouteGroups:
          description: "Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups."
          items:
            type: string
          type: array
        transitionRoutes:
          description: "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute"
          type: array
      type: object
    GoogleCloudDialogflowCxV3PageInfo:
      description: Represents page information communicated to and from the webhook.
      properties:
        currentPage:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
          type: string
        displayName:
          description: Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.
          type: string
        formInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfoFormInfo"
          description: Optional for both WebhookRequest and WebhookResponse. Information about the form.
      type: object
    GoogleCloudDialogflowCxV3PageInfoFormInfo:
      description: Represents form information.
      properties:
        parameterInfo:
          description: Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
          type: array
      type: object
    GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo:
      description: Represents parameter information.
      properties:
        displayName:
          description: Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.
          type: string
        justCollected:
          description: Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.
          type: boolean
        required:
          description: Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
        state:
          description: Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.
          enum:
            - PARAMETER_STATE_UNSPECIFIED
            - EMPTY
            - INVALID
            - FILLED
          type: string
        value:
          description: Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value.
      type: object
    GoogleCloudDialogflowCxV3QueryInput:
      description: "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed by the client."
      properties:
        audio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AudioInput"
          description: The natural language speech audio to be processed.
        dtmf:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3DtmfInput"
          description: The DTMF event to be handled.
        event:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EventInput"
          description: The event to be triggered.
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentInput"
          description: The intent to be triggered.
        languageCode:
          description: Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
          type: string
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TextInput"
          description: The natural language text to be processed.
      type: object
    GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata:
      description: Metadata for ReloadDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3ResponseMessage:
      description: "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard."
      properties:
        channel:
          description: The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
          type: string
        conversationSuccess:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess"
          description: Indicates that the conversation succeeded.
        endInteraction:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageEndInteraction"
          description: Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
          readOnly: true
        knowledgeInfoCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard"
          description: Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        liveAgentHandoff:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff"
          description: Hands off conversation to a human agent.
        mixedAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageMixedAudio"
          description: Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
          readOnly: true
        outputAudioText:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText"
          description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Returns a response containing a custom, platform-specific payload.
          type: object
        playAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessagePlayAudio"
          description: Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        responseType:
          description: Response type.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - ENTRY_PROMPT
            - PARAMETER_PROMPT
            - HANDLER_PROMPT
          type: string
        telephonyTransferCall:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall"
          description: A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageText"
          description: Returns a text response.
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess:
      description: "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageEndInteraction:
      description: Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard:
      description: Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff:
      description: "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageMixedAudio:
      description: Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties:
        segments:
          description: Segments this audio response is composed of.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment:
      description: Represents one segment of audio.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
          readOnly: true
          type: boolean
        audio:
          description: Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
          format: byte
          type: string
        uri:
          description: Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText:
      description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        ssml:
          description: The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessagePlayAudio:
      description: Specifies an audio clip to be played by the client as part of the response.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        audioUri:
          description: Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall:
      description: Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
      properties:
        phoneNumber:
          description: Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageText:
      description: The text response message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        text:
          description: Required. A collection of text responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3RunContinuousTestMetadata:
      description: Metadata returned for the Environments.RunContinuousTest long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3RunContinuousTestResponse:
      description: The response message for Environments.RunContinuousTest.
      properties:
        continuousTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ContinuousTestResult"
          description: The result for a continuous test run.
      type: object
    GoogleCloudDialogflowCxV3RunTestCaseMetadata:
      description: Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3RunTestCaseResponse:
      description: The response message for TestCases.RunTestCase.
      properties:
        result:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult"
          description: The result.
      type: object
    GoogleCloudDialogflowCxV3SessionInfo:
      description: Represents session information communicated to and from the webhook.
      properties:
        parameters:
          additionalProperties: {}
          description: Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
          type: object
        session:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
          type: string
      type: object
    GoogleCloudDialogflowCxV3TestCase:
      description: Represents a test case.
      properties:
        creationTime:
          description: Output only. When the test was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
          type: string
        lastTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult"
          description: The latest test result.
        name:
          description: "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
          type: string
        notes:
          description: Additional freeform notes about the test case. Limit of 400 characters.
          type: string
        tags:
          description: Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
          items:
            type: string
          type: array
        testCaseConversationTurns:
          description: The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurn"
          type: array
        testConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestConfig"
          description: Config for the test case.
      type: object
    GoogleCloudDialogflowCxV3TestCaseError:
      description: Error info for importing a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test case.
        testCase:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCase"
          description: The test case.
      type: object
    GoogleCloudDialogflowCxV3TestCaseResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        conversationTurns:
          description: The conversation turns uttered during the test case replay in chronological order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurn"
          type: array
        environment:
          description: Environment where the test was run. If not set, it indicates the draft environment.
          type: string
        name:
          description: "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
          type: string
        testResult:
          description: Whether the test case passed in the agent environment.
          enum:
            - TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        testTime:
          description: The time that the test was run.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3TestConfig:
      description: Represents configurations for a test case.
      properties:
        flow:
          description: "Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        page:
          description: "The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        trackingParameters:
          description: Session parameters to be compared when calculating differences.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3TestError:
      description: Error info for running a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test.
        testCase:
          description: The test case resource name.
          type: string
        testTime:
          description: The timestamp when the test was completed.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3TestRunDifference:
      description: The description of differences between original and replayed agent output.
      properties:
        description:
          description: A human readable description of the diff, showing the actual output vs expected output.
          type: string
        type:
          description: The type of diff.
          enum:
            - DIFF_TYPE_UNSPECIFIED
            - INTENT
            - PAGE
            - PARAMETERS
            - UTTERANCE
            - FLOW
          type: string
      type: object
    GoogleCloudDialogflowCxV3TextInput:
      description: Represents the natural language text to be processed.
      properties:
        text:
          description: Required. The UTF-8 encoded natural language text to be processed.
          type: string
      type: object
    GoogleCloudDialogflowCxV3TransitionRoute:
      description: "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow."
      properties:
        condition:
          description: The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
          type: string
        description:
          description: Optional. The description of the transition route. The maximum length is 500 characters.
          type: string
        intent:
          description: "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
          type: string
        name:
          description: Output only. The unique identifier of this transition route.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
      type: object
    GoogleCloudDialogflowCxV3TurnSignals:
      description: Collection of all signals that were extracted for a single turn of the conversation.
      properties:
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        failureReasons:
          description: Failure reasons of the turn.
          items:
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
            type: string
          type: array
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        sentimentMagnitude:
          description: Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        sentimentScore:
          description: Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata:
      description: Metadata for UpdateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3Webhook:
      description: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
      properties:
        disabled:
          description: Indicates whether the webhook is disabled.
          type: boolean
        displayName:
          description: Required. The human-readable name of the webhook, unique within the agent.
          type: string
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebService"
          description: Configuration for a generic web service.
        name:
          description: "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
          type: string
        serviceDirectory:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig"
          description: Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
        timeout:
          description: Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookGenericWebService:
      description: Represents configuration for a generic web service.
      properties:
        allowedCaCerts:
          description: Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'") ```
          items:
            format: byte
            type: string
          type: array
        httpMethod:
          description: Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
          type: string
        parameterMapping:
          additionalProperties:
            type: string
          description: "Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response"
          type: object
        password:
          deprecated: true
          description: The password for HTTP Basic authentication.
          type: string
        requestBody:
          description: Optional. Defines a custom JSON object as request body to send to flexible webhook.
          type: string
        requestHeaders:
          additionalProperties:
            type: string
          description: The HTTP request headers to send together with webhook requests.
          type: object
        uri:
          description: Required. The webhook URI for receiving POST requests. It must use https protocol.
          type: string
        username:
          deprecated: true
          description: The user name for HTTP Basic authentication.
          type: string
        webhookType:
          description: Optional. Type of the webhook.
          enum:
            - WEBHOOK_TYPE_UNSPECIFIED
            - STANDARD
            - FLEXIBLE
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookRequest:
      description: The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.
      properties:
        detectIntentResponseId:
          description: Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
          type: string
        dtmfDigits:
          description: If DTMF was provided as input, this field will contain the DTMF digits.
          type: string
        fulfillmentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo"
          description: Always present. Information about the fulfillment that triggered this webhook call.
        intentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestIntentInfo"
          description: Information about the last matched intent.
        languageCode:
          description: The language code specified in the original request.
          type: string
        messages:
          description: The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          type: array
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfo"
          description: Information about page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Custom data set in QueryParameters.payload.
          type: object
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult"
          description: The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request.
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3SessionInfo"
          description: Information about session status.
        text:
          description: If natural language text was provided as input, this field will contain a copy of the text.
          type: string
        transcript:
          description: If natural language speech audio was provided as input, this field will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: If an event was provided as input, this field will contain the name of the event.
          type: string
        triggerIntent:
          description: "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo:
      description: Represents fulfillment information communicated to the webhook.
      properties:
        tag:
          description: Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes.
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfo:
      description: Represents intent information communicated to the webhook.
      properties:
        confidence:
          description: The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        displayName:
          description: Always present. The display name of the last matched intent.
          type: string
        lastMatchedIntent:
          description: "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue"
          description: Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.
          type: object
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue:
      description: Represents a value for an intent parameter.
      properties:
        originalValue:
          description: Always present. Original text value extracted from user utterance.
          type: string
        resolvedValue:
          description: Always present. Structured value for the parameter extracted from user utterance.
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult:
      description: Represents the result of sentiment analysis.
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowCxV3WebhookResponse:
      description: The response message for a webhook call.
      properties:
        fulfillmentResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse"
          description: The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfo"
          description: Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Value to append directly to QueryResult.webhook_payloads.
          type: object
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3SessionInfo"
          description: Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse:
      description: Represents a fulfillment response to the user.
      properties:
        mergeBehavior:
          description: Merge behavior for `messages`.
          enum:
            - MERGE_BEHAVIOR_UNSPECIFIED
            - APPEND
            - REPLACE
          type: string
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          type: array
      type: object
    GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig:
      description: Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
      properties:
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebService"
          description: Generic Service configuration of this webhook.
        service:
          description: "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1AdvancedSettings:
      description: "Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter."
      properties:
        audioExportGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GcsDestination"
          description: "If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level"
        dtmfSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings"
          description: "Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level."
        loggingSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings"
          description: "Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level."
      type: object
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings:
      description: Define behaviors for DTMF (dual tone multi frequency).
      properties:
        enabled:
          description: If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
          type: boolean
        finishDigit:
          description: The digit that terminates a DTMF digit sequence.
          type: string
        maxDigits:
          description: Max length of DTMF digits.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings:
      description: Define behaviors on logging.
      properties:
        enableInteractionLogging:
          description: If true, DF Interaction logging is currently enabled.
          type: boolean
        enableStackdriverLogging:
          description: If true, StackDriver logging is currently enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1Agent:
      description: Agents are best described as Natural Language Understanding (NLU) modules that transform user requests into actionable data. You can include agents in your app, product, or service to determine user intent and respond to the user in a natural way. After you create an agent, you can add Intents, Entity Types, Flows, Fulfillments, Webhooks, TransitionRouteGroups and so on to manage the conversation flows.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this agent. The settings exposed at the lower level overrides the settings exposed at the higher level.
        answerFeedbackSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings"
          description: Optional. Answer feedback collection settings.
        avatarUri:
          description: The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.
          type: string
        defaultLanguageCode:
          description: Required. Immutable. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the Agents.UpdateAgent method.
          type: string
        description:
          description: The description of the agent. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the agent, unique within the location.
          type: string
        enableSpellCorrection:
          description: Indicates if automatic spell correction is enabled in detect intent requests.
          type: boolean
        enableStackdriverLogging:
          deprecated: true
          description: Indicates if stackdriver logging is enabled for the agent. Please use agent.advanced_settings instead.
          type: boolean
        genAppBuilderSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings"
          description: Gen App Builder-related agent-level settings.
        gitIntegrationSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings"
          description: Git integration settings for this agent.
        locked:
          description: Indicates whether the agent is locked for changes. If the agent is locked, modifications to the agent will be rejected except for RestoreAgent.
          type: boolean
        name:
          description: "The unique identifier of the agent. Required for the Agents.UpdateAgent method. Agents.CreateAgent populates the name automatically. Format: `projects//locations//agents/`."
          type: string
        securitySettings:
          description: "Name of the SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`."
          type: string
        speechToTextSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SpeechToTextSettings"
          description: Speech recognition related settings.
        startFlow:
          description: "Immutable. Name of the start flow in this agent. A start flow will be automatically created when the agent is created, and can only be deleted by deleting the agent. Format: `projects//locations//agents//flows/`."
          type: string
        supportedLanguageCodes:
          description: The list of all languages supported by the agent (except for the `default_language_code`).
          items:
            type: string
          type: array
        textToSpeechSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TextToSpeechSettings"
          description: Settings on instructing the speech synthesizer on how to generate the output audio content.
        timeZone:
          description: Required. The time zone of the agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1AgentAnswerFeedbackSettings:
      description: Settings for answer feedback collection.
      properties:
        enableAnswerFeedback:
          description: Optional. If enabled, end users will be able to provide answer feedback to Dialogflow responses. Feature works only if interaction logging is enabled in the Dialogflow agent.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1AgentGenAppBuilderSettings:
      description: Settings for Gen App Builder.
      properties:
        engine:
          description: "Required. The full name of the Gen App Builder engine related to this agent if there is one. Format: `projects/{Project ID}/locations/{Location ID}/collections/{Collection ID}/engines/{Engine ID}`"
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettings:
      description: Settings for connecting to Git repository for an agent.
      properties:
        githubSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings"
          description: GitHub settings.
      type: object
    GoogleCloudDialogflowCxV3beta1AgentGitIntegrationSettingsGithubSettings:
      description: Settings of integration with GitHub.
      properties:
        accessToken:
          description: The access token used to authenticate the access to the GitHub repository.
          type: string
        branches:
          description: A list of branches configured to be used from Dialogflow.
          items:
            type: string
          type: array
        displayName:
          description: The unique repository display name for the GitHub repository.
          type: string
        repositoryUri:
          description: The GitHub repository URI related to the agent.
          type: string
        trackingBranch:
          description: The branch of the GitHub repository tracked for this agent.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1AgentValidationResult:
      description: The response message for Agents.GetAgentValidationResult.
      properties:
        flowValidationResults:
          description: Contains all flow validation results.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FlowValidationResult"
          type: array
        name:
          description: "The unique identifier of the agent validation result. Format: `projects//locations//agents//validationResult`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1AnswerFeedback:
      description: Stores information about feedback provided by users about a response.
      properties:
        customRating:
          description: Optional. Custom rating from the user about the provided answer, with maximum length of 1024 characters. For example, client could use a customized JSON object to indicate the rating.
          type: string
        rating:
          description: Optional. Rating from user for the specific Dialogflow response.
          enum:
            - RATING_UNSPECIFIED
            - THUMBS_UP
            - THUMBS_DOWN
          type: string
        ratingReason:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AnswerFeedbackRatingReason"
          description: Optional. In case of thumbs down rating provided, users can optionally provide context about the rating.
      type: object
    GoogleCloudDialogflowCxV3beta1AnswerFeedbackRatingReason:
      description: Stores extra information about why users provided thumbs down rating.
      properties:
        feedback:
          description: Optional. Additional feedback about the rating. This field can be populated without choosing a predefined `reason`.
          type: string
        reasonLabels:
          description: Optional. Custom reason labels for thumbs down rating provided by the user. The maximum number of labels allowed is 10 and the maximum length of a single label is 128 characters.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1AudioInput:
      description: Represents the natural speech audio to be processed.
      properties:
        audio:
          description: The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
          format: byte
          type: string
        config:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InputAudioConfig"
          description: Required. Instructs the speech recognizer how to process the speech audio.
      type: object
    GoogleCloudDialogflowCxV3beta1BargeInConfig:
      description: "Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length from the the start of the input audio. No-speech event is a response with END_OF_UTTERANCE without any transcript following up."
      properties:
        noBargeInDuration:
          description: Duration that is not eligible for barge-in at the beginning of the input audio.
          format: google-duration
          type: string
        totalDuration:
          description: Total duration for the playback at the beginning of the input audio.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1BatchDeleteTestCasesRequest:
      description: The request message for TestCases.BatchDeleteTestCases.
      properties:
        names:
          description: "Required. Format of test case names: `projects//locations/ /agents//testCases/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata:
      description: Metadata returned for the TestCases.BatchRunTestCases long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesRequest:
      description: The request message for TestCases.BatchRunTestCases.
      properties:
        environment:
          description: "Optional. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`."
          type: string
        testCases:
          description: "Required. Format: `projects//locations//agents//testCases/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse:
      description: The response message for TestCases.BatchRunTestCases.
      properties:
        results:
          description: The test case results. The detailed conversation turns are empty in this response.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1BoostSpec:
      description: Boost specification to boost certain documents. A copy of google.cloud.discoveryengine.v1main.BoostSpec, field documentation is available at https://cloud.google.com/generative-ai-app-builder/docs/reference/rest/v1alpha/BoostSpec
      properties:
        conditionBoostSpecs:
          description: Optional. Condition boost specifications. If a document matches multiple conditions in the specifictions, boost scores from these specifications are all applied and combined in a non-linear way. Maximum number of specifications is 20.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BoostSpecConditionBoostSpec"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1BoostSpecConditionBoostSpec:
      description: Boost applies to documents which match a condition.
      properties:
        boost:
          description: Optional. Strength of the condition boost, which should be in [-1, 1]. Negative boost means demotion. Default is 0.0. Setting to 1.0 gives the document a big promotion. However, it does not necessarily mean that the boosted document will be the top result at all times, nor that other documents will be excluded. Results could still be shown even when none of them matches the condition. And results that are significantly more relevant to the search query can still trump your heavily favored but irrelevant documents. Setting to -1.0 gives the document a big demotion. However, results that are deeply relevant might still be shown. The document will have an upstream battle to get a fairly high ranking, but it is not blocked out completely. Setting to 0.0 means no boost applied. The boosting condition is ignored.
          format: float
          type: number
        condition:
          description: 'Optional. An expression which specifies a boost condition. The syntax and supported fields are the same as a filter expression. Examples: * To boost documents with document ID "doc_1" or "doc_2", and color "Red" or "Blue": * (id: ANY("doc_1", "doc_2")) AND (color: ANY("Red","Blue"))'
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1BoostSpecs:
      description: Boost specifications for data stores.
      properties:
        dataStores:
          description: "Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data stores. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}"
          items:
            type: string
          type: array
        spec:
          description: Optional. A list of boosting specifications.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BoostSpec"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1CalculateCoverageResponse:
      description: The response message for TestCases.CalculateCoverage.
      properties:
        agent:
          description: "The agent to calculate coverage for. Format: `projects//locations//agents/`."
          type: string
        intentCoverage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentCoverage"
          description: Intent coverage.
        routeGroupCoverage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage"
          description: Transition route group coverage.
        transitionCoverage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionCoverage"
          description: Transition (excluding transition route groups) coverage.
      type: object
    GoogleCloudDialogflowCxV3beta1Changelog:
      description: Changelogs represents a change made to a given agent.
      properties:
        action:
          description: The action of the change.
          type: string
        createTime:
          description: The timestamp of the change.
          format: google-datetime
          type: string
        displayName:
          description: The affected resource display name of the change.
          type: string
        languageCode:
          description: The affected language code of the change.
          type: string
        name:
          description: "The unique identifier of the changelog. Format: `projects//locations//agents//changelogs/`."
          type: string
        resource:
          description: The affected resource name of the change.
          type: string
        type:
          description: The affected resource type.
          type: string
        userEmail:
          description: Email address of the authenticated user.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1CompareVersionsRequest:
      description: The request message for Versions.CompareVersions.
      properties:
        languageCode:
          description: "The language to compare the flow versions for. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          type: string
        targetVersion:
          description: "Required. Name of the target flow version to compare with the base version. Use version ID `0` to indicate the draft version of the specified flow. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1CompareVersionsResponse:
      description: The response message for Versions.CompareVersions.
      properties:
        baseVersionContentJson:
          description: JSON representation of the base version content.
          type: string
        compareTime:
          description: The timestamp when the two version compares.
          format: google-datetime
          type: string
        targetVersionContentJson:
          description: JSON representation of the target version content.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ContinuousTestResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        name:
          description: "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`."
          type: string
        result:
          description: The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not.
          enum:
            - AGGREGATED_TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        runTime:
          description: Time when the continuous testing run starts.
          format: google-datetime
          type: string
        testCaseResults:
          description: A list of individual test case results names in this continuous test run.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationSignals:
      description: This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to BigQuery.
      properties:
        turnSignals:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TurnSignals"
          description: Required. Turn signals for the current turn.
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationTurn:
      description: One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
      properties:
        userInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput"
          description: The user input.
        virtualAgentOutput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput"
          description: The virtual agent output.
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput:
      description: The input from the human user.
      properties:
        enableSentimentAnalysis:
          description: Whether sentiment analysis is enabled.
          type: boolean
        injectedParameters:
          additionalProperties:
            description: Properties of the object.
          description: Parameters that need to be injected into the conversation during intent detection.
          type: object
        input:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryInput"
          description: Supports text input, event input, dtmf input in the test case.
        isWebhookEnabled:
          description: If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput:
      description: The output from the virtual agent.
      properties:
        currentPage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          description: The Page on which the utterance was spoken. Only name and displayName will be set.
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
          type: object
        differences:
          description: Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestRunDifference"
          readOnly: true
          type: array
        sessionParameters:
          additionalProperties:
            description: Properties of the object.
          description: The session parameters available to the bot at this point.
          type: object
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Response error from the agent in the test result. If set, other output is empty.
        textResponses:
          description: The text responses from the agent for the turn.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          type: array
        triggeredIntent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
          description: The Intent that triggered the response. Only name and displayName will be set.
      type: object
    GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata:
      description: Metadata for CreateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata:
      description: Metadata associated with the long running operation for Versions.CreateVersion.
      properties:
        version:
          description: "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DataStoreConnection:
      description: A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
      properties:
        dataStore:
          description: "The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`"
          type: string
        dataStoreType:
          description: The type of the connected data store.
          enum:
            - DATA_STORE_TYPE_UNSPECIFIED
            - PUBLIC_WEB
            - UNSTRUCTURED
            - STRUCTURED
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata:
      description: Metadata for DeleteDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1DeployFlowMetadata:
      description: Metadata returned for the Environments.DeployFlow long running operation.
      properties:
        testErrors:
          description: Errors of running deployment tests.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1DeployFlowRequest:
      description: The request message for Environments.DeployFlow.
      properties:
        flowVersion:
          description: "Required. The flow version to deploy. Format: `projects//locations//agents// flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DeployFlowResponse:
      description: The response message for Environments.DeployFlow.
      properties:
        deployment:
          description: "The name of the flow version deployment. Format: `projects//locations//agents// environments//deployments/`."
          type: string
        environment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Environment"
          description: The updated environment where the flow is deployed.
      type: object
    GoogleCloudDialogflowCxV3beta1Deployment:
      description: Represents a deployment in an environment. A deployment happens when a flow version configured to be active in the environment. You can configure running pre-deployment steps, e.g. running validation test cases, experiment auto-rollout, etc.
      properties:
        endTime:
          description: End time of this deployment.
          format: google-datetime
          type: string
        flowVersion:
          description: "The name of the flow version for this deployment. Format: projects//locations//agents//flows//versions/."
          type: string
        name:
          description: "The name of the deployment. Format: projects//locations//agents//environments//deployments/."
          type: string
        result:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DeploymentResult"
          description: Result of the deployment.
        startTime:
          description: Start time of this deployment.
          format: google-datetime
          type: string
        state:
          description: The current state of the deployment.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DeploymentResult:
      description: Result of the deployment.
      properties:
        deploymentTestResults:
          description: "Results of test cases running before the deployment. Format: `projects//locations//agents//testCases//results/`."
          items:
            type: string
          type: array
        experiment:
          description: "The name of the experiment triggered by this deployment. Format: projects//locations//agents//environments//experiments/."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DetectIntentRequest:
      description: The request to detect user's intent.
      properties:
        outputAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
          description: Instructs the speech synthesizer how to generate the output audio.
        queryInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryInput"
          description: Required. The input specification.
        queryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryParameters"
          description: The parameters of this query.
      type: object
    GoogleCloudDialogflowCxV3beta1DetectIntentResponse:
      description: The message returned from the DetectIntent method.
      properties:
        allowCancellation:
          description: Indicates whether the partial response can be cancelled when a later response arrives. e.g. if the agent specified some music as partial response, it can be cancelled.
          type: boolean
        outputAudio:
          description: "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
          format: byte
          type: string
        outputAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
          description: The config used by the speech synthesizer to generate the output audio.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryResult"
          description: The result of the conversational query.
        responseId:
          description: Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.
          type: string
        responseType:
          description: Response type.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - PARTIAL
            - FINAL
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DtmfInput:
      description: Represents the input for dtmf event.
      properties:
        digits:
          description: The dtmf digits.
          type: string
        finishDigit:
          description: The finish digit (if any).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1EntityType:
      description: 'Entities are extracted from user input and represent parameters that are meaningful to your application. For example, a date range, a proper name such as a geographic location or landmark, and so on. Entities represent actionable data for your application. When you define an entity, you can also include synonyms that all map to that entity. For example, "soft drink", "soda", "pop", and so on. There are three types of entities: * **System** - entities that are defined by the Dialogflow API for common data types such as date, time, currency, and so on. A system entity is represented by the `EntityType` type. * **Custom** - entities that are defined by you that represent actionable data that is meaningful to your application. For example, you could define a `pizza.sauce` entity for red or white pizza sauce, a `pizza.cheese` entity for the different types of cheese on a pizza, a `pizza.topping` entity for different toppings, and so on. A custom entity is represented by the `EntityType` type. * **User** - entities that are built for an individual user such as favorites, preferences, playlists, and so on. A user entity is represented by the SessionEntityType type. For more information about entity types, see the [Dialogflow documentation](https://cloud.google.com/dialogflow/docs/entities-overview).'
      properties:
        autoExpansionMode:
          description: Indicates whether the entity type can be automatically expanded.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
          type: string
        displayName:
          description: Required. The human-readable name of the entity type, unique within the agent.
          type: string
        enableFuzzyExtraction:
          description: Enables fuzzy entity extraction during classification.
          type: boolean
        entities:
          description: The collection of entity entries associated with the entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EntityTypeEntity"
          type: array
        excludedPhrases:
          description: Collection of exceptional words and phrases that shouldn't be matched. For example, if you have a size entity type with entry `giant`(an adjective), you might consider adding `giants`(a noun) as an exclusion. If the kind of entity type is `KIND_MAP`, then the phrases specified by entities and excluded phrases should be mutually exclusive.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase"
          type: array
        kind:
          description: Required. Indicates the kind of entity type.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
          type: string
        name:
          description: "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType. Format: `projects//locations//agents//entityTypes/`."
          type: string
        redact:
          description: Indicates whether parameters of the entity type should be redacted in log. If redaction is enabled, page parameters and intent parameters referring to the entity type will be replaced by parameter name during logging.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1EntityTypeEntity:
      description: An **entity entry** for an associated entity type.
      properties:
        synonyms:
          description: "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
          items:
            type: string
          type: array
        value:
          description: "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A canonical value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1EntityTypeExcludedPhrase:
      description: An excluded entity phrase that should not be matched.
      properties:
        value:
          description: Required. The word or phrase to be excluded.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Environment:
      description: Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.
      properties:
        description:
          description: The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.
          type: string
        name:
          description: "The name of the environment. Format: `projects//locations//agents//environments/`."
          type: string
        testCasesConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig"
          description: The test cases config for continuous tests of this environment.
        updateTime:
          description: Output only. Update time of this environment.
          format: google-datetime
          readOnly: true
          type: string
        versionConfigs:
          description: A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig"
          type: array
        webhookConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig"
          description: The webhook configuration for this environment.
      type: object
    GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig:
      description: The configuration for continuous tests.
      properties:
        enableContinuousRun:
          description: Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
          type: boolean
        enablePredeploymentRun:
          description: Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
          type: boolean
        testCases:
          description: "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`"
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig:
      description: Configuration for the version.
      properties:
        version:
          description: "Required. Format: projects//locations//agents//flows//versions/."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig:
      description: Configuration for webhooks.
      properties:
        webhookOverrides:
          description: The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Webhook"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1EventHandler:
      description: "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow."
      properties:
        event:
          description: Required. The name of the event to handle.
          type: string
        name:
          description: Output only. The unique identifier of this event handler.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
      type: object
    GoogleCloudDialogflowCxV3beta1EventInput:
      description: Represents the event to trigger.
      properties:
        event:
          description: Name of the event.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Experiment:
      description: Represents an experiment in an environment.
      properties:
        createTime:
          description: Creation time of this experiment.
          format: google-datetime
          type: string
        definition:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExperimentDefinition"
          description: The definition of the experiment.
        description:
          description: The human-readable description of the experiment.
          type: string
        displayName:
          description: Required. The human-readable name of the experiment (unique in an environment). Limit of 64 characters.
          type: string
        endTime:
          description: End time of this experiment.
          format: google-datetime
          type: string
        experimentLength:
          description: Maximum number of days to run the experiment. If auto-rollout is not enabled, default value and maximum will be 30 days. If auto-rollout is enabled, default value and maximum will be 6 days.
          format: google-duration
          type: string
        lastUpdateTime:
          description: Last update time of this experiment.
          format: google-datetime
          type: string
        name:
          description: "The name of the experiment. Format: projects//locations//agents//environments//experiments/.."
          type: string
        result:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExperimentResult"
          description: Inference result of the experiment.
        rolloutConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RolloutConfig"
          description: The configuration for auto rollout. If set, there should be exactly two variants in the experiment (control variant being the default version of the flow), the traffic allocation for the non-control variant will gradually increase to 100% when conditions are met, and eventually replace the control variant to become the default version of the flow.
        rolloutFailureReason:
          description: The reason why rollout has failed. Should only be set when state is ROLLOUT_FAILED.
          type: string
        rolloutState:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RolloutState"
          description: State of the auto rollout process.
        startTime:
          description: Start time of this experiment.
          format: google-datetime
          type: string
        state:
          description: "The current state of the experiment. Transition triggered by Experiments.StartExperiment: DRAFT->RUNNING. Transition triggered by Experiments.CancelExperiment: DRAFT->DONE or RUNNING->DONE."
          enum:
            - STATE_UNSPECIFIED
            - DRAFT
            - RUNNING
            - DONE
            - ROLLOUT_FAILED
          type: string
        variantsHistory:
          description: The history of updates to the experiment variants.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1VariantsHistory"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ExperimentDefinition:
      description: Definition of the experiment.
      properties:
        condition:
          description: The condition defines which subset of sessions are selected for this experiment. If not specified, all sessions are eligible. E.g. "query_input.language_code=en" See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        versionVariants:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1VersionVariants"
          description: The flow versions as the variants of this experiment.
      type: object
    GoogleCloudDialogflowCxV3beta1ExperimentResult:
      description: The inference result which includes an objective metric to optimize and the confidence interval.
      properties:
        lastUpdateTime:
          description: The last time the experiment's stats data was updated. Will have default value if stats have never been computed for this experiment.
          format: google-datetime
          type: string
        versionMetrics:
          description: Version variants and metrics.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExperimentResultVersionMetrics"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval:
      description: A confidence interval is a range of possible values for the experiment objective you are trying to measure.
      properties:
        confidenceLevel:
          description: The confidence level used to construct the interval, i.e. there is X% chance that the true value is within this interval.
          format: double
          type: number
        lowerBound:
          description: Lower bound of the interval.
          format: double
          type: number
        ratio:
          description: The percent change between an experiment metric's value and the value for its control.
          format: double
          type: number
        upperBound:
          description: Upper bound of the interval.
          format: double
          type: number
      type: object
    GoogleCloudDialogflowCxV3beta1ExperimentResultMetric:
      description: Metric and corresponding confidence intervals.
      properties:
        confidenceInterval:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExperimentResultConfidenceInterval"
          description: The probability that the treatment is better than all other treatments in the experiment
        count:
          description: Count value of a metric.
          format: double
          type: number
        countType:
          description: Count-based metric type. Only one of type or count_type is specified in each Metric.
          enum:
            - COUNT_TYPE_UNSPECIFIED
            - TOTAL_NO_MATCH_COUNT
            - TOTAL_TURN_COUNT
            - AVERAGE_TURN_COUNT
          type: string
        ratio:
          description: Ratio value of a metric.
          format: double
          type: number
        type:
          description: Ratio-based metric type. Only one of type or count_type is specified in each Metric.
          enum:
            - METRIC_UNSPECIFIED
            - CONTAINED_SESSION_NO_CALLBACK_RATE
            - LIVE_AGENT_HANDOFF_RATE
            - CALLBACK_SESSION_RATE
            - ABANDONED_SESSION_RATE
            - SESSION_END_RATE
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExperimentResultVersionMetrics:
      description: Version variant and associated metrics.
      properties:
        metrics:
          description: The metrics and corresponding confidence intervals in the inference result.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExperimentResultMetric"
          type: array
        sessionCount:
          description: Number of sessions that were allocated to this version.
          format: int32
          type: integer
        version:
          description: "The name of the flow Version. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportAgentRequest:
      description: The request message for Agents.ExportAgent.
      properties:
        agentUri:
          description: Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        dataFormat:
          description: Optional. The data format of the exported agent. If not specified, `BLOB` is assumed.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON_PACKAGE
          type: string
        environment:
          description: "Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`."
          type: string
        gitDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ExportAgentRequestGitDestination"
          description: Optional. The Git branch to export the agent to.
        includeBigqueryExportSettings:
          description: Optional. Whether to include BigQuery Export setting.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1ExportAgentRequestGitDestination:
      description: Settings for exporting to a git branch.
      properties:
        commitMessage:
          description: Commit message for the git push.
          type: string
        trackingBranch:
          description: Tracking branch for the git push.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Uncompressed raw byte content for agent. This field is populated if none of `agent_uri` and `git_destination` are specified in ExportAgentRequest.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated if `agent_uri` is specified in ExportAgentRequest.
          type: string
        commitSha:
          description: Commit SHA of the git push. This field is populated if `git_destination` is specified in ExportAgentRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ExportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesRequest:
      description: The request message for EntityTypes.ExportEntityTypes.
      properties:
        dataFormat:
          description: Optional. The data format of the exported entity types. If not specified, `BLOB` is assumed.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON_PACKAGE
          type: string
        entityTypes:
          description: "Required. The name of the entity types to export. Format: `projects//locations//agents//entityTypes/`."
          items:
            type: string
          type: array
        entityTypesContentInline:
          description: Optional. The option to return the serialized entity types inline.
          type: boolean
        entityTypesUri:
          description: Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the entity types to. The format of this URI must be `gs:///`. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        languageCode:
          description: "Optional. The language to retrieve the entity type for. The following fields are language dependent: * `EntityType.entities.value` * `EntityType.entities.synonyms` * `EntityType.excluded_phrases.value` If not specified, all language dependent fields will be retrieved. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesResponse:
      description: The response message for EntityTypes.ExportEntityTypes.
      properties:
        entityTypesContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineDestination"
          description: Uncompressed byte content for entity types. This field is populated only if `entity_types_content_inline` is set to true in ExportEntityTypesRequest.
        entityTypesUri:
          description: The URI to a file containing the exported entity types. This field is populated only if `entity_types_uri` is specified in ExportEntityTypesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportFlowRequest:
      description: The request message for Flows.ExportFlow.
      properties:
        flowUri:
          description: Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the flow to. The format of this URI must be `gs:///`. If left unspecified, the serialized flow is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        includeReferencedFlows:
          description: Optional. Whether to export flows referenced by the specified flow.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1ExportFlowResponse:
      description: The response message for Flows.ExportFlow.
      properties:
        flowContent:
          description: Uncompressed raw byte content for flow.
          format: byte
          type: string
        flowUri:
          description: The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportIntentsMetadata:
      description: Metadata returned for the Intents.ExportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ExportIntentsRequest:
      description: The request message for Intents.ExportIntents.
      properties:
        dataFormat:
          description: Optional. The data format of the exported intents. If not specified, `BLOB` is assumed.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON
            - CSV
          type: string
        intents:
          description: "Required. The name of the intents to export. Format: `projects//locations//agents//intents/`."
          items:
            type: string
          type: array
        intentsContentInline:
          description: Optional. The option to return the serialized intents inline.
          type: boolean
        intentsUri:
          description: Optional. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the intents to. The format of this URI must be `gs:///`. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportIntentsResponse:
      description: The response message for Intents.ExportIntents.
      properties:
        intentsContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineDestination"
          description: Uncompressed byte content for intents. This field is populated only if `intents_content_inline` is set to true in ExportIntentsRequest.
        intentsUri:
          description: The URI to a file containing the exported intents. This field is populated only if `intents_uri` is specified in ExportIntentsRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata:
      description: Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ExportTestCasesRequest:
      description: The request message for TestCases.ExportTestCases.
      properties:
        dataFormat:
          description: The data format of the exported test cases. If not specified, `BLOB` is assumed.
          enum:
            - DATA_FORMAT_UNSPECIFIED
            - BLOB
            - JSON
          type: string
        filter:
          description: 'The filter expression used to filter exported test cases, see [API Filtering](https://aip.dev/160). The expression is case insensitive and supports the following syntax: name = [OR name = ] ... For example: * "name = t1 OR name = t2" matches the test case with the exact resource name "t1" or "t2".'
          type: string
        gcsUri:
          description: The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the test cases to. The format of this URI must be `gs:///`. If unspecified, the serialized test cases is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse:
      description: The response message for TestCases.ExportTestCases.
      properties:
        content:
          description: Uncompressed raw byte content for test cases.
          format: byte
          type: string
        gcsUri:
          description: The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1FilterSpecs:
      description: Filter specifications for data stores.
      properties:
        dataStores:
          description: "Optional. Data Stores where the boosting configuration is applied. The full names of the referenced data stores. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}"
          items:
            type: string
          type: array
        filter:
          description: Optional. The filter expression to be applied. Expression syntax is documented at https://cloud.google.com/generative-ai-app-builder/docs/filter-search-metadata#filter-expression-syntax
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Flow:
      description: Flows represents the conversation flows when you build your chatbot agent. A flow consists of many pages connected by the transition routes. Conversations always start with the built-in Start Flow (with an all-0 ID). Transition routes can direct the conversation session from the current flow (parent flow) to another flow (sub flow). When the sub flow is finished, Dialogflow will bring the session back to the parent flow, where the sub flow is started. Usually, when a transition route is followed by a matched intent, the intent will be "consumed". This means the intent won't activate more transition routes. However, when the followed transition route moves the conversation session into a different flow, the matched intent can be carried over and to be consumed in the target flow.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this flow. The settings exposed at the lower level overrides the settings exposed at the higher level.
        description:
          description: The description of the flow. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the flow.
          type: string
        eventHandlers:
          description: "A flow's event handlers serve two purposes: * They are responsible for handling events (e.g. no match, webhook errors) in the flow. * They are inherited by every page's event handlers, which can be used to handle common events regardless of the current page. Event handlers defined in the page have higher priority than those defined in the flow. Unlike transition_routes, these handlers are evaluated on a first-match basis. The first one that matches the event get executed, with the rest being ignored."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler"
          type: array
        knowledgeConnectorSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings"
          description: Optional. Knowledge connector configuration.
        name:
          description: "The unique identifier of the flow. Format: `projects//locations//agents//flows/`."
          type: string
        nluSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1NluSettings"
          description: NLU related settings of the flow.
        transitionRouteGroups:
          description: "A flow's transition route group serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition route groups. Transition route groups defined in the page have higher priority than those defined in the flow. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups."
          items:
            type: string
          type: array
        transitionRoutes:
          description: "A flow's transition routes serve two purposes: * They are responsible for matching the user's first utterances in the flow. * They are inherited by every page's transition routes and can support use cases such as the user saying \"help\" or \"can I talk to a human?\", which can be handled in a common way regardless of the current page. Transition routes defined in the page have higher priority than those defined in the flow. TransitionRoutes are evalauted in the following order: * TransitionRoutes with intent specified. * TransitionRoutes with only condition specified. TransitionRoutes with intent specified are inherited by pages in the flow."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1FlowImportStrategy:
      description: The flow import strategy used for resource conflict resolution associated with an ImportFlowRequest.
      properties:
        globalImportStrategy:
          description: Optional. Global flow import strategy for resource conflict resolution. The import Import strategy for resource conflict resolution, applied globally throughout the flow. It will be applied for all display name conflicts in the imported content. If not specified, 'CREATE_NEW' is assumed.
          enum:
            - IMPORT_STRATEGY_UNSPECIFIED
            - IMPORT_STRATEGY_CREATE_NEW
            - IMPORT_STRATEGY_REPLACE
            - IMPORT_STRATEGY_KEEP
            - IMPORT_STRATEGY_MERGE
            - IMPORT_STRATEGY_THROW_ERROR
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1FlowValidationResult:
      description: The response message for Flows.GetFlowValidationResult.
      properties:
        name:
          description: "The unique identifier of the flow validation result. Format: `projects//locations//agents//flows//validationResult`."
          type: string
        updateTime:
          description: Last time the flow was validated.
          format: google-datetime
          type: string
        validationMessages:
          description: Contains all validation messages.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ValidationMessage"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1Form:
      description: A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
      properties:
        parameters:
          description: Parameters to collect from the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FormParameter"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1FormParameter:
      description: Represents a form parameter.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
        defaultValue:
          description: The default value of an optional parameter. If the parameter is required, the default value will be ignored.
        displayName:
          description: Required. The human-readable name of the parameter, unique within the form.
          type: string
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        fillBehavior:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior"
          description: Required. Defines fill behavior for the parameter.
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
        required:
          description: Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior:
      description: Configuration for how the filling of a parameter should be handled.
      properties:
        initialPromptFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
        repromptEventHandlers:
          description: "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillIntentRequest:
      description: Request of FulfillIntent
      properties:
        match:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Match"
          description: The matched intent/event to fulfill.
        matchIntentRequest:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1MatchIntentRequest"
          description: Must be same as the corresponding MatchIntent request, otherwise the behavior is undefined.
        outputAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
          description: Instructs the speech synthesizer how to generate output audio.
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillIntentResponse:
      description: Response of FulfillIntent
      properties:
        outputAudio:
          description: "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.response_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
          format: byte
          type: string
        outputAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1OutputAudioConfig"
          description: The config used by the speech synthesizer to generate the output audio.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryResult"
          description: The result of the conversational query.
        responseId:
          description: Output only. The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Fulfillment:
      description: "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both."
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
        conditionalCases:
          description: Conditional cases for this fulfillment.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          type: array
        enableGenerativeFallback:
          description: If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
          type: boolean
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
        returnPartialResponses:
          description: "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
          type: boolean
        setParameterActions:
          description: Set parameter values before executing the webhook.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
          type: array
        tag:
          description: The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
          type: string
        webhook:
          description: "The webhook to call. Format: `projects//locations//agents//webhooks/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases:
      description: A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
      properties:
        cases:
          description: A list of cascading if-else conditions.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase:
      description: Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
      properties:
        caseContent:
          description: A list of case content.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
          type: array
        condition:
          description: The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent:
      description: The list of messages or conditional cases to activate for this case.
      properties:
        additionalCases:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          description: Additional cases to be evaluated.
        message:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          description: Returned message.
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction:
      description: Setting a parameter value.
      properties:
        parameter:
          description: Display name of the parameter.
          type: string
        value:
          description: The new value of the parameter. A null value clears the parameter.
      type: object
    GoogleCloudDialogflowCxV3beta1GcsDestination:
      description: Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
      properties:
        uri:
          description: "Required. The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1GenerativeSettings:
      description: Settings for Generative AI.
      properties:
        fallbackSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenerativeSettingsFallbackSettings"
          description: Settings for Generative Fallback.
        generativeSafetySettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SafetySettings"
          description: Settings for Generative Safety.
        knowledgeConnectorSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings"
          description: Settings for knowledge connector.
        languageCode:
          description: Language for this settings.
          type: string
        name:
          description: "Format: `projects//locations//agents//generativeSettings`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1GenerativeSettingsFallbackSettings:
      description: Settings for Generative Fallback.
      properties:
        promptTemplates:
          description: Stored prompts that can be selected, for example default templates like "conservative" or "chatty", or user defined ones.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenerativeSettingsFallbackSettingsPromptTemplate"
          type: array
        selectedPrompt:
          description: Display name of the selected prompt.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1GenerativeSettingsFallbackSettingsPromptTemplate:
      description: Prompt template.
      properties:
        displayName:
          description: Prompt name.
          type: string
        frozen:
          description: If the flag is true, the prompt is frozen and cannot be modified by users.
          type: boolean
        promptText:
          description: 'Prompt text that is sent to a LLM on no-match default, placeholders are filled downstream. For example: "Here is a conversation $conversation, a response is: "'
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1GenerativeSettingsKnowledgeConnectorSettings:
      description: Settings for knowledge connector. These parameters are used for LLM prompt like "You are . You are a helpful and verbose at , . Your task is to help humans on ".
      properties:
        agent:
          description: Name of the virtual agent. Used for LLM prompt. Can be left empty.
          type: string
        agentIdentity:
          description: Identity of the agent, e.g. "virtual agent", "AI assistant".
          type: string
        agentScope:
          description: Agent scope, e.g. "Example company website", "internal Example company website for employees", "manual of car owner".
          type: string
        business:
          description: Name of the company, organization or other entity that the agent represents. Used for knowledge connector LLM prompt and for knowledge search.
          type: string
        businessDescription:
          description: Company description, used for LLM prompt, e.g. "a family company selling freshly roasted coffee beans".
          type: string
        disableDataStoreFallback:
          description: Whether to disable fallback to Data Store search results (in case the LLM couldn't pick a proper answer). Per default the feature is enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1Generator:
      description: Generators contain prompt to be sent to the LLM model to generate text. The prompt can contain parameters which will be resolved before calling the model. It can optionally contain banned phrases to ensure the model responses are safe.
      properties:
        displayName:
          description: Required. The human-readable name of the generator, unique within the agent. The prompt contains pre-defined parameters such as $conversation, $last-user-utterance, etc. populated by Dialogflow. It can also contain custom placeholders which will be resolved during fulfillment.
          type: string
        name:
          description: "The unique identifier of the generator. Must be set for the Generators.UpdateGenerator method. Generators.CreateGenerate populates the name automatically. Format: `projects//locations//agents//generators/`."
          type: string
        placeholders:
          description: Optional. List of custom placeholders in the prompt text.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder"
          type: array
        promptText:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Phrase"
          description: Required. Prompt for the LLM model.
      type: object
    GoogleCloudDialogflowCxV3beta1GeneratorPlaceholder:
      description: Represents a custom placeholder in the prompt text.
      properties:
        id:
          description: Unique ID used to map custom placeholder to parameters in fulfillment.
          type: string
        name:
          description: Custom placeholder value in the prompt text.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata:
      description: Metadata for ImportDocuments operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ImportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesRequest:
      description: The request message for EntityTypes.ImportEntityTypes.
      properties:
        entityTypesContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineSource"
          description: Uncompressed byte content of entity types.
        entityTypesUri:
          description: The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import entity types from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        mergeOption:
          description: Required. Merge option for importing entity types.
          enum:
            - MERGE_OPTION_UNSPECIFIED
            - REPLACE
            - MERGE
            - RENAME
            - REPORT_CONFLICT
            - KEEP
          type: string
        targetEntityType:
          description: "Optional. The target entity type to import into. Format: `projects//locations//agents//entity_types/`. If set, there should be only one entity type included in entity_types, of which the type should match the type of the target entity type. All entities in the imported entity type will be added to the target entity type."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse:
      description: The response message for EntityTypes.ImportEntityTypes.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportEntityTypesRequest.
        entityTypes:
          description: "The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        entityTypeDisplayNames:
          description: Display names of conflicting entity types.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportFlowRequest:
      description: The request message for Flows.ImportFlow.
      properties:
        flowContent:
          description: Uncompressed raw byte content for flow.
          format: byte
          type: string
        flowImportStrategy:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FlowImportStrategy"
          description: Optional. Specifies the import strategy used when resolving resource conflicts.
        flowUri:
          description: The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import flow from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        importOption:
          description: Flow import mode. If not specified, `KEEP` is assumed.
          enum:
            - IMPORT_OPTION_UNSPECIFIED
            - KEEP
            - FALLBACK
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportFlowResponse:
      description: The response message for Flows.ImportFlow.
      properties:
        flow:
          description: "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsMetadata:
      description: Metadata returned for the Intents.ImportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsRequest:
      description: The request message for Intents.ImportIntents.
      properties:
        intentsContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineSource"
          description: Uncompressed byte content of intents.
        intentsUri:
          description: The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import intents from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        mergeOption:
          description: Merge option for importing intents. If not specified, `REJECT` is assumed.
          enum:
            - MERGE_OPTION_UNSPECIFIED
            - REJECT
            - REPLACE
            - MERGE
            - RENAME
            - REPORT_CONFLICT
            - KEEP
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - false
            - false
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsResponse:
      description: The response message for Intents.ImportIntents.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportIntentsRequest.
        intents:
          description: "The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        intentDisplayNames:
          description: Display names of conflicting intents.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata:
      description: Metadata returned for the TestCases.ImportTestCases long running operation.
      properties:
        errors:
          description: Errors for failed test cases.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportTestCasesRequest:
      description: The request message for TestCases.ImportTestCases.
      properties:
        content:
          description: Uncompressed raw byte content for test cases.
          format: byte
          type: string
        gcsUri:
          description: The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to import test cases from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse:
      description: The response message for TestCases.ImportTestCases.
      properties:
        names:
          description: "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1InlineDestination:
      description: Inline destination for a Dialogflow operation that writes or exports objects (e.g. intents) outside of Dialogflow.
      properties:
        content:
          description: Output only. The uncompressed byte content for the objects. Only populated in responses.
          format: byte
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1InlineSource:
      description: Inline source for a Dialogflow operation that reads or imports objects (e.g. intents) into Dialogflow.
      properties:
        content:
          description: The uncompressed byte content for the objects.
          format: byte
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1InputAudioConfig:
      description: Instructs the speech recognizer on how to process the audio content.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
          type: string
        bargeInConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BargeInConfig"
          description: Configuration of barge-in behavior during the streaming of input audio.
        enableWordInfo:
          description: Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
          type: boolean
        model:
          description: Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: string
        modelVariant:
          description: Optional. Which variant of the Speech model to use.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
          type: string
        optOutConformerModelMigration:
          description: If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow CX Speech model migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
          type: boolean
        phraseHints:
          description: Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
          items:
            type: string
          type: array
        sampleRateHertz:
          description: Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
          format: int32
          type: integer
        singleUtterance:
          description: "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1Intent:
      description: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: Required. The human-readable name of the intent, unique within the agent.
          type: string
        isFallback:
          description: Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys-contextual\" means the intent is a contextual intent."
          type: object
        name:
          description: "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          description: The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentParameter"
          type: array
        priority:
          description: The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        trainingPhrases:
          description: The collection of training phrases the agent is trained on to identify the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1IntentCoverage:
      description: Intent coverage represents the percentage of all possible intents in the agent that are triggered in any of a parent's test cases.
      properties:
        coverageScore:
          description: The percent of intents in the agent that are covered.
          format: float
          type: number
        intents:
          description: The list of Intents present in the agent
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentCoverageIntent"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1IntentCoverageIntent:
      description: The agent's intent.
      properties:
        covered:
          description: Whether the intent is covered by at least one of the agent's test cases.
          type: boolean
        intent:
          description: The intent full resource name
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1IntentInput:
      description: Represents the intent to trigger programmatically rather than as a result of natural language processing.
      properties:
        intent:
          description: "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1IntentParameter:
      description: Represents an intent parameter.
      properties:
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        id:
          description: Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase:
      description: Represents an example that the agent is trained on to identify the intent.
      properties:
        id:
          description: Output only. The unique identifier of the training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
          type: array
        repeatCount:
          description: Indicates how many times this example was added to the intent.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        parameterId:
          description: The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings:
      description: The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
      properties:
        dataStoreConnections:
          description: Optional. List of related data store connections.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DataStoreConnection"
          type: array
        enabled:
          description: Whether Knowledge Connector is enabled or not.
          type: boolean
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
      type: object
    GoogleCloudDialogflowCxV3beta1ListAgentsResponse:
      description: The response message for Agents.ListAgents.
      properties:
        agents:
          description: The list of agents. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Agent"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListChangelogsResponse:
      description: The response message for Changelogs.ListChangelogs.
      properties:
        changelogs:
          description: The list of changelogs. There will be a maximum number of items returned based on the page_size field in the request. The changelogs will be ordered by timestamp.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Changelog"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListContinuousTestResultsResponse:
      description: The response message for Environments.ListTestCaseResults.
      properties:
        continuousTestResults:
          description: The list of continuous test results.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ContinuousTestResult"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListDeploymentsResponse:
      description: The response message for Deployments.ListDeployments.
      properties:
        deployments:
          description: The list of deployments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Deployment"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListEntityTypesResponse:
      description: The response message for EntityTypes.ListEntityTypes.
      properties:
        entityTypes:
          description: The list of entity types. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EntityType"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListEnvironmentsResponse:
      description: The response message for Environments.ListEnvironments.
      properties:
        environments:
          description: The list of environments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Environment"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListExperimentsResponse:
      description: The response message for Experiments.ListExperiments.
      properties:
        experiments:
          description: The list of experiments. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Experiment"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListFlowsResponse:
      description: The response message for Flows.ListFlows.
      properties:
        flows:
          description: The list of flows. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Flow"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListGeneratorsResponse:
      description: The response message for Generators.ListGenerators.
      properties:
        generators:
          description: The list of generators. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Generator"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListIntentsResponse:
      description: The response message for Intents.ListIntents.
      properties:
        intents:
          description: The list of intents. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ListPagesResponse:
      description: The response message for Pages.ListPages.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        pages:
          description: The list of pages. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListSecuritySettingsResponse:
      description: The response message for SecuritySettings.ListSecuritySettings.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        securitySettings:
          description: The list of security settings.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettings"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListSessionEntityTypesResponse:
      description: The response message for SessionEntityTypes.ListSessionEntityTypes.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        sessionEntityTypes:
          description: The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionEntityType"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListTestCaseResultsResponse:
      description: The response message for TestCases.ListTestCaseResults.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        testCaseResults:
          description: The list of test case results.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListTestCasesResponse:
      description: The response message for TestCases.ListTestCases.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        testCases:
          description: The list of test cases. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListTransitionRouteGroupsResponse:
      description: The response message for TransitionRouteGroups.ListTransitionRouteGroups.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        transitionRouteGroups:
          description: The list of transition route groups. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListVersionsResponse:
      description: The response message for Versions.ListVersions.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        versions:
          description: A list of versions. There will be a maximum number of items returned based on the page_size field in the request. The list may in some cases be empty or contain fewer entries than page_size even if this isn't the last page.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Version"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ListWebhooksResponse:
      description: The response message for Webhooks.ListWebhooks.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        webhooks:
          description: The list of webhooks. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Webhook"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1LoadVersionRequest:
      description: The request message for Versions.LoadVersion.
      properties:
        allowOverrideAgentResources:
          description: This field is used to prevent accidental overwrite of other agent resources, which can potentially impact other flow's behavior. If `allow_override_agent_resources` is false, conflicted agent-level resources will not be overridden (i.e. intents, entities, webhooks).
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1LookupEnvironmentHistoryResponse:
      description: The response message for Environments.LookupEnvironmentHistory.
      properties:
        environments:
          description: Represents a list of snapshots for an environment. Time of the snapshots is stored in `update_time`.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Environment"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Match:
      description: Represents one match result of MatchIntent.
      properties:
        confidence:
          description: The confidence of this match. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation.
          format: float
          type: number
        event:
          description: The event that matched the query. Filled for `EVENT`, `NO_MATCH` and `NO_INPUT` match types.
          type: string
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
          description: "The Intent that matched the query. Some, not all fields are filled in this message, including but not limited to: `name` and `display_name`. Only filled for `INTENT` match type."
        matchType:
          description: Type of this Match.
          enum:
            - MATCH_TYPE_UNSPECIFIED
            - INTENT
            - DIRECT_INTENT
            - PARAMETER_FILLING
            - NO_MATCH
            - NO_INPUT
            - EVENT
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of parameters extracted from the query. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        resolvedInput:
          description: Final text input which was matched during MatchIntent. This value can be different from original input sent in request because of spelling correction or other processing.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1MatchIntentRequest:
      description: Request of MatchIntent.
      properties:
        persistParameterChanges:
          description: Persist session parameter changes from `query_params`.
          type: boolean
        queryInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryInput"
          description: Required. The input specification.
        queryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryParameters"
          description: The parameters of this query.
      type: object
    GoogleCloudDialogflowCxV3beta1MatchIntentResponse:
      description: Response of MatchIntent.
      properties:
        currentPage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          description: The current Page. Some, not all fields are filled in this message, including but not limited to `name` and `display_name`.
        matches:
          description: Match results, if more than one, ordered descendingly by the confidence we have that the particular intent matches the query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Match"
          type: array
        text:
          description: If natural language text was provided as input, this field will contain a copy of the text.
          type: string
        transcript:
          description: If natural language speech audio was provided as input, this field will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: If an event was provided as input, this field will contain a copy of the event name.
          type: string
        triggerIntent:
          description: "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1NluSettings:
      description: Settings related to NLU.
      properties:
        classificationThreshold:
          description: To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a no-match event will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
          format: float
          type: number
        modelTrainingMode:
          description: Indicates NLU model training mode.
          enum:
            - MODEL_TRAINING_MODE_UNSPECIFIED
            - MODEL_TRAINING_MODE_AUTOMATIC
            - MODEL_TRAINING_MODE_MANUAL
          type: string
        modelType:
          description: Indicates the type of NLU model.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - MODEL_TYPE_STANDARD
            - MODEL_TYPE_ADVANCED
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1OutputAudioConfig:
      description: Instructs the speech synthesizer how to generate the output audio content.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the synthesized audio content.
          enum:
            - OUTPUT_AUDIO_ENCODING_UNSPECIFIED
            - OUTPUT_AUDIO_ENCODING_LINEAR_16
            - OUTPUT_AUDIO_ENCODING_MP3
            - OUTPUT_AUDIO_ENCODING_MP3_64_KBPS
            - OUTPUT_AUDIO_ENCODING_OGG_OPUS
            - OUTPUT_AUDIO_ENCODING_MULAW
          type: string
        sampleRateHertz:
          description: Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
          format: int32
          type: integer
        synthesizeSpeechConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig"
          description: Optional. Configuration of how speech should be synthesized. If not specified, Agent.text_to_speech_settings is applied.
      type: object
    GoogleCloudDialogflowCxV3beta1Page:
      description: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
        description:
          description: The description of the page. The maximum length is 500 characters.
          type: string
        displayName:
          description: Required. The human-readable name of the page, unique within the flow.
          type: string
        entryFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to call when the session is entering the page.
        eventHandlers:
          description: Handlers associated with the page to handle events such as webhook errors, no match or no input.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler"
          type: array
        form:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Form"
          description: The form associated with the page, used for collecting parameters relevant to the page.
        knowledgeConnectorSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings"
          description: Optional. Knowledge connector configuration.
        name:
          description: "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
          type: string
        transitionRouteGroups:
          description: "Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups."
          items:
            type: string
          type: array
        transitionRoutes:
          description: "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1PageInfo:
      description: Represents page information communicated to and from the webhook.
      properties:
        currentPage:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
          type: string
        displayName:
          description: Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.
          type: string
        formInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfoFormInfo"
          description: Optional for both WebhookRequest and WebhookResponse. Information about the form.
      type: object
    GoogleCloudDialogflowCxV3beta1PageInfoFormInfo:
      description: Represents form information.
      properties:
        parameterInfo:
          description: Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo:
      description: Represents parameter information.
      properties:
        displayName:
          description: Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.
          type: string
        justCollected:
          description: Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.
          type: boolean
        required:
          description: Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
        state:
          description: Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.
          enum:
            - PARAMETER_STATE_UNSPECIFIED
            - EMPTY
            - INVALID
            - FILLED
          type: string
        value:
          description: Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value.
      type: object
    GoogleCloudDialogflowCxV3beta1Phrase:
      description: Text input which can be used for prompt or banned phrases.
      properties:
        text:
          description: Required. Text input which can be used for prompt or banned phrases.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1QueryInput:
      description: "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed by the client."
      properties:
        audio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AudioInput"
          description: The natural language speech audio to be processed.
        dtmf:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DtmfInput"
          description: The DTMF event to be handled.
        event:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventInput"
          description: The event to be triggered.
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentInput"
          description: The intent to be triggered.
        languageCode:
          description: Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
          type: string
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TextInput"
          description: The natural language text to be processed.
      type: object
    GoogleCloudDialogflowCxV3beta1QueryParameters:
      description: Represents the parameters of a conversational query.
      properties:
        analyzeQueryTextSentiment:
          description: Configures whether sentiment analysis should be performed. If not provided, sentiment analysis is not performed.
          type: boolean
        channel:
          description: The channel which this query is for. If specified, only the ResponseMessage associated with the channel will be returned. If no ResponseMessage is associated with the channel, it falls back to the ResponseMessage with unspecified channel. If unspecified, the ResponseMessage with unspecified channel will be returned.
          type: string
        currentPage:
          description: "The unique identifier of the page to override the current page in the session. Format: `projects//locations//agents//flows//pages/`. If `current_page` is specified, the previous state of the session will be ignored by Dialogflow, including the previous page and the previous session parameters. In most cases, current_page and parameters should be configured together to direct a session to a specific state."
          type: string
        disableWebhook:
          description: Whether to disable webhook calls for this request.
          type: boolean
        endUserMetadata:
          additionalProperties:
            description: Properties of the object.
          description: 'Optional. Information about the end-user to improve the relevance and accuracy of generative answers. This will be interpreted and used by a language model, so, for good results, the data should be self-descriptive, and in a simple structure. Example: ```json { "subscription plan": "Business Premium Plus", "devices owned": [ {"model": "Google Pixel 7"}, {"model": "Google Pixel Tablet"} ] } ```'
          type: object
        flowVersions:
          description: "A list of flow versions to override for the request. Format: `projects//locations//agents//flows//versions/`. If version 1 of flow X is included in this list, the traffic of flow X will go through version 1 regardless of the version configuration in the environment. Each flow can have at most one version specified in this list."
          items:
            type: string
          type: array
        geoLocation:
          $ref: "#/components/schemas/GoogleTypeLatLng"
          description: The geo location of this conversational query.
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "Additional parameters to be put into session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. You can reference the session parameters in the agent with the following format: $session.params.parameter-id. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        payload:
          additionalProperties:
            description: Properties of the object.
          description: 'This field can be used to pass custom data into the webhook associated with the agent. Arbitrary JSON objects are supported. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: ``` { "telephony": { "caller_id": "+18558363987" } } ```'
          type: object
        searchConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SearchConfig"
          description: Optional. Search configuration for UCS search queries.
        sessionEntityTypes:
          description: Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionEntityType"
          type: array
        sessionTtl:
          description: Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow session remains active and its data is stored for 30 minutes after the last request is sent for the session. This value should be no longer than 1 day.
          format: google-duration
          type: string
        timeZone:
          description: The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in the agent is used.
          type: string
        webhookHeaders:
          additionalProperties:
            type: string
          description: "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc."
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1QueryResult:
      description: Represents the result of a conversational query.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Returns the current advanced settings including IVR settings. Even though the operations configured by these settings are performed by Dialogflow, the client may need to perform special logic at the moment. For example, if Dialogflow exports audio to Google Cloud Storage, then the client may need to wait for the resulting object to appear in the bucket before proceeding.
        allowAnswerFeedback:
          description: Indicates whether the Thumbs up/Thumbs down rating controls are need to be shown for the response in the Dialogflow Messenger widget.
          type: boolean
        currentPage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          description: The current Page. Some, not all fields are filled in this message, including but not limited to `name` and `display_name`.
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: 'The free-form diagnostic info. For example, this field could contain webhook call latency. The fields of this data can change without notice, so you should not write code that depends on its structure. One of the fields is called "Alternative Matched Intents", which may aid with debugging. The following describes these intent results: - The list is empty if no intent was matched to end-user input. - Only intents that are referenced in the currently active flow are included. - The matched intent is included. - Other intents that could have matched end-user input, but did not match because they are referenced by intent routes that are out of [scope](https://cloud.google.com/dialogflow/cx/docs/concept/handler#scope), are included. - Other intents referenced by intent routes in scope that matched end-user input, but had a lower confidence score.'
          type: object
        dtmf:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DtmfInput"
          description: If a DTMF was provided as input, this field will contain a copy of the DtmfInput.
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
          deprecated: true
          description: "The Intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name` and `display_name`. This field is deprecated, please use QueryResult.match instead."
        intentDetectionConfidence:
          deprecated: true
          description: The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. This field is deprecated, please use QueryResult.match instead.
          format: float
          type: number
        languageCode:
          description: The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes.
          type: string
        match:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Match"
          description: Intent match result, could be an intent or an event.
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collected session parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        responseMessages:
          description: The list of rich messages returned to the client. Responses vary from simple text messages to more sophisticated, structured payloads used to drive complex logic.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SentimentAnalysisResult"
          description: The sentiment analyss result, which depends on `analyze_query_text_sentiment`, specified in the request.
        text:
          description: If natural language text was provided as input, this field will contain a copy of the text.
          type: string
        transcript:
          description: If natural language speech audio was provided as input, this field will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: If an event was provided as input, this field will contain the name of the event.
          type: string
        triggerIntent:
          description: "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
          type: string
        webhookDisplayNames:
          description: The list of webhook display names in the order of call sequence.
          items:
            type: string
          type: array
        webhookIds:
          description: The list of webhook ids in the order of call sequence.
          items:
            type: string
          type: array
        webhookLatencies:
          description: The list of webhook latencies in the order of call sequence.
          items:
            format: google-duration
            type: string
          type: array
        webhookPayloads:
          description: The list of webhook payload in WebhookResponse.payload, in the order of call sequence. If some webhook call fails or doesn't return any payload, an empty `Struct` would be used instead.
          items:
            additionalProperties:
              description: Properties of the object.
            type: object
          type: array
        webhookStatuses:
          description: The list of webhook call status in the order of call sequence.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
        webhookTags:
          description: The list of webhook tags in the order of call sequence.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata:
      description: Metadata for ReloadDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1ResourceName:
      description: Resource name and display name.
      properties:
        displayName:
          description: Display name.
          type: string
        name:
          description: Name.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessage:
      description: "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard."
      properties:
        channel:
          description: The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
          type: string
        conversationSuccess:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
          description: Indicates that the conversation succeeded.
        endInteraction:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
          description: Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
          readOnly: true
        knowledgeInfoCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard"
          description: Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        liveAgentHandoff:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff"
          description: Hands off conversation to a human agent.
        mixedAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio"
          description: Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
          readOnly: true
        outputAudioText:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
          description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Returns a response containing a custom, platform-specific payload.
          type: object
        playAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio"
          description: Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        telephonyTransferCall:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall"
          description: A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          description: Returns a text response.
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess:
      description: "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction:
      description: Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard:
      description: Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff:
      description: "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio:
      description: Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties:
        segments:
          description: Segments this audio response is composed of.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment:
      description: Represents one segment of audio.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
          readOnly: true
          type: boolean
        audio:
          description: Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
          format: byte
          type: string
        uri:
          description: Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText:
      description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        ssml:
          description: The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio:
      description: Specifies an audio clip to be played by the client as part of the response.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        audioUri:
          description: Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall:
      description: Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
      properties:
        phoneNumber:
          description: Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageText:
      description: The text response message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        text:
          description: Required. A collection of text responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1RestoreAgentRequest:
      description: The request message for Agents.RestoreAgent.
      properties:
        agentContent:
          description: Uncompressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to restore agent from. The format of this URI must be `gs:///`. Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
        gitSource:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RestoreAgentRequestGitSource"
          description: Setting for restoring from a git branch
        restoreOption:
          description: Agent restore mode. If not specified, `KEEP` is assumed.
          enum:
            - RESTORE_OPTION_UNSPECIFIED
            - KEEP
            - FALLBACK
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1RestoreAgentRequestGitSource:
      description: Settings for restoring from a git branch
      properties:
        trackingBranch:
          description: tracking branch for the git pull
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1RolloutConfig:
      description: The configuration for auto rollout.
      properties:
        failureCondition:
          description: The conditions that are used to evaluate the failure of a rollout step. If not specified, no rollout steps will fail. E.g. "containment_rate < 10% OR average_turn_count < 3". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        rolloutCondition:
          description: The conditions that are used to evaluate the success of a rollout step. If not specified, all rollout steps will proceed to the next one unless failure conditions are met. E.g. "containment_rate > 60% AND callback_rate < 20%". See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
        rolloutSteps:
          description: Steps to roll out a flow version. Steps should be sorted by percentage in ascending order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1RolloutConfigRolloutStep"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1RolloutConfigRolloutStep:
      description: A single rollout step with specified traffic allocation.
      properties:
        displayName:
          description: The name of the rollout step;
          type: string
        minDuration:
          description: The minimum time that this step should last. Should be longer than 1 hour. If not set, the default minimum duration for each step will be 1 hour.
          format: google-duration
          type: string
        trafficPercent:
          description: The percentage of traffic allocated to the flow version of this rollout step. (0%, 100%].
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1RolloutState:
      description: State of the auto-rollout process.
      properties:
        startTime:
          description: Start time of the current step.
          format: google-datetime
          type: string
        step:
          description: Display name of the current auto rollout step.
          type: string
        stepIndex:
          description: Index of the current step in the auto rollout steps list.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata:
      description: Metadata returned for the Environments.RunContinuousTest long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1RunContinuousTestRequest:
      description: The request message for Environments.RunContinuousTest.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse:
      description: The response message for Environments.RunContinuousTest.
      properties:
        continuousTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ContinuousTestResult"
          description: The result for a continuous test run.
      type: object
    GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata:
      description: Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1RunTestCaseRequest:
      description: The request message for TestCases.RunTestCase.
      properties:
        environment:
          description: "Optional. Environment name. If not set, draft environment is assumed. Format: `projects//locations//agents//environments/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1RunTestCaseResponse:
      description: The response message for TestCases.RunTestCase.
      properties:
        result:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          description: The result.
      type: object
    GoogleCloudDialogflowCxV3beta1SafetySettings:
      description: Settings for Generative Safety.
      properties:
        bannedPhrases:
          description: Banned phrases for generated text.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SafetySettingsPhrase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1SafetySettingsPhrase:
      description: Text input which can be used for prompt or banned phrases.
      properties:
        languageCode:
          description: Required. Language code of the phrase.
          type: string
        text:
          description: Required. Text input which can be used for prompt or banned phrases.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1SearchConfig:
      description: Search configuration for UCS search queries.
      properties:
        boostSpecs:
          description: Optional. Boosting configuration for the datastores.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BoostSpecs"
          type: array
        filterSpecs:
          description: Optional. Filter configuration for the datastores.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FilterSpecs"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1SecuritySettings:
      description: Represents the settings related to security issues, such as data redaction and data retention. It may take hours for updates on the settings to propagate to all the related components and take effect.
      properties:
        audioExportSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings"
          description: Controls audio export settings for post-conversation analytics when ingesting audio to conversations via Participants.AnalyzeContent or Participants.StreamingAnalyzeContent. If retention_strategy is set to REMOVE_AFTER_CONVERSATION or audio_export_settings.gcs_bucket is empty, audio export is disabled. If audio export is enabled, audio is recorded and saved to audio_export_settings.gcs_bucket, subject to retention policy of audio_export_settings.gcs_bucket. This setting won't effect audio input for implicit sessions via Sessions.DetectIntent or Sessions.StreamingDetectIntent.
        deidentifyTemplate:
          description: "[DLP](https://cloud.google.com/dlp/docs) deidentify template name. Use this template to define de-identification configuration for the content. The `DLP De-identify Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, Dialogflow replaces sensitive info with `[redacted]` text. The template name will have one of the following formats: `projects//locations//deidentifyTemplates/` OR `organizations//locations//deidentifyTemplates/` Note: `deidentify_template` must be located in the same region as the `SecuritySettings`."
          type: string
        displayName:
          description: Required. The human-readable name of the security settings, unique within the location.
          type: string
        insightsExportSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings"
          description: Controls conversation exporting settings to Insights after conversation is completed. If retention_strategy is set to REMOVE_AFTER_CONVERSATION, Insights export is disabled no matter what you configure here.
        inspectTemplate:
          description: "[DLP](https://cloud.google.com/dlp/docs) inspect template name. Use this template to define inspect base settings. The `DLP Inspect Templates Reader` role is needed on the Dialogflow service identity service account (has the form `service-PROJECT_NUMBER@gcp-sa-dialogflow.iam.gserviceaccount.com`) for your agent's project. If empty, we use the default DLP inspect config. The template name will have one of the following formats: `projects//locations//inspectTemplates/` OR `organizations//locations//inspectTemplates/` Note: `inspect_template` must be located in the same region as the `SecuritySettings`."
          type: string
        name:
          description: "Resource name of the settings. Required for the SecuritySettingsService.UpdateSecuritySettings method. SecuritySettingsService.CreateSecuritySettings populates the name automatically. Format: `projects//locations//securitySettings/`."
          type: string
        purgeDataTypes:
          description: List of types of data to remove when retention settings triggers purge.
          items:
            enum:
              - PURGE_DATA_TYPE_UNSPECIFIED
              - DIALOGFLOW_HISTORY
            type: string
          type: array
        redactionScope:
          description: Defines the data for which Dialogflow applies redaction. Dialogflow does not redact data that it does not have access to – for example, Cloud logging.
          enum:
            - REDACTION_SCOPE_UNSPECIFIED
            - REDACT_DISK_STORAGE
          type: string
        redactionStrategy:
          description: Strategy that defines how we do redaction.
          enum:
            - REDACTION_STRATEGY_UNSPECIFIED
            - REDACT_WITH_SERVICE
          type: string
        retentionStrategy:
          description: Specifies the retention behavior defined by SecuritySettings.RetentionStrategy.
          enum:
            - RETENTION_STRATEGY_UNSPECIFIED
            - REMOVE_AFTER_CONVERSATION
          type: string
        retentionWindowDays:
          description: Retains data in interaction logging for the specified number of days. This does not apply to Cloud logging, which is owned by the user - not Dialogflow. User must set a value lower than Dialogflow's default 365d TTL (30 days for Agent Assist traffic), higher value will be ignored and use default. Setting a value higher than that has no effect. A missing value or setting to 0 also means we use default TTL.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1SecuritySettingsAudioExportSettings:
      description: Settings for exporting audio.
      properties:
        audioExportPattern:
          description: Filename pattern for exported audio.
          type: string
        audioFormat:
          description: File format for exported audio file. Currently only in telephony recordings.
          enum:
            - AUDIO_FORMAT_UNSPECIFIED
            - MULAW
            - MP3
            - OGG
          type: string
        enableAudioRedaction:
          description: Enable audio redaction if it is true.
          type: boolean
        gcsBucket:
          description: Cloud Storage bucket to export audio record to. Setting this field would grant the Storage Object Creator role to the Dialogflow Service Agent. API caller that tries to modify this field should have the permission of storage.buckets.setIamPolicy.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1SecuritySettingsInsightsExportSettings:
      description: Settings for exporting conversations to [Insights](https://cloud.google.com/contact-center/insights/docs).
      properties:
        enableInsightsExport:
          description: If enabled, we will automatically exports conversations to Insights and Insights runs its analyzers.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1SentimentAnalysisResult:
      description: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral.
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowCxV3beta1SessionEntityType:
      description: 'Session entity types are referred to as **User** entity types and are entities that are built for an individual user such as favorites, preferences, playlists, and so on. You can redefine a session entity type at the session level to extend or replace a custom entity type at the user session level (we refer to the entity types defined at the agent level as "custom entity types"). Note: session entity types apply to all queries, regardless of the language. For more information about entity types, see the [Dialogflow documentation](https://cloud.google.com/dialogflow/docs/entities-overview).'
      properties:
        entities:
          description: Required. The collection of entities to override or supplement the custom entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EntityTypeEntity"
          type: array
        entityOverrideMode:
          description: Required. Indicates whether the additional data should override or supplement the custom entity type definition.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
          type: string
        name:
          description: "Required. The unique identifier of the session entity type. Format: `projects//locations//agents//sessions//entityTypes/` or `projects//locations//agents//environments//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1SessionInfo:
      description: Represents session information communicated to and from the webhook.
      properties:
        parameters:
          additionalProperties: {}
          description: Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
          type: object
        session:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1SpeechToTextSettings:
      description: Settings related to speech recognition.
      properties:
        enableSpeechAdaptation:
          description: Whether to use speech adaptation for speech recognition.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1StartExperimentRequest:
      description: The request message for Experiments.StartExperiment.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1StopExperimentRequest:
      description: The request message for Experiments.StopExperiment.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1SubmitAnswerFeedbackRequest:
      description: The request to set the feedback for a bot answer.
      properties:
        answerFeedback:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AnswerFeedback"
          description: Required. Feedback provided for a bot answer.
        responseId:
          description: Required. ID of the response to update its feedback. This is the same as DetectIntentResponse.response_id.
          type: string
        updateMask:
          description: Optional. The mask to control which fields to update. If the mask is not present, all fields will be updated.
          format: google-fieldmask
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig:
      description: Configuration of how speech should be synthesized.
      properties:
        effectsProfileId:
          description: Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
          items:
            type: string
          type: array
        pitch:
          description: Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
          format: double
          type: number
        speakingRate:
          description: Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
          format: double
          type: number
        voice:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1VoiceSelectionParams"
          description: Optional. The desired voice of the synthesized audio.
        volumeGainDb:
          description: Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
          format: double
          type: number
      type: object
    GoogleCloudDialogflowCxV3beta1TestCase:
      description: Represents a test case.
      properties:
        creationTime:
          description: Output only. When the test was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
          type: string
        lastTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          description: The latest test result.
        name:
          description: "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
          type: string
        notes:
          description: Additional freeform notes about the test case. Limit of 400 characters.
          type: string
        tags:
          description: Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
          items:
            type: string
          type: array
        testCaseConversationTurns:
          description: The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurn"
          type: array
        testConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestConfig"
          description: Config for the test case.
      type: object
    GoogleCloudDialogflowCxV3beta1TestCaseError:
      description: Error info for importing a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test case.
        testCase:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCase"
          description: The test case.
      type: object
    GoogleCloudDialogflowCxV3beta1TestCaseResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        conversationTurns:
          description: The conversation turns uttered during the test case replay in chronological order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurn"
          type: array
        environment:
          description: Environment where the test was run. If not set, it indicates the draft environment.
          type: string
        name:
          description: "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
          type: string
        testResult:
          description: Whether the test case passed in the agent environment.
          enum:
            - TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        testTime:
          description: The time that the test was run.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TestConfig:
      description: Represents configurations for a test case.
      properties:
        flow:
          description: "Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        page:
          description: "The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        trackingParameters:
          description: Session parameters to be compared when calculating differences.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1TestError:
      description: Error info for running a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test.
        testCase:
          description: The test case resource name.
          type: string
        testTime:
          description: The timestamp when the test was completed.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TestRunDifference:
      description: The description of differences between original and replayed agent output.
      properties:
        description:
          description: A human readable description of the diff, showing the actual output vs expected output.
          type: string
        type:
          description: The type of diff.
          enum:
            - DIFF_TYPE_UNSPECIFIED
            - INTENT
            - PAGE
            - PARAMETERS
            - UTTERANCE
            - FLOW
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TextInput:
      description: Represents the natural language text to be processed.
      properties:
        text:
          description: Required. The UTF-8 encoded natural language text to be processed.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TextToSpeechSettings:
      description: Settings related to speech synthesizing.
      properties:
        synthesizeSpeechConfigs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SynthesizeSpeechConfig"
          description: "Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/cx/docs/reference/language) to SynthesizeSpeechConfig. These settings affect: - The [phone gateway](https://cloud.google.com/dialogflow/cx/docs/concept/integration/phone-gateway) synthesize configuration set via Agent.text_to_speech_settings. - How speech is synthesized when invoking session APIs. Agent.text_to_speech_settings only applies if OutputAudioConfig.synthesize_speech_config is not specified."
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1TrainFlowRequest:
      description: The request message for Flows.TrainFlow.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionCoverage:
      description: Transition coverage represents the percentage of all possible page transitions (page-level transition routes and event handlers, excluding transition route groups) present within any of a parent's test cases.
      properties:
        coverageScore:
          description: The percent of transitions in the agent that are covered.
          format: float
          type: number
        transitions:
          description: The list of Transitions present in the agent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionCoverageTransition:
      description: A transition in a page.
      properties:
        covered:
          description: Whether the transition is covered by at least one of the agent's test cases.
          type: boolean
        eventHandler:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler"
          description: Event handler.
        index:
          description: The index of a transition in the transition list. Starting from 0.
          format: int32
          type: integer
        source:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode"
          description: The start node of a transition.
        target:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode"
          description: The end node of a transition.
        transitionRoute:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute"
          description: Intent route or condition route.
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionCoverageTransitionNode:
      description: The source or target of a transition.
      properties:
        flow:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Flow"
          description: Indicates a transition to a Flow. Only some fields such as name and displayname will be set.
        page:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          description: Indicates a transition to a Page. Only some fields such as name and displayname will be set.
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionRoute:
      description: "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow."
      properties:
        condition:
          description: The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
          type: string
        description:
          description: Optional. The description of the transition route. The maximum length is 500 characters.
          type: string
        intent:
          description: "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
          type: string
        name:
          description: Output only. The unique identifier of this transition route.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionRouteGroup:
      description: A TransitionRouteGroup represents a group of `TransitionRoutes` to be used by a Page.
      properties:
        displayName:
          description: Required. The human-readable name of the transition route group, unique within the flow. The display name can be no longer than 30 characters.
          type: string
        name:
          description: "The unique identifier of the transition route group. TransitionRouteGroups.CreateTransitionRouteGroup populates the name automatically. Format: `projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups."
          type: string
        transitionRoutes:
          description: Transition routes associated with the TransitionRouteGroup.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverage:
      description: Transition route group coverage represents the percentage of all possible transition routes present within any of a parent's test cases. The results are grouped by the transition route group.
      properties:
        coverageScore:
          description: The percent of transition routes in all the transition route groups that are covered.
          format: float
          type: number
        coverages:
          description: Transition route group coverages.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverage"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverage:
      description: Coverage result message for one transition route group.
      properties:
        coverageScore:
          description: The percent of transition routes in the transition route group that are covered.
          format: float
          type: number
        routeGroup:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroup"
          description: Transition route group metadata. Only name and displayName will be set.
        transitions:
          description: The list of transition routes and coverage in the transition route group.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverageTransition"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionRouteGroupCoverageCoverageTransition:
      description: A transition coverage in a transition route group.
      properties:
        covered:
          description: Whether the transition route is covered by at least one of the agent's test cases.
          type: boolean
        transitionRoute:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute"
          description: Intent route or condition route.
      type: object
    GoogleCloudDialogflowCxV3beta1TurnSignals:
      description: Collection of all signals that were extracted for a single turn of the conversation.
      properties:
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        failureReasons:
          description: Failure reasons of the turn.
          items:
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
            type: string
          type: array
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        sentimentMagnitude:
          description: Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        sentimentScore:
          description: Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata:
      description: Metadata for UpdateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1ValidateAgentRequest:
      description: The request message for Agents.ValidateAgent.
      properties:
        languageCode:
          description: If not specified, the agent's default language is used.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ValidateFlowRequest:
      description: The request message for Flows.ValidateFlow.
      properties:
        languageCode:
          description: If not specified, the agent's default language is used.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ValidationMessage:
      description: Agent/flow validation message.
      properties:
        detail:
          description: The message detail.
          type: string
        resourceNames:
          description: The resource names of the resources where the message is found.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResourceName"
          type: array
        resourceType:
          description: The type of the resources where the message is found.
          enum:
            - RESOURCE_TYPE_UNSPECIFIED
            - AGENT
            - INTENT
            - INTENT_TRAINING_PHRASE
            - INTENT_PARAMETER
            - INTENTS
            - INTENT_TRAINING_PHRASES
            - ENTITY_TYPE
            - ENTITY_TYPES
            - WEBHOOK
            - FLOW
            - PAGE
            - PAGES
            - TRANSITION_ROUTE_GROUP
            - AGENT_TRANSITION_ROUTE_GROUP
          type: string
        resources:
          deprecated: true
          description: The names of the resources where the message is found.
          items:
            type: string
          type: array
        severity:
          description: Indicates the severity of the message.
          enum:
            - SEVERITY_UNSPECIFIED
            - INFO
            - WARNING
            - ERROR
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1VariantsHistory:
      description: The history of variants update.
      properties:
        updateTime:
          description: Update time of the variants.
          format: google-datetime
          type: string
        versionVariants:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1VersionVariants"
          description: The flow versions as the variants.
      type: object
    GoogleCloudDialogflowCxV3beta1Version:
      description: Represents a version of a flow.
      properties:
        createTime:
          description: Output only. Create time of the version.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: The description of the version. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the version. Limit of 64 characters.
          type: string
        name:
          description: "Format: projects//locations//agents//flows//versions/. Version ID is a self-increasing number generated by Dialogflow upon version creation."
          type: string
        nluSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1NluSettings"
          description: Output only. The NLU settings of the flow at version creation.
          readOnly: true
        state:
          description: Output only. The state of this version. This field is read-only and cannot be set by create and update methods.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - FAILED
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1VersionVariants:
      description: A list of flow version variants.
      properties:
        variants:
          description: A list of flow version variants.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1VersionVariantsVariant"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1VersionVariantsVariant:
      description: A single flow version with specified traffic allocation.
      properties:
        isControlGroup:
          description: Whether the variant is for the control group.
          type: boolean
        trafficAllocation:
          description: Percentage of the traffic which should be routed to this version of flow. Traffic allocation for a single flow must sum up to 1.0.
          format: float
          type: number
        version:
          description: "The name of the flow version. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1VoiceSelectionParams:
      description: Description of which voice to use for speech synthesis.
      properties:
        name:
          description: Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender. For the list of available voices, please refer to [Supported voices and languages](https://cloud.google.com/text-to-speech/docs/voices).
          type: string
        ssmlGender:
          description: Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.
          enum:
            - SSML_VOICE_GENDER_UNSPECIFIED
            - SSML_VOICE_GENDER_MALE
            - SSML_VOICE_GENDER_FEMALE
            - SSML_VOICE_GENDER_NEUTRAL
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Webhook:
      description: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
      properties:
        disabled:
          description: Indicates whether the webhook is disabled.
          type: boolean
        displayName:
          description: Required. The human-readable name of the webhook, unique within the agent.
          type: string
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService"
          description: Configuration for a generic web service.
        name:
          description: "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
          type: string
        serviceDirectory:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig"
          description: Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
        timeout:
          description: Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookGenericWebService:
      description: Represents configuration for a generic web service.
      properties:
        allowedCaCerts:
          description: Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'") ```
          items:
            format: byte
            type: string
          type: array
        httpMethod:
          description: Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
          type: string
        parameterMapping:
          additionalProperties:
            type: string
          description: "Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response"
          type: object
        password:
          deprecated: true
          description: The password for HTTP Basic authentication.
          type: string
        requestBody:
          description: Optional. Defines a custom JSON object as request body to send to flexible webhook.
          type: string
        requestHeaders:
          additionalProperties:
            type: string
          description: The HTTP request headers to send together with webhook requests.
          type: object
        uri:
          description: Required. The webhook URI for receiving POST requests. It must use https protocol.
          type: string
        username:
          deprecated: true
          description: The user name for HTTP Basic authentication.
          type: string
        webhookType:
          description: Optional. Type of the webhook.
          enum:
            - WEBHOOK_TYPE_UNSPECIFIED
            - STANDARD
            - FLEXIBLE
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequest:
      description: The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.
      properties:
        detectIntentResponseId:
          description: Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
          type: string
        dtmfDigits:
          description: If DTMF was provided as input, this field will contain the DTMF digits.
          type: string
        fulfillmentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
          description: Always present. Information about the fulfillment that triggered this webhook call.
        intentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo"
          description: Information about the last matched intent.
        languageCode:
          description: The language code specified in the original request.
          type: string
        messages:
          description: The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfo"
          description: Information about page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Custom data set in QueryParameters.payload.
          type: object
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult"
          description: The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request.
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionInfo"
          description: Information about session status.
        text:
          description: If natural language text was provided as input, this field will contain a copy of the text.
          type: string
        transcript:
          description: If natural language speech audio was provided as input, this field will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: If an event was provided as input, this field will contain the name of the event.
          type: string
        triggerIntent:
          description: "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo:
      description: Represents fulfillment information communicated to the webhook.
      properties:
        tag:
          description: Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo:
      description: Represents intent information communicated to the webhook.
      properties:
        confidence:
          description: The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        displayName:
          description: Always present. The display name of the last matched intent.
          type: string
        lastMatchedIntent:
          description: "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          description: Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue:
      description: Represents a value for an intent parameter.
      properties:
        originalValue:
          description: Always present. Original text value extracted from user utterance.
          type: string
        resolvedValue:
          description: Always present. Structured value for the parameter extracted from user utterance.
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult:
      description: Represents the result of sentiment analysis.
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookResponse:
      description: The response message for a webhook call.
      properties:
        fulfillmentResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse"
          description: The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfo"
          description: Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Value to append directly to QueryResult.webhook_payloads.
          type: object
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionInfo"
          description: Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse:
      description: Represents a fulfillment response to the user.
      properties:
        mergeBehavior:
          description: Merge behavior for `messages`.
          enum:
            - MERGE_BEHAVIOR_UNSPECIFIED
            - APPEND
            - REPLACE
          type: string
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig:
      description: Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
      properties:
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService"
          description: Generic Service configuration of this webhook.
        service:
          description: "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent."
          type: string
      type: object
    GoogleCloudDialogflowV2AnnotatedMessagePart:
      description: Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.
      properties:
        entityType:
          description: The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.
          type: string
        formattedValue:
          description: 'The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" } '
        text:
          description: A part of a message possibly annotated with an entity.
          type: string
      type: object
    GoogleCloudDialogflowV2ArticleAnswer:
      description: Represents article answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        snippets:
          description: Article snippets.
          items:
            type: string
          type: array
        title:
          description: The article title.
          type: string
        uri:
          description: The article URI.
          type: string
      type: object
    GoogleCloudDialogflowV2ArticleSuggestionModelMetadata:
      description: Metadata for article suggestion models.
      properties:
        trainingModelType:
          description: Optional. Type of the article suggestion model. If not provided, model_type is used.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - SMART_REPLY_DUAL_ENCODER_MODEL
            - SMART_REPLY_BERT_MODEL
          type: string
      type: object
    GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse:
      description: The response message for EntityTypes.BatchUpdateEntityTypes.
      properties:
        entityTypes:
          description: The collection of updated or created entity types.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityType"
          type: array
      type: object
    GoogleCloudDialogflowV2BatchUpdateIntentsResponse:
      description: The response message for Intents.BatchUpdateIntents.
      properties:
        intents:
          description: The collection of updated or created intents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          type: array
      type: object
    GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2Context:
      description: Dialogflow contexts are similar to natural language context. If a person says to you "they are orange", you need context in order to understand what "they" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
      properties:
        lifespanCount:
          description: Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.
          format: int32
          type: integer
        name:
          description: "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2ConversationEvent:
      description: Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.
      properties:
        conversation:
          description: "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        errorStatus:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
        newMessagePayload:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Message"
          description: Payload of NEW_MESSAGE event.
        type:
          description: The type of the event that this notification refers to.
          enum:
            - TYPE_UNSPECIFIED
            - CONVERSATION_STARTED
            - CONVERSATION_FINISHED
            - HUMAN_INTERVENTION_NEEDED
            - NEW_MESSAGE
            - UNRECOVERABLE_ERROR
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationModel:
      description: Represents a conversation model.
      properties:
        articleSuggestionModelMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ArticleSuggestionModelMetadata"
          description: Metadata for article suggestion models.
        createTime:
          description: Output only. Creation time of this model.
          format: google-datetime
          readOnly: true
          type: string
        datasets:
          description: Required. Datasets used to create model.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2InputDataset"
          type: array
        displayName:
          description: Required. The display name of the model. At most 64 bytes long.
          type: string
        languageCode:
          description: 'Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        name:
          description: "ConversationModel resource name. Format: `projects//conversationModels/`"
          type: string
        smartReplyModelMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SmartReplyModelMetadata"
          description: Metadata for smart reply models.
        state:
          description: Output only. State of the model. A model can only serve prediction requests after it gets deployed.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
            - FAILED
            - PENDING
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata:
      description: Metadata for ConversationDatasets.
      properties:
        conversationDataset:
          description: "The resource name of the conversation dataset that will be created. Format: `projects//locations//conversationDatasets/`"
          type: string
      type: object
    GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata:
      description: Metadata for a ConversationModels.CreateConversationModelEvaluation operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//locations//conversationModels/`"
          type: string
        conversationModelEvaluation:
          description: "The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/`"
          type: string
        createTime:
          description: Timestamp when the request to create conversation model was submitted. The time is measured on server side.
          format: google-datetime
          type: string
        state:
          description: State of CreateConversationModel operation.
          enum:
            - STATE_UNSPECIFIED
            - INITIALIZING
            - RUNNING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          type: string
      type: object
    GoogleCloudDialogflowV2CreateConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.CreateConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when the request to create conversation model is submitted. The time is measured on server side.
          format: google-datetime
          type: string
        state:
          description: State of CreateConversationModel operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - CANCELLING
            - TRAINING
          type: string
      type: object
    GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata:
      description: Metadata for ConversationDatasets.
      properties: {}
      type: object
    GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.DeleteConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when delete conversation model request was created. The time is measured on server side.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2DeployConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.DeployConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when request to deploy conversation model was submitted. The time is measured on server side.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2EntityType:
      description: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
      properties:
        autoExpansionMode:
          description: Optional. Indicates whether the entity type can be automatically expanded.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
          type: string
        displayName:
          description: Required. The name of the entity type.
          type: string
        enableFuzzyExtraction:
          description: Optional. Enables fuzzy entity extraction during classification.
          type: boolean
        entities:
          description: Optional. The collection of entity entries associated with the entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity"
          type: array
        kind:
          description: Required. Indicates the kind of entity type.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
          type: string
        name:
          description: "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
          type: string
      type: object
    GoogleCloudDialogflowV2EntityTypeEntity:
      description: An **entity entry** for an associated entity type.
      properties:
        synonyms:
          description: "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
          items:
            type: string
          type: array
        value:
          description: "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
          type: string
      type: object
    GoogleCloudDialogflowV2EventInput:
      description: 'Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.'
      properties:
        languageCode:
          description: Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request.
          type: string
        name:
          description: Required. The unique identifier of the event.
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Zip compressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.
          type: string
      type: object
    GoogleCloudDialogflowV2ExportOperationMetadata:
      description: Metadata related to the Export Data Operations (e.g. ExportDocument).
      properties:
        exportedGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GcsDestination"
          description: Cloud Storage file path of the exported data.
      type: object
    GoogleCloudDialogflowV2FaqAnswer:
      description: Represents answer from "frequently asked questions".
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2GcsDestination:
      description: Google Cloud Storage location for the output.
      properties:
        uri:
          description: 'The Google Cloud Storage URIs for the output. A URI is of the form: `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case. The requesting user must have "write-permission" to the bucket.'
          type: string
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantEvent:
      description: Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific conversation.
      properties:
        conversation:
          description: "The conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        participant:
          description: "The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow."
          type: string
        suggestionResults:
          description: The suggestion results payload that this notification refers to.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestionResult"
          type: array
      type: object
    GoogleCloudDialogflowV2ImportConversationDataOperationMetadata:
      description: Metadata for a ConversationDatasets.ImportConversationData operation.
      properties:
        conversationDataset:
          description: "The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`"
          type: string
        createTime:
          description: Timestamp when import conversation data request was created. The time is measured on server side.
          format: google-datetime
          type: string
        partialFailures:
          description: Partial failures are failures that don't fail the whole long running operation, e.g. single files that couldn't be read.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV2ImportConversationDataOperationResponse:
      description: Response used for ConversationDatasets.ImportConversationData long running operation.
      properties:
        conversationDataset:
          description: "The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`"
          type: string
        importCount:
          description: Number of conversations imported successfully.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowV2ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV2InputDataset:
      description: InputDataset used to create model or do evaluation. NextID:5
      properties:
        dataset:
          description: "Required. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`"
          type: string
      type: object
    GoogleCloudDialogflowV2Intent:
      description: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
      properties:
        action:
          description: "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
          type: string
        defaultResponsePlatforms:
          description: Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
          items:
            enum:
              - PLATFORM_UNSPECIFIED
              - FACEBOOK
              - SLACK
              - TELEGRAM
              - KIK
              - SKYPE
              - LINE
              - VIBER
              - ACTIONS_ON_GOOGLE
              - GOOGLE_HANGOUTS
            type: string
          type: array
        displayName:
          description: Required. The name of this intent.
          type: string
        endInteraction:
          description: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
          type: boolean
        events:
          description: Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
          items:
            type: string
          type: array
        followupIntentInfo:
          description: Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          readOnly: true
          type: array
        inputContextNames:
          description: "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`."
          items:
            type: string
          type: array
        isFallback:
          description: Optional. Indicates whether this is a fallback intent.
          type: boolean
        liveAgentHandoff:
          description: Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
          type: boolean
        messages:
          description: Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessage"
          type: array
        mlDisabled:
          description: "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off."
          type: boolean
        name:
          description: "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`."
          type: string
        outputContexts:
          description: "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        parameters:
          description: Optional. The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentParameter"
          type: array
        parentFollowupIntentName:
          description: "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
          type: string
        priority:
          description: Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        resetContexts:
          description: Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
          type: boolean
        rootFollowupIntentName:
          description: "Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`."
          readOnly: true
          type: string
        trainingPhrases:
          description: Optional. The collection of examples that the agent is trained on.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentTrainingPhrase"
          type: array
        webhookState:
          description: Optional. Indicates whether webhooks are enabled for the intent.
          enum:
            - WEBHOOK_STATE_UNSPECIFIED
            - WEBHOOK_STATE_ENABLED
            - WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
          type: string
      type: object
    GoogleCloudDialogflowV2IntentFollowupIntentInfo:
      description: Represents a single followup intent in the chain.
      properties:
        followupIntentName:
          description: "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
          type: string
        parentFollowupIntentName:
          description: "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessage:
      description: A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).
      properties:
        basicCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCard"
          description: The basic card response for Actions on Google.
        browseCarouselCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard"
          description: Browse carousel card for Actions on Google.
        card:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCard"
          description: The card response.
        carouselSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCarouselSelect"
          description: The carousel card response for Actions on Google.
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: The image response.
        linkOutSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion"
          description: The link out suggestion chip for Actions on Google.
        listSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageListSelect"
          description: The list card response for Actions on Google.
        mediaContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageMediaContent"
          description: The media content card for Actions on Google.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: A custom platform-specific response.
          type: object
        platform:
          description: Optional. The platform that this message is intended for.
          enum:
            - PLATFORM_UNSPECIFIED
            - FACEBOOK
            - SLACK
            - TELEGRAM
            - KIK
            - SKYPE
            - LINE
            - VIBER
            - ACTIONS_ON_GOOGLE
            - GOOGLE_HANGOUTS
          type: string
        quickReplies:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageQuickReplies"
          description: The quick replies response.
        simpleResponses:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSimpleResponses"
          description: The voice and text-only responses for Actions on Google.
        suggestions:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSuggestions"
          description: The suggestion chips for Actions on Google.
        tableCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCard"
          description: Table card for Actions on Google.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageText"
          description: The text response.
      type: object
    GoogleCloudDialogflowV2IntentMessageBasicCard:
      description: The basic card message. Useful for displaying information.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          type: array
        formattedText:
          description: Required, unless image is present. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. The image for the card.
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBasicCardButton:
      description: The button object that appears at the bottom of a card.
      properties:
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"
          description: Required. Action to take when a user taps on the button.
        title:
          description: Required. The title of the button.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction:
      description: Opens the given URI.
      properties:
        uri:
          description: Required. The HTTP or HTTPS scheme URI.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard:
      description: Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel
      properties:
        imageDisplayOptions:
          description: Optional. Settings for displaying the image. Applies to every image in items.
          enum:
            - IMAGE_DISPLAY_OPTIONS_UNSPECIFIED
            - GRAY
            - WHITE
            - CROPPED
            - BLURRED_BACKGROUND
          type: string
        items:
          description: Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem:
      description: Browsing carousel tile
      properties:
        description:
          description: Optional. Description of the carousel item. Maximum of four lines of text.
          type: string
        footer:
          description: Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Hero image for the carousel item.
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
          description: Required. Action to present to the user.
        title:
          description: Required. Title of the carousel item. Maximum of two lines of text.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction:
      description: Actions on Google action to open a given url.
      properties:
        url:
          description: Required. URL
          type: string
        urlTypeHint:
          description: Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.
          enum:
            - URL_TYPE_HINT_UNSPECIFIED
            - AMP_ACTION
            - AMP_CONTENT
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageCard:
      description: The card response message.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCardButton"
          type: array
        imageUri:
          description: Optional. The public URI to an image file for the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageCardButton:
      description: Contains information about a button.
      properties:
        postback:
          description: Optional. The text to send back to the Dialogflow API or a URI to open.
          type: string
        text:
          description: Optional. The text to show on the button.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageCarouselSelect:
      description: The card for presenting a carousel of options to select from.
      properties:
        items:
          description: Required. Carousel items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageCarouselSelectItem:
      description: An item in the carousel.
      properties:
        description:
          description: Optional. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
          description: Required. Additional info about the option item.
        title:
          description: Required. Title of the carousel item.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageColumnProperties:
      description: Column properties for TableCard.
      properties:
        header:
          description: Required. Column heading.
          type: string
        horizontalAlignment:
          description: Optional. Defines text alignment for all cells in this column.
          enum:
            - HORIZONTAL_ALIGNMENT_UNSPECIFIED
            - LEADING
            - CENTER
            - TRAILING
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageImage:
      description: The image response message.
      properties:
        accessibilityText:
          description: Optional. A text description of the image to be used for accessibility, e.g., screen readers.
          type: string
        imageUri:
          description: Optional. The public URI to an image file.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion:
      description: The suggestion chip message that allows the user to jump out to the app or website associated with this agent.
      properties:
        destinationName:
          description: Required. The name of the app or site this chip is linking to.
          type: string
        uri:
          description: Required. The URI of the app or site to open when the user taps the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageListSelect:
      description: The card for presenting a list of options to select from.
      properties:
        items:
          description: Required. List items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageListSelectItem"
          type: array
        subtitle:
          description: Optional. Subtitle of the list.
          type: string
        title:
          description: Optional. The overall title of the list.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageListSelectItem:
      description: An item in the list.
      properties:
        description:
          description: Optional. The main text describing the item.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
          description: Required. Additional information about this option.
        title:
          description: Required. The title of the list item.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageMediaContent:
      description: The media content card for Actions on Google.
      properties:
        mediaObjects:
          description: Required. List of media objects.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          type: array
        mediaType:
          description: Optional. What type of media is the content (ie "audio").
          enum:
            - RESPONSE_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject:
      description: Response media object for media content card.
      properties:
        contentUrl:
          description: Required. Url where the media is stored.
          type: string
        description:
          description: Optional. Description of media card.
          type: string
        icon:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Icon to display above media content.
        largeImage:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Image to display above media content.
        name:
          description: Required. Name of media card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageQuickReplies:
      description: The quick replies response message.
      properties:
        quickReplies:
          description: Optional. The collection of quick replies.
          items:
            type: string
          type: array
        title:
          description: Optional. The title of the collection of quick replies.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageSelectItemInfo:
      description: Additional info about the select item for when it is triggered in a dialog.
      properties:
        key:
          description: Required. A unique key that will be sent back to the agent if this response is given.
          type: string
        synonyms:
          description: Optional. A list of synonyms that can also be used to trigger this item in dialog.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageSimpleResponse:
      description: The simple response message containing speech or text.
      properties:
        displayText:
          description: Optional. The text to display.
          type: string
        ssml:
          description: One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.
          type: string
        textToSpeech:
          description: One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageSimpleResponses:
      description: The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.
      properties:
        simpleResponses:
          description: Required. The list of simple responses.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageSuggestion:
      description: The suggestion chip message that the user can tap to quickly post a reply to the conversation.
      properties:
        title:
          description: Required. The text shown the in the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageSuggestions:
      description: The collection of suggestions.
      properties:
        suggestions:
          description: Required. The list of suggested replies.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSuggestion"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageTableCard:
      description: Table card for Actions on Google.
      properties:
        buttons:
          description: Optional. List of buttons for the card.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          type: array
        columnProperties:
          description: Optional. Display properties for the columns in this table.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageColumnProperties"
          type: array
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Image which should be displayed on the card.
        rows:
          description: Optional. Rows in this table of data.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCardRow"
          type: array
        subtitle:
          description: Optional. Subtitle to the title.
          type: string
        title:
          description: Required. Title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageTableCardCell:
      description: Cell of TableCardRow.
      properties:
        text:
          description: Required. Text in this cell.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageTableCardRow:
      description: Row of TableCard.
      properties:
        cells:
          description: Optional. List of cells that make up this row.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCardCell"
          type: array
        dividerAfter:
          description: Optional. Whether to add a visual divider after this row.
          type: boolean
      type: object
    GoogleCloudDialogflowV2IntentMessageText:
      description: The text response message.
      properties:
        text:
          description: Optional. The collection of the agent's responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2IntentParameter:
      description: Represents intent parameters.
      properties:
        defaultValue:
          description: "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
          type: string
        displayName:
          description: Required. The name of the parameter.
          type: string
        entityTypeDisplayName:
          description: Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.
          type: string
        isList:
          description: Optional. Indicates whether the parameter represents a list of values.
          type: boolean
        mandatory:
          description: Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.
          type: boolean
        name:
          description: The unique identifier of this parameter.
          type: string
        prompts:
          description: Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.
          items:
            type: string
          type: array
        value:
          description: "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
          type: string
      type: object
    GoogleCloudDialogflowV2IntentTrainingPhrase:
      description: Represents an example that the agent is trained on.
      properties:
        name:
          description: Output only. The unique identifier of this training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          type: array
        timesAddedCount:
          description: Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.
          format: int32
          type: integer
        type:
          description: Required. The type of the training phrase.
          enum:
            - TYPE_UNSPECIFIED
            - EXAMPLE
            - TEMPLATE
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
      type: object
    GoogleCloudDialogflowV2IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        alias:
          description: Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.
          type: string
        entityType:
          description: Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
        userDefined:
          description: Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.
          type: boolean
      type: object
    GoogleCloudDialogflowV2KnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        exportOperationMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ExportOperationMetadata"
          description: Metadata for the Export Data Operation such as the destination of export.
        knowledgeBase:
          description: The name of the knowledge base interacted with during the operation.
          type: string
        state:
          description: Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2Message:
      description: Represents a message posted into a conversation.
      properties:
        content:
          description: Required. The message content.
          type: string
        createTime:
          description: Output only. The time when the message was created in Contact Center AI.
          format: google-datetime
          readOnly: true
          type: string
        languageCode:
          description: 'Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        messageAnnotation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2MessageAnnotation"
          description: Output only. The annotation for the message.
          readOnly: true
        name:
          description: "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
          type: string
        participant:
          description: Output only. The participant that sends this message.
          readOnly: true
          type: string
        participantRole:
          description: Output only. The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          readOnly: true
          type: string
        sendTime:
          description: Optional. The time when the message was sent.
          format: google-datetime
          type: string
        sentimentAnalysis:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisResult"
          description: Output only. The sentiment analysis result for the message.
          readOnly: true
      type: object
    GoogleCloudDialogflowV2MessageAnnotation:
      description: Represents the result of annotation for the message.
      properties:
        containEntities:
          description: Indicates whether the text message contains entities.
          type: boolean
        parts:
          description: The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2AnnotatedMessagePart"
          type: array
      type: object
    GoogleCloudDialogflowV2OriginalDetectIntentRequest:
      description: Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.
      properties:
        payload:
          additionalProperties:
            description: Properties of the object.
          description: 'Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.'
          type: object
        source:
          description: The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.
          type: string
        version:
          description: Optional. The version of the protocol used for this request. This field is AoG-specific.
          type: string
      type: object
    GoogleCloudDialogflowV2QueryResult:
      description: Represents the result of conversational query or event processing.
      properties:
        action:
          description: The action name from the matched intent.
          type: string
        allRequiredParamsPresent:
          description: "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
          type: boolean
        cancelsSlotFilling:
          description: Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
          type: boolean
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
          type: object
        fulfillmentMessages:
          description: The collection of rich messages to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessage"
          type: array
        fulfillmentText:
          description: "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred."
          type: string
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          description: "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        intentDetectionConfidence:
          description: The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
          format: float
          type: number
        languageCode:
          description: The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        outputContexts:
          description: The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        queryText:
          description: "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
          type: string
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisResult"
          description: The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.
        speechRecognitionConfidence:
          description: The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
          format: float
          type: number
        webhookPayload:
          additionalProperties:
            description: Properties of the object.
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.
          type: object
        webhookSource:
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.
          type: string
      type: object
    GoogleCloudDialogflowV2Sentiment:
      description: "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result."
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowV2SentimentAnalysisResult:
      description: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
      properties:
        queryTextSentiment:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Sentiment"
          description: The sentiment analysis result for `query_text`.
      type: object
    GoogleCloudDialogflowV2SessionEntityType:
      description: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).
      properties:
        entities:
          description: Required. The collection of entities associated with this session entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity"
          type: array
        entityOverrideMode:
          description: Required. Indicates whether the additional data should override or supplement the custom entity type definition.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
          type: string
        name:
          description: "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
          type: string
      type: object
    GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to add or update.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2SmartReplyAnswer:
      description: Represents a smart reply answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        reply:
          description: The content of the reply.
          type: string
      type: object
    GoogleCloudDialogflowV2SmartReplyModelMetadata:
      description: Metadata for smart reply models.
      properties:
        trainingModelType:
          description: Optional. Type of the smart reply model. If not provided, model_type is used.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - SMART_REPLY_DUAL_ENCODER_MODEL
            - SMART_REPLY_BERT_MODEL
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestArticlesResponse:
      description: The response message for Participants.SuggestArticles.
      properties:
        articleAnswers:
          description: Articles ordered by score in descending order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ArticleAnswer"
          type: array
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestFaqAnswersResponse:
      description: The request message for Participants.SuggestFaqAnswers.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        faqAnswers:
          description: Answers extracted from FAQ documents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2FaqAnswer"
          type: array
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestSmartRepliesResponse:
      description: The response message for Participants.SuggestSmartReplies.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
        smartReplyAnswers:
          description: Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SmartReplyAnswer"
          readOnly: true
          type: array
      type: object
    GoogleCloudDialogflowV2SuggestionResult:
      description: One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Error status if the request failed.
        suggestArticlesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestArticlesResponse"
          description: SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
        suggestFaqAnswersResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
          description: SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
        suggestSmartRepliesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestSmartRepliesResponse"
          description: SuggestSmartRepliesResponse if request is for SMART_REPLY.
      type: object
    GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.UndeployConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when the request to undeploy conversation model was submitted. The time is measured on server side.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2WebhookRequest:
      description: The request message for a webhook call.
      properties:
        originalDetectIntentRequest:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OriginalDetectIntentRequest"
          description: Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryResult"
          description: The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.
        responseId:
          description: The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.
          type: string
        session:
          description: "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
          type: string
      type: object
    GoogleCloudDialogflowV2WebhookResponse:
      description: 'The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).'
      properties:
        followupEventInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EventInput"
          description: Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.
        fulfillmentMessages:
          description: Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessage"
          type: array
        fulfillmentText:
          description: Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.
          type: string
        outputContexts:
          description: Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
          type: object
        sessionEntityTypes:
          description: Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SessionEntityType"
          type: array
        source:
          description: Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1AnnotatedMessagePart:
      description: Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.
      properties:
        entityType:
          description: Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.
          type: string
        formattedValue:
          description: 'Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" } '
        text:
          description: Required. A part of a message possibly annotated with an entity.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1ArticleAnswer:
      description: Represents article answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        snippets:
          description: Output only. Article snippets.
          items:
            type: string
          type: array
        title:
          description: The article title.
          type: string
        uri:
          description: The article URI.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse:
      description: The response message for EntityTypes.BatchUpdateEntityTypes.
      properties:
        entityTypes:
          description: The collection of updated or created entity types.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EntityType"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse:
      description: The response message for Intents.BatchUpdateIntents.
      properties:
        intents:
          description: The collection of updated or created intents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Intent"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - DIALOGFLOW_ASSIST
            - CONVERSATION_SUMMARIZATION
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2beta1Context:
      description: Dialogflow contexts are similar to natural language context. If a person says to you "they are orange", you need context in order to understand what "they" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
      properties:
        lifespanCount:
          description: Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.
          format: int32
          type: integer
        name:
          description: "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2beta1ConversationEvent:
      description: Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.
      properties:
        conversation:
          description: "Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        errorStatus:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
        newMessagePayload:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Message"
          description: Payload of NEW_MESSAGE event.
        type:
          description: Required. The type of the event that this notification refers to.
          enum:
            - TYPE_UNSPECIFIED
            - CONVERSATION_STARTED
            - CONVERSATION_FINISHED
            - HUMAN_INTERVENTION_NEEDED
            - NEW_MESSAGE
            - UNRECOVERABLE_ERROR
          type: string
      type: object
    GoogleCloudDialogflowV2beta1DialogflowAssistAnswer:
      description: Represents a Dialogflow assist answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        intentSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentSuggestion"
          description: An intent suggestion generated from conversation.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult"
          description: Result from v2 agent.
      type: object
    GoogleCloudDialogflowV2beta1EntityType:
      description: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
      properties:
        autoExpansionMode:
          description: Optional. Indicates whether the entity type can be automatically expanded.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
          type: string
        displayName:
          description: Required. The name of the entity type.
          type: string
        enableFuzzyExtraction:
          description: Optional. Enables fuzzy entity extraction during classification.
          type: boolean
        entities:
          description: Optional. The collection of entity entries associated with the entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EntityTypeEntity"
          type: array
        kind:
          description: Required. Indicates the kind of entity type.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
          type: string
        name:
          description: "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`"
          type: string
      type: object
    GoogleCloudDialogflowV2beta1EntityTypeEntity:
      description: An **entity entry** for an associated entity type.
      properties:
        synonyms:
          description: "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
          items:
            type: string
          type: array
        value:
          description: "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1EventInput:
      description: 'Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.'
      properties:
        languageCode:
          description: Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request.
          type: string
        name:
          description: Required. The unique identifier of the event.
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2beta1ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Zip compressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1ExportOperationMetadata:
      description: Metadata related to the Export Data Operations (e.g. ExportDocument).
      properties:
        exportedGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1GcsDestination"
          description: Cloud Storage file path of the exported data.
      type: object
    GoogleCloudDialogflowV2beta1FaqAnswer:
      description: Represents answer from "frequently asked questions".
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1GcsDestination:
      description: Google Cloud Storage location for the output.
      properties:
        uri:
          description: 'Required. The Google Cloud Storage URIs for the output. A URI is of the form: `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case. The requesting user must have "write-permission" to the bucket.'
          type: string
      type: object
    GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent:
      description: Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific conversation.
      properties:
        conversation:
          description: "The conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        participant:
          description: "The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. HumanAgentAssistantConfig.name for more information."
          type: string
        suggestionResults:
          description: The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestionResult"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1Intent:
      description: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
      properties:
        action:
          description: "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
          type: string
        defaultResponsePlatforms:
          description: Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
          items:
            enum:
              - PLATFORM_UNSPECIFIED
              - FACEBOOK
              - SLACK
              - TELEGRAM
              - KIK
              - SKYPE
              - LINE
              - VIBER
              - ACTIONS_ON_GOOGLE
              - TELEPHONY
              - GOOGLE_HANGOUTS
            type: string
          type: array
        displayName:
          description: Required. The name of this intent.
          type: string
        endInteraction:
          description: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
          type: boolean
        events:
          description: Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
          items:
            type: string
          type: array
        followupIntentInfo:
          description: Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          readOnly: true
          type: array
        inputContextNames:
          description: "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`"
          items:
            type: string
          type: array
        isFallback:
          description: Optional. Indicates whether this is a fallback intent.
          type: boolean
        liveAgentHandoff:
          description: Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
          type: boolean
        messages:
          description: Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage"
          type: array
        mlDisabled:
          description: "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off."
          type: boolean
        mlEnabled:
          deprecated: true
          description: "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false."
          type: boolean
        name:
          description: "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`"
          type: string
        outputContexts:
          description: "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Context"
          type: array
        parameters:
          description: Optional. The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentParameter"
          type: array
        parentFollowupIntentName:
          description: "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
          type: string
        priority:
          description: Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        resetContexts:
          description: Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
          type: boolean
        rootFollowupIntentName:
          description: "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`."
          readOnly: true
          type: string
        trainingPhrases:
          description: Optional. The collection of examples that the agent is trained on.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          type: array
        webhookState:
          description: Optional. Indicates whether webhooks are enabled for the intent.
          enum:
            - WEBHOOK_STATE_UNSPECIFIED
            - WEBHOOK_STATE_ENABLED
            - WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo:
      description: Represents a single followup intent in the chain.
      properties:
        followupIntentName:
          description: "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
          type: string
        parentFollowupIntentName:
          description: "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessage:
      description: Corresponds to the `Response` field in the Dialogflow console.
      properties:
        basicCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCard"
          description: Displays a basic card for Actions on Google.
        browseCarouselCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard"
          description: Browse carousel card for Actions on Google.
        card:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCard"
          description: Displays a card.
        carouselSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect"
          description: Displays a carousel card for Actions on Google.
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Displays an image.
        linkOutSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion"
          description: Displays a link out suggestion chip for Actions on Google.
        listSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageListSelect"
          description: Displays a list card for Actions on Google.
        mediaContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageMediaContent"
          description: The media content card for Actions on Google.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: A custom platform-specific response.
          type: object
        platform:
          description: Optional. The platform that this message is intended for.
          enum:
            - PLATFORM_UNSPECIFIED
            - FACEBOOK
            - SLACK
            - TELEGRAM
            - KIK
            - SKYPE
            - LINE
            - VIBER
            - ACTIONS_ON_GOOGLE
            - TELEPHONY
            - GOOGLE_HANGOUTS
          type: string
        quickReplies:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
          description: Displays quick replies.
        rbmCarouselRichCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"
          description: Rich Business Messaging (RBM) carousel rich card response.
        rbmStandaloneRichCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
          description: Standalone Rich Business Messaging (RBM) rich card response.
        rbmText:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmText"
          description: Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging.
        simpleResponses:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses"
          description: Returns a voice or text-only response for Actions on Google.
        suggestions:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
          description: Displays suggestion chips for Actions on Google.
        tableCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCard"
          description: Table card for Actions on Google.
        telephonyPlayAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio"
          description: Plays audio from a file in Telephony Gateway.
        telephonySynthesizeSpeech:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech"
          description: Synthesizes speech in Telephony Gateway.
        telephonyTransferCall:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall"
          description: Transfers the call in Telephony Gateway.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageText"
          description: Returns a text response.
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBasicCard:
      description: The basic card message. Useful for displaying information.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          type: array
        formattedText:
          description: Required, unless image is present. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. The image for the card.
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton:
      description: The button object that appears at the bottom of a card.
      properties:
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction"
          description: Required. Action to take when a user taps on the button.
        title:
          description: Required. The title of the button.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction:
      description: Opens the given URI.
      properties:
        uri:
          description: Required. The HTTP or HTTPS scheme URI.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard:
      description: Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel
      properties:
        imageDisplayOptions:
          description: Optional. Settings for displaying the image. Applies to every image in items.
          enum:
            - IMAGE_DISPLAY_OPTIONS_UNSPECIFIED
            - GRAY
            - WHITE
            - CROPPED
            - BLURRED_BACKGROUND
          type: string
        items:
          description: Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem:
      description: Browsing carousel tile
      properties:
        description:
          description: Optional. Description of the carousel item. Maximum of four lines of text.
          type: string
        footer:
          description: Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Hero image for the carousel item.
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
          description: Required. Action to present to the user.
        title:
          description: Required. Title of the carousel item. Maximum of two lines of text.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction:
      description: Actions on Google action to open a given url.
      properties:
        url:
          description: Required. URL
          type: string
        urlTypeHint:
          description: Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.
          enum:
            - URL_TYPE_HINT_UNSPECIFIED
            - AMP_ACTION
            - AMP_CONTENT
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCard:
      description: The card response message.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          type: array
        imageUri:
          description: Optional. The public URI to an image file for the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCardButton:
      description: Optional. Contains information about a button.
      properties:
        postback:
          description: Optional. The text to send back to the Dialogflow API or a URI to open.
          type: string
        text:
          description: Optional. The text to show on the button.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect:
      description: The card for presenting a carousel of options to select from.
      properties:
        items:
          description: Required. Carousel items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem:
      description: An item in the carousel.
      properties:
        description:
          description: Optional. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
          description: Required. Additional info about the option item.
        title:
          description: Required. Title of the carousel item.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageColumnProperties:
      description: Column properties for TableCard.
      properties:
        header:
          description: Required. Column heading.
          type: string
        horizontalAlignment:
          description: Optional. Defines text alignment for all cells in this column.
          enum:
            - HORIZONTAL_ALIGNMENT_UNSPECIFIED
            - LEADING
            - CENTER
            - TRAILING
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageImage:
      description: The image response message.
      properties:
        accessibilityText:
          description: A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect.
          type: string
        imageUri:
          description: Optional. The public URI to an image file.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion:
      description: The suggestion chip message that allows the user to jump out to the app or website associated with this agent.
      properties:
        destinationName:
          description: Required. The name of the app or site this chip is linking to.
          type: string
        uri:
          description: Required. The URI of the app or site to open when the user taps the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageListSelect:
      description: The card for presenting a list of options to select from.
      properties:
        items:
          description: Required. List items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          type: array
        subtitle:
          description: Optional. Subtitle of the list.
          type: string
        title:
          description: Optional. The overall title of the list.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageListSelectItem:
      description: An item in the list.
      properties:
        description:
          description: Optional. The main text describing the item.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
          description: Required. Additional information about this option.
        title:
          description: Required. The title of the list item.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageMediaContent:
      description: The media content card for Actions on Google.
      properties:
        mediaObjects:
          description: Required. List of media objects.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          type: array
        mediaType:
          description: Optional. What type of media is the content (ie "audio").
          enum:
            - RESPONSE_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject:
      description: Response media object for media content card.
      properties:
        contentUrl:
          description: Required. Url where the media is stored.
          type: string
        description:
          description: Optional. Description of media card.
          type: string
        icon:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Icon to display above media content.
        largeImage:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Image to display above media content.
        name:
          description: Required. Name of media card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageQuickReplies:
      description: The quick replies response message.
      properties:
        quickReplies:
          description: Optional. The collection of quick replies.
          items:
            type: string
          type: array
        title:
          description: Optional. The title of the collection of quick replies.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent:
      description: Rich Business Messaging (RBM) Card content
      properties:
        description:
          description: Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set.
          type: string
        media:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
          description: Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card.
        suggestions:
          description: Optional. List of suggestions to include in the card.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          type: array
        title:
          description: Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia:
      description: "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm"
      properties:
        fileUri:
          description: Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
          type: string
        height:
          description: Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
          enum:
            - HEIGHT_UNSPECIFIED
            - SHORT
            - MEDIUM
            - TALL
          type: string
        thumbnailUri:
          description: Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard:
      description: Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead.
      properties:
        cardContents:
          description: Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          type: array
        cardWidth:
          description: Required. The width of the cards in the carousel.
          enum:
            - CARD_WIDTH_UNSPECIFIED
            - SMALL
            - MEDIUM
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard:
      description: Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout.
      properties:
        cardContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          description: Required. Card content.
        cardOrientation:
          description: Required. Orientation of the card.
          enum:
            - CARD_ORIENTATION_UNSPECIFIED
            - HORIZONTAL
            - VERTICAL
          type: string
        thumbnailImageAlignment:
          description: Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.
          enum:
            - THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED
            - LEFT
            - RIGHT
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction:
      description: Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.
      properties:
        dial:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial"
          description: "Suggested client side action: Dial a phone number"
        openUrl:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri"
          description: "Suggested client side action: Open a URI on device"
        postbackData:
          description: Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic.
          type: string
        shareLocation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation"
          description: "Suggested client side action: Share user location"
        text:
          description: Text to display alongside the action.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial:
      description: Opens the user's default dialer app with the specified phone number but does not dial automatically.
      properties:
        phoneNumber:
          description: "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri:
      description: Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI.
      properties:
        uri:
          description: Required. The uri to open on the user device
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation:
      description: Opens the device's location chooser so the user can pick a location to send back to the agent.
      properties: {}
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply:
      description: Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.
      properties:
        postbackData:
          description: Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic.
          type: string
        text:
          description: Suggested reply text.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion:
      description: Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri).
      properties:
        action:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
          description: Predefined client side actions that user can choose
        reply:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
          description: Predefined replies for user to select instead of typing
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmText:
      description: Rich Business Messaging (RBM) text response with suggestions.
      properties:
        rbmSuggestion:
          description: Optional. One or more suggestions to show to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          type: array
        text:
          description: Required. Text sent and displayed to the user.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo:
      description: Additional info about the select item for when it is triggered in a dialog.
      properties:
        key:
          description: Required. A unique key that will be sent back to the agent if this response is given.
          type: string
        synonyms:
          description: Optional. A list of synonyms that can also be used to trigger this item in dialog.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse:
      description: The simple response message containing speech or text.
      properties:
        displayText:
          description: Optional. The text to display.
          type: string
        ssml:
          description: One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.
          type: string
        textToSpeech:
          description: One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses:
      description: The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.
      properties:
        simpleResponses:
          description: Required. The list of simple responses.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSuggestion:
      description: The suggestion chip message that the user can tap to quickly post a reply to the conversation.
      properties:
        title:
          description: Required. The text shown the in the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSuggestions:
      description: The collection of suggestions.
      properties:
        suggestions:
          description: Required. The list of suggested replies.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTableCard:
      description: Table card for Actions on Google.
      properties:
        buttons:
          description: Optional. List of buttons for the card.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          type: array
        columnProperties:
          description: Optional. Display properties for the columns in this table.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          type: array
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Image which should be displayed on the card.
        rows:
          description: Optional. Rows in this table of data.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          type: array
        subtitle:
          description: Optional. Subtitle to the title.
          type: string
        title:
          description: Required. Title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTableCardCell:
      description: Cell of TableCardRow.
      properties:
        text:
          description: Required. Text in this cell.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTableCardRow:
      description: Row of TableCard.
      properties:
        cells:
          description: Optional. List of cells that make up this row.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          type: array
        dividerAfter:
          description: Optional. Whether to add a visual divider after this row.
          type: boolean
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio:
      description: Plays audio from a file in Telephony Gateway.
      properties:
        audioUri:
          description: Required. URI to a Google Cloud Storage object containing the audio to play, e.g., "gs://bucket/object". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech:
      description: Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config.
      properties:
        ssml:
          description: The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml).
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall:
      description: Transfers the call in Telephony Gateway.
      properties:
        phoneNumber:
          description: Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz).
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageText:
      description: The text response message.
      properties:
        text:
          description: Optional. The collection of the agent's responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentParameter:
      description: Represents intent parameters.
      properties:
        defaultValue:
          description: "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
          type: string
        displayName:
          description: Required. The name of the parameter.
          type: string
        entityTypeDisplayName:
          description: Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.
          type: string
        isList:
          description: Optional. Indicates whether the parameter represents a list of values.
          type: boolean
        mandatory:
          description: Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.
          type: boolean
        name:
          description: The unique identifier of this parameter.
          type: string
        prompts:
          description: Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.
          items:
            type: string
          type: array
        value:
          description: "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentSuggestion:
      description: Represents an intent suggestion.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: The display name of the intent.
          type: string
        intentV2:
          description: "The unique identifier of this intent. Format: `projects//locations//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentTrainingPhrase:
      description: Represents an example that the agent is trained on.
      properties:
        name:
          description: Output only. The unique identifier of this training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          type: array
        timesAddedCount:
          description: Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.
          format: int32
          type: integer
        type:
          description: Required. The type of the training phrase.
          enum:
            - TYPE_UNSPECIFIED
            - EXAMPLE
            - TEMPLATE
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
      type: object
    GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        alias:
          description: Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.
          type: string
        entityType:
          description: Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
        userDefined:
          description: Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.
          type: boolean
      type: object
    GoogleCloudDialogflowV2beta1KnowledgeAnswers:
      description: Represents the result of querying a Knowledge base.
      properties:
        answers:
          description: A list of answers from Knowledge Connector.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer:
      description: An answer from Knowledge Connector.
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document that answers this conversational query.
          type: string
        faqQuestion:
          description: The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.
          type: string
        matchConfidence:
          description: "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable."
          format: float
          type: number
        matchConfidenceLevel:
          description: "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer."
          enum:
            - MATCH_CONFIDENCE_LEVEL_UNSPECIFIED
            - LOW
            - MEDIUM
            - HIGH
          type: string
        source:
          description: "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        exportOperationMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1ExportOperationMetadata"
          description: Metadata for the Export Data Operation such as the destination of export.
        knowledgeBase:
          description: The name of the knowledge base interacted with during the operation.
          type: string
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2beta1Message:
      description: Represents a message posted into a conversation.
      properties:
        content:
          description: Required. The message content.
          type: string
        createTime:
          description: Output only. The time when the message was created in Contact Center AI.
          format: google-datetime
          readOnly: true
          type: string
        languageCode:
          description: 'Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        messageAnnotation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1MessageAnnotation"
          description: Output only. The annotation for the message.
          readOnly: true
        name:
          description: "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
          type: string
        participant:
          description: Output only. The participant that sends this message.
          readOnly: true
          type: string
        participantRole:
          description: Output only. The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          readOnly: true
          type: string
        sendTime:
          description: Optional. The time when the message was sent.
          format: google-datetime
          type: string
        sentimentAnalysis:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
          description: Output only. The sentiment analysis result for the message.
          readOnly: true
      type: object
    GoogleCloudDialogflowV2beta1MessageAnnotation:
      description: Represents the result of annotation for the message.
      properties:
        containEntities:
          description: Required. Indicates whether the text message contains entities.
          type: boolean
        parts:
          description: Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest:
      description: Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.
      properties:
        payload:
          additionalProperties:
            description: Properties of the object.
          description: 'Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.'
          type: object
        source:
          description: The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.
          type: string
        version:
          description: Optional. The version of the protocol used for this request. This field is AoG-specific.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1QueryResult:
      description: Represents the result of conversational query or event processing.
      properties:
        action:
          description: The action name from the matched intent.
          type: string
        allRequiredParamsPresent:
          description: "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
          type: boolean
        cancelsSlotFilling:
          description: Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
          type: boolean
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
          type: object
        fulfillmentMessages:
          description: The collection of rich messages to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage"
          type: array
        fulfillmentText:
          description: "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred."
          type: string
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Intent"
          description: "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        intentDetectionConfidence:
          description: The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
          format: float
          type: number
        knowledgeAnswers:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAnswers"
          description: The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`.
        languageCode:
          description: The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        outputContexts:
          description: The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Context"
          type: array
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        queryText:
          description: "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
          type: string
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
          description: The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.
        speechRecognitionConfidence:
          description: The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
          format: float
          type: number
        webhookPayload:
          additionalProperties:
            description: Properties of the object.
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.
          type: object
        webhookSource:
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1Sentiment:
      description: "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result."
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowV2beta1SentimentAnalysisResult:
      description: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
      properties:
        queryTextSentiment:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Sentiment"
          description: The sentiment analysis result for `query_text`.
      type: object
    GoogleCloudDialogflowV2beta1SessionEntityType:
      description: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).
      properties:
        entities:
          description: Required. The collection of entities associated with this session entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EntityTypeEntity"
          type: array
        entityOverrideMode:
          description: Required. Indicates whether the additional data should override or supplement the custom entity type definition.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
          type: string
        name:
          description: "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to add or update.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - DIALOGFLOW_ASSIST
            - CONVERSATION_SUMMARIZATION
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SmartReplyAnswer:
      description: Represents a smart reply answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        reply:
          description: The content of the reply.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestArticlesResponse:
      description: The response message for Participants.SuggestArticles.
      properties:
        articleAnswers:
          description: Output only. Articles ordered by score in descending order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1ArticleAnswer"
          type: array
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse:
      description: The response message for Participants.SuggestDialogflowAssists.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestDialogflowAssistsRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        dialogflowAssistAnswers:
          description: Output only. Multiple reply options provided by Dialogflow assist service. The order is based on the rank of the model prediction.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1DialogflowAssistAnswer"
          type: array
        latestMessage:
          description: "The name of the latest conversation message used to suggest answer. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse:
      description: The request message for Participants.SuggestFaqAnswers.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        faqAnswers:
          description: Output only. Answers extracted from FAQ documents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1FaqAnswer"
          type: array
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse:
      description: The response message for Participants.SuggestSmartReplies.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
        smartReplyAnswers:
          description: Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SmartReplyAnswer"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1SuggestionResult:
      description: One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Error status if the request failed.
        suggestArticlesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestArticlesResponse"
          description: SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
        suggestDialogflowAssistsResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse"
          description: SuggestDialogflowAssistsResponse if request is for DIALOGFLOW_ASSIST.
        suggestEntityExtractionResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse"
          description: SuggestDialogflowAssistsResponse if request is for ENTITY_EXTRACTION.
        suggestFaqAnswersResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse"
          description: SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
        suggestSmartRepliesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
          description: SuggestSmartRepliesResponse if request is for SMART_REPLY.
      type: object
    GoogleCloudDialogflowV2beta1WebhookRequest:
      description: The request message for a webhook call.
      properties:
        alternativeQueryResults:
          description: Alternative query results from KnowledgeService.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult"
          type: array
        originalDetectIntentRequest:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest"
          description: Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult"
          description: The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.
        responseId:
          description: The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.
          type: string
        session:
          description: "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,"
          type: string
      type: object
    GoogleCloudDialogflowV2beta1WebhookResponse:
      description: 'The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).'
      properties:
        endInteraction:
          description: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
          type: boolean
        followupEventInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EventInput"
          description: Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.
        fulfillmentMessages:
          description: Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage"
          type: array
        fulfillmentText:
          description: Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.
          type: string
        liveAgentHandoff:
          description: Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
          type: boolean
        outputContexts:
          description: Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Context"
          type: array
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
          type: object
        sessionEntityTypes:
          description: Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SessionEntityType"
          type: array
        source:
          description: Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.
          type: string
      type: object
    GoogleCloudDialogflowV3alpha1ConversationSignals:
      description: This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to BigQuery.
      properties:
        turnSignals:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1TurnSignals"
          description: Required. Turn signals for the current turn.
      type: object
    GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata:
      description: Metadata for CreateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata:
      description: Metadata for DeleteDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata:
      description: Metadata for ImportDocuments operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata:
      description: Metadata for ReloadDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1TurnSignals:
      description: Collection of all signals that were extracted for a single turn of the conversation.
      properties:
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        failureReasons:
          description: Failure reasons of the turn.
          items:
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
            type: string
          type: array
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        sentimentMagnitude:
          description: Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        sentimentScore:
          description: Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        triggeredAbandonmentEvent:
          description: Whether agent has triggered the event corresponding to user abandoning the conversation.
          type: boolean
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata:
      description: Metadata for UpdateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudLocationLocation"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeLatLng:
      description: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          format: double
          type: number
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          format: double
          type: number
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/dialogflow: View, manage and query your Dialogflow agents
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/dialogflow: View, manage and query your Dialogflow agents
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
