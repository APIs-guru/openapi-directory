# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2_query_parameters import GoogleCloudDialogflowV2QueryParameters

class TestGoogleCloudDialogflowV2QueryParameters(unittest.TestCase):
    """GoogleCloudDialogflowV2QueryParameters unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2QueryParameters:
        """Test GoogleCloudDialogflowV2QueryParameters
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2QueryParameters`
        """
        model = GoogleCloudDialogflowV2QueryParameters()
        if include_optional:
            return GoogleCloudDialogflowV2QueryParameters(
                contexts = [
                    openapi_client.models.google_cloud_dialogflow_v2_context.GoogleCloudDialogflowV2Context(
                        lifespan_count = 56, 
                        name = '', 
                        parameters = {
                            'key' : null
                            }, )
                    ],
                geo_location = openapi_client.models.google_type_lat_lng.GoogleTypeLatLng(
                    latitude = 1.337, 
                    longitude = 1.337, ),
                payload = {
                    'key' : null
                    },
                platform = '',
                reset_contexts = True,
                sentiment_analysis_request_config = openapi_client.models.google_cloud_dialogflow_v2_sentiment_analysis_request_config.GoogleCloudDialogflowV2SentimentAnalysisRequestConfig(
                    analyze_query_text_sentiment = True, ),
                session_entity_types = [
                    openapi_client.models.google_cloud_dialogflow_v2_session_entity_type.GoogleCloudDialogflowV2SessionEntityType(
                        entities = [
                            openapi_client.models.google_cloud_dialogflow_v2_entity_type_entity.GoogleCloudDialogflowV2EntityTypeEntity(
                                synonyms = [
                                    ''
                                    ], 
                                value = '', )
                            ], 
                        entity_override_mode = 'ENTITY_OVERRIDE_MODE_UNSPECIFIED', 
                        name = '', )
                    ],
                time_zone = '',
                webhook_headers = {
                    'key' : ''
                    }
            )
        else:
            return GoogleCloudDialogflowV2QueryParameters(
        )
        """

    def testGoogleCloudDialogflowV2QueryParameters(self):
        """Test GoogleCloudDialogflowV2QueryParameters"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
