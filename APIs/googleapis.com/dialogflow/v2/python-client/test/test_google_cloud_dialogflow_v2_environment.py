# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2_environment import GoogleCloudDialogflowV2Environment

class TestGoogleCloudDialogflowV2Environment(unittest.TestCase):
    """GoogleCloudDialogflowV2Environment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2Environment:
        """Test GoogleCloudDialogflowV2Environment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2Environment`
        """
        model = GoogleCloudDialogflowV2Environment()
        if include_optional:
            return GoogleCloudDialogflowV2Environment(
                agent_version = '',
                description = '',
                fulfillment = openapi_client.models.google_cloud_dialogflow_v2_fulfillment.GoogleCloudDialogflowV2Fulfillment(
                    display_name = '', 
                    enabled = True, 
                    features = [
                        openapi_client.models.google_cloud_dialogflow_v2_fulfillment_feature.GoogleCloudDialogflowV2FulfillmentFeature(
                            type = 'TYPE_UNSPECIFIED', )
                        ], 
                    generic_web_service = openapi_client.models.google_cloud_dialogflow_v2_fulfillment_generic_web_service.GoogleCloudDialogflowV2FulfillmentGenericWebService(
                        is_cloud_function = True, 
                        password = '', 
                        request_headers = {
                            'key' : ''
                            }, 
                        uri = '', 
                        username = '', ), 
                    name = '', ),
                name = '',
                state = 'STATE_UNSPECIFIED',
                text_to_speech_settings = openapi_client.models.google_cloud_dialogflow_v2_text_to_speech_settings.GoogleCloudDialogflowV2TextToSpeechSettings(
                    enable_text_to_speech = True, 
                    output_audio_encoding = 'OUTPUT_AUDIO_ENCODING_UNSPECIFIED', 
                    sample_rate_hertz = 56, 
                    synthesize_speech_configs = {
                        'key' : openapi_client.models.google_cloud_dialogflow_v2_synthesize_speech_config.GoogleCloudDialogflowV2SynthesizeSpeechConfig(
                            effects_profile_id = [
                                ''
                                ], 
                            pitch = 1.337, 
                            speaking_rate = 1.337, 
                            voice = openapi_client.models.google_cloud_dialogflow_v2_voice_selection_params.GoogleCloudDialogflowV2VoiceSelectionParams(
                                name = '', 
                                ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', ), 
                            volume_gain_db = 1.337, )
                        }, ),
                update_time = ''
            )
        else:
            return GoogleCloudDialogflowV2Environment(
        )
        """

    def testGoogleCloudDialogflowV2Environment(self):
        """Test GoogleCloudDialogflowV2Environment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
