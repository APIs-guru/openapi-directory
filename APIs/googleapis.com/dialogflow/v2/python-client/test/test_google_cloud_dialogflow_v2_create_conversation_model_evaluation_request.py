# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2_create_conversation_model_evaluation_request import GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest

class TestGoogleCloudDialogflowV2CreateConversationModelEvaluationRequest(unittest.TestCase):
    """GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest:
        """Test GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest`
        """
        model = GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest()
        if include_optional:
            return GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest(
                conversation_model_evaluation = openapi_client.models.google_cloud_dialogflow_v2_conversation_model_evaluation.GoogleCloudDialogflowV2ConversationModelEvaluation(
                    create_time = '', 
                    display_name = '', 
                    evaluation_config = openapi_client.models.google_cloud_dialogflow_v2_evaluation_config.GoogleCloudDialogflowV2EvaluationConfig(
                        datasets = [
                            openapi_client.models.google_cloud_dialogflow_v2_input_dataset.GoogleCloudDialogflowV2InputDataset(
                                dataset = '', )
                            ], 
                        smart_compose_config = openapi_client.models.google_cloud_dialogflow_v2_evaluation_config_smart_compose_config.GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig(
                            allowlist_document = '', 
                            max_result_count = 56, ), 
                        smart_reply_config = openapi_client.models.google_cloud_dialogflow_v2_evaluation_config_smart_reply_config.GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig(
                            allowlist_document = '', 
                            max_result_count = 56, ), ), 
                    name = '', 
                    raw_human_eval_template_csv = '', 
                    smart_reply_metrics = openapi_client.models.google_cloud_dialogflow_v2_smart_reply_metrics.GoogleCloudDialogflowV2SmartReplyMetrics(
                        allowlist_coverage = 1.337, 
                        conversation_count = '', 
                        top_n_metrics = [
                            openapi_client.models.google_cloud_dialogflow_v2_smart_reply_metrics_top_n_metrics.GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics(
                                n = 56, 
                                recall = 1.337, )
                            ], ), )
            )
        else:
            return GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest(
        )
        """

    def testGoogleCloudDialogflowV2CreateConversationModelEvaluationRequest(self):
        """Test GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
