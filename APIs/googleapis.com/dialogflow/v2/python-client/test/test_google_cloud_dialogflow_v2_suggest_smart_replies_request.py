# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2_suggest_smart_replies_request import GoogleCloudDialogflowV2SuggestSmartRepliesRequest

class TestGoogleCloudDialogflowV2SuggestSmartRepliesRequest(unittest.TestCase):
    """GoogleCloudDialogflowV2SuggestSmartRepliesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2SuggestSmartRepliesRequest:
        """Test GoogleCloudDialogflowV2SuggestSmartRepliesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2SuggestSmartRepliesRequest`
        """
        model = GoogleCloudDialogflowV2SuggestSmartRepliesRequest()
        if include_optional:
            return GoogleCloudDialogflowV2SuggestSmartRepliesRequest(
                context_size = 56,
                current_text_input = openapi_client.models.google_cloud_dialogflow_v2_text_input.GoogleCloudDialogflowV2TextInput(
                    language_code = '', 
                    text = '', ),
                latest_message = ''
            )
        else:
            return GoogleCloudDialogflowV2SuggestSmartRepliesRequest(
        )
        """

    def testGoogleCloudDialogflowV2SuggestSmartRepliesRequest(self):
        """Test GoogleCloudDialogflowV2SuggestSmartRepliesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
