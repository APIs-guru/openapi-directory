# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2_analyze_content_request import GoogleCloudDialogflowV2AnalyzeContentRequest

class TestGoogleCloudDialogflowV2AnalyzeContentRequest(unittest.TestCase):
    """GoogleCloudDialogflowV2AnalyzeContentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2AnalyzeContentRequest:
        """Test GoogleCloudDialogflowV2AnalyzeContentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2AnalyzeContentRequest`
        """
        model = GoogleCloudDialogflowV2AnalyzeContentRequest()
        if include_optional:
            return GoogleCloudDialogflowV2AnalyzeContentRequest(
                assist_query_params = openapi_client.models.google_cloud_dialogflow_v2_assist_query_parameters.GoogleCloudDialogflowV2AssistQueryParameters(
                    documents_metadata_filters = {
                        'key' : ''
                        }, ),
                cx_parameters = {
                    'key' : null
                    },
                event_input = openapi_client.models.google_cloud_dialogflow_v2_event_input.GoogleCloudDialogflowV2EventInput(
                    language_code = '', 
                    name = '', 
                    parameters = {
                        'key' : null
                        }, ),
                var_query_params = openapi_client.models.google_cloud_dialogflow_v2_query_parameters.GoogleCloudDialogflowV2QueryParameters(
                    contexts = [
                        openapi_client.models.google_cloud_dialogflow_v2_context.GoogleCloudDialogflowV2Context(
                            lifespan_count = 56, 
                            name = '', 
                            parameters = {
                                'key' : null
                                }, )
                        ], 
                    geo_location = openapi_client.models.google_type_lat_lng.GoogleTypeLatLng(
                        latitude = 1.337, 
                        longitude = 1.337, ), 
                    payload = {
                        'key' : null
                        }, 
                    platform = '', 
                    reset_contexts = True, 
                    sentiment_analysis_request_config = openapi_client.models.google_cloud_dialogflow_v2_sentiment_analysis_request_config.GoogleCloudDialogflowV2SentimentAnalysisRequestConfig(
                        analyze_query_text_sentiment = True, ), 
                    session_entity_types = [
                        openapi_client.models.google_cloud_dialogflow_v2_session_entity_type.GoogleCloudDialogflowV2SessionEntityType(
                            entities = [
                                openapi_client.models.google_cloud_dialogflow_v2_entity_type_entity.GoogleCloudDialogflowV2EntityTypeEntity(
                                    synonyms = [
                                        ''
                                        ], 
                                    value = '', )
                                ], 
                            entity_override_mode = 'ENTITY_OVERRIDE_MODE_UNSPECIFIED', 
                            name = '', )
                        ], 
                    time_zone = '', 
                    webhook_headers = {
                        'key' : ''
                        }, ),
                reply_audio_config = openapi_client.models.google_cloud_dialogflow_v2_output_audio_config.GoogleCloudDialogflowV2OutputAudioConfig(
                    audio_encoding = 'OUTPUT_AUDIO_ENCODING_UNSPECIFIED', 
                    sample_rate_hertz = 56, 
                    synthesize_speech_config = openapi_client.models.google_cloud_dialogflow_v2_synthesize_speech_config.GoogleCloudDialogflowV2SynthesizeSpeechConfig(
                        effects_profile_id = [
                            ''
                            ], 
                        pitch = 1.337, 
                        speaking_rate = 1.337, 
                        voice = openapi_client.models.google_cloud_dialogflow_v2_voice_selection_params.GoogleCloudDialogflowV2VoiceSelectionParams(
                            name = '', 
                            ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', ), 
                        volume_gain_db = 1.337, ), ),
                request_id = '',
                suggestion_input = openapi_client.models.google_cloud_dialogflow_v2_suggestion_input.GoogleCloudDialogflowV2SuggestionInput(
                    answer_record = '', ),
                text_input = openapi_client.models.google_cloud_dialogflow_v2_text_input.GoogleCloudDialogflowV2TextInput(
                    language_code = '', 
                    text = '', )
            )
        else:
            return GoogleCloudDialogflowV2AnalyzeContentRequest(
        )
        """

    def testGoogleCloudDialogflowV2AnalyzeContentRequest(self):
        """Test GoogleCloudDialogflowV2AnalyzeContentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
