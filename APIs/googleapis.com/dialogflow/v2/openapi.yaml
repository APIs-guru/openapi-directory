openapi: 3.0.0
servers:
  - url: https://dialogflow.googleapis.com/
x-hasEquivalentPaths: true
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Dialogflow API
  version: v2
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://dialogflow.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: dialogflow
externalDocs:
  url: https://cloud.google.com/dialogflow/
tags:
  - name: projects
paths:
  /v2/{conversationProfile}:clearSuggestionFeatureConfig:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Clears a suggestion feature from a conversation profile for the given participant role. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: ClearSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile"
      operationId: dialogflow.projects.locations.conversationProfiles.clearSuggestionFeatureConfig
      parameters:
        - description: "Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`."
          in: path
          name: conversationProfile
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{conversationProfile}:setSuggestionFeatureConfig:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Adds or updates a suggestion feature in a conversation profile. If the conversation profile contains the type of suggestion feature for the participant role, it will update it. Otherwise it will insert the suggestion feature. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: SetSuggestionFeatureConfigOperationMetadata - `response`: ConversationProfile If a long running operation to add or update suggestion feature config for the same conversation profile, participant role and suggestion feature type exists, please cancel the existing long running operation before sending such request, otherwise the request will be rejected."
      operationId: dialogflow.projects.locations.conversationProfiles.setSuggestionFeatureConfig
      parameters:
        - description: "Required. The Conversation Profile to add or update the suggestion feature config. Format: `projects//locations//conversationProfiles/`."
          in: path
          name: conversationProfile
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{conversation}/suggestions:searchKnowledge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Get answers for the given query based on knowledge documents.
      operationId: dialogflow.projects.locations.conversations.suggestions.searchKnowledge
      parameters:
        - description: "The conversation (between human agent and end user) where the search request is triggered. Format: `projects//locations//conversations/`."
          in: path
          name: conversation
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchKnowledgeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchKnowledgeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{conversation}/suggestions:suggestConversationSummary:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Suggests summary for a conversation based on specific historical messages. The range of the messages to be used for summary can be specified in the request.
      operationId: dialogflow.projects.locations.conversations.suggestions.suggestConversationSummary
      parameters:
        - description: "Required. The conversation to fetch suggestion for. Format: `projects//locations//conversations/`."
          in: path
          name: conversation
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestConversationSummaryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestConversationSummaryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:
    delete:
      description: "Deletes the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)"
      operationId: dialogflow.projects.locations.knowledgeBases.documents.delete
      parameters:
        - description: "Required. The name of the document to delete. Format: `projects//locations//knowledgeBases//documents/`."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. Force deletes the knowledge base. When set to true, any documents in the knowledge base are also deleted.
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: dialogflow.projects.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The resource view to apply to the returned intent.
          in: query
          name: intentView
          schema:
            enum:
              - INTENT_VIEW_UNSPECIFIED
              - INTENT_VIEW_FULL
            type: string
        - description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          in: query
          name: languageCode
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: "Updates the specified document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document"
      operationId: dialogflow.projects.locations.knowledgeBases.documents.patch
      parameters:
        - description: "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. Not specified means `update all`. Currently, only `display_name` can be updated, an InvalidArgument will be returned for attempting to update other fields.
          in: query
          name: updateMask
          schema:
            enum:
              - INTENT_VIEW_UNSPECIFIED
              - INTENT_VIEW_FULL
            type: string
        - description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Document"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: dialogflow.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudLocationListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: dialogflow.projects.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: dialogflow.projects.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:complete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Completes the specified conversation. Finished conversations are purged from the database after 30 days.
      operationId: dialogflow.projects.locations.conversations.complete
      parameters:
        - description: "Required. Resource identifier of the conversation to close. Format: `projects//locations//conversations/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2CompleteConversationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Conversation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:deploy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Deploys a model. If a model is already deployed, deploying it has no effect. A model can only serve prediction requests after it gets deployed. For article suggestion, custom model will not be used unless it is deployed. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: DeployConversationModelOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)"
      operationId: dialogflow.projects.locations.conversationModels.deploy
      parameters:
        - description: "Required. The conversation model to deploy. Format: `projects//conversationModels/`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2DeployConversationModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Exports a smart messaging candidate document into the specified destination. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document"
      operationId: dialogflow.projects.locations.knowledgeBases.documents.export
      parameters:
        - description: "Required. The name of the document to export. Format: `projects//locations//knowledgeBases//documents/`."
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ExportDocumentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:importConversationData:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Import data into the specified conversation dataset. Note that it is not allowed to import data to a conversation dataset that already has data in it. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: ImportConversationDataOperationMetadata - `response`: ImportConversationDataOperationResponse"
      operationId: dialogflow.projects.locations.conversationDatasets.importConversationData
      parameters:
        - description: "Required. Dataset resource name. Format: `projects//locations//conversationDatasets/`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ImportConversationDataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:reload:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Reloads the specified document from its specified source, content_uri or content. The previously loaded content of the document will be deleted. Note: Even when the content of the document has not changed, there still may be side effects because of internal implementation changes. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`."
      operationId: dialogflow.projects.locations.knowledgeBases.documents.reload
      parameters:
        - description: "Required. The name of the document to reload. Format: `projects//locations//knowledgeBases//documents/`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ReloadDocumentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{name}:undeploy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Undeploys a model. If the model is not deployed this method has no effect. If the model is currently being used: - For article suggestion, article suggestion will fallback to the default model if model is undeployed. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: UndeployConversationModelOperationMetadata - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty)"
      operationId: dialogflow.projects.locations.conversationModels.undeploy
      parameters:
        - description: "Required. The conversation model to undeploy. Format: `projects//conversationModels/`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2UndeployConversationModelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/agent:
    delete:
      description: Deletes the specified agent.
      operationId: dialogflow.projects.locations.deleteAgent
      parameters:
        - description: "Required. The project that the agent to delete is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    get:
      description: Retrieves the specified agent.
      operationId: dialogflow.projects.locations.getAgent
      parameters:
        - description: "Required. The project that the agent to fetch is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Agent"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates/updates the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.setAgent
      parameters:
        - description: "Required. The project of this agent. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The mask to control which fields get updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Agent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Agent"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/agent/validationResult:
    get:
      description: Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.
      operationId: dialogflow.projects.locations.agent.getValidationResult
      parameters:
        - description: "Required. The project that the agent is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
          in: query
          name: languageCode
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ValidationResult"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{parent}/agent:export:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Exports the specified agent to a ZIP file. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: ExportAgentResponse"
      operationId: dialogflow.projects.locations.agent.export
      parameters:
        - description: "Required. The project that the agent to export is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ExportAgentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/agent:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when importing is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.import
      parameters:
        - description: "Required. The project that the agent to import is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ImportAgentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/agent:restore:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) The operation only tracks when restoring is complete, not when it is done training. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.restore
      parameters:
        - description: "Required. The project that the agent to restore is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2RestoreAgentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/agent:search:
    get:
      description: Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id "-". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).
      operationId: dialogflow.projects.locations.agent.search
      parameters:
        - description: "Required. The project to list agents from. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchAgentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{parent}/agent:train:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Trains the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.train
      parameters:
        - description: "Required. The project that the agent to train is associated with. Format: `projects/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2TrainAgentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/answerRecords:
    get:
      description: Returns the list of all answer records in the specified project in reverse chronological order.
      operationId: dialogflow.projects.locations.answerRecords.list
      parameters:
        - description: "Required. The project to list all answer records for in reverse chronological order. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filters to restrict results to specific answer records. Marked deprecated as it hasn't been, and isn't currently, supported. For more information about filtering, see [API Filtering](https://aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The maximum number of records to return in a single page. The server may return fewer records than this. If unspecified, we use 10. The maximum is 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The ListAnswerRecordsResponse.next_page_token value returned from a previous list request used to continue listing on the next page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListAnswerRecordsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{parent}/contexts:
    delete:
      description: Deletes all active contexts in the specified session.
      operationId: dialogflow.projects.locations.agent.sessions.deleteContexts
      parameters:
        - description: "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
          in: path
          name: parent
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    get:
      description: Returns the list of all contexts in the specified session.
      operationId: dialogflow.projects.locations.agent.sessions.contexts.list
      parameters:
        - description: "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListContextsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a context. If the specified context already exists, overrides the context.
      operationId: dialogflow.projects.locations.agent.sessions.contexts.create
      parameters:
        - description: "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/conversationDatasets:
    get:
      description: Returns the list of all conversation datasets in the specified project and location.
      operationId: dialogflow.projects.locations.conversationDatasets.list
      parameters:
        - description: "Required. The project and location name to list all conversation datasets for. Format: `projects//locations/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Maximum number of conversation datasets to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListConversationDatasetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a new conversation dataset. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateConversationDatasetOperationMetadata - `response`: ConversationDataset"
      operationId: dialogflow.projects.locations.conversationDatasets.create
      parameters:
        - description: "Required. The project to create conversation dataset for. Format: `projects//locations/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationDataset"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/conversationModels:
    get:
      description: Lists conversation models.
      operationId: dialogflow.projects.locations.conversationModels.list
      parameters:
        - description: "Required. The project to list all conversation models for. Format: `projects/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Maximum number of conversation models to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListConversationModelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a model. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: CreateConversationModelOperationMetadata - `response`: ConversationModel"
      operationId: dialogflow.projects.locations.conversationModels.create
      parameters:
        - description: "The project to create conversation model for. Format: `projects/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationModel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/conversationProfiles:
    get:
      description: Returns the list of all conversation profiles in the specified project.
      operationId: dialogflow.projects.locations.conversationProfiles.list
      parameters:
        - description: "Required. The project to list all conversation profiles from. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListConversationProfilesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a conversation profile in the specified project. ConversationProfile.CreateTime and ConversationProfile.UpdateTime aren't populated in the response. You can retrieve them via GetConversationProfile API.
      operationId: dialogflow.projects.locations.conversationProfiles.create
      parameters:
        - description: "Required. The project to create a conversation profile for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationProfile"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationProfile"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/conversations:
    get:
      description: Returns the list of all conversations in the specified project.
      operationId: dialogflow.projects.locations.conversations.list
      parameters:
        - description: "Required. The project from which to list all conversation. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'A filter expression that filters conversations listed in the response. In general, the expression must specify the field name, a comparison operator, and the value to use for filtering: - The value must be a string, a number, or a boolean. - The comparison operator must be either `=`,`!=`, `>`, or `<`. - To filter on multiple expressions, separate the expressions with `AND` or `OR` (omitting both implies `AND`). - For clarity, expressions can be enclosed in parentheses. Only `lifecycle_state` can be filtered on in this way. For example, the following expression only returns `COMPLETED` conversations: `lifecycle_state = "COMPLETED"` For more information about filtering, see [API Filtering](https://aip.dev/160).'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListConversationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a new conversation. Conversations are auto-completed after 24 hours. Conversation Lifecycle: There are two stages during a conversation: Automated Agent Stage and Assist Stage. For Automated Agent Stage, there will be a dialogflow agent responding to user queries. For Assist Stage, there's no dialogflow agent responding to user queries. But we will provide suggestions which are generated from conversation. If Conversation.conversation_profile is configured for a dialogflow agent, conversation will start from `Automated Agent Stage`, otherwise, it will start from `Assist Stage`. And during `Automated Agent Stage`, once an Intent with Intent.live_agent_handoff is triggered, conversation will transfer to Assist Stage."
      operationId: dialogflow.projects.locations.conversations.create
      parameters:
        - description: "Required. Resource identifier of the project creating the conversation. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Identifier of the conversation. Generally it's auto generated by Google. Only set it if you cannot wait for the response to return a auto-generated one to you. The conversation ID must be compliant with the regression fomula `a-zA-Z*` with the characters length in range of [3,64]. If the field is provided, the caller is resposible for 1. the uniqueness of the ID, otherwise the request will be rejected. 2. the consistency for whether to use custom ID or not under a project to better ensure uniqueness.
          in: query
          name: conversationId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Conversation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Conversation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/documents:
    get:
      description: Returns the list of all documents of the knowledge base.
      operationId: dialogflow.projects.locations.knowledgeBases.documents.list
      parameters:
        - description: "Required. The knowledge base to list all documents for. Format: `projects//locations//knowledgeBases/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'The filter expression used to filter documents returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported: * knowledge_types with has(:) operator * display_name with has(:) operator * state with equals(=) operator Examples: * "knowledge_types:FAQ" matches documents with FAQ knowledge type. * "display_name:customer" matches documents whose display name contains "customer". * "state=ACTIVE" matches documents with ACTIVE state. * "knowledge_types:FAQ AND state=ACTIVE" matches all active FAQ documents. For more information about filtering, see [API Filtering](https://aip.dev/160).'
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 10 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListDocumentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a new document. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: Document"
      operationId: dialogflow.projects.locations.knowledgeBases.documents.create
      parameters:
        - description: "Required. The knowledge base to create a document for. Format: `projects//locations//knowledgeBases/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Document"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/documents:import:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates documents by importing data from external sources. Dialogflow supports up to 350 documents in each request. If you try to import more, Dialogflow will return an error. This method is a [long-running operation](https://cloud.google.com/dialogflow/cx/docs/how/long-running-operation). The returned `Operation` type has the following method-specific fields: - `metadata`: KnowledgeOperationMetadata - `response`: ImportDocumentsResponse"
      operationId: dialogflow.projects.locations.knowledgeBases.documents.import
      parameters:
        - description: "Required. The knowledge base to import documents into. Format: `projects//locations//knowledgeBases/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2ImportDocumentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/entities:batchCreate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates multiple new entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.entityTypes.entities.batchCreate
      parameters:
        - description: "Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/entities:batchDelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Deletes entities in the specified entity type. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.entityTypes.entities.batchDelete
      parameters:
        - description: "Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/entities:batchUpdate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training). "
      operationId: dialogflow.projects.locations.agent.entityTypes.entities.batchUpdate
      parameters:
        - description: "Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchUpdateEntitiesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/entityTypes:
    get:
      description: Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
      operationId: dialogflow.projects.locations.agent.sessions.entityTypes.list
      parameters:
        - description: "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.
      operationId: dialogflow.projects.locations.agent.sessions.entityTypes.create
      parameters:
        - description: "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SessionEntityType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SessionEntityType"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/entityTypes:batchDelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Deletes entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.entityTypes.batchDelete
      parameters:
        - description: "Required. The name of the agent to delete all entities types for. Format: `projects//agent`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/entityTypes:batchUpdate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Updates/Creates multiple entity types in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateEntityTypesResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.entityTypes.batchUpdate
      parameters:
        - description: "Required. The name of the agent to update or create entity types in. Format: `projects//agent`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/environments:
    get:
      description: Returns the list of all non-default environments of the specified agent.
      operationId: dialogflow.projects.locations.agent.environments.list
      parameters:
        - description: "Required. The agent to list all environments from. Format: - `projects//agent` - `projects//locations//agent`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListEnvironmentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an agent environment.
      operationId: dialogflow.projects.locations.agent.environments.create
      parameters:
        - description: "Required. The agent to create an environment for. Supported formats: - `projects//agent` - `projects//locations//agent`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The unique id of the new environment.
          in: query
          name: environmentId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Environment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Environment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/evaluations:
    get:
      description: Lists evaluations of a conversation model.
      operationId: dialogflow.projects.locations.conversationModels.evaluations.list
      parameters:
        - description: "Required. The conversation model resource name. Format: `projects//conversationModels/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Maximum number of evaluations to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates evaluation of a conversation model.
      operationId: dialogflow.projects.locations.conversationModels.evaluations.create
      parameters:
        - description: "Required. The conversation model resource name. Format: `projects//locations//conversationModels/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/history:
    get:
      description: Gets the history of the specified environment.
      operationId: dialogflow.projects.locations.agent.environments.getHistory
      parameters:
        - description: "Required. The name of the environment to retrieve history for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2EnvironmentHistory"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{parent}/intents:
    get:
      description: Returns the list of all intents in the specified agent.
      operationId: dialogflow.projects.locations.agent.intents.list
      parameters:
        - description: "Required. The agent to list all intents from. Format: `projects//agent` or `projects//locations//agent`. Alternatively, you can specify the environment to list intents for. Format: `projects//agent/environments/` or `projects//locations//agent/environments/`. Note: training phrases of the intents will not be returned for non-draft environment."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The resource view to apply to the returned intent.
          in: query
          name: intentView
          schema:
            enum:
              - INTENT_VIEW_UNSPECIFIED
              - INTENT_VIEW_FULL
            type: string
        - description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          in: query
          name: languageCode
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListIntentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates an intent in the specified agent. Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.intents.create
      parameters:
        - description: "Required. The agent to create a intent for. Format: `projects//agent`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The resource view to apply to the returned intent.
          in: query
          name: intentView
          schema:
            enum:
              - INTENT_VIEW_UNSPECIFIED
              - INTENT_VIEW_FULL
            type: string
        - description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          in: query
          name: languageCode
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/intents:batchDelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Deletes intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: An [Empty message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#empty) Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.intents.batchDelete
      parameters:
        - description: "Required. The name of the agent to delete all entities types for. Format: `projects//agent`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/intents:batchUpdate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Updates/Creates multiple intents in the specified agent. This method is a [long-running operation](https://cloud.google.com/dialogflow/es/docs/how/long-running-operations). The returned `Operation` type has the following method-specific fields: - `metadata`: An empty [Struct message](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#struct) - `response`: BatchUpdateIntentsResponse Note: You should always train an agent prior to sending it queries. See the [training documentation](https://cloud.google.com/dialogflow/es/docs/training)."
      operationId: dialogflow.projects.locations.agent.intents.batchUpdate
      parameters:
        - description: "Required. The name of the agent to update or create intents in. Format: `projects//agent`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2BatchUpdateIntentsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/knowledgeBases:
    get:
      description: Returns the list of all knowledge bases of the specified agent.
      operationId: dialogflow.projects.locations.knowledgeBases.list
      parameters:
        - description: "Required. The project to list of knowledge bases for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "The filter expression used to filter knowledge bases returned by the list method. The expression has the following syntax: [AND ] ... The following fields and operators are supported: * display_name with has(:) operator * language_code with equals(=) operator Examples: * 'language_code=en-us' matches knowledge bases with en-us language code. * 'display_name:articles' matches knowledge bases whose display name contains \"articles\". * 'display_name:\"Best Articles\"' matches knowledge bases whose display name contains \"Best Articles\". * 'language_code=en-gb AND display_name=articles' matches all knowledge bases whose display name contains \"articles\" and whose language code is \"en-gb\". Note: An empty filter string (i.e. \"\") is a no-op and will result in no filtering. For more information about filtering, see [API Filtering](https://aip.dev/160)."
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of items to return in a single page. By default 10 and at most 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListKnowledgeBasesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a knowledge base.
      operationId: dialogflow.projects.locations.knowledgeBases.create
      parameters:
        - description: "Required. The project to create a knowledge base for. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2KnowledgeBase"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2KnowledgeBase"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/messages:
    get:
      description: Lists messages that belong to a given conversation. `messages` are ordered by `create_time` in descending order. To fetch updates without duplication, send request with filter `create_time_epoch_microseconds > [first item's create_time of previous request]` and empty page_token.
      operationId: dialogflow.projects.locations.conversations.messages.list
      parameters:
        - description: "Required. The name of the conversation to list messages for. Format: `projects//locations//conversations/`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter on message fields. Currently predicates on `create_time` and `create_time_epoch_microseconds` are supported. `create_time` only support milliseconds accuracy. E.g., `create_time_epoch_microseconds > 1551790877964485` or `create_time > 2017-01-15T01:30:15.01Z`. For more information about filtering, see [API Filtering](https://aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListMessagesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{parent}/participants:
    get:
      description: Returns the list of all participants in the specified conversation.
      operationId: dialogflow.projects.locations.conversations.participants.list
      parameters:
        - description: "Required. The conversation to list all participants from. Format: `projects//locations//conversations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListParticipantsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new participant in a conversation.
      operationId: dialogflow.projects.locations.conversations.participants.create
      parameters:
        - description: "Required. Resource identifier of the conversation adding the participant. Format: `projects//locations//conversations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Participant"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Participant"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/suggestions:generateStatelessSummary:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Generates and returns a summary for a conversation that does not have a resource created for it.
      operationId: dialogflow.projects.suggestions.generateStatelessSummary
      parameters:
        - description: "Required. The parent resource to charge for the Summary's generation. Format: `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2GenerateStatelessSummaryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2GenerateStatelessSummaryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/suggestions:searchKnowledge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Get answers for the given query based on knowledge documents.
      operationId: dialogflow.projects.suggestions.searchKnowledge
      parameters:
        - description: "The parent resource contains the conversation profile Format: 'projects/' or `projects//locations/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchKnowledgeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchKnowledgeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/suggestions:suggestArticles:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets suggested articles for a participant based on specific historical messages.
      operationId: dialogflow.projects.locations.conversations.participants.suggestions.suggestArticles
      parameters:
        - description: "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestArticlesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestArticlesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/suggestions:suggestFaqAnswers:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets suggested faq answers for a participant based on specific historical messages.
      operationId: dialogflow.projects.locations.conversations.participants.suggestions.suggestFaqAnswers
      parameters:
        - description: "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestFaqAnswersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/suggestions:suggestSmartReplies:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets smart replies for a participant based on specific historical messages.
      operationId: dialogflow.projects.locations.conversations.participants.suggestions.suggestSmartReplies
      parameters:
        - description: "Required. The name of the participant to fetch suggestion for. Format: `projects//locations//conversations//participants/`."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestSmartRepliesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestSmartRepliesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{parent}/versions:
    get:
      description: Returns the list of all versions of the specified agent.
      operationId: dialogflow.projects.locations.agent.versions.list
      parameters:
        - description: "Required. The agent to list all versions from. Supported formats: - `projects//agent` - `projects//locations//agent`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The next_page_token value returned from a previous list request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2ListVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an agent version. The new version points to the agent instance in the "default" environment.
      operationId: dialogflow.projects.locations.agent.versions.create
      parameters:
        - description: "Required. The agent to create a version for. Supported formats: - `projects//agent` - `projects//locations//agent`"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2Version"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2Version"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{participant}:analyzeContent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Adds a text (chat, for example), or audio (phone recording, for example) message from a participant into the conversation. Note: Always use agent versions for production traffic sent to virtual agents. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions)."
      operationId: dialogflow.projects.locations.conversations.participants.analyzeContent
      parameters:
        - description: "Required. The name of the participant this text comes from. Format: `projects//locations//conversations//participants/`."
          in: path
          name: participant
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2AnalyzeContentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2AnalyzeContentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
  /v2/{session}:detectIntent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. If you might use [Agent Assist](https://cloud.google.com/dialogflow/docs/#aa) or other CCAI products now or in the future, consider using AnalyzeContent instead of `DetectIntent`. `AnalyzeContent` has additional functionality for Agent Assist and other CCAI products. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions)."
      operationId: dialogflow.projects.locations.agent.sessions.detectIntent
      parameters:
        - description: "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment (`Environment ID` might be referred to as environment name at some places). If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions)."
          in: path
          name: session
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDialogflowV2DetectIntentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDialogflowV2DetectIntentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/dialogflow
          Oauth2c:
            - https://www.googleapis.com/auth/dialogflow
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudDialogflowCxV3AdvancedSettings:
      description: "Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter."
      properties:
        audioExportGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GcsDestination"
          description: "If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level"
        dtmfSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings"
          description: "Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level."
        loggingSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings"
          description: "Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level."
      type: object
    GoogleCloudDialogflowCxV3AdvancedSettingsDtmfSettings:
      description: Define behaviors for DTMF (dual tone multi frequency).
      properties:
        enabled:
          description: If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
          type: boolean
        finishDigit:
          description: The digit that terminates a DTMF digit sequence.
          type: string
        maxDigits:
          description: Max length of DTMF digits.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3AdvancedSettingsLoggingSettings:
      description: Define behaviors on logging.
      properties:
        enableInteractionLogging:
          description: If true, DF Interaction logging is currently enabled.
          type: boolean
        enableStackdriverLogging:
          description: If true, StackDriver logging is currently enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3AudioInput:
      description: Represents the natural speech audio to be processed.
      properties:
        audio:
          description: The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
          format: byte
          type: string
        config:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3InputAudioConfig"
          description: Required. Instructs the speech recognizer how to process the speech audio.
      type: object
    GoogleCloudDialogflowCxV3BargeInConfig:
      description: "Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length from the the start of the input audio. No-speech event is a response with END_OF_UTTERANCE without any transcript following up."
      properties:
        noBargeInDuration:
          description: Duration that is not eligible for barge-in at the beginning of the input audio.
          format: google-duration
          type: string
        totalDuration:
          description: Total duration for the playback at the beginning of the input audio.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3BatchRunTestCasesMetadata:
      description: Metadata returned for the TestCases.BatchRunTestCases long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3BatchRunTestCasesResponse:
      description: The response message for TestCases.BatchRunTestCases.
      properties:
        results:
          description: The test case results. The detailed conversation turns are empty in this response.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ContinuousTestResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        name:
          description: "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`."
          type: string
        result:
          description: The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not.
          enum:
            - AGGREGATED_TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        runTime:
          description: Time when the continuous testing run starts.
          format: google-datetime
          type: string
        testCaseResults:
          description: A list of individual test case results names in this continuous test run.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ConversationSignals:
      description: This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to BigQuery.
      properties:
        turnSignals:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TurnSignals"
          description: Required. Turn signals for the current turn.
      type: object
    GoogleCloudDialogflowCxV3ConversationTurn:
      description: One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
      properties:
        userInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurnUserInput"
          description: The user input.
        virtualAgentOutput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput"
          description: The virtual agent output.
      type: object
    GoogleCloudDialogflowCxV3ConversationTurnUserInput:
      description: The input from the human user.
      properties:
        enableSentimentAnalysis:
          description: Whether sentiment analysis is enabled.
          type: boolean
        injectedParameters:
          additionalProperties:
            description: Properties of the object.
          description: Parameters that need to be injected into the conversation during intent detection.
          type: object
        input:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3QueryInput"
          description: Supports text input, event input, dtmf input in the test case.
        isWebhookEnabled:
          description: If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3ConversationTurnVirtualAgentOutput:
      description: The output from the virtual agent.
      properties:
        currentPage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Page"
          description: The Page on which the utterance was spoken. Only name and displayName will be set.
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
          type: object
        differences:
          description: Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestRunDifference"
          readOnly: true
          type: array
        sessionParameters:
          additionalProperties:
            description: Properties of the object.
          description: The session parameters available to the bot at this point.
          type: object
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Response error from the agent in the test result. If set, other output is empty.
        textResponses:
          description: The text responses from the agent for the turn.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageText"
          type: array
        triggeredIntent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Intent"
          description: The Intent that triggered the response. Only name and displayName will be set.
      type: object
    GoogleCloudDialogflowCxV3CreateDocumentOperationMetadata:
      description: Metadata for CreateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3CreateVersionOperationMetadata:
      description: Metadata associated with the long running operation for Versions.CreateVersion.
      properties:
        version:
          description: "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3DataStoreConnection:
      description: A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
      properties:
        dataStore:
          description: "The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`"
          type: string
        dataStoreType:
          description: The type of the connected data store.
          enum:
            - DATA_STORE_TYPE_UNSPECIFIED
            - PUBLIC_WEB
            - UNSTRUCTURED
            - STRUCTURED
          type: string
      type: object
    GoogleCloudDialogflowCxV3DeleteDocumentOperationMetadata:
      description: Metadata for DeleteDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3DeployFlowMetadata:
      description: Metadata returned for the Environments.DeployFlow long running operation.
      properties:
        testErrors:
          description: Errors of running deployment tests.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3DeployFlowResponse:
      description: The response message for Environments.DeployFlow.
      properties:
        deployment:
          description: "The name of the flow version Deployment. Format: `projects//locations//agents// environments//deployments/`."
          type: string
        environment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Environment"
          description: The updated environment where the flow is deployed.
      type: object
    GoogleCloudDialogflowCxV3DtmfInput:
      description: Represents the input for dtmf event.
      properties:
        digits:
          description: The dtmf digits.
          type: string
        finishDigit:
          description: The finish digit (if any).
          type: string
      type: object
    GoogleCloudDialogflowCxV3Environment:
      description: Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.
      properties:
        description:
          description: The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.
          type: string
        name:
          description: "The name of the environment. Format: `projects//locations//agents//environments/`."
          type: string
        testCasesConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig"
          description: The test cases config for continuous tests of this environment.
        updateTime:
          description: Output only. Update time of this environment.
          format: google-datetime
          readOnly: true
          type: string
        versionConfigs:
          description: A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EnvironmentVersionConfig"
          type: array
        webhookConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EnvironmentWebhookConfig"
          description: The webhook configuration for this environment.
      type: object
    GoogleCloudDialogflowCxV3EnvironmentTestCasesConfig:
      description: The configuration for continuous tests.
      properties:
        enableContinuousRun:
          description: Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
          type: boolean
        enablePredeploymentRun:
          description: Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
          type: boolean
        testCases:
          description: "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`"
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3EnvironmentVersionConfig:
      description: Configuration for the version.
      properties:
        version:
          description: "Required. Format: projects//locations//agents//flows//versions/."
          type: string
      type: object
    GoogleCloudDialogflowCxV3EnvironmentWebhookConfig:
      description: Configuration for webhooks.
      properties:
        webhookOverrides:
          description: The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Webhook"
          type: array
      type: object
    GoogleCloudDialogflowCxV3EventHandler:
      description: "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow."
      properties:
        event:
          description: Required. The name of the event to handle.
          type: string
        name:
          description: Output only. The unique identifier of this event handler.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
      type: object
    GoogleCloudDialogflowCxV3EventInput:
      description: Represents the event to trigger.
      properties:
        event:
          description: Name of the event.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Uncompressed raw byte content for agent. This field is populated if none of `agent_uri` and `git_destination` are specified in ExportAgentRequest.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated if `agent_uri` is specified in ExportAgentRequest.
          type: string
        commitSha:
          description: Commit SHA of the git push. This field is populated if `git_destination` is specified in ExportAgentRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ExportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ExportEntityTypesResponse:
      description: The response message for EntityTypes.ExportEntityTypes.
      properties:
        entityTypesContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3InlineDestination"
          description: Uncompressed byte content for entity types. This field is populated only if `entity_types_content_inline` is set to true in ExportEntityTypesRequest.
        entityTypesUri:
          description: The URI to a file containing the exported entity types. This field is populated only if `entity_types_uri` is specified in ExportEntityTypesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportFlowResponse:
      description: The response message for Flows.ExportFlow.
      properties:
        flowContent:
          description: Uncompressed raw byte content for flow.
          format: byte
          type: string
        flowUri:
          description: The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportIntentsMetadata:
      description: Metadata returned for the Intents.ExportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ExportIntentsResponse:
      description: The response message for Intents.ExportIntents.
      properties:
        intentsContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3InlineDestination"
          description: Uncompressed byte content for intents. This field is populated only if `intents_content_inline` is set to true in ExportIntentsRequest.
        intentsUri:
          description: The URI to a file containing the exported intents. This field is populated only if `intents_uri` is specified in ExportIntentsRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ExportTestCasesMetadata:
      description: Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ExportTestCasesResponse:
      description: The response message for TestCases.ExportTestCases.
      properties:
        content:
          description: Uncompressed raw byte content for test cases.
          format: byte
          type: string
        gcsUri:
          description: The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3Form:
      description: A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
      properties:
        parameters:
          description: Parameters to collect from the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FormParameter"
          type: array
      type: object
    GoogleCloudDialogflowCxV3FormParameter:
      description: Represents a form parameter.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings"
          description: Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
        defaultValue:
          description: The default value of an optional parameter. If the parameter is required, the default value will be ignored.
        displayName:
          description: Required. The human-readable name of the parameter, unique within the form.
          type: string
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        fillBehavior:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FormParameterFillBehavior"
          description: Required. Defines fill behavior for the parameter.
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
        required:
          description: Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3FormParameterFillBehavior:
      description: Configuration for how the filling of a parameter should be handled.
      properties:
        initialPromptFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
        repromptEventHandlers:
          description: "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EventHandler"
          type: array
      type: object
    GoogleCloudDialogflowCxV3Fulfillment:
      description: "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both."
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings"
          description: Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
        conditionalCases:
          description: Conditional cases for this fulfillment.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          type: array
        enableGenerativeFallback:
          description: If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
          type: boolean
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          type: array
        returnPartialResponses:
          description: "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
          type: boolean
        setParameterActions:
          description: Set parameter values before executing the webhook.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentSetParameterAction"
          type: array
        tag:
          description: The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
          type: string
        webhook:
          description: "The webhook to call. Format: `projects//locations//agents//webhooks/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3FulfillmentConditionalCases:
      description: A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
      properties:
        cases:
          description: A list of cascading if-else conditions.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCase:
      description: Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
      properties:
        caseContent:
          description: A list of case content.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent"
          type: array
        condition:
          description: The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
      type: object
    GoogleCloudDialogflowCxV3FulfillmentConditionalCasesCaseCaseContent:
      description: The list of messages or conditional cases to activate for this case.
      properties:
        additionalCases:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3FulfillmentConditionalCases"
          description: Additional cases to be evaluated.
        message:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          description: Returned message.
      type: object
    GoogleCloudDialogflowCxV3FulfillmentSetParameterAction:
      description: Setting a parameter value.
      properties:
        parameter:
          description: Display name of the parameter.
          type: string
        value:
          description: The new value of the parameter. A null value clears the parameter.
      type: object
    GoogleCloudDialogflowCxV3GcsDestination:
      description: Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
      properties:
        uri:
          description: "Required. The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation."
          type: string
      type: object
    GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3ImportDocumentsOperationMetadata:
      description: Metadata for ImportDocuments operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ImportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ImportEntityTypesResponse:
      description: The response message for EntityTypes.ImportEntityTypes.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportEntityTypesRequest.
        entityTypes:
          description: "The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportEntityTypesResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        entityTypeDisplayNames:
          description: Display names of conflicting entity types.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportFlowResponse:
      description: The response message for Flows.ImportFlow.
      properties:
        flow:
          description: "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3ImportIntentsMetadata:
      description: Metadata returned for the Intents.ImportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ImportIntentsResponse:
      description: The response message for Intents.ImportIntents.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportIntentsRequest.
        intents:
          description: "The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportIntentsResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        intentDisplayNames:
          description: Display names of conflicting intents.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportTestCasesMetadata:
      description: Metadata returned for the TestCases.ImportTestCases long running operation.
      properties:
        errors:
          description: Errors for failed test cases.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ImportTestCasesResponse:
      description: The response message for TestCases.ImportTestCases.
      properties:
        names:
          description: "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3InlineDestination:
      description: Inline destination for a Dialogflow operation that writes or exports objects (e.g. intents) outside of Dialogflow.
      properties:
        content:
          description: Output only. The uncompressed byte content for the objects. Only populated in responses.
          format: byte
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3InputAudioConfig:
      description: Instructs the speech recognizer on how to process the audio content.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
          type: string
        bargeInConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3BargeInConfig"
          description: Configuration of barge-in behavior during the streaming of input audio.
        enableWordInfo:
          description: Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
          type: boolean
        model:
          description: Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: string
        modelVariant:
          description: Optional. Which variant of the Speech model to use.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
          type: string
        optOutConformerModelMigration:
          description: If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow CX Speech model migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
          type: boolean
        phraseHints:
          description: Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
          items:
            type: string
          type: array
        sampleRateHertz:
          description: Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
          format: int32
          type: integer
        singleUtterance:
          description: "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3Intent:
      description: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: Required. The human-readable name of the intent, unique within the agent.
          type: string
        isFallback:
          description: Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys.contextual\" means the intent is a contextual intent."
          type: object
        name:
          description: "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          description: The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentParameter"
          type: array
        priority:
          description: The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        trainingPhrases:
          description: The collection of training phrases the agent is trained on to identify the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentTrainingPhrase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3IntentInput:
      description: Represents the intent to trigger programmatically rather than as a result of natural language processing.
      properties:
        intent:
          description: "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3IntentParameter:
      description: Represents an intent parameter.
      properties:
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        id:
          description: Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3IntentTrainingPhrase:
      description: Represents an example that the agent is trained on to identify the intent.
      properties:
        id:
          description: Output only. The unique identifier of the training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentTrainingPhrasePart"
          type: array
        repeatCount:
          description: Indicates how many times this example was added to the intent.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        parameterId:
          description: The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
      type: object
    GoogleCloudDialogflowCxV3KnowledgeConnectorSettings:
      description: The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
      properties:
        dataStoreConnections:
          description: Optional. List of related data store connections.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3DataStoreConnection"
          type: array
        enabled:
          description: Whether Knowledge Connector is enabled or not.
          type: boolean
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
      type: object
    GoogleCloudDialogflowCxV3Page:
      description: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AdvancedSettings"
          description: Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
        description:
          description: The description of the page. The maximum length is 500 characters.
          type: string
        displayName:
          description: Required. The human-readable name of the page, unique within the flow.
          type: string
        entryFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to call when the session is entering the page.
        eventHandlers:
          description: Handlers associated with the page to handle events such as webhook errors, no match or no input.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EventHandler"
          type: array
        form:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Form"
          description: The form associated with the page, used for collecting parameters relevant to the page.
        knowledgeConnectorSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3KnowledgeConnectorSettings"
          description: Optional. Knowledge connector configuration.
        name:
          description: "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
          type: string
        transitionRouteGroups:
          description: "Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups."
          items:
            type: string
          type: array
        transitionRoutes:
          description: "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TransitionRoute"
          type: array
      type: object
    GoogleCloudDialogflowCxV3PageInfo:
      description: Represents page information communicated to and from the webhook.
      properties:
        currentPage:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
          type: string
        displayName:
          description: Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.
          type: string
        formInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfoFormInfo"
          description: Optional for both WebhookRequest and WebhookResponse. Information about the form.
      type: object
    GoogleCloudDialogflowCxV3PageInfoFormInfo:
      description: Represents form information.
      properties:
        parameterInfo:
          description: Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo"
          type: array
      type: object
    GoogleCloudDialogflowCxV3PageInfoFormInfoParameterInfo:
      description: Represents parameter information.
      properties:
        displayName:
          description: Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.
          type: string
        justCollected:
          description: Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.
          type: boolean
        required:
          description: Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
        state:
          description: Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.
          enum:
            - PARAMETER_STATE_UNSPECIFIED
            - EMPTY
            - INVALID
            - FILLED
          type: string
        value:
          description: Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value.
      type: object
    GoogleCloudDialogflowCxV3QueryInput:
      description: "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed by the client."
      properties:
        audio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3AudioInput"
          description: The natural language speech audio to be processed.
        dtmf:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3DtmfInput"
          description: The DTMF event to be handled.
        event:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3EventInput"
          description: The event to be triggered.
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3IntentInput"
          description: The intent to be triggered.
        languageCode:
          description: Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
          type: string
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TextInput"
          description: The natural language text to be processed.
      type: object
    GoogleCloudDialogflowCxV3ReloadDocumentOperationMetadata:
      description: Metadata for ReloadDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3ResponseMessage:
      description: "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard."
      properties:
        channel:
          description: The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
          type: string
        conversationSuccess:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess"
          description: Indicates that the conversation succeeded.
        endInteraction:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageEndInteraction"
          description: Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
          readOnly: true
        knowledgeInfoCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard"
          description: Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        liveAgentHandoff:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff"
          description: Hands off conversation to a human agent.
        mixedAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageMixedAudio"
          description: Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
          readOnly: true
        outputAudioText:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText"
          description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Returns a response containing a custom, platform-specific payload.
          type: object
        playAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessagePlayAudio"
          description: Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        responseType:
          description: Response type.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - ENTRY_PROMPT
            - PARAMETER_PROMPT
            - HANDLER_PROMPT
          type: string
        telephonyTransferCall:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall"
          description: A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageText"
          description: Returns a text response.
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageConversationSuccess:
      description: "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageEndInteraction:
      description: Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageKnowledgeInfoCard:
      description: Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageLiveAgentHandoff:
      description: "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageMixedAudio:
      description: Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties:
        segments:
          description: Segments this audio response is composed of.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment"
          type: array
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageMixedAudioSegment:
      description: Represents one segment of audio.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
          readOnly: true
          type: boolean
        audio:
          description: Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
          format: byte
          type: string
        uri:
          description: Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageOutputAudioText:
      description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        ssml:
          description: The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessagePlayAudio:
      description: Specifies an audio clip to be played by the client as part of the response.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        audioUri:
          description: Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageTelephonyTransferCall:
      description: Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
      properties:
        phoneNumber:
          description: Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
      type: object
    GoogleCloudDialogflowCxV3ResponseMessageText:
      description: The text response message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        text:
          description: Required. A collection of text responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3RunContinuousTestMetadata:
      description: Metadata returned for the Environments.RunContinuousTest long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3RunContinuousTestResponse:
      description: The response message for Environments.RunContinuousTest.
      properties:
        continuousTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ContinuousTestResult"
          description: The result for a continuous test run.
      type: object
    GoogleCloudDialogflowCxV3RunTestCaseMetadata:
      description: Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3RunTestCaseResponse:
      description: The response message for TestCases.RunTestCase.
      properties:
        result:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult"
          description: The result.
      type: object
    GoogleCloudDialogflowCxV3SessionInfo:
      description: Represents session information communicated to and from the webhook.
      properties:
        parameters:
          additionalProperties: {}
          description: Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
          type: object
        session:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
          type: string
      type: object
    GoogleCloudDialogflowCxV3TestCase:
      description: Represents a test case.
      properties:
        creationTime:
          description: Output only. When the test was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
          type: string
        lastTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCaseResult"
          description: The latest test result.
        name:
          description: "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
          type: string
        notes:
          description: Additional freeform notes about the test case. Limit of 400 characters.
          type: string
        tags:
          description: Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
          items:
            type: string
          type: array
        testCaseConversationTurns:
          description: The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurn"
          type: array
        testConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestConfig"
          description: Config for the test case.
      type: object
    GoogleCloudDialogflowCxV3TestCaseError:
      description: Error info for importing a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test case.
        testCase:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3TestCase"
          description: The test case.
      type: object
    GoogleCloudDialogflowCxV3TestCaseResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        conversationTurns:
          description: The conversation turns uttered during the test case replay in chronological order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ConversationTurn"
          type: array
        environment:
          description: Environment where the test was run. If not set, it indicates the draft environment.
          type: string
        name:
          description: "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
          type: string
        testResult:
          description: Whether the test case passed in the agent environment.
          enum:
            - TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        testTime:
          description: The time that the test was run.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3TestConfig:
      description: Represents configurations for a test case.
      properties:
        flow:
          description: "Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        page:
          description: "The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        trackingParameters:
          description: Session parameters to be compared when calculating differences.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3TestError:
      description: Error info for running a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test.
        testCase:
          description: The test case resource name.
          type: string
        testTime:
          description: The timestamp when the test was completed.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3TestRunDifference:
      description: The description of differences between original and replayed agent output.
      properties:
        description:
          description: A human readable description of the diff, showing the actual output vs expected output.
          type: string
        type:
          description: The type of diff.
          enum:
            - DIFF_TYPE_UNSPECIFIED
            - INTENT
            - PAGE
            - PARAMETERS
            - UTTERANCE
            - FLOW
          type: string
      type: object
    GoogleCloudDialogflowCxV3TextInput:
      description: Represents the natural language text to be processed.
      properties:
        text:
          description: Required. The UTF-8 encoded natural language text to be processed.
          type: string
      type: object
    GoogleCloudDialogflowCxV3TransitionRoute:
      description: "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow."
      properties:
        condition:
          description: The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
          type: string
        description:
          description: Optional. The description of the transition route. The maximum length is 500 characters.
          type: string
        intent:
          description: "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
          type: string
        name:
          description: Output only. The unique identifier of this transition route.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3Fulfillment"
          description: The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
      type: object
    GoogleCloudDialogflowCxV3TurnSignals:
      description: Collection of all signals that were extracted for a single turn of the conversation.
      properties:
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        failureReasons:
          description: Failure reasons of the turn.
          items:
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
            type: string
          type: array
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        sentimentMagnitude:
          description: Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        sentimentScore:
          description: Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3UpdateDocumentOperationMetadata:
      description: Metadata for UpdateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3Webhook:
      description: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
      properties:
        disabled:
          description: Indicates whether the webhook is disabled.
          type: boolean
        displayName:
          description: Required. The human-readable name of the webhook, unique within the agent.
          type: string
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebService"
          description: Configuration for a generic web service.
        name:
          description: "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
          type: string
        serviceDirectory:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig"
          description: Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
        timeout:
          description: Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookGenericWebService:
      description: Represents configuration for a generic web service.
      properties:
        allowedCaCerts:
          description: Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'") ```
          items:
            format: byte
            type: string
          type: array
        httpMethod:
          description: Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
          type: string
        parameterMapping:
          additionalProperties:
            type: string
          description: "Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response"
          type: object
        password:
          deprecated: true
          description: The password for HTTP Basic authentication.
          type: string
        requestBody:
          description: Optional. Defines a custom JSON object as request body to send to flexible webhook.
          type: string
        requestHeaders:
          additionalProperties:
            type: string
          description: The HTTP request headers to send together with webhook requests.
          type: object
        uri:
          description: Required. The webhook URI for receiving POST requests. It must use https protocol.
          type: string
        username:
          deprecated: true
          description: The user name for HTTP Basic authentication.
          type: string
        webhookType:
          description: Optional. Type of the webhook.
          enum:
            - WEBHOOK_TYPE_UNSPECIFIED
            - STANDARD
            - FLEXIBLE
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookRequest:
      description: The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.
      properties:
        detectIntentResponseId:
          description: Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
          type: string
        dtmfDigits:
          description: If DTMF was provided as input, this field will contain the DTMF digits.
          type: string
        fulfillmentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo"
          description: Always present. Information about the fulfillment that triggered this webhook call.
        intentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestIntentInfo"
          description: Information about the last matched intent.
        languageCode:
          description: The language code specified in the original request.
          type: string
        messages:
          description: The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          type: array
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfo"
          description: Information about page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Custom data set in QueryParameters.payload.
          type: object
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult"
          description: The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request.
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3SessionInfo"
          description: Information about session status.
        text:
          description: If natural language text was provided as input, this field will contain a copy of the text.
          type: string
        transcript:
          description: If natural language speech audio was provided as input, this field will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: If an event was provided as input, this field will contain the name of the event.
          type: string
        triggerIntent:
          description: "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestFulfillmentInfo:
      description: Represents fulfillment information communicated to the webhook.
      properties:
        tag:
          description: Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes.
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfo:
      description: Represents intent information communicated to the webhook.
      properties:
        confidence:
          description: The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        displayName:
          description: Always present. The display name of the last matched intent.
          type: string
        lastMatchedIntent:
          description: "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue"
          description: Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.
          type: object
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestIntentInfoIntentParameterValue:
      description: Represents a value for an intent parameter.
      properties:
        originalValue:
          description: Always present. Original text value extracted from user utterance.
          type: string
        resolvedValue:
          description: Always present. Structured value for the parameter extracted from user utterance.
      type: object
    GoogleCloudDialogflowCxV3WebhookRequestSentimentAnalysisResult:
      description: Represents the result of sentiment analysis.
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowCxV3WebhookResponse:
      description: The response message for a webhook call.
      properties:
        fulfillmentResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse"
          description: The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3PageInfo"
          description: Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Value to append directly to QueryResult.webhook_payloads.
          type: object
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3SessionInfo"
          description: Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3WebhookResponseFulfillmentResponse:
      description: Represents a fulfillment response to the user.
      properties:
        mergeBehavior:
          description: Merge behavior for `messages`.
          enum:
            - MERGE_BEHAVIOR_UNSPECIFIED
            - APPEND
            - REPLACE
          type: string
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3ResponseMessage"
          type: array
      type: object
    GoogleCloudDialogflowCxV3WebhookServiceDirectoryConfig:
      description: Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
      properties:
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3WebhookGenericWebService"
          description: Generic Service configuration of this webhook.
        service:
          description: "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1AdvancedSettings:
      description: "Hierarchical advanced settings for agent/flow/page/fulfillment/parameter. Settings exposed at lower level overrides the settings exposed at higher level. Overriding occurs at the sub-setting level. For example, the playback_interruption_settings at fulfillment level only overrides the playback_interruption_settings at the agent level, leaving other settings at the agent level unchanged. DTMF settings does not override each other. DTMF settings set at different levels define DTMF detections running in parallel. Hierarchy: Agent->Flow->Page->Fulfillment/Parameter."
      properties:
        audioExportGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GcsDestination"
          description: "If present, incoming audio is exported by Dialogflow to the configured Google Cloud Storage destination. Exposed at the following levels: - Agent level - Flow level"
        dtmfSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings"
          description: "Settings for DTMF. Exposed at the following levels: - Agent level - Flow level - Page level - Parameter level."
        loggingSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings"
          description: "Settings for logging. Settings for Dialogflow History, Contact Center messages, StackDriver logs, and speech logging. Exposed at the following levels: - Agent level."
      type: object
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsDtmfSettings:
      description: Define behaviors for DTMF (dual tone multi frequency).
      properties:
        enabled:
          description: If true, incoming audio is processed for DTMF (dual tone multi frequency) events. For example, if the caller presses a button on their telephone keypad and DTMF processing is enabled, Dialogflow will detect the event (e.g. a "3" was pressed) in the incoming audio and pass the event to the bot to drive business logic (e.g. when 3 is pressed, return the account balance).
          type: boolean
        finishDigit:
          description: The digit that terminates a DTMF digit sequence.
          type: string
        maxDigits:
          description: Max length of DTMF digits.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1AdvancedSettingsLoggingSettings:
      description: Define behaviors on logging.
      properties:
        enableInteractionLogging:
          description: If true, DF Interaction logging is currently enabled.
          type: boolean
        enableStackdriverLogging:
          description: If true, StackDriver logging is currently enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1AudioInput:
      description: Represents the natural speech audio to be processed.
      properties:
        audio:
          description: The natural language speech audio to be processed. A single request can contain up to 2 minutes of speech audio data. The transcribed text cannot contain more than 256 bytes. For non-streaming audio detect intent, both `config` and `audio` must be provided. For streaming audio detect intent, `config` must be provided in the first request and `audio` must be provided in all following requests.
          format: byte
          type: string
        config:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InputAudioConfig"
          description: Required. Instructs the speech recognizer how to process the speech audio.
      type: object
    GoogleCloudDialogflowCxV3beta1BargeInConfig:
      description: "Configuration of the barge-in behavior. Barge-in instructs the API to return a detected utterance at a proper time while the client is playing back the response audio from a previous request. When the client sees the utterance, it should stop the playback and immediately get ready for receiving the responses for the current request. The barge-in handling requires the client to start streaming audio input as soon as it starts playing back the audio from the previous response. The playback is modeled into two phases: * No barge-in phase: which goes first and during which speech detection should not be carried out. * Barge-in phase: which follows the no barge-in phase and during which the API starts speech detection and may inform the client that an utterance has been detected. Note that no-speech event is not expected in this phase. The client provides this configuration in terms of the durations of those two phases. The durations are measured in terms of the audio length from the the start of the input audio. No-speech event is a response with END_OF_UTTERANCE without any transcript following up."
      properties:
        noBargeInDuration:
          description: Duration that is not eligible for barge-in at the beginning of the input audio.
          format: google-duration
          type: string
        totalDuration:
          description: Total duration for the playback at the beginning of the input audio.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesMetadata:
      description: Metadata returned for the TestCases.BatchRunTestCases long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1BatchRunTestCasesResponse:
      description: The response message for TestCases.BatchRunTestCases.
      properties:
        results:
          description: The test case results. The detailed conversation turns are empty in this response.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ContinuousTestResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        name:
          description: "The resource name for the continuous test result. Format: `projects//locations//agents//environments//continuousTestResults/`."
          type: string
        result:
          description: The result of this continuous test run, i.e. whether all the tests in this continuous test run pass or not.
          enum:
            - AGGREGATED_TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        runTime:
          description: Time when the continuous testing run starts.
          format: google-datetime
          type: string
        testCaseResults:
          description: A list of individual test case results names in this continuous test run.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationSignals:
      description: This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to BigQuery.
      properties:
        turnSignals:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TurnSignals"
          description: Required. Turn signals for the current turn.
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationTurn:
      description: One interaction between a human and virtual agent. The human provides some input and the virtual agent provides a response.
      properties:
        userInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput"
          description: The user input.
        virtualAgentOutput:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput"
          description: The virtual agent output.
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput:
      description: The input from the human user.
      properties:
        enableSentimentAnalysis:
          description: Whether sentiment analysis is enabled.
          type: boolean
        injectedParameters:
          additionalProperties:
            description: Properties of the object.
          description: Parameters that need to be injected into the conversation during intent detection.
          type: object
        input:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1QueryInput"
          description: Supports text input, event input, dtmf input in the test case.
        isWebhookEnabled:
          description: If webhooks should be allowed to trigger in response to the user utterance. Often if parameters are injected, webhooks should not be enabled.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1ConversationTurnVirtualAgentOutput:
      description: The output from the virtual agent.
      properties:
        currentPage:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Page"
          description: The Page on which the utterance was spoken. Only name and displayName will be set.
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: Required. Input only. The diagnostic info output for the turn. Required to calculate the testing coverage.
          type: object
        differences:
          description: Output only. If this is part of a result conversation turn, the list of differences between the original run and the replay for this output, if any.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestRunDifference"
          readOnly: true
          type: array
        sessionParameters:
          additionalProperties:
            description: Properties of the object.
          description: The session parameters available to the bot at this point.
          type: object
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Response error from the agent in the test result. If set, other output is empty.
        textResponses:
          description: The text responses from the agent for the turn.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          type: array
        triggeredIntent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Intent"
          description: The Intent that triggered the response. Only name and displayName will be set.
      type: object
    GoogleCloudDialogflowCxV3beta1CreateDocumentOperationMetadata:
      description: Metadata for CreateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata:
      description: Metadata associated with the long running operation for Versions.CreateVersion.
      properties:
        version:
          description: "Name of the created version. Format: `projects//locations//agents//flows//versions/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DataStoreConnection:
      description: A data store connection. It represents a data store in Discovery Engine and the type of the contents it contains.
      properties:
        dataStore:
          description: "The full name of the referenced data store. Formats: `projects/{project}/locations/{location}/collections/{collection}/dataStores/{data_store}` `projects/{project}/locations/{location}/dataStores/{data_store}`"
          type: string
        dataStoreType:
          description: The type of the connected data store.
          enum:
            - DATA_STORE_TYPE_UNSPECIFIED
            - PUBLIC_WEB
            - UNSTRUCTURED
            - STRUCTURED
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1DeleteDocumentOperationMetadata:
      description: Metadata for DeleteDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1DeployFlowMetadata:
      description: Metadata returned for the Environments.DeployFlow long running operation.
      properties:
        testErrors:
          description: Errors of running deployment tests.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1DeployFlowResponse:
      description: The response message for Environments.DeployFlow.
      properties:
        deployment:
          description: "The name of the flow version deployment. Format: `projects//locations//agents// environments//deployments/`."
          type: string
        environment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Environment"
          description: The updated environment where the flow is deployed.
      type: object
    GoogleCloudDialogflowCxV3beta1DtmfInput:
      description: Represents the input for dtmf event.
      properties:
        digits:
          description: The dtmf digits.
          type: string
        finishDigit:
          description: The finish digit (if any).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Environment:
      description: Represents an environment for an agent. You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for testing, development, production, etc.
      properties:
        description:
          description: The human-readable description of the environment. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The human-readable name of the environment (unique in an agent). Limit of 64 characters.
          type: string
        name:
          description: "The name of the environment. Format: `projects//locations//agents//environments/`."
          type: string
        testCasesConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig"
          description: The test cases config for continuous tests of this environment.
        updateTime:
          description: Output only. Update time of this environment.
          format: google-datetime
          readOnly: true
          type: string
        versionConfigs:
          description: A list of configurations for flow versions. You should include version configs for all flows that are reachable from `Start Flow` in the agent. Otherwise, an error will be returned.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig"
          type: array
        webhookConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig"
          description: The webhook configuration for this environment.
      type: object
    GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig:
      description: The configuration for continuous tests.
      properties:
        enableContinuousRun:
          description: Whether to run test cases in TestCasesConfig.test_cases periodically. Default false. If set to true, run once a day.
          type: boolean
        enablePredeploymentRun:
          description: Whether to run test cases in TestCasesConfig.test_cases before deploying a flow version to the environment. Default false.
          type: boolean
        testCases:
          description: "A list of test case names to run. They should be under the same agent. Format of each test case name: `projects//locations/ /agents//testCases/`"
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig:
      description: Configuration for the version.
      properties:
        version:
          description: "Required. Format: projects//locations//agents//flows//versions/."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig:
      description: Configuration for webhooks.
      properties:
        webhookOverrides:
          description: The list of webhooks to override for the agent environment. The webhook must exist in the agent. You can override fields in `generic_web_service` and `service_directory`.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Webhook"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1EventHandler:
      description: "An event handler specifies an event that can be handled during a session. When the specified event happens, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the event, it will be called. * If there is a `target_page` associated with the event, the session will transition into the specified page. * If there is a `target_flow` associated with the event, the session will transition into the specified flow."
      properties:
        event:
          description: Required. The name of the event to handle.
          type: string
        name:
          description: Output only. The unique identifier of this event handler.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to call when the event occurs. Handling webhook errors with a fulfillment enabled with webhook could cause infinite loop. It is invalid to specify such fulfillment for a handler handling webhooks.
      type: object
    GoogleCloudDialogflowCxV3beta1EventInput:
      description: Represents the event to trigger.
      properties:
        event:
          description: Name of the event.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Uncompressed raw byte content for agent. This field is populated if none of `agent_uri` and `git_destination` are specified in ExportAgentRequest.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated if `agent_uri` is specified in ExportAgentRequest.
          type: string
        commitSha:
          description: Commit SHA of the git push. This field is populated if `git_destination` is specified in ExportAgentRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ExportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ExportEntityTypesResponse:
      description: The response message for EntityTypes.ExportEntityTypes.
      properties:
        entityTypesContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineDestination"
          description: Uncompressed byte content for entity types. This field is populated only if `entity_types_content_inline` is set to true in ExportEntityTypesRequest.
        entityTypesUri:
          description: The URI to a file containing the exported entity types. This field is populated only if `entity_types_uri` is specified in ExportEntityTypesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportFlowResponse:
      description: The response message for Flows.ExportFlow.
      properties:
        flowContent:
          description: Uncompressed raw byte content for flow.
          format: byte
          type: string
        flowUri:
          description: The URI to a file containing the exported flow. This field is populated only if `flow_uri` is specified in ExportFlowRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportIntentsMetadata:
      description: Metadata returned for the Intents.ExportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ExportIntentsResponse:
      description: The response message for Intents.ExportIntents.
      properties:
        intentsContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1InlineDestination"
          description: Uncompressed byte content for intents. This field is populated only if `intents_content_inline` is set to true in ExportIntentsRequest.
        intentsUri:
          description: The URI to a file containing the exported intents. This field is populated only if `intents_uri` is specified in ExportIntentsRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ExportTestCasesMetadata:
      description: Metadata returned for the TestCases.ExportTestCases long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ExportTestCasesResponse:
      description: The response message for TestCases.ExportTestCases.
      properties:
        content:
          description: Uncompressed raw byte content for test cases.
          format: byte
          type: string
        gcsUri:
          description: The URI to a file containing the exported test cases. This field is populated only if `gcs_uri` is specified in ExportTestCasesRequest.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1Form:
      description: A form is a data model that groups related parameters that can be collected from the user. The process in which the agent prompts the user and collects parameter values from the user is called form filling. A form can be added to a page. When form filling is done, the filled parameters will be written to the session.
      properties:
        parameters:
          description: Parameters to collect from the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FormParameter"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1FormParameter:
      description: Represents a form parameter.
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this parameter. The settings exposed at the lower level overrides the settings exposed at the higher level.
        defaultValue:
          description: The default value of an optional parameter. If the parameter is required, the default value will be ignored.
        displayName:
          description: Required. The human-readable name of the parameter, unique within the form.
          type: string
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        fillBehavior:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior"
          description: Required. Defines fill behavior for the parameter.
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
        required:
          description: Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1FormParameterFillBehavior:
      description: Configuration for how the filling of a parameter should be handled.
      properties:
        initialPromptFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: Required. The fulfillment to provide the initial prompt that the agent can present to the user in order to fill the parameter.
        repromptEventHandlers:
          description: "The handlers for parameter-level events, used to provide reprompt for the parameter or transition to a different page/flow. The supported events are: * `sys.no-match-`, where N can be from 1 to 6 * `sys.no-match-default` * `sys.no-input-`, where N can be from 1 to 6 * `sys.no-input-default` * `sys.invalid-parameter` `initial_prompt_fulfillment` provides the first prompt for the parameter. If the user's response does not fill the parameter, a no-match/no-input event will be triggered, and the fulfillment associated with the `sys.no-match-1`/`sys.no-input-1` handler (if defined) will be called to provide a prompt. The `sys.no-match-2`/`sys.no-input-2` handler (if defined) will respond to the next no-match/no-input event, and so on. A `sys.no-match-default` or `sys.no-input-default` handler will be used to handle all following no-match/no-input events after all numbered no-match/no-input handlers for the parameter are consumed. A `sys.invalid-parameter` handler can be defined to handle the case where the parameter values have been `invalidated` by webhook. For example, if the user's response fill the parameter, however the parameter was invalidated by webhook, the fulfillment associated with the `sys.invalid-parameter` handler (if defined) will be called to provide a prompt. If the event handler for the corresponding event can't be found on the parameter, `initial_prompt_fulfillment` will be re-prompted."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1Fulfillment:
      description: "A fulfillment can do one or more of the following actions at the same time: * Generate rich message responses. * Set parameter values. * Call the webhook. Fulfillments can be called at various stages in the Page or Form lifecycle. For example, when a DetectIntentRequest drives a session to enter a new page, the page's entry fulfillment can add a static response to the QueryResult in the returning DetectIntentResponse, call the webhook (for example, to load user data from a database), or both."
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this fulfillment. The settings exposed at the lower level overrides the settings exposed at the higher level.
        conditionalCases:
          description: Conditional cases for this fulfillment.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          type: array
        enableGenerativeFallback:
          description: If the flag is true, the agent will utilize LLM to generate a text response. If LLM generation fails, the defined responses in the fulfillment will be respected. This flag is only useful for fulfillments associated with no-match event handlers.
          type: boolean
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
        returnPartialResponses:
          description: "Whether Dialogflow should return currently queued fulfillment response messages in streaming APIs. If a webhook is specified, it happens before Dialogflow invokes webhook. Warning: 1) This flag only affects streaming API. Responses are still queued and returned once in non-streaming API. 2) The flag can be enabled in any fulfillment but only the first 3 partial responses will be returned. You may only want to apply it to fulfillments that have slow webhooks."
          type: boolean
        setParameterActions:
          description: Set parameter values before executing the webhook.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction"
          type: array
        tag:
          description: The value of this field will be populated in the WebhookRequest `fulfillmentInfo.tag` field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes. This field is required if `webhook` is specified.
          type: string
        webhook:
          description: "The webhook to call. Format: `projects//locations//agents//webhooks/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases:
      description: A list of cascading if-else conditions. Cases are mutually exclusive. The first one with a matching condition is selected, all the rest ignored.
      properties:
        cases:
          description: A list of cascading if-else conditions.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCase:
      description: Each case has a Boolean condition. When it is evaluated to be True, the corresponding messages will be selected and evaluated recursively.
      properties:
        caseContent:
          description: A list of case content.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent"
          type: array
        condition:
          description: The condition to activate and select this case. Empty means the condition is always true. The condition is evaluated against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCasesCaseCaseContent:
      description: The list of messages or conditional cases to activate for this case.
      properties:
        additionalCases:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1FulfillmentConditionalCases"
          description: Additional cases to be evaluated.
        message:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          description: Returned message.
      type: object
    GoogleCloudDialogflowCxV3beta1FulfillmentSetParameterAction:
      description: Setting a parameter value.
      properties:
        parameter:
          description: Display name of the parameter.
          type: string
        value:
          description: The new value of the parameter. A null value clears the parameter.
      type: object
    GoogleCloudDialogflowCxV3beta1GcsDestination:
      description: Google Cloud Storage location for a Dialogflow operation that writes or exports objects (e.g. exported agent or transcripts) outside of Dialogflow.
      properties:
        uri:
          description: "Required. The Google Cloud Storage URI for the exported objects. A URI is of the form: `gs://bucket/object-name-or-prefix` Whether a full object name, or just a prefix, its usage depends on the Dialogflow operation."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportDocumentsOperationMetadata:
      description: Metadata for ImportDocuments operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesMetadata:
      description: Metadata returned for the EntityTypes.ImportEntityTypes long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponse:
      description: The response message for EntityTypes.ImportEntityTypes.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportEntityTypesRequest.
        entityTypes:
          description: "The unique identifier of the imported entity types. Format: `projects//locations//agents//entity_types/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportEntityTypesResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        entityTypeDisplayNames:
          description: Display names of conflicting entity types.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportFlowResponse:
      description: The response message for Flows.ImportFlow.
      properties:
        flow:
          description: "The unique identifier of the new flow. Format: `projects//locations//agents//flows/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsMetadata:
      description: Metadata returned for the Intents.ImportIntents long running operation.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsResponse:
      description: The response message for Intents.ImportIntents.
      properties:
        conflictingResources:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources"
          description: Info which resources have conflicts when REPORT_CONFLICT merge_option is set in ImportIntentsRequest.
        intents:
          description: "The unique identifier of the imported intents. Format: `projects//locations//agents//intents/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportIntentsResponseConflictingResources:
      description: Conflicting resources detected during the import process. Only filled when REPORT_CONFLICT is set in the request and there are conflicts in the display names.
      properties:
        entityDisplayNames:
          description: Display names of conflicting entities.
          items:
            type: string
          type: array
        intentDisplayNames:
          description: Display names of conflicting intents.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportTestCasesMetadata:
      description: Metadata returned for the TestCases.ImportTestCases long running operation.
      properties:
        errors:
          description: Errors for failed test cases.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ImportTestCasesResponse:
      description: The response message for TestCases.ImportTestCases.
      properties:
        names:
          description: "The unique identifiers of the new test cases. Format: `projects//locations//agents//testCases/`."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1InlineDestination:
      description: Inline destination for a Dialogflow operation that writes or exports objects (e.g. intents) outside of Dialogflow.
      properties:
        content:
          description: Output only. The uncompressed byte content for the objects. Only populated in responses.
          format: byte
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1InputAudioConfig:
      description: Instructs the speech recognizer on how to process the audio content.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
          type: string
        bargeInConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1BargeInConfig"
          description: Configuration of barge-in behavior during the streaming of input audio.
        enableWordInfo:
          description: Optional. If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
          type: boolean
        model:
          description: Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/cx/docs/concept/speech-models).
          type: string
        modelVariant:
          description: Optional. Which variant of the Speech model to use.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
          type: string
        optOutConformerModelMigration:
          description: If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow CX Speech model migration](https://cloud.google.com/dialogflow/cx/docs/concept/speech-model-migration).
          type: boolean
        phraseHints:
          description: Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
          items:
            type: string
          type: array
        sampleRateHertz:
          description: Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
          format: int32
          type: integer
        singleUtterance:
          description: "Optional. If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1Intent:
      description: An intent represents a user's intent to interact with a conversational agent. You can provide information for the Dialogflow API to use to match user input to an intent by adding training phrases (i.e., examples of user input) to your intent.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: Required. The human-readable name of the intent, unique within the agent.
          type: string
        isFallback:
          description: Indicates whether this is a fallback intent. Currently only default fallback intent is allowed in the agent, which is added upon agent creation. Adding training phrases to fallback intent is useful in the case of requests that are mistakenly matched, since training phrases assigned to fallback intents act as negative examples that triggers no-match event.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: "The key/value metadata to label an intent. Labels can contain lowercase letters, digits and the symbols '-' and '_'. International characters are allowed, including letters from unicase alphabets. Keys must start with a letter. Keys and values can be no longer than 63 characters and no more than 128 bytes. Prefix \"sys-\" is reserved for Dialogflow defined labels. Currently allowed Dialogflow defined labels include: * sys-head * sys-contextual The above labels do not require value. \"sys-head\" means the intent is a head intent. \"sys-contextual\" means the intent is a contextual intent."
          type: object
        name:
          description: "The unique identifier of the intent. Required for the Intents.UpdateIntent method. Intents.CreateIntent populates the name automatically. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          description: The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentParameter"
          type: array
        priority:
          description: The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        trainingPhrases:
          description: The collection of training phrases the agent is trained on to identify the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1IntentInput:
      description: Represents the intent to trigger programmatically rather than as a result of natural language processing.
      properties:
        intent:
          description: "Required. The unique identifier of the intent. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1IntentParameter:
      description: Represents an intent parameter.
      properties:
        entityType:
          description: "Required. The entity type of the parameter. Format: `projects/-/locations/-/agents/-/entityTypes/` for system entity types (for example, `projects/-/locations/-/agents/-/entityTypes/sys.date`), or `projects//locations//agents//entityTypes/` for developer entity types."
          type: string
        id:
          description: Required. The unique identifier of the parameter. This field is used by training phrases to annotate their parts.
          type: string
        isList:
          description: Indicates whether the parameter represents a list of values.
          type: boolean
        redact:
          description: "Indicates whether the parameter content should be redacted in log. If redaction is enabled, the parameter content will be replaced by parameter name during logging. Note: the parameter content is subject to redaction if either parameter level redaction or entity type level redaction is enabled."
          type: boolean
      type: object
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrase:
      description: Represents an example that the agent is trained on to identify the intent.
      properties:
        id:
          description: Output only. The unique identifier of the training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `parameter_id` field is set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart"
          type: array
        repeatCount:
          description: Indicates how many times this example was added to the intent.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowCxV3beta1IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        parameterId:
          description: The parameter used to annotate this part of the training phrase. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings:
      description: The Knowledge Connector settings for this page or flow. This includes information such as the attached Knowledge Bases, and the way to execute fulfillment.
      properties:
        dataStoreConnections:
          description: Optional. List of related data store connections.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DataStoreConnection"
          type: array
        enabled:
          description: Whether Knowledge Connector is enabled or not.
          type: boolean
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to be triggered. When the answers from the Knowledge Connector are selected by Dialogflow, you can utitlize the request scoped parameter `$request.knowledge.answers` (contains up to the 5 highest confidence answers) and `$request.knowledge.questions` (contains the corresponding questions) to construct the fulfillment.
      type: object
    GoogleCloudDialogflowCxV3beta1Page:
      description: A Dialogflow CX conversation (session) can be described and visualized as a state machine. The states of a CX session are represented by pages. For each flow, you define many pages, where your combined pages can handle a complete conversation on the topics the flow is designed for. At any given moment, exactly one page is the current page, the current page is considered active, and the flow associated with that page is considered active. Every flow has a special start page. When a flow initially becomes active, the start page page becomes the current page. For each conversational turn, the current page will either stay the same or transition to another page. You configure each page to collect information from the end-user that is relevant for the conversational state represented by the page. For more information, see the [Page guide](https://cloud.google.com/dialogflow/cx/docs/concept/page).
      properties:
        advancedSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AdvancedSettings"
          description: Hierarchical advanced settings for this page. The settings exposed at the lower level overrides the settings exposed at the higher level.
        description:
          description: The description of the page. The maximum length is 500 characters.
          type: string
        displayName:
          description: Required. The human-readable name of the page, unique within the flow.
          type: string
        entryFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to call when the session is entering the page.
        eventHandlers:
          description: Handlers associated with the page to handle events such as webhook errors, no match or no input.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventHandler"
          type: array
        form:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Form"
          description: The form associated with the page, used for collecting parameters relevant to the page.
        knowledgeConnectorSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1KnowledgeConnectorSettings"
          description: Optional. Knowledge connector configuration.
        name:
          description: "The unique identifier of the page. Required for the Pages.UpdatePage method. Pages.CreatePage populates the name automatically. Format: `projects//locations//agents//flows//pages/`."
          type: string
        transitionRouteGroups:
          description: "Ordered list of `TransitionRouteGroups` added to the page. Transition route groups must be unique within a page. If the page links both flow-level transition route groups and agent-level transition route groups, the flow-level ones will have higher priority and will be put before the agent-level ones. * If multiple transition routes within a page scope refer to the same intent, then the precedence order is: page's transition route -> page's transition route group -> flow's transition routes. * If multiple transition route groups within a page contain the same intent, then the first group in the ordered list takes precedence. Format:`projects//locations//agents//flows//transitionRouteGroups/` or `projects//locations//agents//transitionRouteGroups/` for agent-level groups."
          items:
            type: string
          type: array
        transitionRoutes:
          description: "A list of transitions for the transition rules of this page. They route the conversation to another page in the same flow, or another flow. When we are in a certain page, the TransitionRoutes are evalauted in the following order: * TransitionRoutes defined in the page with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in flow with intent specified. * TransitionRoutes defined in the transition route groups with intent specified. * TransitionRoutes defined in the page with only condition specified. * TransitionRoutes defined in the transition route groups with only condition specified."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TransitionRoute"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1PageInfo:
      description: Represents page information communicated to and from the webhook.
      properties:
        currentPage:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
          type: string
        displayName:
          description: Always present for WebhookRequest. Ignored for WebhookResponse. The display name of the current page.
          type: string
        formInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfoFormInfo"
          description: Optional for both WebhookRequest and WebhookResponse. Information about the form.
      type: object
    GoogleCloudDialogflowCxV3beta1PageInfoFormInfo:
      description: Represents form information.
      properties:
        parameterInfo:
          description: Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo:
      description: Represents parameter information.
      properties:
        displayName:
          description: Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook.
          type: string
        justCollected:
          description: Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.
          type: boolean
        required:
          description: Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes.
          type: boolean
        state:
          description: Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.
          enum:
            - PARAMETER_STATE_UNSPECIFIED
            - EMPTY
            - INVALID
            - FILLED
          type: string
        value:
          description: Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value.
      type: object
    GoogleCloudDialogflowCxV3beta1QueryInput:
      description: "Represents the query input. It can contain one of: 1. A conversational query in the form of text. 2. An intent query that specifies which intent to trigger. 3. Natural language speech audio to be processed. 4. An event to be triggered. 5. DTMF digits to invoke an intent and fill in parameter value. 6. The results of a tool executed by the client."
      properties:
        audio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1AudioInput"
          description: The natural language speech audio to be processed.
        dtmf:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1DtmfInput"
          description: The DTMF event to be handled.
        event:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1EventInput"
          description: The event to be triggered.
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1IntentInput"
          description: The intent to be triggered.
        languageCode:
          description: Required. The language of the input. See [Language Support](https://cloud.google.com/dialogflow/cx/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
          type: string
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TextInput"
          description: The natural language text to be processed.
      type: object
    GoogleCloudDialogflowCxV3beta1ReloadDocumentOperationMetadata:
      description: Metadata for ReloadDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessage:
      description: "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard."
      properties:
        channel:
          description: The channel which the response is associated with. Clients can specify the channel via QueryParameters.channel, and only associated channel response will be returned.
          type: string
        conversationSuccess:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
          description: Indicates that the conversation succeeded.
        endInteraction:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
          description: Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.
          readOnly: true
        knowledgeInfoCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard"
          description: Represents info card for knowledge answers, to be better rendered in Dialogflow Messenger.
        liveAgentHandoff:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff"
          description: Hands off conversation to a human agent.
        mixedAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio"
          description: Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
          readOnly: true
        outputAudioText:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
          description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Returns a response containing a custom, platform-specific payload.
          type: object
        playAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio"
          description: Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.
        telephonyTransferCall:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall"
          description: A signal that the client should transfer the phone call connected to this agent to a third-party endpoint.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageText"
          description: Returns a text response.
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess:
      description: "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction:
      description: Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageKnowledgeInfoCard:
      description: Represents info card response. If the response contains generative knowledge prediction, Dialogflow will return a payload with Infobot Messenger compatible info card. Otherwise, the info card response is skipped.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff:
      description: "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human."
      properties:
        metadata:
          additionalProperties:
            description: Properties of the object.
          description: Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio:
      description: Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.
      properties:
        segments:
          description: Segments this audio response is composed of.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment:
      description: Represents one segment of audio.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.
          readOnly: true
          type: boolean
        audio:
          description: Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.
          format: byte
          type: string
        uri:
          description: Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText:
      description: A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        ssml:
          description: The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio:
      description: Specifies an audio clip to be played by the client as part of the response.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        audioUri:
          description: Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageTelephonyTransferCall:
      description: Represents the signal that telles the client to transfer the phone call connected to the agent to a third-party endpoint.
      properties:
        phoneNumber:
          description: Transfer the call to a phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1ResponseMessageText:
      description: The text response message.
      properties:
        allowPlaybackInterruption:
          description: Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.
          readOnly: true
          type: boolean
        text:
          description: Required. A collection of text responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1RunContinuousTestMetadata:
      description: Metadata returned for the Environments.RunContinuousTest long running operation.
      properties:
        errors:
          description: The test errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestError"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1RunContinuousTestResponse:
      description: The response message for Environments.RunContinuousTest.
      properties:
        continuousTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ContinuousTestResult"
          description: The result for a continuous test run.
      type: object
    GoogleCloudDialogflowCxV3beta1RunTestCaseMetadata:
      description: Metadata returned for the TestCases.RunTestCase long running operation. This message currently has no fields.
      properties: {}
      type: object
    GoogleCloudDialogflowCxV3beta1RunTestCaseResponse:
      description: The response message for TestCases.RunTestCase.
      properties:
        result:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          description: The result.
      type: object
    GoogleCloudDialogflowCxV3beta1SessionInfo:
      description: Represents session information communicated to and from the webhook.
      properties:
        parameters:
          additionalProperties: {}
          description: Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names.
          type: object
        session:
          description: "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a session. Format: `projects//locations//agents//sessions/` or `projects//locations//agents//environments//sessions/` if environment is specified."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TestCase:
      description: Represents a test case.
      properties:
        creationTime:
          description: Output only. When the test was created.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. The human-readable name of the test case, unique within the agent. Limit of 200 characters.
          type: string
        lastTestResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCaseResult"
          description: The latest test result.
        name:
          description: "The unique identifier of the test case. TestCases.CreateTestCase will populate the name automatically. Otherwise use format: `projects//locations//agents/ /testCases/`."
          type: string
        notes:
          description: Additional freeform notes about the test case. Limit of 400 characters.
          type: string
        tags:
          description: Tags are short descriptions that users may apply to test cases for organizational and filtering purposes. Each tag should start with "#" and has a limit of 30 characters.
          items:
            type: string
          type: array
        testCaseConversationTurns:
          description: The conversation turns uttered when the test case was created, in chronological order. These include the canonical set of agent utterances that should occur when the agent is working properly.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurn"
          type: array
        testConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestConfig"
          description: Config for the test case.
      type: object
    GoogleCloudDialogflowCxV3beta1TestCaseError:
      description: Error info for importing a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test case.
        testCase:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1TestCase"
          description: The test case.
      type: object
    GoogleCloudDialogflowCxV3beta1TestCaseResult:
      description: Represents a result from running a test case in an agent environment.
      properties:
        conversationTurns:
          description: The conversation turns uttered during the test case replay in chronological order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ConversationTurn"
          type: array
        environment:
          description: Environment where the test was run. If not set, it indicates the draft environment.
          type: string
        name:
          description: "The resource name for the test case result. Format: `projects//locations//agents//testCases/ /results/`."
          type: string
        testResult:
          description: Whether the test case passed in the agent environment.
          enum:
            - TEST_RESULT_UNSPECIFIED
            - PASSED
            - FAILED
          type: string
        testTime:
          description: The time that the test was run.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TestConfig:
      description: Represents configurations for a test case.
      properties:
        flow:
          description: "Flow name to start the test case with. Format: `projects//locations//agents//flows/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        page:
          description: "The page to start the test case with. Format: `projects//locations//agents//flows//pages/`. Only one of `flow` and `page` should be set to indicate the starting point of the test case. If both are set, `page` takes precedence over `flow`. If neither is set, the test case will start with start page on the default start flow."
          type: string
        trackingParameters:
          description: Session parameters to be compared when calculating differences.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1TestError:
      description: Error info for running a test.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status associated with the test.
        testCase:
          description: The test case resource name.
          type: string
        testTime:
          description: The timestamp when the test was completed.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TestRunDifference:
      description: The description of differences between original and replayed agent output.
      properties:
        description:
          description: A human readable description of the diff, showing the actual output vs expected output.
          type: string
        type:
          description: The type of diff.
          enum:
            - DIFF_TYPE_UNSPECIFIED
            - INTENT
            - PAGE
            - PARAMETERS
            - UTTERANCE
            - FLOW
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TextInput:
      description: Represents the natural language text to be processed.
      properties:
        text:
          description: Required. The UTF-8 encoded natural language text to be processed.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1TransitionRoute:
      description: "A transition route specifies a intent that can be matched and/or a data condition that can be evaluated during a session. When a specified transition is matched, the following actions are taken in order: * If there is a `trigger_fulfillment` associated with the transition, it will be called. * If there is a `target_page` associated with the transition, the session will transition into the specified page. * If there is a `target_flow` associated with the transition, the session will transition into the specified flow."
      properties:
        condition:
          description: The condition to evaluate against form parameters or session parameters. See the [conditions reference](https://cloud.google.com/dialogflow/cx/docs/reference/condition). At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled.
          type: string
        description:
          description: Optional. The description of the transition route. The maximum length is 500 characters.
          type: string
        intent:
          description: "The unique identifier of an Intent. Format: `projects//locations//agents//intents/`. Indicates that the transition can only happen when the given intent is matched. At least one of `intent` or `condition` must be specified. When both `intent` and `condition` are specified, the transition can only happen when both are fulfilled."
          type: string
        name:
          description: Output only. The unique identifier of this transition route.
          readOnly: true
          type: string
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
        triggerFulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1Fulfillment"
          description: The fulfillment to call when the condition is satisfied. At least one of `trigger_fulfillment` and `target` must be specified. When both are defined, `trigger_fulfillment` is executed first.
      type: object
    GoogleCloudDialogflowCxV3beta1TurnSignals:
      description: Collection of all signals that were extracted for a single turn of the conversation.
      properties:
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        failureReasons:
          description: Failure reasons of the turn.
          items:
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
            type: string
          type: array
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        sentimentMagnitude:
          description: Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        sentimentScore:
          description: Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1UpdateDocumentOperationMetadata:
      description: Metadata for UpdateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowCxV3beta1Webhook:
      description: Webhooks host the developer's business logic. During a session, webhooks allow the developer to use the data extracted by Dialogflow's natural language processing to generate dynamic responses, validate collected data, or trigger actions on the backend.
      properties:
        disabled:
          description: Indicates whether the webhook is disabled.
          type: boolean
        displayName:
          description: Required. The human-readable name of the webhook, unique within the agent.
          type: string
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService"
          description: Configuration for a generic web service.
        name:
          description: "The unique identifier of the webhook. Required for the Webhooks.UpdateWebhook method. Webhooks.CreateWebhook populates the name automatically. Format: `projects//locations//agents//webhooks/`."
          type: string
        serviceDirectory:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig"
          description: Configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
        timeout:
          description: Webhook execution timeout. Execution is considered failed if Dialogflow doesn't receive a response from webhook at the end of the timeout period. Defaults to 5 seconds, maximum allowed timeout is 30 seconds.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookGenericWebService:
      description: Represents configuration for a generic web service.
      properties:
        allowedCaCerts:
          description: Optional. Specifies a list of allowed custom CA certificates (in DER format) for HTTPS verification. This overrides the default SSL trust store. If this is empty or unspecified, Dialogflow will use Google's default trust store to verify certificates. N.B. Make sure the HTTPS server certificates are signed with "subject alt name". For instance a certificate can be self-signed using the following command, ``` openssl x509 -req -days 200 -in example.com.csr \ -signkey example.com.key \ -out example.com.crt \ -extfile <(printf "\nsubjectAltName='DNS:www.example.com'") ```
          items:
            format: byte
            type: string
          type: array
        httpMethod:
          description: Optional. HTTP method for the flexible webhook calls. Standard webhook always uses POST.
          enum:
            - HTTP_METHOD_UNSPECIFIED
            - POST
            - GET
            - HEAD
            - PUT
            - DELETE
            - PATCH
            - OPTIONS
          type: string
        parameterMapping:
          additionalProperties:
            type: string
          description: "Optional. Maps the values extracted from specific fields of the flexible webhook response into session parameters. - Key: session parameter name - Value: field path in the webhook response"
          type: object
        password:
          deprecated: true
          description: The password for HTTP Basic authentication.
          type: string
        requestBody:
          description: Optional. Defines a custom JSON object as request body to send to flexible webhook.
          type: string
        requestHeaders:
          additionalProperties:
            type: string
          description: The HTTP request headers to send together with webhook requests.
          type: object
        uri:
          description: Required. The webhook URI for receiving POST requests. It must use https protocol.
          type: string
        username:
          deprecated: true
          description: The user name for HTTP Basic authentication.
          type: string
        webhookType:
          description: Optional. Type of the webhook.
          enum:
            - WEBHOOK_TYPE_UNSPECIFIED
            - STANDARD
            - FLEXIBLE
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequest:
      description: The request message for a webhook call. The request is sent as a JSON object and the field names will be presented in camel cases. You may see undocumented fields in an actual request. These fields are used internally by Dialogflow and should be ignored.
      properties:
        detectIntentResponseId:
          description: Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller.
          type: string
        dtmfDigits:
          description: If DTMF was provided as input, this field will contain the DTMF digits.
          type: string
        fulfillmentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
          description: Always present. Information about the fulfillment that triggered this webhook call.
        intentInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo"
          description: Information about the last matched intent.
        languageCode:
          description: The language code specified in the original request.
          type: string
        messages:
          description: The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfo"
          description: Information about page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Custom data set in QueryParameters.payload.
          type: object
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult"
          description: The sentiment analysis result of the current user request. The field is filled when sentiment analysis is configured to be enabled for the request.
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionInfo"
          description: Information about session status.
        text:
          description: If natural language text was provided as input, this field will contain a copy of the text.
          type: string
        transcript:
          description: If natural language speech audio was provided as input, this field will contain the transcript for the audio.
          type: string
        triggerEvent:
          description: If an event was provided as input, this field will contain the name of the event.
          type: string
        triggerIntent:
          description: "If an intent was provided as input, this field will contain a copy of the intent identifier. Format: `projects//locations//agents//intents/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo:
      description: Represents fulfillment information communicated to the webhook.
      properties:
        tag:
          description: Always present. The value of the Fulfillment.tag field will be populated in this field by Dialogflow when the associated webhook is called. The tag is typically used by the webhook service to identify which fulfillment is being called, but it could be used for other purposes.
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo:
      description: Represents intent information communicated to the webhook.
      properties:
        confidence:
          description: The confidence of the matched intent. Values range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        displayName:
          description: Always present. The display name of the last matched intent.
          type: string
        lastMatchedIntent:
          description: "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
          type: string
        parameters:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          description: Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.
          type: object
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue:
      description: Represents a value for an intent parameter.
      properties:
        originalValue:
          description: Always present. Original text value extracted from user utterance.
          type: string
        resolvedValue:
          description: Always present. Structured value for the parameter extracted from user utterance.
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookRequestSentimentAnalysisResult:
      description: Represents the result of sentiment analysis.
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookResponse:
      description: The response message for a webhook call.
      properties:
        fulfillmentResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse"
          description: The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user.
        pageInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1PageInfo"
          description: Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Value to append directly to QueryResult.webhook_payloads.
          type: object
        sessionInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1SessionInfo"
          description: Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.
        targetFlow:
          description: "The target flow to transition to. Format: `projects//locations//agents//flows/`."
          type: string
        targetPage:
          description: "The target page to transition to. Format: `projects//locations//agents//flows//pages/`."
          type: string
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse:
      description: Represents a fulfillment response to the user.
      properties:
        mergeBehavior:
          description: Merge behavior for `messages`.
          enum:
            - MERGE_BEHAVIOR_UNSPECIFIED
            - APPEND
            - REPLACE
          type: string
        messages:
          description: The list of rich message responses to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1ResponseMessage"
          type: array
      type: object
    GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig:
      description: Represents configuration for a [Service Directory](https://cloud.google.com/service-directory) service.
      properties:
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowCxV3beta1WebhookGenericWebService"
          description: Generic Service configuration of this webhook.
        service:
          description: "Required. The name of [Service Directory](https://cloud.google.com/service-directory) service. Format: `projects//locations//namespaces//services/`. `Location ID` of the service directory must be the same as the location of the agent."
          type: string
      type: object
    GoogleCloudDialogflowV2Agent:
      description: "A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system. For more information about agents, see the [Agent guide](https://cloud.google.com/dialogflow/docs/agents-overview). "
      properties:
        apiVersion:
          description: Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.
          enum:
            - API_VERSION_UNSPECIFIED
            - API_VERSION_V1
            - API_VERSION_V2
            - API_VERSION_V2_BETA_1
          type: string
        avatarUri:
          description: Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration.
          type: string
        classificationThreshold:
          description: Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.
          format: float
          type: number
        defaultLanguageCode:
          description: Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the `Update` method.
          type: string
        description:
          description: Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        displayName:
          description: Required. The name of this agent.
          type: string
        enableLogging:
          description: Optional. Determines whether this agent should log conversation queries.
          type: boolean
        matchMode:
          deprecated: true
          description: Optional. Determines how intents are detected from user queries.
          enum:
            - MATCH_MODE_UNSPECIFIED
            - MATCH_MODE_HYBRID
            - MATCH_MODE_ML_ONLY
          type: string
        parent:
          description: "Required. The project of this agent. Format: `projects/`."
          type: string
        supportedLanguageCodes:
          description: Optional. The list of all languages supported by this agent (except for the `default_language_code`).
          items:
            type: string
          type: array
        tier:
          description: Optional. The agent tier. If not specified, TIER_STANDARD is assumed.
          enum:
            - TIER_UNSPECIFIED
            - TIER_STANDARD
            - TIER_ENTERPRISE
            - TIER_ENTERPRISE_PLUS
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - true
        timeZone:
          description: Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris.
          type: string
      type: object
    GoogleCloudDialogflowV2AgentAssistantFeedback:
      description: Detail feedback of Agent Assist result.
      properties:
        answerRelevance:
          description: 'Optional. Whether or not the suggested answer is relevant. For example: * Query: "Can I change my mailing address?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date." * answer_relevance: AnswerRelevance.IRRELEVANT'
          enum:
            - ANSWER_RELEVANCE_UNSPECIFIED
            - IRRELEVANT
            - RELEVANT
          type: string
        documentCorrectness:
          description: 'Optional. Whether or not the information in the document is correct. For example: * Query: "Can I return the package in 2 days once received?" * Suggested document says: "Items must be returned/exchanged within 60 days of the purchase date." * Ground truth: "No return or exchange is allowed." * [document_correctness]: INCORRECT'
          enum:
            - DOCUMENT_CORRECTNESS_UNSPECIFIED
            - INCORRECT
            - CORRECT
          type: string
        documentEfficiency:
          description: Optional. Whether or not the suggested document is efficient. For example, if the document is poorly written, hard to understand, hard to use or too long to find useful information, document_efficiency is DocumentEfficiency.INEFFICIENT.
          enum:
            - DOCUMENT_EFFICIENCY_UNSPECIFIED
            - INEFFICIENT
            - EFFICIENT
          type: string
        knowledgeSearchFeedback:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AgentAssistantFeedbackKnowledgeSearchFeedback"
          description: Optional. Feedback for knowledge search.
        summarizationFeedback:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback"
          description: Optional. Feedback for conversation summarization.
      type: object
    GoogleCloudDialogflowV2AgentAssistantFeedbackKnowledgeSearchFeedback:
      description: Feedback for knowledge search.
      properties:
        answerCopied:
          description: Whether the answer was copied by the human agent or not. If the value is set to be true, AnswerFeedback.clicked will be updated to be true.
          type: boolean
        clickedUris:
          description: The URIs clicked by the human agent. The value is appended for each UpdateAnswerRecordRequest. If the value is not empty, AnswerFeedback.clicked will be updated to be true.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2AgentAssistantFeedbackSummarizationFeedback:
      description: Feedback for conversation summarization.
      properties:
        startTime:
          description: Timestamp when composing of the summary starts.
          format: google-datetime
          type: string
        submitTime:
          description: Timestamp when the summary was submitted.
          format: google-datetime
          type: string
        summaryText:
          description: Text of actual submitted summary.
          type: string
        textSections:
          additionalProperties:
            type: string
          description: Optional. Actual text sections of submitted summary.
          type: object
      type: object
    GoogleCloudDialogflowV2AgentAssistantRecord:
      description: Represents a record of a human agent assist answer.
      properties:
        articleSuggestionAnswer:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ArticleAnswer"
          description: Output only. The article suggestion answer.
          readOnly: true
        dialogflowAssistAnswer:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2DialogflowAssistAnswer"
          description: Output only. Dialogflow assist answer.
          readOnly: true
        faqAnswer:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2FaqAnswer"
          description: Output only. The FAQ answer.
          readOnly: true
      type: object
    GoogleCloudDialogflowV2AnalyzeContentRequest:
      description: The request message for Participants.AnalyzeContent.
      properties:
        assistQueryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AssistQueryParameters"
          description: Parameters for a human assist query.
        cxParameters:
          additionalProperties:
            description: Properties of the object.
          description: "Additional parameters to be put into Dialogflow CX session parameters. To remove a parameter from the session, clients should explicitly set the parameter value to null. Note: this field should only be used if you are connecting to a Dialogflow CX agent."
          type: object
        eventInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EventInput"
          description: An input event to send to Dialogflow.
        queryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryParameters"
          description: Parameters for a Dialogflow virtual-agent query.
        replyAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OutputAudioConfig"
          description: Speech synthesis configuration. The speech synthesis settings for a virtual agent that may be configured for the associated conversation profile are not used when calling AnalyzeContent. If this configuration is not supplied, speech synthesis is disabled.
        requestId:
          description: A unique identifier for this request. Restricted to 36 ASCII characters. A random UUID is recommended. This request is only idempotent if a `request_id` is provided.
          type: string
        suggestionInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestionInput"
          description: An input representing the selection of a suggestion.
        textInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2TextInput"
          description: The natural language text to be processed.
      type: object
    GoogleCloudDialogflowV2AnalyzeContentResponse:
      description: The response message for Participants.AnalyzeContent.
      properties:
        automatedAgentReply:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AutomatedAgentReply"
          description: "Only set if a Dialogflow automated agent has responded. Note that: AutomatedAgentReply.detect_intent_response.output_audio and AutomatedAgentReply.detect_intent_response.output_audio_config are always empty, use reply_audio instead."
        dtmfParameters:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2DtmfParameters"
          description: Indicates the parameters of DTMF.
        endUserSuggestionResults:
          description: The suggestions for end user. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.end_user_suggestion_config. Same as human_agent_suggestion_results, any failure of Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead, the features will fail silently with the error field set in the corresponding SuggestionResult.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestionResult"
          type: array
        humanAgentSuggestionResults:
          description: The suggestions for most recent human agent. The order is the same as HumanAgentAssistantConfig.SuggestionConfig.feature_configs of HumanAgentAssistantConfig.human_agent_suggestion_config. Note that any failure of Agent Assist features will not lead to the overall failure of an AnalyzeContent API call. Instead, the features will fail silently with the error field set in the corresponding SuggestionResult.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestionResult"
          type: array
        message:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Message"
          description: Message analyzed by CCAI.
        replyAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OutputAudio"
          description: "The audio data bytes encoded as specified in the request. This field is set if: - `reply_audio_config` was specified in the request, or - The automated agent responded with audio to play to the user. In such case, `reply_audio.config` contains settings used to synthesize the speech. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
        replyText:
          description: The output text content. This field is set if the automated agent responded with text to show to the user.
          type: string
      type: object
    GoogleCloudDialogflowV2AnnotatedMessagePart:
      description: Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.
      properties:
        entityType:
          description: The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.
          type: string
        formattedValue:
          description: 'The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" } '
        text:
          description: A part of a message possibly annotated with an entity.
          type: string
      type: object
    GoogleCloudDialogflowV2AnswerFeedback:
      description: Represents feedback the customer has about the quality & correctness of a certain answer in a conversation.
      properties:
        agentAssistantDetailFeedback:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AgentAssistantFeedback"
          description: Detail feedback of agent assist suggestions.
        clickTime:
          description: Time when the answer/item was clicked.
          format: google-datetime
          type: string
        clicked:
          description: Indicates whether the answer/item was clicked by the human agent or not. Default to false. For knowledge search and knowledge assist, the answer record is considered to be clicked if the answer was copied or any URI was clicked.
          type: boolean
        correctnessLevel:
          description: The correctness level of the specific answer.
          enum:
            - CORRECTNESS_LEVEL_UNSPECIFIED
            - NOT_CORRECT
            - PARTIALLY_CORRECT
            - FULLY_CORRECT
          type: string
        displayTime:
          description: Time when the answer/item was displayed.
          format: google-datetime
          type: string
        displayed:
          description: Indicates whether the answer/item was displayed to the human agent in the agent desktop UI. Default to false.
          type: boolean
      type: object
    GoogleCloudDialogflowV2AnswerRecord:
      description: "Answer records are records to manage answer history and feedbacks for Dialogflow. Currently, answer record includes: - human agent assistant article suggestion - human agent assistant faq article It doesn't include: - `DetectIntent` intent matching - `DetectIntent` knowledge Answer records are not related to the conversation history in the Dialogflow Console. A Record is generated even when the end-user disables conversation history in the console. Records are created when there's a human agent assistant suggestion generated. A typical workflow for customers provide feedback to an answer is: 1. For human agent assistant, customers get suggestion via ListSuggestions API. Together with the answers, AnswerRecord.name are returned to the customers. 2. The customer uses the AnswerRecord.name to call the UpdateAnswerRecord method to send feedback about a specific answer that they believe is wrong."
      properties:
        agentAssistantRecord:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AgentAssistantRecord"
          description: Output only. The record for human agent assistant.
          readOnly: true
        answerFeedback:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AnswerFeedback"
          description: Required. The AnswerFeedback for this record. You can set this with AnswerRecords.UpdateAnswerRecord in order to give us feedback about this answer.
        name:
          description: "The unique identifier of this answer record. Format: `projects//locations//answerRecords/`."
          type: string
      type: object
    GoogleCloudDialogflowV2ArticleAnswer:
      description: Represents article answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: Article match confidence. The system's confidence score that this article is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        snippets:
          description: Article snippets.
          items:
            type: string
          type: array
        title:
          description: The article title.
          type: string
        uri:
          description: The article URI.
          type: string
      type: object
    GoogleCloudDialogflowV2ArticleSuggestionModelMetadata:
      description: Metadata for article suggestion models.
      properties:
        trainingModelType:
          description: Optional. Type of the article suggestion model. If not provided, model_type is used.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - SMART_REPLY_DUAL_ENCODER_MODEL
            - SMART_REPLY_BERT_MODEL
          type: string
      type: object
    GoogleCloudDialogflowV2AssistQueryParameters:
      description: Represents the parameters of human assist query.
      properties:
        documentsMetadataFilters:
          additionalProperties:
            type: string
          description: "Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: \"market\" value: \"US,CA\" } documents_metadata_filters { key: \"user\" value: \"agent\" } ```"
          type: object
      type: object
    GoogleCloudDialogflowV2AutomatedAgentConfig:
      description: Defines the Automated Agent to connect to a conversation.
      properties:
        agent:
          description: "Required. ID of the Dialogflow agent environment to use. This project needs to either be the same project as the conversation or you need to grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow API Service Agent` role in this project. - For ES agents, use format: `projects//locations//agent/environments/`. If environment is not specified, the default `draft` environment is used. Refer to [DetectIntentRequest](/dialogflow/docs/reference/rpc/google.cloud.dialogflow.v2#google.cloud.dialogflow.v2.DetectIntentRequest) for more details. - For CX agents, use format `projects//locations//agents//environments/`. If environment is not specified, the default `draft` environment is used."
          type: string
        sessionTtl:
          description: Optional. Configure lifetime of the Dialogflow session. By default, a Dialogflow CX session remains active and its data is stored for 30 minutes after the last request is sent for the session. This value should be no longer than 1 day.
          format: google-duration
          type: string
      type: object
    GoogleCloudDialogflowV2AutomatedAgentReply:
      description: Represents a response from an automated agent.
      properties:
        allowCancellation:
          description: Indicates whether the partial automated agent reply is interruptible when a later reply message arrives. e.g. if the agent specified some music as partial response, it can be cancelled.
          type: boolean
        automatedAgentReplyType:
          description: AutomatedAgentReply type.
          enum:
            - AUTOMATED_AGENT_REPLY_TYPE_UNSPECIFIED
            - PARTIAL
            - FINAL
          type: string
        cxCurrentPage:
          description: "The unique identifier of the current Dialogflow CX conversation page. Format: `projects//locations//agents//flows//pages/`."
          type: string
        detectIntentResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2DetectIntentResponse"
          description: Response of the Dialogflow Sessions.DetectIntent call.
      type: object
    GoogleCloudDialogflowV2BatchCreateEntitiesRequest:
      description: The request message for EntityTypes.BatchCreateEntities.
      properties:
        entities:
          description: Required. The entities to create.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity"
          type: array
        languageCode:
          description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          type: string
      type: object
    GoogleCloudDialogflowV2BatchDeleteEntitiesRequest:
      description: The request message for EntityTypes.BatchDeleteEntities.
      properties:
        entityValues:
          description: Required. The reference `values` of the entities to delete. Note that these are not fully-qualified names, i.e. they don't start with `projects/`.
          items:
            type: string
          type: array
        languageCode:
          description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          type: string
      type: object
    GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest:
      description: The request message for EntityTypes.BatchDeleteEntityTypes.
      properties:
        entityTypeNames:
          description: Required. The names entity types to delete. All names must point to the same agent as `parent`.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2BatchDeleteIntentsRequest:
      description: The request message for Intents.BatchDeleteIntents.
      properties:
        intents:
          description: Required. The collection of intents to delete. Only intent `name` must be filled in.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          type: array
      type: object
    GoogleCloudDialogflowV2BatchUpdateEntitiesRequest:
      description: The request message for EntityTypes.BatchUpdateEntities.
      properties:
        entities:
          description: Required. The entities to update or create.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity"
          type: array
        languageCode:
          description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          type: string
        updateMask:
          description: Optional. The mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest:
      description: The request message for EntityTypes.BatchUpdateEntityTypes.
      properties:
        entityTypeBatchInline:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeBatch"
          description: The collection of entity types to update or create.
        entityTypeBatchUri:
          description: 'The URI to a Google Cloud Storage file containing entity types to update or create. The file format can either be a serialized proto (of EntityBatch type) or a JSON object. Note: The URI must start with "gs://".'
          type: string
        languageCode:
          description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          type: string
        updateMask:
          description: Optional. The mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse:
      description: The response message for EntityTypes.BatchUpdateEntityTypes.
      properties:
        entityTypes:
          description: The collection of updated or created entity types.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityType"
          type: array
      type: object
    GoogleCloudDialogflowV2BatchUpdateIntentsRequest:
      properties:
        intentBatchInline:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentBatch"
          description: The collection of intents to update or create.
        intentBatchUri:
          description: 'The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with "gs://".'
          type: string
        intentView:
          description: Optional. The resource view to apply to the returned intent.
          enum:
            - INTENT_VIEW_UNSPECIFIED
            - INTENT_VIEW_FULL
          type: string
        languageCode:
          description: Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).
          type: string
        updateMask:
          description: Optional. The mask to control which fields get updated.
          format: google-fieldmask
          type: string
      type: object
    GoogleCloudDialogflowV2BatchUpdateIntentsResponse:
      description: The response message for Intents.BatchUpdateIntents.
      properties:
        intents:
          description: The collection of updated or created intents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          type: array
      type: object
    GoogleCloudDialogflowV2ClearSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2ClearSuggestionFeatureConfigRequest:
      description: The request message for ConversationProfiles.ClearFeature.
      properties:
        participantRole:
          description: Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2CompleteConversationRequest:
      description: The request message for Conversations.CompleteConversation.
      properties: {}
      type: object
    GoogleCloudDialogflowV2Context:
      description: Dialogflow contexts are similar to natural language context. If a person says to you "they are orange", you need context in order to understand what "they" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
      properties:
        lifespanCount:
          description: Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.
          format: int32
          type: integer
        name:
          description: "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2Conversation:
      description: Represents a conversation. A conversation is an interaction between an agent, including live agents and Dialogflow agents, and a support customer. Conversations can include phone calls and text-based chat sessions.
      properties:
        conversationProfile:
          description: "Required. The Conversation Profile to be used to configure this Conversation. This field cannot be updated. Format: `projects//locations//conversationProfiles/`."
          type: string
        conversationStage:
          description: The stage of a conversation. It indicates whether the virtual agent or a human agent is handling the conversation. If the conversation is created with the conversation profile that has Dialogflow config set, defaults to ConversationStage.VIRTUAL_AGENT_STAGE; Otherwise, defaults to ConversationStage.HUMAN_ASSIST_STAGE. If the conversation is created with the conversation profile that has Dialogflow config set but explicitly sets conversation_stage to ConversationStage.HUMAN_ASSIST_STAGE, it skips ConversationStage.VIRTUAL_AGENT_STAGE stage and directly goes to ConversationStage.HUMAN_ASSIST_STAGE.
          enum:
            - CONVERSATION_STAGE_UNSPECIFIED
            - VIRTUAL_AGENT_STAGE
            - HUMAN_ASSIST_STAGE
          type: string
        endTime:
          description: Output only. The time the conversation was finished.
          format: google-datetime
          readOnly: true
          type: string
        lifecycleState:
          description: Output only. The current state of the Conversation.
          enum:
            - LIFECYCLE_STATE_UNSPECIFIED
            - IN_PROGRESS
            - COMPLETED
          readOnly: true
          type: string
        name:
          description: "Output only. The unique identifier of this conversation. Format: `projects//locations//conversations/`."
          readOnly: true
          type: string
        phoneNumber:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationPhoneNumber"
          description: Output only. It will not be empty if the conversation is to be connected over telephony.
          readOnly: true
        startTime:
          description: Output only. The time the conversation was started.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationDataset:
      description: Represents a conversation dataset that a user imports raw data into. The data inside ConversationDataset can not be changed after ImportConversationData finishes (and calling ImportConversationData on a dataset that already has data is not allowed).
      properties:
        conversationCount:
          description: Output only. The number of conversations this conversation dataset contains.
          format: int64
          readOnly: true
          type: string
        conversationInfo:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationInfo"
          description: Output only. Metadata set during conversation data import.
          readOnly: true
        createTime:
          description: Output only. Creation time of this dataset.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. The description of the dataset. Maximum of 10000 bytes.
          type: string
        displayName:
          description: Required. The display name of the dataset. Maximum of 64 bytes.
          type: string
        inputConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2InputConfig"
          description: Output only. Input configurations set during conversation data import.
          readOnly: true
        name:
          description: "Output only. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`"
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationEvent:
      description: Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.
      properties:
        conversation:
          description: "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        errorStatus:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
        newMessagePayload:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Message"
          description: Payload of NEW_MESSAGE event.
        type:
          description: The type of the event that this notification refers to.
          enum:
            - TYPE_UNSPECIFIED
            - CONVERSATION_STARTED
            - CONVERSATION_FINISHED
            - HUMAN_INTERVENTION_NEEDED
            - NEW_MESSAGE
            - UNRECOVERABLE_ERROR
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationInfo:
      description: Represents metadata of a conversation.
      properties:
        languageCode:
          description: Optional. The language code of the conversation data within this dataset. See https://cloud.google.com/apis/design/standard_fields for more information. Supports all UTF-8 languages.
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationModel:
      description: Represents a conversation model.
      properties:
        articleSuggestionModelMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ArticleSuggestionModelMetadata"
          description: Metadata for article suggestion models.
        createTime:
          description: Output only. Creation time of this model.
          format: google-datetime
          readOnly: true
          type: string
        datasets:
          description: Required. Datasets used to create model.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2InputDataset"
          type: array
        displayName:
          description: Required. The display name of the model. At most 64 bytes long.
          type: string
        languageCode:
          description: 'Language code for the conversation model. If not specified, the language is en-US. Language at ConversationModel should be set for all non en-us languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        name:
          description: "ConversationModel resource name. Format: `projects//conversationModels/`"
          type: string
        smartReplyModelMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SmartReplyModelMetadata"
          description: Metadata for smart reply models.
        state:
          description: Output only. State of the model. A model can only serve prediction requests after it gets deployed.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UNDEPLOYED
            - DEPLOYING
            - DEPLOYED
            - UNDEPLOYING
            - DELETING
            - FAILED
            - PENDING
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationModelEvaluation:
      description: Represents evaluation result of a conversation model.
      properties:
        createTime:
          description: Output only. Creation time of this model.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Optional. The display name of the model evaluation. At most 64 bytes long.
          type: string
        evaluationConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EvaluationConfig"
          description: Optional. The configuration of the evaluation task.
        name:
          description: "The resource name of the evaluation. Format: `projects//conversationModels//evaluations/`"
          type: string
        rawHumanEvalTemplateCsv:
          description: "Output only. Human eval template in csv format. It tooks real-world conversations provided through input dataset, generates example suggestions for customer to verify quality of the model. For Smart Reply, the generated csv file contains columns of Context, (Suggestions,Q1,Q2)*3, Actual reply. Context contains at most 10 latest messages in the conversation prior to the current suggestion. Q1: \"Would you send it as the next message of agent?\" Evaluated based on whether the suggest is appropriate to be sent by agent in current context. Q2: \"Does the suggestion move the conversation closer to resolution?\" Evaluated based on whether the suggestion provide solutions, or answers customer's question or collect information from customer to resolve the customer's issue. Actual reply column contains the actual agent reply sent in the context."
          readOnly: true
          type: string
        smartReplyMetrics:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SmartReplyMetrics"
          description: Output only. Only available when model is for smart reply.
          readOnly: true
      type: object
    GoogleCloudDialogflowV2ConversationPhoneNumber:
      description: Represents a phone number for telephony integration. It allows for connecting a particular conversation over telephony.
      properties:
        phoneNumber:
          description: Output only. The phone number to connect to this conversation.
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2ConversationProfile:
      description: Defines the services to connect to incoming Dialogflow conversations.
      properties:
        automatedAgentConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AutomatedAgentConfig"
          description: Configuration for an automated agent to use with this profile.
        createTime:
          description: Output only. Create time of the conversation profile.
          format: google-datetime
          readOnly: true
          type: string
        displayName:
          description: Required. Human readable name for this profile. Max length 1024 bytes.
          type: string
        humanAgentAssistantConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfig"
          description: Configuration for agent assistance to use with this profile.
        humanAgentHandoffConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentHandoffConfig"
          description: Configuration for connecting to a live agent. Currently, this feature is not general available, please contact Google to get access.
        languageCode:
          description: 'Language code for the conversation profile. If not specified, the language is en-US. Language at ConversationProfile should be set for all non en-US languages. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        loggingConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2LoggingConfig"
          description: Configuration for logging conversation lifecycle events.
        name:
          description: "The unique identifier of this conversation profile. Format: `projects//locations//conversationProfiles/`."
          type: string
        newMessageEventNotificationConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2NotificationConfig"
          description: Configuration for publishing new message events. Event will be sent in format of ConversationEvent
        notificationConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2NotificationConfig"
          description: Configuration for publishing conversation lifecycle events.
        securitySettings:
          description: "Name of the CX SecuritySettings reference for the agent. Format: `projects//locations//securitySettings/`."
          type: string
        sttConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SpeechToTextConfig"
          description: Settings for speech transcription.
        timeZone:
          description: The time zone of this conversational profile from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. Defaults to America/New_York.
          type: string
        ttsConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          description: Configuration for Text-to-Speech synthesization. Used by Phone Gateway to specify synthesization options. If agent defines synthesization options as well, agent settings overrides the option here.
        updateTime:
          description: Output only. Update time of the conversation profile.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2CreateConversationDatasetOperationMetadata:
      description: Metadata for ConversationDatasets.
      properties:
        conversationDataset:
          description: "The resource name of the conversation dataset that will be created. Format: `projects//locations//conversationDatasets/`"
          type: string
      type: object
    GoogleCloudDialogflowV2CreateConversationModelEvaluationOperationMetadata:
      description: Metadata for a ConversationModels.CreateConversationModelEvaluation operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//locations//conversationModels/`"
          type: string
        conversationModelEvaluation:
          description: "The resource name of the conversation model. Format: `projects//locations//conversationModels//evaluations/`"
          type: string
        createTime:
          description: Timestamp when the request to create conversation model was submitted. The time is measured on server side.
          format: google-datetime
          type: string
        state:
          description: State of CreateConversationModel operation.
          enum:
            - STATE_UNSPECIFIED
            - INITIALIZING
            - RUNNING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          type: string
      type: object
    GoogleCloudDialogflowV2CreateConversationModelEvaluationRequest:
      description: The request message for ConversationModels.CreateConversationModelEvaluation
      properties:
        conversationModelEvaluation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationModelEvaluation"
          description: Required. The conversation model evaluation to be created.
      type: object
    GoogleCloudDialogflowV2CreateConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.CreateConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when the request to create conversation model is submitted. The time is measured on server side.
          format: google-datetime
          type: string
        state:
          description: State of CreateConversationModel operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SUCCEEDED
            - FAILED
            - CANCELLED
            - CANCELLING
            - TRAINING
          type: string
      type: object
    GoogleCloudDialogflowV2DeleteConversationDatasetOperationMetadata:
      description: Metadata for ConversationDatasets.
      properties: {}
      type: object
    GoogleCloudDialogflowV2DeleteConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.DeleteConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when delete conversation model request was created. The time is measured on server side.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2DeployConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.DeployConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when request to deploy conversation model was submitted. The time is measured on server side.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2DeployConversationModelRequest:
      description: The request message for ConversationModels.DeployConversationModel
      properties: {}
      type: object
    GoogleCloudDialogflowV2DetectIntentRequest:
      description: The request to detect user's intent.
      properties:
        inputAudio:
          description: The natural language speech audio to be processed. This field should be populated iff `query_input` is set to an input audio config. A single request can contain up to 1 minute of speech audio data.
          format: byte
          type: string
        outputAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OutputAudioConfig"
          description: Instructs the speech synthesizer how to generate the output audio. If this field is not set and agent-level speech synthesizer is not configured, no output audio is generated.
        outputAudioConfigMask:
          description: Mask for output_audio_config indicating which settings in this request-level config should override speech synthesizer settings defined at agent-level. If unspecified or empty, output_audio_config replaces the agent-level config in its entirety.
          format: google-fieldmask
          type: string
        queryInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryInput"
          description: "Required. The input specification. It can be set to: 1. an audio config which instructs the speech recognizer how to process the speech audio, 2. a conversational query in the form of text, or 3. an event that specifies which intent to trigger."
        queryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryParameters"
          description: The parameters of this query.
      type: object
    GoogleCloudDialogflowV2DetectIntentResponse:
      description: The message returned from the DetectIntent method.
      properties:
        outputAudio:
          description: "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.fulfillment_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
          format: byte
          type: string
        outputAudioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OutputAudioConfig"
          description: The config used by the speech synthesizer to generate the output audio.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryResult"
          description: The selected results of the conversational query or event processing. See `alternative_query_results` for additional potential results.
        responseId:
          description: The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues.
          type: string
        webhookStatus:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Specifies the status of the webhook request.
      type: object
    GoogleCloudDialogflowV2DialogflowAssistAnswer:
      description: Represents a Dialogflow assist answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        intentSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentSuggestion"
          description: An intent suggestion generated from conversation.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryResult"
          description: Result from v2 agent.
      type: object
    GoogleCloudDialogflowV2Document:
      description: "A knowledge document to be used by a KnowledgeBase. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The `projects.agent.knowledgeBases.documents` resource is deprecated; only use `projects.knowledgeBases.documents`."
      properties:
        contentUri:
          description: "The URI where the file content is located. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`. NOTE: External URLs must correspond to public webpages, i.e., they must be indexed by Google Search. In particular, URLs for showing documents in Google Cloud Storage (i.e. the URL in your browser) are not supported. Instead use the `gs://` format URI described above."
          type: string
        displayName:
          description: Required. The display name of the document. The name must be 1024 bytes or less; otherwise, the creation request fails.
          type: string
        enableAutoReload:
          description: Optional. If true, we try to automatically reload the document every day (at a time picked by the system). If false or unspecified, we don't try to automatically reload the document. Currently you can only enable automatic reload for documents sourced from a public url, see `source` field for the source types. Reload status can be tracked in `latest_reload_status`. If a reload fails, we will keep the document unchanged. If a reload fails with internal errors, the system will try to reload the document on the next day. If a reload fails with non-retriable errors (e.g. PERMISSION_DENIED), the system will not try to reload the document anymore. You need to manually reload the document successfully by calling `ReloadDocument` and clear the errors.
          type: boolean
        knowledgeTypes:
          description: Required. The knowledge type of document content.
          items:
            enum:
              - KNOWLEDGE_TYPE_UNSPECIFIED
              - FAQ
              - EXTRACTIVE_QA
              - ARTICLE_SUGGESTION
              - AGENT_FACING_SMART_REPLY
            type: string
          type: array
        latestReloadStatus:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2DocumentReloadStatus"
          description: Output only. The time and status of the latest reload. This reload may have been triggered automatically or manually and may not have succeeded.
          readOnly: true
        metadata:
          additionalProperties:
            type: string
          description: Optional. Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
          type: object
        mimeType:
          description: Required. The MIME type of this document.
          type: string
        name:
          description: "Optional. The document resource name. The name must be empty when creating a document. Format: `projects//locations//knowledgeBases//documents/`."
          type: string
        rawContent:
          description: The raw content of the document. This field is only permitted for EXTRACTIVE_QA and FAQ knowledge types.
          format: byte
          type: string
        state:
          description: Output only. The current state of the document.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - UPDATING
            - RELOADING
            - DELETING
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2DocumentReloadStatus:
      description: The status of a reload attempt.
      properties:
        status:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The status of a reload attempt or the initial load.
        time:
          description: The time of a reload attempt. This reload may have been triggered automatically or manually and may not have succeeded.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2DtmfParameters:
      description: The message in the response that indicates the parameters of DTMF.
      properties:
        acceptsDtmfInput:
          description: Indicates whether DTMF input can be handled in the next request.
          type: boolean
      type: object
    GoogleCloudDialogflowV2EntityType:
      description: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
      properties:
        autoExpansionMode:
          description: Optional. Indicates whether the entity type can be automatically expanded.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
          type: string
        displayName:
          description: Required. The name of the entity type.
          type: string
        enableFuzzyExtraction:
          description: Optional. Enables fuzzy entity extraction during classification.
          type: boolean
        entities:
          description: Optional. The collection of entity entries associated with the entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity"
          type: array
        kind:
          description: Required. Indicates the kind of entity type.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
          type: string
        name:
          description: "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
          type: string
      type: object
    GoogleCloudDialogflowV2EntityTypeBatch:
      description: This message is a wrapper around a collection of entity types.
      properties:
        entityTypes:
          description: A collection of entity types.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityType"
          type: array
      type: object
    GoogleCloudDialogflowV2EntityTypeEntity:
      description: An **entity entry** for an associated entity type.
      properties:
        synonyms:
          description: "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
          items:
            type: string
          type: array
        value:
          description: "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
          type: string
      type: object
    GoogleCloudDialogflowV2Environment:
      description: "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions)."
      properties:
        agentVersion:
          description: "Optional. The agent version loaded into this environment. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
          type: string
        description:
          description: Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.
          type: string
        fulfillment:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Fulfillment"
          description: Optional. The fulfillment settings to use for this environment.
        name:
          description: "Output only. The unique identifier of this agent environment. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`."
          readOnly: true
          type: string
        state:
          description: Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.
          enum:
            - STATE_UNSPECIFIED
            - STOPPED
            - LOADING
            - RUNNING
          readOnly: true
          type: string
        textToSpeechSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2TextToSpeechSettings"
          description: Optional. Text to speech settings for this environment.
        updateTime:
          description: Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2EnvironmentHistory:
      description: The response message for Environments.GetEnvironmentHistory.
      properties:
        entries:
          description: Output only. The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EnvironmentHistoryEntry"
          readOnly: true
          type: array
        nextPageToken:
          description: Output only. Token to retrieve the next page of results, or empty if there are no more results in the list.
          readOnly: true
          type: string
        parent:
          description: "Output only. The name of the environment this history is for. Supported formats: - `projects//agent/environments/` - `projects//locations//agent/environments/` The environment ID for the default environment is `-`."
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2EnvironmentHistoryEntry:
      description: Represents an environment history entry.
      properties:
        agentVersion:
          description: The agent version loaded into this environment history entry.
          type: string
        createTime:
          description: The creation time of this environment history entry.
          format: google-datetime
          type: string
        description:
          description: The developer-provided description for this environment history entry.
          type: string
      type: object
    GoogleCloudDialogflowV2EvaluationConfig:
      description: The configuration for model evaluation.
      properties:
        datasets:
          description: Required. Datasets used for evaluation.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2InputDataset"
          type: array
        smartComposeConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig"
          description: Configuration for smart compose model evalution.
        smartReplyConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig"
          description: Configuration for smart reply model evalution.
      type: object
    GoogleCloudDialogflowV2EvaluationConfigSmartComposeConfig:
      description: Smart compose specific configuration for evaluation job.
      properties:
        allowlistDocument:
          description: "The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart compose model."
          type: string
        maxResultCount:
          description: Required. The model to be evaluated can return multiple results with confidence score on each query. These results will be sorted by the descending order of the scores and we only keep the first max_result_count results as the final results to evaluate.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowV2EvaluationConfigSmartReplyConfig:
      description: Smart reply specific configuration for evaluation job.
      properties:
        allowlistDocument:
          description: "The allowlist document resource name. Format: `projects//knowledgeBases//documents/`. Only used for smart reply model."
          type: string
        maxResultCount:
          description: Required. The model to be evaluated can return multiple results with confidence score on each query. These results will be sorted by the descending order of the scores and we only keep the first max_result_count results as the final results to evaluate.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowV2EventInput:
      description: 'Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.'
      properties:
        languageCode:
          description: Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request.
          type: string
        name:
          description: Required. The unique identifier of the event.
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2ExportAgentRequest:
      description: The request message for Agents.ExportAgent.
      properties:
        agentUri:
          description: Required. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline. Dialogflow performs a write operation for the Cloud Storage object on the caller's behalf, so your request authentication must have write permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage).
          type: string
      type: object
    GoogleCloudDialogflowV2ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Zip compressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.
          type: string
      type: object
    GoogleCloudDialogflowV2ExportDocumentRequest:
      description: Request message for Documents.ExportDocument.
      properties:
        exportFullContent:
          description: When enabled, export the full content of the document including empirical probability.
          type: boolean
        gcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GcsDestination"
          description: Cloud Storage file path to export the document.
        smartMessagingPartialUpdate:
          description: When enabled, export the smart messaging allowlist document for partial update.
          type: boolean
      type: object
    GoogleCloudDialogflowV2ExportOperationMetadata:
      description: Metadata related to the Export Data Operations (e.g. ExportDocument).
      properties:
        exportedGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GcsDestination"
          description: Cloud Storage file path of the exported data.
      type: object
    GoogleCloudDialogflowV2FaqAnswer:
      description: Represents answer from "frequently asked questions".
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2Fulfillment:
      description: By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).
      properties:
        displayName:
          description: Optional. The human-readable name of the fulfillment, unique within the agent. This field is not used for Fulfillment in an Environment.
          type: string
        enabled:
          description: Optional. Whether fulfillment is enabled.
          type: boolean
        features:
          description: Optional. The field defines whether the fulfillment is enabled for certain features.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2FulfillmentFeature"
          type: array
        genericWebService:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2FulfillmentGenericWebService"
          description: Configuration for a generic web service.
        name:
          description: "Required. The unique identifier of the fulfillment. Supported formats: - `projects//agent/fulfillment` - `projects//locations//agent/fulfillment` This field is not used for Fulfillment in an Environment."
          type: string
      type: object
    GoogleCloudDialogflowV2FulfillmentFeature:
      description: Whether fulfillment is enabled for the specific feature.
      properties:
        type:
          description: The type of the feature that enabled for fulfillment.
          enum:
            - TYPE_UNSPECIFIED
            - SMALLTALK
          type: string
      type: object
    GoogleCloudDialogflowV2FulfillmentGenericWebService:
      description: "Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers. More information could be found at: https://cloud.google.com/dialogflow/docs/fulfillment-configure."
      properties:
        isCloudFunction:
          deprecated: true
          description: Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false. is_cloud_function is deprecated. Cloud functions can be configured by its uri as a regular web service now.
          type: boolean
        password:
          description: Optional. The password for HTTP Basic authentication.
          type: string
        requestHeaders:
          additionalProperties:
            type: string
          description: Optional. The HTTP request headers to send together with fulfillment requests.
          type: object
        uri:
          description: Required. The fulfillment URI for receiving POST requests. It must use https protocol.
          type: string
        username:
          description: Optional. The user name for HTTP Basic authentication.
          type: string
      type: object
    GoogleCloudDialogflowV2GcsDestination:
      description: Google Cloud Storage location for the output.
      properties:
        uri:
          description: 'The Google Cloud Storage URIs for the output. A URI is of the form: `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case. The requesting user must have "write-permission" to the bucket.'
          type: string
      type: object
    GoogleCloudDialogflowV2GcsSources:
      description: Google Cloud Storage location for the inputs.
      properties:
        uris:
          description: "Required. Google Cloud Storage URIs for the inputs. A URI is of the form: `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2GenerateStatelessSummaryRequest:
      description: The request message for Conversations.GenerateStatelessSummary.
      properties:
        conversationProfile:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationProfile"
          description: "Required. A ConversationProfile containing information required for Summary generation. Required fields: {language_code, security_settings} Optional fields: {agent_assistant_config}"
        latestMessage:
          description: The name of the latest conversation message used as context for generating a Summary. If empty, the latest message of the conversation will be used. The format is specific to the user and the names of the messages provided.
          type: string
        maxContextSize:
          description: Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 500 and at most 1000.
          format: int32
          type: integer
        statelessConversation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GenerateStatelessSummaryRequestMinimalConversation"
          description: Required. The conversation to suggest a summary for.
      type: object
    GoogleCloudDialogflowV2GenerateStatelessSummaryRequestMinimalConversation:
      description: The minimum amount of information required to generate a Summary without having a Conversation resource created.
      properties:
        messages:
          description: "Required. The messages that the Summary will be generated from. It is expected that this message content is already redacted and does not contain any PII. Required fields: {content, language_code, participant, participant_role} Optional fields: {send_time} If send_time is not provided, then the messages must be provided in chronological order."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Message"
          type: array
      type: object
    GoogleCloudDialogflowV2GenerateStatelessSummaryResponse:
      description: The response message for Conversations.GenerateStatelessSummary.
      properties:
        contextSize:
          description: Number of messages prior to and including last_conversation_message used to compile the suggestion. It may be smaller than the GenerateStatelessSummaryRequest.context_size field in the request if there weren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: The name of the latest conversation message used as context for compiling suggestion. The format is specific to the user and the names of the messages provided.
          type: string
        summary:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GenerateStatelessSummaryResponseSummary"
          description: Generated summary.
      type: object
    GoogleCloudDialogflowV2GenerateStatelessSummaryResponseSummary:
      description: Generated summary for a conversation.
      properties:
        baselineModelVersion:
          description: The baseline model version used to generate this summary. It is empty if a baseline model was not used to generate this summary.
          type: string
        text:
          description: The summary content that is concatenated into one string.
          type: string
        textSections:
          additionalProperties:
            type: string
          description: The summary content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          type: object
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfig:
      description: Defines the Human Agent Assist to connect to a conversation.
      properties:
        endUserSuggestionConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
          description: Configuration for agent assistance of end user participant. Currently, this feature is not general available, please contact Google to get access.
        humanAgentSuggestionConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig"
          description: Configuration for agent assistance of human agent participant.
        messageAnalysisConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig"
          description: Configuration for message analysis.
        notificationConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2NotificationConfig"
          description: Pub/Sub topic on which to publish new agent assistant events.
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig:
      description: "Custom conversation models used in agent assist feature. Supported feature: ARTICLE_SUGGESTION, SMART_COMPOSE, SMART_REPLY, CONVERSATION_SUMMARIZATION."
      properties:
        baselineModelVersion:
          description: "Version of current baseline model. It will be ignored if model is set. Valid versions are: Article Suggestion baseline model: - 0.9 - 1.0 (default) Summarization baseline model: - 1.0"
          type: string
        model:
          description: "Conversation model resource name. Format: `projects//conversationModels/`."
          type: string
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig:
      description: Config to process conversation.
      properties:
        recentSentencesCount:
          description: Number of recent non-small-talk sentences to use as context for article and FAQ suggestion
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigMessageAnalysisConfig:
      description: Configuration for analyses to run on each conversation message.
      properties:
        enableEntityExtraction:
          description: Enable entity extraction in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Currently, this feature is not general available, please contact Google to get access.
          type: boolean
        enableSentimentAnalysis:
          description: "Enable sentiment analysis in conversation messages on [agent assist stage](https://cloud.google.com/dialogflow/priv/docs/contact-center/basics#stages). If unspecified, defaults to false. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral: https://cloud.google.com/natural-language/docs/basics#sentiment_analysis For Participants.StreamingAnalyzeContent method, result will be in StreamingAnalyzeContentResponse.message.SentimentAnalysisResult. For Participants.AnalyzeContent method, result will be in AnalyzeContentResponse.message.SentimentAnalysisResult For Conversations.ListMessages method, result will be in ListMessagesResponse.messages.SentimentAnalysisResult If Pub/Sub notification is configured, result will be in ConversationEvent.new_message_payload.SentimentAnalysisResult."
          type: boolean
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionConfig:
      description: Detail human agent assistant config.
      properties:
        featureConfigs:
          description: Configuration of different suggestion features. One feature can have only one config.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig"
          type: array
        groupSuggestionResponses:
          description: If `group_suggestion_responses` is false, and there are multiple `feature_configs` in `event based suggestion` or StreamingAnalyzeContent, we will try to deliver suggestions to customers as soon as we get new suggestion. Different type of suggestions based on the same context will be in separate Pub/Sub event or `StreamingAnalyzeContentResponse`. If `group_suggestion_responses` set to true. All the suggestions to the same participant based on the same context will be grouped into a single Pub/Sub event or StreamingAnalyzeContentResponse.
          type: boolean
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig:
      description: Config for suggestion features.
      properties:
        conversationModelConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationModelConfig"
          description: Configs of custom conversation model.
        conversationProcessConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigConversationProcessConfig"
          description: Configs for processing conversation.
        disableAgentQueryLogging:
          description: "Optional. Disable the logging of search queries sent by human agents. It can prevent those queries from being stored at answer records. Supported features: KNOWLEDGE_SEARCH."
          type: boolean
        enableConversationAugmentedQuery:
          description: "Optional. Enable including conversation context during query answer generation. Supported features: KNOWLEDGE_SEARCH."
          type: boolean
        enableEventBasedSuggestion:
          description: "Automatically iterates all participants and tries to compile suggestions. Supported features: ARTICLE_SUGGESTION, FAQ, DIALOGFLOW_ASSIST, KNOWLEDGE_ASSIST."
          type: boolean
        queryConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig"
          description: Configs of query.
        suggestionFeature:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestionFeature"
          description: The suggestion feature.
        suggestionTriggerSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings"
          description: Settings of suggestion trigger. Currently, only ARTICLE_SUGGESTION and FAQ will use this field.
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfig:
      description: Config for suggestion query.
      properties:
        confidenceThreshold:
          description: "Confidence threshold of query result. Agent Assist gives each suggestion a score in the range [0.0, 1.0], based on the relevance between the suggestion and the current conversation context. A score of 0.0 has no relevance, while a score of 1.0 has high relevance. Only suggestions with a score greater than or equal to the value of this field are included in the results. For a baseline model (the default), the recommended value is in the range [0.05, 0.1]. For a custom model, there is no recommended value. Tune this value by starting from a very low value and slowly increasing until you have desired results. If this field is not set, it defaults to 0.0, which means that all suggestions are returned. Supported features: ARTICLE_SUGGESTION, FAQ, SMART_REPLY, SMART_COMPOSE, KNOWLEDGE_SEARCH, KNOWLEDGE_ASSIST, ENTITY_EXTRACTION."
          format: float
          type: number
        contextFilterSettings:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings"
          description: Determines how recent conversation context is filtered when generating suggestions. If unspecified, no messages will be dropped.
        dialogflowQuerySource:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource"
          description: Query from Dialogflow agent. It is used by DIALOGFLOW_ASSIST.
        documentQuerySource:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource"
          description: "Query from knowledge base document. It is used by: SMART_REPLY, SMART_COMPOSE."
        knowledgeBaseQuerySource:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource"
          description: "Query from knowledgebase. It is used by: ARTICLE_SUGGESTION, FAQ."
        maxResults:
          description: Maximum number of results to return. Currently, if unset, defaults to 10. And the max number is 20.
          format: int32
          type: integer
        sections:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections"
          description: Optional. The customized sections chosen to return when requesting a summary of a conversation.
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigContextFilterSettings:
      description: Settings that determine how to filter recent conversation context when generating suggestions.
      properties:
        dropHandoffMessages:
          description: If set to true, the last message from virtual agent (hand off message) and the message before it (trigger message of hand off) are dropped.
          type: boolean
        dropIvrMessages:
          description: If set to true, all messages from ivr stage are dropped.
          type: boolean
        dropVirtualAgentMessages:
          description: If set to true, all messages from virtual agent are dropped.
          type: boolean
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySource:
      description: "Dialogflow source setting. Supported feature: DIALOGFLOW_ASSIST."
      properties:
        agent:
          description: "Required. The name of a Dialogflow virtual agent used for end user side intent detection and suggestion. Format: `projects//locations//agent`. When multiple agents are allowed in the same Dialogflow project."
          type: string
        humanAgentSideConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceHumanAgentSideConfig"
          description: Optional. The Dialogflow assist configuration for human agent.
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDialogflowQuerySourceHumanAgentSideConfig:
      description: The configuration used for human agent side Dialogflow assist suggestion.
      properties:
        agent:
          description: "Optional. The name of a dialogflow virtual agent used for intent detection and suggestion triggered by human agent. Format: `projects//locations//agent`."
          type: string
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigDocumentQuerySource:
      description: "Document source settings. Supported features: SMART_REPLY, SMART_COMPOSE."
      properties:
        documents:
          description: "Required. Knowledge documents to query from. Format: `projects//locations//knowledgeBases//documents/`. Currently, at most 5 documents are supported."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigKnowledgeBaseQuerySource:
      description: "Knowledge base source settings. Supported features: ARTICLE_SUGGESTION, FAQ."
      properties:
        knowledgeBases:
          description: "Required. Knowledge bases to query. Format: `projects//locations//knowledgeBases/`. Currently, at most 5 knowledge bases are supported."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionQueryConfigSections:
      description: "Custom sections to return when requesting a summary of a conversation. This is only supported when `baseline_model_version` == '2.0'. Supported features: CONVERSATION_SUMMARIZATION, CONVERSATION_SUMMARIZATION_VOICE."
      properties:
        sectionTypes:
          description: The selected sections chosen to return when requesting a summary of a conversation. A duplicate selected section will be treated as a single selected section. If section types are not provided, the default will be {SITUATION, ACTION, RESULT}.
          items:
            enum:
              - SECTION_TYPE_UNSPECIFIED
              - SITUATION
              - ACTION
              - RESOLUTION
              - REASON_FOR_CANCELLATION
              - CUSTOMER_SATISFACTION
              - ENTITIES
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionTriggerSettings:
      description: Settings of suggestion trigger.
      properties:
        noSmalltalk:
          description: Do not trigger if last utterance is small talk.
          type: boolean
        onlyEndUser:
          description: Only trigger suggestion if participant role of last utterance is END_USER.
          type: boolean
      type: object
    GoogleCloudDialogflowV2HumanAgentAssistantEvent:
      description: Represents a notification sent to Cloud Pub/Sub subscribers for human agent assistant events in a specific conversation.
      properties:
        conversation:
          description: "The conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        participant:
          description: "The participant that the suggestion is compiled for. Format: `projects//conversations//participants/`. It will not be set in legacy workflow."
          type: string
        suggestionResults:
          description: The suggestion results payload that this notification refers to.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestionResult"
          type: array
      type: object
    GoogleCloudDialogflowV2HumanAgentHandoffConfig:
      description: Defines the hand off to a live agent, typically on which external agent service provider to connect to a conversation. Currently, this feature is not general available, please contact Google to get access.
      properties:
        livePersonConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig"
          description: Uses LivePerson (https://www.liveperson.com).
        salesforceLiveAgentConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig"
          description: Uses Salesforce Live Agent.
      type: object
    GoogleCloudDialogflowV2HumanAgentHandoffConfigLivePersonConfig:
      description: Configuration specific to LivePerson (https://www.liveperson.com).
      properties:
        accountNumber:
          description: Required. Account number of the LivePerson account to connect. This is the account number you input at the login page.
          type: string
      type: object
    GoogleCloudDialogflowV2HumanAgentHandoffConfigSalesforceLiveAgentConfig:
      description: Configuration specific to Salesforce Live Agent.
      properties:
        buttonId:
          description: Required. Live Agent chat button ID.
          type: string
        deploymentId:
          description: Required. Live Agent deployment ID.
          type: string
        endpointDomain:
          description: Required. Domain of the Live Agent endpoint for this agent. You can find the endpoint URL in the `Live Agent settings` page. For example if URL has the form https://d.la4-c2-phx.salesforceliveagent.com/..., you should fill in d.la4-c2-phx.salesforceliveagent.com.
          type: string
        organizationId:
          description: Required. The organization ID of the Salesforce account.
          type: string
      type: object
    GoogleCloudDialogflowV2ImportAgentRequest:
      description: The request message for Agents.ImportAgent.
      properties:
        agentContent:
          description: Zip compressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: "The URI to a Google Cloud Storage file containing the agent to import. Note: The URI must start with \"gs://\". Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage)."
          type: string
      type: object
    GoogleCloudDialogflowV2ImportConversationDataOperationMetadata:
      description: Metadata for a ConversationDatasets.ImportConversationData operation.
      properties:
        conversationDataset:
          description: "The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`"
          type: string
        createTime:
          description: Timestamp when import conversation data request was created. The time is measured on server side.
          format: google-datetime
          type: string
        partialFailures:
          description: Partial failures are failures that don't fail the whole long running operation, e.g. single files that couldn't be read.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV2ImportConversationDataOperationResponse:
      description: Response used for ConversationDatasets.ImportConversationData long running operation.
      properties:
        conversationDataset:
          description: "The resource name of the imported conversation dataset. Format: `projects//locations//conversationDatasets/`"
          type: string
        importCount:
          description: Number of conversations imported successfully.
          format: int32
          type: integer
      type: object
    GoogleCloudDialogflowV2ImportConversationDataRequest:
      description: The request message for ConversationDatasets.ImportConversationData.
      properties:
        inputConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2InputConfig"
          description: Required. Configuration describing where to import data from.
      type: object
    GoogleCloudDialogflowV2ImportDocumentTemplate:
      description: The template used for importing documents.
      properties:
        knowledgeTypes:
          description: Required. The knowledge type of document content.
          items:
            enum:
              - KNOWLEDGE_TYPE_UNSPECIFIED
              - FAQ
              - EXTRACTIVE_QA
              - ARTICLE_SUGGESTION
              - AGENT_FACING_SMART_REPLY
            type: string
          type: array
        metadata:
          additionalProperties:
            type: string
          description: Metadata for the document. The metadata supports arbitrary key-value pairs. Suggested use cases include storing a document's title, an external URL distinct from the document's content_uri, etc. The max size of a `key` or a `value` of the metadata is 1024 bytes.
          type: object
        mimeType:
          description: Required. The MIME type of the document.
          type: string
      type: object
    GoogleCloudDialogflowV2ImportDocumentsRequest:
      description: Request message for Documents.ImportDocuments.
      properties:
        documentTemplate:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ImportDocumentTemplate"
          description: Required. Document template used for importing all the documents.
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GcsSources"
          description: Optional. The Google Cloud Storage location for the documents. The path can include a wildcard. These URIs may have the forms `gs:///`. `gs:////*.`.
        importGcsCustomMetadata:
          description: Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI.
          type: boolean
      type: object
    GoogleCloudDialogflowV2ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV2InputAudioConfig:
      description: Instructs the speech recognizer how to process the audio content.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the audio content to process.
          enum:
            - AUDIO_ENCODING_UNSPECIFIED
            - AUDIO_ENCODING_LINEAR_16
            - AUDIO_ENCODING_FLAC
            - AUDIO_ENCODING_MULAW
            - AUDIO_ENCODING_AMR
            - AUDIO_ENCODING_AMR_WB
            - AUDIO_ENCODING_OGG_OPUS
            - AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE
          type: string
        disableNoSpeechRecognizedEvent:
          description: Only used in Participants.AnalyzeContent and Participants.StreamingAnalyzeContent. If `false` and recognition doesn't return any result, trigger `NO_SPEECH_RECOGNIZED` event to Dialogflow agent.
          type: boolean
        enableAutomaticPunctuation:
          description: Enable automatic punctuation option at the speech backend.
          type: boolean
        enableWordInfo:
          description: If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.
          type: boolean
        languageCode:
          description: Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
          type: string
        model:
          description: Optional. Which Speech model to select for the given request. For more information, see [Speech models](https://cloud.google.com/dialogflow/es/docs/speech-models).
          type: string
        modelVariant:
          description: Which variant of the Speech model to use.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
          type: string
        optOutConformerModelMigration:
          description: If `true`, the request will opt out for STT conformer model migration. This field will be deprecated once force migration takes place in June 2024. Please refer to [Dialogflow ES Speech model migration](https://cloud.google.com/dialogflow/es/docs/speech-model-migration).
          type: boolean
        phraseHints:
          deprecated: true
          description: A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [`speech_contexts`]() instead. If you specify both [`phrase_hints`]() and [`speech_contexts`](), Dialogflow will treat the [`phrase_hints`]() as a single additional [`SpeechContext`]().
          items:
            type: string
          type: array
        sampleRateHertz:
          description: Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details.
          format: int32
          type: integer
        singleUtterance:
          description: "If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over StreamingDetectIntentRequest.single_utterance."
          type: boolean
        speechContexts:
          description: Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SpeechContext"
          type: array
      type: object
    GoogleCloudDialogflowV2InputConfig:
      description: Represents the configuration of importing a set of conversation files in Google Cloud Storage.
      properties:
        gcsSource:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2GcsSources"
          description: The Cloud Storage URI has the form gs:////agent*.json. Wildcards are allowed and will be expanded into all matched JSON files, which will be read as one conversation per file.
      type: object
    GoogleCloudDialogflowV2InputDataset:
      description: InputDataset used to create model or do evaluation. NextID:5
      properties:
        dataset:
          description: "Required. ConversationDataset resource name. Format: `projects//locations//conversationDatasets/`"
          type: string
      type: object
    GoogleCloudDialogflowV2Intent:
      description: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
      properties:
        action:
          description: "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
          type: string
        defaultResponsePlatforms:
          description: Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
          items:
            enum:
              - PLATFORM_UNSPECIFIED
              - FACEBOOK
              - SLACK
              - TELEGRAM
              - KIK
              - SKYPE
              - LINE
              - VIBER
              - ACTIONS_ON_GOOGLE
              - GOOGLE_HANGOUTS
            type: string
          type: array
        displayName:
          description: Required. The name of this intent.
          type: string
        endInteraction:
          description: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
          type: boolean
        events:
          description: Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
          items:
            type: string
          type: array
        followupIntentInfo:
          description: Output only. Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          readOnly: true
          type: array
        inputContextNames:
          description: "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`."
          items:
            type: string
          type: array
        isFallback:
          description: Optional. Indicates whether this is a fallback intent.
          type: boolean
        liveAgentHandoff:
          description: Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
          type: boolean
        messages:
          description: Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessage"
          type: array
        mlDisabled:
          description: "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off."
          type: boolean
        name:
          description: "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`."
          type: string
        outputContexts:
          description: "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        parameters:
          description: Optional. The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentParameter"
          type: array
        parentFollowupIntentName:
          description: "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
          type: string
        priority:
          description: Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        resetContexts:
          description: Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
          type: boolean
        rootFollowupIntentName:
          description: "Output only. Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`."
          readOnly: true
          type: string
        trainingPhrases:
          description: Optional. The collection of examples that the agent is trained on.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentTrainingPhrase"
          type: array
        webhookState:
          description: Optional. Indicates whether webhooks are enabled for the intent.
          enum:
            - WEBHOOK_STATE_UNSPECIFIED
            - WEBHOOK_STATE_ENABLED
            - WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
          type: string
      type: object
    GoogleCloudDialogflowV2IntentBatch:
      description: This message is a wrapper around a collection of intents.
      properties:
        intents:
          description: A collection of intents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentFollowupIntentInfo:
      description: Represents a single followup intent in the chain.
      properties:
        followupIntentName:
          description: "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
          type: string
        parentFollowupIntentName:
          description: "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessage:
      description: A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).
      properties:
        basicCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCard"
          description: The basic card response for Actions on Google.
        browseCarouselCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard"
          description: Browse carousel card for Actions on Google.
        card:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCard"
          description: The card response.
        carouselSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCarouselSelect"
          description: The carousel card response for Actions on Google.
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: The image response.
        linkOutSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion"
          description: The link out suggestion chip for Actions on Google.
        listSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageListSelect"
          description: The list card response for Actions on Google.
        mediaContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageMediaContent"
          description: The media content card for Actions on Google.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: A custom platform-specific response.
          type: object
        platform:
          description: Optional. The platform that this message is intended for.
          enum:
            - PLATFORM_UNSPECIFIED
            - FACEBOOK
            - SLACK
            - TELEGRAM
            - KIK
            - SKYPE
            - LINE
            - VIBER
            - ACTIONS_ON_GOOGLE
            - GOOGLE_HANGOUTS
          type: string
        quickReplies:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageQuickReplies"
          description: The quick replies response.
        simpleResponses:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSimpleResponses"
          description: The voice and text-only responses for Actions on Google.
        suggestions:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSuggestions"
          description: The suggestion chips for Actions on Google.
        tableCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCard"
          description: Table card for Actions on Google.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageText"
          description: The text response.
      type: object
    GoogleCloudDialogflowV2IntentMessageBasicCard:
      description: The basic card message. Useful for displaying information.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          type: array
        formattedText:
          description: Required, unless image is present. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. The image for the card.
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBasicCardButton:
      description: The button object that appears at the bottom of a card.
      properties:
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction"
          description: Required. Action to take when a user taps on the button.
        title:
          description: Required. The title of the button.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction:
      description: Opens the given URI.
      properties:
        uri:
          description: Required. The HTTP or HTTPS scheme URI.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard:
      description: Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel
      properties:
        imageDisplayOptions:
          description: Optional. Settings for displaying the image. Applies to every image in items.
          enum:
            - IMAGE_DISPLAY_OPTIONS_UNSPECIFIED
            - GRAY
            - WHITE
            - CROPPED
            - BLURRED_BACKGROUND
          type: string
        items:
          description: Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem:
      description: Browsing carousel tile
      properties:
        description:
          description: Optional. Description of the carousel item. Maximum of four lines of text.
          type: string
        footer:
          description: Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Hero image for the carousel item.
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
          description: Required. Action to present to the user.
        title:
          description: Required. Title of the carousel item. Maximum of two lines of text.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction:
      description: Actions on Google action to open a given url.
      properties:
        url:
          description: Required. URL
          type: string
        urlTypeHint:
          description: Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.
          enum:
            - URL_TYPE_HINT_UNSPECIFIED
            - AMP_ACTION
            - AMP_CONTENT
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageCard:
      description: The card response message.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCardButton"
          type: array
        imageUri:
          description: Optional. The public URI to an image file for the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageCardButton:
      description: Contains information about a button.
      properties:
        postback:
          description: Optional. The text to send back to the Dialogflow API or a URI to open.
          type: string
        text:
          description: Optional. The text to show on the button.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageCarouselSelect:
      description: The card for presenting a carousel of options to select from.
      properties:
        items:
          description: Required. Carousel items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageCarouselSelectItem:
      description: An item in the carousel.
      properties:
        description:
          description: Optional. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
          description: Required. Additional info about the option item.
        title:
          description: Required. Title of the carousel item.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageColumnProperties:
      description: Column properties for TableCard.
      properties:
        header:
          description: Required. Column heading.
          type: string
        horizontalAlignment:
          description: Optional. Defines text alignment for all cells in this column.
          enum:
            - HORIZONTAL_ALIGNMENT_UNSPECIFIED
            - LEADING
            - CENTER
            - TRAILING
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageImage:
      description: The image response message.
      properties:
        accessibilityText:
          description: Optional. A text description of the image to be used for accessibility, e.g., screen readers.
          type: string
        imageUri:
          description: Optional. The public URI to an image file.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion:
      description: The suggestion chip message that allows the user to jump out to the app or website associated with this agent.
      properties:
        destinationName:
          description: Required. The name of the app or site this chip is linking to.
          type: string
        uri:
          description: Required. The URI of the app or site to open when the user taps the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageListSelect:
      description: The card for presenting a list of options to select from.
      properties:
        items:
          description: Required. List items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageListSelectItem"
          type: array
        subtitle:
          description: Optional. Subtitle of the list.
          type: string
        title:
          description: Optional. The overall title of the list.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageListSelectItem:
      description: An item in the list.
      properties:
        description:
          description: Optional. The main text describing the item.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
          description: Required. Additional information about this option.
        title:
          description: Required. The title of the list item.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageMediaContent:
      description: The media content card for Actions on Google.
      properties:
        mediaObjects:
          description: Required. List of media objects.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          type: array
        mediaType:
          description: Optional. What type of media is the content (ie "audio").
          enum:
            - RESPONSE_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject:
      description: Response media object for media content card.
      properties:
        contentUrl:
          description: Required. Url where the media is stored.
          type: string
        description:
          description: Optional. Description of media card.
          type: string
        icon:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Icon to display above media content.
        largeImage:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Image to display above media content.
        name:
          description: Required. Name of media card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageQuickReplies:
      description: The quick replies response message.
      properties:
        quickReplies:
          description: Optional. The collection of quick replies.
          items:
            type: string
          type: array
        title:
          description: Optional. The title of the collection of quick replies.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageSelectItemInfo:
      description: Additional info about the select item for when it is triggered in a dialog.
      properties:
        key:
          description: Required. A unique key that will be sent back to the agent if this response is given.
          type: string
        synonyms:
          description: Optional. A list of synonyms that can also be used to trigger this item in dialog.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageSimpleResponse:
      description: The simple response message containing speech or text.
      properties:
        displayText:
          description: Optional. The text to display.
          type: string
        ssml:
          description: One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.
          type: string
        textToSpeech:
          description: One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageSimpleResponses:
      description: The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.
      properties:
        simpleResponses:
          description: Required. The list of simple responses.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageSuggestion:
      description: The suggestion chip message that the user can tap to quickly post a reply to the conversation.
      properties:
        title:
          description: Required. The text shown the in the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageSuggestions:
      description: The collection of suggestions.
      properties:
        suggestions:
          description: Required. The list of suggested replies.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageSuggestion"
          type: array
      type: object
    GoogleCloudDialogflowV2IntentMessageTableCard:
      description: Table card for Actions on Google.
      properties:
        buttons:
          description: Optional. List of buttons for the card.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          type: array
        columnProperties:
          description: Optional. Display properties for the columns in this table.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageColumnProperties"
          type: array
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageImage"
          description: Optional. Image which should be displayed on the card.
        rows:
          description: Optional. Rows in this table of data.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCardRow"
          type: array
        subtitle:
          description: Optional. Subtitle to the title.
          type: string
        title:
          description: Required. Title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageTableCardCell:
      description: Cell of TableCardRow.
      properties:
        text:
          description: Required. Text in this cell.
          type: string
      type: object
    GoogleCloudDialogflowV2IntentMessageTableCardRow:
      description: Row of TableCard.
      properties:
        cells:
          description: Optional. List of cells that make up this row.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessageTableCardCell"
          type: array
        dividerAfter:
          description: Optional. Whether to add a visual divider after this row.
          type: boolean
      type: object
    GoogleCloudDialogflowV2IntentMessageText:
      description: The text response message.
      properties:
        text:
          description: Optional. The collection of the agent's responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2IntentParameter:
      description: Represents intent parameters.
      properties:
        defaultValue:
          description: "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
          type: string
        displayName:
          description: Required. The name of the parameter.
          type: string
        entityTypeDisplayName:
          description: Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.
          type: string
        isList:
          description: Optional. Indicates whether the parameter represents a list of values.
          type: boolean
        mandatory:
          description: Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.
          type: boolean
        name:
          description: The unique identifier of this parameter.
          type: string
        prompts:
          description: Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.
          items:
            type: string
          type: array
        value:
          description: "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
          type: string
      type: object
    GoogleCloudDialogflowV2IntentSuggestion:
      description: Represents an intent suggestion.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: The display name of the intent.
          type: string
        intentV2:
          description: "The unique identifier of this intent. Format: `projects//locations//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2IntentTrainingPhrase:
      description: Represents an example that the agent is trained on.
      properties:
        name:
          description: Output only. The unique identifier of this training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          type: array
        timesAddedCount:
          description: Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.
          format: int32
          type: integer
        type:
          description: Required. The type of the training phrase.
          enum:
            - TYPE_UNSPECIFIED
            - EXAMPLE
            - TEMPLATE
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
      type: object
    GoogleCloudDialogflowV2IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        alias:
          description: Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.
          type: string
        entityType:
          description: Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
        userDefined:
          description: Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.
          type: boolean
      type: object
    GoogleCloudDialogflowV2KnowledgeBase:
      description: "A knowledge base represents a collection of knowledge documents that you provide to Dialogflow. Your knowledge documents contain information that may be useful during conversations with end-users. Some Dialogflow features use knowledge bases when looking for a response to an end-user input. For more information, see the [knowledge base guide](https://cloud.google.com/dialogflow/docs/how/knowledge-bases). Note: The `projects.agent.knowledgeBases` resource is deprecated; only use `projects.knowledgeBases`."
      properties:
        displayName:
          description: Required. The display name of the knowledge base. The name must be 1024 bytes or less; otherwise, the creation request fails.
          type: string
        languageCode:
          description: Language which represents the KnowledgeBase. When the KnowledgeBase is created/updated, expect this to be present for non en-us languages. When unspecified, the default language code en-us applies.
          type: string
        name:
          description: "The knowledge base resource name. The name must be empty when creating a knowledge base. Format: `projects//locations//knowledgeBases/`."
          type: string
      type: object
    GoogleCloudDialogflowV2KnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        exportOperationMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2ExportOperationMetadata"
          description: Metadata for the Export Data Operation such as the destination of export.
        knowledgeBase:
          description: The name of the knowledge base interacted with during the operation.
          type: string
        state:
          description: Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2ListAnswerRecordsResponse:
      description: Response message for AnswerRecords.ListAnswerRecords.
      properties:
        answerRecords:
          description: The list of answer records.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2AnswerRecord"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Or empty if there are no more results. Pass this value in the ListAnswerRecordsRequest.page_token field in the subsequent call to `ListAnswerRecords` method to retrieve the next page of results.
          type: string
      type: object
    GoogleCloudDialogflowV2ListContextsResponse:
      description: The response message for Contexts.ListContexts.
      properties:
        contexts:
          description: The list of contexts. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListConversationDatasetsResponse:
      description: The response message for ConversationDatasets.ListConversationDatasets.
      properties:
        conversationDatasets:
          description: The list of datasets to return.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationDataset"
          type: array
        nextPageToken:
          description: The token to use to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListConversationModelEvaluationsResponse:
      description: The response message for ConversationModels.ListConversationModelEvaluations
      properties:
        conversationModelEvaluations:
          description: The list of evaluations to return.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationModelEvaluation"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListConversationModelsResponse:
      description: The response message for ConversationModels.ListConversationModels
      properties:
        conversationModels:
          description: The list of models to return.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationModel"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListConversationProfilesResponse:
      description: The response message for ConversationProfiles.ListConversationProfiles.
      properties:
        conversationProfiles:
          description: The list of project conversation profiles. There is a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ConversationProfile"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListConversationsResponse:
      description: The response message for Conversations.ListConversations.
      properties:
        conversations:
          description: The list of conversations. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Conversation"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListDocumentsResponse:
      description: Response message for Documents.ListDocuments.
      properties:
        documents:
          description: The list of documents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Document"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListEntityTypesResponse:
      description: The response message for EntityTypes.ListEntityTypes.
      properties:
        entityTypes:
          description: The list of agent entity types. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityType"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListEnvironmentsResponse:
      description: The response message for Environments.ListEnvironments.
      properties:
        environments:
          description: The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Environment"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListIntentsResponse:
      description: The response message for Intents.ListIntents.
      properties:
        intents:
          description: The list of agent intents. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListKnowledgeBasesResponse:
      description: Response message for KnowledgeBases.ListKnowledgeBases.
      properties:
        knowledgeBases:
          description: The list of knowledge bases.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2KnowledgeBase"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListMessagesResponse:
      description: The response message for Conversations.ListMessages.
      properties:
        messages:
          description: The list of messages. There will be a maximum number of items returned based on the page_size field in the request. `messages` is sorted by `create_time` in descending order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Message"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2ListParticipantsResponse:
      description: The response message for Participants.ListParticipants.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results or empty if there are no more results in the list.
          type: string
        participants:
          description: The list of participants. There is a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Participant"
          type: array
      type: object
    GoogleCloudDialogflowV2ListSessionEntityTypesResponse:
      description: The response message for SessionEntityTypes.ListSessionEntityTypes.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        sessionEntityTypes:
          description: The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SessionEntityType"
          type: array
      type: object
    GoogleCloudDialogflowV2ListVersionsResponse:
      description: The response message for Versions.ListVersions.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        versions:
          description: The list of agent versions. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Version"
          type: array
      type: object
    GoogleCloudDialogflowV2LoggingConfig:
      description: Defines logging behavior for conversation lifecycle events.
      properties:
        enableStackdriverLogging:
          description: Whether to log conversation events like CONVERSATION_STARTED to Stackdriver in the conversation project as JSON format ConversationEvent protos.
          type: boolean
      type: object
    GoogleCloudDialogflowV2Message:
      description: Represents a message posted into a conversation.
      properties:
        content:
          description: Required. The message content.
          type: string
        createTime:
          description: Output only. The time when the message was created in Contact Center AI.
          format: google-datetime
          readOnly: true
          type: string
        languageCode:
          description: 'Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        messageAnnotation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2MessageAnnotation"
          description: Output only. The annotation for the message.
          readOnly: true
        name:
          description: "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
          type: string
        participant:
          description: Output only. The participant that sends this message.
          readOnly: true
          type: string
        participantRole:
          description: Output only. The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          readOnly: true
          type: string
        sendTime:
          description: Optional. The time when the message was sent.
          format: google-datetime
          type: string
        sentimentAnalysis:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisResult"
          description: Output only. The sentiment analysis result for the message.
          readOnly: true
      type: object
    GoogleCloudDialogflowV2MessageAnnotation:
      description: Represents the result of annotation for the message.
      properties:
        containEntities:
          description: Indicates whether the text message contains entities.
          type: boolean
        parts:
          description: The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2AnnotatedMessagePart"
          type: array
      type: object
    GoogleCloudDialogflowV2NotificationConfig:
      description: Defines notification behavior.
      properties:
        messageFormat:
          description: Format of message.
          enum:
            - MESSAGE_FORMAT_UNSPECIFIED
            - PROTO
            - JSON
          type: string
        topic:
          description: "Name of the Pub/Sub topic to publish conversation events like CONVERSATION_STARTED as serialized ConversationEvent protos. For telephony integration to receive notification, make sure either this topic is in the same project as the conversation or you grant `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` the `Dialogflow Service Agent` role in the topic project. For chat integration to receive notification, make sure API caller has been granted the `Dialogflow Service Agent` role for the topic. Format: `projects//locations//topics/`."
          type: string
      type: object
    GoogleCloudDialogflowV2OriginalDetectIntentRequest:
      description: Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.
      properties:
        payload:
          additionalProperties:
            description: Properties of the object.
          description: 'Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.'
          type: object
        source:
          description: The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.
          type: string
        version:
          description: Optional. The version of the protocol used for this request. This field is AoG-specific.
          type: string
      type: object
    GoogleCloudDialogflowV2OutputAudio:
      description: Represents the natural language speech audio to be played to the end user.
      properties:
        audio:
          description: The natural language speech audio.
          format: byte
          type: string
        config:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OutputAudioConfig"
          description: Instructs the speech synthesizer how to generate the speech audio.
      type: object
    GoogleCloudDialogflowV2OutputAudioConfig:
      description: Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.
      properties:
        audioEncoding:
          description: Required. Audio encoding of the synthesized audio content.
          enum:
            - OUTPUT_AUDIO_ENCODING_UNSPECIFIED
            - OUTPUT_AUDIO_ENCODING_LINEAR_16
            - OUTPUT_AUDIO_ENCODING_MP3
            - OUTPUT_AUDIO_ENCODING_MP3_64_KBPS
            - OUTPUT_AUDIO_ENCODING_OGG_OPUS
            - OUTPUT_AUDIO_ENCODING_MULAW
          type: string
        sampleRateHertz:
          description: The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
          format: int32
          type: integer
        synthesizeSpeechConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          description: Configuration of how speech should be synthesized.
      type: object
    GoogleCloudDialogflowV2Participant:
      description: Represents a conversation participant (human agent, virtual agent, end-user).
      properties:
        documentsMetadataFilters:
          additionalProperties:
            type: string
          description: "Optional. Key-value filters on the metadata of documents returned by article suggestion. If specified, article suggestion only returns suggested documents that match all filters in their Document.metadata. Multiple values for a metadata key should be concatenated by comma. For example, filters to match all documents that have 'US' or 'CA' in their market metadata values and 'agent' in their user metadata values will be ``` documents_metadata_filters { key: \"market\" value: \"US,CA\" } documents_metadata_filters { key: \"user\" value: \"agent\" } ```"
          type: object
        name:
          description: "Optional. The unique identifier of this participant. Format: `projects//locations//conversations//participants/`."
          type: string
        obfuscatedExternalUserId:
          description: "Optional. Obfuscated user id that should be associated with the created participant. You can specify a user id as follows: 1. If you set this field in CreateParticipantRequest or UpdateParticipantRequest, Dialogflow adds the obfuscated user id with the participant. 2. If you set this field in AnalyzeContent or StreamingAnalyzeContent, Dialogflow will update Participant.obfuscated_external_user_id. Dialogflow returns an error if you try to add a user id for a non-END_USER participant. Dialogflow uses this user id for billing and measurement purposes. For example, Dialogflow determines whether a user in one conversation returned in a later conversation. Note: * Please never pass raw user ids to Dialogflow. Always obfuscate your user id first. * Dialogflow only accepts a UTF-8 encoded string, e.g., a hex digest of a hash function like SHA-512. * The length of the user id must be <= 256 characters."
          type: string
        role:
          description: Immutable. The role this participant plays in the conversation. This field must be set during participant creation and is then immutable.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        sipRecordingMediaLabel:
          description: Optional. Label applied to streams representing this participant in SIPREC XML metadata and SDP. This is used to assign transcriptions from that media stream to this participant. This field can be updated.
          type: string
      type: object
    GoogleCloudDialogflowV2QueryInput:
      description: "Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how to process the speech audio. 2. A conversational query in the form of text. 3. An event that specifies which intent to trigger."
      properties:
        audioConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2InputAudioConfig"
          description: Instructs the speech recognizer how to process the speech audio.
        event:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EventInput"
          description: The event to be processed.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2TextInput"
          description: The natural language text to be processed. Text length must not exceed 256 character for virtual agent interactions.
      type: object
    GoogleCloudDialogflowV2QueryParameters:
      description: Represents the parameters of the conversational query.
      properties:
        contexts:
          description: The collection of contexts to be activated before this query is executed.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        geoLocation:
          $ref: "#/components/schemas/GoogleTypeLatLng"
          description: The geo location of this conversational query.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.
          type: object
        platform:
          description: The platform of the virtual agent response messages. If not empty, only emits messages from this platform in the response. Valid values are the enum names of platform.
          type: string
        resetContexts:
          description: Specifies whether to delete all contexts in the current session before the new ones are activated.
          type: boolean
        sentimentAnalysisRequestConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisRequestConfig"
          description: Configures the type of sentiment analysis to perform. If not provided, sentiment analysis is not performed.
        sessionEntityTypes:
          description: Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SessionEntityType"
          type: array
        timeZone:
          description: The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.
          type: string
        webhookHeaders:
          additionalProperties:
            type: string
          description: "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through the Dialogflow web console. The headers defined within this field will overwrite the headers configured through the Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc."
          type: object
      type: object
    GoogleCloudDialogflowV2QueryResult:
      description: Represents the result of conversational query or event processing.
      properties:
        action:
          description: The action name from the matched intent.
          type: string
        allRequiredParamsPresent:
          description: "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
          type: boolean
        cancelsSlotFilling:
          description: Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
          type: boolean
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
          type: object
        fulfillmentMessages:
          description: The collection of rich messages to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessage"
          type: array
        fulfillmentText:
          description: "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred."
          type: string
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Intent"
          description: "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        intentDetectionConfidence:
          description: The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
          format: float
          type: number
        languageCode:
          description: The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        outputContexts:
          description: The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        queryText:
          description: "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
          type: string
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SentimentAnalysisResult"
          description: The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.
        speechRecognitionConfidence:
          description: The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
          format: float
          type: number
        webhookPayload:
          additionalProperties:
            description: Properties of the object.
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.
          type: object
        webhookSource:
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.
          type: string
      type: object
    GoogleCloudDialogflowV2ReloadDocumentRequest:
      description: Request message for Documents.ReloadDocument.
      properties:
        contentUri:
          description: Optional. The path of gcs source file for reloading document content. For now, only gcs uri is supported. For documents stored in Google Cloud Storage, these URIs must have the form `gs:///`.
          type: string
        importGcsCustomMetadata:
          description: Optional. Whether to import custom metadata from Google Cloud Storage. Only valid when the document source is Google Cloud Storage URI.
          type: boolean
        smartMessagingPartialUpdate:
          description: Optional. When enabled, the reload request is to apply partial update to the smart messaging allowlist.
          type: boolean
      type: object
    GoogleCloudDialogflowV2RestoreAgentRequest:
      description: The request message for Agents.RestoreAgent.
      properties:
        agentContent:
          description: Zip compressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: "The URI to a Google Cloud Storage file containing the agent to restore. Note: The URI must start with \"gs://\". Dialogflow performs a read operation for the Cloud Storage object on the caller's behalf, so your request authentication must have read permissions for the object. For more information, see [Dialogflow access control](https://cloud.google.com/dialogflow/cx/docs/concept/access-control#storage)."
          type: string
      type: object
    GoogleCloudDialogflowV2SearchAgentsResponse:
      description: The response message for Agents.SearchAgents.
      properties:
        agents:
          description: The list of agents. There will be a maximum number of items returned based on the page_size field in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Agent"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
      type: object
    GoogleCloudDialogflowV2SearchKnowledgeAnswer:
      description: Represents a SearchKnowledge answer.
      properties:
        answer:
          description: The piece of text from the knowledge base documents that answers the search query
          type: string
        answerRecord:
          description: "The name of the answer record. Format: `projects//locations//answer Records/`"
          type: string
        answerSources:
          description: All sources used to generate the answer.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource"
          type: array
        answerType:
          description: The type of the answer.
          enum:
            - ANSWER_TYPE_UNSPECIFIED
            - FAQ
            - GENERATIVE
            - INTENT
          type: string
      type: object
    GoogleCloudDialogflowV2SearchKnowledgeAnswerAnswerSource:
      description: The sources of the answers.
      properties:
        snippet:
          description: The relevant snippet of the article.
          type: string
        title:
          description: The title of the article.
          type: string
        uri:
          description: The URI of the article.
          type: string
      type: object
    GoogleCloudDialogflowV2SearchKnowledgeRequest:
      description: The request message for Conversations.SearchKnowledge.
      properties:
        conversation:
          description: "The conversation (between human agent and end user) where the search request is triggered. Format: `projects//locations//conversations/`."
          type: string
        conversationProfile:
          description: "Required. The conversation profile used to configure the search. Format: `projects//locations//conversationProfiles/`."
          type: string
        latestMessage:
          description: "The name of the latest conversation message when the request is triggered. Format: `projects//locations//conversations//messages/`."
          type: string
        parent:
          description: "The parent resource contains the conversation profile Format: 'projects/' or `projects//locations/`."
          type: string
        query:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2TextInput"
          description: Required. The natural language text query for knowledge search.
        sessionId:
          description: The ID of the search session. The session_id can be combined with Dialogflow V3 Agent ID retrieved from conversation profile or on its own to identify a search session. The search history of the same session will impact the search result. It's up to the API caller to choose an appropriate `Session ID`. It can be a random number or some type of session identifiers (preferably hashed). The length must not exceed 36 characters.
          type: string
      type: object
    GoogleCloudDialogflowV2SearchKnowledgeResponse:
      description: The response message for Conversations.SearchKnowledge.
      properties:
        answers:
          description: Most relevant snippets extracted from articles in the given knowledge base, ordered by confidence.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SearchKnowledgeAnswer"
          type: array
        rewrittenQuery:
          description: The rewritten query used to search knowledge.
          type: string
      type: object
    GoogleCloudDialogflowV2Sentiment:
      description: "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result."
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowV2SentimentAnalysisRequestConfig:
      description: Configures the types of sentiment analysis to perform.
      properties:
        analyzeQueryTextSentiment:
          description: Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is not performed on `query_text`.
          type: boolean
      type: object
    GoogleCloudDialogflowV2SentimentAnalysisResult:
      description: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
      properties:
        queryTextSentiment:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2Sentiment"
          description: The sentiment analysis result for `query_text`.
      type: object
    GoogleCloudDialogflowV2SessionEntityType:
      description: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).
      properties:
        entities:
          description: Required. The collection of entities associated with this session entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2EntityTypeEntity"
          type: array
        entityOverrideMode:
          description: Required. Indicates whether the additional data should override or supplement the custom entity type definition.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
          type: string
        name:
          description: "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
          type: string
      type: object
    GoogleCloudDialogflowV2SetSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to add or update.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2SetSuggestionFeatureConfigRequest:
      description: The request message for ConversationProfiles.SetSuggestionFeature.
      properties:
        participantRole:
          description: Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureConfig:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2HumanAgentAssistantConfigSuggestionFeatureConfig"
          description: Required. The suggestion feature config to add or update.
      type: object
    GoogleCloudDialogflowV2SmartReplyAnswer:
      description: Represents a smart reply answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        reply:
          description: The content of the reply.
          type: string
      type: object
    GoogleCloudDialogflowV2SmartReplyMetrics:
      description: The evaluation metrics for smart reply model.
      properties:
        allowlistCoverage:
          description: Percentage of target participant messages in the evaluation dataset for which similar messages have appeared at least once in the allowlist. Should be [0, 1].
          format: float
          type: number
        conversationCount:
          description: Total number of conversations used to generate this metric.
          format: int64
          type: string
        topNMetrics:
          description: Metrics of top n smart replies, sorted by TopNMetric.n.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics"
          type: array
      type: object
    GoogleCloudDialogflowV2SmartReplyMetricsTopNMetrics:
      description: Evaluation metrics when retrieving `n` smart replies with the model.
      properties:
        n:
          description: Number of retrieved smart replies. For example, when `n` is 3, this evaluation contains metrics for when Dialogflow retrieves 3 smart replies with the model.
          format: int32
          type: integer
        recall:
          description: Defined as `number of queries whose top n smart replies have at least one similar (token match similarity above the defined threshold) reply as the real reply` divided by `number of queries with at least one smart reply`. Value ranges from 0.0 to 1.0 inclusive.
          format: float
          type: number
      type: object
    GoogleCloudDialogflowV2SmartReplyModelMetadata:
      description: Metadata for smart reply models.
      properties:
        trainingModelType:
          description: Optional. Type of the smart reply model. If not provided, model_type is used.
          enum:
            - MODEL_TYPE_UNSPECIFIED
            - SMART_REPLY_DUAL_ENCODER_MODEL
            - SMART_REPLY_BERT_MODEL
          type: string
      type: object
    GoogleCloudDialogflowV2SpeechContext:
      description: Hints for the speech recognizer to help with recognition in a specific conversation state.
      properties:
        boost:
          description: "Optional. Boost for this context compared to other contexts: * If the boost is positive, Dialogflow will increase the probability that the phrases in this context are recognized over similar sounding phrases. * If the boost is unspecified or non-positive, Dialogflow will not apply any boost. Dialogflow recommends that you use boosts in the range (0, 20] and that you find a value that fits your use case with binary search."
          format: float
          type: number
        phrases:
          description: "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. This list can be used to: * improve accuracy for words and phrases you expect the user to say, e.g. typical commands for your Dialogflow agent * add additional words to the speech recognizer vocabulary * ... See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/quotas) for usage limits."
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2SpeechToTextConfig:
      description: Configures speech transcription for ConversationProfile.
      properties:
        model:
          description: "Which Speech model to select. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then Dialogflow auto-selects a model based on other parameters in the SpeechToTextConfig and Agent settings. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details. If you specify a model, the following models typically have the best performance: - phone_call (best for Agent Assist and telephony) - latest_short (best for Dialogflow non-telephony) - command_and_search Leave this field unspecified to use [Agent Speech settings](https://cloud.google.com/dialogflow/cx/docs/concept/agent#settings-speech) for model selection."
          type: string
        speechModelVariant:
          description: The speech model used in speech to text. `SPEECH_MODEL_VARIANT_UNSPECIFIED`, `USE_BEST_AVAILABLE` will be treated as `USE_ENHANCED`. It can be overridden in AnalyzeContentRequest and StreamingAnalyzeContentRequest request. If enhanced model variant is specified and an enhanced version of the specified model for the language does not exist, then it would emit an error.
          enum:
            - SPEECH_MODEL_VARIANT_UNSPECIFIED
            - USE_BEST_AVAILABLE
            - USE_STANDARD
            - USE_ENHANCED
          type: string
        useTimeoutBasedEndpointing:
          description: Use timeout based endpointing, interpreting endpointer sensitivy as seconds of timeout value.
          type: boolean
      type: object
    GoogleCloudDialogflowV2SuggestArticlesRequest:
      description: The request message for Participants.SuggestArticles.
      properties:
        assistQueryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AssistQueryParameters"
          description: Parameters for a human assist query.
        contextSize:
          description: Optional. Max number of messages prior to and including latest_message to use as context when compiling the suggestion. By default 20 and at most 50.
          format: int32
          type: integer
        latestMessage:
          description: "Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestArticlesResponse:
      description: The response message for Participants.SuggestArticles.
      properties:
        articleAnswers:
          description: Articles ordered by score in descending order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ArticleAnswer"
          type: array
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestConversationSummaryRequest:
      description: The request message for Conversations.SuggestConversationSummary.
      properties:
        assistQueryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AssistQueryParameters"
          description: Parameters for a human assist query. Only used for POC/demo purpose.
        contextSize:
          description: Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 500 and at most 1000.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used as context for compiling suggestion. If empty, the latest message of the conversation will be used. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestConversationSummaryResponse:
      description: The response message for Conversations.SuggestConversationSummary.
      properties:
        contextSize:
          description: Number of messages prior to and including last_conversation_message used to compile the suggestion. It may be smaller than the SuggestSummaryRequest.context_size field in the request if there weren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used as context for compiling suggestion. Format: `projects//locations//conversations//messages/`."
          type: string
        summary:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestConversationSummaryResponseSummary"
          description: Generated summary.
      type: object
    GoogleCloudDialogflowV2SuggestConversationSummaryResponseSummary:
      description: Generated summary for a conversation.
      properties:
        answerRecord:
          description: 'The name of the answer record. Format: "projects//answerRecords/"'
          type: string
        baselineModelVersion:
          description: The baseline model version used to generate this summary. It is empty if a baseline model was not used to generate this summary.
          type: string
        text:
          description: The summary content that is concatenated into one string.
          type: string
        textSections:
          additionalProperties:
            type: string
          description: The summary content that is divided into sections. The key is the section's name and the value is the section's content. There is no specific format for the key or value.
          type: object
      type: object
    GoogleCloudDialogflowV2SuggestFaqAnswersRequest:
      description: The request message for Participants.SuggestFaqAnswers.
      properties:
        assistQueryParams:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2AssistQueryParameters"
          description: Parameters for a human assist query.
        contextSize:
          description: Optional. Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 20 and at most 50.
          format: int32
          type: integer
        latestMessage:
          description: "Optional. The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestFaqAnswersResponse:
      description: The request message for Participants.SuggestFaqAnswers.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        faqAnswers:
          description: Answers extracted from FAQ documents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2FaqAnswer"
          type: array
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestSmartRepliesRequest:
      description: The request message for Participants.SuggestSmartReplies.
      properties:
        contextSize:
          description: Max number of messages prior to and including [latest_message] to use as context when compiling the suggestion. By default 20 and at most 50.
          format: int32
          type: integer
        currentTextInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2TextInput"
          description: The current natural language text segment to compile suggestion for. This provides a way for user to get follow up smart reply suggestion after a smart reply selection, without sending a text message.
        latestMessage:
          description: "The name of the latest conversation message to compile suggestion for. If empty, it will be the latest message of the conversation. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestSmartRepliesResponse:
      description: The response message for Participants.SuggestSmartReplies.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
        smartReplyAnswers:
          description: Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SmartReplyAnswer"
          readOnly: true
          type: array
      type: object
    GoogleCloudDialogflowV2SuggestionFeature:
      description: The type of Human Agent Assistant API suggestion to perform, and the maximum number of results to return for that type. Multiple `Feature` objects can be specified in the `features` list.
      properties:
        type:
          description: Type of Human Agent Assistant API feature to request.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestionInput:
      description: Represents the selection of a suggestion.
      properties:
        answerRecord:
          description: "Required. The ID of a suggestion selected by the human agent. The suggestion(s) were generated in a previous call to request Dialogflow assist. The format is: `projects//locations//answerRecords/` where is an alphanumeric string."
          type: string
      type: object
    GoogleCloudDialogflowV2SuggestionResult:
      description: One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Error status if the request failed.
        suggestArticlesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestArticlesResponse"
          description: SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
        suggestFaqAnswersResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestFaqAnswersResponse"
          description: SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
        suggestSmartRepliesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2SuggestSmartRepliesResponse"
          description: SuggestSmartRepliesResponse if request is for SMART_REPLY.
      type: object
    GoogleCloudDialogflowV2SynthesizeSpeechConfig:
      description: Configuration of how speech should be synthesized.
      properties:
        effectsProfileId:
          description: Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given.
          items:
            type: string
          type: array
        pitch:
          description: Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch.
          format: double
          type: number
        speakingRate:
          description: Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values < 0.25 or > 4.0 will return an error.
          format: double
          type: number
        voice:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2VoiceSelectionParams"
          description: Optional. The desired voice of the synthesized audio.
        volumeGainDb:
          description: Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that.
          format: double
          type: number
      type: object
    GoogleCloudDialogflowV2TextInput:
      description: Auxiliary proto messages. Represents the natural language text to be processed.
      properties:
        languageCode:
          description: Required. The language of this conversational query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.
          type: string
        text:
          description: Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters for virtual agent interactions.
          type: string
      type: object
    GoogleCloudDialogflowV2TextToSpeechSettings:
      description: Instructs the speech synthesizer on how to generate the output audio content.
      properties:
        enableTextToSpeech:
          description: Optional. Indicates whether text to speech is enabled. Even when this field is false, other settings in this proto are still retained.
          type: boolean
        outputAudioEncoding:
          description: Required. Audio encoding of the synthesized audio content.
          enum:
            - OUTPUT_AUDIO_ENCODING_UNSPECIFIED
            - OUTPUT_AUDIO_ENCODING_LINEAR_16
            - OUTPUT_AUDIO_ENCODING_MP3
            - OUTPUT_AUDIO_ENCODING_MP3_64_KBPS
            - OUTPUT_AUDIO_ENCODING_OGG_OPUS
            - OUTPUT_AUDIO_ENCODING_MULAW
          type: string
        sampleRateHertz:
          description: Optional. The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality).
          format: int32
          type: integer
        synthesizeSpeechConfigs:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SynthesizeSpeechConfig"
          description: Optional. Configuration of how speech should be synthesized, mapping from language (https://cloud.google.com/dialogflow/docs/reference/language) to SynthesizeSpeechConfig.
          type: object
      type: object
    GoogleCloudDialogflowV2TrainAgentRequest:
      description: The request message for Agents.TrainAgent.
      properties: {}
      type: object
    GoogleCloudDialogflowV2UndeployConversationModelOperationMetadata:
      description: Metadata for a ConversationModels.UndeployConversationModel operation.
      properties:
        conversationModel:
          description: "The resource name of the conversation model. Format: `projects//conversationModels/`"
          type: string
        createTime:
          description: Timestamp when the request to undeploy conversation model was submitted. The time is measured on server side.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDialogflowV2UndeployConversationModelRequest:
      description: The request message for ConversationModels.UndeployConversationModel
      properties: {}
      type: object
    GoogleCloudDialogflowV2ValidationError:
      description: Represents a single validation error.
      properties:
        entries:
          description: "The names of the entries that the error is associated with. Format: - `projects//agent`, if the error is associated with the entire agent. - `projects//agent/intents/`, if the error is associated with certain intents. - `projects//agent/intents//trainingPhrases/`, if the error is associated with certain intent training phrases. - `projects//agent/intents//parameters/`, if the error is associated with certain intent parameters. - `projects//agent/entities/`, if the error is associated with certain entities."
          items:
            type: string
          type: array
        errorMessage:
          description: The detailed error message.
          type: string
        severity:
          description: The severity of the error.
          enum:
            - SEVERITY_UNSPECIFIED
            - INFO
            - WARNING
            - ERROR
            - CRITICAL
          type: string
      type: object
    GoogleCloudDialogflowV2ValidationResult:
      description: Represents the output of agent validation.
      properties:
        validationErrors:
          description: Contains all validation errors.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2ValidationError"
          type: array
      type: object
    GoogleCloudDialogflowV2Version:
      description: "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions)."
      properties:
        createTime:
          description: Output only. The creation time of this version. This field is read-only, i.e., it cannot be set by create and update methods.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. The developer-provided description of this version.
          type: string
        name:
          description: "Output only. The unique identifier of this agent version. Supported formats: - `projects//agent/versions/` - `projects//locations//agent/versions/`"
          readOnly: true
          type: string
        status:
          description: Output only. The status of this version. This field is read-only and cannot be set by create and update methods.
          enum:
            - VERSION_STATUS_UNSPECIFIED
            - IN_PROGRESS
            - READY
            - FAILED
          readOnly: true
          type: string
        versionNumber:
          description: Output only. The sequential number of this version. This field is read-only which means it cannot be set by create and update methods.
          format: int32
          readOnly: true
          type: integer
      type: object
    GoogleCloudDialogflowV2VoiceSelectionParams:
      description: Description of which voice to use for speech synthesis.
      properties:
        name:
          description: Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender.
          type: string
        ssmlGender:
          description: Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.
          enum:
            - SSML_VOICE_GENDER_UNSPECIFIED
            - SSML_VOICE_GENDER_MALE
            - SSML_VOICE_GENDER_FEMALE
            - SSML_VOICE_GENDER_NEUTRAL
          type: string
      type: object
    GoogleCloudDialogflowV2WebhookRequest:
      description: The request message for a webhook call.
      properties:
        originalDetectIntentRequest:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2OriginalDetectIntentRequest"
          description: Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2QueryResult"
          description: The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.
        responseId:
          description: The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.
          type: string
        session:
          description: "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
          type: string
      type: object
    GoogleCloudDialogflowV2WebhookResponse:
      description: 'The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).'
      properties:
        followupEventInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2EventInput"
          description: Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.
        fulfillmentMessages:
          description: Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2IntentMessage"
          type: array
        fulfillmentText:
          description: Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.
          type: string
        outputContexts:
          description: Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2Context"
          type: array
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
          type: object
        sessionEntityTypes:
          description: Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2SessionEntityType"
          type: array
        source:
          description: Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1AnnotatedMessagePart:
      description: Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end.
      properties:
        entityType:
          description: Optional. The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity.
          type: string
        formattedValue:
          description: 'Optional. The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { "amount": 5, "currency": "USD" } '
        text:
          description: Required. A part of a message possibly annotated with an entity.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1ArticleAnswer:
      description: Represents article answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        snippets:
          description: Output only. Article snippets.
          items:
            type: string
          type: array
        title:
          description: The article title.
          type: string
        uri:
          description: The article URI.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse:
      description: The response message for EntityTypes.BatchUpdateEntityTypes.
      properties:
        entityTypes:
          description: The collection of updated or created entity types.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EntityType"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse:
      description: The response message for Intents.BatchUpdateIntents.
      properties:
        intents:
          description: The collection of updated or created intents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Intent"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1ClearSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.ClearSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to remove the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to remove.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - DIALOGFLOW_ASSIST
            - CONVERSATION_SUMMARIZATION
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2beta1Context:
      description: Dialogflow contexts are similar to natural language context. If a person says to you "they are orange", you need context in order to understand what "they" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).
      properties:
        lifespanCount:
          description: Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries.
          format: int32
          type: integer
        name:
          description: "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in `a-zA-Z0-9_-%` and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2beta1ConversationEvent:
      description: Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.
      properties:
        conversation:
          description: "Required. The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        errorStatus:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Optional. More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL.
        newMessagePayload:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Message"
          description: Payload of NEW_MESSAGE event.
        type:
          description: Required. The type of the event that this notification refers to.
          enum:
            - TYPE_UNSPECIFIED
            - CONVERSATION_STARTED
            - CONVERSATION_FINISHED
            - HUMAN_INTERVENTION_NEEDED
            - NEW_MESSAGE
            - UNRECOVERABLE_ERROR
          type: string
      type: object
    GoogleCloudDialogflowV2beta1DialogflowAssistAnswer:
      description: Represents a Dialogflow assist answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        intentSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentSuggestion"
          description: An intent suggestion generated from conversation.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult"
          description: Result from v2 agent.
      type: object
    GoogleCloudDialogflowV2beta1EntityType:
      description: Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).
      properties:
        autoExpansionMode:
          description: Optional. Indicates whether the entity type can be automatically expanded.
          enum:
            - AUTO_EXPANSION_MODE_UNSPECIFIED
            - AUTO_EXPANSION_MODE_DEFAULT
          type: string
        displayName:
          description: Required. The name of the entity type.
          type: string
        enableFuzzyExtraction:
          description: Optional. Enables fuzzy entity extraction during classification.
          type: boolean
        entities:
          description: Optional. The collection of entity entries associated with the entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EntityTypeEntity"
          type: array
        kind:
          description: Required. Indicates the kind of entity type.
          enum:
            - KIND_UNSPECIFIED
            - KIND_MAP
            - KIND_LIST
            - KIND_REGEXP
          type: string
        name:
          description: "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`"
          type: string
      type: object
    GoogleCloudDialogflowV2beta1EntityTypeEntity:
      description: An **entity entry** for an associated entity type.
      properties:
        synonyms:
          description: "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
          items:
            type: string
          type: array
        value:
          description: "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1EventInput:
      description: 'Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `"Hello #welcome_event.name! What can I do for you today?"`.'
      properties:
        languageCode:
          description: Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language. This field is ignored when used in the context of a WebhookResponse.followup_event_input field, because the language was already defined in the originating detect intent request.
          type: string
        name:
          description: Required. The unique identifier of the event.
          type: string
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
      type: object
    GoogleCloudDialogflowV2beta1ExportAgentResponse:
      description: The response message for Agents.ExportAgent.
      properties:
        agentContent:
          description: Zip compressed raw byte content for agent.
          format: byte
          type: string
        agentUri:
          description: The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1ExportOperationMetadata:
      description: Metadata related to the Export Data Operations (e.g. ExportDocument).
      properties:
        exportedGcsDestination:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1GcsDestination"
          description: Cloud Storage file path of the exported data.
      type: object
    GoogleCloudDialogflowV2beta1FaqAnswer:
      description: Represents answer from "frequently asked questions".
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document.
          type: string
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: The system's confidence score that this Knowledge answer is a good match for this conversational query, range from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        metadata:
          additionalProperties:
            type: string
          description: A map that contains metadata about the answer and the document from which it originates.
          type: object
        question:
          description: The corresponding FAQ question.
          type: string
        source:
          description: "Indicates which Knowledge Document this answer was extracted from. Format: `projects//locations//agent/knowledgeBases//documents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1GcsDestination:
      description: Google Cloud Storage location for the output.
      properties:
        uri:
          description: 'Required. The Google Cloud Storage URIs for the output. A URI is of the form: `gs://bucket/object-prefix-or-name` Whether a prefix or name is used depends on the use case. The requesting user must have "write-permission" to the bucket.'
          type: string
      type: object
    GoogleCloudDialogflowV2beta1HumanAgentAssistantEvent:
      description: Output only. Represents a notification sent to Pub/Sub subscribers for agent assistant events in a specific conversation.
      properties:
        conversation:
          description: "The conversation this notification refers to. Format: `projects//conversations/`."
          type: string
        participant:
          description: "The participant that the suggestion is compiled for. And This field is used to call Participants.ListSuggestions API. Format: `projects//conversations//participants/`. It will not be set in legacy workflow. HumanAgentAssistantConfig.name for more information."
          type: string
        suggestionResults:
          description: The suggestion results payload that this notification refers to. It will only be set when HumanAgentAssistantConfig.SuggestionConfig.group_suggestion_responses sets to true.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestionResult"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1Intent:
      description: An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).
      properties:
        action:
          description: "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
          type: string
        defaultResponsePlatforms:
          description: Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).
          items:
            enum:
              - PLATFORM_UNSPECIFIED
              - FACEBOOK
              - SLACK
              - TELEGRAM
              - KIK
              - SKYPE
              - LINE
              - VIBER
              - ACTIONS_ON_GOOGLE
              - TELEPHONY
              - GOOGLE_HANGOUTS
            type: string
          type: array
        displayName:
          description: Required. The name of this intent.
          type: string
        endInteraction:
          description: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
          type: boolean
        events:
          description: Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.
          items:
            type: string
          type: array
        followupIntentInfo:
          description: Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          readOnly: true
          type: array
        inputContextNames:
          description: "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`"
          items:
            type: string
          type: array
        isFallback:
          description: Optional. Indicates whether this is a fallback intent.
          type: boolean
        liveAgentHandoff:
          description: Optional. Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
          type: boolean
        messages:
          description: Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage"
          type: array
        mlDisabled:
          description: "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off."
          type: boolean
        mlEnabled:
          deprecated: true
          description: "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false."
          type: boolean
        name:
          description: "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`"
          type: string
        outputContexts:
          description: "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Context"
          type: array
        parameters:
          description: Optional. The collection of parameters associated with the intent.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentParameter"
          type: array
        parentFollowupIntentName:
          description: "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
          type: string
        priority:
          description: Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.
          format: int32
          type: integer
        resetContexts:
          description: Optional. Indicates whether to delete all contexts in the current session when this intent is matched.
          type: boolean
        rootFollowupIntentName:
          description: "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`."
          readOnly: true
          type: string
        trainingPhrases:
          description: Optional. The collection of examples that the agent is trained on.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          type: array
        webhookState:
          description: Optional. Indicates whether webhooks are enabled for the intent.
          enum:
            - WEBHOOK_STATE_UNSPECIFIED
            - WEBHOOK_STATE_ENABLED
            - WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo:
      description: Represents a single followup intent in the chain.
      properties:
        followupIntentName:
          description: "The unique identifier of the followup intent. Format: `projects//agent/intents/`."
          type: string
        parentFollowupIntentName:
          description: "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessage:
      description: Corresponds to the `Response` field in the Dialogflow console.
      properties:
        basicCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCard"
          description: Displays a basic card for Actions on Google.
        browseCarouselCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard"
          description: Browse carousel card for Actions on Google.
        card:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCard"
          description: Displays a card.
        carouselSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect"
          description: Displays a carousel card for Actions on Google.
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Displays an image.
        linkOutSuggestion:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion"
          description: Displays a link out suggestion chip for Actions on Google.
        listSelect:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageListSelect"
          description: Displays a list card for Actions on Google.
        mediaContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageMediaContent"
          description: The media content card for Actions on Google.
        payload:
          additionalProperties:
            description: Properties of the object.
          description: A custom platform-specific response.
          type: object
        platform:
          description: Optional. The platform that this message is intended for.
          enum:
            - PLATFORM_UNSPECIFIED
            - FACEBOOK
            - SLACK
            - TELEGRAM
            - KIK
            - SKYPE
            - LINE
            - VIBER
            - ACTIONS_ON_GOOGLE
            - TELEPHONY
            - GOOGLE_HANGOUTS
          type: string
        quickReplies:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
          description: Displays quick replies.
        rbmCarouselRichCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"
          description: Rich Business Messaging (RBM) carousel rich card response.
        rbmStandaloneRichCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
          description: Standalone Rich Business Messaging (RBM) rich card response.
        rbmText:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmText"
          description: Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging.
        simpleResponses:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses"
          description: Returns a voice or text-only response for Actions on Google.
        suggestions:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
          description: Displays suggestion chips for Actions on Google.
        tableCard:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCard"
          description: Table card for Actions on Google.
        telephonyPlayAudio:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio"
          description: Plays audio from a file in Telephony Gateway.
        telephonySynthesizeSpeech:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech"
          description: Synthesizes speech in Telephony Gateway.
        telephonyTransferCall:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall"
          description: Transfers the call in Telephony Gateway.
        text:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageText"
          description: Returns a text response.
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBasicCard:
      description: The basic card message. Useful for displaying information.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          type: array
        formattedText:
          description: Required, unless image is present. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. The image for the card.
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton:
      description: The button object that appears at the bottom of a card.
      properties:
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction"
          description: Required. Action to take when a user taps on the button.
        title:
          description: Required. The title of the button.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction:
      description: Opens the given URI.
      properties:
        uri:
          description: Required. The HTTP or HTTPS scheme URI.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard:
      description: Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel
      properties:
        imageDisplayOptions:
          description: Optional. Settings for displaying the image. Applies to every image in items.
          enum:
            - IMAGE_DISPLAY_OPTIONS_UNSPECIFIED
            - GRAY
            - WHITE
            - CROPPED
            - BLURRED_BACKGROUND
          type: string
        items:
          description: Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem:
      description: Browsing carousel tile
      properties:
        description:
          description: Optional. Description of the carousel item. Maximum of four lines of text.
          type: string
        footer:
          description: Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Hero image for the carousel item.
        openUriAction:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
          description: Required. Action to present to the user.
        title:
          description: Required. Title of the carousel item. Maximum of two lines of text.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction:
      description: Actions on Google action to open a given url.
      properties:
        url:
          description: Required. URL
          type: string
        urlTypeHint:
          description: Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.
          enum:
            - URL_TYPE_HINT_UNSPECIFIED
            - AMP_ACTION
            - AMP_CONTENT
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCard:
      description: The card response message.
      properties:
        buttons:
          description: Optional. The collection of card buttons.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          type: array
        imageUri:
          description: Optional. The public URI to an image file for the card.
          type: string
        subtitle:
          description: Optional. The subtitle of the card.
          type: string
        title:
          description: Optional. The title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCardButton:
      description: Optional. Contains information about a button.
      properties:
        postback:
          description: Optional. The text to send back to the Dialogflow API or a URI to open.
          type: string
        text:
          description: Optional. The text to show on the button.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect:
      description: The card for presenting a carousel of options to select from.
      properties:
        items:
          description: Required. Carousel items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem:
      description: An item in the carousel.
      properties:
        description:
          description: Optional. The body text of the card.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
          description: Required. Additional info about the option item.
        title:
          description: Required. Title of the carousel item.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageColumnProperties:
      description: Column properties for TableCard.
      properties:
        header:
          description: Required. Column heading.
          type: string
        horizontalAlignment:
          description: Optional. Defines text alignment for all cells in this column.
          enum:
            - HORIZONTAL_ALIGNMENT_UNSPECIFIED
            - LEADING
            - CENTER
            - TRAILING
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageImage:
      description: The image response message.
      properties:
        accessibilityText:
          description: A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect.
          type: string
        imageUri:
          description: Optional. The public URI to an image file.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion:
      description: The suggestion chip message that allows the user to jump out to the app or website associated with this agent.
      properties:
        destinationName:
          description: Required. The name of the app or site this chip is linking to.
          type: string
        uri:
          description: Required. The URI of the app or site to open when the user taps the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageListSelect:
      description: The card for presenting a list of options to select from.
      properties:
        items:
          description: Required. List items.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          type: array
        subtitle:
          description: Optional. Subtitle of the list.
          type: string
        title:
          description: Optional. The overall title of the list.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageListSelectItem:
      description: An item in the list.
      properties:
        description:
          description: Optional. The main text describing the item.
          type: string
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. The image to display.
        info:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
          description: Required. Additional information about this option.
        title:
          description: Required. The title of the list item.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageMediaContent:
      description: The media content card for Actions on Google.
      properties:
        mediaObjects:
          description: Required. List of media objects.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          type: array
        mediaType:
          description: Optional. What type of media is the content (ie "audio").
          enum:
            - RESPONSE_MEDIA_TYPE_UNSPECIFIED
            - AUDIO
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject:
      description: Response media object for media content card.
      properties:
        contentUrl:
          description: Required. Url where the media is stored.
          type: string
        description:
          description: Optional. Description of media card.
          type: string
        icon:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Icon to display above media content.
        largeImage:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Image to display above media content.
        name:
          description: Required. Name of media card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageQuickReplies:
      description: The quick replies response message.
      properties:
        quickReplies:
          description: Optional. The collection of quick replies.
          items:
            type: string
          type: array
        title:
          description: Optional. The title of the collection of quick replies.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent:
      description: Rich Business Messaging (RBM) Card content
      properties:
        description:
          description: Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set.
          type: string
        media:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
          description: Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card.
        suggestions:
          description: Optional. List of suggestions to include in the card.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          type: array
        title:
          description: Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia:
      description: "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm"
      properties:
        fileUri:
          description: Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.
          type: string
        height:
          description: Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.
          enum:
            - HEIGHT_UNSPECIFIED
            - SHORT
            - MEDIUM
            - TALL
          type: string
        thumbnailUri:
          description: Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard:
      description: Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead.
      properties:
        cardContents:
          description: Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          type: array
        cardWidth:
          description: Required. The width of the cards in the carousel.
          enum:
            - CARD_WIDTH_UNSPECIFIED
            - SMALL
            - MEDIUM
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard:
      description: Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout.
      properties:
        cardContent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          description: Required. Card content.
        cardOrientation:
          description: Required. Orientation of the card.
          enum:
            - CARD_ORIENTATION_UNSPECIFIED
            - HORIZONTAL
            - VERTICAL
          type: string
        thumbnailImageAlignment:
          description: Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.
          enum:
            - THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED
            - LEFT
            - RIGHT
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction:
      description: Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.
      properties:
        dial:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial"
          description: "Suggested client side action: Dial a phone number"
        openUrl:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri"
          description: "Suggested client side action: Open a URI on device"
        postbackData:
          description: Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic.
          type: string
        shareLocation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation"
          description: "Suggested client side action: Share user location"
        text:
          description: Text to display alongside the action.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial:
      description: Opens the user's default dialer app with the specified phone number but does not dial automatically.
      properties:
        phoneNumber:
          description: "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri:
      description: Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI.
      properties:
        uri:
          description: Required. The uri to open on the user device
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation:
      description: Opens the device's location chooser so the user can pick a location to send back to the agent.
      properties: {}
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply:
      description: Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response.
      properties:
        postbackData:
          description: Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic.
          type: string
        text:
          description: Suggested reply text.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion:
      description: Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri).
      properties:
        action:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
          description: Predefined client side actions that user can choose
        reply:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
          description: Predefined replies for user to select instead of typing
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageRbmText:
      description: Rich Business Messaging (RBM) text response with suggestions.
      properties:
        rbmSuggestion:
          description: Optional. One or more suggestions to show to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          type: array
        text:
          description: Required. Text sent and displayed to the user.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo:
      description: Additional info about the select item for when it is triggered in a dialog.
      properties:
        key:
          description: Required. A unique key that will be sent back to the agent if this response is given.
          type: string
        synonyms:
          description: Optional. A list of synonyms that can also be used to trigger this item in dialog.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse:
      description: The simple response message containing speech or text.
      properties:
        displayText:
          description: Optional. The text to display.
          type: string
        ssml:
          description: One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.
          type: string
        textToSpeech:
          description: One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses:
      description: The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.
      properties:
        simpleResponses:
          description: Required. The list of simple responses.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSuggestion:
      description: The suggestion chip message that the user can tap to quickly post a reply to the conversation.
      properties:
        title:
          description: Required. The text shown the in the suggestion chip.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageSuggestions:
      description: The collection of suggestions.
      properties:
        suggestions:
          description: Required. The list of suggested replies.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTableCard:
      description: Table card for Actions on Google.
      properties:
        buttons:
          description: Optional. List of buttons for the card.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          type: array
        columnProperties:
          description: Optional. Display properties for the columns in this table.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          type: array
        image:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageImage"
          description: Optional. Image which should be displayed on the card.
        rows:
          description: Optional. Rows in this table of data.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          type: array
        subtitle:
          description: Optional. Subtitle to the title.
          type: string
        title:
          description: Required. Title of the card.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTableCardCell:
      description: Cell of TableCardRow.
      properties:
        text:
          description: Required. Text in this cell.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTableCardRow:
      description: Row of TableCard.
      properties:
        cells:
          description: Optional. List of cells that make up this row.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          type: array
        dividerAfter:
          description: Optional. Whether to add a visual divider after this row.
          type: boolean
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio:
      description: Plays audio from a file in Telephony Gateway.
      properties:
        audioUri:
          description: Required. URI to a Google Cloud Storage object containing the audio to play, e.g., "gs://bucket/object". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech:
      description: Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config.
      properties:
        ssml:
          description: The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml).
          type: string
        text:
          description: The raw text to be synthesized.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall:
      description: Transfers the call in Telephony Gateway.
      properties:
        phoneNumber:
          description: Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz).
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentMessageText:
      description: The text response message.
      properties:
        text:
          description: Optional. The collection of the agent's responses.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV2beta1IntentParameter:
      description: Represents intent parameters.
      properties:
        defaultValue:
          description: "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
          type: string
        displayName:
          description: Required. The name of the parameter.
          type: string
        entityTypeDisplayName:
          description: Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided.
          type: string
        isList:
          description: Optional. Indicates whether the parameter represents a list of values.
          type: boolean
        mandatory:
          description: Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.
          type: boolean
        name:
          description: The unique identifier of this parameter.
          type: string
        prompts:
          description: Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.
          items:
            type: string
          type: array
        value:
          description: "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentSuggestion:
      description: Represents an intent suggestion.
      properties:
        description:
          description: "Human readable description for better understanding an intent like its scope, content, result etc. Maximum character limit: 140 characters."
          type: string
        displayName:
          description: The display name of the intent.
          type: string
        intentV2:
          description: "The unique identifier of this intent. Format: `projects//locations//agent/intents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1IntentTrainingPhrase:
      description: Represents an example that the agent is trained on.
      properties:
        name:
          description: Output only. The unique identifier of this training phrase.
          type: string
        parts:
          description: "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          type: array
        timesAddedCount:
          description: Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased.
          format: int32
          type: integer
        type:
          description: Required. The type of the training phrase.
          enum:
            - TYPE_UNSPECIFIED
            - EXAMPLE
            - TEMPLATE
          type: string
          x-enumDeprecated:
            - false
            - false
            - true
      type: object
    GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart:
      description: Represents a part of a training phrase.
      properties:
        alias:
          description: Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase.
          type: string
        entityType:
          description: Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase.
          type: string
        text:
          description: Required. The text for this part.
          type: string
        userDefined:
          description: Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.
          type: boolean
      type: object
    GoogleCloudDialogflowV2beta1KnowledgeAnswers:
      description: Represents the result of querying a Knowledge base.
      properties:
        answers:
          description: A list of answers from Knowledge Connector.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer:
      description: An answer from Knowledge Connector.
      properties:
        answer:
          description: The piece of text from the `source` knowledge base document that answers this conversational query.
          type: string
        faqQuestion:
          description: The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.
          type: string
        matchConfidence:
          description: "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable."
          format: float
          type: number
        matchConfidenceLevel:
          description: "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer."
          enum:
            - MATCH_CONFIDENCE_LEVEL_UNSPECIFIED
            - LOW
            - MEDIUM
            - HIGH
          type: string
        source:
          description: "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        exportOperationMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1ExportOperationMetadata"
          description: Metadata for the Export Data Operation such as the destination of export.
        knowledgeBase:
          description: The name of the knowledge base interacted with during the operation.
          type: string
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV2beta1Message:
      description: Represents a message posted into a conversation.
      properties:
        content:
          description: Required. The message content.
          type: string
        createTime:
          description: Output only. The time when the message was created in Contact Center AI.
          format: google-datetime
          readOnly: true
          type: string
        languageCode:
          description: 'Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: "en-US".'
          type: string
        messageAnnotation:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1MessageAnnotation"
          description: Output only. The annotation for the message.
          readOnly: true
        name:
          description: "Optional. The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
          type: string
        participant:
          description: Output only. The participant that sends this message.
          readOnly: true
          type: string
        participantRole:
          description: Output only. The role of the participant.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          readOnly: true
          type: string
        sendTime:
          description: Optional. The time when the message was sent.
          format: google-datetime
          type: string
        sentimentAnalysis:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
          description: Output only. The sentiment analysis result for the message.
          readOnly: true
      type: object
    GoogleCloudDialogflowV2beta1MessageAnnotation:
      description: Represents the result of annotation for the message.
      properties:
        containEntities:
          description: Required. Indicates whether the text message contains entities.
          type: boolean
        parts:
          description: Optional. The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text].
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1AnnotatedMessagePart"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest:
      description: Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.
      properties:
        payload:
          additionalProperties:
            description: Properties of the object.
          description: 'Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { "telephony": { "caller_id": "+18558363987" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.'
          type: object
        source:
          description: The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.
          type: string
        version:
          description: Optional. The version of the protocol used for this request. This field is AoG-specific.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1QueryResult:
      description: Represents the result of conversational query or event processing.
      properties:
        action:
          description: The action name from the matched intent.
          type: string
        allRequiredParamsPresent:
          description: "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
          type: boolean
        cancelsSlotFilling:
          description: Indicates whether the conversational query triggers a cancellation for slot filling. For more information, see the [cancel slot filling documentation](https://cloud.google.com/dialogflow/es/docs/intents-actions-parameters#cancel).
          type: boolean
        diagnosticInfo:
          additionalProperties:
            description: Properties of the object.
          description: "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
          type: object
        fulfillmentMessages:
          description: The collection of rich messages to present to the user.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage"
          type: array
        fulfillmentText:
          description: "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred."
          type: string
        intent:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Intent"
          description: "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`."
        intentDetectionConfidence:
          description: The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.
          format: float
          type: number
        knowledgeAnswers:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1KnowledgeAnswers"
          description: The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`.
        languageCode:
          description: The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.
          type: string
        outputContexts:
          description: The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Context"
          type: array
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: * MapKey type: string * MapKey value: parameter name * MapValue type: If parameter's entity type is a composite entity then use map, otherwise, depending on the parameter value type, it could be one of string, number, boolean, null, list or map. * MapValue value: If parameter's entity type is a composite entity then use map from composite entity property names to property values, otherwise, use parameter value."
          type: object
        queryText:
          description: "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
          type: string
        sentimentAnalysisResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
          description: The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.
        speechRecognitionConfidence:
          description: The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.
          format: float
          type: number
        webhookPayload:
          additionalProperties:
            description: Properties of the object.
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.
          type: object
        webhookSource:
          description: If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1Sentiment:
      description: "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text. See: https://cloud.google.com/natural-language/docs/basics#interpreting_sentiment_analysis_values for how to interpret the result."
      properties:
        magnitude:
          description: A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).
          format: float
          type: number
        score:
          description: Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).
          format: float
          type: number
      type: object
    GoogleCloudDialogflowV2beta1SentimentAnalysisResult:
      description: The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config
      properties:
        queryTextSentiment:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Sentiment"
          description: The sentiment analysis result for `query_text`.
      type: object
    GoogleCloudDialogflowV2beta1SessionEntityType:
      description: A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).
      properties:
        entities:
          description: Required. The collection of entities associated with this session entity type.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EntityTypeEntity"
          type: array
        entityOverrideMode:
          description: Required. Indicates whether the additional data should override or supplement the custom entity type definition.
          enum:
            - ENTITY_OVERRIDE_MODE_UNSPECIFIED
            - ENTITY_OVERRIDE_MODE_OVERRIDE
            - ENTITY_OVERRIDE_MODE_SUPPLEMENT
          type: string
        name:
          description: "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SetSuggestionFeatureConfigOperationMetadata:
      description: Metadata for a ConversationProfile.SetSuggestionFeatureConfig operation.
      properties:
        conversationProfile:
          description: "The resource name of the conversation profile. Format: `projects//locations//conversationProfiles/`"
          type: string
        createTime:
          description: Timestamp whe the request was created. The time is measured on server side.
          format: google-datetime
          type: string
        participantRole:
          description: Required. The participant role to add or update the suggestion feature config. Only HUMAN_AGENT or END_USER can be used.
          enum:
            - ROLE_UNSPECIFIED
            - HUMAN_AGENT
            - AUTOMATED_AGENT
            - END_USER
          type: string
        suggestionFeatureType:
          description: Required. The type of the suggestion feature to add or update.
          enum:
            - TYPE_UNSPECIFIED
            - ARTICLE_SUGGESTION
            - FAQ
            - SMART_REPLY
            - DIALOGFLOW_ASSIST
            - CONVERSATION_SUMMARIZATION
            - KNOWLEDGE_SEARCH
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SmartReplyAnswer:
      description: Represents a smart reply answer.
      properties:
        answerRecord:
          description: The name of answer record, in the format of "projects//locations//answerRecords/"
          type: string
        confidence:
          description: Smart reply confidence. The system's confidence score that this reply is a good match for this conversation, as a value from 0.0 (completely uncertain) to 1.0 (completely certain).
          format: float
          type: number
        reply:
          description: The content of the reply.
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestArticlesResponse:
      description: The response message for Participants.SuggestArticles.
      properties:
        articleAnswers:
          description: Output only. Articles ordered by score in descending order.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1ArticleAnswer"
          type: array
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestArticlesResponse.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse:
      description: The response message for Participants.SuggestDialogflowAssists.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestDialogflowAssistsRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        dialogflowAssistAnswers:
          description: Output only. Multiple reply options provided by Dialogflow assist service. The order is based on the rank of the model prediction.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1DialogflowAssistAnswer"
          type: array
        latestMessage:
          description: "The name of the latest conversation message used to suggest answer. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse:
      description: The request message for Participants.SuggestFaqAnswers.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestFaqAnswersRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        faqAnswers:
          description: Output only. Answers extracted from FAQ documents.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1FaqAnswer"
          type: array
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
      type: object
    GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse:
      description: The response message for Participants.SuggestSmartReplies.
      properties:
        contextSize:
          description: Number of messages prior to and including latest_message to compile the suggestion. It may be smaller than the SuggestSmartRepliesRequest.context_size field in the request if there aren't that many messages in the conversation.
          format: int32
          type: integer
        latestMessage:
          description: "The name of the latest conversation message used to compile suggestion for. Format: `projects//locations//conversations//messages/`."
          type: string
        smartReplyAnswers:
          description: Output only. Multiple reply options provided by smart reply service. The order is based on the rank of the model prediction. The maximum number of the returned replies is set in SmartReplyConfig.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SmartReplyAnswer"
          type: array
      type: object
    GoogleCloudDialogflowV2beta1SuggestionResult:
      description: One response of different type of suggestion response which is used in the response of Participants.AnalyzeContent and Participants.AnalyzeContent, as well as HumanAgentAssistantEvent.
      properties:
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: Error status if the request failed.
        suggestArticlesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestArticlesResponse"
          description: SuggestArticlesResponse if request is for ARTICLE_SUGGESTION.
        suggestDialogflowAssistsResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse"
          description: SuggestDialogflowAssistsResponse if request is for DIALOGFLOW_ASSIST.
        suggestEntityExtractionResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestDialogflowAssistsResponse"
          description: SuggestDialogflowAssistsResponse if request is for ENTITY_EXTRACTION.
        suggestFaqAnswersResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestFaqAnswersResponse"
          description: SuggestFaqAnswersResponse if request is for FAQ_ANSWER.
        suggestSmartRepliesResponse:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SuggestSmartRepliesResponse"
          description: SuggestSmartRepliesResponse if request is for SMART_REPLY.
      type: object
    GoogleCloudDialogflowV2beta1WebhookRequest:
      description: The request message for a webhook call.
      properties:
        alternativeQueryResults:
          description: Alternative query results from KnowledgeService.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult"
          type: array
        originalDetectIntentRequest:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest"
          description: Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.
        queryResult:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1QueryResult"
          description: The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.
        responseId:
          description: The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.
          type: string
        session:
          description: "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,"
          type: string
      type: object
    GoogleCloudDialogflowV2beta1WebhookResponse:
      description: 'The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `""` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).'
      properties:
        endInteraction:
          description: Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.
          type: boolean
        followupEventInput:
          $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1EventInput"
          description: Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.
        fulfillmentMessages:
          description: Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1IntentMessage"
          type: array
        fulfillmentText:
          description: Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.
          type: string
        liveAgentHandoff:
          description: Indicates that a live agent should be brought in to handle the interaction with the user. In most cases, when you set this flag to true, you would also want to set end_interaction to true as well. Default is false.
          type: boolean
        outputContexts:
          description: Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1Context"
          type: array
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)
          type: object
        sessionEntityTypes:
          description: Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.
          items:
            $ref: "#/components/schemas/GoogleCloudDialogflowV2beta1SessionEntityType"
          type: array
        source:
          description: Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.
          type: string
      type: object
    GoogleCloudDialogflowV3alpha1ConversationSignals:
      description: This message is used to hold all the Conversation Signals data, which will be converted to JSON and exported to BigQuery.
      properties:
        turnSignals:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1TurnSignals"
          description: Required. Turn signals for the current turn.
      type: object
    GoogleCloudDialogflowV3alpha1CreateDocumentOperationMetadata:
      description: Metadata for CreateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1DeleteDocumentOperationMetadata:
      description: Metadata for DeleteDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata:
      description: Metadata in google::longrunning::Operation for Knowledge operations.
      properties:
        state:
          description: Required. Output only. The current state of this operation.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
      type: object
    GoogleCloudDialogflowV3alpha1ImportDocumentsOperationMetadata:
      description: Metadata for ImportDocuments operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1ImportDocumentsResponse:
      description: Response message for Documents.ImportDocuments.
      properties:
        warnings:
          description: Includes details about skipped documents or any other warnings.
          items:
            $ref: "#/components/schemas/GoogleRpcStatus"
          type: array
      type: object
    GoogleCloudDialogflowV3alpha1ReloadDocumentOperationMetadata:
      description: Metadata for ReloadDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudDialogflowV3alpha1TurnSignals:
      description: Collection of all signals that were extracted for a single turn of the conversation.
      properties:
        agentEscalated:
          description: Whether agent responded with LiveAgentHandoff fulfillment.
          type: boolean
        dtmfUsed:
          description: Whether user was using DTMF input.
          type: boolean
        failureReasons:
          description: Failure reasons of the turn.
          items:
            enum:
              - FAILURE_REASON_UNSPECIFIED
              - FAILED_INTENT
              - FAILED_WEBHOOK
            type: string
          type: array
        noMatch:
          description: Whether NLU predicted NO_MATCH.
          type: boolean
        noUserInput:
          description: Whether user provided no input.
          type: boolean
        reachedEndPage:
          description: Whether turn resulted in End Session page.
          type: boolean
        sentimentMagnitude:
          description: Sentiment magnitude of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        sentimentScore:
          description: Sentiment score of the user utterance if [sentiment](https://cloud.google.com/dialogflow/cx/docs/concept/sentiment) was enabled.
          format: float
          type: number
        triggeredAbandonmentEvent:
          description: Whether agent has triggered the event corresponding to user abandoning the conversation.
          type: boolean
        userEscalated:
          description: Whether user was specifically asking for a live agent.
          type: boolean
        webhookStatuses:
          description: Human-readable statuses of the webhooks triggered during this turn.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDialogflowV3alpha1UpdateDocumentOperationMetadata:
      description: Metadata for UpdateDocument operation.
      properties:
        genericMetadata:
          $ref: "#/components/schemas/GoogleCloudDialogflowV3alpha1GenericKnowledgeOperationMetadata"
          description: The generic information of the operation.
      type: object
    GoogleCloudLocationListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleCloudLocationLocation"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    GoogleCloudLocationLocation:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    GoogleTypeLatLng:
      description: An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this object must conform to the WGS84 standard. Values must be within normalized ranges.
      properties:
        latitude:
          description: The latitude in degrees. It must be in the range [-90.0, +90.0].
          format: double
          type: number
        longitude:
          description: The longitude in degrees. It must be in the range [-180.0, +180.0].
          format: double
          type: number
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/dialogflow: View, manage and query your Dialogflow agents
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/dialogflow: View, manage and query your Dialogflow agents
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
