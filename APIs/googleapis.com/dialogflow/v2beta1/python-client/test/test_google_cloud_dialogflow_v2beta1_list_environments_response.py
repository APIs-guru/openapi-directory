# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_v2beta1_list_environments_response import GoogleCloudDialogflowV2beta1ListEnvironmentsResponse

class TestGoogleCloudDialogflowV2beta1ListEnvironmentsResponse(unittest.TestCase):
    """GoogleCloudDialogflowV2beta1ListEnvironmentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowV2beta1ListEnvironmentsResponse:
        """Test GoogleCloudDialogflowV2beta1ListEnvironmentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowV2beta1ListEnvironmentsResponse`
        """
        model = GoogleCloudDialogflowV2beta1ListEnvironmentsResponse()
        if include_optional:
            return GoogleCloudDialogflowV2beta1ListEnvironmentsResponse(
                environments = [
                    openapi_client.models.google_cloud_dialogflow_v2beta1_environment.GoogleCloudDialogflowV2beta1Environment(
                        agent_version = '', 
                        description = '', 
                        fulfillment = openapi_client.models.google_cloud_dialogflow_v2beta1_fulfillment.GoogleCloudDialogflowV2beta1Fulfillment(
                            display_name = '', 
                            enabled = True, 
                            features = [
                                openapi_client.models.google_cloud_dialogflow_v2beta1_fulfillment_feature.GoogleCloudDialogflowV2beta1FulfillmentFeature(
                                    type = 'TYPE_UNSPECIFIED', )
                                ], 
                            generic_web_service = openapi_client.models.google_cloud_dialogflow_v2beta1_fulfillment_generic_web_service.GoogleCloudDialogflowV2beta1FulfillmentGenericWebService(
                                is_cloud_function = True, 
                                password = '', 
                                request_headers = {
                                    'key' : ''
                                    }, 
                                uri = '', 
                                username = '', ), 
                            name = '', ), 
                        name = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_to_speech_settings = openapi_client.models.google_cloud_dialogflow_v2beta1_text_to_speech_settings.GoogleCloudDialogflowV2beta1TextToSpeechSettings(
                            enable_text_to_speech = True, 
                            output_audio_encoding = 'OUTPUT_AUDIO_ENCODING_UNSPECIFIED', 
                            sample_rate_hertz = 56, 
                            synthesize_speech_configs = {
                                'key' : openapi_client.models.google_cloud_dialogflow_v2beta1_synthesize_speech_config.GoogleCloudDialogflowV2beta1SynthesizeSpeechConfig(
                                    effects_profile_id = [
                                        ''
                                        ], 
                                    pitch = 1.337, 
                                    speaking_rate = 1.337, 
                                    voice = openapi_client.models.google_cloud_dialogflow_v2beta1_voice_selection_params.GoogleCloudDialogflowV2beta1VoiceSelectionParams(
                                        name = '', 
                                        ssml_gender = 'SSML_VOICE_GENDER_UNSPECIFIED', ), 
                                    volume_gain_db = 1.337, )
                                }, ), 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudDialogflowV2beta1ListEnvironmentsResponse(
        )
        """

    def testGoogleCloudDialogflowV2beta1ListEnvironmentsResponse(self):
        """Test GoogleCloudDialogflowV2beta1ListEnvironmentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
