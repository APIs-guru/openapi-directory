# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3beta1_conversation_turn_user_input import GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput

class TestGoogleCloudDialogflowCxV3beta1ConversationTurnUserInput(unittest.TestCase):
    """GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput:
        """Test GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput`
        """
        model = GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput()
        if include_optional:
            return GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput(
                enable_sentiment_analysis = True,
                injected_parameters = {
                    'key' : null
                    },
                input = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_query_input.GoogleCloudDialogflowCxV3beta1QueryInput(
                    audio = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_audio_input.GoogleCloudDialogflowCxV3beta1AudioInput(
                        config = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_input_audio_config.GoogleCloudDialogflowCxV3beta1InputAudioConfig(
                            audio_encoding = 'AUDIO_ENCODING_UNSPECIFIED', 
                            barge_in_config = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_barge_in_config.GoogleCloudDialogflowCxV3beta1BargeInConfig(
                                no_barge_in_duration = '', 
                                total_duration = '', ), 
                            enable_word_info = True, 
                            model = '', 
                            model_variant = 'SPEECH_MODEL_VARIANT_UNSPECIFIED', 
                            opt_out_conformer_model_migration = True, 
                            phrase_hints = [
                                ''
                                ], 
                            sample_rate_hertz = 56, 
                            single_utterance = True, ), ), 
                    dtmf = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_dtmf_input.GoogleCloudDialogflowCxV3beta1DtmfInput(
                        digits = '', 
                        finish_digit = '', ), 
                    event = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_event_input.GoogleCloudDialogflowCxV3beta1EventInput(), 
                    intent = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_intent_input.GoogleCloudDialogflowCxV3beta1IntentInput(), 
                    language_code = '', 
                    text = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_text_input.GoogleCloudDialogflowCxV3beta1TextInput(), ),
                is_webhook_enabled = True
            )
        else:
            return GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput(
        )
        """

    def testGoogleCloudDialogflowCxV3beta1ConversationTurnUserInput(self):
        """Test GoogleCloudDialogflowCxV3beta1ConversationTurnUserInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
