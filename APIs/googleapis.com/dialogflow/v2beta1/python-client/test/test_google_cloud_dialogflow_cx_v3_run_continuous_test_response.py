# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3_run_continuous_test_response import GoogleCloudDialogflowCxV3RunContinuousTestResponse

class TestGoogleCloudDialogflowCxV3RunContinuousTestResponse(unittest.TestCase):
    """GoogleCloudDialogflowCxV3RunContinuousTestResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3RunContinuousTestResponse:
        """Test GoogleCloudDialogflowCxV3RunContinuousTestResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3RunContinuousTestResponse`
        """
        model = GoogleCloudDialogflowCxV3RunContinuousTestResponse()
        if include_optional:
            return GoogleCloudDialogflowCxV3RunContinuousTestResponse(
                continuous_test_result = openapi_client.models.google_cloud_dialogflow_cx_v3_continuous_test_result.GoogleCloudDialogflowCxV3ContinuousTestResult(
                    name = '', 
                    result = 'AGGREGATED_TEST_RESULT_UNSPECIFIED', 
                    run_time = '', 
                    test_case_results = [
                        ''
                        ], )
            )
        else:
            return GoogleCloudDialogflowCxV3RunContinuousTestResponse(
        )
        """

    def testGoogleCloudDialogflowCxV3RunContinuousTestResponse(self):
        """Test GoogleCloudDialogflowCxV3RunContinuousTestResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
