# coding: utf-8

"""
    Dialogflow API

    Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_dialogflow_cx_v3beta1_deploy_flow_response import GoogleCloudDialogflowCxV3beta1DeployFlowResponse

class TestGoogleCloudDialogflowCxV3beta1DeployFlowResponse(unittest.TestCase):
    """GoogleCloudDialogflowCxV3beta1DeployFlowResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDialogflowCxV3beta1DeployFlowResponse:
        """Test GoogleCloudDialogflowCxV3beta1DeployFlowResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDialogflowCxV3beta1DeployFlowResponse`
        """
        model = GoogleCloudDialogflowCxV3beta1DeployFlowResponse()
        if include_optional:
            return GoogleCloudDialogflowCxV3beta1DeployFlowResponse(
                deployment = '',
                environment = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_environment.GoogleCloudDialogflowCxV3beta1Environment(
                    description = '', 
                    display_name = '', 
                    name = '', 
                    test_cases_config = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_environment_test_cases_config.GoogleCloudDialogflowCxV3beta1EnvironmentTestCasesConfig(
                        enable_continuous_run = True, 
                        enable_predeployment_run = True, 
                        test_cases = [
                            ''
                            ], ), 
                    update_time = '', 
                    version_configs = [
                        openapi_client.models.google_cloud_dialogflow_cx_v3beta1_environment_version_config.GoogleCloudDialogflowCxV3beta1EnvironmentVersionConfig(
                            version = '', )
                        ], 
                    webhook_config = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_environment_webhook_config.GoogleCloudDialogflowCxV3beta1EnvironmentWebhookConfig(
                        webhook_overrides = [
                            openapi_client.models.google_cloud_dialogflow_cx_v3beta1_webhook.GoogleCloudDialogflowCxV3beta1Webhook(
                                disabled = True, 
                                display_name = '', 
                                generic_web_service = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_webhook_generic_web_service.GoogleCloudDialogflowCxV3beta1WebhookGenericWebService(
                                    allowed_ca_certs = [
                                        'YQ=='
                                        ], 
                                    http_method = 'HTTP_METHOD_UNSPECIFIED', 
                                    parameter_mapping = {
                                        'key' : ''
                                        }, 
                                    password = '', 
                                    request_body = '', 
                                    request_headers = {
                                        'key' : ''
                                        }, 
                                    uri = '', 
                                    username = '', 
                                    webhook_type = 'WEBHOOK_TYPE_UNSPECIFIED', ), 
                                name = '', 
                                service_directory = openapi_client.models.google_cloud_dialogflow_cx_v3beta1_webhook_service_directory_config.GoogleCloudDialogflowCxV3beta1WebhookServiceDirectoryConfig(
                                    service = '', ), 
                                timeout = '', )
                            ], ), )
            )
        else:
            return GoogleCloudDialogflowCxV3beta1DeployFlowResponse(
        )
        """

    def testGoogleCloudDialogflowCxV3beta1DeployFlowResponse(self):
        """Test GoogleCloudDialogflowCxV3beta1DeployFlowResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
