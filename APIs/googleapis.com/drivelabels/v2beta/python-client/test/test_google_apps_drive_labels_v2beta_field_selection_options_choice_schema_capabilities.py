# coding: utf-8

"""
    Drive Labels API

    An API for managing Drive Labels

    The version of the OpenAPI document: v2beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_apps_drive_labels_v2beta_field_selection_options_choice_schema_capabilities import GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities

class TestGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities(unittest.TestCase):
    """GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities:
        """Test GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities`
        """
        model = GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities()
        if include_optional:
            return GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities(
                can_delete = True,
                can_disable = True,
                can_enable = True,
                can_update = True
            )
        else:
            return GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities(
        )
        """

    def testGoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities(self):
        """Test GoogleAppsDriveLabelsV2betaFieldSelectionOptionsChoiceSchemaCapabilities"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
