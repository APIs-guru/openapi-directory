# coding: utf-8

"""
    Drive Labels API

    An API for managing Drive Labels

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_apps_drive_labels_v2_label_lock import GoogleAppsDriveLabelsV2LabelLock

class TestGoogleAppsDriveLabelsV2LabelLock(unittest.TestCase):
    """GoogleAppsDriveLabelsV2LabelLock unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleAppsDriveLabelsV2LabelLock:
        """Test GoogleAppsDriveLabelsV2LabelLock
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleAppsDriveLabelsV2LabelLock`
        """
        model = GoogleAppsDriveLabelsV2LabelLock()
        if include_optional:
            return GoogleAppsDriveLabelsV2LabelLock(
                capabilities = openapi_client.models.google_apps_drive_labels_v2_label_lock_capabilities.GoogleAppsDriveLabelsV2LabelLockCapabilities(
                    can_view_policy = True, ),
                choice_id = '',
                create_time = '',
                creator = openapi_client.models.google_apps_drive_labels_v2_user_info.GoogleAppsDriveLabelsV2UserInfo(
                    person = '', ),
                delete_time = '',
                field_id = '',
                name = '',
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return GoogleAppsDriveLabelsV2LabelLock(
        )
        """

    def testGoogleAppsDriveLabelsV2LabelLock(self):
        """Test GoogleAppsDriveLabelsV2LabelLock"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
