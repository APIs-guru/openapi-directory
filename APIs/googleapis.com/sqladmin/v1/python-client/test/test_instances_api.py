# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.instances_api import InstancesApi


class TestInstancesApi(unittest.TestCase):
    """InstancesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = InstancesApi()

    def tearDown(self) -> None:
        pass

    def test_sql_instances_add_server_ca(self) -> None:
        """Test case for sql_instances_add_server_ca

        """
        pass

    def test_sql_instances_clone(self) -> None:
        """Test case for sql_instances_clone

        """
        pass

    def test_sql_instances_delete(self) -> None:
        """Test case for sql_instances_delete

        """
        pass

    def test_sql_instances_demote(self) -> None:
        """Test case for sql_instances_demote

        """
        pass

    def test_sql_instances_demote_master(self) -> None:
        """Test case for sql_instances_demote_master

        """
        pass

    def test_sql_instances_export(self) -> None:
        """Test case for sql_instances_export

        """
        pass

    def test_sql_instances_failover(self) -> None:
        """Test case for sql_instances_failover

        """
        pass

    def test_sql_instances_get(self) -> None:
        """Test case for sql_instances_get

        """
        pass

    def test_sql_instances_import(self) -> None:
        """Test case for sql_instances_import

        """
        pass

    def test_sql_instances_insert(self) -> None:
        """Test case for sql_instances_insert

        """
        pass

    def test_sql_instances_list(self) -> None:
        """Test case for sql_instances_list

        """
        pass

    def test_sql_instances_list_server_cas(self) -> None:
        """Test case for sql_instances_list_server_cas

        """
        pass

    def test_sql_instances_patch(self) -> None:
        """Test case for sql_instances_patch

        """
        pass

    def test_sql_instances_promote_replica(self) -> None:
        """Test case for sql_instances_promote_replica

        """
        pass

    def test_sql_instances_reencrypt(self) -> None:
        """Test case for sql_instances_reencrypt

        """
        pass

    def test_sql_instances_reset_ssl_config(self) -> None:
        """Test case for sql_instances_reset_ssl_config

        """
        pass

    def test_sql_instances_restart(self) -> None:
        """Test case for sql_instances_restart

        """
        pass

    def test_sql_instances_restore_backup(self) -> None:
        """Test case for sql_instances_restore_backup

        """
        pass

    def test_sql_instances_rotate_server_ca(self) -> None:
        """Test case for sql_instances_rotate_server_ca

        """
        pass

    def test_sql_instances_start_replica(self) -> None:
        """Test case for sql_instances_start_replica

        """
        pass

    def test_sql_instances_stop_replica(self) -> None:
        """Test case for sql_instances_stop_replica

        """
        pass

    def test_sql_instances_switchover(self) -> None:
        """Test case for sql_instances_switchover

        """
        pass

    def test_sql_instances_truncate_log(self) -> None:
        """Test case for sql_instances_truncate_log

        """
        pass

    def test_sql_instances_update(self) -> None:
        """Test case for sql_instances_update

        """
        pass


if __name__ == '__main__':
    unittest.main()
