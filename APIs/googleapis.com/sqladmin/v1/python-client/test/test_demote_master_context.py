# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.demote_master_context import DemoteMasterContext

class TestDemoteMasterContext(unittest.TestCase):
    """DemoteMasterContext unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DemoteMasterContext:
        """Test DemoteMasterContext
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DemoteMasterContext`
        """
        model = DemoteMasterContext()
        if include_optional:
            return DemoteMasterContext(
                kind = '',
                master_instance_name = '',
                replica_configuration = openapi_client.models.demote_master_configuration.DemoteMasterConfiguration(
                    kind = '', 
                    mysql_replica_configuration = openapi_client.models.demote_master_my_sql_replica_configuration.DemoteMasterMySqlReplicaConfiguration(
                        ca_certificate = '', 
                        client_certificate = '', 
                        client_key = '', 
                        kind = '', 
                        password = '', 
                        username = '', ), ),
                skip_replication_setup = True,
                verify_gtid_consistency = True
            )
        else:
            return DemoteMasterContext(
        )
        """

    def testDemoteMasterContext(self):
        """Test DemoteMasterContext"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
