# coding: utf-8

"""
    Google Play Game Services

    The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_update_response import EventUpdateResponse

class TestEventUpdateResponse(unittest.TestCase):
    """EventUpdateResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventUpdateResponse:
        """Test EventUpdateResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventUpdateResponse`
        """
        model = EventUpdateResponse()
        if include_optional:
            return EventUpdateResponse(
                batch_failures = [
                    openapi_client.models.event_batch_record_failure.EventBatchRecordFailure(
                        failure_cause = 'TOO_LARGE', 
                        kind = '', 
                        range = openapi_client.models.event_period_range.EventPeriodRange(
                            kind = '', 
                            period_end_millis = '', 
                            period_start_millis = '', ), )
                    ],
                event_failures = [
                    openapi_client.models.event_record_failure.EventRecordFailure(
                        event_id = '', 
                        failure_cause = 'NOT_FOUND', 
                        kind = '', )
                    ],
                kind = '',
                player_events = [
                    openapi_client.models.player_event.PlayerEvent(
                        definition_id = '', 
                        formatted_num_events = '', 
                        kind = '', 
                        num_events = '', 
                        player_id = '', )
                    ]
            )
        else:
            return EventUpdateResponse(
        )
        """

    def testEventUpdateResponse(self):
        """Test EventUpdateResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
