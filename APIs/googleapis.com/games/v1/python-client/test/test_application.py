# coding: utf-8

"""
    Google Play Game Services

    The Google Play games service allows developers to enhance games with social leaderboards, achievements, game state, sign-in with Google, and more.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.application import Application

class TestApplication(unittest.TestCase):
    """Application unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Application:
        """Test Application
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Application`
        """
        model = Application()
        if include_optional:
            return Application(
                achievement_count = 56,
                assets = [
                    openapi_client.models.image_asset.ImageAsset(
                        height = 56, 
                        kind = '', 
                        name = '', 
                        url = '', 
                        width = 56, )
                    ],
                author = '',
                category = openapi_client.models.application_category.ApplicationCategory(
                    kind = '', 
                    primary = '', 
                    secondary = '', ),
                description = '',
                enabled_features = [
                    'SNAPSHOTS'
                    ],
                id = '',
                instances = [
                    openapi_client.models.instance.Instance(
                        acquisition_uri = '', 
                        android_instance = openapi_client.models.instance_android_details.InstanceAndroidDetails(
                            enable_piracy_check = True, 
                            kind = '', 
                            package_name = '', 
                            preferred = True, ), 
                        ios_instance = openapi_client.models.instance_ios_details.InstanceIosDetails(
                            bundle_identifier = '', 
                            itunes_app_id = '', 
                            kind = '', 
                            preferred_for_ipad = True, 
                            preferred_for_iphone = True, 
                            support_ipad = True, 
                            support_iphone = True, ), 
                        kind = '', 
                        name = '', 
                        platform_type = 'ANDROID', 
                        realtime_play = True, 
                        turn_based_play = True, 
                        web_instance = openapi_client.models.instance_web_details.InstanceWebDetails(
                            kind = '', 
                            launch_url = '', 
                            preferred = True, ), )
                    ],
                kind = '',
                last_updated_timestamp = '',
                leaderboard_count = 56,
                name = '',
                theme_color = ''
            )
        else:
            return Application(
        )
        """

    def testApplication(self):
        """Test Application"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
