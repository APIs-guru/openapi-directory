# coding: utf-8

"""
    Google My Business API

    The Google My Business API provides an interface for managing business location information on Google.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.report_location_insights_request import ReportLocationInsightsRequest

class TestReportLocationInsightsRequest(unittest.TestCase):
    """ReportLocationInsightsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReportLocationInsightsRequest:
        """Test ReportLocationInsightsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReportLocationInsightsRequest`
        """
        model = ReportLocationInsightsRequest()
        if include_optional:
            return ReportLocationInsightsRequest(
                basic_request = openapi_client.models.basic_metrics_request.BasicMetricsRequest(
                    metric_requests = [
                        openapi_client.models.metric_request.MetricRequest(
                            metric = 'METRIC_UNSPECIFIED', 
                            options = [
                                'METRIC_OPTION_UNSPECIFIED'
                                ], )
                        ], 
                    time_range = openapi_client.models.time_range.TimeRange(
                        end_time = '', 
                        start_time = '', ), ),
                driving_directions_request = openapi_client.models.driving_direction_metrics_request.DrivingDirectionMetricsRequest(
                    language_code = '', 
                    num_days = 'SEVEN', ),
                location_names = [
                    ''
                    ]
            )
        else:
            return ReportLocationInsightsRequest(
        )
        """

    def testReportLocationInsightsRequest(self):
        """Test ReportLocationInsightsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
