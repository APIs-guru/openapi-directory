# coding: utf-8

"""
    Google My Business API

    The Google My Business API provides an interface for managing business location information on Google.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.parking import Parking

class TestParking(unittest.TestCase):
    """Parking unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Parking:
        """Test Parking
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Parking`
        """
        model = Parking()
        if include_optional:
            return Parking(
                electric_car_charging_stations = True,
                electric_car_charging_stations_exception = 'EXCEPTION_UNSPECIFIED',
                free_parking = True,
                free_parking_exception = 'EXCEPTION_UNSPECIFIED',
                free_self_parking = True,
                free_self_parking_exception = 'EXCEPTION_UNSPECIFIED',
                free_valet_parking = True,
                free_valet_parking_exception = 'EXCEPTION_UNSPECIFIED',
                parking_available = True,
                parking_available_exception = 'EXCEPTION_UNSPECIFIED',
                self_parking_available = True,
                self_parking_available_exception = 'EXCEPTION_UNSPECIFIED',
                valet_parking_available = True,
                valet_parking_available_exception = 'EXCEPTION_UNSPECIFIED'
            )
        else:
            return Parking(
        )
        """

    def testParking(self):
        """Test Parking"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
