# coding: utf-8

"""
    Google My Business API

    The Google My Business API provides an interface for managing business location information on Google.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pools import Pools

class TestPools(unittest.TestCase):
    """Pools unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Pools:
        """Test Pools
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Pools`
        """
        model = Pools()
        if include_optional:
            return Pools(
                adult_pool = True,
                adult_pool_exception = 'EXCEPTION_UNSPECIFIED',
                hot_tub = True,
                hot_tub_exception = 'EXCEPTION_UNSPECIFIED',
                indoor_pool = True,
                indoor_pool_exception = 'EXCEPTION_UNSPECIFIED',
                indoor_pools_count = 56,
                indoor_pools_count_exception = 'EXCEPTION_UNSPECIFIED',
                lazy_river = True,
                lazy_river_exception = 'EXCEPTION_UNSPECIFIED',
                lifeguard = True,
                lifeguard_exception = 'EXCEPTION_UNSPECIFIED',
                outdoor_pool = True,
                outdoor_pool_exception = 'EXCEPTION_UNSPECIFIED',
                outdoor_pools_count = 56,
                outdoor_pools_count_exception = 'EXCEPTION_UNSPECIFIED',
                pool = True,
                pool_exception = 'EXCEPTION_UNSPECIFIED',
                pools_count = 56,
                pools_count_exception = 'EXCEPTION_UNSPECIFIED',
                wading_pool = True,
                wading_pool_exception = 'EXCEPTION_UNSPECIFIED',
                water_park = True,
                water_park_exception = 'EXCEPTION_UNSPECIFIED',
                waterslide = True,
                waterslide_exception = 'EXCEPTION_UNSPECIFIED',
                wave_pool = True,
                wave_pool_exception = 'EXCEPTION_UNSPECIFIED'
            )
        else:
            return Pools(
        )
        """

    def testPools(self):
        """Test Pools"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
