# coding: utf-8

"""
    Google My Business API

    The Google My Business API provides an interface for managing business location information on Google.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.health_and_safety import HealthAndSafety

class TestHealthAndSafety(unittest.TestCase):
    """HealthAndSafety unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> HealthAndSafety:
        """Test HealthAndSafety
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `HealthAndSafety`
        """
        model = HealthAndSafety()
        if include_optional:
            return HealthAndSafety(
                enhanced_cleaning = openapi_client.models.enhanced_cleaning.EnhancedCleaning(
                    commercial_grade_disinfectant_cleaning = True, 
                    commercial_grade_disinfectant_cleaning_exception = 'EXCEPTION_UNSPECIFIED', 
                    common_areas_enhanced_cleaning = True, 
                    common_areas_enhanced_cleaning_exception = 'EXCEPTION_UNSPECIFIED', 
                    employees_trained_cleaning_procedures = True, 
                    employees_trained_cleaning_procedures_exception = 'EXCEPTION_UNSPECIFIED', 
                    employees_trained_thorough_hand_washing = True, 
                    employees_trained_thorough_hand_washing_exception = 'EXCEPTION_UNSPECIFIED', 
                    employees_wear_protective_equipment = True, 
                    employees_wear_protective_equipment_exception = 'EXCEPTION_UNSPECIFIED', 
                    guest_rooms_enhanced_cleaning = True, 
                    guest_rooms_enhanced_cleaning_exception = 'EXCEPTION_UNSPECIFIED', ),
                increased_food_safety = openapi_client.models.increased_food_safety.IncreasedFoodSafety(
                    dining_areas_additional_sanitation = True, 
                    dining_areas_additional_sanitation_exception = 'EXCEPTION_UNSPECIFIED', 
                    disposable_flatware = True, 
                    disposable_flatware_exception = 'EXCEPTION_UNSPECIFIED', 
                    food_preparation_and_serving_additional_safety = True, 
                    food_preparation_and_serving_additional_safety_exception = 'EXCEPTION_UNSPECIFIED', 
                    individual_packaged_meals = True, 
                    individual_packaged_meals_exception = 'EXCEPTION_UNSPECIFIED', 
                    single_use_food_menus = True, 
                    single_use_food_menus_exception = 'EXCEPTION_UNSPECIFIED', ),
                minimized_contact = openapi_client.models.minimized_contact.MinimizedContact(
                    contactless_checkin_checkout = True, 
                    contactless_checkin_checkout_exception = 'EXCEPTION_UNSPECIFIED', 
                    digital_guest_room_keys = True, 
                    digital_guest_room_keys_exception = 'EXCEPTION_UNSPECIFIED', 
                    housekeeping_scheduled_request_only = True, 
                    housekeeping_scheduled_request_only_exception = 'EXCEPTION_UNSPECIFIED', 
                    no_high_touch_items_common_areas = True, 
                    no_high_touch_items_common_areas_exception = 'EXCEPTION_UNSPECIFIED', 
                    no_high_touch_items_guest_rooms = True, 
                    no_high_touch_items_guest_rooms_exception = 'EXCEPTION_UNSPECIFIED', 
                    plastic_keycards_disinfected = True, 
                    plastic_keycards_disinfected_exception = 'EXCEPTION_UNSPECIFIED', 
                    room_bookings_buffer = True, 
                    room_bookings_buffer_exception = 'EXCEPTION_UNSPECIFIED', ),
                personal_protection = openapi_client.models.personal_protection.PersonalProtection(
                    common_areas_offer_sanitizing_items = True, 
                    common_areas_offer_sanitizing_items_exception = 'EXCEPTION_UNSPECIFIED', 
                    face_mask_required = True, 
                    face_mask_required_exception = 'EXCEPTION_UNSPECIFIED', 
                    guest_room_hygiene_kits_available = True, 
                    guest_room_hygiene_kits_available_exception = 'EXCEPTION_UNSPECIFIED', 
                    protective_equipment_available = True, 
                    protective_equipment_available_exception = 'EXCEPTION_UNSPECIFIED', ),
                physical_distancing = openapi_client.models.physical_distancing.PhysicalDistancing(
                    common_areas_physical_distancing_arranged = True, 
                    common_areas_physical_distancing_arranged_exception = 'EXCEPTION_UNSPECIFIED', 
                    physical_distancing_required = True, 
                    physical_distancing_required_exception = 'EXCEPTION_UNSPECIFIED', 
                    safety_dividers = True, 
                    safety_dividers_exception = 'EXCEPTION_UNSPECIFIED', 
                    shared_areas_limited_occupancy = True, 
                    shared_areas_limited_occupancy_exception = 'EXCEPTION_UNSPECIFIED', 
                    wellness_areas_have_private_spaces = True, 
                    wellness_areas_have_private_spaces_exception = 'EXCEPTION_UNSPECIFIED', )
            )
        else:
            return HealthAndSafety(
        )
        """

    def testHealthAndSafety(self):
        """Test HealthAndSafety"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
