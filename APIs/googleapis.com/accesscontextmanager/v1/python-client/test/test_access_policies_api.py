# coding: utf-8

"""
    Access Context Manager API

    An API for setting attribute based access control to requests to Google Cloud services. *Warning:* Do not mix *v1alpha* and *v1* API usage in the same access policy. The v1alpha API supports new Access Context Manager features, which may have different attributes or behaviors that are not supported by v1. The practice of mixed API usage within a policy may result in the inability to update that policy, including any access levels or service perimeters belonging to it. It is not recommended to use both v1 and v1alpha for modifying policies with critical service perimeters. Modifications using v1alpha should be limited to policies with non-production/non-critical service perimeters.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.access_policies_api import AccessPoliciesApi


class TestAccessPoliciesApi(unittest.TestCase):
    """AccessPoliciesApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AccessPoliciesApi()

    def tearDown(self) -> None:
        pass

    def test_accesscontextmanager_access_policies_access_levels_create(self) -> None:
        """Test case for accesscontextmanager_access_policies_access_levels_create

        """
        pass

    def test_accesscontextmanager_access_policies_access_levels_list(self) -> None:
        """Test case for accesscontextmanager_access_policies_access_levels_list

        """
        pass

    def test_accesscontextmanager_access_policies_access_levels_replace_all(self) -> None:
        """Test case for accesscontextmanager_access_policies_access_levels_replace_all

        """
        pass

    def test_accesscontextmanager_access_policies_authorized_orgs_descs_create(self) -> None:
        """Test case for accesscontextmanager_access_policies_authorized_orgs_descs_create

        """
        pass

    def test_accesscontextmanager_access_policies_authorized_orgs_descs_list(self) -> None:
        """Test case for accesscontextmanager_access_policies_authorized_orgs_descs_list

        """
        pass

    def test_accesscontextmanager_access_policies_create(self) -> None:
        """Test case for accesscontextmanager_access_policies_create

        """
        pass

    def test_accesscontextmanager_access_policies_get_iam_policy(self) -> None:
        """Test case for accesscontextmanager_access_policies_get_iam_policy

        """
        pass

    def test_accesscontextmanager_access_policies_list(self) -> None:
        """Test case for accesscontextmanager_access_policies_list

        """
        pass

    def test_accesscontextmanager_access_policies_service_perimeters_commit(self) -> None:
        """Test case for accesscontextmanager_access_policies_service_perimeters_commit

        """
        pass

    def test_accesscontextmanager_access_policies_service_perimeters_create(self) -> None:
        """Test case for accesscontextmanager_access_policies_service_perimeters_create

        """
        pass

    def test_accesscontextmanager_access_policies_service_perimeters_list(self) -> None:
        """Test case for accesscontextmanager_access_policies_service_perimeters_list

        """
        pass

    def test_accesscontextmanager_access_policies_service_perimeters_replace_all(self) -> None:
        """Test case for accesscontextmanager_access_policies_service_perimeters_replace_all

        """
        pass

    def test_accesscontextmanager_access_policies_service_perimeters_test_iam_permissions(self) -> None:
        """Test case for accesscontextmanager_access_policies_service_perimeters_test_iam_permissions

        """
        pass

    def test_accesscontextmanager_access_policies_set_iam_policy(self) -> None:
        """Test case for accesscontextmanager_access_policies_set_iam_policy

        """
        pass


if __name__ == '__main__':
    unittest.main()
