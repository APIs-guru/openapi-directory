# coding: utf-8

"""
    Access Context Manager API

    An API for setting attribute based access control to requests to Google Cloud services.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vpc_accessible_services import VpcAccessibleServices

class TestVpcAccessibleServices(unittest.TestCase):
    """VpcAccessibleServices unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VpcAccessibleServices:
        """Test VpcAccessibleServices
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VpcAccessibleServices`
        """
        model = VpcAccessibleServices()
        if include_optional:
            return VpcAccessibleServices(
                allowed_services = [
                    ''
                    ],
                enable_restriction = True
            )
        else:
            return VpcAccessibleServices(
        )
        """

    def testVpcAccessibleServices(self):
        """Test VpcAccessibleServices"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
