# coding: utf-8

"""
    Access Context Manager API

    An API for setting attribute based access control to requests to Google Cloud services.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_perimeter_config import ServicePerimeterConfig

class TestServicePerimeterConfig(unittest.TestCase):
    """ServicePerimeterConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServicePerimeterConfig:
        """Test ServicePerimeterConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServicePerimeterConfig`
        """
        model = ServicePerimeterConfig()
        if include_optional:
            return ServicePerimeterConfig(
                access_levels = [
                    ''
                    ],
                resources = [
                    ''
                    ],
                restricted_services = [
                    ''
                    ],
                unrestricted_services = [
                    ''
                    ],
                vpc_accessible_services = openapi_client.models.vpc_accessible_services.VpcAccessibleServices(
                    allowed_services = [
                        ''
                        ], 
                    enable_restriction = True, )
            )
        else:
            return ServicePerimeterConfig(
        )
        """

    def testServicePerimeterConfig(self):
        """Test ServicePerimeterConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
