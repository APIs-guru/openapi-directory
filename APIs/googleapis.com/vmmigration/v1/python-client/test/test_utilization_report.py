# coding: utf-8

"""
    VM Migration API

    Use the Migrate to Virtual Machines API to programmatically migrate workloads. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.utilization_report import UtilizationReport

class TestUtilizationReport(unittest.TestCase):
    """UtilizationReport unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UtilizationReport:
        """Test UtilizationReport
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UtilizationReport`
        """
        model = UtilizationReport()
        if include_optional:
            return UtilizationReport(
                create_time = '',
                display_name = '',
                error = openapi_client.models.status.Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                frame_end_time = '',
                name = '',
                state = 'STATE_UNSPECIFIED',
                state_time = '',
                time_frame = 'TIME_FRAME_UNSPECIFIED',
                vm_count = 56,
                vms = [
                    openapi_client.models.vm_utilization_info.VmUtilizationInfo(
                        utilization = openapi_client.models.vm_utilization_metrics.VmUtilizationMetrics(
                            cpu_average_percent = 56, 
                            cpu_max_percent = 56, 
                            disk_io_rate_average_kbps = '', 
                            disk_io_rate_max_kbps = '', 
                            memory_average_percent = 56, 
                            memory_max_percent = 56, 
                            network_throughput_average_kbps = '', 
                            network_throughput_max_kbps = '', ), 
                        vm_id = '', 
                        vmware_vm_details = openapi_client.models.vmware_vm_details.VmwareVmDetails(
                            boot_option = 'BOOT_OPTION_UNSPECIFIED', 
                            committed_storage_mb = '', 
                            cpu_count = 56, 
                            datacenter_description = '', 
                            datacenter_id = '', 
                            disk_count = 56, 
                            display_name = '', 
                            guest_description = '', 
                            memory_mb = 56, 
                            power_state = 'POWER_STATE_UNSPECIFIED', 
                            uuid = '', 
                            vm_id = '', ), )
                    ]
            )
        else:
            return UtilizationReport(
        )
        """

    def testUtilizationReport(self):
        """Test UtilizationReport"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
