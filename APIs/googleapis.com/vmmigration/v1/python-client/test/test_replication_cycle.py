# coding: utf-8

"""
    VM Migration API

    Use the Migrate to Virtual Machines API to programmatically migrate workloads. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.replication_cycle import ReplicationCycle

class TestReplicationCycle(unittest.TestCase):
    """ReplicationCycle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReplicationCycle:
        """Test ReplicationCycle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReplicationCycle`
        """
        model = ReplicationCycle()
        if include_optional:
            return ReplicationCycle(
                cycle_number = 56,
                end_time = '',
                error = openapi_client.models.status.Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                name = '',
                progress_percent = 56,
                start_time = '',
                state = 'STATE_UNSPECIFIED',
                steps = [
                    openapi_client.models.cycle_step.CycleStep(
                        end_time = '', 
                        initializing_replication = openapi_client.models.initializing_replication_step.InitializingReplicationStep(), 
                        post_processing = openapi_client.models.post_processing_step.PostProcessingStep(), 
                        replicating = openapi_client.models.replicating_step.ReplicatingStep(
                            last_thirty_minutes_average_bytes_per_second = '', 
                            last_two_minutes_average_bytes_per_second = '', 
                            replicated_bytes = '', 
                            total_bytes = '', ), 
                        start_time = '', )
                    ],
                total_pause_duration = '',
                warnings = [
                    openapi_client.models.migration_warning.MigrationWarning(
                        action_item = openapi_client.models.localized_message.LocalizedMessage(
                            locale = '', 
                            message = '', ), 
                        code = 'WARNING_CODE_UNSPECIFIED', 
                        help_links = [
                            openapi_client.models.link.Link(
                                description = '', 
                                url = '', )
                            ], 
                        warning_message = openapi_client.models.localized_message.LocalizedMessage(
                            locale = '', 
                            message = '', ), 
                        warning_time = '', )
                    ]
            )
        else:
            return ReplicationCycle(
        )
        """

    def testReplicationCycle(self):
        """Test ReplicationCycle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
