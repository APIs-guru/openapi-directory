# coding: utf-8

"""
    VM Migration API

    Use the Migrate to Virtual Machines API to programmatically migrate workloads. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.azure_source_details import AzureSourceDetails

class TestAzureSourceDetails(unittest.TestCase):
    """AzureSourceDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AzureSourceDetails:
        """Test AzureSourceDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AzureSourceDetails`
        """
        model = AzureSourceDetails()
        if include_optional:
            return AzureSourceDetails(
                azure_location = '',
                client_secret_creds = openapi_client.models.client_secret_credentials.ClientSecretCredentials(
                    client_id = '', 
                    client_secret = '', 
                    tenant_id = '', ),
                error = openapi_client.models.status.Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                migration_resources_user_tags = {
                    'key' : ''
                    },
                resource_group_id = '',
                state = 'STATE_UNSPECIFIED',
                subscription_id = ''
            )
        else:
            return AzureSourceDetails(
        )
        """

    def testAzureSourceDetails(self):
        """Test AzureSourceDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
