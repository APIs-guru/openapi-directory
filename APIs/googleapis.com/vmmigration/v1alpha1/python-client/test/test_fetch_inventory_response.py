# coding: utf-8

"""
    VM Migration API

    Use the Migrate to Virtual Machines API to programmatically migrate workloads. 

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.fetch_inventory_response import FetchInventoryResponse

class TestFetchInventoryResponse(unittest.TestCase):
    """FetchInventoryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FetchInventoryResponse:
        """Test FetchInventoryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FetchInventoryResponse`
        """
        model = FetchInventoryResponse()
        if include_optional:
            return FetchInventoryResponse(
                aws_vms = openapi_client.models.aws_vms_details.AwsVmsDetails(
                    details = [
                        openapi_client.models.aws_vm_details.AwsVmDetails(
                            architecture = 'VM_ARCHITECTURE_UNSPECIFIED', 
                            boot_option = 'BOOT_OPTION_UNSPECIFIED', 
                            committed_storage_mb = '', 
                            cpu_count = 56, 
                            disk_count = 56, 
                            display_name = '', 
                            instance_type = '', 
                            memory_mb = 56, 
                            os_description = '', 
                            power_state = 'POWER_STATE_UNSPECIFIED', 
                            security_groups = [
                                openapi_client.models.aws_security_group.AwsSecurityGroup(
                                    id = '', 
                                    name = '', )
                                ], 
                            source_description = '', 
                            source_id = '', 
                            tags = {
                                'key' : ''
                                }, 
                            virtualization_type = 'VM_VIRTUALIZATION_TYPE_UNSPECIFIED', 
                            vm_id = '', 
                            vpc_id = '', 
                            zone = '', )
                        ], ),
                azure_vms = openapi_client.models.azure_vms_details.AzureVmsDetails(
                    details = [
                        openapi_client.models.azure_vm_details.AzureVmDetails(
                            boot_option = 'BOOT_OPTION_UNSPECIFIED', 
                            committed_storage_mb = '', 
                            computer_name = '', 
                            cpu_count = 56, 
                            disk_count = 56, 
                            disks = [
                                openapi_client.models.disk.Disk(
                                    lun = 56, 
                                    name = '', 
                                    size_gb = 56, )
                                ], 
                            memory_mb = 56, 
                            os_description = openapi_client.models.os_description.OSDescription(
                                offer = '', 
                                plan = '', 
                                publisher = '', 
                                type = '', ), 
                            os_disk = openapi_client.models.os_disk.OSDisk(
                                name = '', 
                                size_gb = 56, 
                                type = '', ), 
                            power_state = 'POWER_STATE_UNSPECIFIED', 
                            tags = {
                                'key' : ''
                                }, 
                            vm_id = '', 
                            vm_size = '', )
                        ], ),
                next_page_token = '',
                update_time = '',
                vmware_vms = openapi_client.models.vmware_vms_details.VmwareVmsDetails(
                    details = [
                        openapi_client.models.vmware_vm_details.VmwareVmDetails(
                            boot_option = 'BOOT_OPTION_UNSPECIFIED', 
                            committed_storage = '', 
                            committed_storage_mb = '', 
                            cpu_count = 56, 
                            datacenter_description = '', 
                            datacenter_id = '', 
                            disk_count = 56, 
                            display_name = '', 
                            guest_description = '', 
                            memory_mb = 56, 
                            power_state = 'POWER_STATE_UNSPECIFIED', 
                            uuid = '', 
                            vm_id = '', )
                        ], )
            )
        else:
            return FetchInventoryResponse(
        )
        """

    def testFetchInventoryResponse(self):
        """Test FetchInventoryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
