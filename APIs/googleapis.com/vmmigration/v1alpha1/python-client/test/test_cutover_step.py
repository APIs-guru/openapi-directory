# coding: utf-8

"""
    VM Migration API

    Use the Migrate to Virtual Machines API to programmatically migrate workloads. 

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cutover_step import CutoverStep

class TestCutoverStep(unittest.TestCase):
    """CutoverStep unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CutoverStep:
        """Test CutoverStep
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CutoverStep`
        """
        model = CutoverStep()
        if include_optional:
            return CutoverStep(
                end_time = '',
                final_sync = openapi_client.models.replication_cycle.ReplicationCycle(
                    cycle_number = 56, 
                    end_time = '', 
                    error = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    name = '', 
                    progress = 56, 
                    progress_percent = 56, 
                    start_time = '', 
                    state = 'STATE_UNSPECIFIED', 
                    steps = [
                        openapi_client.models.cycle_step.CycleStep(
                            end_time = '', 
                            initializing_replication = openapi_client.models.initializing_replication_step.InitializingReplicationStep(), 
                            post_processing = openapi_client.models.post_processing_step.PostProcessingStep(), 
                            replicating = openapi_client.models.replicating_step.ReplicatingStep(
                                last_thirty_minutes_average_bytes_per_second = '', 
                                last_two_minutes_average_bytes_per_second = '', 
                                replicated_bytes = '', 
                                total_bytes = '', ), 
                            start_time = '', )
                        ], 
                    total_pause_duration = '', 
                    warnings = [
                        openapi_client.models.migration_warning.MigrationWarning(
                            action_item = openapi_client.models.localized_message.LocalizedMessage(
                                locale = '', 
                                message = '', ), 
                            code = 'WARNING_CODE_UNSPECIFIED', 
                            help_links = [
                                openapi_client.models.link.Link(
                                    description = '', 
                                    url = '', )
                                ], 
                            warning_message = openapi_client.models.localized_message.LocalizedMessage(
                                locale = '', 
                                message = '', ), 
                            warning_time = '', )
                        ], ),
                instantiating_migrated_vm = openapi_client.models.instantiating_migrated_vm_step.InstantiatingMigratedVMStep(),
                preparing_vm_disks = openapi_client.models.preparing_vm_disks_step.PreparingVMDisksStep(),
                previous_replication_cycle = openapi_client.models.replication_cycle.ReplicationCycle(
                    cycle_number = 56, 
                    end_time = '', 
                    error = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    name = '', 
                    progress = 56, 
                    progress_percent = 56, 
                    start_time = '', 
                    state = 'STATE_UNSPECIFIED', 
                    steps = [
                        openapi_client.models.cycle_step.CycleStep(
                            end_time = '', 
                            initializing_replication = openapi_client.models.initializing_replication_step.InitializingReplicationStep(), 
                            post_processing = openapi_client.models.post_processing_step.PostProcessingStep(), 
                            replicating = openapi_client.models.replicating_step.ReplicatingStep(
                                last_thirty_minutes_average_bytes_per_second = '', 
                                last_two_minutes_average_bytes_per_second = '', 
                                replicated_bytes = '', 
                                total_bytes = '', ), 
                            start_time = '', )
                        ], 
                    total_pause_duration = '', 
                    warnings = [
                        openapi_client.models.migration_warning.MigrationWarning(
                            action_item = openapi_client.models.localized_message.LocalizedMessage(
                                locale = '', 
                                message = '', ), 
                            code = 'WARNING_CODE_UNSPECIFIED', 
                            help_links = [
                                openapi_client.models.link.Link(
                                    description = '', 
                                    url = '', )
                                ], 
                            warning_message = openapi_client.models.localized_message.LocalizedMessage(
                                locale = '', 
                                message = '', ), 
                            warning_time = '', )
                        ], ),
                shutting_down_source_vm = openapi_client.models.shutting_down_source_vm_step.ShuttingDownSourceVMStep(),
                start_time = ''
            )
        else:
            return CutoverStep(
        )
        """

    def testCutoverStep(self):
        """Test CutoverStep"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
