# coding: utf-8

"""
    Recommender API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recommender_v1_insight import GoogleCloudRecommenderV1Insight

class TestGoogleCloudRecommenderV1Insight(unittest.TestCase):
    """GoogleCloudRecommenderV1Insight unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecommenderV1Insight:
        """Test GoogleCloudRecommenderV1Insight
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecommenderV1Insight`
        """
        model = GoogleCloudRecommenderV1Insight()
        if include_optional:
            return GoogleCloudRecommenderV1Insight(
                associated_recommendations = [
                    openapi_client.models.google_cloud_recommender_v1_insight_recommendation_reference.GoogleCloudRecommenderV1InsightRecommendationReference(
                        recommendation = '', )
                    ],
                category = 'CATEGORY_UNSPECIFIED',
                content = {
                    'key' : null
                    },
                description = '',
                etag = '',
                insight_subtype = '',
                last_refresh_time = '',
                name = '',
                observation_period = '',
                severity = 'SEVERITY_UNSPECIFIED',
                state_info = openapi_client.models.google_cloud_recommender_v1_insight_state_info.GoogleCloudRecommenderV1InsightStateInfo(
                    state = 'STATE_UNSPECIFIED', 
                    state_metadata = {
                        'key' : ''
                        }, ),
                target_resources = [
                    ''
                    ]
            )
        else:
            return GoogleCloudRecommenderV1Insight(
        )
        """

    def testGoogleCloudRecommenderV1Insight(self):
        """Test GoogleCloudRecommenderV1Insight"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
