# coding: utf-8

"""
    Recommender API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_recommender_v1_list_recommendations_response import GoogleCloudRecommenderV1ListRecommendationsResponse

class TestGoogleCloudRecommenderV1ListRecommendationsResponse(unittest.TestCase):
    """GoogleCloudRecommenderV1ListRecommendationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRecommenderV1ListRecommendationsResponse:
        """Test GoogleCloudRecommenderV1ListRecommendationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRecommenderV1ListRecommendationsResponse`
        """
        model = GoogleCloudRecommenderV1ListRecommendationsResponse()
        if include_optional:
            return GoogleCloudRecommenderV1ListRecommendationsResponse(
                next_page_token = '',
                recommendations = [
                    openapi_client.models.google_cloud_recommender_v1_recommendation.GoogleCloudRecommenderV1Recommendation(
                        additional_impact = [
                            openapi_client.models.google_cloud_recommender_v1_impact.GoogleCloudRecommenderV1Impact(
                                category = 'CATEGORY_UNSPECIFIED', 
                                cost_projection = openapi_client.models.google_cloud_recommender_v1_cost_projection.GoogleCloudRecommenderV1CostProjection(
                                    cost = openapi_client.models.google_type_money.GoogleTypeMoney(
                                        currency_code = '', 
                                        nanos = 56, 
                                        units = '', ), 
                                    cost_in_local_currency = openapi_client.models.google_type_money.GoogleTypeMoney(
                                        currency_code = '', 
                                        nanos = 56, 
                                        units = '', ), 
                                    duration = '', ), 
                                reliability_projection = openapi_client.models.google_cloud_recommender_v1_reliability_projection.GoogleCloudRecommenderV1ReliabilityProjection(
                                    details = {
                                        'key' : null
                                        }, 
                                    risks = [
                                        'RISK_TYPE_UNSPECIFIED'
                                        ], ), 
                                security_projection = openapi_client.models.google_cloud_recommender_v1_security_projection.GoogleCloudRecommenderV1SecurityProjection(), 
                                sustainability_projection = openapi_client.models.google_cloud_recommender_v1_sustainability_projection.GoogleCloudRecommenderV1SustainabilityProjection(
                                    duration = '', 
                                    kg_co2e = 1.337, ), )
                            ], 
                        associated_insights = [
                            openapi_client.models.google_cloud_recommender_v1_recommendation_insight_reference.GoogleCloudRecommenderV1RecommendationInsightReference(
                                insight = '', )
                            ], 
                        content = openapi_client.models.google_cloud_recommender_v1_recommendation_content.GoogleCloudRecommenderV1RecommendationContent(
                            operation_groups = [
                                openapi_client.models.google_cloud_recommender_v1_operation_group.GoogleCloudRecommenderV1OperationGroup(
                                    operations = [
                                        openapi_client.models.google_cloud_recommender_v1_operation.GoogleCloudRecommenderV1Operation(
                                            action = '', 
                                            path = '', 
                                            path_filters = {
                                                'key' : null
                                                }, 
                                            path_value_matchers = {
                                                'key' : openapi_client.models.google_cloud_recommender_v1_value_matcher.GoogleCloudRecommenderV1ValueMatcher(
                                                    matches_pattern = '', )
                                                }, 
                                            resource = '', 
                                            resource_type = '', 
                                            source_path = '', 
                                            source_resource = '', 
                                            value = null, 
                                            value_matcher = openapi_client.models.google_cloud_recommender_v1_value_matcher.GoogleCloudRecommenderV1ValueMatcher(
                                                matches_pattern = '', ), )
                                        ], )
                                ], 
                            overview = {
                                'key' : null
                                }, ), 
                        description = '', 
                        etag = '', 
                        last_refresh_time = '', 
                        name = '', 
                        primary_impact = openapi_client.models.google_cloud_recommender_v1_impact.GoogleCloudRecommenderV1Impact(
                            category = 'CATEGORY_UNSPECIFIED', ), 
                        priority = 'PRIORITY_UNSPECIFIED', 
                        recommender_subtype = '', 
                        state_info = openapi_client.models.google_cloud_recommender_v1_recommendation_state_info.GoogleCloudRecommenderV1RecommendationStateInfo(
                            state = 'STATE_UNSPECIFIED', 
                            state_metadata = {
                                'key' : ''
                                }, ), 
                        target_resources = [
                            ''
                            ], 
                        xor_group_id = '', )
                    ]
            )
        else:
            return GoogleCloudRecommenderV1ListRecommendationsResponse(
        )
        """

    def testGoogleCloudRecommenderV1ListRecommendationsResponse(self):
        """Test GoogleCloudRecommenderV1ListRecommendationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
