# coding: utf-8

"""
    Cloud Debugger API (Deprecated)

    Examines the call stack and variables of a running application without stopping or slowing it down. (Deprecated) 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.debuggee import Debuggee

class TestDebuggee(unittest.TestCase):
    """Debuggee unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Debuggee:
        """Test Debuggee
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Debuggee`
        """
        model = Debuggee()
        if include_optional:
            return Debuggee(
                agent_version = '',
                canary_mode = 'CANARY_MODE_UNSPECIFIED',
                description = '',
                ext_source_contexts = [
                    openapi_client.models.extended_source_context.ExtendedSourceContext(
                        context = openapi_client.models.source_context.SourceContext(
                            cloud_repo = openapi_client.models.cloud_repo_source_context.CloudRepoSourceContext(
                                alias_context = openapi_client.models.alias_context.AliasContext(
                                    kind = 'ANY', 
                                    name = '', ), 
                                alias_name = '', 
                                repo_id = openapi_client.models.repo_id.RepoId(
                                    project_repo_id = openapi_client.models.project_repo_id.ProjectRepoId(
                                        project_id = '', 
                                        repo_name = '', ), 
                                    uid = '', ), 
                                revision_id = '', ), 
                            cloud_workspace = openapi_client.models.cloud_workspace_source_context.CloudWorkspaceSourceContext(
                                snapshot_id = '', 
                                workspace_id = openapi_client.models.cloud_workspace_id.CloudWorkspaceId(
                                    name = '', ), ), 
                            gerrit = openapi_client.models.gerrit_source_context.GerritSourceContext(
                                alias_name = '', 
                                gerrit_project = '', 
                                host_uri = '', 
                                revision_id = '', ), 
                            git = openapi_client.models.git_source_context.GitSourceContext(
                                revision_id = '', 
                                url = '', ), ), 
                        labels = {
                            'key' : ''
                            }, )
                    ],
                id = '',
                is_disabled = True,
                is_inactive = True,
                labels = {
                    'key' : ''
                    },
                project = '',
                source_contexts = [
                    openapi_client.models.source_context.SourceContext(
                        cloud_repo = openapi_client.models.cloud_repo_source_context.CloudRepoSourceContext(
                            alias_context = openapi_client.models.alias_context.AliasContext(
                                kind = 'ANY', 
                                name = '', ), 
                            alias_name = '', 
                            repo_id = openapi_client.models.repo_id.RepoId(
                                project_repo_id = openapi_client.models.project_repo_id.ProjectRepoId(
                                    project_id = '', 
                                    repo_name = '', ), 
                                uid = '', ), 
                            revision_id = '', ), 
                        cloud_workspace = openapi_client.models.cloud_workspace_source_context.CloudWorkspaceSourceContext(
                            snapshot_id = '', 
                            workspace_id = openapi_client.models.cloud_workspace_id.CloudWorkspaceId(
                                name = '', ), ), 
                        gerrit = openapi_client.models.gerrit_source_context.GerritSourceContext(
                            alias_name = '', 
                            gerrit_project = '', 
                            host_uri = '', 
                            revision_id = '', ), 
                        git = openapi_client.models.git_source_context.GitSourceContext(
                            revision_id = '', 
                            url = '', ), )
                    ],
                status = openapi_client.models.status_message.StatusMessage(
                    description = openapi_client.models.format_message.FormatMessage(
                        format = '', 
                        parameters = [
                            ''
                            ], ), 
                    is_error = True, 
                    refers_to = 'UNSPECIFIED', ),
                uniquifier = ''
            )
        else:
            return Debuggee(
        )
        """

    def testDebuggee(self):
        """Test Debuggee"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
