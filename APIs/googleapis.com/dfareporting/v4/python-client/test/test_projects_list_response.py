# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.projects_list_response import ProjectsListResponse

class TestProjectsListResponse(unittest.TestCase):
    """ProjectsListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectsListResponse:
        """Test ProjectsListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectsListResponse`
        """
        model = ProjectsListResponse()
        if include_optional:
            return ProjectsListResponse(
                kind = '',
                next_page_token = '',
                projects = [
                    openapi_client.models.project.Project(
                        account_id = '', 
                        advertiser_id = '', 
                        audience_age_group = 'PLANNING_AUDIENCE_AGE_18_24', 
                        audience_gender = 'PLANNING_AUDIENCE_GENDER_MALE', 
                        budget = '', 
                        client_billing_code = '', 
                        client_name = '', 
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        id = '', 
                        kind = '', 
                        last_modified_info = openapi_client.models.last_modified_info.LastModifiedInfo(
                            time = '', ), 
                        name = '', 
                        overview = '', 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        subaccount_id = '', 
                        target_clicks = '', 
                        target_conversions = '', 
                        target_cpa_nanos = '', 
                        target_cpc_nanos = '', 
                        target_cpm_active_view_nanos = '', 
                        target_cpm_nanos = '', 
                        target_impressions = '', )
                    ]
            )
        else:
            return ProjectsListResponse(
        )
        """

    def testProjectsListResponse(self):
        """Test ProjectsListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
