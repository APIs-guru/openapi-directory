# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_tags_list_response import EventTagsListResponse

class TestEventTagsListResponse(unittest.TestCase):
    """EventTagsListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventTagsListResponse:
        """Test EventTagsListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventTagsListResponse`
        """
        model = EventTagsListResponse()
        if include_optional:
            return EventTagsListResponse(
                event_tags = [
                    openapi_client.models.event_tag.EventTag(
                        account_id = '', 
                        advertiser_id = '', 
                        advertiser_id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                            dimension_name = '', 
                            etag = '', 
                            id = '', 
                            kind = '', 
                            match_type = 'EXACT', 
                            value = '', ), 
                        campaign_id = '', 
                        campaign_id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                            dimension_name = '', 
                            etag = '', 
                            id = '', 
                            kind = '', 
                            match_type = 'EXACT', 
                            value = '', ), 
                        enabled_by_default = True, 
                        exclude_from_adx_requests = True, 
                        id = '', 
                        kind = '', 
                        name = '', 
                        site_filter_type = 'ALLOWLIST', 
                        site_ids = [
                            ''
                            ], 
                        ssl_compliant = True, 
                        status = 'ENABLED', 
                        subaccount_id = '', 
                        type = 'IMPRESSION_IMAGE_EVENT_TAG', 
                        url = '', 
                        url_escape_levels = 56, )
                    ],
                kind = ''
            )
        else:
            return EventTagsListResponse(
        )
        """

    def testEventTagsListResponse(self):
        """Test EventTagsListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
