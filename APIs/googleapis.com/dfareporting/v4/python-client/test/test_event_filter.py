# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_filter import EventFilter

class TestEventFilter(unittest.TestCase):
    """EventFilter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventFilter:
        """Test EventFilter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventFilter`
        """
        model = EventFilter()
        if include_optional:
            return EventFilter(
                dimension_filter = openapi_client.models.path_report_dimension_value.PathReportDimensionValue(
                    dimension_name = '', 
                    ids = [
                        ''
                        ], 
                    kind = '', 
                    match_type = 'EXACT', 
                    values = [
                        ''
                        ], ),
                kind = '',
                uvar_filter = openapi_client.models.uvar_filter.UvarFilter(
                    complement = True, 
                    index = '', 
                    kind = '', 
                    match = 'UNSPECIFIED', 
                    values = [
                        ''
                        ], )
            )
        else:
            return EventFilter(
        )
        """

    def testEventFilter(self):
        """Test EventFilter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
