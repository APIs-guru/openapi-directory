# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.technology_targeting import TechnologyTargeting

class TestTechnologyTargeting(unittest.TestCase):
    """TechnologyTargeting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TechnologyTargeting:
        """Test TechnologyTargeting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TechnologyTargeting`
        """
        model = TechnologyTargeting()
        if include_optional:
            return TechnologyTargeting(
                browsers = [
                    openapi_client.models.browser.Browser(
                        browser_version_id = '', 
                        dart_id = '', 
                        kind = '', 
                        major_version = '', 
                        minor_version = '', 
                        name = '', )
                    ],
                connection_types = [
                    openapi_client.models.connection_type.ConnectionType(
                        id = '', 
                        kind = '', 
                        name = '', )
                    ],
                mobile_carriers = [
                    openapi_client.models.mobile_carrier.MobileCarrier(
                        country_code = '', 
                        country_dart_id = '', 
                        id = '', 
                        kind = '', 
                        name = '', )
                    ],
                operating_system_versions = [
                    openapi_client.models.operating_system_version.OperatingSystemVersion(
                        id = '', 
                        kind = '', 
                        major_version = '', 
                        minor_version = '', 
                        name = '', 
                        operating_system = openapi_client.models.operating_system.OperatingSystem(
                            dart_id = '', 
                            desktop = True, 
                            kind = '', 
                            mobile = True, 
                            name = '', ), )
                    ],
                operating_systems = [
                    openapi_client.models.operating_system.OperatingSystem(
                        dart_id = '', 
                        desktop = True, 
                        kind = '', 
                        mobile = True, 
                        name = '', )
                    ],
                platform_types = [
                    openapi_client.models.platform_type.PlatformType(
                        id = '', 
                        kind = '', 
                        name = '', )
                    ]
            )
        else:
            return TechnologyTargeting(
        )
        """

    def testTechnologyTargeting(self):
        """Test TechnologyTargeting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
