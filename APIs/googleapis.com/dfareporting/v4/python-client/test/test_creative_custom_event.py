# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_custom_event import CreativeCustomEvent

class TestCreativeCustomEvent(unittest.TestCase):
    """CreativeCustomEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeCustomEvent:
        """Test CreativeCustomEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeCustomEvent`
        """
        model = CreativeCustomEvent()
        if include_optional:
            return CreativeCustomEvent(
                advertiser_custom_event_id = '',
                advertiser_custom_event_name = '',
                advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER',
                artwork_label = '',
                artwork_type = 'ARTWORK_TYPE_FLASH',
                exit_click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                    computed_click_through_url = '', 
                    custom_click_through_url = '', 
                    landing_page_id = '', ),
                id = '',
                popup_window_properties = openapi_client.models.popup_window_properties.PopupWindowProperties(
                    dimension = openapi_client.models.size.Size(
                        height = 56, 
                        iab = True, 
                        id = '', 
                        kind = '', 
                        width = 56, ), 
                    offset = openapi_client.models.offset_position.OffsetPosition(
                        left = 56, 
                        top = 56, ), 
                    position_type = 'CENTER', 
                    show_address_bar = True, 
                    show_menu_bar = True, 
                    show_scroll_bar = True, 
                    show_status_bar = True, 
                    show_tool_bar = True, 
                    title = '', ),
                target_type = 'TARGET_BLANK',
                video_reporting_id = ''
            )
        else:
            return CreativeCustomEvent(
        )
        """

    def testCreativeCustomEvent(self):
        """Test CreativeCustomEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
