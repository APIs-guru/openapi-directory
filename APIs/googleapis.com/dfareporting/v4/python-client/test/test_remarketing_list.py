# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.remarketing_list import RemarketingList

class TestRemarketingList(unittest.TestCase):
    """RemarketingList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RemarketingList:
        """Test RemarketingList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RemarketingList`
        """
        model = RemarketingList()
        if include_optional:
            return RemarketingList(
                account_id = '',
                active = True,
                advertiser_id = '',
                advertiser_id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                    dimension_name = '', 
                    etag = '', 
                    id = '', 
                    kind = '', 
                    match_type = 'EXACT', 
                    value = '', ),
                description = '',
                id = '',
                kind = '',
                life_span = '',
                list_population_rule = openapi_client.models.list_population_rule.ListPopulationRule(
                    floodlight_activity_id = '', 
                    floodlight_activity_name = '', 
                    list_population_clauses = [
                        openapi_client.models.list_population_clause.ListPopulationClause(
                            terms = [
                                openapi_client.models.list_population_term.ListPopulationTerm(
                                    contains = True, 
                                    negation = True, 
                                    operator = 'NUM_EQUALS', 
                                    remarketing_list_id = '', 
                                    type = 'CUSTOM_VARIABLE_TERM', 
                                    value = '', 
                                    variable_friendly_name = '', 
                                    variable_name = '', )
                                ], )
                        ], ),
                list_size = '',
                list_source = 'REMARKETING_LIST_SOURCE_OTHER',
                name = '',
                subaccount_id = ''
            )
        else:
            return RemarketingList(
        )
        """

    def testRemarketingList(self):
        """Test RemarketingList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
