# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.video_formats_list_response import VideoFormatsListResponse

class TestVideoFormatsListResponse(unittest.TestCase):
    """VideoFormatsListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VideoFormatsListResponse:
        """Test VideoFormatsListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VideoFormatsListResponse`
        """
        model = VideoFormatsListResponse()
        if include_optional:
            return VideoFormatsListResponse(
                kind = '',
                video_formats = [
                    openapi_client.models.video_format.VideoFormat(
                        file_type = 'FLV', 
                        id = 56, 
                        kind = '', 
                        resolution = openapi_client.models.size.Size(
                            height = 56, 
                            iab = True, 
                            id = '', 
                            kind = '', 
                            width = 56, ), 
                        target_bit_rate = 56, )
                    ]
            )
        else:
            return VideoFormatsListResponse(
        )
        """

    def testVideoFormatsListResponse(self):
        """Test VideoFormatsListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
