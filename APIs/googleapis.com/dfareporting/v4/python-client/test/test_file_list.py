# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.file_list import FileList

class TestFileList(unittest.TestCase):
    """FileList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FileList:
        """Test FileList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FileList`
        """
        model = FileList()
        if include_optional:
            return FileList(
                etag = '',
                items = [
                    openapi_client.models.file.File(
                        date_range = openapi_client.models.date_range.DateRange(
                            end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                            kind = '', 
                            relative_date_range = 'TODAY', 
                            start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ), 
                        etag = '', 
                        file_name = '', 
                        format = 'CSV', 
                        id = '', 
                        kind = '', 
                        last_modified_time = '', 
                        report_id = '', 
                        status = 'PROCESSING', 
                        urls = openapi_client.models.file_urls.File_urls(
                            api_url = '', 
                            browser_url = '', ), )
                    ],
                kind = '',
                next_page_token = ''
            )
        else:
            return FileList(
        )
        """

    def testFileList(self):
        """Test FileList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
