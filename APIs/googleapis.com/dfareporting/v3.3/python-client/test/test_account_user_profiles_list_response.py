# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account_user_profiles_list_response import AccountUserProfilesListResponse

class TestAccountUserProfilesListResponse(unittest.TestCase):
    """AccountUserProfilesListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountUserProfilesListResponse:
        """Test AccountUserProfilesListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountUserProfilesListResponse`
        """
        model = AccountUserProfilesListResponse()
        if include_optional:
            return AccountUserProfilesListResponse(
                account_user_profiles = [
                    openapi_client.models.account_user_profile.AccountUserProfile(
                        account_id = '', 
                        active = True, 
                        advertiser_filter = openapi_client.models.object_filter.ObjectFilter(
                            kind = '', 
                            object_ids = [
                                ''
                                ], 
                            status = 'NONE', ), 
                        campaign_filter = openapi_client.models.object_filter.ObjectFilter(
                            kind = '', 
                            status = 'NONE', ), 
                        comments = '', 
                        email = '', 
                        id = '', 
                        kind = '', 
                        locale = '', 
                        name = '', 
                        site_filter = , 
                        subaccount_id = '', 
                        trafficker_type = 'INTERNAL_NON_TRAFFICKER', 
                        user_access_type = 'NORMAL_USER', 
                        user_role_filter = , 
                        user_role_id = '', )
                    ],
                kind = '',
                next_page_token = ''
            )
        else:
            return AccountUserProfilesListResponse(
        )
        """

    def testAccountUserProfilesListResponse(self):
        """Test AccountUserProfilesListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
