# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_rotation import CreativeRotation

class TestCreativeRotation(unittest.TestCase):
    """CreativeRotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeRotation:
        """Test CreativeRotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeRotation`
        """
        model = CreativeRotation()
        if include_optional:
            return CreativeRotation(
                creative_assignments = [
                    openapi_client.models.creative_assignment.CreativeAssignment(
                        active = True, 
                        apply_event_tags = True, 
                        click_through_url = openapi_client.models.click_through_url.ClickThroughUrl(
                            computed_click_through_url = '', 
                            custom_click_through_url = '', 
                            default_landing_page = True, 
                            landing_page_id = '', ), 
                        companion_creative_overrides = [
                            openapi_client.models.companion_click_through_override.CompanionClickThroughOverride(
                                creative_id = '', )
                            ], 
                        creative_group_assignments = [
                            openapi_client.models.creative_group_assignment.CreativeGroupAssignment(
                                creative_group_id = '', 
                                creative_group_number = 'CREATIVE_GROUP_ONE', )
                            ], 
                        creative_id = '', 
                        creative_id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                            dimension_name = '', 
                            etag = '', 
                            id = '', 
                            kind = '', 
                            match_type = 'EXACT', 
                            value = '', ), 
                        end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        rich_media_exit_overrides = [
                            openapi_client.models.rich_media_exit_override.RichMediaExitOverride(
                                enabled = True, 
                                exit_id = '', )
                            ], 
                        sequence = 56, 
                        ssl_compliant = True, 
                        start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        weight = 56, )
                    ],
                creative_optimization_configuration_id = '',
                type = 'CREATIVE_ROTATION_TYPE_SEQUENTIAL',
                weight_calculation_strategy = 'WEIGHT_STRATEGY_EQUAL'
            )
        else:
            return CreativeRotation(
        )
        """

    def testCreativeRotation(self):
        """Test CreativeRotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
