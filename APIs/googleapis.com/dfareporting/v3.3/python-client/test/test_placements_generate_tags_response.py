# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.placements_generate_tags_response import PlacementsGenerateTagsResponse

class TestPlacementsGenerateTagsResponse(unittest.TestCase):
    """PlacementsGenerateTagsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlacementsGenerateTagsResponse:
        """Test PlacementsGenerateTagsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlacementsGenerateTagsResponse`
        """
        model = PlacementsGenerateTagsResponse()
        if include_optional:
            return PlacementsGenerateTagsResponse(
                kind = '',
                placement_tags = [
                    openapi_client.models.placement_tag.PlacementTag(
                        placement_id = '', 
                        tag_datas = [
                            openapi_client.models.tag_data.TagData(
                                ad_id = '', 
                                click_tag = '', 
                                creative_id = '', 
                                format = 'PLACEMENT_TAG_STANDARD', 
                                impression_tag = '', )
                            ], )
                    ]
            )
        else:
            return PlacementsGenerateTagsResponse(
        )
        """

    def testPlacementsGenerateTagsResponse(self):
        """Test PlacementsGenerateTagsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
