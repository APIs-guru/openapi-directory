# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.popup_window_properties import PopupWindowProperties

class TestPopupWindowProperties(unittest.TestCase):
    """PopupWindowProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PopupWindowProperties:
        """Test PopupWindowProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PopupWindowProperties`
        """
        model = PopupWindowProperties()
        if include_optional:
            return PopupWindowProperties(
                dimension = openapi_client.models.size.Size(
                    height = 56, 
                    iab = True, 
                    id = '', 
                    kind = '', 
                    width = 56, ),
                offset = openapi_client.models.offset_position.OffsetPosition(
                    left = 56, 
                    top = 56, ),
                position_type = 'CENTER',
                show_address_bar = True,
                show_menu_bar = True,
                show_scroll_bar = True,
                show_status_bar = True,
                show_tool_bar = True,
                title = ''
            )
        else:
            return PopupWindowProperties(
        )
        """

    def testPopupWindowProperties(self):
        """Test PopupWindowProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
