# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order import Order

class TestOrder(unittest.TestCase):
    """Order unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Order:
        """Test Order
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Order`
        """
        model = Order()
        if include_optional:
            return Order(
                account_id = '',
                advertiser_id = '',
                approver_user_profile_ids = [
                    ''
                    ],
                buyer_invoice_id = '',
                buyer_organization_name = '',
                comments = '',
                contacts = [
                    openapi_client.models.order_contact.OrderContact(
                        contact_info = '', 
                        contact_name = '', 
                        contact_title = '', 
                        contact_type = 'PLANNING_ORDER_CONTACT_BUYER_CONTACT', 
                        signature_user_profile_id = '', )
                    ],
                id = '',
                kind = '',
                last_modified_info = openapi_client.models.last_modified_info.LastModifiedInfo(
                    time = '', ),
                name = '',
                notes = '',
                planning_term_id = '',
                project_id = '',
                seller_order_id = '',
                seller_organization_name = '',
                site_id = [
                    ''
                    ],
                site_names = [
                    ''
                    ],
                subaccount_id = '',
                terms_and_conditions = ''
            )
        else:
            return Order(
        )
        """

    def testOrder(self):
        """Test Order"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
