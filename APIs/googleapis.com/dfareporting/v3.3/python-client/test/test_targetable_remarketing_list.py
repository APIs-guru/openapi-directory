# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.targetable_remarketing_list import TargetableRemarketingList

class TestTargetableRemarketingList(unittest.TestCase):
    """TargetableRemarketingList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TargetableRemarketingList:
        """Test TargetableRemarketingList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TargetableRemarketingList`
        """
        model = TargetableRemarketingList()
        if include_optional:
            return TargetableRemarketingList(
                account_id = '',
                active = True,
                advertiser_id = '',
                advertiser_id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                    dimension_name = '', 
                    etag = '', 
                    id = '', 
                    kind = '', 
                    match_type = 'EXACT', 
                    value = '', ),
                description = '',
                id = '',
                kind = '',
                life_span = '',
                list_size = '',
                list_source = 'REMARKETING_LIST_SOURCE_OTHER',
                name = '',
                subaccount_id = ''
            )
        else:
            return TargetableRemarketingList(
        )
        """

    def testTargetableRemarketingList(self):
        """Test TargetableRemarketingList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
