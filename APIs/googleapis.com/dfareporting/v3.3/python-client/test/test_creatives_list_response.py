# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creatives_list_response import CreativesListResponse

class TestCreativesListResponse(unittest.TestCase):
    """CreativesListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativesListResponse:
        """Test CreativesListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativesListResponse`
        """
        model = CreativesListResponse()
        if include_optional:
            return CreativesListResponse(
                creatives = [
                    openapi_client.models.creative.Creative(
                        account_id = '', 
                        active = True, 
                        ad_parameters = '', 
                        ad_tag_keys = [
                            ''
                            ], 
                        additional_sizes = [
                            openapi_client.models.size.Size(
                                height = 56, 
                                iab = True, 
                                id = '', 
                                kind = '', 
                                width = 56, )
                            ], 
                        advertiser_id = '', 
                        allow_script_access = True, 
                        archived = True, 
                        artwork_type = 'ARTWORK_TYPE_FLASH', 
                        authoring_source = 'CREATIVE_AUTHORING_SOURCE_DCM', 
                        authoring_tool = 'NINJA', 
                        auto_advance_images = True, 
                        background_color = '', 
                        backup_image_click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                            computed_click_through_url = '', 
                            custom_click_through_url = '', 
                            landing_page_id = '', ), 
                        backup_image_features = [
                            'CSS_FONT_FACE'
                            ], 
                        backup_image_reporting_label = '', 
                        backup_image_target_window = openapi_client.models.target_window.TargetWindow(
                            custom_html = '', 
                            target_window_option = 'NEW_WINDOW', ), 
                        click_tags = [
                            openapi_client.models.click_tag.ClickTag(
                                click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                                    computed_click_through_url = '', 
                                    custom_click_through_url = '', 
                                    landing_page_id = '', ), 
                                event_name = '', 
                                name = '', )
                            ], 
                        commercial_id = '', 
                        companion_creatives = [
                            ''
                            ], 
                        compatibility = [
                            'DISPLAY'
                            ], 
                        convert_flash_to_html5 = True, 
                        counter_custom_events = [
                            openapi_client.models.creative_custom_event.CreativeCustomEvent(
                                advertiser_custom_event_id = '', 
                                advertiser_custom_event_name = '', 
                                advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER', 
                                artwork_label = '', 
                                artwork_type = 'ARTWORK_TYPE_FLASH', 
                                exit_click_through_url = , 
                                id = '', 
                                popup_window_properties = openapi_client.models.popup_window_properties.PopupWindowProperties(
                                    dimension = openapi_client.models.size.Size(
                                        height = 56, 
                                        iab = True, 
                                        id = '', 
                                        kind = '', 
                                        width = 56, ), 
                                    offset = openapi_client.models.offset_position.OffsetPosition(
                                        left = 56, 
                                        top = 56, ), 
                                    position_type = 'CENTER', 
                                    show_address_bar = True, 
                                    show_menu_bar = True, 
                                    show_scroll_bar = True, 
                                    show_status_bar = True, 
                                    show_tool_bar = True, 
                                    title = '', ), 
                                target_type = 'TARGET_BLANK', 
                                video_reporting_id = '', )
                            ], 
                        creative_asset_selection = openapi_client.models.creative_asset_selection.CreativeAssetSelection(
                            default_asset_id = '', 
                            rules = [
                                openapi_client.models.rule.Rule(
                                    asset_id = '', 
                                    name = '', 
                                    targeting_template_id = '', )
                                ], ), 
                        creative_assets = [
                            openapi_client.models.creative_asset.CreativeAsset(
                                action_script3 = True, 
                                active = True, 
                                alignment = 'ALIGNMENT_TOP', 
                                artwork_type = 'ARTWORK_TYPE_FLASH', 
                                asset_identifier = openapi_client.models.creative_asset_id.CreativeAssetId(
                                    name = '', 
                                    type = 'IMAGE', ), 
                                audio_bit_rate = 56, 
                                audio_sample_rate = 56, 
                                backup_image_exit = openapi_client.models.creative_custom_event.CreativeCustomEvent(
                                    advertiser_custom_event_id = '', 
                                    advertiser_custom_event_name = '', 
                                    advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER', 
                                    artwork_label = '', 
                                    artwork_type = 'ARTWORK_TYPE_FLASH', 
                                    id = '', 
                                    target_type = 'TARGET_BLANK', 
                                    video_reporting_id = '', ), 
                                bit_rate = 56, 
                                child_asset_type = 'CHILD_ASSET_TYPE_FLASH', 
                                collapsed_size = , 
                                companion_creative_ids = [
                                    ''
                                    ], 
                                custom_start_time_value = 56, 
                                detected_features = [
                                    'CSS_FONT_FACE'
                                    ], 
                                display_type = 'ASSET_DISPLAY_TYPE_INPAGE', 
                                duration = 56, 
                                duration_type = 'ASSET_DURATION_TYPE_AUTO', 
                                expanded_dimension = , 
                                file_size = '', 
                                flash_version = 56, 
                                frame_rate = 1.337, 
                                hide_flash_objects = True, 
                                hide_selection_boxes = True, 
                                horizontally_locked = True, 
                                id = '', 
                                id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                                    dimension_name = '', 
                                    etag = '', 
                                    id = '', 
                                    kind = '', 
                                    match_type = 'EXACT', 
                                    value = '', ), 
                                media_duration = 1.337, 
                                mime_type = '', 
                                orientation = 'LANDSCAPE', 
                                original_backup = True, 
                                polite_load = True, 
                                position = openapi_client.models.offset_position.OffsetPosition(
                                    left = 56, 
                                    top = 56, ), 
                                position_left_unit = 'OFFSET_UNIT_PIXEL', 
                                position_top_unit = 'OFFSET_UNIT_PIXEL', 
                                progressive_serving_url = '', 
                                pushdown = True, 
                                pushdown_duration = 1.337, 
                                role = 'PRIMARY', 
                                size = , 
                                ssl_compliant = True, 
                                start_time_type = 'ASSET_START_TIME_TYPE_NONE', 
                                streaming_serving_url = '', 
                                transparency = True, 
                                vertically_locked = True, 
                                window_mode = 'OPAQUE', 
                                z_index = 56, 
                                zip_filename = '', 
                                zip_filesize = '', )
                            ], 
                        creative_field_assignments = [
                            openapi_client.models.creative_field_assignment.CreativeFieldAssignment(
                                creative_field_id = '', 
                                creative_field_value_id = '', )
                            ], 
                        custom_key_values = [
                            ''
                            ], 
                        dynamic_asset_selection = True, 
                        exit_custom_events = [
                            
                            ], 
                        fs_command = openapi_client.models.fs_command.FsCommand(
                            left = 56, 
                            position_option = 'CENTERED', 
                            top = 56, 
                            window_height = 56, 
                            window_width = 56, ), 
                        html_code = '', 
                        html_code_locked = True, 
                        id = '', 
                        id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                            dimension_name = '', 
                            etag = '', 
                            id = '', 
                            kind = '', 
                            match_type = 'EXACT', 
                            value = '', ), 
                        kind = '', 
                        last_modified_info = openapi_client.models.last_modified_info.LastModifiedInfo(
                            time = '', ), 
                        latest_trafficked_creative_id = '', 
                        media_description = '', 
                        media_duration = 1.337, 
                        name = '', 
                        override_css = '', 
                        progress_offset = openapi_client.models.video_offset.VideoOffset(
                            offset_percentage = 56, 
                            offset_seconds = 56, ), 
                        redirect_url = '', 
                        rendering_id = '', 
                        rendering_id_dimension_value = , 
                        required_flash_plugin_version = '', 
                        required_flash_version = 56, 
                        size = , 
                        skip_offset = openapi_client.models.video_offset.VideoOffset(
                            offset_percentage = 56, 
                            offset_seconds = 56, ), 
                        skippable = True, 
                        ssl_compliant = True, 
                        ssl_override = True, 
                        studio_advertiser_id = '', 
                        studio_creative_id = '', 
                        studio_trafficked_creative_id = '', 
                        subaccount_id = '', 
                        third_party_backup_image_impressions_url = '', 
                        third_party_rich_media_impressions_url = '', 
                        third_party_urls = [
                            openapi_client.models.third_party_tracking_url.ThirdPartyTrackingUrl(
                                third_party_url_type = 'IMPRESSION', 
                                url = '', )
                            ], 
                        timer_custom_events = [
                            
                            ], 
                        total_file_size = '', 
                        type = 'IMAGE', 
                        universal_ad_id = openapi_client.models.universal_ad_id.UniversalAdId(
                            registry = 'OTHER', 
                            value = '', ), 
                        version = 56, )
                    ],
                kind = '',
                next_page_token = ''
            )
        else:
            return CreativesListResponse(
        )
        """

    def testCreativesListResponse(self):
        """Test CreativesListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
