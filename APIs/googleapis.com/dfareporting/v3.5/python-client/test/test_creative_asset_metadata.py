# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_asset_metadata import CreativeAssetMetadata

class TestCreativeAssetMetadata(unittest.TestCase):
    """CreativeAssetMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeAssetMetadata:
        """Test CreativeAssetMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeAssetMetadata`
        """
        model = CreativeAssetMetadata()
        if include_optional:
            return CreativeAssetMetadata(
                asset_identifier = openapi_client.models.creative_asset_id.CreativeAssetId(
                    name = '', 
                    type = 'IMAGE', ),
                click_tags = [
                    openapi_client.models.click_tag.ClickTag(
                        click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                            computed_click_through_url = '', 
                            custom_click_through_url = '', 
                            landing_page_id = '', ), 
                        event_name = '', 
                        name = '', )
                    ],
                counter_custom_events = [
                    openapi_client.models.creative_custom_event.CreativeCustomEvent(
                        advertiser_custom_event_id = '', 
                        advertiser_custom_event_name = '', 
                        advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER', 
                        artwork_label = '', 
                        artwork_type = 'ARTWORK_TYPE_FLASH', 
                        exit_click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                            computed_click_through_url = '', 
                            custom_click_through_url = '', 
                            landing_page_id = '', ), 
                        id = '', 
                        popup_window_properties = openapi_client.models.popup_window_properties.PopupWindowProperties(
                            dimension = openapi_client.models.size.Size(
                                height = 56, 
                                iab = True, 
                                id = '', 
                                kind = '', 
                                width = 56, ), 
                            offset = openapi_client.models.offset_position.OffsetPosition(
                                left = 56, 
                                top = 56, ), 
                            position_type = 'CENTER', 
                            show_address_bar = True, 
                            show_menu_bar = True, 
                            show_scroll_bar = True, 
                            show_status_bar = True, 
                            show_tool_bar = True, 
                            title = '', ), 
                        target_type = 'TARGET_BLANK', 
                        video_reporting_id = '', )
                    ],
                detected_features = [
                    'CSS_FONT_FACE'
                    ],
                exit_custom_events = [
                    openapi_client.models.creative_custom_event.CreativeCustomEvent(
                        advertiser_custom_event_id = '', 
                        advertiser_custom_event_name = '', 
                        advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER', 
                        artwork_label = '', 
                        artwork_type = 'ARTWORK_TYPE_FLASH', 
                        exit_click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                            computed_click_through_url = '', 
                            custom_click_through_url = '', 
                            landing_page_id = '', ), 
                        id = '', 
                        popup_window_properties = openapi_client.models.popup_window_properties.PopupWindowProperties(
                            dimension = openapi_client.models.size.Size(
                                height = 56, 
                                iab = True, 
                                id = '', 
                                kind = '', 
                                width = 56, ), 
                            offset = openapi_client.models.offset_position.OffsetPosition(
                                left = 56, 
                                top = 56, ), 
                            position_type = 'CENTER', 
                            show_address_bar = True, 
                            show_menu_bar = True, 
                            show_scroll_bar = True, 
                            show_status_bar = True, 
                            show_tool_bar = True, 
                            title = '', ), 
                        target_type = 'TARGET_BLANK', 
                        video_reporting_id = '', )
                    ],
                id = '',
                id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                    dimension_name = '', 
                    etag = '', 
                    id = '', 
                    kind = '', 
                    match_type = 'EXACT', 
                    value = '', ),
                kind = '',
                media_request_info = openapi_client.models.media_request_info.MediaRequestInfo(
                    current_bytes = '', 
                    custom_data = '', 
                    diff_object_version = '', 
                    final_status = 56, 
                    notification_type = 'START', 
                    request_id = '', 
                    request_received_params_serving_info = 'YQ==', 
                    total_bytes = '', 
                    total_bytes_is_estimated = True, ),
                media_response_info = openapi_client.models.media_response_info.MediaResponseInfo(
                    custom_data = '', 
                    data_storage_transform = 'YQ==', 
                    dynamic_drop_target = 'YQ==', 
                    dynamic_dropzone = '', 
                    request_class = 'UNKNOWN_REQUEST_CLASS', 
                    scotty_agent_user_id = '', 
                    scotty_customer_log = 'YQ==', 
                    traffic_class_field = 'BE1', 
                    verify_hash_from_header = True, ),
                rich_media = True,
                timer_custom_events = [
                    openapi_client.models.creative_custom_event.CreativeCustomEvent(
                        advertiser_custom_event_id = '', 
                        advertiser_custom_event_name = '', 
                        advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER', 
                        artwork_label = '', 
                        artwork_type = 'ARTWORK_TYPE_FLASH', 
                        exit_click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                            computed_click_through_url = '', 
                            custom_click_through_url = '', 
                            landing_page_id = '', ), 
                        id = '', 
                        popup_window_properties = openapi_client.models.popup_window_properties.PopupWindowProperties(
                            dimension = openapi_client.models.size.Size(
                                height = 56, 
                                iab = True, 
                                id = '', 
                                kind = '', 
                                width = 56, ), 
                            offset = openapi_client.models.offset_position.OffsetPosition(
                                left = 56, 
                                top = 56, ), 
                            position_type = 'CENTER', 
                            show_address_bar = True, 
                            show_menu_bar = True, 
                            show_scroll_bar = True, 
                            show_status_bar = True, 
                            show_tool_bar = True, 
                            title = '', ), 
                        target_type = 'TARGET_BLANK', 
                        video_reporting_id = '', )
                    ],
                warned_validation_rules = [
                    'CLICK_TAG_NON_TOP_LEVEL'
                    ]
            )
        else:
            return CreativeAssetMetadata(
        )
        """

    def testCreativeAssetMetadata(self):
        """Test CreativeAssetMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
