# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pricing import Pricing

class TestPricing(unittest.TestCase):
    """Pricing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Pricing:
        """Test Pricing
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Pricing`
        """
        model = Pricing()
        if include_optional:
            return Pricing(
                cap_cost_type = 'PLANNING_PLACEMENT_CAP_COST_TYPE_NONE',
                end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(),
                flights = [
                    openapi_client.models.flight.Flight(
                        end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        rate_or_cost = '', 
                        start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                        units = '', )
                    ],
                group_type = 'PLANNING_PLACEMENT_GROUP_TYPE_PACKAGE',
                pricing_type = 'PLANNING_PLACEMENT_PRICING_TYPE_IMPRESSIONS',
                start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
            )
        else:
            return Pricing(
        )
        """

    def testPricing(self):
        """Test Pricing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
