# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_asset import CreativeAsset

class TestCreativeAsset(unittest.TestCase):
    """CreativeAsset unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeAsset:
        """Test CreativeAsset
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeAsset`
        """
        model = CreativeAsset()
        if include_optional:
            return CreativeAsset(
                action_script3 = True,
                active = True,
                additional_sizes = [
                    openapi_client.models.size.Size(
                        height = 56, 
                        iab = True, 
                        id = '', 
                        kind = '', 
                        width = 56, )
                    ],
                alignment = 'ALIGNMENT_TOP',
                artwork_type = 'ARTWORK_TYPE_FLASH',
                asset_identifier = openapi_client.models.creative_asset_id.CreativeAssetId(
                    name = '', 
                    type = 'IMAGE', ),
                audio_bit_rate = 56,
                audio_sample_rate = 56,
                backup_image_exit = openapi_client.models.creative_custom_event.CreativeCustomEvent(
                    advertiser_custom_event_id = '', 
                    advertiser_custom_event_name = '', 
                    advertiser_custom_event_type = 'ADVERTISER_EVENT_TIMER', 
                    artwork_label = '', 
                    artwork_type = 'ARTWORK_TYPE_FLASH', 
                    exit_click_through_url = openapi_client.models.creative_click_through_url.CreativeClickThroughUrl(
                        computed_click_through_url = '', 
                        custom_click_through_url = '', 
                        landing_page_id = '', ), 
                    id = '', 
                    popup_window_properties = openapi_client.models.popup_window_properties.PopupWindowProperties(
                        dimension = openapi_client.models.size.Size(
                            height = 56, 
                            iab = True, 
                            id = '', 
                            kind = '', 
                            width = 56, ), 
                        offset = openapi_client.models.offset_position.OffsetPosition(
                            left = 56, 
                            top = 56, ), 
                        position_type = 'CENTER', 
                        show_address_bar = True, 
                        show_menu_bar = True, 
                        show_scroll_bar = True, 
                        show_status_bar = True, 
                        show_tool_bar = True, 
                        title = '', ), 
                    target_type = 'TARGET_BLANK', 
                    video_reporting_id = '', ),
                bit_rate = 56,
                child_asset_type = 'CHILD_ASSET_TYPE_FLASH',
                collapsed_size = openapi_client.models.size.Size(
                    height = 56, 
                    iab = True, 
                    id = '', 
                    kind = '', 
                    width = 56, ),
                companion_creative_ids = [
                    ''
                    ],
                custom_start_time_value = 56,
                detected_features = [
                    'CSS_FONT_FACE'
                    ],
                display_type = 'ASSET_DISPLAY_TYPE_INPAGE',
                duration = 56,
                duration_type = 'ASSET_DURATION_TYPE_AUTO',
                expanded_dimension = openapi_client.models.size.Size(
                    height = 56, 
                    iab = True, 
                    id = '', 
                    kind = '', 
                    width = 56, ),
                file_size = '',
                flash_version = 56,
                frame_rate = 1.337,
                hide_flash_objects = True,
                hide_selection_boxes = True,
                horizontally_locked = True,
                id = '',
                id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                    dimension_name = '', 
                    etag = '', 
                    id = '', 
                    kind = '', 
                    match_type = 'EXACT', 
                    value = '', ),
                media_duration = 1.337,
                mime_type = '',
                offset = openapi_client.models.offset_position.OffsetPosition(
                    left = 56, 
                    top = 56, ),
                orientation = 'LANDSCAPE',
                original_backup = True,
                polite_load = True,
                position = openapi_client.models.offset_position.OffsetPosition(
                    left = 56, 
                    top = 56, ),
                position_left_unit = 'OFFSET_UNIT_PIXEL',
                position_top_unit = 'OFFSET_UNIT_PIXEL',
                progressive_serving_url = '',
                pushdown = True,
                pushdown_duration = 1.337,
                role = 'PRIMARY',
                size = openapi_client.models.size.Size(
                    height = 56, 
                    iab = True, 
                    id = '', 
                    kind = '', 
                    width = 56, ),
                ssl_compliant = True,
                start_time_type = 'ASSET_START_TIME_TYPE_NONE',
                streaming_serving_url = '',
                transparency = True,
                vertically_locked = True,
                window_mode = 'OPAQUE',
                z_index = 56,
                zip_filename = '',
                zip_filesize = ''
            )
        else:
            return CreativeAsset(
        )
        """

    def testCreativeAsset(self):
        """Test CreativeAsset"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
