# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.geo_targeting import GeoTargeting

class TestGeoTargeting(unittest.TestCase):
    """GeoTargeting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GeoTargeting:
        """Test GeoTargeting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GeoTargeting`
        """
        model = GeoTargeting()
        if include_optional:
            return GeoTargeting(
                cities = [
                    openapi_client.models.city.City(
                        country_code = '', 
                        country_dart_id = '', 
                        dart_id = '', 
                        kind = '', 
                        metro_code = '', 
                        metro_dma_id = '', 
                        name = '', 
                        region_code = '', 
                        region_dart_id = '', )
                    ],
                countries = [
                    openapi_client.models.country.Country(
                        country_code = '', 
                        dart_id = '', 
                        kind = '', 
                        name = '', 
                        ssl_enabled = True, )
                    ],
                exclude_countries = True,
                metros = [
                    openapi_client.models.metro.Metro(
                        country_code = '', 
                        country_dart_id = '', 
                        dart_id = '', 
                        dma_id = '', 
                        kind = '', 
                        metro_code = '', 
                        name = '', )
                    ],
                postal_codes = [
                    openapi_client.models.postal_code.PostalCode(
                        code = '', 
                        country_code = '', 
                        country_dart_id = '', 
                        id = '', 
                        kind = '', )
                    ],
                regions = [
                    openapi_client.models.region.Region(
                        country_code = '', 
                        country_dart_id = '', 
                        dart_id = '', 
                        kind = '', 
                        name = '', 
                        region_code = '', )
                    ]
            )
        else:
            return GeoTargeting(
        )
        """

    def testGeoTargeting(self):
        """Test GeoTargeting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
