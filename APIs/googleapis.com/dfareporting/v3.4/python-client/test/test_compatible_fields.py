# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.compatible_fields import CompatibleFields

class TestCompatibleFields(unittest.TestCase):
    """CompatibleFields unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CompatibleFields:
        """Test CompatibleFields
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CompatibleFields`
        """
        model = CompatibleFields()
        if include_optional:
            return CompatibleFields(
                cross_dimension_reach_report_compatible_fields = openapi_client.models.cross_dimension_reach_report_compatible_fields.CrossDimensionReachReportCompatibleFields(
                    breakdown = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    dimension_filters = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    overlap_metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], ),
                floodlight_report_compatible_fields = openapi_client.models.floodlight_report_compatible_fields.FloodlightReportCompatibleFields(
                    dimension_filters = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    dimensions = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], ),
                kind = '',
                path_attribution_report_compatible_fields = openapi_client.models.path_report_compatible_fields.PathReportCompatibleFields(
                    channel_groupings = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    dimensions = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    path_filters = [
                        
                        ], ),
                path_report_compatible_fields = openapi_client.models.path_report_compatible_fields.PathReportCompatibleFields(
                    channel_groupings = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    dimensions = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    path_filters = [
                        
                        ], ),
                path_to_conversion_report_compatible_fields = openapi_client.models.path_to_conversion_report_compatible_fields.PathToConversionReportCompatibleFields(
                    conversion_dimensions = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    custom_floodlight_variables = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    per_interaction_dimensions = [
                        
                        ], ),
                reach_report_compatible_fields = openapi_client.models.reach_report_compatible_fields.ReachReportCompatibleFields(
                    dimension_filters = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    dimensions = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    pivoted_activity_metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    reach_by_frequency_metrics = [
                        
                        ], ),
                report_compatible_fields = openapi_client.models.report_compatible_fields.ReportCompatibleFields(
                    dimension_filters = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    dimensions = [
                        openapi_client.models.dimension.Dimension(
                            kind = '', 
                            name = '', )
                        ], 
                    kind = '', 
                    metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], 
                    pivoted_activity_metrics = [
                        openapi_client.models.metric.Metric(
                            kind = '', 
                            name = '', )
                        ], )
            )
        else:
            return CompatibleFields(
        )
        """

    def testCompatibleFields(self):
        """Test CompatibleFields"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
