# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.site import Site

class TestSite(unittest.TestCase):
    """Site unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Site:
        """Test Site
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Site`
        """
        model = Site()
        if include_optional:
            return Site(
                account_id = '',
                approved = True,
                directory_site_id = '',
                directory_site_id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                    dimension_name = '', 
                    etag = '', 
                    id = '', 
                    kind = '', 
                    match_type = 'EXACT', 
                    value = '', ),
                id = '',
                id_dimension_value = openapi_client.models.dimension_value.DimensionValue(
                    dimension_name = '', 
                    etag = '', 
                    id = '', 
                    kind = '', 
                    match_type = 'EXACT', 
                    value = '', ),
                key_name = '',
                kind = '',
                name = '',
                site_contacts = [
                    openapi_client.models.site_contact.SiteContact(
                        address = '', 
                        contact_type = 'SALES_PERSON', 
                        email = '', 
                        first_name = '', 
                        id = '', 
                        last_name = '', 
                        phone = '', 
                        title = '', )
                    ],
                site_settings = openapi_client.models.site_settings.SiteSettings(
                    active_view_opt_out = True, 
                    ad_blocking_opt_out = True, 
                    disable_new_cookie = True, 
                    tag_setting = openapi_client.models.tag_setting.TagSetting(
                        additional_key_values = '', 
                        include_click_through_urls = True, 
                        include_click_tracking = True, 
                        keyword_option = 'PLACEHOLDER_WITH_LIST_OF_KEYWORDS', ), 
                    video_active_view_opt_out_template = True, 
                    vpaid_adapter_choice_template = 'DEFAULT', ),
                subaccount_id = '',
                video_settings = openapi_client.models.site_video_settings.SiteVideoSettings(
                    companion_settings = openapi_client.models.site_companion_setting.SiteCompanionSetting(
                        companions_disabled = True, 
                        enabled_sizes = [
                            openapi_client.models.size.Size(
                                height = 56, 
                                iab = True, 
                                id = '', 
                                kind = '', 
                                width = 56, )
                            ], 
                        image_only = True, 
                        kind = '', ), 
                    kind = '', 
                    oba_enabled = True, 
                    oba_settings = openapi_client.models.oba_icon.ObaIcon(
                        icon_click_through_url = '', 
                        icon_click_tracking_url = '', 
                        icon_view_tracking_url = '', 
                        program = '', 
                        resource_url = '', 
                        size = openapi_client.models.size.Size(
                            height = 56, 
                            iab = True, 
                            id = '', 
                            kind = '', 
                            width = 56, ), 
                        x_position = '', 
                        y_position = '', ), 
                    orientation = 'ANY', 
                    skippable_settings = openapi_client.models.site_skippable_setting.SiteSkippableSetting(
                        kind = '', 
                        progress_offset = openapi_client.models.video_offset.VideoOffset(
                            offset_percentage = 56, 
                            offset_seconds = 56, ), 
                        skip_offset = openapi_client.models.video_offset.VideoOffset(
                            offset_percentage = 56, 
                            offset_seconds = 56, ), 
                        skippable = True, ), 
                    transcode_settings = openapi_client.models.site_transcode_setting.SiteTranscodeSetting(
                        enabled_video_formats = [
                            56
                            ], 
                        kind = '', ), )
            )
        else:
            return Site(
        )
        """

    def testSite(self):
        """Test Site"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
