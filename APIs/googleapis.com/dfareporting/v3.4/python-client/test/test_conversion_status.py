# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.conversion_status import ConversionStatus

class TestConversionStatus(unittest.TestCase):
    """ConversionStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConversionStatus:
        """Test ConversionStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConversionStatus`
        """
        model = ConversionStatus()
        if include_optional:
            return ConversionStatus(
                conversion = openapi_client.models.conversion.Conversion(
                    child_directed_treatment = True, 
                    custom_variables = [
                        openapi_client.models.custom_floodlight_variable.CustomFloodlightVariable(
                            kind = '', 
                            type = 'U1', 
                            value = '', )
                        ], 
                    dclid = '', 
                    encrypted_user_id = '', 
                    encrypted_user_id_candidates = [
                        ''
                        ], 
                    floodlight_activity_id = '', 
                    floodlight_configuration_id = '', 
                    gclid = '', 
                    kind = '', 
                    limit_ad_tracking = True, 
                    match_id = '', 
                    mobile_device_id = '', 
                    non_personalized_ad = True, 
                    ordinal = '', 
                    quantity = '', 
                    timestamp_micros = '', 
                    treatment_for_underage = True, 
                    value = 1.337, ),
                errors = [
                    openapi_client.models.conversion_error.ConversionError(
                        code = 'INVALID_ARGUMENT', 
                        kind = '', 
                        message = '', )
                    ],
                kind = ''
            )
        else:
            return ConversionStatus(
        )
        """

    def testConversionStatus(self):
        """Test ConversionStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
