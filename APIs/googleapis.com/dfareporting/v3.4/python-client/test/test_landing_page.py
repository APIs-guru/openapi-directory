# coding: utf-8

"""
    Campaign Manager 360 API

    Build applications to efficiently manage large or complex trafficking, reporting, and attribution workflows for Campaign Manager 360.

    The version of the OpenAPI document: v3.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.landing_page import LandingPage

class TestLandingPage(unittest.TestCase):
    """LandingPage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LandingPage:
        """Test LandingPage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LandingPage`
        """
        model = LandingPage()
        if include_optional:
            return LandingPage(
                advertiser_id = '',
                archived = True,
                deep_links = [
                    openapi_client.models.deep_link.DeepLink(
                        app_url = '', 
                        fallback_url = '', 
                        kind = '', 
                        mobile_app = openapi_client.models.mobile_app.MobileApp(
                            directory = 'UNKNOWN', 
                            id = '', 
                            kind = '', 
                            publisher_name = '', 
                            title = '', ), 
                        remarketing_list_ids = [
                            ''
                            ], )
                    ],
                id = '',
                kind = '',
                name = '',
                url = ''
            )
        else:
            return LandingPage(
        )
        """

    def testLandingPage(self):
        """Test LandingPage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
