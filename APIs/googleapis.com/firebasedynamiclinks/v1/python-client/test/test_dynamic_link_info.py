# coding: utf-8

"""
    Firebase Dynamic Links API

    Programmatically creates and manages Firebase Dynamic Links.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dynamic_link_info import DynamicLinkInfo

class TestDynamicLinkInfo(unittest.TestCase):
    """DynamicLinkInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DynamicLinkInfo:
        """Test DynamicLinkInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DynamicLinkInfo`
        """
        model = DynamicLinkInfo()
        if include_optional:
            return DynamicLinkInfo(
                analytics_info = openapi_client.models.analytics_info.AnalyticsInfo(
                    google_play_analytics = openapi_client.models.google_play_analytics.GooglePlayAnalytics(
                        gclid = '', 
                        utm_campaign = '', 
                        utm_content = '', 
                        utm_medium = '', 
                        utm_source = '', 
                        utm_term = '', ), 
                    itunes_connect_analytics = openapi_client.models.i_tunes_connect_analytics.ITunesConnectAnalytics(
                        at = '', 
                        ct = '', 
                        mt = '', 
                        pt = '', ), ),
                android_info = openapi_client.models.android_info.AndroidInfo(
                    android_fallback_link = '', 
                    android_link = '', 
                    android_min_package_version_code = '', 
                    android_package_name = '', ),
                desktop_info = openapi_client.models.desktop_info.DesktopInfo(
                    desktop_fallback_link = '', ),
                domain_uri_prefix = '',
                dynamic_link_domain = '',
                ios_info = openapi_client.models.ios_info.IosInfo(
                    ios_app_store_id = '', 
                    ios_bundle_id = '', 
                    ios_custom_scheme = '', 
                    ios_fallback_link = '', 
                    ios_ipad_bundle_id = '', 
                    ios_ipad_fallback_link = '', 
                    ios_minimum_version = '', ),
                link = '',
                navigation_info = openapi_client.models.navigation_info.NavigationInfo(
                    enable_forced_redirect = True, ),
                social_meta_tag_info = openapi_client.models.social_meta_tag_info.SocialMetaTagInfo(
                    social_description = '', 
                    social_image_link = '', 
                    social_title = '', )
            )
        else:
            return DynamicLinkInfo(
        )
        """

    def testDynamicLinkInfo(self):
        """Test DynamicLinkInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
