# coding: utf-8

"""
    Apps Script API

    Manages and executes Google Apps Script projects. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.entry_point import EntryPoint

class TestEntryPoint(unittest.TestCase):
    """EntryPoint unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EntryPoint:
        """Test EntryPoint
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EntryPoint`
        """
        model = EntryPoint()
        if include_optional:
            return EntryPoint(
                add_on = openapi_client.models.google_apps_script_type_add_on_entry_point.GoogleAppsScriptTypeAddOnEntryPoint(
                    add_on_type = 'UNKNOWN_ADDON_TYPE', 
                    description = '', 
                    help_url = '', 
                    post_install_tip_url = '', 
                    report_issue_url = '', 
                    title = '', ),
                entry_point_type = 'ENTRY_POINT_TYPE_UNSPECIFIED',
                execution_api = openapi_client.models.google_apps_script_type_execution_api_entry_point.GoogleAppsScriptTypeExecutionApiEntryPoint(
                    entry_point_config = openapi_client.models.google_apps_script_type_execution_api_config.GoogleAppsScriptTypeExecutionApiConfig(
                        access = 'UNKNOWN_ACCESS', ), ),
                web_app = openapi_client.models.google_apps_script_type_web_app_entry_point.GoogleAppsScriptTypeWebAppEntryPoint(
                    entry_point_config = openapi_client.models.google_apps_script_type_web_app_config.GoogleAppsScriptTypeWebAppConfig(
                        access = 'UNKNOWN_ACCESS', 
                        execute_as = 'UNKNOWN_EXECUTE_AS', ), 
                    url = '', )
            )
        else:
            return EntryPoint(
        )
        """

    def testEntryPoint(self):
        """Test EntryPoint"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
