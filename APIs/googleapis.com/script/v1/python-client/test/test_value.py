# coding: utf-8

"""
    Apps Script API

    Manages and executes Google Apps Script projects. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.value import Value

class TestValue(unittest.TestCase):
    """Value unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Value:
        """Test Value
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Value`
        """
        model = Value()
        if include_optional:
            return Value(
                bool_value = True,
                bytes_value = 'YQ==',
                date_value = '',
                list_value = openapi_client.models.list_value.ListValue(
                    values = [
                        openapi_client.models.value.Value(
                            bool_value = True, 
                            bytes_value = 'YQ==', 
                            date_value = '', 
                            null_value = 'NULL_VALUE', 
                            number_value = 1.337, 
                            proto_value = {
                                'key' : null
                                }, 
                            string_value = '', 
                            struct_value = openapi_client.models.struct.Struct(
                                fields = {
                                    'key' : openapi_client.models.value.Value(
                                        bool_value = True, 
                                        bytes_value = 'YQ==', 
                                        date_value = '', 
                                        null_value = 'NULL_VALUE', 
                                        number_value = 1.337, 
                                        string_value = '', )
                                    }, ), )
                        ], ),
                null_value = 'NULL_VALUE',
                number_value = 1.337,
                proto_value = {
                    'key' : null
                    },
                string_value = '',
                struct_value = openapi_client.models.struct.Struct(
                    fields = {
                        'key' : openapi_client.models.value.Value(
                            bool_value = True, 
                            bytes_value = 'YQ==', 
                            date_value = '', 
                            list_value = openapi_client.models.list_value.ListValue(
                                values = [
                                    openapi_client.models.value.Value(
                                        bool_value = True, 
                                        bytes_value = 'YQ==', 
                                        date_value = '', 
                                        null_value = 'NULL_VALUE', 
                                        number_value = 1.337, 
                                        proto_value = {
                                            'key' : null
                                            }, 
                                        string_value = '', )
                                    ], ), 
                            null_value = 'NULL_VALUE', 
                            number_value = 1.337, 
                            proto_value = {
                                'key' : null
                                }, 
                            string_value = '', )
                        }, )
            )
        else:
            return Value(
        )
        """

    def testValue(self):
        """Test Value"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
