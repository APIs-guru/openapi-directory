# coding: utf-8

"""
    Google Play EMM API

    Manages the deployment of apps to Android Enterprise devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.administrator_web_token_spec import AdministratorWebTokenSpec

class TestAdministratorWebTokenSpec(unittest.TestCase):
    """AdministratorWebTokenSpec unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdministratorWebTokenSpec:
        """Test AdministratorWebTokenSpec
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdministratorWebTokenSpec`
        """
        model = AdministratorWebTokenSpec()
        if include_optional:
            return AdministratorWebTokenSpec(
                managed_configurations = openapi_client.models.administrator_web_token_spec_managed_configurations.AdministratorWebTokenSpecManagedConfigurations(
                    enabled = True, ),
                parent = '',
                permission = [
                    'unknown'
                    ],
                play_search = openapi_client.models.administrator_web_token_spec_play_search.AdministratorWebTokenSpecPlaySearch(
                    approve_apps = True, 
                    enabled = True, ),
                private_apps = openapi_client.models.administrator_web_token_spec_private_apps.AdministratorWebTokenSpecPrivateApps(
                    enabled = True, ),
                store_builder = openapi_client.models.administrator_web_token_spec_store_builder.AdministratorWebTokenSpecStoreBuilder(
                    enabled = True, ),
                web_apps = openapi_client.models.administrator_web_token_spec_web_apps.AdministratorWebTokenSpecWebApps(
                    enabled = True, ),
                zero_touch = openapi_client.models.administrator_web_token_spec_zero_touch.AdministratorWebTokenSpecZeroTouch(
                    enabled = True, )
            )
        else:
            return AdministratorWebTokenSpec(
        )
        """

    def testAdministratorWebTokenSpec(self):
        """Test AdministratorWebTokenSpec"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
