# coding: utf-8

"""
    Google Play EMM API

    Manages the deployment of apps to Android Enterprise devices.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.product import Product

class TestProduct(unittest.TestCase):
    """Product unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Product:
        """Test Product
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Product`
        """
        model = Product()
        if include_optional:
            return Product(
                app_restrictions_schema = openapi_client.models.app_restrictions_schema.AppRestrictionsSchema(
                    kind = '', 
                    restrictions = [
                        openapi_client.models.app_restrictions_schema_restriction.AppRestrictionsSchemaRestriction(
                            default_value = openapi_client.models.app_restrictions_schema_restriction_restriction_value.AppRestrictionsSchemaRestrictionRestrictionValue(
                                type = 'bool', 
                                value_bool = True, 
                                value_integer = 56, 
                                value_multiselect = [
                                    ''
                                    ], 
                                value_string = '', ), 
                            description = '', 
                            entry = [
                                ''
                                ], 
                            entry_value = [
                                ''
                                ], 
                            key = '', 
                            nested_restriction = [
                                openapi_client.models.app_restrictions_schema_restriction.AppRestrictionsSchemaRestriction(
                                    description = '', 
                                    key = '', 
                                    restriction_type = 'bool', 
                                    title = '', )
                                ], 
                            restriction_type = 'bool', 
                            title = '', )
                        ], ),
                app_tracks = [
                    openapi_client.models.track_info.TrackInfo(
                        track_alias = '', 
                        track_id = '', )
                    ],
                app_version = [
                    openapi_client.models.app_version.AppVersion(
                        is_production = True, 
                        target_sdk_version = 56, 
                        track = 'appTrackUnspecified', 
                        track_id = [
                            ''
                            ], 
                        version_code = 56, 
                        version_string = '', )
                    ],
                author_name = '',
                available_countries = [
                    ''
                    ],
                available_tracks = [
                    'appTrackUnspecified'
                    ],
                category = '',
                content_rating = 'ratingUnknown',
                description = '',
                details_url = '',
                distribution_channel = 'publicGoogleHosted',
                features = [
                    'featureUnknown'
                    ],
                full_description = '',
                icon_url = '',
                last_updated_timestamp_millis = '',
                min_android_sdk_version = 56,
                permissions = [
                    openapi_client.models.product_permission.ProductPermission(
                        permission_id = '', 
                        state = 'required', )
                    ],
                product_id = '',
                product_pricing = 'unknown',
                recent_changes = '',
                requires_container_app = True,
                screenshot_urls = [
                    ''
                    ],
                signing_certificate = openapi_client.models.product_signing_certificate.ProductSigningCertificate(
                    certificate_hash_sha1 = '', 
                    certificate_hash_sha256 = '', ),
                small_icon_url = '',
                title = '',
                work_details_url = ''
            )
        else:
            return Product(
        )
        """

    def testProduct(self):
        """Test Product"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
