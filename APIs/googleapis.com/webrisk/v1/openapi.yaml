openapi: 3.0.0
servers:
  - url: https://webrisk.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Web Risk API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: openapi
      url: https://webrisk.googleapis.com/$discovery/rest?version=v1
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: webrisk
externalDocs:
  url: https://cloud.google.com/web-risk/
tags:
  - name: hashes
  - name: projects
  - name: threatLists
  - name: uris
paths:
  /v1/hashes:search:
    get:
      description: Gets the full hashes that match the requested hash prefix. This is used after a hash prefix is looked up in a threatList and there is a match. The client side threatList only holds partial hashes so the client must query this method to determine if there is a full hash match of a threat.
      operationId: webrisk.hashes.search
      parameters:
        - description: A hash prefix, consisting of the most significant 4-32 bytes of a SHA256 hash. For JSON requests, this field is base64-encoded. Note that if this parameter is provided by a URI, it must be encoded using the web safe base64 variant (RFC 4648).
          in: query
          name: hashPrefix
          schema:
            type: string
        - description: Required. The ThreatLists to search in. Multiple ThreatLists may be specified.
          explode: true
          in: query
          name: threatTypes
          schema:
            items:
              enum:
                - THREAT_TYPE_UNSPECIFIED
                - MALWARE
                - SOCIAL_ENGINEERING
                - UNWANTED_SOFTWARE
                - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudWebriskV1SearchHashesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - hashes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/threatLists:computeDiff:
    get:
      description: Gets the most recent threat list diffs. These diffs should be applied to a local database of hashes to keep it up-to-date. If the local database is empty or excessively out-of-date, a complete snapshot of the database will be returned. This Method only updates a single ThreatList at a time. To update multiple ThreatList databases, this method needs to be called once for each list.
      operationId: webrisk.threatLists.computeDiff
      parameters:
        - description: Sets the maximum number of entries that the client is willing to have in the local database. This should be a power of 2 between 2**10 and 2**20. If zero, no database size limit is set.
          in: query
          name: constraints.maxDatabaseEntries
          schema:
            type: integer
        - description: The maximum size in number of entries. The diff will not contain more entries than this value. This should be a power of 2 between 2**10 and 2**20. If zero, no diff size limit is set.
          in: query
          name: constraints.maxDiffEntries
          schema:
            type: integer
        - description: The compression types supported by the client.
          explode: true
          in: query
          name: constraints.supportedCompressions
          schema:
            items:
              enum:
                - COMPRESSION_TYPE_UNSPECIFIED
                - RAW
                - RICE
              type: string
            type: array
          style: form
        - description: Required. The threat list to update. Only a single ThreatType should be specified per request. If you want to handle multiple ThreatTypes, you must make one request per ThreatType.
          in: query
          name: threatType
          schema:
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
            type: string
        - description: The current version token of the client for the requested list (the client version that was received from the last successful diff). If the client does not have a version token (this is the first time calling ComputeThreatListDiff), this may be left empty and a full database snapshot will be returned.
          in: query
          name: versionToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudWebriskV1ComputeThreatListDiffResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - threatLists
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/uris:search:
    get:
      description: This method is used to check whether a URI is on a given threatList. Multiple threatLists may be searched in a single query. The response will list all requested threatLists the URI was found to match. If the URI is not found on any of the requested ThreatList an empty response will be returned.
      operationId: webrisk.uris.search
      parameters:
        - description: Required. The ThreatLists to search in. Multiple ThreatLists may be specified.
          explode: true
          in: query
          name: threatTypes
          schema:
            items:
              enum:
                - THREAT_TYPE_UNSPECIFIED
                - MALWARE
                - SOCIAL_ENGINEERING
                - UNWANTED_SOFTWARE
                - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
              type: string
            type: array
          style: form
        - description: Required. The URI to be checked for matches.
          in: query
          name: uri
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudWebriskV1SearchUrisResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - uris
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{name}":
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: webrisk.projects.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: webrisk.projects.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{name}/operations":
    get:
      description: "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id."
      operationId: webrisk.projects.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningListOperationsResponse"
          description: Successful response
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{name}:cancel":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: webrisk.projects.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleLongrunningCancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      tags:
        - projects
  "/v1/{parent}/submissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Submission of a URI suspected of containing phishing content to be reviewed. If the result verifies the existence of malicious phishing content, the site will be added to the [Google's Social Engineering lists](https://support.google.com/webmasters/answer/6350487/) in order to protect users that could get exposed to this threat in the future. Only allowlisted projects can use this method during Early Access. Please reach out to Sales or your customer engineer to obtain access.
      operationId: webrisk.projects.submissions.create
      parameters:
        - description: Required. The name of the project that is making the submission. This string is in the format "projects/{project_number}".
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudWebriskV1Submission"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudWebriskV1Submission"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1/{parent}/uris:submit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submits a URI suspected of containing malicious content to be reviewed. Returns a google.longrunning.Operation which, once the review is complete, is updated with its result. You can use the [Pub/Sub API] (https://cloud.google.com/pubsub) to receive notifications for the returned Operation. If the result verifies the existence of malicious content, the site will be added to the [Google's Social Engineering lists] (https://support.google.com/webmasters/answer/6350487/) in order to protect users that could get exposed to this threat in the future. Only allowlisted projects can use this method during Early Access. Please reach out to Sales or your customer engineer to obtain access.
      operationId: webrisk.projects.uris.submit
      parameters:
        - description: Required. The name of the project that is making the submission. This string is in the format "projects/{project_number}".
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudWebriskV1SubmitUriRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleLongrunningOperation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    GoogleCloudWebriskV1ComputeThreatListDiffResponse:
      properties:
        additions:
          $ref: "#/components/schemas/GoogleCloudWebriskV1ThreatEntryAdditions"
          description: A set of entries to add to a local threat type's list.
        checksum:
          $ref: "#/components/schemas/GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum"
          description: The expected SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database after applying the provided diff. If the client state doesn't match the expected state, the client must discard this diff and retry later.
        newVersionToken:
          description: The new opaque client version token. This should be retained by the client and passed into the next call of ComputeThreatListDiff as 'version_token'. A separate version token should be stored and used for each threatList.
          format: byte
          type: string
        recommendedNextDiff:
          description: The soonest the client should wait before issuing any diff request. Querying sooner is unlikely to produce a meaningful diff. Waiting longer is acceptable considering the use case. If this field is not set clients may update as soon as they want.
          format: google-datetime
          type: string
        removals:
          $ref: "#/components/schemas/GoogleCloudWebriskV1ThreatEntryRemovals"
          description: A set of entries to remove from a local threat type's list. This field may be empty.
        responseType:
          description: The type of response. This may indicate that an action must be taken by the client when the response is received.
          enum:
            - RESPONSE_TYPE_UNSPECIFIED
            - DIFF
            - RESET
          type: string
      type: object
    GoogleCloudWebriskV1ComputeThreatListDiffResponseChecksum:
      description: The expected state of a client's local database.
      properties:
        sha256:
          description: The SHA256 hash of the client state; that is, of the sorted list of all hashes present in the database.
          format: byte
          type: string
      type: object
    GoogleCloudWebriskV1RawHashes:
      description: The uncompressed threat entries in hash format. Hashes can be anywhere from 4 to 32 bytes in size. A large majority are 4 bytes, but some hashes are lengthened if they collide with the hash of a popular URI. Used for sending ThreatEntryAdditons to clients that do not support compression, or when sending non-4-byte hashes to clients that do support compression.
      properties:
        prefixSize:
          description: The number of bytes for each prefix encoded below. This field can be anywhere from 4 (shortest prefix) to 32 (full SHA256 hash). In practice this is almost always 4, except in exceptional circumstances.
          format: int32
          type: integer
        rawHashes:
          description: The hashes, in binary format, concatenated into one long string. Hashes are sorted in lexicographic order. For JSON API users, hashes are base64-encoded.
          format: byte
          type: string
      type: object
    GoogleCloudWebriskV1RawIndices:
      description: A set of raw indices to remove from a local list.
      properties:
        indices:
          description: The indices to remove from a lexicographically-sorted local list.
          items:
            format: int32
            type: integer
          type: array
      type: object
    GoogleCloudWebriskV1RiceDeltaEncoding:
      description: The Rice-Golomb encoded data. Used for sending compressed 4-byte hashes or compressed removal indices.
      properties:
        encodedData:
          description: The encoded deltas that are encoded using the Golomb-Rice coder.
          format: byte
          type: string
        entryCount:
          description: The number of entries that are delta encoded in the encoded data. If only a single integer was encoded, this will be zero and the single value will be stored in `first_value`.
          format: int32
          type: integer
        firstValue:
          description: The offset of the first entry in the encoded data, or, if only a single integer was encoded, that single integer's value. If the field is empty or missing, assume zero.
          format: int64
          type: string
        riceParameter:
          description: The Golomb-Rice parameter, which is a number between 2 and 28. This field is missing (that is, zero) if `num_entries` is zero.
          format: int32
          type: integer
      type: object
    GoogleCloudWebriskV1SearchHashesResponse:
      properties:
        negativeExpireTime:
          description: For requested entities that did not match the threat list, how long to cache the response until.
          format: google-datetime
          type: string
        threats:
          description: The full hashes that matched the requested prefixes. The hash will be populated in the key.
          items:
            $ref: "#/components/schemas/GoogleCloudWebriskV1SearchHashesResponseThreatHash"
          type: array
      type: object
    GoogleCloudWebriskV1SearchHashesResponseThreatHash:
      description: Contains threat information on a matching hash.
      properties:
        expireTime:
          description: The cache lifetime for the returned match. Clients must not cache this response past this timestamp to avoid false positives.
          format: google-datetime
          type: string
        hash:
          description: A 32 byte SHA256 hash. This field is in binary format. For JSON requests, hashes are base64-encoded.
          format: byte
          type: string
        threatTypes:
          description: The ThreatList this threat belongs to. This must contain at least one entry.
          items:
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
            type: string
          type: array
      type: object
    GoogleCloudWebriskV1SearchUrisResponse:
      properties:
        threat:
          $ref: "#/components/schemas/GoogleCloudWebriskV1SearchUrisResponseThreatUri"
          description: The threat list matches. This might be empty if the URI is on no list.
      type: object
    GoogleCloudWebriskV1SearchUrisResponseThreatUri:
      description: Contains threat information on a matching uri.
      properties:
        expireTime:
          description: The cache lifetime for the returned match. Clients must not cache this response past this timestamp to avoid false positives.
          format: google-datetime
          type: string
        threatTypes:
          description: The ThreatList this threat belongs to.
          items:
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
            type: string
          type: array
      type: object
    GoogleCloudWebriskV1Submission:
      description: Wraps a URI that might be displaying malicious content.
      properties:
        threatTypes:
          description: ThreatTypes found to be associated with the submitted URI after reviewing it. This might be empty if the URI was not added to any list.
          items:
            enum:
              - THREAT_TYPE_UNSPECIFIED
              - MALWARE
              - SOCIAL_ENGINEERING
              - UNWANTED_SOFTWARE
              - SOCIAL_ENGINEERING_EXTENDED_COVERAGE
            type: string
          type: array
        uri:
          description: Required. The URI that is being reported for malicious content to be analyzed.
          type: string
      type: object
    GoogleCloudWebriskV1SubmitUriMetadata:
      description: Metadata for the Submit URI long-running operation.
      properties:
        createTime:
          description: Creation time of the operation.
          format: google-datetime
          type: string
        state:
          description: The state of the operation.
          enum:
            - STATE_UNSPECIFIED
            - RUNNING
            - SUCCEEDED
            - CANCELLED
            - FAILED
            - CLOSED
          type: string
        updateTime:
          description: Latest update time of the operation.
          format: google-datetime
          type: string
      type: object
    GoogleCloudWebriskV1SubmitUriRequest:
      description: Request to send a potentially malicious URI to WebRisk.
      properties:
        submission:
          $ref: "#/components/schemas/GoogleCloudWebriskV1Submission"
          description: Required. The submission that contains the URI to be scanned.
      type: object
    GoogleCloudWebriskV1ThreatEntryAdditions:
      description: Contains the set of entries to add to a local database. May contain a combination of compressed and raw data in a single response.
      properties:
        rawHashes:
          description: The raw SHA256-formatted entries. Repeated to allow returning sets of hashes with different prefix sizes.
          items:
            $ref: "#/components/schemas/GoogleCloudWebriskV1RawHashes"
          type: array
        riceHashes:
          $ref: "#/components/schemas/GoogleCloudWebriskV1RiceDeltaEncoding"
          description: The encoded 4-byte prefixes of SHA256-formatted entries, using a Golomb-Rice encoding. The hashes are converted to uint32, sorted in ascending order, then delta encoded and stored as encoded_data.
      type: object
    GoogleCloudWebriskV1ThreatEntryRemovals:
      description: Contains the set of entries to remove from a local database.
      properties:
        rawIndices:
          $ref: "#/components/schemas/GoogleCloudWebriskV1RawIndices"
          description: The raw removal indices for a local list.
        riceIndices:
          $ref: "#/components/schemas/GoogleCloudWebriskV1RiceDeltaEncoding"
          description: The encoded local, lexicographically-sorted list indices, using a Golomb-Rice encoding. Used for sending compressed removal indices. The removal indices (uint32) are sorted in ascending order, then delta encoded and stored as encoded_data.
      type: object
    GoogleLongrunningCancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    GoogleLongrunningListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/GoogleLongrunningOperation"
          type: array
      type: object
    GoogleLongrunningOperation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/GoogleRpcStatus"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Contains a `SubmitUriMetadata` object.
          type: object
        name:
          description: Matches the `/v1/{project-name}/operations/{operation-id}` pattern.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleRpcStatus:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
