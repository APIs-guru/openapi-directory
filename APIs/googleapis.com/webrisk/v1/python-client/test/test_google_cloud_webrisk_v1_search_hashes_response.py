# coding: utf-8

"""
    Web Risk API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_webrisk_v1_search_hashes_response import GoogleCloudWebriskV1SearchHashesResponse

class TestGoogleCloudWebriskV1SearchHashesResponse(unittest.TestCase):
    """GoogleCloudWebriskV1SearchHashesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudWebriskV1SearchHashesResponse:
        """Test GoogleCloudWebriskV1SearchHashesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudWebriskV1SearchHashesResponse`
        """
        model = GoogleCloudWebriskV1SearchHashesResponse()
        if include_optional:
            return GoogleCloudWebriskV1SearchHashesResponse(
                negative_expire_time = '',
                threats = [
                    openapi_client.models.google_cloud_webrisk_v1_search_hashes_response_threat_hash.GoogleCloudWebriskV1SearchHashesResponseThreatHash(
                        expire_time = '', 
                        hash = 'YQ==', 
                        threat_types = [
                            'THREAT_TYPE_UNSPECIFIED'
                            ], )
                    ]
            )
        else:
            return GoogleCloudWebriskV1SearchHashesResponse(
        )
        """

    def testGoogleCloudWebriskV1SearchHashesResponse(self):
        """Test GoogleCloudWebriskV1SearchHashesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
