# coding: utf-8

"""
    Web Risk API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_webrisk_v1_threat_entry_removals import GoogleCloudWebriskV1ThreatEntryRemovals

class TestGoogleCloudWebriskV1ThreatEntryRemovals(unittest.TestCase):
    """GoogleCloudWebriskV1ThreatEntryRemovals unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudWebriskV1ThreatEntryRemovals:
        """Test GoogleCloudWebriskV1ThreatEntryRemovals
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudWebriskV1ThreatEntryRemovals`
        """
        model = GoogleCloudWebriskV1ThreatEntryRemovals()
        if include_optional:
            return GoogleCloudWebriskV1ThreatEntryRemovals(
                raw_indices = openapi_client.models.google_cloud_webrisk_v1_raw_indices.GoogleCloudWebriskV1RawIndices(
                    indices = [
                        56
                        ], ),
                rice_indices = openapi_client.models.google_cloud_webrisk_v1_rice_delta_encoding.GoogleCloudWebriskV1RiceDeltaEncoding(
                    encoded_data = 'YQ==', 
                    entry_count = 56, 
                    first_value = '', 
                    rice_parameter = 56, )
            )
        else:
            return GoogleCloudWebriskV1ThreatEntryRemovals(
        )
        """

    def testGoogleCloudWebriskV1ThreatEntryRemovals(self):
        """Test GoogleCloudWebriskV1ThreatEntryRemovals"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
