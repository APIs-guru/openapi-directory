# coding: utf-8

"""
    Cloud IoT API

    Registers and manages IoT (Internet of Things) devices that connect to the Google Cloud Platform. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.registry_credential import RegistryCredential

class TestRegistryCredential(unittest.TestCase):
    """RegistryCredential unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RegistryCredential:
        """Test RegistryCredential
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RegistryCredential`
        """
        model = RegistryCredential()
        if include_optional:
            return RegistryCredential(
                public_key_certificate = openapi_client.models.public_key_certificate.PublicKeyCertificate(
                    certificate = '', 
                    format = 'UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT', 
                    x509_details = openapi_client.models.x509_certificate_details.X509CertificateDetails(
                        expiry_time = '', 
                        issuer = '', 
                        public_key_type = '', 
                        signature_algorithm = '', 
                        start_time = '', 
                        subject = '', ), )
            )
        else:
            return RegistryCredential(
        )
        """

    def testRegistryCredential(self):
        """Test RegistryCredential"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
