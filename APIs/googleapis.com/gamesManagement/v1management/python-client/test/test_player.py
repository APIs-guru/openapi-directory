# coding: utf-8

"""
    Google Play Game Management

    The Google Play Game Management API allows developers to manage resources from the Google Play Game service.

    The version of the OpenAPI document: v1management
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.player import Player

class TestPlayer(unittest.TestCase):
    """Player unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Player:
        """Test Player
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Player`
        """
        model = Player()
        if include_optional:
            return Player(
                avatar_image_url = '',
                banner_url_landscape = '',
                banner_url_portrait = '',
                display_name = '',
                experience_info = openapi_client.models.games_player_experience_info_resource.GamesPlayerExperienceInfoResource(
                    current_experience_points = '', 
                    current_level = openapi_client.models.games_player_level_resource.GamesPlayerLevelResource(
                        level = 56, 
                        max_experience_points = '', 
                        min_experience_points = '', ), 
                    last_level_up_timestamp_millis = '', 
                    next_level = openapi_client.models.games_player_level_resource.GamesPlayerLevelResource(
                        level = 56, 
                        max_experience_points = '', 
                        min_experience_points = '', ), ),
                kind = '',
                name = openapi_client.models.player_name.Player_name(
                    family_name = '', 
                    given_name = '', ),
                original_player_id = '',
                player_id = '',
                profile_settings = openapi_client.models.profile_settings.ProfileSettings(
                    kind = '', 
                    profile_visible = True, ),
                title = ''
            )
        else:
            return Player(
        )
        """

    def testPlayer(self):
        """Test Player"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
