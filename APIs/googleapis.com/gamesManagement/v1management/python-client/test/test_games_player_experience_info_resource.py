# coding: utf-8

"""
    Google Play Game Management

    The Google Play Game Management API allows developers to manage resources from the Google Play Game service.

    The version of the OpenAPI document: v1management
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.games_player_experience_info_resource import GamesPlayerExperienceInfoResource

class TestGamesPlayerExperienceInfoResource(unittest.TestCase):
    """GamesPlayerExperienceInfoResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GamesPlayerExperienceInfoResource:
        """Test GamesPlayerExperienceInfoResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GamesPlayerExperienceInfoResource`
        """
        model = GamesPlayerExperienceInfoResource()
        if include_optional:
            return GamesPlayerExperienceInfoResource(
                current_experience_points = '',
                current_level = openapi_client.models.games_player_level_resource.GamesPlayerLevelResource(
                    level = 56, 
                    max_experience_points = '', 
                    min_experience_points = '', ),
                last_level_up_timestamp_millis = '',
                next_level = openapi_client.models.games_player_level_resource.GamesPlayerLevelResource(
                    level = 56, 
                    max_experience_points = '', 
                    min_experience_points = '', )
            )
        else:
            return GamesPlayerExperienceInfoResource(
        )
        """

    def testGamesPlayerExperienceInfoResource(self):
        """Test GamesPlayerExperienceInfoResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
