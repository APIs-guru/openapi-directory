# coding: utf-8

"""
    Google Drive API

    The Google Drive API allows clients to access resources from Google Drive.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.comment import Comment

class TestComment(unittest.TestCase):
    """Comment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Comment:
        """Test Comment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Comment`
        """
        model = Comment()
        if include_optional:
            return Comment(
                anchor = '',
                author = openapi_client.models.user.User(
                    display_name = '', 
                    email_address = '', 
                    kind = 'drive#user', 
                    me = True, 
                    permission_id = '', 
                    photo_link = '', ),
                content = '',
                created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                html_content = '',
                id = '',
                kind = 'drive#comment',
                modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                quoted_file_content = openapi_client.models.comment_quoted_file_content.Comment_quotedFileContent(
                    mime_type = '', 
                    value = '', ),
                replies = [
                    openapi_client.models.reply.Reply(
                        action = '', 
                        author = openapi_client.models.user.User(
                            display_name = '', 
                            email_address = '', 
                            kind = 'drive#user', 
                            me = True, 
                            permission_id = '', 
                            photo_link = '', ), 
                        content = '', 
                        created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleted = True, 
                        html_content = '', 
                        id = '', 
                        kind = 'drive#reply', 
                        modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                resolved = True
            )
        else:
            return Comment(
        )
        """

    def testComment(self):
        """Test Comment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
