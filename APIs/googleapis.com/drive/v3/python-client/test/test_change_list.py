# coding: utf-8

"""
    Google Drive API

    The Google Drive API allows clients to access resources from Google Drive.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.change_list import ChangeList

class TestChangeList(unittest.TestCase):
    """ChangeList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ChangeList:
        """Test ChangeList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ChangeList`
        """
        model = ChangeList()
        if include_optional:
            return ChangeList(
                changes = [
                    openapi_client.models.change.Change(
                        change_type = '', 
                        drive = openapi_client.models.drive.Drive(
                            background_image_file = openapi_client.models.drive_background_image_file.Drive_backgroundImageFile(
                                id = '', 
                                width = 1.337, 
                                x_coordinate = 1.337, 
                                y_coordinate = 1.337, ), 
                            background_image_link = '', 
                            capabilities = openapi_client.models.drive_capabilities.Drive_capabilities(
                                can_add_children = True, 
                                can_change_copy_requires_writer_permission_restriction = True, 
                                can_change_domain_users_only_restriction = True, 
                                can_change_drive_background = True, 
                                can_change_drive_members_only_restriction = True, 
                                can_change_sharing_folders_requires_organizer_permission_restriction = True, 
                                can_comment = True, 
                                can_copy = True, 
                                can_delete_children = True, 
                                can_delete_drive = True, 
                                can_download = True, 
                                can_edit = True, 
                                can_list_children = True, 
                                can_manage_members = True, 
                                can_read_revisions = True, 
                                can_rename = True, 
                                can_rename_drive = True, 
                                can_reset_drive_restrictions = True, 
                                can_share = True, 
                                can_trash_children = True, ), 
                            color_rgb = '', 
                            created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            hidden = True, 
                            id = '', 
                            kind = 'drive#drive', 
                            name = '', 
                            org_unit_id = '', 
                            restrictions = openapi_client.models.drive_restrictions.Drive_restrictions(
                                admin_managed_restrictions = True, 
                                copy_requires_writer_permission = True, 
                                domain_users_only = True, 
                                drive_members_only = True, 
                                sharing_folders_requires_organizer_permission = True, ), 
                            theme_id = '', ), 
                        drive_id = '', 
                        file = openapi_client.models.file.File(
                            app_properties = {
                                'key' : ''
                                }, 
                            content_hints = openapi_client.models.file_content_hints.File_contentHints(
                                indexable_text = '', 
                                thumbnail = openapi_client.models.file_content_hints_thumbnail.File_contentHints_thumbnail(
                                    image = 'YQ==', 
                                    mime_type = '', ), ), 
                            content_restrictions = [
                                openapi_client.models.content_restriction.ContentRestriction(
                                    owner_restricted = True, 
                                    read_only = True, 
                                    reason = '', 
                                    restricting_user = openapi_client.models.user.User(
                                        display_name = '', 
                                        email_address = '', 
                                        kind = 'drive#user', 
                                        me = True, 
                                        permission_id = '', 
                                        photo_link = '', ), 
                                    restriction_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    system_restricted = True, 
                                    type = '', )
                                ], 
                            copy_requires_writer_permission = True, 
                            created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            description = '', 
                            drive_id = '', 
                            explicitly_trashed = True, 
                            export_links = {
                                'key' : ''
                                }, 
                            file_extension = '', 
                            folder_color_rgb = '', 
                            full_file_extension = '', 
                            has_augmented_permissions = True, 
                            has_thumbnail = True, 
                            head_revision_id = '', 
                            icon_link = '', 
                            id = '', 
                            image_media_metadata = openapi_client.models.file_image_media_metadata.File_imageMediaMetadata(
                                aperture = 1.337, 
                                camera_make = '', 
                                camera_model = '', 
                                color_space = '', 
                                exposure_bias = 1.337, 
                                exposure_mode = '', 
                                exposure_time = 1.337, 
                                flash_used = True, 
                                focal_length = 1.337, 
                                height = 56, 
                                iso_speed = 56, 
                                lens = '', 
                                location = openapi_client.models.file_image_media_metadata_location.File_imageMediaMetadata_location(
                                    altitude = 1.337, 
                                    latitude = 1.337, 
                                    longitude = 1.337, ), 
                                max_aperture_value = 1.337, 
                                metering_mode = '', 
                                rotation = 56, 
                                sensor = '', 
                                subject_distance = 56, 
                                time = '', 
                                white_balance = '', 
                                width = 56, ), 
                            is_app_authorized = True, 
                            kind = 'drive#file', 
                            label_info = openapi_client.models.file_label_info.File_labelInfo(
                                labels = [
                                    openapi_client.models.label.Label(
                                        fields = {
                                            'key' : openapi_client.models.label_field.LabelField(
                                                date_string = [
                                                    datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
                                                    ], 
                                                id = '', 
                                                integer = [
                                                    ''
                                                    ], 
                                                kind = '', 
                                                selection = [
                                                    ''
                                                    ], 
                                                text = [
                                                    ''
                                                    ], 
                                                user = [
                                                    openapi_client.models.user.User(
                                                        display_name = '', 
                                                        email_address = '', 
                                                        kind = 'drive#user', 
                                                        me = True, 
                                                        permission_id = '', 
                                                        photo_link = '', )
                                                    ], 
                                                value_type = '', )
                                            }, 
                                        id = '', 
                                        kind = '', 
                                        revision_id = '', )
                                    ], ), 
                            last_modifying_user = , 
                            link_share_metadata = openapi_client.models.file_link_share_metadata.File_linkShareMetadata(
                                security_update_eligible = True, 
                                security_update_enabled = True, ), 
                            md5_checksum = '', 
                            mime_type = '', 
                            modified_by_me = True, 
                            modified_by_me_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            modified_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            name = '', 
                            original_filename = '', 
                            owned_by_me = True, 
                            owners = [
                                
                                ], 
                            parents = [
                                ''
                                ], 
                            permission_ids = [
                                ''
                                ], 
                            permissions = [
                                openapi_client.models.permission.Permission(
                                    allow_file_discovery = True, 
                                    deleted = True, 
                                    display_name = '', 
                                    domain = '', 
                                    email_address = '', 
                                    expiration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                    id = '', 
                                    kind = 'drive#permission', 
                                    pending_owner = True, 
                                    permission_details = [
                                        openapi_client.models.permission_permission_details_inner.Permission_permissionDetails_inner(
                                            inherited = True, 
                                            inherited_from = '', 
                                            permission_type = '', 
                                            role = '', )
                                        ], 
                                    photo_link = '', 
                                    role = '', 
                                    team_drive_permission_details = [
                                        openapi_client.models.permission_team_drive_permission_details_inner.Permission_teamDrivePermissionDetails_inner(
                                            inherited = True, 
                                            inherited_from = '', 
                                            role = '', 
                                            team_drive_permission_type = '', )
                                        ], 
                                    type = '', 
                                    view = '', )
                                ], 
                            properties = {
                                'key' : ''
                                }, 
                            quota_bytes_used = '', 
                            resource_key = '', 
                            sha1_checksum = '', 
                            sha256_checksum = '', 
                            shared = True, 
                            shared_with_me_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            sharing_user = , 
                            shortcut_details = openapi_client.models.file_shortcut_details.File_shortcutDetails(
                                target_id = '', 
                                target_mime_type = '', 
                                target_resource_key = '', ), 
                            size = '', 
                            spaces = [
                                ''
                                ], 
                            starred = True, 
                            team_drive_id = '', 
                            thumbnail_link = '', 
                            thumbnail_version = '', 
                            trashed = True, 
                            trashed_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            trashing_user = , 
                            version = '', 
                            video_media_metadata = openapi_client.models.file_video_media_metadata.File_videoMediaMetadata(
                                duration_millis = '', 
                                height = 56, 
                                width = 56, ), 
                            viewed_by_me = True, 
                            viewed_by_me_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            viewers_can_copy_content = True, 
                            web_content_link = '', 
                            web_view_link = '', 
                            writers_can_share = True, ), 
                        file_id = '', 
                        kind = 'drive#change', 
                        removed = True, 
                        team_drive = openapi_client.models.team_drive.TeamDrive(
                            background_image_link = '', 
                            color_rgb = '', 
                            created_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                            id = '', 
                            kind = 'drive#teamDrive', 
                            name = '', 
                            org_unit_id = '', 
                            theme_id = '', ), 
                        team_drive_id = '', 
                        time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        type = '', )
                    ],
                kind = 'drive#changeList',
                new_start_page_token = '',
                next_page_token = ''
            )
        else:
            return ChangeList(
        )
        """

    def testChangeList(self):
        """Test ChangeList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
