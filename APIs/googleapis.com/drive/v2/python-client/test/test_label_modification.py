# coding: utf-8

"""
    Google Drive API

    The Google Drive API allows clients to access resources from Google Drive.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.label_modification import LabelModification

class TestLabelModification(unittest.TestCase):
    """LabelModification unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LabelModification:
        """Test LabelModification
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LabelModification`
        """
        model = LabelModification()
        if include_optional:
            return LabelModification(
                field_modifications = [
                    openapi_client.models.label_field_modification.LabelFieldModification(
                        field_id = '', 
                        kind = 'drive#labelFieldModification', 
                        set_date_values = [
                            datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date()
                            ], 
                        set_integer_values = [
                            ''
                            ], 
                        set_selection_values = [
                            ''
                            ], 
                        set_text_values = [
                            ''
                            ], 
                        set_user_values = [
                            ''
                            ], 
                        unset_values = True, )
                    ],
                kind = 'drive#labelModification',
                label_id = '',
                remove_label = True
            )
        else:
            return LabelModification(
        )
        """

    def testLabelModification(self):
        """Test LabelModification"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
