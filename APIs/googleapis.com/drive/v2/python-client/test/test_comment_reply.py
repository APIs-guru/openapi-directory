# coding: utf-8

"""
    Google Drive API

    The Google Drive API allows clients to access resources from Google Drive.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.comment_reply import CommentReply

class TestCommentReply(unittest.TestCase):
    """CommentReply unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommentReply:
        """Test CommentReply
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommentReply`
        """
        model = CommentReply()
        if include_optional:
            return CommentReply(
                author = openapi_client.models.user.User(
                    display_name = '', 
                    email_address = '', 
                    is_authenticated_user = True, 
                    kind = 'drive#user', 
                    permission_id = '', 
                    picture = openapi_client.models.user_picture.User_picture(
                        url = '', ), ),
                content = '',
                created_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                deleted = True,
                html_content = '',
                kind = 'drive#commentReply',
                modified_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                reply_id = '',
                verb = ''
            )
        else:
            return CommentReply(
        )
        """

    def testCommentReply(self):
        """Test CommentReply"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
