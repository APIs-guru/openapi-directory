# coding: utf-8

"""
    Ad Exchange Buyer API

    Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.

    The version of the OpenAPI document: v1.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative import Creative

class TestCreative(unittest.TestCase):
    """Creative unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Creative:
        """Test Creative
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Creative`
        """
        model = Creative()
        if include_optional:
            return Creative(
                html_snippet = '',
                account_id = 56,
                advertiser_id = [
                    ''
                    ],
                advertiser_name = '',
                agency_id = '',
                api_upload_timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                attribute = [
                    56
                    ],
                buyer_creative_id = '',
                click_through_url = [
                    ''
                    ],
                corrections = [
                    openapi_client.models.creative_corrections_inner.Creative_corrections_inner(
                        details = [
                            ''
                            ], 
                        reason = '', )
                    ],
                disapproval_reasons = [
                    openapi_client.models.creative_disapproval_reasons_inner.Creative_disapprovalReasons_inner(
                        details = [
                            ''
                            ], 
                        reason = '', )
                    ],
                filtering_reasons = openapi_client.models.creative_filtering_reasons.Creative_filteringReasons(
                    date = '', 
                    reasons = [
                        openapi_client.models.creative_filtering_reasons_reasons_inner.Creative_filteringReasons_reasons_inner(
                            filtering_count = '', 
                            filtering_status = 56, )
                        ], ),
                height = 56,
                impression_tracking_url = [
                    ''
                    ],
                kind = 'adexchangebuyer#creative',
                product_categories = [
                    56
                    ],
                restricted_categories = [
                    56
                    ],
                sensitive_categories = [
                    56
                    ],
                status = '',
                vendor_type = [
                    56
                    ],
                version = 56,
                video_url = '',
                width = 56
            )
        else:
            return Creative(
        )
        """

    def testCreative(self):
        """Test Creative"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
