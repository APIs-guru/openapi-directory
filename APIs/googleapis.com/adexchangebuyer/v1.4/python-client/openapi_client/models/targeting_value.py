# coding: utf-8

"""
    Ad Exchange Buyer API

    Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.

    The version of the OpenAPI document: v1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.targeting_value_creative_size import TargetingValueCreativeSize
from openapi_client.models.targeting_value_day_part_targeting import TargetingValueDayPartTargeting
from openapi_client.models.targeting_value_demog_age_criteria import TargetingValueDemogAgeCriteria
from openapi_client.models.targeting_value_demog_gender_criteria import TargetingValueDemogGenderCriteria
from openapi_client.models.targeting_value_request_platform_targeting import TargetingValueRequestPlatformTargeting
from typing import Optional, Set
from typing_extensions import Self

class TargetingValue(BaseModel):
    """
    TargetingValue
    """ # noqa: E501
    creative_size_value: Optional[TargetingValueCreativeSize] = Field(default=None, alias="creativeSizeValue")
    day_part_targeting_value: Optional[TargetingValueDayPartTargeting] = Field(default=None, alias="dayPartTargetingValue")
    demog_age_criteria_value: Optional[TargetingValueDemogAgeCriteria] = Field(default=None, alias="demogAgeCriteriaValue")
    demog_gender_criteria_value: Optional[TargetingValueDemogGenderCriteria] = Field(default=None, alias="demogGenderCriteriaValue")
    long_value: Optional[StrictStr] = Field(default=None, description="The long value to exclude/include.", alias="longValue")
    request_platform_targeting_value: Optional[TargetingValueRequestPlatformTargeting] = Field(default=None, alias="requestPlatformTargetingValue")
    string_value: Optional[StrictStr] = Field(default=None, description="The string value to exclude/include.", alias="stringValue")
    __properties: ClassVar[List[str]] = ["creativeSizeValue", "dayPartTargetingValue", "demogAgeCriteriaValue", "demogGenderCriteriaValue", "longValue", "requestPlatformTargetingValue", "stringValue"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of TargetingValue from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of creative_size_value
        if self.creative_size_value:
            _dict['creativeSizeValue'] = self.creative_size_value.to_dict()
        # override the default output from pydantic by calling `to_dict()` of day_part_targeting_value
        if self.day_part_targeting_value:
            _dict['dayPartTargetingValue'] = self.day_part_targeting_value.to_dict()
        # override the default output from pydantic by calling `to_dict()` of demog_age_criteria_value
        if self.demog_age_criteria_value:
            _dict['demogAgeCriteriaValue'] = self.demog_age_criteria_value.to_dict()
        # override the default output from pydantic by calling `to_dict()` of demog_gender_criteria_value
        if self.demog_gender_criteria_value:
            _dict['demogGenderCriteriaValue'] = self.demog_gender_criteria_value.to_dict()
        # override the default output from pydantic by calling `to_dict()` of request_platform_targeting_value
        if self.request_platform_targeting_value:
            _dict['requestPlatformTargetingValue'] = self.request_platform_targeting_value.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of TargetingValue from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "creativeSizeValue": TargetingValueCreativeSize.from_dict(obj["creativeSizeValue"]) if obj.get("creativeSizeValue") is not None else None,
            "dayPartTargetingValue": TargetingValueDayPartTargeting.from_dict(obj["dayPartTargetingValue"]) if obj.get("dayPartTargetingValue") is not None else None,
            "demogAgeCriteriaValue": TargetingValueDemogAgeCriteria.from_dict(obj["demogAgeCriteriaValue"]) if obj.get("demogAgeCriteriaValue") is not None else None,
            "demogGenderCriteriaValue": TargetingValueDemogGenderCriteria.from_dict(obj["demogGenderCriteriaValue"]) if obj.get("demogGenderCriteriaValue") is not None else None,
            "longValue": obj.get("longValue"),
            "requestPlatformTargetingValue": TargetingValueRequestPlatformTargeting.from_dict(obj["requestPlatformTargetingValue"]) if obj.get("requestPlatformTargetingValue") is not None else None,
            "stringValue": obj.get("stringValue")
        })
        return _obj


