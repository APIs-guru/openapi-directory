# coding: utf-8

"""
    Ad Exchange Buyer API

    Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.

    The version of the OpenAPI document: v1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.publisher_provided_forecast import PublisherProvidedForecast

class TestPublisherProvidedForecast(unittest.TestCase):
    """PublisherProvidedForecast unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PublisherProvidedForecast:
        """Test PublisherProvidedForecast
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PublisherProvidedForecast`
        """
        model = PublisherProvidedForecast()
        if include_optional:
            return PublisherProvidedForecast(
                dimensions = [
                    openapi_client.models.dimension.Dimension(
                        dimension_type = '', 
                        dimension_values = [
                            openapi_client.models.dimension_dimension_value.DimensionDimensionValue(
                                id = 56, 
                                name = '', 
                                percentage = 56, )
                            ], )
                    ],
                weekly_impressions = '',
                weekly_uniques = ''
            )
        else:
            return PublisherProvidedForecast(
        )
        """

    def testPublisherProvidedForecast(self):
        """Test PublisherProvidedForecast"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
