# coding: utf-8

"""
    Ad Exchange Buyer API

    Accesses your bidding-account information, submits creatives for validation, finds available direct deals, and retrieves performance reports.

    The version of the OpenAPI document: v1.4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.creative_native_ad import CreativeNativeAd

class TestCreativeNativeAd(unittest.TestCase):
    """CreativeNativeAd unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreativeNativeAd:
        """Test CreativeNativeAd
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreativeNativeAd`
        """
        model = CreativeNativeAd()
        if include_optional:
            return CreativeNativeAd(
                advertiser = '',
                app_icon = openapi_client.models.creative_native_ad_app_icon.Creative_nativeAd_appIcon(
                    height = 56, 
                    url = '', 
                    width = 56, ),
                body = '',
                call_to_action = '',
                click_link_url = '',
                click_tracking_url = '',
                headline = '',
                image = openapi_client.models.creative_native_ad_image.Creative_nativeAd_image(
                    height = 56, 
                    url = '', 
                    width = 56, ),
                impression_tracking_url = [
                    ''
                    ],
                logo = openapi_client.models.creative_native_ad_logo.Creative_nativeAd_logo(
                    height = 56, 
                    url = '', 
                    width = 56, ),
                price = '',
                star_rating = 1.337,
                video_url = ''
            )
        else:
            return CreativeNativeAd(
        )
        """

    def testCreativeNativeAd(self):
        """Test CreativeNativeAd"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
