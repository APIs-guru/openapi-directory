# coding: utf-8

"""
    Payments Reseller Subscription API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_payments_reseller_subscription_v1_list_products_response import GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse

class TestGoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse(unittest.TestCase):
    """GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse:
        """Test GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse`
        """
        model = GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse()
        if include_optional:
            return GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse(
                next_page_token = '',
                products = [
                    openapi_client.models.google_cloud_payments_reseller_subscription_v1_product.GoogleCloudPaymentsResellerSubscriptionV1Product(
                        bundle_details = openapi_client.models.product_bundle_details.ProductBundleDetails(
                            bundle_elements = [
                                openapi_client.models.google_cloud_payments_reseller_subscription_v1_product_bundle_details_bundle_element.GoogleCloudPaymentsResellerSubscriptionV1ProductBundleDetailsBundleElement(
                                    product = '', )
                                ], 
                            entitlement_mode = 'ENTITLEMENT_MODE_UNSPECIFIED', ), 
                        finite_billing_cycle_details = openapi_client.models.google_cloud_payments_reseller_subscription_v1_finite_billing_cycle_details.GoogleCloudPaymentsResellerSubscriptionV1FiniteBillingCycleDetails(
                            billing_cycle_count_limit = '', ), 
                        name = '', 
                        price_configs = [
                            openapi_client.models.google_cloud_payments_reseller_subscription_v1_product_price_config.GoogleCloudPaymentsResellerSubscriptionV1ProductPriceConfig(
                                amount = openapi_client.models.google_cloud_payments_reseller_subscription_v1_amount.GoogleCloudPaymentsResellerSubscriptionV1Amount(
                                    amount_micros = '', 
                                    currency_code = '', ), 
                                region_code = '', )
                            ], 
                        product_type = 'PRODUCT_TYPE_UNSPECIFIED', 
                        region_codes = [
                            ''
                            ], 
                        subscription_billing_cycle_duration = openapi_client.models.google_cloud_payments_reseller_subscription_v1_duration.GoogleCloudPaymentsResellerSubscriptionV1Duration(
                            count = 56, 
                            unit = 'UNIT_UNSPECIFIED', ), 
                        titles = [
                            openapi_client.models.google_type_localized_text.GoogleTypeLocalizedText(
                                language_code = '', 
                                text = '', )
                            ], )
                    ]
            )
        else:
            return GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse(
        )
        """

    def testGoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse(self):
        """Test GoogleCloudPaymentsResellerSubscriptionV1ListProductsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
