openapi: 3.0.0
servers:
  - url: https://deploymentmanager.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google Cloud Deployment Manager v2 API provides services for configuring, deploying, and viewing Google Cloud services and APIs via templates which specify deployments of Cloud resources.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Deployment Manager V2 API
  version: v2beta
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://deploymentmanager.googleapis.com/$discovery/rest?version=v2beta
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: deploymentmanager
externalDocs:
  url: https://cloud.google.com/deployment-manager
tags:
  - name: compositeTypes
  - name: deployments
  - name: manifests
  - name: operations
  - name: resources
  - name: typeProviders
  - name: types
paths:
  /deploymentmanager/v2beta/projects/{project}/global/compositeTypes:
    get:
      description: Lists all composite types for Deployment Manager.
      operationId: deploymentmanager.compositeTypes.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompositeTypesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - compositeTypes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a composite type.
      operationId: deploymentmanager.compositeTypes.insert
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompositeType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
  /deploymentmanager/v2beta/projects/{project}/global/compositeTypes/{compositeType}:
    delete:
      description: Deletes a composite type.
      operationId: deploymentmanager.compositeTypes.delete
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
    get:
      description: Gets information about a specific composite type.
      operationId: deploymentmanager.compositeTypes.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the composite type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompositeType"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - compositeTypes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a composite type.
      operationId: deploymentmanager.compositeTypes.patch
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the composite type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompositeType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
    put:
      description: Updates a composite type.
      operationId: deploymentmanager.compositeTypes.update
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the composite type for this request.
          in: path
          name: compositeType
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CompositeType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - compositeTypes
  /deploymentmanager/v2beta/projects/{project}/global/deployments:
    get:
      description: Lists all deployments for a given project.
      operationId: deploymentmanager.deployments.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DeploymentsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - deployments
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a deployment and all of the resources described by the deployment manifest.
      operationId: deploymentmanager.deployments.insert
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Sets the policy to use for creating new resources.
          in: query
          name: createPolicy
          schema:
            enum:
              - CREATE_OR_ACQUIRE
              - ACQUIRE
              - CREATE
            type: string
        - description: If set to true, creates a deployment and creates "shell" resources but does not actually instantiate these resources. This allows you to preview what your deployment looks like. After previewing a deployment, you can deploy your resources by making a request with the `update()` method or you can use the `cancelPreview()` method to cancel the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
          in: query
          name: preview
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deployment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}:
    delete:
      description: Deletes a deployment and all of the resources in the deployment.
      operationId: deploymentmanager.deployments.delete
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: Sets the policy to use for deleting resources.
          in: query
          name: deletePolicy
          schema:
            enum:
              - DELETE
              - ABANDON
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
    get:
      description: Gets information about a specific deployment.
      operationId: deploymentmanager.deployments.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Deployment"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - deployments
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a deployment and all of the resources described by the deployment manifest.
      operationId: deploymentmanager.deployments.patch
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: Sets the policy to use for creating new resources.
          in: query
          name: createPolicy
          schema:
            enum:
              - CREATE_OR_ACQUIRE
              - ACQUIRE
              - CREATE
            type: string
        - description: Sets the policy to use for deleting resources.
          in: query
          name: deletePolicy
          schema:
            enum:
              - DELETE
              - ABANDON
            type: string
        - description: If set to true, updates the deployment and creates and updates the "shell" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a `target.config` with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the `update()` or you can `cancelPreview()` to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
          in: query
          name: preview
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deployment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
    put:
      description: Updates a deployment and all of the resources described by the deployment manifest.
      operationId: deploymentmanager.deployments.update
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: Sets the policy to use for creating new resources.
          in: query
          name: createPolicy
          schema:
            enum:
              - CREATE_OR_ACQUIRE
              - ACQUIRE
              - CREATE
            type: string
        - description: Sets the policy to use for deleting resources.
          in: query
          name: deletePolicy
          schema:
            enum:
              - DELETE
              - ABANDON
            type: string
        - description: If set to true, updates the deployment and creates and updates the "shell" resources but does not actually alter or instantiate these resources. This allows you to preview what your deployment will look like. You can use this intent to preview how an update would affect your deployment. You must provide a `target.config` with a configuration if this is set to true. After previewing a deployment, you can deploy your resources by making a request with the `update()` or you can `cancelPreview()` to remove the preview altogether. Note that the deployment will still exist after you cancel the preview and you must separately delete this deployment if you want to remove it.
          in: query
          name: preview
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Deployment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/cancelPreview:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Cancels and removes the preview currently associated with the deployment.
      operationId: deploymentmanager.deployments.cancelPreview
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentsCancelPreviewRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/manifests:
    get:
      description: Lists all manifests for a given deployment.
      operationId: deploymentmanager.manifests.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManifestsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - manifests
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/manifests/{manifest}:
    get:
      description: Gets information about a specific manifest.
      operationId: deploymentmanager.manifests.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The name of the manifest for this request.
          in: path
          name: manifest
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Manifest"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - manifests
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/resources:
    get:
      description: Lists all resources in a given deployment.
      operationId: deploymentmanager.resources.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourcesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/resources/{resource}:
    get:
      description: Gets information about a single resource.
      operationId: deploymentmanager.resources.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
        - description: The name of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - resources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{deployment}/stop:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Stops an ongoing operation. This does not roll back any work that has already been completed, but prevents any new work from being started.
      operationId: deploymentmanager.deployments.stop
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the deployment for this request.
          in: path
          name: deployment
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeploymentsStopRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{resource}/getIamPolicy:
    get:
      description: Gets the access control policy for a resource. May be empty if no such policy or resource exists.
      operationId: deploymentmanager.deployments.getIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Requested IAM Policy version.
          in: query
          name: optionsRequestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{resource}/setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.
      operationId: deploymentmanager.deployments.setIamPolicy
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GlobalSetPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  /deploymentmanager/v2beta/projects/{project}/global/deployments/{resource}/testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns permissions that a caller has on the specified resource.
      operationId: deploymentmanager.deployments.testIamPermissions
      parameters:
        - description: Project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Name or id of the resource for this request.
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - deployments
  /deploymentmanager/v2beta/projects/{project}/global/operations:
    get:
      description: Lists all operations for a project.
      operationId: deploymentmanager.operations.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/operations/{operation}:
    get:
      description: Gets information about a specific operation.
      operationId: deploymentmanager.operations.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the operation for this request.
          in: path
          name: operation
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - operations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders:
    get:
      description: Lists all resource type providers for Deployment Manager.
      operationId: deploymentmanager.typeProviders.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeProvidersListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a type provider.
      operationId: deploymentmanager.typeProviders.insert
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TypeProvider"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders/{typeProvider}:
    delete:
      description: Deletes a type provider.
      operationId: deploymentmanager.typeProviders.delete
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
    get:
      description: Gets information about a specific type provider.
      operationId: deploymentmanager.typeProviders.get
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeProvider"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Patches a type provider.
      operationId: deploymentmanager.typeProviders.patch
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TypeProvider"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
    put:
      description: Updates a type provider.
      operationId: deploymentmanager.typeProviders.update
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TypeProvider"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
      tags:
        - typeProviders
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders/{typeProvider}/types:
    get:
      description: Lists all the type info for a TypeProvider.
      operationId: deploymentmanager.typeProviders.listTypes
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeProvidersListTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/typeProviders/{typeProvider}/types/{type}:
    get:
      description: Gets a type info for a type provided by a TypeProvider.
      operationId: deploymentmanager.typeProviders.getType
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: The name of the type provider for this request.
          in: path
          name: typeProvider
          required: true
          schema:
            type: string
        - description: The name of the type provider type for this request.
          in: path
          name: type
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypeInfo"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - typeProviders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /deploymentmanager/v2beta/projects/{project}/global/types:
    get:
      description: Lists all resource types for Deployment Manager.
      operationId: deploymentmanager.types.list
      parameters:
        - description: The project ID for this request.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: "A filter expression that filters resources listed in the response. Most Compute resources support two types of filter expressions: expressions that support regular expressions and expressions that follow API improvement proposal AIP-160. These two types of filter expressions cannot be mixed in one request. If you want to use AIP-160, your expression must specify the field name, an operator, and the value that you want to use for filtering. The value must be a string, a number, or a boolean. The operator must be either `=`, `!=`, `>`, `<`, `<=`, `>=` or `:`. For example, if you are filtering Compute Engine instances, you can exclude instances named `example-instance` by specifying `name != example-instance`. The `:*` comparison can be used to test whether a key has been defined. For example, to find all objects with `owner` label use: ``` labels.owner:* ``` You can also filter nested fields. For example, you could specify `scheduling.automaticRestart = false` to include instances only if they are not scheduled for automatic restarts. You can use filtering on nested fields to filter based on resource labels. To filter on multiple expressions, provide each separate expression within parentheses. For example: ``` (scheduling.automaticRestart = true) (cpuPlatform = \"Intel Skylake\") ``` By default, each expression is an `AND` expression. However, you can include `AND` and `OR` expressions explicitly. For example: ``` (cpuPlatform = \"Intel Skylake\") OR (cpuPlatform = \"Intel Broadwell\") AND (scheduling.automaticRestart = true) ``` If you want to use a regular expression, use the `eq` (equal) or `ne` (not equal) operator against a single un-parenthesized expression with or without quotes or against multiple parenthesized expressions. Examples: `fieldname eq unquoted literal` `fieldname eq 'single quoted literal'` `fieldname eq \"double quoted literal\"` `(fieldname1 eq literal) (fieldname2 ne \"literal\")` The literal value is interpreted as a regular expression using Google RE2 library syntax. The literal value must match the entire field. For example, to filter for instances that do not end with name \"instance\", you would use `name ne .*instance`. You cannot combine constraints on multiple fields using regular expressions."
          in: query
          name: filter
          schema:
            type: string
        - description: "The maximum number of results per page that should be returned. If the number of available results is larger than `maxResults`, Compute Engine returns a `nextPageToken` that can be used to get the next page of results in subsequent list requests. Acceptable values are `0` to `500`, inclusive. (Default: `500`)"
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name. You can also sort results in descending order based on the creation timestamp using `orderBy="creationTimestamp desc"`. This sorts results based on the `creationTimestamp` field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first. Currently, only sorting by `name` or `creationTimestamp desc` is supported.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Specifies a page token to use. Set `pageToken` to the `nextPageToken` returned by a previous list request to get the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TypesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform.read-only
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform.read-only
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman
        - Oauth2:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/ndev.cloudman.readonly
      tags:
        - types
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AsyncOptions:
      description: Async options that determine when a resource should finish.
      properties:
        methodMatch:
          description: Method regex where this policy will apply.
          type: string
        pollingOptions:
          $ref: "#/components/schemas/PollingOptions"
          description: Deployment manager will poll instances for this API resource setting a RUNNING state, and blocking until polling conditions tell whether the resource is completed or failed.
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    BaseType:
      description: BaseType that describes a service-backed Type.
      properties:
        collectionOverrides:
          description: Allows resource handling overrides for specific collections
          items:
            $ref: "#/components/schemas/CollectionOverride"
          type: array
        credential:
          $ref: "#/components/schemas/Credential"
          description: Credential used when interacting with this type.
        descriptorUrl:
          description: Descriptor Url for the this type.
          type: string
        options:
          $ref: "#/components/schemas/Options"
          description: Options to apply when handling any resources in this service.
      type: object
    BasicAuth:
      description: Basic Auth used as a credential.
      properties:
        password:
          type: string
        user:
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    BulkInsertOperationStatus:
      properties:
        createdVmCount:
          description: "[Output Only] Count of VMs successfully created so far."
          format: int32
          type: integer
        deletedVmCount:
          description: "[Output Only] Count of VMs that got deleted during rollback."
          format: int32
          type: integer
        failedToCreateVmCount:
          description: "[Output Only] Count of VMs that started creating but encountered an error."
          format: int32
          type: integer
        status:
          description: "[Output Only] Creation status of BulkInsert operation - information if the flow is rolling forward or rolling back."
          enum:
            - STATUS_UNSPECIFIED
            - CREATING
            - ROLLING_BACK
            - DONE
          type: string
        targetVmCount:
          description: "[Output Only] Count of VMs originally planned to be created."
          format: int32
          type: integer
      type: object
    CollectionOverride:
      description: CollectionOverride allows resource handling overrides for specific resources within a BaseType
      properties:
        collection:
          description: The collection that identifies this resource within its service.
          type: string
        options:
          $ref: "#/components/schemas/Options"
          description: The options to apply to this resource-level override
      type: object
    CompositeType:
      description: Holds the composite type.
      properties:
        description:
          description: An optional textual description of the resource; provided by the client when the resource is created.
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
          items:
            $ref: "#/components/schemas/CompositeTypeLabelEntry"
          type: array
        name:
          description: "Name of the composite type, must follow the expression: `[a-z]([-a-z0-9_.]{0,61}[a-z0-9])?`."
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
          description: Output only. The Operation that most recently ran, or is currently running, on this composite type.
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        status:
          enum:
            - UNKNOWN_STATUS
            - DEPRECATED
            - EXPERIMENTAL
            - SUPPORTED
          type: string
        templateContents:
          $ref: "#/components/schemas/TemplateContents"
          description: Files for the template type.
      type: object
    CompositeTypeLabelEntry:
      description: Label object for CompositeTypes
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      type: object
    CompositeTypesListResponse:
      description: A response that returns all Composite Types supported by Deployment Manager
      properties:
        compositeTypes:
          description: Output only. A list of resource composite types supported by Deployment Manager.
          items:
            $ref: "#/components/schemas/CompositeType"
          type: array
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
      type: object
    ConfigFile:
      properties:
        content:
          description: The contents of the file.
          type: string
      type: object
    Credential:
      description: The credential used by Deployment Manager and TypeProvider. Only one of the options is permitted.
      properties:
        basicAuth:
          $ref: "#/components/schemas/BasicAuth"
          description: Basic Auth Credential, only used by TypeProvider.
        serviceAccount:
          $ref: "#/components/schemas/ServiceAccount"
          description: Service Account Credential, only used by Deployment.
        useProjectDefault:
          description: Specify to use the project default credential, only supported by Deployment.
          type: boolean
      type: object
    Deployment:
      properties:
        description:
          description: An optional user-provided description of the deployment.
          type: string
        fingerprint:
          description: Provides a fingerprint to use in requests to modify a deployment, such as `update()`, `stop()`, and `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided with `update()`, `stop()`, and `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that only one request happens at a time. The fingerprint is initially generated by Deployment Manager and changes after every request to modify data. To get the latest fingerprint value, perform a `get()` request to a deployment.
          format: byte
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
          items:
            $ref: "#/components/schemas/DeploymentLabelEntry"
          type: array
        manifest:
          description: Output only. URL of the manifest representing the last manifest that was successfully deployed. If no manifest has been successfully deployed, this field will be absent.
          type: string
        name:
          description: Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
          description: Output only. The Operation that most recently ran, or is currently running, on this deployment.
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
        target:
          $ref: "#/components/schemas/TargetConfiguration"
          description: "[Input Only] The parameters that define your deployment, including the deployment configuration and relevant templates."
        update:
          $ref: "#/components/schemas/DeploymentUpdate"
          description: Output only. If Deployment Manager is currently updating or previewing an update to this deployment, the updated configuration appears here.
        updateTime:
          description: Output only. Update timestamp in RFC3339 text format.
          type: string
      type: object
    DeploymentLabelEntry:
      description: Label object for Deployments
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      type: object
    DeploymentUpdate:
      properties:
        description:
          description: Output only. An optional user-provided description of the deployment after the current update has been applied.
          type: string
        labels:
          description: "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
          items:
            $ref: "#/components/schemas/DeploymentUpdateLabelEntry"
          type: array
        manifest:
          description: Output only. URL of the manifest representing the update configuration of this deployment.
          type: string
      type: object
    DeploymentUpdateLabelEntry:
      description: Label object for DeploymentUpdate
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      type: object
    DeploymentsCancelPreviewRequest:
      properties:
        fingerprint:
          description: Specifies a fingerprint for `cancelPreview()` requests. A fingerprint is a randomly generated value that must be provided in `cancelPreview()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to cancel a preview, this would prevent one of the requests). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment.
          format: byte
          type: string
      type: object
    DeploymentsListResponse:
      description: A response containing a partial list of deployments and a page token used to build the next request if the request has been truncated.
      properties:
        deployments:
          description: Output only. The deployments contained in this response.
          items:
            $ref: "#/components/schemas/Deployment"
          type: array
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
      type: object
    DeploymentsStopRequest:
      properties:
        fingerprint:
          description: Specifies a fingerprint for `stop()` requests. A fingerprint is a randomly generated value that must be provided in `stop()` requests to perform optimistic locking. This ensures optimistic concurrency so that the deployment does not have conflicting requests (e.g. if someone attempts to make a new update request while another user attempts to stop an ongoing update request, this would prevent a collision). The fingerprint is initially generated by Deployment Manager and changes after every request to modify a deployment. To get the latest fingerprint value, perform a `get()` request on the deployment.
          format: byte
          type: string
      type: object
    Diagnostic:
      properties:
        field:
          description: JsonPath expression on the resource that if non empty, indicates that this field needs to be extracted as a diagnostic.
          type: string
        level:
          description: Level to record this diagnostic.
          enum:
            - UNKNOWN
            - INFORMATION
            - WARNING
            - ERROR
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    GlobalSetPolicyRequest:
      properties:
        bindings:
          description: Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify bindings.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: Flatten Policy to create a backward compatible wire-format. Deprecated. Use 'policy' to specify the etag.
          format: byte
          type: string
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the 'resource'. The size of the policy is limited to a few 10s of KB. An empty policy is in general a valid policy but certain services (like Projects) might reject them."
      type: object
    ImportFile:
      properties:
        content:
          description: The contents of the file.
          type: string
        name:
          description: The name of the file.
          type: string
      type: object
    InputMapping:
      description: InputMapping creates a 'virtual' property that will be injected into the properties before sending the request to the underlying API.
      properties:
        fieldName:
          description: The name of the field that is going to be injected.
          type: string
        location:
          description: The location where this mapping applies.
          enum:
            - UNKNOWN
            - PATH
            - QUERY
            - BODY
            - HEADER
          type: string
        methodMatch:
          description: Regex to evaluate on method to decide if input applies.
          type: string
        value:
          description: A jsonPath expression to select an element.
          type: string
      type: object
    InstancesBulkInsertOperationMetadata:
      properties:
        perLocationStatus:
          additionalProperties:
            $ref: "#/components/schemas/BulkInsertOperationStatus"
          description: "Status information per location (location name is key). Example key: zones/us-central1-a"
          type: object
      type: object
    Manifest:
      properties:
        config:
          $ref: "#/components/schemas/ConfigFile"
          description: Output only. The YAML configuration for this manifest.
        expandedConfig:
          description: Output only. The fully-expanded configuration file, including any templates and references.
          type: string
        id:
          format: uint64
          type: string
        imports:
          description: Output only. The imported files for this manifest.
          items:
            $ref: "#/components/schemas/ImportFile"
          type: array
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        layout:
          description: Output only. The YAML layout for this manifest.
          type: string
        manifestSizeBytes:
          description: Output only. The computed size of the fully expanded manifest.
          format: int64
          type: string
        manifestSizeLimitBytes:
          description: Output only. The size limit for expanded manifests in the project.
          format: int64
          type: string
        name:
          description: Output only. The name of the manifest.
          type: string
        selfLink:
          description: Output only. Self link for the manifest.
          type: string
      type: object
    ManifestsListResponse:
      description: A response containing a partial list of manifests and a page token used to build the next request if the request has been truncated.
      properties:
        manifests:
          description: Output only. Manifests contained in this list response.
          items:
            $ref: "#/components/schemas/Manifest"
          type: array
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
      type: object
    Operation:
      description: "Represents an Operation resource. Google Compute Engine has three Operation resources: * [Global](/compute/docs/reference/rest/{$api_version}/globalOperations) * [Regional](/compute/docs/reference/rest/{$api_version}/regionOperations) * [Zonal](/compute/docs/reference/rest/{$api_version}/zoneOperations) You can use an operation resource to manage asynchronous API requests. For more information, read Handling API responses. Operations can be global, regional or zonal. - For global operations, use the `globalOperations` resource. - For regional operations, use the `regionOperations` resource. - For zonal operations, use the `zoneOperations` resource. For more information, read Global, Regional, and Zonal Resources. Note that completed Operation resources have a limited retention period."
      properties:
        clientOperationId:
          description: "[Output Only] The value of `requestId` if you provided it in the request. Not present otherwise."
          type: string
        creationTimestamp:
          description: "[Deprecated] This field is deprecated."
          type: string
        description:
          description: "[Output Only] A textual description of the operation, which is set when the operation is created."
          type: string
        endTime:
          description: "[Output Only] The time that this operation was completed. This value is in RFC3339 text format."
          type: string
        error:
          description: "[Output Only] If errors are generated during processing of the operation, this field will be populated."
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
        httpErrorMessage:
          description: "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as `NOT FOUND`."
          type: string
        httpErrorStatusCode:
          description: "[Output Only] If the operation fails, this field contains the HTTP error status code that was returned. For example, a `404` means the resource was not found."
          format: int32
          type: integer
        id:
          description: "[Output Only] The unique identifier for the operation. This identifier is defined by the server."
          format: uint64
          type: string
        insertTime:
          description: "[Output Only] The time that this operation was requested. This value is in RFC3339 text format."
          type: string
        instancesBulkInsertOperationMetadata:
          $ref: "#/components/schemas/InstancesBulkInsertOperationMetadata"
        kind:
          default: compute#operation
          description: "[Output Only] Type of the resource. Always `compute#operation` for Operation resources."
          type: string
        name:
          description: "[Output Only] Name of the operation."
          type: string
        operationGroupId:
          description: "[Output Only] An ID that represents a group of operations, such as when a group of operations results from a `bulkInsert` API request."
          type: string
        operationType:
          description: "[Output Only] The type of operation, such as `insert`, `update`, or `delete`, and so on."
          type: string
        progress:
          description: "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess when the operation will be complete. This number should monotonically increase as the operation progresses."
          format: int32
          type: integer
        region:
          description: "[Output Only] The URL of the region where the operation resides. Only applicable when performing regional operations."
          type: string
        selfLink:
          description: "[Output Only] Server-defined URL for the resource."
          type: string
        setCommonInstanceMetadataOperationMetadata:
          $ref: "#/components/schemas/SetCommonInstanceMetadataOperationMetadata"
          description: "[Output Only] If the operation is for projects.setCommonInstanceMetadata, this field will contain information on all underlying zonal actions and their state."
        startTime:
          description: "[Output Only] The time that this operation was started by the server. This value is in RFC3339 text format."
          type: string
        status:
          description: "[Output Only] The status of the operation, which can be one of the following: `PENDING`, `RUNNING`, or `DONE`."
          enum:
            - PENDING
            - RUNNING
            - DONE
          type: string
        statusMessage:
          description: "[Output Only] An optional textual description of the current status of the operation."
          type: string
        targetId:
          description: "[Output Only] The unique target ID, which identifies a specific incarnation of the target resource."
          format: uint64
          type: string
        targetLink:
          description: "[Output Only] The URL of the resource that the operation modifies. For operations related to creating a snapshot, this points to the persistent disk that the snapshot was created from."
          type: string
        user:
          description: "[Output Only] User who requested the operation, for example: `user@example.com` or `alice_smith_identifier (global/workforcePools/example-com-us-employees)`."
          type: string
        warnings:
          description: "[Output Only] If warning messages are generated during processing of the operation, this field will be populated."
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response."
                enum:
                  - DEPRECATED_RESOURCE_USED
                  - NO_RESULTS_ON_PAGE
                  - UNREACHABLE
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_NOT_RUNNING
                  - INJECTED_KERNELS_DEPRECATED
                  - REQUIRED_TOS_AGREEMENT
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - NOT_CRITICAL_ERROR
                  - CLEANUP_FAILED
                  - FIELD_VALUE_OVERRIDEN
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - MISSING_TYPE_DEPENDENCY
                  - EXTERNAL_API_WARNING
                  - SCHEMA_VALIDATION_IGNORED
                  - UNDECLARED_PROPERTIES
                  - EXPERIMENTAL_TYPE_USED
                  - DEPRECATED_TYPE_USED
                  - PARTIAL_SUCCESS
                  - LARGE_DEPLOYMENT_WARNING
                  - NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE
                  - INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB
                  - LIST_OVERHEAD_QUOTA_EXCEED
                type: string
                x-enumDeprecated:
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - true
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
              data:
                description: '[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" } '
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning code."
                type: string
            type: object
          type: array
        zone:
          description: "[Output Only] The URL of the zone where the operation resides. Only applicable when performing per-zone operations."
          type: string
      type: object
    OperationsListResponse:
      description: A response containing a partial list of operations and a page token used to build the next request if the request has been truncated.
      properties:
        nextPageToken:
          description: Output only. A token used to continue a truncated list request.
          type: string
        operations:
          description: Output only. Operations contained in this list response.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Options:
      description: Options allows customized resource handling by Deployment Manager.
      properties:
        asyncOptions:
          description: Options regarding how to thread async requests.
          items:
            $ref: "#/components/schemas/AsyncOptions"
          type: array
        inputMappings:
          description: The mappings that apply for requests.
          items:
            $ref: "#/components/schemas/InputMapping"
          type: array
        validationOptions:
          $ref: "#/components/schemas/ValidationOptions"
          description: Options for how to validate and process properties on a resource.
        virtualProperties:
          description: "Additional properties block described as a jsonSchema, these properties will never be part of the json payload, but they can be consumed by InputMappings, this must be a valid json schema draft-04. The properties specified here will be decouple in a different section. This schema will be merged to the schema validation, and properties here will be extracted From the payload and consumed explicitly by InputMappings. ex: field1: type: string field2: type: number"
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    PollingOptions:
      properties:
        diagnostics:
          description: An array of diagnostics to be collected by Deployment Manager, these diagnostics will be displayed to the user.
          items:
            $ref: "#/components/schemas/Diagnostic"
          type: array
        failCondition:
          description: JsonPath expression that determines if the request failed.
          type: string
        finishCondition:
          description: JsonPath expression that determines if the request is completed.
          type: string
        pollingLink:
          description: JsonPath expression that evaluates to string, it indicates where to poll.
          type: string
        targetLink:
          description: JsonPath expression, after polling is completed, indicates where to fetch the resource.
          type: string
      type: object
    Resource:
      properties:
        accessControl:
          $ref: "#/components/schemas/ResourceAccessControl"
          description: The Access Control Policy set on this resource.
        finalProperties:
          description: Output only. The evaluated properties of the resource with references expanded. Returned as serialized YAML.
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        manifest:
          description: Output only. URL of the manifest representing the current configuration of this resource.
          type: string
        name:
          description: Output only. The name of the resource as it appears in the YAML config.
          type: string
        properties:
          description: Output only. The current properties of the resource before any references have been filled in. Returned as serialized YAML.
          type: string
        type:
          description: Output only. The type of the resource, for example `compute.v1.instance`, or `cloudfunctions.v1beta1.function`.
          type: string
        update:
          $ref: "#/components/schemas/ResourceUpdate"
          description: Output only. If Deployment Manager is currently updating or previewing an update to this resource, the updated configuration appears here.
        updateTime:
          description: Output only. Update timestamp in RFC3339 text format.
          type: string
        url:
          description: Output only. The URL of the actual resource.
          type: string
        warnings:
          description: Output only. If warning messages are generated during processing of this resource, this field will be populated.
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response."
                enum:
                  - DEPRECATED_RESOURCE_USED
                  - NO_RESULTS_ON_PAGE
                  - UNREACHABLE
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_NOT_RUNNING
                  - INJECTED_KERNELS_DEPRECATED
                  - REQUIRED_TOS_AGREEMENT
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - NOT_CRITICAL_ERROR
                  - CLEANUP_FAILED
                  - FIELD_VALUE_OVERRIDEN
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - MISSING_TYPE_DEPENDENCY
                  - EXTERNAL_API_WARNING
                  - SCHEMA_VALIDATION_IGNORED
                  - UNDECLARED_PROPERTIES
                  - EXPERIMENTAL_TYPE_USED
                  - DEPRECATED_TYPE_USED
                  - PARTIAL_SUCCESS
                  - LARGE_DEPLOYMENT_WARNING
                  - NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE
                  - INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB
                  - LIST_OVERHEAD_QUOTA_EXCEED
                type: string
                x-enumDeprecated:
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - true
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
              data:
                description: '[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" } '
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning code."
                type: string
            type: object
          type: array
      type: object
    ResourceAccessControl:
      description: The access controls set on the resource.
      properties:
        gcpIamPolicy:
          description: The GCP IAM Policy to set on the resource.
          type: string
      type: object
    ResourceUpdate:
      properties:
        accessControl:
          $ref: "#/components/schemas/ResourceAccessControl"
          description: The Access Control Policy to set on this resource after updating the resource itself.
        error:
          description: Output only. If errors are generated during update of the resource, this field will be populated.
          properties:
            errors:
              description: "[Output Only] The array of errors encountered while processing this operation."
              items:
                properties:
                  code:
                    description: "[Output Only] The error type identifier for this error."
                    type: string
                  location:
                    description: "[Output Only] Indicates the field in the request that caused the error. This property is optional."
                    type: string
                  message:
                    description: "[Output Only] An optional, human-readable error message."
                    type: string
                type: object
              type: array
          type: object
        finalProperties:
          description: Output only. The expanded properties of the resource with reference values expanded. Returned as serialized YAML.
          type: string
        intent:
          description: "Output only. The intent of the resource: `PREVIEW`, `UPDATE`, or `CANCEL`."
          enum:
            - CREATE_OR_ACQUIRE
            - DELETE
            - ACQUIRE
            - UPDATE
            - ABANDON
            - CREATE
          type: string
        manifest:
          description: Output only. URL of the manifest representing the update configuration of this resource.
          type: string
        properties:
          description: Output only. The set of updated properties for this resource, before references are expanded. Returned as serialized YAML.
          type: string
        state:
          description: Output only. The state of the resource.
          enum:
            - PENDING
            - IN_PROGRESS
            - IN_PREVIEW
            - FAILED
            - ABORTED
          type: string
        warnings:
          description: Output only. If warning messages are generated during processing of this resource, this field will be populated.
          items:
            properties:
              code:
                description: "[Output Only] A warning code, if applicable. For example, Compute Engine returns NO_RESULTS_ON_PAGE if there are no results in the response."
                enum:
                  - DEPRECATED_RESOURCE_USED
                  - NO_RESULTS_ON_PAGE
                  - UNREACHABLE
                  - NEXT_HOP_ADDRESS_NOT_ASSIGNED
                  - NEXT_HOP_INSTANCE_NOT_FOUND
                  - NEXT_HOP_INSTANCE_NOT_ON_NETWORK
                  - NEXT_HOP_CANNOT_IP_FORWARD
                  - NEXT_HOP_NOT_RUNNING
                  - INJECTED_KERNELS_DEPRECATED
                  - REQUIRED_TOS_AGREEMENT
                  - DISK_SIZE_LARGER_THAN_IMAGE_SIZE
                  - RESOURCE_NOT_DELETED
                  - SINGLE_INSTANCE_PROPERTY_TEMPLATE
                  - NOT_CRITICAL_ERROR
                  - CLEANUP_FAILED
                  - FIELD_VALUE_OVERRIDEN
                  - RESOURCE_IN_USE_BY_OTHER_RESOURCE_WARNING
                  - MISSING_TYPE_DEPENDENCY
                  - EXTERNAL_API_WARNING
                  - SCHEMA_VALIDATION_IGNORED
                  - UNDECLARED_PROPERTIES
                  - EXPERIMENTAL_TYPE_USED
                  - DEPRECATED_TYPE_USED
                  - PARTIAL_SUCCESS
                  - LARGE_DEPLOYMENT_WARNING
                  - NEXT_HOP_INSTANCE_HAS_NO_IPV6_INTERFACE
                  - INVALID_HEALTH_CHECK_FOR_DYNAMIC_WIEGHTED_LB
                  - LIST_OVERHEAD_QUOTA_EXCEED
                type: string
                x-enumDeprecated:
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - true
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
                  - false
              data:
                description: '[Output Only] Metadata about this warning in key: value format. For example: "data": [ { "key": "scope", "value": "zones/us-east1-d" } '
                items:
                  properties:
                    key:
                      description: "[Output Only] A key that provides more detail on the warning being returned. For example, for warnings where there are no results in a list request for a particular zone, this key might be scope and the key value might be the zone name. Other examples might be a key indicating a deprecated resource and a suggested replacement, or a warning about invalid network settings (for example, if an instance attempts to perform IP forwarding but is not enabled for IP forwarding)."
                      type: string
                    value:
                      description: "[Output Only] A warning data value corresponding to the key."
                      type: string
                  type: object
                type: array
              message:
                description: "[Output Only] A human-readable description of the warning code."
                type: string
            type: object
          type: array
      type: object
    ResourcesListResponse:
      description: A response containing a partial list of resources and a page token used to build the next request if the request has been truncated.
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        resources:
          description: Resources contained in this list response.
          items:
            $ref: "#/components/schemas/Resource"
          type: array
      type: object
    ServiceAccount:
      description: Service Account used as a credential.
      properties:
        email:
          description: The IAM service account email address like test@myproject.iam.gserviceaccount.com
          type: string
      type: object
    SetCommonInstanceMetadataOperationMetadata:
      properties:
        clientOperationId:
          description: "[Output Only] The client operation id."
          type: string
        perLocationOperations:
          additionalProperties:
            $ref: "#/components/schemas/SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo"
          description: "[Output Only] Status information per location (location name is key). Example key: zones/us-central1-a"
          type: object
      type: object
    SetCommonInstanceMetadataOperationMetadataPerLocationOperationInfo:
      properties:
        error:
          $ref: "#/components/schemas/Status"
          description: "[Output Only] If state is `ABANDONED` or `FAILED`, this field is populated."
        state:
          description: "[Output Only] Status of the action, which can be one of the following: `PROPAGATING`, `PROPAGATED`, `ABANDONED`, `FAILED`, or `DONE`."
          enum:
            - UNSPECIFIED
            - PROPAGATING
            - PROPAGATED
            - ABANDONED
            - FAILED
            - DONE
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    TargetConfiguration:
      properties:
        config:
          $ref: "#/components/schemas/ConfigFile"
          description: The configuration to use for this deployment.
        imports:
          description: Specifies any files to import for this configuration. This can be used to import templates or other files. For example, you might import a text file in order to use the file in a template.
          items:
            $ref: "#/components/schemas/ImportFile"
          type: array
      type: object
    TemplateContents:
      description: Files that make up the template contents of a template type.
      properties:
        imports:
          description: Import files referenced by the main template.
          items:
            $ref: "#/components/schemas/ImportFile"
          type: array
        interpreter:
          description: Which interpreter (python or jinja) should be used during expansion.
          enum:
            - UNKNOWN_INTERPRETER
            - PYTHON
            - JINJA
          type: string
        mainTemplate:
          description: The filename of the mainTemplate
          type: string
        schema:
          description: The contents of the template schema.
          type: string
        template:
          description: The contents of the main template file.
          type: string
      type: object
    TestPermissionsRequest:
      properties:
        permissions:
          description: The set of permissions to check for the 'resource'. Permissions with wildcards (such as '*' or 'storage.*') are not allowed.
          items:
            type: string
          type: array
      type: object
    TestPermissionsResponse:
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    Type:
      description: A resource type supported by Deployment Manager.
      properties:
        base:
          $ref: "#/components/schemas/BaseType"
          description: Base Type (configurable service) that backs this Type.
        description:
          description: An optional textual description of the resource; provided by the client when the resource is created.
          type: string
        id:
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`."
          items:
            $ref: "#/components/schemas/TypeLabelEntry"
          type: array
        name:
          description: Name of the type.
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
          description: Output only. The Operation that most recently ran, or is currently running, on this type.
        selfLink:
          description: Output only. Server defined URL for the resource.
          type: string
      type: object
    TypeInfo:
      description: Type Information. Contains detailed information about a composite type, base type, or base type with specific collection.
      properties:
        description:
          description: The description of the type.
          type: string
        documentationLink:
          description: For swagger 2.0 externalDocs field will be used. For swagger 1.2 this field will be empty.
          type: string
        kind:
          description: Output only. Type of the output. Always `deploymentManager#TypeInfo` for TypeInfo.
          type: string
        name:
          description: The base type or composite type name.
          type: string
        schema:
          $ref: "#/components/schemas/TypeInfoSchemaInfo"
          description: For base types with a collection, we return a schema and documentation link For template types, we return only a schema
        selfLink:
          description: Output only. Self link for the type provider.
          type: string
        title:
          description: The title on the API descriptor URL provided.
          type: string
      type: object
    TypeInfoSchemaInfo:
      properties:
        input:
          description: "The properties that this composite type or base type collection accept as input, represented as a json blob, format is: JSON Schema Draft V4"
          type: string
        output:
          description: "The properties that this composite type or base type collection exposes as output, these properties can be used for references, represented as json blob, format is: JSON Schema Draft V4"
          type: string
      type: object
    TypeLabelEntry:
      description: Label object for Types
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      type: object
    TypeProvider:
      description: A type provider that describes a service-backed Type.
      properties:
        collectionOverrides:
          description: Allows resource handling overrides for specific collections
          items:
            $ref: "#/components/schemas/CollectionOverride"
          type: array
        credential:
          $ref: "#/components/schemas/Credential"
          description: Credential used when interacting with this type.
        customCertificateAuthorityRoots:
          description: List of up to 2 custom certificate authority roots to use for TLS authentication when making calls on behalf of this type provider. If set, TLS authentication will exclusively use these roots instead of relying on publicly trusted certificate authorities when validating TLS certificate authenticity. The certificates must be in base64-encoded PEM format. The maximum size of each certificate must not exceed 10KB.
          items:
            type: string
          type: array
        description:
          description: An optional textual description of the resource; provided by the client when the resource is created.
          type: string
        descriptorUrl:
          description: Descriptor Url for the this type provider.
          type: string
        id:
          description: Output only. Unique identifier for the resource defined by the server.
          format: uint64
          type: string
        insertTime:
          description: Output only. Creation timestamp in RFC3339 text format.
          type: string
        labels:
          description: "Map of One Platform labels; provided by the client when the resource is created or updated. Specifically: Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?` Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`"
          items:
            $ref: "#/components/schemas/TypeProviderLabelEntry"
          type: array
        name:
          description: Name of the resource; provided by the client when the resource is created. The name must be 1-63 characters long, and comply with RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the first character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot be a dash.
          type: string
        operation:
          $ref: "#/components/schemas/Operation"
          description: Output only. The Operation that most recently ran, or is currently running, on this type provider.
        options:
          $ref: "#/components/schemas/Options"
          description: Options to apply when handling any resources in this service.
        selfLink:
          description: Output only. Self link for the type provider.
          type: string
      type: object
    TypeProviderLabelEntry:
      description: Label object for TypeProviders
      properties:
        key:
          description: Key of the label
          type: string
        value:
          description: Value of the label
          type: string
      type: object
    TypeProvidersListResponse:
      description: A response that returns all Type Providers supported by Deployment Manager
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        typeProviders:
          description: Output only. A list of resource type providers supported by Deployment Manager.
          items:
            $ref: "#/components/schemas/TypeProvider"
          type: array
      type: object
    TypeProvidersListTypesResponse:
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        types:
          description: Output only. A list of resource type info.
          items:
            $ref: "#/components/schemas/TypeInfo"
          type: array
      type: object
    TypesListResponse:
      description: A response that returns all Types supported by Deployment Manager
      properties:
        nextPageToken:
          description: A token used to continue a truncated list request.
          type: string
        types:
          description: Output only. A list of resource types supported by Deployment Manager.
          items:
            $ref: "#/components/schemas/Type"
          type: array
      type: object
    ValidationOptions:
      description: Options for how to validate and process properties on a resource.
      properties:
        schemaValidation:
          description: Customize how deployment manager will validate the resource against schema errors.
          enum:
            - UNKNOWN
            - IGNORE
            - IGNORE_WITH_WARNINGS
            - FAIL
          type: string
        undeclaredProperties:
          description: Specify what to do with extra properties when executing a request.
          enum:
            - UNKNOWN
            - INCLUDE
            - IGNORE
            - INCLUDE_WITH_WARNINGS
            - IGNORE_WITH_WARNINGS
            - FAIL
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google Cloud Platform management resources and deployment status information
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
            https://www.googleapis.com/auth/cloud-platform.read-only: View your data across Google Cloud services and see the email address of your Google Account
            https://www.googleapis.com/auth/ndev.cloudman: View and manage your Google Cloud Platform management resources and deployment status information
            https://www.googleapis.com/auth/ndev.cloudman.readonly: View your Google Cloud Platform management resources and deployment status information
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
