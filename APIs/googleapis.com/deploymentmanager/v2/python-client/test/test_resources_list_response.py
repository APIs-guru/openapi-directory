# coding: utf-8

"""
    Cloud Deployment Manager V2 API

    The Google Cloud Deployment Manager v2 API provides services for configuring, deploying, and viewing Google Cloud services and APIs via templates which specify deployments of Cloud resources.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resources_list_response import ResourcesListResponse

class TestResourcesListResponse(unittest.TestCase):
    """ResourcesListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ResourcesListResponse:
        """Test ResourcesListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ResourcesListResponse`
        """
        model = ResourcesListResponse()
        if include_optional:
            return ResourcesListResponse(
                next_page_token = '',
                resources = [
                    openapi_client.models.resource.Resource(
                        access_control = openapi_client.models.resource_access_control.ResourceAccessControl(
                            gcp_iam_policy = '', ), 
                        final_properties = '', 
                        id = '', 
                        insert_time = '', 
                        manifest = '', 
                        name = '', 
                        properties = '', 
                        type = '', 
                        update = openapi_client.models.resource_update.ResourceUpdate(
                            error = openapi_client.models.resource_update_error.ResourceUpdate_error(
                                errors = [
                                    openapi_client.models.operation_error_errors_inner.Operation_error_errors_inner(
                                        code = '', 
                                        location = '', 
                                        message = '', )
                                    ], ), 
                            final_properties = '', 
                            intent = 'CREATE_OR_ACQUIRE', 
                            manifest = '', 
                            properties = '', 
                            state = 'PENDING', 
                            warnings = [
                                openapi_client.models.operation_warnings_inner.Operation_warnings_inner(
                                    code = 'DEPRECATED_RESOURCE_USED', 
                                    data = [
                                        openapi_client.models.operation_warnings_inner_data_inner.Operation_warnings_inner_data_inner(
                                            key = '', 
                                            value = '', )
                                        ], 
                                    message = '', )
                                ], ), 
                        update_time = '', 
                        url = '', 
                        warnings = [
                            openapi_client.models.operation_warnings_inner.Operation_warnings_inner(
                                code = 'DEPRECATED_RESOURCE_USED', 
                                message = '', )
                            ], )
                    ]
            )
        else:
            return ResourcesListResponse(
        )
        """

    def testResourcesListResponse(self):
        """Test ResourcesListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
