# coding: utf-8

"""
    Google Workspace Reseller API

    Perform common functions that are available on the Channel Services console at scale, like placing orders and viewing customer information

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscriptions import Subscriptions

class TestSubscriptions(unittest.TestCase):
    """Subscriptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Subscriptions:
        """Test Subscriptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Subscriptions`
        """
        model = Subscriptions()
        if include_optional:
            return Subscriptions(
                kind = 'reseller#subscriptions',
                next_page_token = '',
                subscriptions = [
                    openapi_client.models.subscription.Subscription(
                        billing_method = '', 
                        creation_time = '', 
                        customer_domain = '', 
                        customer_id = '', 
                        deal_code = '', 
                        kind = 'reseller#subscription', 
                        plan = openapi_client.models.subscription_plan.Subscription_plan(
                            commitment_interval = openapi_client.models.subscription_plan_commitment_interval.Subscription_plan_commitmentInterval(
                                end_time = '', 
                                start_time = '', ), 
                            is_commitment_plan = True, 
                            plan_name = '', ), 
                        purchase_order_id = '', 
                        renewal_settings = openapi_client.models.renewal_settings.RenewalSettings(
                            kind = 'subscriptions#renewalSettings', 
                            renewal_type = '', ), 
                        resource_ui_url = '', 
                        seats = openapi_client.models.seats.Seats(
                            kind = 'subscriptions#seats', 
                            licensed_number_of_seats = 56, 
                            maximum_number_of_seats = 56, 
                            number_of_seats = 56, ), 
                        sku_id = '', 
                        sku_name = '', 
                        status = '', 
                        subscription_id = '', 
                        suspension_reasons = [
                            ''
                            ], 
                        transfer_info = openapi_client.models.subscription_transfer_info.Subscription_transferInfo(
                            current_legacy_sku_id = '', 
                            minimum_transferable_seats = 56, 
                            transferability_expiration_time = '', ), 
                        trial_settings = openapi_client.models.subscription_trial_settings.Subscription_trialSettings(
                            is_in_trial = True, 
                            trial_end_time = '', ), )
                    ]
            )
        else:
            return Subscriptions(
        )
        """

    def testSubscriptions(self):
        """Test Subscriptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
