# coding: utf-8

"""
    Traffic Director API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.client_status_response import ClientStatusResponse

class TestClientStatusResponse(unittest.TestCase):
    """ClientStatusResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClientStatusResponse:
        """Test ClientStatusResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClientStatusResponse`
        """
        model = ClientStatusResponse()
        if include_optional:
            return ClientStatusResponse(
                config = [
                    openapi_client.models.client_config.ClientConfig(
                        client_scope = '', 
                        generic_xds_configs = [
                            openapi_client.models.generic_xds_config.GenericXdsConfig(
                                client_status = 'UNKNOWN', 
                                config_status = 'UNKNOWN', 
                                error_state = openapi_client.models.update_failure_state.UpdateFailureState(
                                    details = '', 
                                    failed_configuration = {
                                        'key' : null
                                        }, 
                                    last_update_attempt = '', 
                                    version_info = '', ), 
                                is_static_resource = True, 
                                last_updated = '', 
                                name = '', 
                                type_url = '', 
                                version_info = '', 
                                xds_config = {
                                    'key' : null
                                    }, )
                            ], 
                        node = openapi_client.models.node.Node(
                            client_features = [
                                ''
                                ], 
                            cluster = '', 
                            dynamic_parameters = {
                                'key' : openapi_client.models.context_params.ContextParams(
                                    params = {
                                        'key' : ''
                                        }, )
                                }, 
                            extensions = [
                                openapi_client.models.extension.Extension(
                                    category = '', 
                                    disabled = True, 
                                    name = '', 
                                    type_descriptor = '', 
                                    type_urls = [
                                        ''
                                        ], 
                                    version = openapi_client.models.build_version.BuildVersion(
                                        metadata = {
                                            'key' : null
                                            }, ), )
                                ], 
                            id = '', 
                            listening_addresses = [
                                openapi_client.models.address.Address(
                                    envoy_internal_address = openapi_client.models.envoy_internal_address.EnvoyInternalAddress(
                                        endpoint_id = '', 
                                        server_listener_name = '', ), 
                                    pipe = openapi_client.models.pipe.Pipe(
                                        mode = 56, 
                                        path = '', ), 
                                    socket_address = openapi_client.models.socket_address.SocketAddress(
                                        address = '', 
                                        ipv4_compat = True, 
                                        named_port = '', 
                                        port_value = 56, 
                                        protocol = 'TCP', 
                                        resolver_name = '', ), )
                                ], 
                            locality = openapi_client.models.locality.Locality(
                                region = '', 
                                sub_zone = '', 
                                zone = '', ), 
                            metadata = {
                                'key' : null
                                }, 
                            user_agent_build_version = openapi_client.models.build_version.BuildVersion(), 
                            user_agent_name = '', 
                            user_agent_version = '', ), 
                        xds_config = [
                            openapi_client.models.per_xds_config.PerXdsConfig(
                                client_status = 'CLIENT_UNKNOWN', 
                                cluster_config = openapi_client.models.clusters_config_dump.ClustersConfigDump(
                                    dynamic_active_clusters = [
                                        openapi_client.models.dynamic_cluster.DynamicCluster(
                                            client_status = 'UNKNOWN', 
                                            cluster = {
                                                'key' : null
                                                }, 
                                            last_updated = '', 
                                            version_info = '', )
                                        ], 
                                    dynamic_warming_clusters = [
                                        openapi_client.models.dynamic_cluster.DynamicCluster(
                                            client_status = 'UNKNOWN', 
                                            last_updated = '', 
                                            version_info = '', )
                                        ], 
                                    static_clusters = [
                                        openapi_client.models.static_cluster.StaticCluster(
                                            last_updated = '', )
                                        ], 
                                    version_info = '', ), 
                                endpoint_config = openapi_client.models.endpoints_config_dump.EndpointsConfigDump(
                                    dynamic_endpoint_configs = [
                                        openapi_client.models.dynamic_endpoint_config.DynamicEndpointConfig(
                                            client_status = 'UNKNOWN', 
                                            last_updated = '', 
                                            version_info = '', )
                                        ], 
                                    static_endpoint_configs = [
                                        openapi_client.models.static_endpoint_config.StaticEndpointConfig(
                                            last_updated = '', )
                                        ], ), 
                                listener_config = openapi_client.models.listeners_config_dump.ListenersConfigDump(
                                    dynamic_listeners = [
                                        openapi_client.models.dynamic_listener.DynamicListener(
                                            active_state = openapi_client.models.dynamic_listener_state.DynamicListenerState(
                                                last_updated = '', 
                                                listener = {
                                                    'key' : null
                                                    }, 
                                                version_info = '', ), 
                                            client_status = 'UNKNOWN', 
                                            draining_state = openapi_client.models.dynamic_listener_state.DynamicListenerState(
                                                last_updated = '', 
                                                version_info = '', ), 
                                            name = '', 
                                            warming_state = , )
                                        ], 
                                    static_listeners = [
                                        openapi_client.models.static_listener.StaticListener(
                                            last_updated = '', )
                                        ], 
                                    version_info = '', ), 
                                route_config = openapi_client.models.routes_config_dump.RoutesConfigDump(
                                    dynamic_route_configs = [
                                        openapi_client.models.dynamic_route_config.DynamicRouteConfig(
                                            client_status = 'UNKNOWN', 
                                            last_updated = '', 
                                            version_info = '', )
                                        ], 
                                    static_route_configs = [
                                        openapi_client.models.static_route_config.StaticRouteConfig(
                                            last_updated = '', )
                                        ], ), 
                                scoped_route_config = openapi_client.models.scoped_routes_config_dump.ScopedRoutesConfigDump(
                                    dynamic_scoped_route_configs = [
                                        openapi_client.models.dynamic_scoped_route_configs.DynamicScopedRouteConfigs(
                                            client_status = 'UNKNOWN', 
                                            last_updated = '', 
                                            name = '', 
                                            scoped_route_configs = [
                                                {
                                                    'key' : null
                                                    }
                                                ], 
                                            version_info = '', )
                                        ], 
                                    inline_scoped_route_configs = [
                                        openapi_client.models.inline_scoped_route_configs.InlineScopedRouteConfigs(
                                            last_updated = '', 
                                            name = '', )
                                        ], ), 
                                status = 'UNKNOWN', )
                            ], )
                    ]
            )
        else:
            return ClientStatusResponse(
        )
        """

    def testClientStatusResponse(self):
        """Test ClientStatusResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
