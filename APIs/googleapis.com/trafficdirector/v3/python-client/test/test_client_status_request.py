# coding: utf-8

"""
    Traffic Director API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.client_status_request import ClientStatusRequest

class TestClientStatusRequest(unittest.TestCase):
    """ClientStatusRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClientStatusRequest:
        """Test ClientStatusRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClientStatusRequest`
        """
        model = ClientStatusRequest()
        if include_optional:
            return ClientStatusRequest(
                exclude_resource_contents = True,
                node = openapi_client.models.node.Node(
                    client_features = [
                        ''
                        ], 
                    cluster = '', 
                    dynamic_parameters = {
                        'key' : openapi_client.models.context_params.ContextParams(
                            params = {
                                'key' : ''
                                }, )
                        }, 
                    extensions = [
                        openapi_client.models.extension.Extension(
                            category = '', 
                            disabled = True, 
                            name = '', 
                            type_descriptor = '', 
                            type_urls = [
                                ''
                                ], 
                            version = openapi_client.models.build_version.BuildVersion(
                                metadata = {
                                    'key' : null
                                    }, ), )
                        ], 
                    id = '', 
                    listening_addresses = [
                        openapi_client.models.address.Address(
                            envoy_internal_address = openapi_client.models.envoy_internal_address.EnvoyInternalAddress(
                                endpoint_id = '', 
                                server_listener_name = '', ), 
                            pipe = openapi_client.models.pipe.Pipe(
                                mode = 56, 
                                path = '', ), 
                            socket_address = openapi_client.models.socket_address.SocketAddress(
                                address = '', 
                                ipv4_compat = True, 
                                named_port = '', 
                                port_value = 56, 
                                protocol = 'TCP', 
                                resolver_name = '', ), )
                        ], 
                    locality = openapi_client.models.locality.Locality(
                        region = '', 
                        sub_zone = '', 
                        zone = '', ), 
                    metadata = {
                        'key' : null
                        }, 
                    user_agent_build_version = openapi_client.models.build_version.BuildVersion(), 
                    user_agent_name = '', 
                    user_agent_version = '', ),
                node_matchers = [
                    openapi_client.models.node_matcher.NodeMatcher(
                        node_id = openapi_client.models.string_matcher.StringMatcher(
                            contains = '', 
                            exact = '', 
                            ignore_case = True, 
                            prefix = '', 
                            safe_regex = openapi_client.models.regex_matcher.RegexMatcher(
                                google_re2 = openapi_client.models.google_re2.GoogleRE2(
                                    max_program_size = 56, ), 
                                regex = '', ), 
                            suffix = '', ), 
                        node_metadatas = [
                            openapi_client.models.struct_matcher.StructMatcher(
                                path = [
                                    openapi_client.models.path_segment.PathSegment(
                                        key = '', )
                                    ], 
                                value = openapi_client.models.value_matcher.ValueMatcher(
                                    bool_match = True, 
                                    double_match = openapi_client.models.double_matcher.DoubleMatcher(
                                        exact = 1.337, 
                                        range = openapi_client.models.double_range.DoubleRange(
                                            end = 1.337, 
                                            start = 1.337, ), ), 
                                    list_match = openapi_client.models.list_matcher.ListMatcher(
                                        one_of = openapi_client.models.value_matcher.ValueMatcher(
                                            bool_match = True, 
                                            null_match = openapi_client.models.null_match.NullMatch(), 
                                            or_match = openapi_client.models.or_matcher.OrMatcher(
                                                value_matchers = [
                                                    
                                                    ], ), 
                                            present_match = True, 
                                            string_match = openapi_client.models.string_matcher.StringMatcher(
                                                contains = '', 
                                                exact = '', 
                                                ignore_case = True, 
                                                prefix = '', 
                                                suffix = '', ), ), ), 
                                    null_match = openapi_client.models.null_match.NullMatch(), 
                                    or_match = openapi_client.models.or_matcher.OrMatcher(), 
                                    present_match = True, 
                                    string_match = , ), )
                            ], )
                    ]
            )
        else:
            return ClientStatusRequest(
        )
        """

    def testClientStatusRequest(self):
        """Test ClientStatusRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
