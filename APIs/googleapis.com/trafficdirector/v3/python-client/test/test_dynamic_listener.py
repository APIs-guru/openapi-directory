# coding: utf-8

"""
    Traffic Director API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dynamic_listener import DynamicListener

class TestDynamicListener(unittest.TestCase):
    """DynamicListener unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DynamicListener:
        """Test DynamicListener
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DynamicListener`
        """
        model = DynamicListener()
        if include_optional:
            return DynamicListener(
                active_state = openapi_client.models.dynamic_listener_state.DynamicListenerState(
                    last_updated = '', 
                    listener = {
                        'key' : null
                        }, 
                    version_info = '', ),
                client_status = 'UNKNOWN',
                draining_state = openapi_client.models.dynamic_listener_state.DynamicListenerState(
                    last_updated = '', 
                    listener = {
                        'key' : null
                        }, 
                    version_info = '', ),
                error_state = openapi_client.models.update_failure_state.UpdateFailureState(
                    details = '', 
                    failed_configuration = {
                        'key' : null
                        }, 
                    last_update_attempt = '', 
                    version_info = '', ),
                name = '',
                warming_state = openapi_client.models.dynamic_listener_state.DynamicListenerState(
                    last_updated = '', 
                    listener = {
                        'key' : null
                        }, 
                    version_info = '', )
            )
        else:
            return DynamicListener(
        )
        """

    def testDynamicListener(self):
        """Test DynamicListener"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
