# coding: utf-8

"""
    Cloud Scheduler API

    Creates and manages jobs run on a regular recurring schedule.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job import Job

class TestJob(unittest.TestCase):
    """Job unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Job:
        """Test Job
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Job`
        """
        model = Job()
        if include_optional:
            return Job(
                app_engine_http_target = openapi_client.models.app_engine_http_target.AppEngineHttpTarget(
                    app_engine_routing = openapi_client.models.app_engine_routing.AppEngineRouting(
                        host = '', 
                        instance = '', 
                        service = '', 
                        version = '', ), 
                    body = 'YQ==', 
                    headers = {
                        'key' : ''
                        }, 
                    http_method = 'HTTP_METHOD_UNSPECIFIED', 
                    relative_uri = '', ),
                attempt_deadline = '',
                description = '',
                http_target = openapi_client.models.http_target.HttpTarget(
                    body = 'YQ==', 
                    headers = {
                        'key' : ''
                        }, 
                    http_method = 'HTTP_METHOD_UNSPECIFIED', 
                    oauth_token = openapi_client.models.o_auth_token.OAuthToken(
                        scope = '', 
                        service_account_email = '', ), 
                    oidc_token = openapi_client.models.oidc_token.OidcToken(
                        audience = '', 
                        service_account_email = '', ), 
                    uri = '', ),
                last_attempt_time = '',
                name = '',
                pubsub_target = openapi_client.models.pubsub_target.PubsubTarget(
                    attributes = {
                        'key' : ''
                        }, 
                    data = 'YQ==', 
                    topic_name = '', ),
                retry_config = openapi_client.models.retry_config.RetryConfig(
                    max_backoff_duration = '', 
                    max_doublings = 56, 
                    max_retry_duration = '', 
                    min_backoff_duration = '', 
                    retry_count = 56, ),
                schedule = '',
                schedule_time = '',
                state = 'STATE_UNSPECIFIED',
                status = openapi_client.models.status.Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                time_zone = '',
                user_update_time = ''
            )
        else:
            return Job(
        )
        """

    def testJob(self):
        """Test Job"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
