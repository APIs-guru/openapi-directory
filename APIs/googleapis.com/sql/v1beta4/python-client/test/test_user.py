# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1beta4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user import User

class TestUser(unittest.TestCase):
    """User unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> User:
        """Test User
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `User`
        """
        model = User()
        if include_optional:
            return User(
                dual_password_type = 'DUAL_PASSWORD_TYPE_UNSPECIFIED',
                etag = '',
                host = '',
                instance = '',
                kind = '',
                name = '',
                password = '',
                password_policy = openapi_client.models.user_password_validation_policy.UserPasswordValidationPolicy(
                    allowed_failed_attempts = 56, 
                    enable_failed_attempts_check = True, 
                    enable_password_verification = True, 
                    password_expiration_duration = '', 
                    status = openapi_client.models.password_status.PasswordStatus(
                        locked = True, 
                        password_expiration_time = '', ), ),
                project = '',
                sqlserver_user_details = openapi_client.models.sql_server_user_details.SqlServerUserDetails(
                    disabled = True, 
                    server_roles = [
                        ''
                        ], ),
                type = 'BUILT_IN'
            )
        else:
            return User(
        )
        """

    def testUser(self):
        """Test User"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
