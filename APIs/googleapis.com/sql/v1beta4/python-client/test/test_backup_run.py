# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1beta4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.backup_run import BackupRun

class TestBackupRun(unittest.TestCase):
    """BackupRun unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BackupRun:
        """Test BackupRun
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BackupRun`
        """
        model = BackupRun()
        if include_optional:
            return BackupRun(
                backup_kind = 'SQL_BACKUP_KIND_UNSPECIFIED',
                description = '',
                disk_encryption_configuration = openapi_client.models.disk_encryption_configuration.DiskEncryptionConfiguration(
                    kind = '', 
                    kms_key_name = '', ),
                disk_encryption_status = openapi_client.models.disk_encryption_status.DiskEncryptionStatus(
                    kind = '', 
                    kms_key_version_name = '', ),
                end_time = '',
                enqueued_time = '',
                error = openapi_client.models.operation_error.OperationError(
                    code = '', 
                    kind = '', 
                    message = '', ),
                id = '',
                instance = '',
                kind = '',
                location = '',
                self_link = '',
                start_time = '',
                status = 'SQL_BACKUP_RUN_STATUS_UNSPECIFIED',
                time_zone = '',
                type = 'SQL_BACKUP_RUN_TYPE_UNSPECIFIED',
                window_start_time = ''
            )
        else:
            return BackupRun(
        )
        """

    def testBackupRun(self):
        """Test BackupRun"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
