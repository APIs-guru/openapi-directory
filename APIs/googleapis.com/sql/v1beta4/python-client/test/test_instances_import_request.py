# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1beta4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.instances_import_request import InstancesImportRequest

class TestInstancesImportRequest(unittest.TestCase):
    """InstancesImportRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InstancesImportRequest:
        """Test InstancesImportRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InstancesImportRequest`
        """
        model = InstancesImportRequest()
        if include_optional:
            return InstancesImportRequest(
                import_context = openapi_client.models.import_context.ImportContext(
                    bak_import_options = openapi_client.models.import_context_bak_import_options.ImportContext_bakImportOptions(
                        bak_type = 'BAK_TYPE_UNSPECIFIED', 
                        encryption_options = openapi_client.models.import_context_bak_import_options_encryption_options.ImportContext_bakImportOptions_encryptionOptions(
                            cert_path = '', 
                            pvk_password = '', 
                            pvk_path = '', ), 
                        no_recovery = True, 
                        recovery_only = True, 
                        stop_at = '', 
                        stop_at_mark = '', 
                        striped = True, ), 
                    csv_import_options = openapi_client.models.import_context_csv_import_options.ImportContext_csvImportOptions(
                        columns = [
                            ''
                            ], 
                        escape_character = '', 
                        fields_terminated_by = '', 
                        lines_terminated_by = '', 
                        quote_character = '', 
                        table = '', ), 
                    database = '', 
                    file_type = 'SQL_FILE_TYPE_UNSPECIFIED', 
                    import_user = '', 
                    kind = '', 
                    uri = '', )
            )
        else:
            return InstancesImportRequest(
        )
        """

    def testInstancesImportRequest(self):
        """Test InstancesImportRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
