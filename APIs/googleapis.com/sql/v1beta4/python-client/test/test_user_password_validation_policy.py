# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1beta4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_password_validation_policy import UserPasswordValidationPolicy

class TestUserPasswordValidationPolicy(unittest.TestCase):
    """UserPasswordValidationPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserPasswordValidationPolicy:
        """Test UserPasswordValidationPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserPasswordValidationPolicy`
        """
        model = UserPasswordValidationPolicy()
        if include_optional:
            return UserPasswordValidationPolicy(
                allowed_failed_attempts = 56,
                enable_failed_attempts_check = True,
                enable_password_verification = True,
                password_expiration_duration = '',
                status = openapi_client.models.password_status.PasswordStatus(
                    locked = True, 
                    password_expiration_time = '', )
            )
        else:
            return UserPasswordValidationPolicy(
        )
        """

    def testUserPasswordValidationPolicy(self):
        """Test UserPasswordValidationPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
