# coding: utf-8

"""
    Cloud SQL Admin API

    API for Cloud SQL database instance management

    The version of the OpenAPI document: v1beta4
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.operation import Operation

class TestOperation(unittest.TestCase):
    """Operation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Operation:
        """Test Operation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Operation`
        """
        model = Operation()
        if include_optional:
            return Operation(
                api_warning = openapi_client.models.api_warning.ApiWarning(
                    code = 'SQL_API_WARNING_CODE_UNSPECIFIED', 
                    message = '', 
                    region = '', ),
                backup_context = openapi_client.models.backup_context.BackupContext(
                    backup_id = '', 
                    kind = '', ),
                end_time = '',
                error = openapi_client.models.operation_errors.OperationErrors(
                    errors = [
                        openapi_client.models.operation_error.OperationError(
                            code = '', 
                            kind = '', 
                            message = '', )
                        ], 
                    kind = '', ),
                export_context = openapi_client.models.export_context.ExportContext(
                    bak_export_options = openapi_client.models.export_context_bak_export_options.ExportContext_bakExportOptions(
                        bak_type = 'BAK_TYPE_UNSPECIFIED', 
                        copy_only = True, 
                        differential_base = True, 
                        stripe_count = 56, 
                        striped = True, ), 
                    csv_export_options = openapi_client.models.export_context_csv_export_options.ExportContext_csvExportOptions(
                        escape_character = '', 
                        fields_terminated_by = '', 
                        lines_terminated_by = '', 
                        quote_character = '', 
                        select_query = '', ), 
                    databases = [
                        ''
                        ], 
                    file_type = 'SQL_FILE_TYPE_UNSPECIFIED', 
                    kind = '', 
                    offload = True, 
                    sql_export_options = openapi_client.models.export_context_sql_export_options.ExportContext_sqlExportOptions(
                        mysql_export_options = openapi_client.models.export_context_sql_export_options_mysql_export_options.ExportContext_sqlExportOptions_mysqlExportOptions(
                            master_data = 56, ), 
                        parallel = True, 
                        schema_only = True, 
                        tables = [
                            ''
                            ], 
                        threads = 56, ), 
                    uri = '', ),
                import_context = openapi_client.models.import_context.ImportContext(
                    bak_import_options = openapi_client.models.import_context_bak_import_options.ImportContext_bakImportOptions(
                        bak_type = 'BAK_TYPE_UNSPECIFIED', 
                        encryption_options = openapi_client.models.import_context_bak_import_options_encryption_options.ImportContext_bakImportOptions_encryptionOptions(
                            cert_path = '', 
                            pvk_password = '', 
                            pvk_path = '', ), 
                        no_recovery = True, 
                        recovery_only = True, 
                        stop_at = '', 
                        stop_at_mark = '', 
                        striped = True, ), 
                    csv_import_options = openapi_client.models.import_context_csv_import_options.ImportContext_csvImportOptions(
                        columns = [
                            ''
                            ], 
                        escape_character = '', 
                        fields_terminated_by = '', 
                        lines_terminated_by = '', 
                        quote_character = '', 
                        table = '', ), 
                    database = '', 
                    file_type = 'SQL_FILE_TYPE_UNSPECIFIED', 
                    import_user = '', 
                    kind = '', 
                    uri = '', ),
                insert_time = '',
                kind = '',
                name = '',
                operation_type = 'SQL_OPERATION_TYPE_UNSPECIFIED',
                self_link = '',
                start_time = '',
                status = 'SQL_OPERATION_STATUS_UNSPECIFIED',
                target_id = '',
                target_link = '',
                target_project = '',
                user = ''
            )
        else:
            return Operation(
        )
        """

    def testOperation(self):
        """Test Operation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
