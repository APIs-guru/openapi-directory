# coding: utf-8

"""
    Cloud Tasks API

    Manages the execution of large numbers of distributed requests.

    The version of the OpenAPI document: v2beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.buffer_task_response import BufferTaskResponse

class TestBufferTaskResponse(unittest.TestCase):
    """BufferTaskResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BufferTaskResponse:
        """Test BufferTaskResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BufferTaskResponse`
        """
        model = BufferTaskResponse()
        if include_optional:
            return BufferTaskResponse(
                task = openapi_client.models.task.Task(
                    app_engine_http_request = openapi_client.models.app_engine_http_request.AppEngineHttpRequest(
                        app_engine_routing = openapi_client.models.app_engine_routing.AppEngineRouting(
                            host = '', 
                            instance = '', 
                            service = '', 
                            version = '', ), 
                        body = 'YQ==', 
                        headers = {
                            'key' : ''
                            }, 
                        http_method = 'HTTP_METHOD_UNSPECIFIED', 
                        relative_uri = '', ), 
                    create_time = '', 
                    dispatch_count = 56, 
                    dispatch_deadline = '', 
                    first_attempt = openapi_client.models.attempt.Attempt(
                        dispatch_time = '', 
                        response_status = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        response_time = '', 
                        schedule_time = '', ), 
                    http_request = openapi_client.models.http_request.HttpRequest(
                        body = 'YQ==', 
                        http_method = 'HTTP_METHOD_UNSPECIFIED', 
                        oauth_token = openapi_client.models.o_auth_token.OAuthToken(
                            scope = '', 
                            service_account_email = '', ), 
                        oidc_token = openapi_client.models.oidc_token.OidcToken(
                            audience = '', 
                            service_account_email = '', ), 
                        url = '', ), 
                    last_attempt = openapi_client.models.attempt.Attempt(
                        dispatch_time = '', 
                        response_time = '', 
                        schedule_time = '', ), 
                    name = '', 
                    pull_message = openapi_client.models.pull_message.PullMessage(
                        payload = 'YQ==', 
                        tag = '', ), 
                    response_count = 56, 
                    schedule_time = '', 
                    view = 'VIEW_UNSPECIFIED', )
            )
        else:
            return BufferTaskResponse(
        )
        """

    def testBufferTaskResponse(self):
        """Test BufferTaskResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
