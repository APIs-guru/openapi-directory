# coding: utf-8

"""
    Cloud Tasks API

    Manages the execution of large numbers of distributed requests.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.queue import Queue

class TestQueue(unittest.TestCase):
    """Queue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Queue:
        """Test Queue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Queue`
        """
        model = Queue()
        if include_optional:
            return Queue(
                app_engine_routing_override = openapi_client.models.app_engine_routing.AppEngineRouting(
                    host = '', 
                    instance = '', 
                    service = '', 
                    version = '', ),
                http_target = openapi_client.models.http_target.HttpTarget(
                    header_overrides = [
                        openapi_client.models.header_override.HeaderOverride(
                            header = openapi_client.models.header.Header(
                                key = '', 
                                value = '', ), )
                        ], 
                    http_method = 'HTTP_METHOD_UNSPECIFIED', 
                    oauth_token = openapi_client.models.o_auth_token.OAuthToken(
                        scope = '', 
                        service_account_email = '', ), 
                    oidc_token = openapi_client.models.oidc_token.OidcToken(
                        audience = '', 
                        service_account_email = '', ), 
                    uri_override = openapi_client.models.uri_override.UriOverride(
                        host = '', 
                        path_override = openapi_client.models.path_override.PathOverride(
                            path = '', ), 
                        port = '', 
                        query_override = openapi_client.models.query_override.QueryOverride(
                            query_params = '', ), 
                        scheme = 'SCHEME_UNSPECIFIED', 
                        uri_override_enforce_mode = 'URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED', ), ),
                name = '',
                purge_time = '',
                rate_limits = openapi_client.models.rate_limits.RateLimits(
                    max_burst_size = 56, 
                    max_concurrent_dispatches = 56, 
                    max_dispatches_per_second = 1.337, ),
                retry_config = openapi_client.models.retry_config.RetryConfig(
                    max_attempts = 56, 
                    max_backoff = '', 
                    max_doublings = 56, 
                    max_retry_duration = '', 
                    min_backoff = '', ),
                stackdriver_logging_config = openapi_client.models.stackdriver_logging_config.StackdriverLoggingConfig(
                    sampling_ratio = 1.337, ),
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return Queue(
        )
        """

    def testQueue(self):
        """Test Queue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
