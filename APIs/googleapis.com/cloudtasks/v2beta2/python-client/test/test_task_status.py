# coding: utf-8

"""
    Cloud Tasks API

    Manages the execution of large numbers of distributed requests.

    The version of the OpenAPI document: v2beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.task_status import TaskStatus

class TestTaskStatus(unittest.TestCase):
    """TaskStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TaskStatus:
        """Test TaskStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TaskStatus`
        """
        model = TaskStatus()
        if include_optional:
            return TaskStatus(
                attempt_dispatch_count = 56,
                attempt_response_count = 56,
                first_attempt_status = openapi_client.models.attempt_status.AttemptStatus(
                    dispatch_time = '', 
                    response_status = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    response_time = '', 
                    schedule_time = '', ),
                last_attempt_status = openapi_client.models.attempt_status.AttemptStatus(
                    dispatch_time = '', 
                    response_status = openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', ), 
                    response_time = '', 
                    schedule_time = '', )
            )
        else:
            return TaskStatus(
        )
        """

    def testTaskStatus(self):
        """Test TaskStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
