# coding: utf-8

"""
    Service Consumer Management API

    Manages the service consumers of a Service Infrastructure service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_tenancy_units_response import SearchTenancyUnitsResponse

class TestSearchTenancyUnitsResponse(unittest.TestCase):
    """SearchTenancyUnitsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchTenancyUnitsResponse:
        """Test SearchTenancyUnitsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchTenancyUnitsResponse`
        """
        model = SearchTenancyUnitsResponse()
        if include_optional:
            return SearchTenancyUnitsResponse(
                next_page_token = '',
                tenancy_units = [
                    openapi_client.models.tenancy_unit.TenancyUnit(
                        consumer = '', 
                        create_time = '', 
                        name = '', 
                        service = '', 
                        tenant_resources = [
                            openapi_client.models.tenant_resource.TenantResource(
                                resource = '', 
                                status = 'STATUS_UNSPECIFIED', 
                                tag = '', )
                            ], )
                    ]
            )
        else:
            return SearchTenancyUnitsResponse(
        )
        """

    def testSearchTenancyUnitsResponse(self):
        """Test SearchTenancyUnitsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
