# coding: utf-8

"""
    Service Consumer Management API

    Manages the service consumers of a Service Infrastructure service.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.custom_error import CustomError

class TestCustomError(unittest.TestCase):
    """CustomError unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomError:
        """Test CustomError
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomError`
        """
        model = CustomError()
        if include_optional:
            return CustomError(
                rules = [
                    openapi_client.models.custom_error_rule.CustomErrorRule(
                        is_error_type = True, 
                        selector = '', )
                    ],
                types = [
                    ''
                    ]
            )
        else:
            return CustomError(
        )
        """

    def testCustomError(self):
        """Test CustomError"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
