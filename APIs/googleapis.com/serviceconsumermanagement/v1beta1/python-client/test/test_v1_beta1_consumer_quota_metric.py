# coding: utf-8

"""
    Service Consumer Management API

    Manages the service consumers of a Service Infrastructure service.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v1_beta1_consumer_quota_metric import V1Beta1ConsumerQuotaMetric

class TestV1Beta1ConsumerQuotaMetric(unittest.TestCase):
    """V1Beta1ConsumerQuotaMetric unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V1Beta1ConsumerQuotaMetric:
        """Test V1Beta1ConsumerQuotaMetric
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V1Beta1ConsumerQuotaMetric`
        """
        model = V1Beta1ConsumerQuotaMetric()
        if include_optional:
            return V1Beta1ConsumerQuotaMetric(
                consumer_quota_limits = [
                    openapi_client.models.v1_beta1_consumer_quota_limit.V1Beta1ConsumerQuotaLimit(
                        is_precise = True, 
                        metric = '', 
                        name = '', 
                        quota_buckets = [
                            openapi_client.models.v1_beta1_quota_bucket.V1Beta1QuotaBucket(
                                admin_override = openapi_client.models.v1_beta1_quota_override.V1Beta1QuotaOverride(
                                    admin_override_ancestor = '', 
                                    dimensions = {
                                        'key' : ''
                                        }, 
                                    metric = '', 
                                    name = '', 
                                    override_value = '', 
                                    unit = '', ), 
                                consumer_override = openapi_client.models.v1_beta1_quota_override.V1Beta1QuotaOverride(
                                    admin_override_ancestor = '', 
                                    metric = '', 
                                    name = '', 
                                    override_value = '', 
                                    unit = '', ), 
                                default_limit = '', 
                                dimensions = {
                                    'key' : ''
                                    }, 
                                effective_limit = '', 
                                producer_override = , 
                                producer_quota_policy = openapi_client.models.v1_beta1_producer_quota_policy.V1Beta1ProducerQuotaPolicy(
                                    container = '', 
                                    metric = '', 
                                    name = '', 
                                    policy_value = '', 
                                    unit = '', ), )
                            ], 
                        supported_locations = [
                            ''
                            ], 
                        unit = '', )
                    ],
                descendant_consumer_quota_limits = [
                    openapi_client.models.v1_beta1_consumer_quota_limit.V1Beta1ConsumerQuotaLimit(
                        is_precise = True, 
                        metric = '', 
                        name = '', 
                        quota_buckets = [
                            openapi_client.models.v1_beta1_quota_bucket.V1Beta1QuotaBucket(
                                admin_override = openapi_client.models.v1_beta1_quota_override.V1Beta1QuotaOverride(
                                    admin_override_ancestor = '', 
                                    dimensions = {
                                        'key' : ''
                                        }, 
                                    metric = '', 
                                    name = '', 
                                    override_value = '', 
                                    unit = '', ), 
                                consumer_override = openapi_client.models.v1_beta1_quota_override.V1Beta1QuotaOverride(
                                    admin_override_ancestor = '', 
                                    metric = '', 
                                    name = '', 
                                    override_value = '', 
                                    unit = '', ), 
                                default_limit = '', 
                                dimensions = {
                                    'key' : ''
                                    }, 
                                effective_limit = '', 
                                producer_override = , 
                                producer_quota_policy = openapi_client.models.v1_beta1_producer_quota_policy.V1Beta1ProducerQuotaPolicy(
                                    container = '', 
                                    metric = '', 
                                    name = '', 
                                    policy_value = '', 
                                    unit = '', ), )
                            ], 
                        supported_locations = [
                            ''
                            ], 
                        unit = '', )
                    ],
                display_name = '',
                metric = '',
                name = '',
                unit = ''
            )
        else:
            return V1Beta1ConsumerQuotaMetric(
        )
        """

    def testV1Beta1ConsumerQuotaMetric(self):
        """Test V1Beta1ConsumerQuotaMetric"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
