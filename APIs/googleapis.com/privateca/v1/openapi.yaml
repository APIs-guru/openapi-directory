openapi: 3.0.0
servers:
  - url: https://privateca.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Certificate Authority API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: openapi
      url: https://privateca.googleapis.com/$discovery/rest?version=v1
      version: "3.0"
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: privateca
externalDocs:
  url: https://cloud.google.com/
tags:
  - name: projects
paths:
  /v1/{caPool}:fetchCaCerts:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: FetchCaCerts returns the current trust anchor for the CaPool. This will include CA certificate chains for all Certificate Authorities in the ENABLED, DISABLED, or STAGED states.
      operationId: privateca.projects.locations.caPools.fetchCaCerts
      parameters:
        - description: Required. The resource name for the CaPool in the format `projects/*/locations/*/caPools/*`.
          in: path
          name: caPool
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FetchCaCertsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchCaCertsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: privateca.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. This field allows this ca to be deleted even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the CA will no longer be able to issue certificates.
          in: query
          name: ignoreDependentResources
          schema:
            type: boolean
        - description: Optional. If this flag is set, the Certificate Authority will be deleted as soon as possible without a 30-day grace period where undeletion would have been allowed. If you proceed, there will be no way to recover this CA.
          in: query
          name: skipGracePeriod
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.
      operationId: privateca.projects.locations.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Update a CertificateTemplate.
      operationId: privateca.projects.locations.certificateTemplates.patch
      parameters:
        - description: Output only. The resource name for this CertificateTemplate in the format `projects/*/locations/*/certificateTemplates/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. A list of fields to be updated in this request.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: privateca.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: privateca.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:activate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Activate a CertificateAuthority that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.activate
      parameters:
        - description: Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateCertificateAuthorityRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: privateca.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:disable:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Disable a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.disable
      parameters:
        - description: Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DisableCertificateAuthorityRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:enable:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Enable a CertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.enable
      parameters:
        - description: Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EnableCertificateAuthorityRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:fetch:
    get:
      description: Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state AWAITING_USER_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.fetch
      parameters:
        - description: Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FetchCertificateAuthorityCsrResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:revoke:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Revoke a Certificate.
      operationId: privateca.projects.locations.caPools.certificates.revoke
      parameters:
        - description: Required. The resource name for this Certificate in the format `projects/*/locations/*/caPools/*/certificates/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RevokeCertificateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:undelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Undelete a CertificateAuthority that has been deleted.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.undelete
      parameters:
        - description: Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeleteCertificateAuthorityRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/caPools:
    get:
      description: Lists CaPools.
      operationId: privateca.projects.locations.caPools.list
      parameters:
        - description: Required. The resource name of the location associated with the CaPools, in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only include resources that match the filter in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Specify how the results should be sorted.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Limit on the number of CaPools to include in the response. Further CaPools can subsequently be obtained by including the ListCaPoolsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Pagination token, returned earlier via ListCaPoolsResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCaPoolsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a CaPool.
      operationId: privateca.projects.locations.caPools.create
      parameters:
        - description: Required. The resource name of the location associated with the CaPool, in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
          in: query
          name: caPoolId
          schema:
            type: string
        - description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaPool"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificateAuthorities:
    get:
      description: Lists CertificateAuthorities.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.list
      parameters:
        - description: Required. The resource name of the CaPool associated with the CertificateAuthorities, in the format `projects/*/locations/*/caPools/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only include resources that match the filter in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Specify how the results should be sorted.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Limit on the number of CertificateAuthorities to include in the response. Further CertificateAuthorities can subsequently be obtained by including the ListCertificateAuthoritiesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Pagination token, returned earlier via ListCertificateAuthoritiesResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificateAuthoritiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a new CertificateAuthority in a given Project and Location.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.create
      parameters:
        - description: Required. The resource name of the CaPool associated with the CertificateAuthorities, in the format `projects/*/locations/*/caPools/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
          in: query
          name: certificateAuthorityId
          schema:
            type: string
        - description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateAuthority"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificateRevocationLists:
    get:
      description: Lists CertificateRevocationLists.
      operationId: privateca.projects.locations.caPools.certificateAuthorities.certificateRevocationLists.list
      parameters:
        - description: Required. The resource name of the location associated with the CertificateRevocationLists, in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only include resources that match the filter in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Specify how the results should be sorted.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Limit on the number of CertificateRevocationLists to include in the response. Further CertificateRevocationLists can subsequently be obtained by including the ListCertificateRevocationListsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Pagination token, returned earlier via ListCertificateRevocationListsResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificateRevocationListsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/certificateTemplates:
    get:
      description: Lists CertificateTemplates.
      operationId: privateca.projects.locations.certificateTemplates.list
      parameters:
        - description: Required. The resource name of the location associated with the CertificateTemplates, in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only include resources that match the filter in the response.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Specify how the results should be sorted.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Limit on the number of CertificateTemplates to include in the response. Further CertificateTemplates can subsequently be obtained by including the ListCertificateTemplatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Pagination token, returned earlier via ListCertificateTemplatesResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificateTemplatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a new CertificateTemplate in a given Project and Location.
      operationId: privateca.projects.locations.certificateTemplates.create
      parameters:
        - description: Required. The resource name of the location associated with the CertificateTemplate, in the format `projects/*/locations/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`
          in: query
          name: certificateTemplateId
          schema:
            type: string
        - description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CertificateTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/certificates:
    get:
      description: Lists Certificates.
      operationId: privateca.projects.locations.caPools.certificates.list
      parameters:
        - description: Required. The resource name of the location associated with the Certificates, in the format `projects/*/locations/*/caPools/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Only include resources that match the filter in the response. For details on supported filters and syntax, see [Certificates Filtering documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support).
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Specify how the results should be sorted. For details on supported fields and syntax, see [Certificates Sorting documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support).
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. Limit on the number of Certificates to include in the response. Further Certificates can subsequently be obtained by including the ListCertificatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Pagination token, returned earlier via ListCertificatesResponse.next_page_token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCertificatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a new Certificate in a given Project, Location from a particular CaPool.
      operationId: privateca.projects.locations.caPools.certificates.create
      parameters:
        - description: Required. The resource name of the CaPool associated with the Certificate, in the format `projects/*/locations/*/caPools/*`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`. This field is required when using a CertificateAuthority in the Enterprise CertificateAuthority.Tier, but is optional and its value is ignored otherwise.
          in: query
          name: certificateId
          schema:
            type: string
        - description: Optional. The resource ID of the CertificateAuthority that should issue the certificate. This optional field will ignore the load-balancing scheme of the Pool and directly issue the certificate from the CA with the specified ID, contained in the same CaPool referenced by `parent`. Per-CA quota rules apply. If left empty, a CertificateAuthority will be chosen from the CaPool by the service. For example, to issue a Certificate from a Certificate Authority with resource name "projects/my-project/locations/us-central1/caPools/my-pool/certificateAuthorities/my-ca", you can set the parent to "projects/my-project/locations/us-central1/caPools/my-pool" and the issuing_certificate_authority_id to "my-ca".
          in: query
          name: issuingCertificateAuthorityId
          schema:
            type: string
        - description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If this is true, no Certificate resource will be persisted regardless of the CaPool's tier, and the returned Certificate will not contain the pem_certificate field.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Certificate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Certificate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: privateca.projects.locations.certificateTemplates.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: privateca.projects.locations.certificateTemplates.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: privateca.projects.locations.certificateTemplates.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AccessUrls:
      description: URLs where a CertificateAuthority will publish content.
      properties:
        caCertificateAccessUrl:
          description: The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated.
          type: string
        crlAccessUrls:
          description: The URLs where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated.
          items:
            type: string
          type: array
      type: object
    ActivateCertificateAuthorityRequest:
      description: Request message for CertificateAuthorityService.ActivateCertificateAuthority.
      properties:
        pemCaCertificate:
          description: Required. The signed CA certificate issued from FetchCertificateAuthorityCsrResponse.pem_csr.
          type: string
        requestId:
          description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
        subordinateConfig:
          $ref: "#/components/schemas/SubordinateConfig"
          description: Required. Must include information about the issuer of 'pem_ca_certificate', and any further issuers until the self-signed CA.
      type: object
    AllowedKeyType:
      description: Describes a "type" of key that may be used in a Certificate issued from a CaPool. Note that a single AllowedKeyType may refer to either a fully-qualified key algorithm, such as RSA 4096, or a family of key algorithms, such as any RSA key.
      properties:
        ellipticCurve:
          $ref: "#/components/schemas/EcKeyType"
          description: Represents an allowed Elliptic Curve key type.
        rsa:
          $ref: "#/components/schemas/RsaKeyType"
          description: Represents an allowed RSA key type.
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    CaOptions:
      description: Describes values that are relevant in a CA certificate.
      properties:
        isCa:
          description: Optional. Refers to the "CA" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate.
          type: boolean
        maxIssuerPathLength:
          description: Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.
          format: int32
          type: integer
      type: object
    CaPool:
      description: A CaPool represents a group of CertificateAuthorities that form a trust anchor. A CaPool can be used to manage issuance policies for one or more CertificateAuthority resources and to rotate CA certificates in and out of the trust anchor.
      properties:
        issuancePolicy:
          $ref: "#/components/schemas/IssuancePolicy"
          description: Optional. The IssuancePolicy to control how Certificates will be issued from this CaPool.
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels with user-defined metadata.
          type: object
        name:
          description: Output only. The resource name for this CaPool in the format `projects/*/locations/*/caPools/*`.
          readOnly: true
          type: string
        publishingOptions:
          $ref: "#/components/schemas/PublishingOptions"
          description: Optional. The PublishingOptions to follow when issuing Certificates from any CertificateAuthority in this CaPool.
        tier:
          description: Required. Immutable. The Tier of this CaPool.
          enum:
            - TIER_UNSPECIFIED
            - ENTERPRISE
            - DEVOPS
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CertChain:
      properties:
        certificates:
          description: The certificates that form the CA chain, from leaf to root order.
          items:
            type: string
          type: array
      type: object
    Certificate:
      description: A Certificate corresponds to a signed X.509 certificate issued by a CertificateAuthority.
      properties:
        certificateDescription:
          $ref: "#/components/schemas/CertificateDescription"
          description: Output only. A structured description of the issued X.509 certificate.
          readOnly: true
        certificateTemplate:
          description: Immutable. The resource name for a CertificateTemplate used to issue this certificate, in the format `projects/*/locations/*/certificateTemplates/*`. If this is specified, the caller must have the necessary permission to use this template. If this is omitted, no template will be used. This template must be in the same location as the Certificate.
          type: string
        config:
          $ref: "#/components/schemas/CertificateConfig"
          description: Immutable. A description of the certificate and key that does not require X.509 or ASN.1.
        createTime:
          description: Output only. The time at which this Certificate was created.
          format: google-datetime
          readOnly: true
          type: string
        issuerCertificateAuthority:
          description: Output only. The resource name of the issuing CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels with user-defined metadata.
          type: object
        lifetime:
          description: Required. Immutable. The desired lifetime of a certificate. Used to create the "not_before_time" and "not_after_time" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain.
          format: google-duration
          type: string
        name:
          description: Output only. The resource name for this Certificate in the format `projects/*/locations/*/caPools/*/certificates/*`.
          readOnly: true
          type: string
        pemCertificate:
          description: Output only. The pem-encoded, signed X.509 certificate.
          readOnly: true
          type: string
        pemCertificateChain:
          description: Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.
          items:
            type: string
          readOnly: true
          type: array
        pemCsr:
          description: Immutable. A pem-encoded X.509 certificate signing request (CSR).
          type: string
        revocationDetails:
          $ref: "#/components/schemas/RevocationDetails"
          description: Output only. Details regarding the revocation of this Certificate. This Certificate is considered revoked if and only if this field is present.
          readOnly: true
        subjectMode:
          description: Immutable. Specifies how the Certificate's identity fields are to be decided. If this is omitted, the `DEFAULT` subject mode will be used.
          enum:
            - SUBJECT_REQUEST_MODE_UNSPECIFIED
            - DEFAULT
            - REFLECTED_SPIFFE
          type: string
        updateTime:
          description: Output only. The time at which this Certificate was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CertificateAuthority:
      description: A CertificateAuthority represents an individual Certificate Authority. A CertificateAuthority can be used to create Certificates.
      properties:
        accessUrls:
          $ref: "#/components/schemas/AccessUrls"
          description: Output only. URLs for accessing content published by this CA, such as the CA certificate and CRLs.
          readOnly: true
        caCertificateDescriptions:
          description: Output only. A structured description of this CertificateAuthority's CA certificate and its issuers. Ordered as self-to-root.
          items:
            $ref: "#/components/schemas/CertificateDescription"
          readOnly: true
          type: array
        config:
          $ref: "#/components/schemas/CertificateConfig"
          description: Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.
        createTime:
          description: Output only. The time at which this CertificateAuthority was created.
          format: google-datetime
          readOnly: true
          type: string
        deleteTime:
          description: Output only. The time at which this CertificateAuthority was soft deleted, if it is in the DELETED state.
          format: google-datetime
          readOnly: true
          type: string
        expireTime:
          description: Output only. The time at which this CertificateAuthority will be permanently purged, if it is in the DELETED state.
          format: google-datetime
          readOnly: true
          type: string
        gcsBucket:
          description: Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be created.
          type: string
        keySpec:
          $ref: "#/components/schemas/KeyVersionSpec"
          description: Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR.
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels with user-defined metadata.
          type: object
        lifetime:
          description: Required. Immutable. The desired lifetime of the CA certificate. Used to create the "not_before_time" and "not_after_time" fields inside an X.509 certificate.
          format: google-duration
          type: string
        name:
          description: Output only. The resource name for this CertificateAuthority in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          readOnly: true
          type: string
        pemCaCertificates:
          description: Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate.
          items:
            type: string
          readOnly: true
          type: array
        state:
          description: Output only. The State for this CertificateAuthority.
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - DISABLED
            - STAGED
            - AWAITING_USER_ACTIVATION
            - DELETED
          readOnly: true
          type: string
        subordinateConfig:
          $ref: "#/components/schemas/SubordinateConfig"
          description: Optional. If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. This may be updated, but this CertificateAuthority must continue to validate.
        tier:
          description: Output only. The CaPool.Tier of the CaPool that includes this CertificateAuthority.
          enum:
            - TIER_UNSPECIFIED
            - ENTERPRISE
            - DEVOPS
          readOnly: true
          type: string
        type:
          description: Required. Immutable. The Type of this CertificateAuthority.
          enum:
            - TYPE_UNSPECIFIED
            - SELF_SIGNED
            - SUBORDINATE
          type: string
        updateTime:
          description: Output only. The time at which this CertificateAuthority was last updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CertificateConfig:
      description: A CertificateConfig describes an X.509 certificate or CSR that is to be created, as an alternative to using ASN.1.
      properties:
        publicKey:
          $ref: "#/components/schemas/PublicKey"
          description: Optional. The public key that corresponds to this config. This is, for example, used when issuing Certificates, but not when creating a self-signed CertificateAuthority or CertificateAuthority CSR.
        subjectConfig:
          $ref: "#/components/schemas/SubjectConfig"
          description: Required. Specifies some of the values in a certificate that are related to the subject.
        subjectKeyId:
          $ref: "#/components/schemas/CertificateConfigKeyId"
          description: Optional. When specified this provides a custom SKI to be used in the certificate. This should only be used to maintain a SKI of an existing CA originally created outside CAS, which was not generated using method (1) described in RFC 5280 section 4.2.1.2.
        x509Config:
          $ref: "#/components/schemas/X509Parameters"
          description: Required. Describes how some of the technical X.509 fields in a certificate should be populated.
      type: object
    CertificateConfigKeyId:
      description: A KeyId identifies a specific public key, usually by hashing the public key.
      properties:
        keyId:
          description: Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key.
          type: string
      type: object
    CertificateDescription:
      description: A CertificateDescription describes an X.509 certificate or CSR that has been issued, as an alternative to using ASN.1 / X.509.
      properties:
        aiaIssuingCertificateUrls:
          description: Describes lists of issuer CA certificate URLs that appear in the "Authority Information Access" extension in the certificate.
          items:
            type: string
          type: array
        authorityKeyId:
          $ref: "#/components/schemas/KeyId"
          description: Identifies the subject_key_id of the parent certificate, per https://tools.ietf.org/html/rfc5280#section-4.2.1.1
        certFingerprint:
          $ref: "#/components/schemas/CertificateFingerprint"
          description: The hash of the x.509 certificate.
        crlDistributionPoints:
          description: Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13
          items:
            type: string
          type: array
        publicKey:
          $ref: "#/components/schemas/PublicKey"
          description: The public key that corresponds to an issued certificate.
        subjectDescription:
          $ref: "#/components/schemas/SubjectDescription"
          description: Describes some of the values in a certificate that are related to the subject and lifetime.
        subjectKeyId:
          $ref: "#/components/schemas/KeyId"
          description: Provides a means of identifiying certificates that contain a particular public key, per https://tools.ietf.org/html/rfc5280#section-4.2.1.2.
        x509Description:
          $ref: "#/components/schemas/X509Parameters"
          description: Describes some of the technical X.509 fields in a certificate.
      type: object
    CertificateExtensionConstraints:
      description: Describes a set of X.509 extensions that may be part of some certificate issuance controls.
      properties:
        additionalExtensions:
          description: Optional. A set of ObjectIds identifying custom X.509 extensions. Will be combined with known_extensions to determine the full set of X.509 extensions.
          items:
            $ref: "#/components/schemas/ObjectId"
          type: array
        knownExtensions:
          description: Optional. A set of named X.509 extensions. Will be combined with additional_extensions to determine the full set of X.509 extensions.
          items:
            enum:
              - KNOWN_CERTIFICATE_EXTENSION_UNSPECIFIED
              - BASE_KEY_USAGE
              - EXTENDED_KEY_USAGE
              - CA_OPTIONS
              - POLICY_IDS
              - AIA_OCSP_SERVERS
              - NAME_CONSTRAINTS
            type: string
          type: array
      type: object
    CertificateFingerprint:
      description: A group of fingerprints for the x509 certificate.
      properties:
        sha256Hash:
          description: The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate.
          type: string
      type: object
    CertificateIdentityConstraints:
      description: Describes constraints on a Certificate's Subject and SubjectAltNames.
      properties:
        allowSubjectAltNamesPassthrough:
          description: Required. If this is true, the SubjectAltNames extension may be copied from a certificate request into the signed certificate. Otherwise, the requested SubjectAltNames will be discarded.
          type: boolean
        allowSubjectPassthrough:
          description: Required. If this is true, the Subject field may be copied from a certificate request into the signed certificate. Otherwise, the requested Subject will be discarded.
          type: boolean
        celExpression:
          $ref: "#/components/schemas/Expr"
          description: Optional. A CEL expression that may be used to validate the resolved X.509 Subject and/or Subject Alternative Name before a certificate is signed. To see the full allowed syntax and some examples, see https://cloud.google.com/certificate-authority-service/docs/using-cel
      type: object
    CertificateRevocationList:
      description: A CertificateRevocationList corresponds to a signed X.509 certificate Revocation List (CRL). A CRL contains the serial numbers of certificates that should no longer be trusted.
      properties:
        accessUrl:
          description: Output only. The location where 'pem_crl' can be accessed.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time at which this CertificateRevocationList was created.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels with user-defined metadata.
          type: object
        name:
          description: Output only. The resource name for this CertificateRevocationList in the format `projects/*/locations/*/caPools/*certificateAuthorities/*/ certificateRevocationLists/*`.
          readOnly: true
          type: string
        pemCrl:
          description: Output only. The PEM-encoded X.509 CRL.
          readOnly: true
          type: string
        revisionId:
          description: Output only. The revision ID of this CertificateRevocationList. A new revision is committed whenever a new CRL is published. The format is an 8-character hexadecimal string.
          readOnly: true
          type: string
        revokedCertificates:
          description: Output only. The revoked serial numbers that appear in pem_crl.
          items:
            $ref: "#/components/schemas/RevokedCertificate"
          readOnly: true
          type: array
        sequenceNumber:
          description: Output only. The CRL sequence number that appears in pem_crl.
          format: int64
          readOnly: true
          type: string
        state:
          description: Output only. The State for this CertificateRevocationList.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - SUPERSEDED
          readOnly: true
          type: string
        updateTime:
          description: Output only. The time at which this CertificateRevocationList was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CertificateTemplate:
      description: A CertificateTemplate refers to a managed template for certificate issuance.
      properties:
        createTime:
          description: Output only. The time at which this CertificateTemplate was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. A human-readable description of scenarios this template is intended for.
          type: string
        identityConstraints:
          $ref: "#/components/schemas/CertificateIdentityConstraints"
          description: Optional. Describes constraints on identities that may be appear in Certificates issued using this template. If this is omitted, then this template will not add restrictions on a certificate's identity.
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels with user-defined metadata.
          type: object
        maximumLifetime:
          description: Optional. The maximum lifetime allowed for issued Certificates that use this template. If the issuing CaPool's IssuancePolicy specifies a maximum_lifetime the minimum of the two durations will be the maximum lifetime for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it.
          format: google-duration
          type: string
        name:
          description: Output only. The resource name for this CertificateTemplate in the format `projects/*/locations/*/certificateTemplates/*`.
          readOnly: true
          type: string
        passthroughExtensions:
          $ref: "#/components/schemas/CertificateExtensionConstraints"
          description: Optional. Describes the set of X.509 extensions that may appear in a Certificate issued using this CertificateTemplate. If a certificate request sets extensions that don't appear in the passthrough_extensions, those extensions will be dropped. If the issuing CaPool's IssuancePolicy defines baseline_values that don't appear here, the certificate issuance request will fail. If this is omitted, then this template will not add restrictions on a certificate's X.509 extensions. These constraints do not apply to X.509 extensions set in this CertificateTemplate's predefined_values.
        predefinedValues:
          $ref: "#/components/schemas/X509Parameters"
          description: Optional. A set of X.509 values that will be applied to all issued certificates that use this template. If the certificate request includes conflicting values for the same properties, they will be overwritten by the values defined here. If the issuing CaPool's IssuancePolicy defines conflicting baseline_values for the same properties, the certificate issuance request will fail.
        updateTime:
          description: Output only. The time at which this CertificateTemplate was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    DisableCertificateAuthorityRequest:
      description: Request message for CertificateAuthorityService.DisableCertificateAuthority.
      properties:
        ignoreDependentResources:
          description: Optional. This field allows this CA to be disabled even if it's being depended on by another resource. However, doing so may result in unintended and unrecoverable effects on any dependent resource(s) since the CA will no longer be able to issue certificates.
          type: boolean
        requestId:
          description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    EcKeyType:
      description: Describes an Elliptic Curve key that may be used in a Certificate issued from a CaPool.
      properties:
        signatureAlgorithm:
          description: Optional. A signature algorithm that must be used. If this is omitted, any EC-based signature algorithm will be allowed.
          enum:
            - EC_SIGNATURE_ALGORITHM_UNSPECIFIED
            - ECDSA_P256
            - ECDSA_P384
            - EDDSA_25519
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EnableCertificateAuthorityRequest:
      description: Request message for CertificateAuthorityService.EnableCertificateAuthority.
      properties:
        requestId:
          description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    ExtendedKeyUsageOptions:
      description: KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain common OIDs that could be specified as an extended key usage value.
      properties:
        clientAuth:
          description: Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as "TLS WWW client authentication", though regularly used for non-WWW TLS.
          type: boolean
        codeSigning:
          description: Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as "Signing of downloadable executable code client authentication".
          type: boolean
        emailProtection:
          description: Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as "Email protection".
          type: boolean
        ocspSigning:
          description: Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as "Signing OCSP responses".
          type: boolean
        serverAuth:
          description: Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as "TLS WWW server authentication", though regularly used for non-WWW TLS.
          type: boolean
        timeStamping:
          description: Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as "Binding the hash of an object to a time".
          type: boolean
      type: object
    FetchCaCertsRequest:
      description: Request message for CertificateAuthorityService.FetchCaCerts.
      properties:
        requestId:
          description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    FetchCaCertsResponse:
      description: Response message for CertificateAuthorityService.FetchCaCerts.
      properties:
        caCerts:
          description: The PEM encoded CA certificate chains of all Certificate Authorities in this CaPool in the ENABLED, DISABLED, or STAGED states.
          items:
            $ref: "#/components/schemas/CertChain"
          type: array
      type: object
    FetchCertificateAuthorityCsrResponse:
      description: Response message for CertificateAuthorityService.FetchCertificateAuthorityCsr.
      properties:
        pemCsr:
          description: Output only. The PEM-encoded signed certificate signing request (CSR).
          readOnly: true
          type: string
      type: object
    IssuanceModes:
      description: IssuanceModes specifies the allowed ways in which Certificates may be requested from this CaPool.
      properties:
        allowConfigBasedIssuance:
          description: Optional. When true, allows callers to create Certificates by specifying a CertificateConfig.
          type: boolean
        allowCsrBasedIssuance:
          description: Optional. When true, allows callers to create Certificates by specifying a CSR.
          type: boolean
      type: object
    IssuancePolicy:
      description: Defines controls over all certificate issuance within a CaPool.
      properties:
        allowedIssuanceModes:
          $ref: "#/components/schemas/IssuanceModes"
          description: Optional. If specified, then only methods allowed in the IssuanceModes may be used to issue Certificates.
        allowedKeyTypes:
          description: Optional. If any AllowedKeyType is specified, then the certificate request's public key must match one of the key types listed here. Otherwise, any key may be used.
          items:
            $ref: "#/components/schemas/AllowedKeyType"
          type: array
        baselineValues:
          $ref: "#/components/schemas/X509Parameters"
          description: Optional. A set of X.509 values that will be applied to all certificates issued through this CaPool. If a certificate request includes conflicting values for the same properties, they will be overwritten by the values defined here. If a certificate request uses a CertificateTemplate that defines conflicting predefined_values for the same properties, the certificate issuance request will fail.
        identityConstraints:
          $ref: "#/components/schemas/CertificateIdentityConstraints"
          description: Optional. Describes constraints on identities that may appear in Certificates issued through this CaPool. If this is omitted, then this CaPool will not add restrictions on a certificate's identity.
        maximumLifetime:
          description: Optional. The maximum lifetime allowed for issued Certificates. Note that if the issuing CertificateAuthority expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated to match it.
          format: google-duration
          type: string
        passthroughExtensions:
          $ref: "#/components/schemas/CertificateExtensionConstraints"
          description: Optional. Describes the set of X.509 extensions that may appear in a Certificate issued through this CaPool. If a certificate request sets extensions that don't appear in the passthrough_extensions, those extensions will be dropped. If a certificate request uses a CertificateTemplate with predefined_values that don't appear here, the certificate issuance request will fail. If this is omitted, then this CaPool will not add restrictions on a certificate's X.509 extensions. These constraints do not apply to X.509 extensions set in this CaPool's baseline_values.
      type: object
    KeyId:
      description: A KeyId identifies a specific public key, usually by hashing the public key.
      properties:
        keyId:
          description: Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key.
          type: string
      type: object
    KeyUsage:
      description: A KeyUsage describes key usage values that may appear in an X.509 certificate.
      properties:
        baseKeyUsage:
          $ref: "#/components/schemas/KeyUsageOptions"
          description: Describes high-level ways in which a key may be used.
        extendedKeyUsage:
          $ref: "#/components/schemas/ExtendedKeyUsageOptions"
          description: Detailed scenarios in which a key may be used.
        unknownExtendedKeyUsages:
          description: Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message.
          items:
            $ref: "#/components/schemas/ObjectId"
          type: array
      type: object
    KeyUsageOptions:
      description: KeyUsage.KeyUsageOptions corresponds to the key usage values described in https://tools.ietf.org/html/rfc5280#section-4.2.1.3.
      properties:
        certSign:
          description: The key may be used to sign certificates.
          type: boolean
        contentCommitment:
          description: The key may be used for cryptographic commitments. Note that this may also be referred to as "non-repudiation".
          type: boolean
        crlSign:
          description: The key may be used sign certificate revocation lists.
          type: boolean
        dataEncipherment:
          description: The key may be used to encipher data.
          type: boolean
        decipherOnly:
          description: The key may be used to decipher only.
          type: boolean
        digitalSignature:
          description: The key may be used for digital signatures.
          type: boolean
        encipherOnly:
          description: The key may be used to encipher only.
          type: boolean
        keyAgreement:
          description: The key may be used in a key agreement protocol.
          type: boolean
        keyEncipherment:
          description: The key may be used to encipher other keys.
          type: boolean
      type: object
    KeyVersionSpec:
      description: A Cloud KMS key configuration that a CertificateAuthority will use.
      properties:
        algorithm:
          description: The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.
          enum:
            - SIGN_HASH_ALGORITHM_UNSPECIFIED
            - RSA_PSS_2048_SHA256
            - RSA_PSS_3072_SHA256
            - RSA_PSS_4096_SHA256
            - RSA_PKCS1_2048_SHA256
            - RSA_PKCS1_3072_SHA256
            - RSA_PKCS1_4096_SHA256
            - EC_P256_SHA256
            - EC_P384_SHA384
          type: string
        cloudKmsKeyVersion:
          description: The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`. This option enables full flexibility in the key's capabilities and properties.
          type: string
      type: object
    ListCaPoolsResponse:
      description: Response message for CertificateAuthorityService.ListCaPools.
      properties:
        caPools:
          description: The list of CaPools.
          items:
            $ref: "#/components/schemas/CaPool"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in ListCertificateAuthoritiesRequest.next_page_token to retrieve the next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificateAuthoritiesResponse:
      description: Response message for CertificateAuthorityService.ListCertificateAuthorities.
      properties:
        certificateAuthorities:
          description: The list of CertificateAuthorities.
          items:
            $ref: "#/components/schemas/CertificateAuthority"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in ListCertificateAuthoritiesRequest.next_page_token to retrieve the next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificateRevocationListsResponse:
      description: Response message for CertificateAuthorityService.ListCertificateRevocationLists.
      properties:
        certificateRevocationLists:
          description: The list of CertificateRevocationLists.
          items:
            $ref: "#/components/schemas/CertificateRevocationList"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in ListCertificateRevocationListsRequest.next_page_token to retrieve the next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificateTemplatesResponse:
      description: Response message for CertificateAuthorityService.ListCertificateTemplates.
      properties:
        certificateTemplates:
          description: The list of CertificateTemplates.
          items:
            $ref: "#/components/schemas/CertificateTemplate"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in ListCertificateTemplatesRequest.next_page_token to retrieve the next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCertificatesResponse:
      description: Response message for CertificateAuthorityService.ListCertificates.
      properties:
        certificates:
          description: The list of Certificates.
          items:
            $ref: "#/components/schemas/Certificate"
          type: array
        nextPageToken:
          description: A token to retrieve next page of results. Pass this value in ListCertificatesRequest.next_page_token to retrieve the next page of results.
          type: string
        unreachable:
          description: A list of locations (e.g. "us-west1") that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    NameConstraints:
      description: Describes the X.509 name constraints extension, per https://tools.ietf.org/html/rfc5280#section-4.2.1.10
      properties:
        critical:
          description: Indicates whether or not the name constraints are marked critical.
          type: boolean
        excludedDnsNames:
          description: Contains excluded DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, `example.com`, `www.example.com`, `www.sub.example.com` would satisfy `example.com` while `example1.com` does not.
          items:
            type: string
          type: array
        excludedEmailAddresses:
          description: Contains the excluded email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. `.example.com`) to indicate all email addresses in that domain.
          items:
            type: string
          type: array
        excludedIpRanges:
          description: Contains the excluded IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.
          items:
            type: string
          type: array
        excludedUris:
          description: Contains the excluded URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like `.example.com`)
          items:
            type: string
          type: array
        permittedDnsNames:
          description: Contains permitted DNS names. Any DNS name that can be constructed by simply adding zero or more labels to the left-hand side of the name satisfies the name constraint. For example, `example.com`, `www.example.com`, `www.sub.example.com` would satisfy `example.com` while `example1.com` does not.
          items:
            type: string
          type: array
        permittedEmailAddresses:
          description: Contains the permitted email addresses. The value can be a particular email address, a hostname to indicate all email addresses on that host or a domain with a leading period (e.g. `.example.com`) to indicate all email addresses in that domain.
          items:
            type: string
          type: array
        permittedIpRanges:
          description: Contains the permitted IP ranges. For IPv4 addresses, the ranges are expressed using CIDR notation as specified in RFC 4632. For IPv6 addresses, the ranges are expressed in similar encoding as IPv4 addresses.
          items:
            type: string
          type: array
        permittedUris:
          description: Contains the permitted URIs that apply to the host part of the name. The value can be a hostname or a domain with a leading period (like `.example.com`)
          items:
            type: string
          type: array
      type: object
    ObjectId:
      description: An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.
      properties:
        objectIdPath:
          description: Required. The parts of an OID path. The most significant parts of the path come first.
          items:
            format: int32
            type: integer
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    PublicKey:
      description: A PublicKey describes a public key.
      properties:
        format:
          description: Required. The format of the public key.
          enum:
            - KEY_FORMAT_UNSPECIFIED
            - PEM
          type: string
        key:
          description: Required. A public key. The padding and encoding must match with the `KeyFormat` value specified for the `format` field.
          format: byte
          type: string
      type: object
    PublishingOptions:
      description: Options relating to the publication of each CertificateAuthority's CA certificate and CRLs and their inclusion as extensions in issued Certificates. The options set here apply to certificates issued by any CertificateAuthority in the CaPool.
      properties:
        encodingFormat:
          description: Optional. Specifies the encoding format of each CertificateAuthority's CA certificate and CRLs. If this is omitted, CA certificates and CRLs will be published in PEM.
          enum:
            - ENCODING_FORMAT_UNSPECIFIED
            - PEM
            - DER
          type: string
        publishCaCert:
          description: Optional. When true, publishes each CertificateAuthority's CA certificate and includes its URL in the "Authority Information Access" X.509 extension in all issued Certificates. If this is false, the CA certificate will not be published and the corresponding X.509 extension will not be written in issued certificates.
          type: boolean
        publishCrl:
          description: Optional. When true, publishes each CertificateAuthority's CRL and includes its URL in the "CRL Distribution Points" X.509 extension in all issued Certificates. If this is false, CRLs will not be published and the corresponding X.509 extension will not be written in issued certificates. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.
          type: boolean
      type: object
    ReconciliationOperationMetadata:
      description: Operation metadata returned by the CLH during resource state reconciliation.
      properties:
        deleteResource:
          deprecated: true
          description: DEPRECATED. Use exclusive_action instead.
          type: boolean
        exclusiveAction:
          description: Excluisive action returned by the CLH.
          enum:
            - UNKNOWN_REPAIR_ACTION
            - DELETE
            - RETRY
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
      type: object
    RevocationDetails:
      description: Describes fields that are relavent to the revocation of a Certificate.
      properties:
        revocationState:
          description: Indicates why a Certificate was revoked.
          enum:
            - REVOCATION_REASON_UNSPECIFIED
            - KEY_COMPROMISE
            - CERTIFICATE_AUTHORITY_COMPROMISE
            - AFFILIATION_CHANGED
            - SUPERSEDED
            - CESSATION_OF_OPERATION
            - CERTIFICATE_HOLD
            - PRIVILEGE_WITHDRAWN
            - ATTRIBUTE_AUTHORITY_COMPROMISE
          type: string
        revocationTime:
          description: The time at which this Certificate was revoked.
          format: google-datetime
          type: string
      type: object
    RevokeCertificateRequest:
      description: Request message for CertificateAuthorityService.RevokeCertificate.
      properties:
        reason:
          description: Required. The RevocationReason for revoking this certificate.
          enum:
            - REVOCATION_REASON_UNSPECIFIED
            - KEY_COMPROMISE
            - CERTIFICATE_AUTHORITY_COMPROMISE
            - AFFILIATION_CHANGED
            - SUPERSEDED
            - CESSATION_OF_OPERATION
            - CERTIFICATE_HOLD
            - PRIVILEGE_WITHDRAWN
            - ATTRIBUTE_AUTHORITY_COMPROMISE
          type: string
        requestId:
          description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    RevokedCertificate:
      description: Describes a revoked Certificate.
      properties:
        certificate:
          description: The resource name for the Certificate in the format `projects/*/locations/*/caPools/*/certificates/*`.
          type: string
        hexSerialNumber:
          description: The serial number of the Certificate.
          type: string
        revocationReason:
          description: The reason the Certificate was revoked.
          enum:
            - REVOCATION_REASON_UNSPECIFIED
            - KEY_COMPROMISE
            - CERTIFICATE_AUTHORITY_COMPROMISE
            - AFFILIATION_CHANGED
            - SUPERSEDED
            - CESSATION_OF_OPERATION
            - CERTIFICATE_HOLD
            - PRIVILEGE_WITHDRAWN
            - ATTRIBUTE_AUTHORITY_COMPROMISE
          type: string
      type: object
    RsaKeyType:
      description: Describes an RSA key that may be used in a Certificate issued from a CaPool.
      properties:
        maxModulusSize:
          description: Optional. The maximum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service will not enforce an explicit upper bound on RSA modulus sizes.
          format: int64
          type: string
        minModulusSize:
          description: Optional. The minimum allowed RSA modulus size (inclusive), in bits. If this is not set, or if set to zero, the service-level min RSA modulus size will continue to apply.
          format: int64
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Subject:
      description: Subject describes parts of a distinguished name that, in turn, describes the subject of the certificate.
      properties:
        commonName:
          description: The "common name" of the subject.
          type: string
        countryCode:
          description: The country code of the subject.
          type: string
        locality:
          description: The locality or city of the subject.
          type: string
        organization:
          description: The organization of the subject.
          type: string
        organizationalUnit:
          description: The organizational_unit of the subject.
          type: string
        postalCode:
          description: The postal code of the subject.
          type: string
        province:
          description: The province, territory, or regional state of the subject.
          type: string
        streetAddress:
          description: The street address of the subject.
          type: string
      type: object
    SubjectAltNames:
      description: SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the "common name" in the distinguished name).
      properties:
        customSans:
          description: Contains additional subject alternative name values. For each custom_san, the `value` field must contain an ASN.1 encoded UTF8String.
          items:
            $ref: "#/components/schemas/X509Extension"
          type: array
        dnsNames:
          description: Contains only valid, fully-qualified host names.
          items:
            type: string
          type: array
        emailAddresses:
          description: Contains only valid RFC 2822 E-mail addresses.
          items:
            type: string
          type: array
        ipAddresses:
          description: Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.
          items:
            type: string
          type: array
        uris:
          description: Contains only valid RFC 3986 URIs.
          items:
            type: string
          type: array
      type: object
    SubjectConfig:
      description: These values are used to create the distinguished name and subject alternative name fields in an X.509 certificate.
      properties:
        subject:
          $ref: "#/components/schemas/Subject"
          description: Optional. Contains distinguished name fields such as the common name, location and organization.
        subjectAltName:
          $ref: "#/components/schemas/SubjectAltNames"
          description: Optional. The subject alternative name fields.
      type: object
    SubjectDescription:
      description: These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.
      properties:
        hexSerialNumber:
          description: The serial number encoded in lowercase hexadecimal.
          type: string
        lifetime:
          description: For convenience, the actual lifetime of an issued certificate.
          format: google-duration
          type: string
        notAfterTime:
          description: The time after which the certificate is expired. Per RFC 5280, the validity period for a certificate is the period of time from not_before_time through not_after_time, inclusive. Corresponds to 'not_before_time' + 'lifetime' - 1 second.
          format: google-datetime
          type: string
        notBeforeTime:
          description: The time at which the certificate becomes valid.
          format: google-datetime
          type: string
        subject:
          $ref: "#/components/schemas/Subject"
          description: Contains distinguished name fields such as the common name, location and / organization.
        subjectAltName:
          $ref: "#/components/schemas/SubjectAltNames"
          description: The subject alternative name fields.
      type: object
    SubordinateConfig:
      description: Describes a subordinate CA's issuers. This is either a resource name to a known issuing CertificateAuthority, or a PEM issuer certificate chain.
      properties:
        certificateAuthority:
          description: Required. This can refer to a CertificateAuthority that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*/locations/*/caPools/*/certificateAuthorities/*`.
          type: string
        pemIssuerChain:
          $ref: "#/components/schemas/SubordinateConfigChain"
          description: Required. Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself.
      type: object
    SubordinateConfigChain:
      description: This message describes a subordinate CA's issuer certificate chain. This wrapper exists for compatibility reasons.
      properties:
        pemCertificates:
          description: Required. Expected to be in leaf-to-root order according to RFC 5246.
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    UndeleteCertificateAuthorityRequest:
      description: Request message for CertificateAuthorityService.UndeleteCertificateAuthority.
      properties:
        requestId:
          description: Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          type: string
      type: object
    X509Extension:
      description: An X509Extension specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs.
      properties:
        critical:
          description: Optional. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error).
          type: boolean
        objectId:
          $ref: "#/components/schemas/ObjectId"
          description: Required. The OID for this X.509 extension.
        value:
          description: Required. The value of this X.509 extension.
          format: byte
          type: string
      type: object
    X509Parameters:
      description: An X509Parameters is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.
      properties:
        additionalExtensions:
          description: Optional. Describes custom X.509 extensions.
          items:
            $ref: "#/components/schemas/X509Extension"
          type: array
        aiaOcspServers:
          description: Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the "Authority Information Access" extension in the certificate.
          items:
            type: string
          type: array
        caOptions:
          $ref: "#/components/schemas/CaOptions"
          description: Optional. Describes options in this X509Parameters that are relevant in a CA certificate.
        keyUsage:
          $ref: "#/components/schemas/KeyUsage"
          description: Optional. Indicates the intended use for keys that correspond to a certificate.
        nameConstraints:
          $ref: "#/components/schemas/NameConstraints"
          description: Optional. Describes the X.509 name constraints extension.
        policyIds:
          description: Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.
          items:
            $ref: "#/components/schemas/ObjectId"
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
