# coding: utf-8

"""
    Certificate Authority API

    The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_certificate_revocation_lists_response import ListCertificateRevocationListsResponse

class TestListCertificateRevocationListsResponse(unittest.TestCase):
    """ListCertificateRevocationListsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListCertificateRevocationListsResponse:
        """Test ListCertificateRevocationListsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListCertificateRevocationListsResponse`
        """
        model = ListCertificateRevocationListsResponse()
        if include_optional:
            return ListCertificateRevocationListsResponse(
                certificate_revocation_lists = [
                    openapi_client.models.certificate_revocation_list.CertificateRevocationList(
                        access_url = '', 
                        create_time = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        pem_crl = '', 
                        revision_id = '', 
                        revoked_certificates = [
                            openapi_client.models.revoked_certificate.RevokedCertificate(
                                certificate = '', 
                                hex_serial_number = '', 
                                revocation_reason = 'REVOCATION_REASON_UNSPECIFIED', )
                            ], 
                        sequence_number = '', 
                        state = 'STATE_UNSPECIFIED', 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListCertificateRevocationListsResponse(
        )
        """

    def testListCertificateRevocationListsResponse(self):
        """Test ListCertificateRevocationListsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
