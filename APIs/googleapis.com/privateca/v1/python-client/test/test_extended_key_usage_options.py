# coding: utf-8

"""
    Certificate Authority API

    The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.extended_key_usage_options import ExtendedKeyUsageOptions

class TestExtendedKeyUsageOptions(unittest.TestCase):
    """ExtendedKeyUsageOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExtendedKeyUsageOptions:
        """Test ExtendedKeyUsageOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExtendedKeyUsageOptions`
        """
        model = ExtendedKeyUsageOptions()
        if include_optional:
            return ExtendedKeyUsageOptions(
                client_auth = True,
                code_signing = True,
                email_protection = True,
                ocsp_signing = True,
                server_auth = True,
                time_stamping = True
            )
        else:
            return ExtendedKeyUsageOptions(
        )
        """

    def testExtendedKeyUsageOptions(self):
        """Test ExtendedKeyUsageOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
