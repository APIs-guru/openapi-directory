# coding: utf-8

"""
    Batch API

    An API to manage the running of batch resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.agent_task_runnable import AgentTaskRunnable

class TestAgentTaskRunnable(unittest.TestCase):
    """AgentTaskRunnable unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AgentTaskRunnable:
        """Test AgentTaskRunnable
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AgentTaskRunnable`
        """
        model = AgentTaskRunnable()
        if include_optional:
            return AgentTaskRunnable(
                always_run = True,
                background = True,
                container = openapi_client.models.agent_container.AgentContainer(
                    commands = [
                        ''
                        ], 
                    entrypoint = '', 
                    image_uri = '', 
                    options = '', 
                    volumes = [
                        ''
                        ], ),
                environment = openapi_client.models.agent_environment.AgentEnvironment(
                    encrypted_variables = openapi_client.models.agent_kms_env_map.AgentKMSEnvMap(
                        cipher_text = '', 
                        key_name = '', ), 
                    secret_variables = {
                        'key' : ''
                        }, 
                    variables = {
                        'key' : ''
                        }, ),
                ignore_exit_status = True,
                script = openapi_client.models.agent_script.AgentScript(
                    path = '', 
                    text = '', ),
                timeout = ''
            )
        else:
            return AgentTaskRunnable(
        )
        """

    def testAgentTaskRunnable(self):
        """Test AgentTaskRunnable"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
