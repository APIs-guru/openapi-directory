# coding: utf-8

"""
    Batch API

    An API to manage the running of batch resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job_status import JobStatus

class TestJobStatus(unittest.TestCase):
    """JobStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> JobStatus:
        """Test JobStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `JobStatus`
        """
        model = JobStatus()
        if include_optional:
            return JobStatus(
                run_duration = '',
                state = 'STATE_UNSPECIFIED',
                status_events = [
                    openapi_client.models.status_event.StatusEvent(
                        description = '', 
                        event_time = '', 
                        task_execution = openapi_client.models.task_execution.TaskExecution(
                            exit_code = 56, ), 
                        task_state = 'STATE_UNSPECIFIED', 
                        type = '', )
                    ],
                task_groups = {
                    'key' : openapi_client.models.task_group_status.TaskGroupStatus(
                        counts = {
                            'key' : ''
                            }, 
                        instances = [
                            openapi_client.models.instance_status.InstanceStatus(
                                boot_disk = openapi_client.models.disk.Disk(
                                    disk_interface = '', 
                                    image = '', 
                                    size_gb = '', 
                                    snapshot = '', 
                                    type = '', ), 
                                machine_type = '', 
                                provisioning_model = 'PROVISIONING_MODEL_UNSPECIFIED', 
                                task_pack = '', )
                            ], )
                    }
            )
        else:
            return JobStatus(
        )
        """

    def testJobStatus(self):
        """Test JobStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
