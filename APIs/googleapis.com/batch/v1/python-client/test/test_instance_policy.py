# coding: utf-8

"""
    Batch API

    An API to manage the running of batch resources on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.instance_policy import InstancePolicy

class TestInstancePolicy(unittest.TestCase):
    """InstancePolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InstancePolicy:
        """Test InstancePolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InstancePolicy`
        """
        model = InstancePolicy()
        if include_optional:
            return InstancePolicy(
                accelerators = [
                    openapi_client.models.accelerator.Accelerator(
                        count = '', 
                        driver_version = '', 
                        install_gpu_drivers = True, 
                        type = '', )
                    ],
                boot_disk = openapi_client.models.disk.Disk(
                    disk_interface = '', 
                    image = '', 
                    size_gb = '', 
                    snapshot = '', 
                    type = '', ),
                disks = [
                    openapi_client.models.attached_disk.AttachedDisk(
                        device_name = '', 
                        existing_disk = '', 
                        new_disk = openapi_client.models.disk.Disk(
                            disk_interface = '', 
                            image = '', 
                            size_gb = '', 
                            snapshot = '', 
                            type = '', ), )
                    ],
                machine_type = '',
                min_cpu_platform = '',
                provisioning_model = 'PROVISIONING_MODEL_UNSPECIFIED',
                reservation = ''
            )
        else:
            return InstancePolicy(
        )
        """

    def testInstancePolicy(self):
        """Test InstancePolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
