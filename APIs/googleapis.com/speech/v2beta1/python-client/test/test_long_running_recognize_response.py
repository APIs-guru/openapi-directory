# coding: utf-8

"""
    Cloud Speech-to-Text API

    Converts audio to text by applying powerful neural network models.

    The version of the OpenAPI document: v2beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.long_running_recognize_response import LongRunningRecognizeResponse

class TestLongRunningRecognizeResponse(unittest.TestCase):
    """LongRunningRecognizeResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LongRunningRecognizeResponse:
        """Test LongRunningRecognizeResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LongRunningRecognizeResponse`
        """
        model = LongRunningRecognizeResponse()
        if include_optional:
            return LongRunningRecognizeResponse(
                results = [
                    openapi_client.models.speech_recognition_result.SpeechRecognitionResult(
                        alternatives = [
                            openapi_client.models.speech_recognition_alternative.SpeechRecognitionAlternative(
                                confidence = 1.337, 
                                transcript = '', 
                                words = [
                                    openapi_client.models.word_info.WordInfo(
                                        confidence = 1.337, 
                                        end_offset = '', 
                                        speaker_tag = 56, 
                                        start_offset = '', 
                                        word = '', )
                                    ], )
                            ], 
                        channel_tag = 56, 
                        language_code = '', )
                    ]
            )
        else:
            return LongRunningRecognizeResponse(
        )
        """

    def testLongRunningRecognizeResponse(self):
        """Test LongRunningRecognizeResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
