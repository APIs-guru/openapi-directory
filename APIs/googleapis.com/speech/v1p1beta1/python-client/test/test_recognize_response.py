# coding: utf-8

"""
    Cloud Speech-to-Text API

    Converts audio to text by applying powerful neural network models.

    The version of the OpenAPI document: v1p1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.recognize_response import RecognizeResponse

class TestRecognizeResponse(unittest.TestCase):
    """RecognizeResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecognizeResponse:
        """Test RecognizeResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecognizeResponse`
        """
        model = RecognizeResponse()
        if include_optional:
            return RecognizeResponse(
                request_id = '',
                results = [
                    openapi_client.models.speech_recognition_result.SpeechRecognitionResult(
                        alternatives = [
                            openapi_client.models.speech_recognition_alternative.SpeechRecognitionAlternative(
                                confidence = 1.337, 
                                transcript = '', 
                                words = [
                                    openapi_client.models.word_info.WordInfo(
                                        confidence = 1.337, 
                                        end_time = '', 
                                        speaker_label = '', 
                                        speaker_tag = 56, 
                                        start_time = '', 
                                        word = '', )
                                    ], )
                            ], 
                        channel_tag = 56, 
                        language_code = '', 
                        result_end_time = '', )
                    ],
                speech_adaptation_info = openapi_client.models.speech_adaptation_info.SpeechAdaptationInfo(
                    adaptation_timeout = True, 
                    timeout_message = '', ),
                total_billed_time = '',
                using_legacy_models = True
            )
        else:
            return RecognizeResponse(
        )
        """

    def testRecognizeResponse(self):
        """Test RecognizeResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
