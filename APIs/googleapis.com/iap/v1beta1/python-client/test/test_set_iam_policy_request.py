# coding: utf-8

"""
    Cloud Identity-Aware Proxy API

    Controls access to cloud applications running on Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.set_iam_policy_request import SetIamPolicyRequest

class TestSetIamPolicyRequest(unittest.TestCase):
    """SetIamPolicyRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SetIamPolicyRequest:
        """Test SetIamPolicyRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SetIamPolicyRequest`
        """
        model = SetIamPolicyRequest()
        if include_optional:
            return SetIamPolicyRequest(
                policy = openapi_client.models.policy.Policy(
                    bindings = [
                        openapi_client.models.binding.Binding(
                            condition = openapi_client.models.expr.Expr(
                                description = '', 
                                expression = '', 
                                location = '', 
                                title = '', ), 
                            members = [
                                ''
                                ], 
                            role = '', )
                        ], 
                    etag = 'YQ==', 
                    version = 56, )
            )
        else:
            return SetIamPolicyRequest(
        )
        """

    def testSetIamPolicyRequest(self):
        """Test SetIamPolicyRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
