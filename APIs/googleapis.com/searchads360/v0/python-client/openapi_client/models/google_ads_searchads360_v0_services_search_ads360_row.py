# coding: utf-8

"""
    Search Ads 360 Reporting API

    The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.

    The version of the OpenAPI document: v0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field
from typing import Any, ClassVar, Dict, List, Optional
from openapi_client.models.google_ads_searchads360_v0_common_metrics import GoogleAdsSearchads360V0CommonMetrics
from openapi_client.models.google_ads_searchads360_v0_common_segments import GoogleAdsSearchads360V0CommonSegments
from openapi_client.models.google_ads_searchads360_v0_common_value import GoogleAdsSearchads360V0CommonValue
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group import GoogleAdsSearchads360V0ResourcesAdGroup
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_ad import GoogleAdsSearchads360V0ResourcesAdGroupAd
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_ad_label import GoogleAdsSearchads360V0ResourcesAdGroupAdLabel
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_asset import GoogleAdsSearchads360V0ResourcesAdGroupAsset
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_asset_set import GoogleAdsSearchads360V0ResourcesAdGroupAssetSet
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_audience_view import GoogleAdsSearchads360V0ResourcesAdGroupAudienceView
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_bid_modifier import GoogleAdsSearchads360V0ResourcesAdGroupBidModifier
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_criterion import GoogleAdsSearchads360V0ResourcesAdGroupCriterion
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_criterion_label import GoogleAdsSearchads360V0ResourcesAdGroupCriterionLabel
from openapi_client.models.google_ads_searchads360_v0_resources_ad_group_label import GoogleAdsSearchads360V0ResourcesAdGroupLabel
from openapi_client.models.google_ads_searchads360_v0_resources_age_range_view import GoogleAdsSearchads360V0ResourcesAgeRangeView
from openapi_client.models.google_ads_searchads360_v0_resources_asset import GoogleAdsSearchads360V0ResourcesAsset
from openapi_client.models.google_ads_searchads360_v0_resources_asset_group import GoogleAdsSearchads360V0ResourcesAssetGroup
from openapi_client.models.google_ads_searchads360_v0_resources_asset_group_asset import GoogleAdsSearchads360V0ResourcesAssetGroupAsset
from openapi_client.models.google_ads_searchads360_v0_resources_asset_group_listing_group_filter import GoogleAdsSearchads360V0ResourcesAssetGroupListingGroupFilter
from openapi_client.models.google_ads_searchads360_v0_resources_asset_group_signal import GoogleAdsSearchads360V0ResourcesAssetGroupSignal
from openapi_client.models.google_ads_searchads360_v0_resources_asset_group_top_combination_view import GoogleAdsSearchads360V0ResourcesAssetGroupTopCombinationView
from openapi_client.models.google_ads_searchads360_v0_resources_asset_set import GoogleAdsSearchads360V0ResourcesAssetSet
from openapi_client.models.google_ads_searchads360_v0_resources_asset_set_asset import GoogleAdsSearchads360V0ResourcesAssetSetAsset
from openapi_client.models.google_ads_searchads360_v0_resources_audience import GoogleAdsSearchads360V0ResourcesAudience
from openapi_client.models.google_ads_searchads360_v0_resources_bidding_strategy import GoogleAdsSearchads360V0ResourcesBiddingStrategy
from openapi_client.models.google_ads_searchads360_v0_resources_campaign import GoogleAdsSearchads360V0ResourcesCampaign
from openapi_client.models.google_ads_searchads360_v0_resources_campaign_asset import GoogleAdsSearchads360V0ResourcesCampaignAsset
from openapi_client.models.google_ads_searchads360_v0_resources_campaign_asset_set import GoogleAdsSearchads360V0ResourcesCampaignAssetSet
from openapi_client.models.google_ads_searchads360_v0_resources_campaign_audience_view import GoogleAdsSearchads360V0ResourcesCampaignAudienceView
from openapi_client.models.google_ads_searchads360_v0_resources_campaign_budget import GoogleAdsSearchads360V0ResourcesCampaignBudget
from openapi_client.models.google_ads_searchads360_v0_resources_campaign_criterion import GoogleAdsSearchads360V0ResourcesCampaignCriterion
from openapi_client.models.google_ads_searchads360_v0_resources_campaign_label import GoogleAdsSearchads360V0ResourcesCampaignLabel
from openapi_client.models.google_ads_searchads360_v0_resources_cart_data_sales_view import GoogleAdsSearchads360V0ResourcesCartDataSalesView
from openapi_client.models.google_ads_searchads360_v0_resources_conversion import GoogleAdsSearchads360V0ResourcesConversion
from openapi_client.models.google_ads_searchads360_v0_resources_conversion_action import GoogleAdsSearchads360V0ResourcesConversionAction
from openapi_client.models.google_ads_searchads360_v0_resources_conversion_custom_variable import GoogleAdsSearchads360V0ResourcesConversionCustomVariable
from openapi_client.models.google_ads_searchads360_v0_resources_customer import GoogleAdsSearchads360V0ResourcesCustomer
from openapi_client.models.google_ads_searchads360_v0_resources_customer_asset import GoogleAdsSearchads360V0ResourcesCustomerAsset
from openapi_client.models.google_ads_searchads360_v0_resources_customer_asset_set import GoogleAdsSearchads360V0ResourcesCustomerAssetSet
from openapi_client.models.google_ads_searchads360_v0_resources_customer_client import GoogleAdsSearchads360V0ResourcesCustomerClient
from openapi_client.models.google_ads_searchads360_v0_resources_customer_manager_link import GoogleAdsSearchads360V0ResourcesCustomerManagerLink
from openapi_client.models.google_ads_searchads360_v0_resources_dynamic_search_ads_search_term_view import GoogleAdsSearchads360V0ResourcesDynamicSearchAdsSearchTermView
from openapi_client.models.google_ads_searchads360_v0_resources_gender_view import GoogleAdsSearchads360V0ResourcesGenderView
from openapi_client.models.google_ads_searchads360_v0_resources_geo_target_constant import GoogleAdsSearchads360V0ResourcesGeoTargetConstant
from openapi_client.models.google_ads_searchads360_v0_resources_keyword_view import GoogleAdsSearchads360V0ResourcesKeywordView
from openapi_client.models.google_ads_searchads360_v0_resources_label import GoogleAdsSearchads360V0ResourcesLabel
from openapi_client.models.google_ads_searchads360_v0_resources_language_constant import GoogleAdsSearchads360V0ResourcesLanguageConstant
from openapi_client.models.google_ads_searchads360_v0_resources_location_view import GoogleAdsSearchads360V0ResourcesLocationView
from openapi_client.models.google_ads_searchads360_v0_resources_product_bidding_category_constant import GoogleAdsSearchads360V0ResourcesProductBiddingCategoryConstant
from openapi_client.models.google_ads_searchads360_v0_resources_product_group_view import GoogleAdsSearchads360V0ResourcesProductGroupView
from openapi_client.models.google_ads_searchads360_v0_resources_shopping_performance_view import GoogleAdsSearchads360V0ResourcesShoppingPerformanceView
from openapi_client.models.google_ads_searchads360_v0_resources_user_list import GoogleAdsSearchads360V0ResourcesUserList
from openapi_client.models.google_ads_searchads360_v0_resources_visit import GoogleAdsSearchads360V0ResourcesVisit
from openapi_client.models.google_ads_searchads360_v0_resources_webpage_view import GoogleAdsSearchads360V0ResourcesWebpageView
from typing import Optional, Set
from typing_extensions import Self

class GoogleAdsSearchads360V0ServicesSearchAds360Row(BaseModel):
    """
    A returned row from the query.
    """ # noqa: E501
    ad_group: Optional[GoogleAdsSearchads360V0ResourcesAdGroup] = Field(default=None, alias="adGroup")
    ad_group_ad: Optional[GoogleAdsSearchads360V0ResourcesAdGroupAd] = Field(default=None, alias="adGroupAd")
    ad_group_ad_label: Optional[GoogleAdsSearchads360V0ResourcesAdGroupAdLabel] = Field(default=None, alias="adGroupAdLabel")
    ad_group_asset: Optional[GoogleAdsSearchads360V0ResourcesAdGroupAsset] = Field(default=None, alias="adGroupAsset")
    ad_group_asset_set: Optional[GoogleAdsSearchads360V0ResourcesAdGroupAssetSet] = Field(default=None, alias="adGroupAssetSet")
    ad_group_audience_view: Optional[GoogleAdsSearchads360V0ResourcesAdGroupAudienceView] = Field(default=None, alias="adGroupAudienceView")
    ad_group_bid_modifier: Optional[GoogleAdsSearchads360V0ResourcesAdGroupBidModifier] = Field(default=None, alias="adGroupBidModifier")
    ad_group_criterion: Optional[GoogleAdsSearchads360V0ResourcesAdGroupCriterion] = Field(default=None, alias="adGroupCriterion")
    ad_group_criterion_label: Optional[GoogleAdsSearchads360V0ResourcesAdGroupCriterionLabel] = Field(default=None, alias="adGroupCriterionLabel")
    ad_group_label: Optional[GoogleAdsSearchads360V0ResourcesAdGroupLabel] = Field(default=None, alias="adGroupLabel")
    age_range_view: Optional[GoogleAdsSearchads360V0ResourcesAgeRangeView] = Field(default=None, alias="ageRangeView")
    asset: Optional[GoogleAdsSearchads360V0ResourcesAsset] = None
    asset_group: Optional[GoogleAdsSearchads360V0ResourcesAssetGroup] = Field(default=None, alias="assetGroup")
    asset_group_asset: Optional[GoogleAdsSearchads360V0ResourcesAssetGroupAsset] = Field(default=None, alias="assetGroupAsset")
    asset_group_listing_group_filter: Optional[GoogleAdsSearchads360V0ResourcesAssetGroupListingGroupFilter] = Field(default=None, alias="assetGroupListingGroupFilter")
    asset_group_signal: Optional[GoogleAdsSearchads360V0ResourcesAssetGroupSignal] = Field(default=None, alias="assetGroupSignal")
    asset_group_top_combination_view: Optional[GoogleAdsSearchads360V0ResourcesAssetGroupTopCombinationView] = Field(default=None, alias="assetGroupTopCombinationView")
    asset_set: Optional[GoogleAdsSearchads360V0ResourcesAssetSet] = Field(default=None, alias="assetSet")
    asset_set_asset: Optional[GoogleAdsSearchads360V0ResourcesAssetSetAsset] = Field(default=None, alias="assetSetAsset")
    audience: Optional[GoogleAdsSearchads360V0ResourcesAudience] = None
    bidding_strategy: Optional[GoogleAdsSearchads360V0ResourcesBiddingStrategy] = Field(default=None, alias="biddingStrategy")
    campaign: Optional[GoogleAdsSearchads360V0ResourcesCampaign] = None
    campaign_asset: Optional[GoogleAdsSearchads360V0ResourcesCampaignAsset] = Field(default=None, alias="campaignAsset")
    campaign_asset_set: Optional[GoogleAdsSearchads360V0ResourcesCampaignAssetSet] = Field(default=None, alias="campaignAssetSet")
    campaign_audience_view: Optional[GoogleAdsSearchads360V0ResourcesCampaignAudienceView] = Field(default=None, alias="campaignAudienceView")
    campaign_budget: Optional[GoogleAdsSearchads360V0ResourcesCampaignBudget] = Field(default=None, alias="campaignBudget")
    campaign_criterion: Optional[GoogleAdsSearchads360V0ResourcesCampaignCriterion] = Field(default=None, alias="campaignCriterion")
    campaign_label: Optional[GoogleAdsSearchads360V0ResourcesCampaignLabel] = Field(default=None, alias="campaignLabel")
    cart_data_sales_view: Optional[GoogleAdsSearchads360V0ResourcesCartDataSalesView] = Field(default=None, alias="cartDataSalesView")
    conversion: Optional[GoogleAdsSearchads360V0ResourcesConversion] = None
    conversion_action: Optional[GoogleAdsSearchads360V0ResourcesConversionAction] = Field(default=None, alias="conversionAction")
    conversion_custom_variable: Optional[GoogleAdsSearchads360V0ResourcesConversionCustomVariable] = Field(default=None, alias="conversionCustomVariable")
    custom_columns: Optional[List[GoogleAdsSearchads360V0CommonValue]] = Field(default=None, description="The custom columns.", alias="customColumns")
    customer: Optional[GoogleAdsSearchads360V0ResourcesCustomer] = None
    customer_asset: Optional[GoogleAdsSearchads360V0ResourcesCustomerAsset] = Field(default=None, alias="customerAsset")
    customer_asset_set: Optional[GoogleAdsSearchads360V0ResourcesCustomerAssetSet] = Field(default=None, alias="customerAssetSet")
    customer_client: Optional[GoogleAdsSearchads360V0ResourcesCustomerClient] = Field(default=None, alias="customerClient")
    customer_manager_link: Optional[GoogleAdsSearchads360V0ResourcesCustomerManagerLink] = Field(default=None, alias="customerManagerLink")
    dynamic_search_ads_search_term_view: Optional[GoogleAdsSearchads360V0ResourcesDynamicSearchAdsSearchTermView] = Field(default=None, alias="dynamicSearchAdsSearchTermView")
    gender_view: Optional[GoogleAdsSearchads360V0ResourcesGenderView] = Field(default=None, alias="genderView")
    geo_target_constant: Optional[GoogleAdsSearchads360V0ResourcesGeoTargetConstant] = Field(default=None, alias="geoTargetConstant")
    keyword_view: Optional[GoogleAdsSearchads360V0ResourcesKeywordView] = Field(default=None, alias="keywordView")
    label: Optional[GoogleAdsSearchads360V0ResourcesLabel] = None
    language_constant: Optional[GoogleAdsSearchads360V0ResourcesLanguageConstant] = Field(default=None, alias="languageConstant")
    location_view: Optional[GoogleAdsSearchads360V0ResourcesLocationView] = Field(default=None, alias="locationView")
    metrics: Optional[GoogleAdsSearchads360V0CommonMetrics] = None
    product_bidding_category_constant: Optional[GoogleAdsSearchads360V0ResourcesProductBiddingCategoryConstant] = Field(default=None, alias="productBiddingCategoryConstant")
    product_group_view: Optional[GoogleAdsSearchads360V0ResourcesProductGroupView] = Field(default=None, alias="productGroupView")
    segments: Optional[GoogleAdsSearchads360V0CommonSegments] = None
    shopping_performance_view: Optional[GoogleAdsSearchads360V0ResourcesShoppingPerformanceView] = Field(default=None, alias="shoppingPerformanceView")
    user_list: Optional[GoogleAdsSearchads360V0ResourcesUserList] = Field(default=None, alias="userList")
    visit: Optional[GoogleAdsSearchads360V0ResourcesVisit] = None
    webpage_view: Optional[GoogleAdsSearchads360V0ResourcesWebpageView] = Field(default=None, alias="webpageView")
    __properties: ClassVar[List[str]] = ["adGroup", "adGroupAd", "adGroupAdLabel", "adGroupAsset", "adGroupAssetSet", "adGroupAudienceView", "adGroupBidModifier", "adGroupCriterion", "adGroupCriterionLabel", "adGroupLabel", "ageRangeView", "asset", "assetGroup", "assetGroupAsset", "assetGroupListingGroupFilter", "assetGroupSignal", "assetGroupTopCombinationView", "assetSet", "assetSetAsset", "audience", "biddingStrategy", "campaign", "campaignAsset", "campaignAssetSet", "campaignAudienceView", "campaignBudget", "campaignCriterion", "campaignLabel", "cartDataSalesView", "conversion", "conversionAction", "conversionCustomVariable", "customColumns", "customer", "customerAsset", "customerAssetSet", "customerClient", "customerManagerLink", "dynamicSearchAdsSearchTermView", "genderView", "geoTargetConstant", "keywordView", "label", "languageConstant", "locationView", "metrics", "productBiddingCategoryConstant", "productGroupView", "segments", "shoppingPerformanceView", "userList", "visit", "webpageView"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GoogleAdsSearchads360V0ServicesSearchAds360Row from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # override the default output from pydantic by calling `to_dict()` of ad_group
        if self.ad_group:
            _dict['adGroup'] = self.ad_group.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_ad
        if self.ad_group_ad:
            _dict['adGroupAd'] = self.ad_group_ad.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_ad_label
        if self.ad_group_ad_label:
            _dict['adGroupAdLabel'] = self.ad_group_ad_label.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_asset
        if self.ad_group_asset:
            _dict['adGroupAsset'] = self.ad_group_asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_asset_set
        if self.ad_group_asset_set:
            _dict['adGroupAssetSet'] = self.ad_group_asset_set.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_audience_view
        if self.ad_group_audience_view:
            _dict['adGroupAudienceView'] = self.ad_group_audience_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_bid_modifier
        if self.ad_group_bid_modifier:
            _dict['adGroupBidModifier'] = self.ad_group_bid_modifier.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_criterion
        if self.ad_group_criterion:
            _dict['adGroupCriterion'] = self.ad_group_criterion.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_criterion_label
        if self.ad_group_criterion_label:
            _dict['adGroupCriterionLabel'] = self.ad_group_criterion_label.to_dict()
        # override the default output from pydantic by calling `to_dict()` of ad_group_label
        if self.ad_group_label:
            _dict['adGroupLabel'] = self.ad_group_label.to_dict()
        # override the default output from pydantic by calling `to_dict()` of age_range_view
        if self.age_range_view:
            _dict['ageRangeView'] = self.age_range_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset
        if self.asset:
            _dict['asset'] = self.asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_group
        if self.asset_group:
            _dict['assetGroup'] = self.asset_group.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_group_asset
        if self.asset_group_asset:
            _dict['assetGroupAsset'] = self.asset_group_asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_group_listing_group_filter
        if self.asset_group_listing_group_filter:
            _dict['assetGroupListingGroupFilter'] = self.asset_group_listing_group_filter.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_group_signal
        if self.asset_group_signal:
            _dict['assetGroupSignal'] = self.asset_group_signal.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_group_top_combination_view
        if self.asset_group_top_combination_view:
            _dict['assetGroupTopCombinationView'] = self.asset_group_top_combination_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_set
        if self.asset_set:
            _dict['assetSet'] = self.asset_set.to_dict()
        # override the default output from pydantic by calling `to_dict()` of asset_set_asset
        if self.asset_set_asset:
            _dict['assetSetAsset'] = self.asset_set_asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of audience
        if self.audience:
            _dict['audience'] = self.audience.to_dict()
        # override the default output from pydantic by calling `to_dict()` of bidding_strategy
        if self.bidding_strategy:
            _dict['biddingStrategy'] = self.bidding_strategy.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign
        if self.campaign:
            _dict['campaign'] = self.campaign.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign_asset
        if self.campaign_asset:
            _dict['campaignAsset'] = self.campaign_asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign_asset_set
        if self.campaign_asset_set:
            _dict['campaignAssetSet'] = self.campaign_asset_set.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign_audience_view
        if self.campaign_audience_view:
            _dict['campaignAudienceView'] = self.campaign_audience_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign_budget
        if self.campaign_budget:
            _dict['campaignBudget'] = self.campaign_budget.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign_criterion
        if self.campaign_criterion:
            _dict['campaignCriterion'] = self.campaign_criterion.to_dict()
        # override the default output from pydantic by calling `to_dict()` of campaign_label
        if self.campaign_label:
            _dict['campaignLabel'] = self.campaign_label.to_dict()
        # override the default output from pydantic by calling `to_dict()` of cart_data_sales_view
        if self.cart_data_sales_view:
            _dict['cartDataSalesView'] = self.cart_data_sales_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of conversion
        if self.conversion:
            _dict['conversion'] = self.conversion.to_dict()
        # override the default output from pydantic by calling `to_dict()` of conversion_action
        if self.conversion_action:
            _dict['conversionAction'] = self.conversion_action.to_dict()
        # override the default output from pydantic by calling `to_dict()` of conversion_custom_variable
        if self.conversion_custom_variable:
            _dict['conversionCustomVariable'] = self.conversion_custom_variable.to_dict()
        # override the default output from pydantic by calling `to_dict()` of each item in custom_columns (list)
        _items = []
        if self.custom_columns:
            for _item_custom_columns in self.custom_columns:
                if _item_custom_columns:
                    _items.append(_item_custom_columns.to_dict())
            _dict['customColumns'] = _items
        # override the default output from pydantic by calling `to_dict()` of customer
        if self.customer:
            _dict['customer'] = self.customer.to_dict()
        # override the default output from pydantic by calling `to_dict()` of customer_asset
        if self.customer_asset:
            _dict['customerAsset'] = self.customer_asset.to_dict()
        # override the default output from pydantic by calling `to_dict()` of customer_asset_set
        if self.customer_asset_set:
            _dict['customerAssetSet'] = self.customer_asset_set.to_dict()
        # override the default output from pydantic by calling `to_dict()` of customer_client
        if self.customer_client:
            _dict['customerClient'] = self.customer_client.to_dict()
        # override the default output from pydantic by calling `to_dict()` of customer_manager_link
        if self.customer_manager_link:
            _dict['customerManagerLink'] = self.customer_manager_link.to_dict()
        # override the default output from pydantic by calling `to_dict()` of dynamic_search_ads_search_term_view
        if self.dynamic_search_ads_search_term_view:
            _dict['dynamicSearchAdsSearchTermView'] = self.dynamic_search_ads_search_term_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of gender_view
        if self.gender_view:
            _dict['genderView'] = self.gender_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of geo_target_constant
        if self.geo_target_constant:
            _dict['geoTargetConstant'] = self.geo_target_constant.to_dict()
        # override the default output from pydantic by calling `to_dict()` of keyword_view
        if self.keyword_view:
            _dict['keywordView'] = self.keyword_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of label
        if self.label:
            _dict['label'] = self.label.to_dict()
        # override the default output from pydantic by calling `to_dict()` of language_constant
        if self.language_constant:
            _dict['languageConstant'] = self.language_constant.to_dict()
        # override the default output from pydantic by calling `to_dict()` of location_view
        if self.location_view:
            _dict['locationView'] = self.location_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of metrics
        if self.metrics:
            _dict['metrics'] = self.metrics.to_dict()
        # override the default output from pydantic by calling `to_dict()` of product_bidding_category_constant
        if self.product_bidding_category_constant:
            _dict['productBiddingCategoryConstant'] = self.product_bidding_category_constant.to_dict()
        # override the default output from pydantic by calling `to_dict()` of product_group_view
        if self.product_group_view:
            _dict['productGroupView'] = self.product_group_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of segments
        if self.segments:
            _dict['segments'] = self.segments.to_dict()
        # override the default output from pydantic by calling `to_dict()` of shopping_performance_view
        if self.shopping_performance_view:
            _dict['shoppingPerformanceView'] = self.shopping_performance_view.to_dict()
        # override the default output from pydantic by calling `to_dict()` of user_list
        if self.user_list:
            _dict['userList'] = self.user_list.to_dict()
        # override the default output from pydantic by calling `to_dict()` of visit
        if self.visit:
            _dict['visit'] = self.visit.to_dict()
        # override the default output from pydantic by calling `to_dict()` of webpage_view
        if self.webpage_view:
            _dict['webpageView'] = self.webpage_view.to_dict()
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GoogleAdsSearchads360V0ServicesSearchAds360Row from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "adGroup": GoogleAdsSearchads360V0ResourcesAdGroup.from_dict(obj["adGroup"]) if obj.get("adGroup") is not None else None,
            "adGroupAd": GoogleAdsSearchads360V0ResourcesAdGroupAd.from_dict(obj["adGroupAd"]) if obj.get("adGroupAd") is not None else None,
            "adGroupAdLabel": GoogleAdsSearchads360V0ResourcesAdGroupAdLabel.from_dict(obj["adGroupAdLabel"]) if obj.get("adGroupAdLabel") is not None else None,
            "adGroupAsset": GoogleAdsSearchads360V0ResourcesAdGroupAsset.from_dict(obj["adGroupAsset"]) if obj.get("adGroupAsset") is not None else None,
            "adGroupAssetSet": GoogleAdsSearchads360V0ResourcesAdGroupAssetSet.from_dict(obj["adGroupAssetSet"]) if obj.get("adGroupAssetSet") is not None else None,
            "adGroupAudienceView": GoogleAdsSearchads360V0ResourcesAdGroupAudienceView.from_dict(obj["adGroupAudienceView"]) if obj.get("adGroupAudienceView") is not None else None,
            "adGroupBidModifier": GoogleAdsSearchads360V0ResourcesAdGroupBidModifier.from_dict(obj["adGroupBidModifier"]) if obj.get("adGroupBidModifier") is not None else None,
            "adGroupCriterion": GoogleAdsSearchads360V0ResourcesAdGroupCriterion.from_dict(obj["adGroupCriterion"]) if obj.get("adGroupCriterion") is not None else None,
            "adGroupCriterionLabel": GoogleAdsSearchads360V0ResourcesAdGroupCriterionLabel.from_dict(obj["adGroupCriterionLabel"]) if obj.get("adGroupCriterionLabel") is not None else None,
            "adGroupLabel": GoogleAdsSearchads360V0ResourcesAdGroupLabel.from_dict(obj["adGroupLabel"]) if obj.get("adGroupLabel") is not None else None,
            "ageRangeView": GoogleAdsSearchads360V0ResourcesAgeRangeView.from_dict(obj["ageRangeView"]) if obj.get("ageRangeView") is not None else None,
            "asset": GoogleAdsSearchads360V0ResourcesAsset.from_dict(obj["asset"]) if obj.get("asset") is not None else None,
            "assetGroup": GoogleAdsSearchads360V0ResourcesAssetGroup.from_dict(obj["assetGroup"]) if obj.get("assetGroup") is not None else None,
            "assetGroupAsset": GoogleAdsSearchads360V0ResourcesAssetGroupAsset.from_dict(obj["assetGroupAsset"]) if obj.get("assetGroupAsset") is not None else None,
            "assetGroupListingGroupFilter": GoogleAdsSearchads360V0ResourcesAssetGroupListingGroupFilter.from_dict(obj["assetGroupListingGroupFilter"]) if obj.get("assetGroupListingGroupFilter") is not None else None,
            "assetGroupSignal": GoogleAdsSearchads360V0ResourcesAssetGroupSignal.from_dict(obj["assetGroupSignal"]) if obj.get("assetGroupSignal") is not None else None,
            "assetGroupTopCombinationView": GoogleAdsSearchads360V0ResourcesAssetGroupTopCombinationView.from_dict(obj["assetGroupTopCombinationView"]) if obj.get("assetGroupTopCombinationView") is not None else None,
            "assetSet": GoogleAdsSearchads360V0ResourcesAssetSet.from_dict(obj["assetSet"]) if obj.get("assetSet") is not None else None,
            "assetSetAsset": GoogleAdsSearchads360V0ResourcesAssetSetAsset.from_dict(obj["assetSetAsset"]) if obj.get("assetSetAsset") is not None else None,
            "audience": GoogleAdsSearchads360V0ResourcesAudience.from_dict(obj["audience"]) if obj.get("audience") is not None else None,
            "biddingStrategy": GoogleAdsSearchads360V0ResourcesBiddingStrategy.from_dict(obj["biddingStrategy"]) if obj.get("biddingStrategy") is not None else None,
            "campaign": GoogleAdsSearchads360V0ResourcesCampaign.from_dict(obj["campaign"]) if obj.get("campaign") is not None else None,
            "campaignAsset": GoogleAdsSearchads360V0ResourcesCampaignAsset.from_dict(obj["campaignAsset"]) if obj.get("campaignAsset") is not None else None,
            "campaignAssetSet": GoogleAdsSearchads360V0ResourcesCampaignAssetSet.from_dict(obj["campaignAssetSet"]) if obj.get("campaignAssetSet") is not None else None,
            "campaignAudienceView": GoogleAdsSearchads360V0ResourcesCampaignAudienceView.from_dict(obj["campaignAudienceView"]) if obj.get("campaignAudienceView") is not None else None,
            "campaignBudget": GoogleAdsSearchads360V0ResourcesCampaignBudget.from_dict(obj["campaignBudget"]) if obj.get("campaignBudget") is not None else None,
            "campaignCriterion": GoogleAdsSearchads360V0ResourcesCampaignCriterion.from_dict(obj["campaignCriterion"]) if obj.get("campaignCriterion") is not None else None,
            "campaignLabel": GoogleAdsSearchads360V0ResourcesCampaignLabel.from_dict(obj["campaignLabel"]) if obj.get("campaignLabel") is not None else None,
            "cartDataSalesView": GoogleAdsSearchads360V0ResourcesCartDataSalesView.from_dict(obj["cartDataSalesView"]) if obj.get("cartDataSalesView") is not None else None,
            "conversion": GoogleAdsSearchads360V0ResourcesConversion.from_dict(obj["conversion"]) if obj.get("conversion") is not None else None,
            "conversionAction": GoogleAdsSearchads360V0ResourcesConversionAction.from_dict(obj["conversionAction"]) if obj.get("conversionAction") is not None else None,
            "conversionCustomVariable": GoogleAdsSearchads360V0ResourcesConversionCustomVariable.from_dict(obj["conversionCustomVariable"]) if obj.get("conversionCustomVariable") is not None else None,
            "customColumns": [GoogleAdsSearchads360V0CommonValue.from_dict(_item) for _item in obj["customColumns"]] if obj.get("customColumns") is not None else None,
            "customer": GoogleAdsSearchads360V0ResourcesCustomer.from_dict(obj["customer"]) if obj.get("customer") is not None else None,
            "customerAsset": GoogleAdsSearchads360V0ResourcesCustomerAsset.from_dict(obj["customerAsset"]) if obj.get("customerAsset") is not None else None,
            "customerAssetSet": GoogleAdsSearchads360V0ResourcesCustomerAssetSet.from_dict(obj["customerAssetSet"]) if obj.get("customerAssetSet") is not None else None,
            "customerClient": GoogleAdsSearchads360V0ResourcesCustomerClient.from_dict(obj["customerClient"]) if obj.get("customerClient") is not None else None,
            "customerManagerLink": GoogleAdsSearchads360V0ResourcesCustomerManagerLink.from_dict(obj["customerManagerLink"]) if obj.get("customerManagerLink") is not None else None,
            "dynamicSearchAdsSearchTermView": GoogleAdsSearchads360V0ResourcesDynamicSearchAdsSearchTermView.from_dict(obj["dynamicSearchAdsSearchTermView"]) if obj.get("dynamicSearchAdsSearchTermView") is not None else None,
            "genderView": GoogleAdsSearchads360V0ResourcesGenderView.from_dict(obj["genderView"]) if obj.get("genderView") is not None else None,
            "geoTargetConstant": GoogleAdsSearchads360V0ResourcesGeoTargetConstant.from_dict(obj["geoTargetConstant"]) if obj.get("geoTargetConstant") is not None else None,
            "keywordView": GoogleAdsSearchads360V0ResourcesKeywordView.from_dict(obj["keywordView"]) if obj.get("keywordView") is not None else None,
            "label": GoogleAdsSearchads360V0ResourcesLabel.from_dict(obj["label"]) if obj.get("label") is not None else None,
            "languageConstant": GoogleAdsSearchads360V0ResourcesLanguageConstant.from_dict(obj["languageConstant"]) if obj.get("languageConstant") is not None else None,
            "locationView": GoogleAdsSearchads360V0ResourcesLocationView.from_dict(obj["locationView"]) if obj.get("locationView") is not None else None,
            "metrics": GoogleAdsSearchads360V0CommonMetrics.from_dict(obj["metrics"]) if obj.get("metrics") is not None else None,
            "productBiddingCategoryConstant": GoogleAdsSearchads360V0ResourcesProductBiddingCategoryConstant.from_dict(obj["productBiddingCategoryConstant"]) if obj.get("productBiddingCategoryConstant") is not None else None,
            "productGroupView": GoogleAdsSearchads360V0ResourcesProductGroupView.from_dict(obj["productGroupView"]) if obj.get("productGroupView") is not None else None,
            "segments": GoogleAdsSearchads360V0CommonSegments.from_dict(obj["segments"]) if obj.get("segments") is not None else None,
            "shoppingPerformanceView": GoogleAdsSearchads360V0ResourcesShoppingPerformanceView.from_dict(obj["shoppingPerformanceView"]) if obj.get("shoppingPerformanceView") is not None else None,
            "userList": GoogleAdsSearchads360V0ResourcesUserList.from_dict(obj["userList"]) if obj.get("userList") is not None else None,
            "visit": GoogleAdsSearchads360V0ResourcesVisit.from_dict(obj["visit"]) if obj.get("visit") is not None else None,
            "webpageView": GoogleAdsSearchads360V0ResourcesWebpageView.from_dict(obj["webpageView"]) if obj.get("webpageView") is not None else None
        })
        return _obj


