# coding: utf-8

"""
    Search Ads 360 Reporting API

    The Search Ads 360 API allows developers to automate downloading reports from Search Ads 360.

    The version of the OpenAPI document: v0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_ads_searchads360_v0_resources_bidding_strategy import GoogleAdsSearchads360V0ResourcesBiddingStrategy

class TestGoogleAdsSearchads360V0ResourcesBiddingStrategy(unittest.TestCase):
    """GoogleAdsSearchads360V0ResourcesBiddingStrategy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleAdsSearchads360V0ResourcesBiddingStrategy:
        """Test GoogleAdsSearchads360V0ResourcesBiddingStrategy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleAdsSearchads360V0ResourcesBiddingStrategy`
        """
        model = GoogleAdsSearchads360V0ResourcesBiddingStrategy()
        if include_optional:
            return GoogleAdsSearchads360V0ResourcesBiddingStrategy(
                campaign_count = '',
                currency_code = '',
                effective_currency_code = '',
                enhanced_cpc = None,
                id = '',
                maximize_conversion_value = openapi_client.models.google_ads_searchads360_v0_common__maximize_conversion_value.GoogleAdsSearchads360V0Common__MaximizeConversionValue(
                    cpc_bid_ceiling_micros = '', 
                    cpc_bid_floor_micros = '', 
                    target_roas = 1.337, ),
                maximize_conversions = openapi_client.models.google_ads_searchads360_v0_common__maximize_conversions.GoogleAdsSearchads360V0Common__MaximizeConversions(
                    cpc_bid_ceiling_micros = '', 
                    cpc_bid_floor_micros = '', 
                    target_cpa_micros = '', ),
                name = '',
                non_removed_campaign_count = '',
                resource_name = '',
                status = 'UNSPECIFIED',
                target_cpa = openapi_client.models.google_ads_searchads360_v0_common__target_cpa.GoogleAdsSearchads360V0Common__TargetCpa(
                    cpc_bid_ceiling_micros = '', 
                    cpc_bid_floor_micros = '', 
                    target_cpa_micros = '', ),
                target_impression_share = openapi_client.models.google_ads_searchads360_v0_common__target_impression_share.GoogleAdsSearchads360V0Common__TargetImpressionShare(
                    cpc_bid_ceiling_micros = '', 
                    location = 'UNSPECIFIED', 
                    location_fraction_micros = '', ),
                target_outrank_share = openapi_client.models.google_ads_searchads360_v0_common__target_outrank_share.GoogleAdsSearchads360V0Common__TargetOutrankShare(
                    cpc_bid_ceiling_micros = '', ),
                target_roas = openapi_client.models.google_ads_searchads360_v0_common__target_roas.GoogleAdsSearchads360V0Common__TargetRoas(
                    cpc_bid_ceiling_micros = '', 
                    cpc_bid_floor_micros = '', 
                    target_roas = 1.337, ),
                target_spend = openapi_client.models.google_ads_searchads360_v0_common__target_spend.GoogleAdsSearchads360V0Common__TargetSpend(
                    cpc_bid_ceiling_micros = '', 
                    target_spend_micros = '', ),
                type = 'UNSPECIFIED'
            )
        else:
            return GoogleAdsSearchads360V0ResourcesBiddingStrategy(
        )
        """

    def testGoogleAdsSearchads360V0ResourcesBiddingStrategy(self):
        """Test GoogleAdsSearchads360V0ResourcesBiddingStrategy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
