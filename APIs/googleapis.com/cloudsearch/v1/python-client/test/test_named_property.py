# coding: utf-8

"""
    Cloud Search API

    Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.named_property import NamedProperty

class TestNamedProperty(unittest.TestCase):
    """NamedProperty unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NamedProperty:
        """Test NamedProperty
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NamedProperty`
        """
        model = NamedProperty()
        if include_optional:
            return NamedProperty(
                boolean_value = True,
                date_values = openapi_client.models.date_values.DateValues(
                    values = [
                        openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, )
                        ], ),
                double_values = openapi_client.models.double_values.DoubleValues(
                    values = [
                        1.337
                        ], ),
                enum_values = openapi_client.models.enum_values.EnumValues(
                    values = [
                        ''
                        ], ),
                html_values = openapi_client.models.html_values.HtmlValues(
                    values = [
                        ''
                        ], ),
                integer_values = openapi_client.models.integer_values.IntegerValues(
                    values = [
                        ''
                        ], ),
                name = '',
                object_values = openapi_client.models.object_values.ObjectValues(
                    values = [
                        openapi_client.models.structured_data_object.StructuredDataObject(
                            properties = [
                                openapi_client.models.named_property.NamedProperty(
                                    boolean_value = True, 
                                    date_values = openapi_client.models.date_values.DateValues(), 
                                    double_values = openapi_client.models.double_values.DoubleValues(), 
                                    enum_values = openapi_client.models.enum_values.EnumValues(), 
                                    html_values = openapi_client.models.html_values.HtmlValues(), 
                                    integer_values = openapi_client.models.integer_values.IntegerValues(), 
                                    name = '', 
                                    text_values = openapi_client.models.text_values.TextValues(), 
                                    timestamp_values = openapi_client.models.timestamp_values.TimestampValues(), )
                                ], )
                        ], ),
                text_values = openapi_client.models.text_values.TextValues(
                    values = [
                        ''
                        ], ),
                timestamp_values = openapi_client.models.timestamp_values.TimestampValues(
                    values = [
                        ''
                        ], )
            )
        else:
            return NamedProperty(
        )
        """

    def testNamedProperty(self):
        """Test NamedProperty"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
