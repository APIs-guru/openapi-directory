# coding: utf-8

"""
    Cloud Search API

    Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.object_options import ObjectOptions

class TestObjectOptions(unittest.TestCase):
    """ObjectOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ObjectOptions:
        """Test ObjectOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ObjectOptions`
        """
        model = ObjectOptions()
        if include_optional:
            return ObjectOptions(
                display_options = openapi_client.models.object_display_options.ObjectDisplayOptions(
                    metalines = [
                        openapi_client.models.metaline.Metaline(
                            properties = [
                                openapi_client.models.displayed_property.DisplayedProperty(
                                    property_name = '', )
                                ], )
                        ], 
                    object_display_label = '', ),
                freshness_options = openapi_client.models.freshness_options.FreshnessOptions(
                    freshness_duration = '', 
                    freshness_property = '', ),
                suggestion_filtering_operators = [
                    ''
                    ]
            )
        else:
            return ObjectOptions(
        )
        """

    def testObjectOptions(self):
        """Test ObjectOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
