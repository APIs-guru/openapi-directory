# coding: utf-8

"""
    Cloud Search API

    Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_data_source_response import ListDataSourceResponse

class TestListDataSourceResponse(unittest.TestCase):
    """ListDataSourceResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDataSourceResponse:
        """Test ListDataSourceResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDataSourceResponse`
        """
        model = ListDataSourceResponse()
        if include_optional:
            return ListDataSourceResponse(
                next_page_token = '',
                sources = [
                    openapi_client.models.data_source.DataSource(
                        disable_modifications = True, 
                        disable_serving = True, 
                        display_name = '', 
                        indexing_service_accounts = [
                            ''
                            ], 
                        items_visibility = [
                            openapi_client.models.g_suite_principal.GSuitePrincipal(
                                gsuite_domain = True, 
                                gsuite_group_email = '', 
                                gsuite_user_email = '', )
                            ], 
                        name = '', 
                        operation_ids = [
                            ''
                            ], 
                        return_thumbnail_urls = True, 
                        short_name = '', )
                    ]
            )
        else:
            return ListDataSourceResponse(
        )
        """

    def testListDataSourceResponse(self):
        """Test ListDataSourceResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
