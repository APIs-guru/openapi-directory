# coding: utf-8

"""
    Cloud Search API

    Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_topaz_sidekick_recent_documents_card_proto import EnterpriseTopazSidekickRecentDocumentsCardProto

class TestEnterpriseTopazSidekickRecentDocumentsCardProto(unittest.TestCase):
    """EnterpriseTopazSidekickRecentDocumentsCardProto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseTopazSidekickRecentDocumentsCardProto:
        """Test EnterpriseTopazSidekickRecentDocumentsCardProto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseTopazSidekickRecentDocumentsCardProto`
        """
        model = EnterpriseTopazSidekickRecentDocumentsCardProto()
        if include_optional:
            return EnterpriseTopazSidekickRecentDocumentsCardProto(
                document = [
                    openapi_client.models.enterprise_topaz_sidekick_common_document.EnterpriseTopazSidekickCommonDocument(
                        access_type = 'UNKNOWN_ACCESS', 
                        debug_info = openapi_client.models.enterprise_topaz_sidekick_common_debug_info.EnterpriseTopazSidekickCommonDebugInfo(
                            message = '', ), 
                        document_id = '', 
                        drive_document_metadata = openapi_client.models.enterprise_topaz_sidekick_common_document_drive_document_metadata.EnterpriseTopazSidekickCommonDocumentDriveDocumentMetadata(
                            document_id = '', 
                            is_private = True, 
                            last_comment_time_ms = '', 
                            last_edit_time_ms = '', 
                            last_modification_time_millis = '', 
                            last_updated_time_ms = '', 
                            last_view_time_ms = '', 
                            owner = openapi_client.models.enterprise_topaz_sidekick_common_person.EnterpriseTopazSidekickCommonPerson(
                                birthday = openapi_client.models.enterprise_topaz_sidekick_common_person_birthday.EnterpriseTopazSidekickCommonPersonBirthday(
                                    value = '', ), 
                                cell_phone = '', 
                                department = '', 
                                desk_location = '', 
                                desk_phone = '', 
                                display_name = '', 
                                email = '', 
                                family_name = '', 
                                full_address = '', 
                                gaia_id = '', 
                                given_name = '', 
                                job_title = '', 
                                manager = openapi_client.models.enterprise_topaz_sidekick_common_person.EnterpriseTopazSidekickCommonPerson(
                                    cell_phone = '', 
                                    department = '', 
                                    desk_location = '', 
                                    desk_phone = '', 
                                    display_name = '', 
                                    email = '', 
                                    family_name = '', 
                                    full_address = '', 
                                    gaia_id = '', 
                                    given_name = '', 
                                    job_title = '', 
                                    obfuscated_id = '', 
                                    photo_url = '', 
                                    street_address = '', ), 
                                obfuscated_id = '', 
                                photo_url = '', 
                                street_address = '', ), 
                            scope = 'UNKNOWN_DOCUMENT_SCOPE', ), 
                        generic_url = '', 
                        justification = openapi_client.models.enterprise_topaz_sidekick_common_document_justification.EnterpriseTopazSidekickCommonDocumentJustification(
                            reason = 'UNKNOWN', ), 
                        mime_type = '', 
                        provenance = 'UNKNOWN_PROVENANCE', 
                        reason = 'UNKNOWN', 
                        snippet = '', 
                        thumbnail_url = '', 
                        title = '', 
                        type = 'UNKNOWN', 
                        url = '', )
                    ]
            )
        else:
            return EnterpriseTopazSidekickRecentDocumentsCardProto(
        )
        """

    def testEnterpriseTopazSidekickRecentDocumentsCardProto(self):
        """Test EnterpriseTopazSidekickRecentDocumentsCardProto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
