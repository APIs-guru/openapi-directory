# coding: utf-8

"""
    Cloud Search API

    Cloud Search provides cloud-based search capabilities over Google Workspace data. The Cloud Search API allows indexing of non-Google Workspace data into Cloud Search.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.enterprise_topaz_sidekick_scheduled_meeting import EnterpriseTopazSidekickScheduledMeeting

class TestEnterpriseTopazSidekickScheduledMeeting(unittest.TestCase):
    """EnterpriseTopazSidekickScheduledMeeting unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EnterpriseTopazSidekickScheduledMeeting:
        """Test EnterpriseTopazSidekickScheduledMeeting
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EnterpriseTopazSidekickScheduledMeeting`
        """
        model = EnterpriseTopazSidekickScheduledMeeting()
        if include_optional:
            return EnterpriseTopazSidekickScheduledMeeting(
                meeting_location = '',
                meeting_time = openapi_client.models.enterprise_topaz_sidekick_time_slot.EnterpriseTopazSidekickTimeSlot(
                    end_time_day = '', 
                    end_time_hour_and_minute = '', 
                    end_time_in_millis = '', 
                    start_time_day = '', 
                    start_time_hour_and_minute = '', 
                    start_time_in_millis = '', ),
                meeting_title = ''
            )
        else:
            return EnterpriseTopazSidekickScheduledMeeting(
        )
        """

    def testEnterpriseTopazSidekickScheduledMeeting(self):
        """Test EnterpriseTopazSidekickScheduledMeeting"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
