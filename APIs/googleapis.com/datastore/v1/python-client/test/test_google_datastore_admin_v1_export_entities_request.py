# coding: utf-8

"""
    Cloud Datastore API

    Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_datastore_admin_v1_export_entities_request import GoogleDatastoreAdminV1ExportEntitiesRequest

class TestGoogleDatastoreAdminV1ExportEntitiesRequest(unittest.TestCase):
    """GoogleDatastoreAdminV1ExportEntitiesRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleDatastoreAdminV1ExportEntitiesRequest:
        """Test GoogleDatastoreAdminV1ExportEntitiesRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleDatastoreAdminV1ExportEntitiesRequest`
        """
        model = GoogleDatastoreAdminV1ExportEntitiesRequest()
        if include_optional:
            return GoogleDatastoreAdminV1ExportEntitiesRequest(
                entity_filter = openapi_client.models.google_datastore_admin_v1_entity_filter.GoogleDatastoreAdminV1EntityFilter(
                    kinds = [
                        ''
                        ], 
                    namespace_ids = [
                        ''
                        ], ),
                labels = {
                    'key' : ''
                    },
                output_url_prefix = ''
            )
        else:
            return GoogleDatastoreAdminV1ExportEntitiesRequest(
        )
        """

    def testGoogleDatastoreAdminV1ExportEntitiesRequest(self):
        """Test GoogleDatastoreAdminV1ExportEntitiesRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
