# coding: utf-8

"""
    Cloud Datastore API

    Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.lookup_request import LookupRequest

class TestLookupRequest(unittest.TestCase):
    """LookupRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LookupRequest:
        """Test LookupRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LookupRequest`
        """
        model = LookupRequest()
        if include_optional:
            return LookupRequest(
                database_id = '',
                keys = [
                    openapi_client.models.key.Key(
                        partition_id = openapi_client.models.partition_id.PartitionId(
                            database_id = '', 
                            namespace_id = '', 
                            project_id = '', ), 
                        path = [
                            openapi_client.models.path_element.PathElement(
                                id = '', 
                                kind = '', 
                                name = '', )
                            ], )
                    ],
                read_options = openapi_client.models.read_options.ReadOptions(
                    new_transaction = openapi_client.models.transaction_options.TransactionOptions(
                        read_only = openapi_client.models.read_only.ReadOnly(
                            read_time = '', ), 
                        read_write = openapi_client.models.read_write.ReadWrite(
                            previous_transaction = 'YQ==', ), ), 
                    read_consistency = 'READ_CONSISTENCY_UNSPECIFIED', 
                    read_time = '', 
                    transaction = 'YQ==', )
            )
        else:
            return LookupRequest(
        )
        """

    def testLookupRequest(self):
        """Test LookupRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
