# coding: utf-8

"""
    Cloud Datastore API

    Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.array_value import ArrayValue

class TestArrayValue(unittest.TestCase):
    """ArrayValue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ArrayValue:
        """Test ArrayValue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ArrayValue`
        """
        model = ArrayValue()
        if include_optional:
            return ArrayValue(
                values = [
                    openapi_client.models.value.Value(
                        array_value = openapi_client.models.array_value.ArrayValue(), 
                        blob_value = 'YQ==', 
                        boolean_value = True, 
                        double_value = 1.337, 
                        entity_value = openapi_client.models.entity.Entity(
                            key = openapi_client.models.key.Key(
                                partition_id = openapi_client.models.partition_id.PartitionId(
                                    database_id = '', 
                                    namespace_id = '', 
                                    project_id = '', ), 
                                path = [
                                    openapi_client.models.path_element.PathElement(
                                        id = '', 
                                        kind = '', 
                                        name = '', )
                                    ], ), 
                            properties = {
                                'key' : openapi_client.models.value.Value(
                                    blob_value = 'YQ==', 
                                    boolean_value = True, 
                                    double_value = 1.337, 
                                    exclude_from_indexes = True, 
                                    geo_point_value = openapi_client.models.lat_lng.LatLng(
                                        latitude = 1.337, 
                                        longitude = 1.337, ), 
                                    integer_value = '', 
                                    key_value = openapi_client.models.key.Key(), 
                                    meaning = 56, 
                                    null_value = 'NULL_VALUE', 
                                    string_value = '', 
                                    timestamp_value = '', )
                                }, ), 
                        exclude_from_indexes = True, 
                        geo_point_value = openapi_client.models.lat_lng.LatLng(
                            latitude = 1.337, 
                            longitude = 1.337, ), 
                        integer_value = '', 
                        key_value = , 
                        meaning = 56, 
                        null_value = 'NULL_VALUE', 
                        string_value = '', 
                        timestamp_value = '', )
                    ]
            )
        else:
            return ArrayValue(
        )
        """

    def testArrayValue(self):
        """Test ArrayValue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
