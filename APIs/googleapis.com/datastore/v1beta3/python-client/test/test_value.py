# coding: utf-8

"""
    Cloud Datastore API

    Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.value import Value

class TestValue(unittest.TestCase):
    """Value unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Value:
        """Test Value
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Value`
        """
        model = Value()
        if include_optional:
            return Value(
                array_value = openapi_client.models.array_value.ArrayValue(
                    values = [
                        openapi_client.models.value.Value(
                            blob_value = 'YQ==', 
                            boolean_value = True, 
                            double_value = 1.337, 
                            entity_value = openapi_client.models.entity.Entity(
                                key = openapi_client.models.key.Key(
                                    partition_id = openapi_client.models.partition_id.PartitionId(
                                        namespace_id = '', 
                                        project_id = '', ), 
                                    path = [
                                        openapi_client.models.path_element.PathElement(
                                            id = '', 
                                            kind = '', 
                                            name = '', )
                                        ], ), 
                                properties = {
                                    'key' : openapi_client.models.value.Value(
                                        blob_value = 'YQ==', 
                                        boolean_value = True, 
                                        double_value = 1.337, 
                                        exclude_from_indexes = True, 
                                        geo_point_value = openapi_client.models.lat_lng.LatLng(
                                            latitude = 1.337, 
                                            longitude = 1.337, ), 
                                        integer_value = '', 
                                        key_value = openapi_client.models.key.Key(), 
                                        meaning = 56, 
                                        null_value = 'NULL_VALUE', 
                                        string_value = '', 
                                        timestamp_value = '', )
                                    }, ), 
                            exclude_from_indexes = True, 
                            geo_point_value = openapi_client.models.lat_lng.LatLng(
                                latitude = 1.337, 
                                longitude = 1.337, ), 
                            integer_value = '', 
                            key_value = , 
                            meaning = 56, 
                            null_value = 'NULL_VALUE', 
                            string_value = '', 
                            timestamp_value = '', )
                        ], ),
                blob_value = 'YQ==',
                boolean_value = True,
                double_value = 1.337,
                entity_value = openapi_client.models.entity.Entity(
                    key = openapi_client.models.key.Key(
                        partition_id = openapi_client.models.partition_id.PartitionId(
                            namespace_id = '', 
                            project_id = '', ), 
                        path = [
                            openapi_client.models.path_element.PathElement(
                                id = '', 
                                kind = '', 
                                name = '', )
                            ], ), 
                    properties = {
                        'key' : openapi_client.models.value.Value(
                            array_value = openapi_client.models.array_value.ArrayValue(
                                values = [
                                    openapi_client.models.value.Value(
                                        blob_value = 'YQ==', 
                                        boolean_value = True, 
                                        double_value = 1.337, 
                                        exclude_from_indexes = True, 
                                        geo_point_value = openapi_client.models.lat_lng.LatLng(
                                            latitude = 1.337, 
                                            longitude = 1.337, ), 
                                        integer_value = '', 
                                        key_value = openapi_client.models.key.Key(), 
                                        meaning = 56, 
                                        null_value = 'NULL_VALUE', 
                                        string_value = '', 
                                        timestamp_value = '', )
                                    ], ), 
                            blob_value = 'YQ==', 
                            boolean_value = True, 
                            double_value = 1.337, 
                            exclude_from_indexes = True, 
                            geo_point_value = openapi_client.models.lat_lng.LatLng(
                                latitude = 1.337, 
                                longitude = 1.337, ), 
                            integer_value = '', 
                            key_value = , 
                            meaning = 56, 
                            null_value = 'NULL_VALUE', 
                            string_value = '', 
                            timestamp_value = '', )
                        }, ),
                exclude_from_indexes = True,
                geo_point_value = openapi_client.models.lat_lng.LatLng(
                    latitude = 1.337, 
                    longitude = 1.337, ),
                integer_value = '',
                key_value = openapi_client.models.key.Key(
                    partition_id = openapi_client.models.partition_id.PartitionId(
                        namespace_id = '', 
                        project_id = '', ), 
                    path = [
                        openapi_client.models.path_element.PathElement(
                            id = '', 
                            kind = '', 
                            name = '', )
                        ], ),
                meaning = 56,
                null_value = 'NULL_VALUE',
                string_value = '',
                timestamp_value = ''
            )
        else:
            return Value(
        )
        """

    def testValue(self):
        """Test Value"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
