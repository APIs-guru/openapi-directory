# coding: utf-8

"""
    Cloud Datastore API

    Accesses the schemaless NoSQL database to provide fully managed, robust, scalable storage for your application. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_datastore_admin_v1beta1_import_entities_metadata import GoogleDatastoreAdminV1beta1ImportEntitiesMetadata

class TestGoogleDatastoreAdminV1beta1ImportEntitiesMetadata(unittest.TestCase):
    """GoogleDatastoreAdminV1beta1ImportEntitiesMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleDatastoreAdminV1beta1ImportEntitiesMetadata:
        """Test GoogleDatastoreAdminV1beta1ImportEntitiesMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleDatastoreAdminV1beta1ImportEntitiesMetadata`
        """
        model = GoogleDatastoreAdminV1beta1ImportEntitiesMetadata()
        if include_optional:
            return GoogleDatastoreAdminV1beta1ImportEntitiesMetadata(
                common = openapi_client.models.google_datastore_admin_v1beta1_common_metadata.GoogleDatastoreAdminV1beta1CommonMetadata(
                    end_time = '', 
                    labels = {
                        'key' : ''
                        }, 
                    operation_type = 'OPERATION_TYPE_UNSPECIFIED', 
                    start_time = '', 
                    state = 'STATE_UNSPECIFIED', ),
                entity_filter = openapi_client.models.google_datastore_admin_v1beta1_entity_filter.GoogleDatastoreAdminV1beta1EntityFilter(
                    kinds = [
                        ''
                        ], 
                    namespace_ids = [
                        ''
                        ], ),
                input_url = '',
                progress_bytes = openapi_client.models.google_datastore_admin_v1beta1_progress.GoogleDatastoreAdminV1beta1Progress(
                    work_completed = '', 
                    work_estimated = '', ),
                progress_entities = openapi_client.models.google_datastore_admin_v1beta1_progress.GoogleDatastoreAdminV1beta1Progress(
                    work_completed = '', 
                    work_estimated = '', )
            )
        else:
            return GoogleDatastoreAdminV1beta1ImportEntitiesMetadata(
        )
        """

    def testGoogleDatastoreAdminV1beta1ImportEntitiesMetadata(self):
        """Test GoogleDatastoreAdminV1beta1ImportEntitiesMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
