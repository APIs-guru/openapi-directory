# coding: utf-8

"""
    VMware Engine API

    The Google VMware Engine API lets you programmatically manage VMware environments.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_private_connection_peering_routes_response import ListPrivateConnectionPeeringRoutesResponse

class TestListPrivateConnectionPeeringRoutesResponse(unittest.TestCase):
    """ListPrivateConnectionPeeringRoutesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListPrivateConnectionPeeringRoutesResponse:
        """Test ListPrivateConnectionPeeringRoutesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListPrivateConnectionPeeringRoutesResponse`
        """
        model = ListPrivateConnectionPeeringRoutesResponse()
        if include_optional:
            return ListPrivateConnectionPeeringRoutesResponse(
                next_page_token = '',
                peering_routes = [
                    openapi_client.models.peering_route.PeeringRoute(
                        dest_range = '', 
                        direction = 'DIRECTION_UNSPECIFIED', 
                        imported = True, 
                        next_hop_region = '', 
                        priority = '', 
                        type = 'TYPE_UNSPECIFIED', )
                    ]
            )
        else:
            return ListPrivateConnectionPeeringRoutesResponse(
        )
        """

    def testListPrivateConnectionPeeringRoutesResponse(self):
        """Test ListPrivateConnectionPeeringRoutesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
