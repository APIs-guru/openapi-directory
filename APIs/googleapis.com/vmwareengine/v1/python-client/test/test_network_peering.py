# coding: utf-8

"""
    VMware Engine API

    The Google VMware Engine API lets you programmatically manage VMware environments.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.network_peering import NetworkPeering

class TestNetworkPeering(unittest.TestCase):
    """NetworkPeering unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetworkPeering:
        """Test NetworkPeering
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetworkPeering`
        """
        model = NetworkPeering()
        if include_optional:
            return NetworkPeering(
                create_time = '',
                description = '',
                exchange_subnet_routes = True,
                export_custom_routes = True,
                export_custom_routes_with_public_ip = True,
                import_custom_routes = True,
                import_custom_routes_with_public_ip = True,
                name = '',
                peer_mtu = 56,
                peer_network = '',
                peer_network_type = 'PEER_NETWORK_TYPE_UNSPECIFIED',
                state = 'STATE_UNSPECIFIED',
                state_details = '',
                uid = '',
                update_time = '',
                vmware_engine_network = ''
            )
        else:
            return NetworkPeering(
        )
        """

    def testNetworkPeering(self):
        """Test NetworkPeering"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
