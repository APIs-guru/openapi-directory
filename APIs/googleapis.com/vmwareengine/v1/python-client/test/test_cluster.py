# coding: utf-8

"""
    VMware Engine API

    The Google VMware Engine API lets you programmatically manage VMware environments.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.cluster import Cluster

class TestCluster(unittest.TestCase):
    """Cluster unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Cluster:
        """Test Cluster
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Cluster`
        """
        model = Cluster()
        if include_optional:
            return Cluster(
                create_time = '',
                management = True,
                name = '',
                node_type_configs = {
                    'key' : openapi_client.models.node_type_config.NodeTypeConfig(
                        custom_core_count = 56, 
                        node_count = 56, )
                    },
                state = 'STATE_UNSPECIFIED',
                stretched_cluster_config = openapi_client.models.stretched_cluster_config.StretchedClusterConfig(
                    preferred_location = '', 
                    secondary_location = '', ),
                uid = '',
                update_time = ''
            )
        else:
            return Cluster(
        )
        """

    def testCluster(self):
        """Test Cluster"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
