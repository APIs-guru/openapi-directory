# coding: utf-8

"""
    VMware Engine API

    The Google VMware Engine API lets you programmatically manage VMware environments.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.private_connection import PrivateConnection

class TestPrivateConnection(unittest.TestCase):
    """PrivateConnection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PrivateConnection:
        """Test PrivateConnection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PrivateConnection`
        """
        model = PrivateConnection()
        if include_optional:
            return PrivateConnection(
                create_time = '',
                description = '',
                name = '',
                peering_id = '',
                peering_state = 'PEERING_STATE_UNSPECIFIED',
                routing_mode = 'ROUTING_MODE_UNSPECIFIED',
                service_network = '',
                state = 'STATE_UNSPECIFIED',
                type = 'TYPE_UNSPECIFIED',
                uid = '',
                update_time = '',
                vmware_engine_network = '',
                vmware_engine_network_canonical = ''
            )
        else:
            return PrivateConnection(
        )
        """

    def testPrivateConnection(self):
        """Test PrivateConnection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
