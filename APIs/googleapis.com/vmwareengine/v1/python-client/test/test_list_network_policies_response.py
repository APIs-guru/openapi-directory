# coding: utf-8

"""
    VMware Engine API

    The Google VMware Engine API lets you programmatically manage VMware environments.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_network_policies_response import ListNetworkPoliciesResponse

class TestListNetworkPoliciesResponse(unittest.TestCase):
    """ListNetworkPoliciesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListNetworkPoliciesResponse:
        """Test ListNetworkPoliciesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListNetworkPoliciesResponse`
        """
        model = ListNetworkPoliciesResponse()
        if include_optional:
            return ListNetworkPoliciesResponse(
                network_policies = [
                    openapi_client.models.network_policy.NetworkPolicy(
                        create_time = '', 
                        description = '', 
                        edge_services_cidr = '', 
                        external_ip = openapi_client.models.network_service.NetworkService(
                            enabled = True, 
                            state = 'STATE_UNSPECIFIED', ), 
                        internet_access = openapi_client.models.network_service.NetworkService(
                            enabled = True, 
                            state = 'STATE_UNSPECIFIED', ), 
                        name = '', 
                        uid = '', 
                        update_time = '', 
                        vmware_engine_network = '', 
                        vmware_engine_network_canonical = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListNetworkPoliciesResponse(
        )
        """

    def testListNetworkPoliciesResponse(self):
        """Test ListNetworkPoliciesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
