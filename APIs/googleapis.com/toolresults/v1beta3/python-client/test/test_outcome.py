# coding: utf-8

"""
    Cloud Tool Results API

    API to publish and access results from developer tools.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.outcome import Outcome

class TestOutcome(unittest.TestCase):
    """Outcome unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Outcome:
        """Test Outcome
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Outcome`
        """
        model = Outcome()
        if include_optional:
            return Outcome(
                failure_detail = openapi_client.models.failure_detail.FailureDetail(
                    crashed = True, 
                    device_out_of_memory = True, 
                    failed_roboscript = True, 
                    not_installed = True, 
                    other_native_crash = True, 
                    timed_out = True, 
                    unable_to_crawl = True, ),
                inconclusive_detail = openapi_client.models.inconclusive_detail.InconclusiveDetail(
                    aborted_by_user = True, 
                    has_error_logs = True, 
                    infrastructure_failure = True, ),
                skipped_detail = openapi_client.models.skipped_detail.SkippedDetail(
                    incompatible_app_version = True, 
                    incompatible_architecture = True, 
                    incompatible_device = True, ),
                success_detail = openapi_client.models.success_detail.SuccessDetail(
                    other_native_crash = True, ),
                summary = 'unset'
            )
        else:
            return Outcome(
        )
        """

    def testOutcome(self):
        """Test Outcome"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
