# coding: utf-8

"""
    Cloud Tool Results API

    API to publish and access results from developer tools.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.android_test import AndroidTest

class TestAndroidTest(unittest.TestCase):
    """AndroidTest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AndroidTest:
        """Test AndroidTest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AndroidTest`
        """
        model = AndroidTest()
        if include_optional:
            return AndroidTest(
                android_app_info = openapi_client.models.android_app_info.AndroidAppInfo(
                    name = '', 
                    package_name = '', 
                    version_code = '', 
                    version_name = '', ),
                android_instrumentation_test = openapi_client.models.android_instrumentation_test.AndroidInstrumentationTest(
                    test_package_id = '', 
                    test_runner_class = '', 
                    test_targets = [
                        ''
                        ], 
                    use_orchestrator = True, ),
                android_robo_test = openapi_client.models.android_robo_test.AndroidRoboTest(
                    app_initial_activity = '', 
                    bootstrap_package_id = '', 
                    bootstrap_runner_class = '', 
                    max_depth = 56, 
                    max_steps = 56, ),
                android_test_loop = None,
                test_timeout = openapi_client.models.duration.Duration(
                    nanos = 56, 
                    seconds = '', )
            )
        else:
            return AndroidTest(
        )
        """

    def testAndroidTest(self):
        """Test AndroidTest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
