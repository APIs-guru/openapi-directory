# coding: utf-8

"""
    Cloud Tool Results API

    API to publish and access results from developer tools.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_perf_sample_series_response import ListPerfSampleSeriesResponse

class TestListPerfSampleSeriesResponse(unittest.TestCase):
    """ListPerfSampleSeriesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListPerfSampleSeriesResponse:
        """Test ListPerfSampleSeriesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListPerfSampleSeriesResponse`
        """
        model = ListPerfSampleSeriesResponse()
        if include_optional:
            return ListPerfSampleSeriesResponse(
                perf_sample_series = [
                    openapi_client.models.perf_sample_series.PerfSampleSeries(
                        basic_perf_sample_series = openapi_client.models.basic_perf_sample_series.BasicPerfSampleSeries(
                            perf_metric_type = 'perfMetricTypeUnspecified', 
                            perf_unit = 'perfUnitUnspecified', 
                            sample_series_label = 'sampleSeriesTypeUnspecified', ), 
                        execution_id = '', 
                        history_id = '', 
                        project_id = '', 
                        sample_series_id = '', 
                        step_id = '', )
                    ]
            )
        else:
            return ListPerfSampleSeriesResponse(
        )
        """

    def testListPerfSampleSeriesResponse(self):
        """Test ListPerfSampleSeriesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
