# coding: utf-8

"""
    Cloud Tool Results API

    API to publish and access results from developer tools.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_environments_response import ListEnvironmentsResponse

class TestListEnvironmentsResponse(unittest.TestCase):
    """ListEnvironmentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEnvironmentsResponse:
        """Test ListEnvironmentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEnvironmentsResponse`
        """
        model = ListEnvironmentsResponse()
        if include_optional:
            return ListEnvironmentsResponse(
                environments = [
                    openapi_client.models.environment.Environment(
                        completion_time = openapi_client.models.timestamp.Timestamp(
                            nanos = 56, 
                            seconds = '', ), 
                        creation_time = openapi_client.models.timestamp.Timestamp(
                            nanos = 56, 
                            seconds = '', ), 
                        dimension_value = [
                            openapi_client.models.environment_dimension_value_entry.EnvironmentDimensionValueEntry(
                                key = '', 
                                value = '', )
                            ], 
                        display_name = '', 
                        environment_id = '', 
                        environment_result = openapi_client.models.merged_result.MergedResult(
                            outcome = openapi_client.models.outcome.Outcome(
                                failure_detail = openapi_client.models.failure_detail.FailureDetail(
                                    crashed = True, 
                                    device_out_of_memory = True, 
                                    failed_roboscript = True, 
                                    not_installed = True, 
                                    other_native_crash = True, 
                                    timed_out = True, 
                                    unable_to_crawl = True, ), 
                                inconclusive_detail = openapi_client.models.inconclusive_detail.InconclusiveDetail(
                                    aborted_by_user = True, 
                                    has_error_logs = True, 
                                    infrastructure_failure = True, ), 
                                skipped_detail = openapi_client.models.skipped_detail.SkippedDetail(
                                    incompatible_app_version = True, 
                                    incompatible_architecture = True, 
                                    incompatible_device = True, ), 
                                success_detail = openapi_client.models.success_detail.SuccessDetail(
                                    other_native_crash = True, ), 
                                summary = 'unset', ), 
                            state = 'unknownState', 
                            test_suite_overviews = [
                                openapi_client.models.test_suite_overview.TestSuiteOverview(
                                    elapsed_time = openapi_client.models.duration.Duration(
                                        nanos = 56, 
                                        seconds = '', ), 
                                    error_count = 56, 
                                    failure_count = 56, 
                                    flaky_count = 56, 
                                    name = '', 
                                    skipped_count = 56, 
                                    total_count = 56, 
                                    xml_source = openapi_client.models.file_reference.FileReference(
                                        file_uri = '', ), )
                                ], ), 
                        execution_id = '', 
                        history_id = '', 
                        project_id = '', 
                        results_storage = openapi_client.models.results_storage.ResultsStorage(
                            results_storage_path = openapi_client.models.file_reference.FileReference(
                                file_uri = '', ), 
                            xunit_xml_file = , ), 
                        shard_summaries = [
                            openapi_client.models.shard_summary.ShardSummary(
                                runs = [
                                    openapi_client.models.step_summary.StepSummary()
                                    ], 
                                shard_result = openapi_client.models.merged_result.MergedResult(
                                    state = 'unknownState', ), )
                            ], )
                    ],
                execution_id = '',
                history_id = '',
                next_page_token = '',
                project_id = ''
            )
        else:
            return ListEnvironmentsResponse(
        )
        """

    def testListEnvironmentsResponse(self):
        """Test ListEnvironmentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
