# coding: utf-8

"""
    Cloud Tool Results API

    API to publish and access results from developer tools.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.perf_metrics_summary import PerfMetricsSummary

class TestPerfMetricsSummary(unittest.TestCase):
    """PerfMetricsSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PerfMetricsSummary:
        """Test PerfMetricsSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PerfMetricsSummary`
        """
        model = PerfMetricsSummary()
        if include_optional:
            return PerfMetricsSummary(
                app_start_time = openapi_client.models.app_start_time.AppStartTime(
                    fully_drawn_time = openapi_client.models.duration.Duration(
                        nanos = 56, 
                        seconds = '', ), 
                    initial_display_time = openapi_client.models.duration.Duration(
                        nanos = 56, 
                        seconds = '', ), ),
                execution_id = '',
                graphics_stats = openapi_client.models.graphics_stats.GraphicsStats(
                    buckets = [
                        openapi_client.models.graphics_stats_bucket.GraphicsStatsBucket(
                            frame_count = '', 
                            render_millis = '', )
                        ], 
                    high_input_latency_count = '', 
                    janky_frames = '', 
                    missed_vsync_count = '', 
                    p50_millis = '', 
                    p90_millis = '', 
                    p95_millis = '', 
                    p99_millis = '', 
                    slow_bitmap_upload_count = '', 
                    slow_draw_count = '', 
                    slow_ui_thread_count = '', 
                    total_frames = '', ),
                history_id = '',
                perf_environment = openapi_client.models.perf_environment.PerfEnvironment(
                    cpu_info = openapi_client.models.cpu_info.CPUInfo(
                        cpu_processor = '', 
                        cpu_speed_in_ghz = 1.337, 
                        number_of_cores = 56, ), 
                    memory_info = openapi_client.models.memory_info.MemoryInfo(
                        memory_cap_in_kibibyte = '', 
                        memory_total_in_kibibyte = '', ), ),
                perf_metrics = [
                    'perfMetricTypeUnspecified'
                    ],
                project_id = '',
                step_id = ''
            )
        else:
            return PerfMetricsSummary(
        )
        """

    def testPerfMetricsSummary(self):
        """Test PerfMetricsSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
