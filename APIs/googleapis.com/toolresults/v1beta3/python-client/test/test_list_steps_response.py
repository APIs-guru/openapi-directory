# coding: utf-8

"""
    Cloud Tool Results API

    API to publish and access results from developer tools.

    The version of the OpenAPI document: v1beta3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_steps_response import ListStepsResponse

class TestListStepsResponse(unittest.TestCase):
    """ListStepsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListStepsResponse:
        """Test ListStepsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListStepsResponse`
        """
        model = ListStepsResponse()
        if include_optional:
            return ListStepsResponse(
                next_page_token = '',
                steps = [
                    openapi_client.models.step.Step(
                        completion_time = openapi_client.models.timestamp.Timestamp(
                            nanos = 56, 
                            seconds = '', ), 
                        creation_time = openapi_client.models.timestamp.Timestamp(
                            nanos = 56, 
                            seconds = '', ), 
                        description = '', 
                        device_usage_duration = openapi_client.models.duration.Duration(
                            nanos = 56, 
                            seconds = '', ), 
                        dimension_value = [
                            openapi_client.models.step_dimension_value_entry.StepDimensionValueEntry(
                                key = '', 
                                value = '', )
                            ], 
                        has_images = True, 
                        labels = [
                            openapi_client.models.step_labels_entry.StepLabelsEntry(
                                key = '', 
                                value = '', )
                            ], 
                        multi_step = openapi_client.models.multi_step.MultiStep(
                            multistep_number = 56, 
                            primary_step = openapi_client.models.primary_step.PrimaryStep(
                                individual_outcome = [
                                    openapi_client.models.individual_outcome.IndividualOutcome(
                                        multistep_number = 56, 
                                        outcome_summary = 'unset', 
                                        run_duration = openapi_client.models.duration.Duration(
                                            nanos = 56, 
                                            seconds = '', ), 
                                        step_id = '', )
                                    ], 
                                roll_up = 'unset', ), 
                            primary_step_id = '', ), 
                        name = '', 
                        outcome = openapi_client.models.outcome.Outcome(
                            failure_detail = openapi_client.models.failure_detail.FailureDetail(
                                crashed = True, 
                                device_out_of_memory = True, 
                                failed_roboscript = True, 
                                not_installed = True, 
                                other_native_crash = True, 
                                timed_out = True, 
                                unable_to_crawl = True, ), 
                            inconclusive_detail = openapi_client.models.inconclusive_detail.InconclusiveDetail(
                                aborted_by_user = True, 
                                has_error_logs = True, 
                                infrastructure_failure = True, ), 
                            skipped_detail = openapi_client.models.skipped_detail.SkippedDetail(
                                incompatible_app_version = True, 
                                incompatible_architecture = True, 
                                incompatible_device = True, ), 
                            success_detail = openapi_client.models.success_detail.SuccessDetail(
                                other_native_crash = True, ), 
                            summary = 'unset', ), 
                        run_duration = , 
                        state = 'unknownState', 
                        step_id = '', 
                        test_execution_step = openapi_client.models.test_execution_step.TestExecutionStep(
                            test_issues = [
                                openapi_client.models.test_issue.TestIssue(
                                    category = 'unspecifiedCategory', 
                                    error_message = '', 
                                    severity = 'unspecifiedSeverity', 
                                    stack_trace = openapi_client.models.stack_trace.StackTrace(
                                        exception = '', ), 
                                    type = 'unspecifiedType', 
                                    warning = openapi_client.models.any.Any(
                                        type_url = '', 
                                        value = 'YQ==', ), )
                                ], 
                            test_suite_overviews = [
                                openapi_client.models.test_suite_overview.TestSuiteOverview(
                                    elapsed_time = , 
                                    error_count = 56, 
                                    failure_count = 56, 
                                    flaky_count = 56, 
                                    name = '', 
                                    skipped_count = 56, 
                                    total_count = 56, 
                                    xml_source = openapi_client.models.file_reference.FileReference(
                                        file_uri = '', ), )
                                ], 
                            test_timing = openapi_client.models.test_timing.TestTiming(
                                test_process_duration = , ), 
                            tool_execution = openapi_client.models.tool_execution.ToolExecution(
                                command_line_arguments = [
                                    ''
                                    ], 
                                exit_code = openapi_client.models.tool_exit_code.ToolExitCode(
                                    number = 56, ), 
                                tool_logs = [
                                    openapi_client.models.file_reference.FileReference(
                                        file_uri = '', )
                                    ], 
                                tool_outputs = [
                                    openapi_client.models.tool_output_reference.ToolOutputReference(
                                        output = , 
                                        test_case = openapi_client.models.test_case_reference.TestCaseReference(
                                            class_name = '', 
                                            name = '', 
                                            test_suite_name = '', ), )
                                    ], ), ), 
                        tool_execution_step = openapi_client.models.tool_execution_step.ToolExecutionStep(), )
                    ]
            )
        else:
            return ListStepsResponse(
        )
        """

    def testListStepsResponse(self):
        """Test ListStepsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
