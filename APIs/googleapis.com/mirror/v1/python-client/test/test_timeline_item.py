# coding: utf-8

"""
    Google Mirror

    Interacts with Glass users via the timeline.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.timeline_item import TimelineItem

class TestTimelineItem(unittest.TestCase):
    """TimelineItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TimelineItem:
        """Test TimelineItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TimelineItem`
        """
        model = TimelineItem()
        if include_optional:
            return TimelineItem(
                attachments = [
                    openapi_client.models.attachment.Attachment(
                        content_type = '', 
                        content_url = '', 
                        id = '', 
                        is_processing_content = True, )
                    ],
                bundle_id = '',
                canonical_url = '',
                created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                creator = openapi_client.models.contact.Contact(
                    accept_commands = [
                        openapi_client.models.command.Command(
                            type = '', )
                        ], 
                    accept_types = [
                        ''
                        ], 
                    display_name = '', 
                    id = '', 
                    image_urls = [
                        ''
                        ], 
                    kind = 'mirror#contact', 
                    phone_number = '', 
                    priority = 56, 
                    sharing_features = [
                        ''
                        ], 
                    source = '', 
                    speakable_name = '', 
                    type = '', ),
                display_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                etag = '',
                html = '',
                id = '',
                in_reply_to = '',
                is_bundle_cover = True,
                is_deleted = True,
                is_pinned = True,
                kind = 'mirror#timelineItem',
                location = openapi_client.models.location.Location(
                    accuracy = 1.337, 
                    address = '', 
                    display_name = '', 
                    id = '', 
                    kind = 'mirror#location', 
                    latitude = 1.337, 
                    longitude = 1.337, 
                    timestamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                menu_items = [
                    openapi_client.models.menu_item.MenuItem(
                        action = '', 
                        contextual_command = '', 
                        id = '', 
                        payload = '', 
                        remove_when_selected = True, 
                        values = [
                            openapi_client.models.menu_value.MenuValue(
                                display_name = '', 
                                icon_url = '', 
                                state = '', )
                            ], )
                    ],
                notification = openapi_client.models.notification_config.NotificationConfig(
                    delivery_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    level = '', ),
                pin_score = 56,
                recipients = [
                    openapi_client.models.contact.Contact(
                        accept_commands = [
                            openapi_client.models.command.Command(
                                type = '', )
                            ], 
                        accept_types = [
                            ''
                            ], 
                        display_name = '', 
                        id = '', 
                        image_urls = [
                            ''
                            ], 
                        kind = 'mirror#contact', 
                        phone_number = '', 
                        priority = 56, 
                        sharing_features = [
                            ''
                            ], 
                        source = '', 
                        speakable_name = '', 
                        type = '', )
                    ],
                self_link = '',
                source_item_id = '',
                speakable_text = '',
                speakable_type = '',
                text = '',
                title = '',
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return TimelineItem(
        )
        """

    def testTimelineItem(self):
        """Test TimelineItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
