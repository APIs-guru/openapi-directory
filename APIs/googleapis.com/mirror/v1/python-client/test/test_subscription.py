# coding: utf-8

"""
    Google Mirror

    Interacts with Glass users via the timeline.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.subscription import Subscription

class TestSubscription(unittest.TestCase):
    """Subscription unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Subscription:
        """Test Subscription
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Subscription`
        """
        model = Subscription()
        if include_optional:
            return Subscription(
                callback_url = '',
                collection = '',
                id = '',
                kind = 'mirror#subscription',
                notification = openapi_client.models.notification.Notification(
                    collection = '', 
                    item_id = '', 
                    operation = '', 
                    user_actions = [
                        openapi_client.models.user_action.UserAction(
                            payload = '', 
                            type = '', )
                        ], 
                    user_token = '', 
                    verify_token = '', ),
                operation = [
                    ''
                    ],
                updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                user_token = '',
                verify_token = ''
            )
        else:
            return Subscription(
        )
        """

    def testSubscription(self):
        """Test Subscription"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
