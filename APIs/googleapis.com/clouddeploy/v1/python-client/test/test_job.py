# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.job import Job

class TestJob(unittest.TestCase):
    """Job unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Job:
        """Test Job
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Job`
        """
        model = Job()
        if include_optional:
            return Job(
                advance_child_rollout_job = openapi_client.models.advance_child_rollout_job.AdvanceChildRolloutJob(),
                create_child_rollout_job = openapi_client.models.create_child_rollout_job.CreateChildRolloutJob(),
                deploy_job = openapi_client.models.deploy_job.DeployJob(),
                id = '',
                job_run = '',
                postdeploy_job = openapi_client.models.postdeploy_job.PostdeployJob(
                    actions = [
                        ''
                        ], ),
                predeploy_job = openapi_client.models.predeploy_job.PredeployJob(
                    actions = [
                        ''
                        ], ),
                skip_message = '',
                state = 'STATE_UNSPECIFIED',
                verify_job = openapi_client.models.verify_job.VerifyJob()
            )
        else:
            return Job(
        )
        """

    def testJob(self):
        """Test Job"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
