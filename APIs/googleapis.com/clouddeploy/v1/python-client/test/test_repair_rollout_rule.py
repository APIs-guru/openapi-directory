# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.repair_rollout_rule import RepairRolloutRule

class TestRepairRolloutRule(unittest.TestCase):
    """RepairRolloutRule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RepairRolloutRule:
        """Test RepairRolloutRule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RepairRolloutRule`
        """
        model = RepairRolloutRule()
        if include_optional:
            return RepairRolloutRule(
                condition = openapi_client.models.automation_rule_condition.AutomationRuleCondition(
                    targets_present_condition = openapi_client.models.targets_present_condition.TargetsPresentCondition(
                        missing_targets = [
                            ''
                            ], 
                        status = True, 
                        update_time = '', ), ),
                id = '',
                jobs = [
                    ''
                    ],
                repair_modes = [
                    openapi_client.models.repair_mode.RepairMode(
                        retry = openapi_client.models.retry.Retry(
                            attempts = '', 
                            backoff_mode = 'BACKOFF_MODE_UNSPECIFIED', 
                            wait = '', ), 
                        rollback = openapi_client.models.rollback.Rollback(
                            destination_phase = '', ), )
                    ],
                source_phases = [
                    ''
                    ]
            )
        else:
            return RepairRolloutRule(
        )
        """

    def testRepairRolloutRule(self):
        """Test RepairRolloutRule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
