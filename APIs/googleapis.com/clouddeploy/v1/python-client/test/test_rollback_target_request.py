# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rollback_target_request import RollbackTargetRequest

class TestRollbackTargetRequest(unittest.TestCase):
    """RollbackTargetRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RollbackTargetRequest:
        """Test RollbackTargetRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RollbackTargetRequest`
        """
        model = RollbackTargetRequest()
        if include_optional:
            return RollbackTargetRequest(
                release_id = '',
                rollback_config = openapi_client.models.rollback_target_config.RollbackTargetConfig(
                    rollout = openapi_client.models.rollout.Rollout(
                        annotations = {
                            'key' : ''
                            }, 
                        approval_state = 'APPROVAL_STATE_UNSPECIFIED', 
                        approve_time = '', 
                        controller_rollout = '', 
                        create_time = '', 
                        deploy_end_time = '', 
                        deploy_failure_cause = 'FAILURE_CAUSE_UNSPECIFIED', 
                        deploy_start_time = '', 
                        deploying_build = '', 
                        description = '', 
                        enqueue_time = '', 
                        etag = '', 
                        failure_reason = '', 
                        labels = {
                            'key' : ''
                            }, 
                        metadata = openapi_client.models.metadata.Metadata(
                            automation = openapi_client.models.automation_rollout_metadata.AutomationRolloutMetadata(
                                advance_automation_runs = [
                                    ''
                                    ], 
                                current_repair_automation_run = '', 
                                promote_automation_run = '', 
                                repair_automation_runs = [
                                    ''
                                    ], ), 
                            cloud_run = openapi_client.models.cloud_run_metadata.CloudRunMetadata(
                                job = '', 
                                revision = '', 
                                service = '', 
                                service_urls = [
                                    ''
                                    ], ), 
                            custom = openapi_client.models.custom_metadata.CustomMetadata(
                                values = {
                                    'key' : ''
                                    }, ), ), 
                        name = '', 
                        phases = [
                            openapi_client.models.phase.Phase(
                                child_rollout_jobs = openapi_client.models.child_rollout_jobs.ChildRolloutJobs(
                                    advance_rollout_jobs = [
                                        openapi_client.models.job.Job(
                                            advance_child_rollout_job = openapi_client.models.advance_child_rollout_job.AdvanceChildRolloutJob(), 
                                            create_child_rollout_job = openapi_client.models.create_child_rollout_job.CreateChildRolloutJob(), 
                                            deploy_job = openapi_client.models.deploy_job.DeployJob(), 
                                            id = '', 
                                            job_run = '', 
                                            postdeploy_job = openapi_client.models.postdeploy_job.PostdeployJob(
                                                actions = [
                                                    ''
                                                    ], ), 
                                            predeploy_job = openapi_client.models.predeploy_job.PredeployJob(), 
                                            skip_message = '', 
                                            state = 'STATE_UNSPECIFIED', 
                                            verify_job = openapi_client.models.verify_job.VerifyJob(), )
                                        ], 
                                    create_rollout_jobs = [
                                        openapi_client.models.job.Job(
                                            advance_child_rollout_job = openapi_client.models.advance_child_rollout_job.AdvanceChildRolloutJob(), 
                                            create_child_rollout_job = openapi_client.models.create_child_rollout_job.CreateChildRolloutJob(), 
                                            deploy_job = openapi_client.models.deploy_job.DeployJob(), 
                                            id = '', 
                                            job_run = '', 
                                            skip_message = '', 
                                            state = 'STATE_UNSPECIFIED', 
                                            verify_job = openapi_client.models.verify_job.VerifyJob(), )
                                        ], ), 
                                deployment_jobs = openapi_client.models.deployment_jobs.DeploymentJobs(
                                    deploy_job = , 
                                    verify_job = , ), 
                                id = '', 
                                skip_message = '', 
                                state = 'STATE_UNSPECIFIED', )
                            ], 
                        rollback_of_rollout = '', 
                        rolled_back_by_rollouts = [
                            ''
                            ], 
                        state = 'STATE_UNSPECIFIED', 
                        target_id = '', 
                        uid = '', ), 
                    starting_phase_id = '', ),
                rollout_id = '',
                rollout_to_roll_back = '',
                target_id = '',
                validate_only = True
            )
        else:
            return RollbackTargetRequest(
        )
        """

    def testRollbackTargetRequest(self):
        """Test RollbackTargetRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
