# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.custom_canary_deployment import CustomCanaryDeployment

class TestCustomCanaryDeployment(unittest.TestCase):
    """CustomCanaryDeployment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomCanaryDeployment:
        """Test CustomCanaryDeployment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomCanaryDeployment`
        """
        model = CustomCanaryDeployment()
        if include_optional:
            return CustomCanaryDeployment(
                phase_configs = [
                    openapi_client.models.phase_config.PhaseConfig(
                        percentage = 56, 
                        phase_id = '', 
                        postdeploy = openapi_client.models.postdeploy.Postdeploy(
                            actions = [
                                ''
                                ], ), 
                        predeploy = openapi_client.models.predeploy.Predeploy(), 
                        profiles = [
                            ''
                            ], 
                        verify = True, )
                    ]
            )
        else:
            return CustomCanaryDeployment(
        )
        """

    def testCustomCanaryDeployment(self):
        """Test CustomCanaryDeployment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
