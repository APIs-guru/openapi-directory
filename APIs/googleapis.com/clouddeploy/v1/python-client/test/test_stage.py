# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.stage import Stage

class TestStage(unittest.TestCase):
    """Stage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Stage:
        """Test Stage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Stage`
        """
        model = Stage()
        if include_optional:
            return Stage(
                deploy_parameters = [
                    openapi_client.models.deploy_parameters.DeployParameters(
                        match_target_labels = {
                            'key' : ''
                            }, 
                        values = {
                            'key' : ''
                            }, )
                    ],
                profiles = [
                    ''
                    ],
                strategy = openapi_client.models.strategy.Strategy(
                    canary = openapi_client.models.canary.Canary(
                        canary_deployment = openapi_client.models.canary_deployment.CanaryDeployment(
                            percentages = [
                                56
                                ], 
                            postdeploy = openapi_client.models.postdeploy.Postdeploy(
                                actions = [
                                    ''
                                    ], ), 
                            predeploy = openapi_client.models.predeploy.Predeploy(), 
                            verify = True, ), 
                        custom_canary_deployment = openapi_client.models.custom_canary_deployment.CustomCanaryDeployment(
                            phase_configs = [
                                openapi_client.models.phase_config.PhaseConfig(
                                    percentage = 56, 
                                    phase_id = '', 
                                    profiles = [
                                        ''
                                        ], 
                                    verify = True, )
                                ], ), 
                        runtime_config = openapi_client.models.runtime_config.RuntimeConfig(
                            cloud_run = openapi_client.models.cloud_run_config.CloudRunConfig(
                                automatic_traffic_control = True, 
                                canary_revision_tags = [
                                    ''
                                    ], 
                                prior_revision_tags = [
                                    ''
                                    ], 
                                stable_revision_tags = [
                                    ''
                                    ], ), 
                            kubernetes = openapi_client.models.kubernetes_config.KubernetesConfig(
                                gateway_service_mesh = openapi_client.models.gateway_service_mesh.GatewayServiceMesh(
                                    deployment = '', 
                                    http_route = '', 
                                    route_update_wait_time = '', 
                                    service = '', 
                                    stable_cutback_duration = '', ), 
                                service_networking = openapi_client.models.service_networking.ServiceNetworking(
                                    deployment = '', 
                                    disable_pod_overprovisioning = True, 
                                    service = '', ), ), ), ), 
                    standard = openapi_client.models.standard.Standard(
                        verify = True, ), ),
                target_id = ''
            )
        else:
            return Stage(
        )
        """

    def testStage(self):
        """Test Stage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
