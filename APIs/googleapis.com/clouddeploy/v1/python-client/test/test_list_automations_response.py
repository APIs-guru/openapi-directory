# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_automations_response import ListAutomationsResponse

class TestListAutomationsResponse(unittest.TestCase):
    """ListAutomationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListAutomationsResponse:
        """Test ListAutomationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListAutomationsResponse`
        """
        model = ListAutomationsResponse()
        if include_optional:
            return ListAutomationsResponse(
                automations = [
                    openapi_client.models.automation.Automation(
                        annotations = {
                            'key' : ''
                            }, 
                        create_time = '', 
                        description = '', 
                        etag = '', 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        rules = [
                            openapi_client.models.automation_rule.AutomationRule(
                                advance_rollout_rule = openapi_client.models.advance_rollout_rule.AdvanceRolloutRule(
                                    condition = openapi_client.models.automation_rule_condition.AutomationRuleCondition(
                                        targets_present_condition = openapi_client.models.targets_present_condition.TargetsPresentCondition(
                                            missing_targets = [
                                                ''
                                                ], 
                                            status = True, 
                                            update_time = '', ), ), 
                                    id = '', 
                                    source_phases = [
                                        ''
                                        ], 
                                    wait = '', ), 
                                promote_release_rule = openapi_client.models.promote_release_rule.PromoteReleaseRule(
                                    destination_phase = '', 
                                    destination_target_id = '', 
                                    id = '', 
                                    wait = '', ), 
                                repair_rollout_rule = openapi_client.models.repair_rollout_rule.RepairRolloutRule(
                                    id = '', 
                                    jobs = [
                                        ''
                                        ], 
                                    repair_modes = [
                                        openapi_client.models.repair_mode.RepairMode(
                                            retry = openapi_client.models.retry.Retry(
                                                attempts = '', 
                                                backoff_mode = 'BACKOFF_MODE_UNSPECIFIED', 
                                                wait = '', ), 
                                            rollback = openapi_client.models.rollback.Rollback(
                                                destination_phase = '', ), )
                                        ], ), )
                            ], 
                        selector = openapi_client.models.automation_resource_selector.AutomationResourceSelector(
                            targets = [
                                openapi_client.models.target_attribute.TargetAttribute(
                                    id = '', )
                                ], ), 
                        service_account = '', 
                        suspended = True, 
                        uid = '', 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListAutomationsResponse(
        )
        """

    def testListAutomationsResponse(self):
        """Test ListAutomationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
