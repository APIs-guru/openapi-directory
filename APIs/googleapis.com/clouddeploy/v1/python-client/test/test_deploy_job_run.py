# coding: utf-8

"""
    Cloud Deploy API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.deploy_job_run import DeployJobRun

class TestDeployJobRun(unittest.TestCase):
    """DeployJobRun unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DeployJobRun:
        """Test DeployJobRun
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DeployJobRun`
        """
        model = DeployJobRun()
        if include_optional:
            return DeployJobRun(
                artifact = openapi_client.models.deploy_artifact.DeployArtifact(
                    artifact_uri = '', 
                    manifest_paths = [
                        ''
                        ], ),
                build = '',
                failure_cause = 'FAILURE_CAUSE_UNSPECIFIED',
                failure_message = '',
                metadata = openapi_client.models.deploy_job_run_metadata.DeployJobRunMetadata(
                    cloud_run = openapi_client.models.cloud_run_metadata.CloudRunMetadata(
                        job = '', 
                        revision = '', 
                        service = '', 
                        service_urls = [
                            ''
                            ], ), 
                    custom = openapi_client.models.custom_metadata.CustomMetadata(
                        values = {
                            'key' : ''
                            }, ), 
                    custom_target = openapi_client.models.custom_target_deploy_metadata.CustomTargetDeployMetadata(
                        skip_message = '', ), )
            )
        else:
            return DeployJobRun(
        )
        """

    def testDeployJobRun(self):
        """Test DeployJobRun"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
