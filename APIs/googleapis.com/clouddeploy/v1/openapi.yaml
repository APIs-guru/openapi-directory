openapi: 3.0.0
servers:
  - url: https://clouddeploy.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: ""
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Deploy API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://clouddeploy.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: clouddeploy
externalDocs:
  url: https://cloud.google.com/deploy/
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a single Target.
      operationId: clouddeploy.projects.locations.targets.delete
      parameters:
        - description: Required. The name of the `Target` to delete. Format should be `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. If set to true, then deleting an already deleted or non-existing `Target` will succeed.
          in: query
          name: allowMissing
          schema:
            type: boolean
        - description: Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          in: query
          name: etag
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set, validate the request and preview the review, but do not actually post it.
          in: query
          name: validateOnly
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets details of a single Target.
      operationId: clouddeploy.projects.locations.targets.get
      parameters:
        - description: Required. Name of the `Target`. Format must be `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Target"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the parameters of a single Target.
      operationId: clouddeploy.projects.locations.targets.patch
      parameters:
        - description: Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/a-z{0,62}`.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. If set to true, updating a `Target` that does not exist will result in the creation of a new `Target`.
          in: query
          name: allowMissing
          schema:
            type: boolean
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. Field mask is used to specify the fields to be overwritten in the Target resource by the update. The fields specified in the update_mask are relative to the resource, not the full request. A field will be overwritten if it's in the mask. If the user doesn't provide a mask then all fields are overwritten.
          in: query
          name: updateMask
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Target"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: clouddeploy.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: clouddeploy.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:abandon:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Abandons a Release in the Delivery Pipeline.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.abandon
      parameters:
        - description: Required. Name of the Release. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AbandonReleaseRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AbandonReleaseResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:advance:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Advances a Rollout in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.advance
      parameters:
        - description: Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AdvanceRolloutRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdvanceRolloutResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:approve:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Approves a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.approve
      parameters:
        - description: Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ApproveRolloutRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApproveRolloutResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: clouddeploy.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:rollbackTarget:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a `Rollout` to roll back the specified target.
      operationId: clouddeploy.projects.locations.deliveryPipelines.rollbackTarget
      parameters:
        - description: Required. The `DeliveryPipeline` for which the rollback `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RollbackTargetRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RollbackTargetResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:terminate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Terminates a Job Run in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.terminate
      parameters:
        - description: Required. Name of the `JobRun`. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}/jobRuns/{jobRun}`.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateJobRunRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TerminateJobRunResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/automationRuns:
    get:
      description: Lists AutomationRuns in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automationRuns.list
      parameters:
        - description: Required. The parent `Delivery Pipeline`, which owns this collection of automationRuns. Format must be `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter automationRuns to be returned. All fields can be used in the filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of automationRuns to return. The service may return fewer than this value. If unspecified, at most 50 automationRuns will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListAutomationRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAutomationRunsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/automations:
    get:
      description: Lists Automations in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.list
      parameters:
        - description: Required. The parent `Delivery Pipeline`, which owns this collection of automations. Format must be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter automations to be returned. All fields can be used in the filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of automations to return. The service may return fewer than this value. If unspecified, at most 50 automations will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListAutomations` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAutomationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Automation in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.automations.create
      parameters:
        - description: Required. The parent collection in which the `Automation` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the `Automation`.
          in: query
          name: automationId
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Automation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/customTargetTypes:
    get:
      description: Lists CustomTargetTypes in a given project and location.
      operationId: clouddeploy.projects.locations.customTargetTypes.list
      parameters:
        - description: Required. The parent that owns this collection of custom target types. Format must be `projects/{project_id}/locations/{location_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter custom target types to be returned. See https://google.aip.dev/160 for more details.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The maximum number of `CustomTargetType` objects to return. The service may return fewer than this value. If unspecified, at most 50 `CustomTargetType` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListCustomTargetTypes` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomTargetTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new CustomTargetType in a given project and location.
      operationId: clouddeploy.projects.locations.customTargetTypes.create
      parameters:
        - description: Required. The parent collection in which the `CustomTargetType` should be created. Format should be `projects/{project_id}/locations/{location_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the `CustomTargetType`.
          in: query
          name: customTargetTypeId
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomTargetType"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/deliveryPipelines:
    get:
      description: Lists DeliveryPipelines in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.list
      parameters:
        - description: Required. The parent, which owns this collection of pipelines. Format must be `projects/{project_id}/locations/{location_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter pipelines to be returned. See https://google.aip.dev/160 for more details.
          in: query
          name: filter
          schema:
            type: string
        - description: Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: The maximum number of pipelines to return. The service may return fewer than this value. If unspecified, at most 50 pipelines will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListDeliveryPipelines` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListDeliveryPipelinesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new DeliveryPipeline in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.create
      parameters:
        - description: Required. The parent collection in which the `DeliveryPipeline` should be created. Format should be `projects/{project_id}/locations/{location_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the `DeliveryPipeline`.
          in: query
          name: deliveryPipelineId
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeliveryPipeline"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/jobRuns:
    get:
      description: Lists JobRuns in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.jobRuns.list
      parameters:
        - description: Required. The `Rollout` which owns this collection of `JobRun` objects.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter results to be returned. See https://google.aip.dev/160 for more details.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The maximum number of `JobRun` objects to return. The service may return fewer than this value. If unspecified, at most 50 `JobRun` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListJobRuns` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListJobRunsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/releases:
    get:
      description: Lists Releases in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.list
      parameters:
        - description: Required. The `DeliveryPipeline` which owns this collection of `Release` objects.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter releases to be returned. See https://google.aip.dev/160 for more details.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The maximum number of `Release` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Release` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListReleases` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReleasesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Release in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.create
      parameters:
        - description: Required. The parent collection in which the `Release` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. ID of the `Release`.
          in: query
          name: releaseId
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Release"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/rollouts:
    get:
      description: Lists Rollouts in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.list
      parameters:
        - description: Required. The `Release` which owns this collection of `Rollout` objects.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter rollouts to be returned. See https://google.aip.dev/160 for more details.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The maximum number of `Rollout` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Rollout` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListRollouts` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRolloutsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Rollout in a given project and location.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.create
      parameters:
        - description: Required. The parent collection in which the `Rollout` should be created. Format should be `projects/{project_id}/locations/{location_name}/deliveryPipelines/{pipeline_name}/releases/{release_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. ID of the `Rollout`.
          in: query
          name: rolloutId
          schema:
            type: string
        - description: Optional. The starting phase ID for the `Rollout`. If empty the `Rollout` will start at the first phase.
          in: query
          name: startingPhaseId
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Rollout"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/targets:
    get:
      description: Lists Targets in a given project and location.
      operationId: clouddeploy.projects.locations.targets.list
      parameters:
        - description: Required. The parent, which owns this collection of targets. Format must be `projects/{project_id}/locations/{location_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. Filter targets to be returned. See https://google.aip.dev/160 for more details.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field to sort by. See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The maximum number of `Target` objects to return. The service may return fewer than this value. If unspecified, at most 50 `Target` objects will be returned. The maximum value is 1000; values above 1000 will be set to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token, received from a previous `ListTargets` call. Provide this to retrieve the subsequent page. When paginating, all other provided parameters match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTargetsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Target in a given project and location.
      operationId: clouddeploy.projects.locations.targets.create
      parameters:
        - description: Required. The parent collection in which the `Target` should be created. Format should be `projects/{project_id}/locations/{location_name}`.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. A request ID to identify requests. Specify a unique request ID so that if you must retry your request, the server knows to ignore the request if it has already been completed. The server guarantees that for at least 60 minutes after the first request. For example, consider a situation where you make an initial request and the request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. ID of the `Target`.
          in: query
          name: targetId
          schema:
            type: string
        - description: Optional. If set to true, the request is validated and the user is provided with an expected result, but no actual change is made.
          in: query
          name: validateOnly
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Target"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: clouddeploy.projects.locations.targets.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: clouddeploy.projects.locations.targets.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: clouddeploy.projects.locations.targets.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{rollout}:ignoreJob:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Ignores the specified Job in a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.ignoreJob
      parameters:
        - description: Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          in: path
          name: rollout
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/IgnoreJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IgnoreJobResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{rollout}:retryJob:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retries the specified Job in a Rollout.
      operationId: clouddeploy.projects.locations.deliveryPipelines.releases.rollouts.retryJob
      parameters:
        - description: Required. Name of the Rollout. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/{rollout}`.
          in: path
          name: rollout
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetryJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RetryJobResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AbandonReleaseRequest:
      description: The request object used by `AbandonRelease`.
      properties: {}
      type: object
    AbandonReleaseResponse:
      description: The response object for `AbandonRelease`.
      properties: {}
      type: object
    AdvanceChildRolloutJob:
      description: An advanceChildRollout Job.
      properties: {}
      type: object
    AdvanceChildRolloutJobRun:
      description: AdvanceChildRolloutJobRun contains information specific to a advanceChildRollout `JobRun`.
      properties:
        rollout:
          description: Output only. Name of the `ChildRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
          readOnly: true
          type: string
        rolloutPhaseId:
          description: Output only. the ID of the ChildRollout's Phase.
          readOnly: true
          type: string
      type: object
    AdvanceRolloutOperation:
      description: Contains the information of an automated advance-rollout operation.
      properties:
        destinationPhase:
          description: Output only. The phase the rollout will be advanced to.
          readOnly: true
          type: string
        rollout:
          description: Output only. The name of the rollout that initiates the `AutomationRun`.
          readOnly: true
          type: string
        sourcePhase:
          description: Output only. The phase of a deployment that initiated the operation.
          readOnly: true
          type: string
        wait:
          description: Output only. How long the operation will be paused.
          format: google-duration
          readOnly: true
          type: string
      type: object
    AdvanceRolloutRequest:
      description: The request object used by `AdvanceRollout`.
      properties:
        phaseId:
          description: Required. The phase ID to advance the `Rollout` to.
          type: string
      type: object
    AdvanceRolloutResponse:
      description: The response object from `AdvanceRollout`.
      properties: {}
      type: object
    AdvanceRolloutRule:
      description: The `AdvanceRollout` automation rule will automatically advance a successful Rollout to the next phase.
      properties:
        condition:
          $ref: "#/components/schemas/AutomationRuleCondition"
          description: Output only. Information around the state of the Automation rule.
          readOnly: true
        id:
          description: Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
          type: string
        sourcePhases:
          description: "Optional. Proceeds only after phase name matched any one in the list. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`."
          items:
            type: string
          type: array
        wait:
          description: Optional. How long to wait after a rollout is finished.
          format: google-duration
          type: string
      type: object
    AnthosCluster:
      description: Information specifying an Anthos Cluster.
      properties:
        membership:
          description: Membership of the GKE Hub-registered cluster to which to apply the Skaffold configuration. Format is `projects/{project}/locations/{location}/memberships/{membership_name}`.
          type: string
      type: object
    ApproveRolloutRequest:
      description: The request object used by `ApproveRollout`.
      properties:
        approved:
          description: Required. True = approve; false = reject
          type: boolean
      type: object
    ApproveRolloutResponse:
      description: The response object from `ApproveRollout`.
      properties: {}
      type: object
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    Automation:
      description: An `Automation` resource in the Cloud Deploy API. An `Automation` enables the automation of manually driven actions for a Delivery Pipeline, which includes Release promotion among Targets, Rollout repair and Rollout deployment strategy advancement. The intention of Automation is to reduce manual intervention in the continuous delivery process.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: "Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. Annotations must meet the following constraints: * Annotations are key/value pairs. * Valid annotation keys have two segments: an optional prefix and name, separated by a slash (`/`). * The name segment is required and must be 63 characters or less, beginning and ending with an alphanumeric character (`[a-z0-9A-Z]`) with dashes (`-`), underscores (`_`), dots (`.`), and alphanumerics between. * The prefix is optional. If specified, the prefix must be a DNS subdomain: a series of DNS labels separated by dots(`.`), not longer than 253 characters in total, followed by a slash (`/`). See https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/#syntax-and-character-set for more details."
          type: object
        createTime:
          description: Output only. Time at which the automation was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the `Automation`. Max length is 255 characters.
          type: string
        etag:
          description: Optional. The weak etag of the `Automation` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 63 characters."
          type: object
        name:
          description: Output only. Name of the `Automation`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automations/{automation}`.
          readOnly: true
          type: string
        rules:
          description: "Required. List of Automation rules associated with the Automation resource. Must have at least one rule and limited to 250 rules per Delivery Pipeline. Note: the order of the rules here is not the same as the order of execution."
          items:
            $ref: "#/components/schemas/AutomationRule"
          type: array
        selector:
          $ref: "#/components/schemas/AutomationResourceSelector"
          description: Required. Selected resources to which the automation will be applied.
        serviceAccount:
          description: Required. Email address of the user-managed IAM service account that creates Cloud Deploy release and rollout resources.
          type: string
        suspended:
          description: Optional. When Suspended, automation is deactivated from execution.
          type: boolean
        uid:
          description: Output only. Unique identifier of the `Automation`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time at which the automation was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    AutomationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/automation" Platform Log event that describes the Automation related events.
      properties:
        automation:
          description: The name of the `AutomationRun`.
          type: string
        message:
          description: Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    AutomationResourceSelector:
      description: AutomationResourceSelector contains the information to select the resources to which an Automation is going to be applied.
      properties:
        targets:
          description: Contains attributes about a target.
          items:
            $ref: "#/components/schemas/TargetAttribute"
          type: array
      type: object
    AutomationRolloutMetadata:
      description: AutomationRolloutMetadata contains Automation-related actions that were performed on a rollout.
      properties:
        advanceAutomationRuns:
          description: Output only. The IDs of the AutomationRuns initiated by an advance rollout rule.
          items:
            type: string
          readOnly: true
          type: array
        currentRepairAutomationRun:
          description: Output only. The current AutomationRun repairing the rollout.
          readOnly: true
          type: string
        promoteAutomationRun:
          description: Output only. The ID of the AutomationRun initiated by a promote release rule.
          readOnly: true
          type: string
        repairAutomationRuns:
          description: Output only. The IDs of the AutomationRuns initiated by a repair rollout rule.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    AutomationRule:
      description: "`AutomationRule` defines the automation activities."
      properties:
        advanceRolloutRule:
          $ref: "#/components/schemas/AdvanceRolloutRule"
          description: Optional. The `AdvanceRolloutRule` will automatically advance a successful Rollout.
        promoteReleaseRule:
          $ref: "#/components/schemas/PromoteReleaseRule"
          description: Optional. `PromoteReleaseRule` will automatically promote a release from the current target to a specified target.
        repairRolloutRule:
          $ref: "#/components/schemas/RepairRolloutRule"
          description: Optional. The `RepairRolloutRule` will automatically repair a failed rollout.
      type: object
    AutomationRuleCondition:
      description: "`AutomationRuleCondition` contains conditions relevant to an `Automation` rule."
      properties:
        targetsPresentCondition:
          $ref: "#/components/schemas/TargetsPresentCondition"
          description: Optional. Details around targets enumerated in the rule.
      type: object
    AutomationRun:
      description: An `AutomationRun` resource in the Cloud Deploy API. An `AutomationRun` represents an execution instance of an automation rule.
      properties:
        advanceRolloutOperation:
          $ref: "#/components/schemas/AdvanceRolloutOperation"
          description: Output only. Advances a rollout to the next phase.
          readOnly: true
        automationId:
          description: Output only. The ID of the automation that initiated the operation.
          readOnly: true
          type: string
        automationSnapshot:
          $ref: "#/components/schemas/Automation"
          description: Output only. Snapshot of the Automation taken at AutomationRun creation time.
          readOnly: true
        createTime:
          description: Output only. Time at which the `AutomationRun` was created.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Output only. The weak etag of the `AutomationRun` resource. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          readOnly: true
          type: string
        expireTime:
          description: Output only. Time the `AutomationRun` expires. An `AutomationRun` expires after 14 days from its creation date.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Output only. Name of the `AutomationRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{delivery_pipeline}/automationRuns/{automation_run}`.
          readOnly: true
          type: string
        promoteReleaseOperation:
          $ref: "#/components/schemas/PromoteReleaseOperation"
          description: Output only. Promotes a release to a specified 'Target'.
          readOnly: true
        repairRolloutOperation:
          $ref: "#/components/schemas/RepairRolloutOperation"
          description: Output only. Repairs a failed 'Rollout'.
          readOnly: true
        ruleId:
          description: Output only. The ID of the automation rule that initiated the operation.
          readOnly: true
          type: string
        serviceAccount:
          description: Output only. Email address of the user-managed IAM service account that performs the operations against Cloud Deploy resources.
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the `AutomationRun`.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - CANCELLED
            - FAILED
            - IN_PROGRESS
            - PENDING
            - ABORTED
          readOnly: true
          type: string
        stateDescription:
          description: Output only. Explains the current state of the `AutomationRun`. Present only when an explanation is needed.
          readOnly: true
          type: string
        targetId:
          description: Output only. The ID of the target that represents the promotion stage that initiates the `AutomationRun`. The value of this field is the last segment of a target name.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Time at which the automationRun was updated.
          format: google-datetime
          readOnly: true
          type: string
        waitUntilTime:
          description: Output only. Earliest time the `AutomationRun` will attempt to resume. Wait-time is configured by `wait` in automation rule.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    AutomationRunEvent:
      description: Payload proto for "clouddeploy.googleapis.com/automation_run" Platform Log event that describes the AutomationRun related events.
      properties:
        automationId:
          description: Identifier of the `Automation`.
          type: string
        automationRun:
          description: The name of the `AutomationRun`.
          type: string
        destinationTargetId:
          description: ID of the `Target` to which the `AutomationRun` is created.
          type: string
        message:
          description: Debug message for when there is an update on the AutomationRun. Provides further details about the resource creation or state change.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        ruleId:
          description: Identifier of the `Automation` rule.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    BuildArtifact:
      description: Description of an a image to use during Skaffold rendering.
      properties:
        image:
          description: Image name in Skaffold configuration.
          type: string
        tag:
          description: Image tag to use. This will generally be the full path to an image, such as "gcr.io/my-project/busybox:1.2.3" or "gcr.io/my-project/busybox@sha256:abc123".
          type: string
      type: object
    Canary:
      description: Canary represents the canary deployment strategy.
      properties:
        canaryDeployment:
          $ref: "#/components/schemas/CanaryDeployment"
          description: Configures the progressive based deployment for a Target.
        customCanaryDeployment:
          $ref: "#/components/schemas/CustomCanaryDeployment"
          description: Configures the progressive based deployment for a Target, but allows customizing at the phase level where a phase represents each of the percentage deployments.
        runtimeConfig:
          $ref: "#/components/schemas/RuntimeConfig"
          description: Optional. Runtime specific configurations for the deployment strategy. The runtime configuration is used to determine how Cloud Deploy will split traffic to enable a progressive deployment.
      type: object
    CanaryDeployment:
      description: CanaryDeployment represents the canary deployment configuration
      properties:
        percentages:
          description: Required. The percentage based deployments that will occur as a part of a `Rollout`. List is expected in ascending order and each integer n is 0 <= n < 100.
          items:
            format: int32
            type: integer
          type: array
        postdeploy:
          $ref: "#/components/schemas/Postdeploy"
          description: Optional. Configuration for the postdeploy job of the last phase. If this is not configured, there will be no postdeploy job for this phase.
        predeploy:
          $ref: "#/components/schemas/Predeploy"
          description: Optional. Configuration for the predeploy job of the first phase. If this is not configured, there will be no predeploy job for this phase.
        verify:
          description: Whether to run verify tests after each percentage deployment.
          type: boolean
      type: object
    CancelAutomationRunRequest:
      description: The request object used by `CancelAutomationRun`.
      properties: {}
      type: object
    CancelAutomationRunResponse:
      description: The response object from `CancelAutomationRun`.
      properties: {}
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    CancelRolloutRequest:
      description: The request object used by `CancelRollout`.
      properties: {}
      type: object
    CancelRolloutResponse:
      description: The response object from `CancelRollout`.
      properties: {}
      type: object
    ChildRolloutJobs:
      description: ChildRollouts job composition
      properties:
        advanceRolloutJobs:
          description: Output only. List of AdvanceChildRolloutJobs
          items:
            $ref: "#/components/schemas/Job"
          readOnly: true
          type: array
        createRolloutJobs:
          description: Output only. List of CreateChildRolloutJobs
          items:
            $ref: "#/components/schemas/Job"
          readOnly: true
          type: array
      type: object
    CloudRunConfig:
      description: CloudRunConfig contains the Cloud Run runtime configuration.
      properties:
        automaticTrafficControl:
          description: Whether Cloud Deploy should update the traffic stanza in a Cloud Run Service on the user's behalf to facilitate traffic splitting. This is required to be true for CanaryDeployments, but optional for CustomCanaryDeployments.
          type: boolean
        canaryRevisionTags:
          description: Optional. A list of tags that are added to the canary revision while the canary phase is in progress.
          items:
            type: string
          type: array
        priorRevisionTags:
          description: Optional. A list of tags that are added to the prior revision while the canary phase is in progress.
          items:
            type: string
          type: array
        stableRevisionTags:
          description: Optional. A list of tags that are added to the final stable revision when the stable phase is applied.
          items:
            type: string
          type: array
      type: object
    CloudRunLocation:
      description: Information specifying where to deploy a Cloud Run Service.
      properties:
        location:
          description: Required. The location for the Cloud Run Service. Format must be `projects/{project}/locations/{location}`.
          type: string
      type: object
    CloudRunMetadata:
      description: CloudRunMetadata contains information from a Cloud Run deployment.
      properties:
        job:
          description: Output only. The name of the Cloud Run job that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/jobs/{job_name}`.
          readOnly: true
          type: string
        revision:
          description: Output only. The Cloud Run Revision id associated with a `Rollout`.
          readOnly: true
          type: string
        service:
          description: Output only. The name of the Cloud Run Service that is associated with a `Rollout`. Format is `projects/{project}/locations/{location}/services/{service}`.
          readOnly: true
          type: string
        serviceUrls:
          description: Output only. The Cloud Run Service urls that are associated with a `Rollout`.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    CloudRunRenderMetadata:
      description: CloudRunRenderMetadata contains Cloud Run information associated with a `Release` render.
      properties:
        service:
          description: Output only. The name of the Cloud Run Service in the rendered manifest. Format is `projects/{project}/locations/{location}/services/{service}`.
          readOnly: true
          type: string
      type: object
    Config:
      description: Service-wide configuration.
      properties:
        defaultSkaffoldVersion:
          description: Default Skaffold version that is assigned when a Release is created without specifying a Skaffold version.
          type: string
        name:
          description: Name of the configuration.
          type: string
        supportedVersions:
          description: All supported versions of Skaffold.
          items:
            $ref: "#/components/schemas/SkaffoldVersion"
          type: array
      type: object
    CreateChildRolloutJob:
      description: A createChildRollout Job.
      properties: {}
      type: object
    CreateChildRolloutJobRun:
      description: CreateChildRolloutJobRun contains information specific to a createChildRollout `JobRun`.
      properties:
        rollout:
          description: Output only. Name of the `ChildRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
          readOnly: true
          type: string
        rolloutPhaseId:
          description: Output only. The ID of the childRollout Phase initiated by this JobRun.
          readOnly: true
          type: string
      type: object
    CustomCanaryDeployment:
      description: CustomCanaryDeployment represents the custom canary deployment configuration.
      properties:
        phaseConfigs:
          description: Required. Configuration for each phase in the canary deployment in the order executed.
          items:
            $ref: "#/components/schemas/PhaseConfig"
          type: array
      type: object
    CustomMetadata:
      description: CustomMetadata contains information from a user-defined operation.
      properties:
        values:
          additionalProperties:
            type: string
          description: Output only. Key-value pairs provided by the user-defined operation.
          readOnly: true
          type: object
      type: object
    CustomTarget:
      description: Information specifying a Custom Target.
      properties:
        customTargetType:
          description: Required. The name of the CustomTargetType. Format must be `projects/{project}/locations/{location}/customTargetTypes/{custom_target_type}`.
          type: string
      type: object
    CustomTargetDeployMetadata:
      description: CustomTargetDeployMetadata contains information from a Custom Target deploy operation.
      properties:
        skipMessage:
          description: Output only. Skip message provided in the results of a custom deploy operation.
          readOnly: true
          type: string
      type: object
    CustomTargetSkaffoldActions:
      description: CustomTargetSkaffoldActions represents the `CustomTargetType` configuration using Skaffold custom actions.
      properties:
        deployAction:
          description: Required. The Skaffold custom action responsible for deploy operations.
          type: string
        includeSkaffoldModules:
          description: Optional. List of Skaffold modules Cloud Deploy will include in the Skaffold Config as required before performing diagnose.
          items:
            $ref: "#/components/schemas/SkaffoldModules"
          type: array
        renderAction:
          description: Optional. The Skaffold custom action responsible for render operations. If not provided then Cloud Deploy will perform the render operations via `skaffold render`.
          type: string
      type: object
    CustomTargetType:
      description: A `CustomTargetType` resource in the Cloud Deploy API. A `CustomTargetType` defines a type of custom target that can be referenced in a `Target` in order to facilitate deploying to other systems besides the supported runtimes.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
          type: object
        createTime:
          description: Output only. Time at which the `CustomTargetType` was created.
          format: google-datetime
          readOnly: true
          type: string
        customActions:
          $ref: "#/components/schemas/CustomTargetSkaffoldActions"
          description: Configures render and deploy for the `CustomTargetType` using Skaffold custom actions.
        customTargetTypeId:
          description: Output only. Resource id of the `CustomTargetType`.
          readOnly: true
          type: string
        description:
          description: Optional. Description of the `CustomTargetType`. Max length is 255 characters.
          type: string
        etag:
          description: Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."
          type: object
        name:
          description: Optional. Name of the `CustomTargetType`. Format is `projects/{project}/locations/{location}/customTargetTypes/a-z{0,62}`.
          type: string
        uid:
          description: Output only. Unique identifier of the `CustomTargetType`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Most recent time at which the `CustomTargetType` was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DefaultPool:
      description: Execution using the default Cloud Build pool.
      properties:
        artifactStorage:
          description: Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
          type: string
        serviceAccount:
          description: Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
          type: string
      type: object
    DeliveryPipeline:
      description: A `DeliveryPipeline` resource in the Cloud Deploy API. A `DeliveryPipeline` defines a pipeline through which a Skaffold configuration can progress.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy.
          type: object
        condition:
          $ref: "#/components/schemas/PipelineCondition"
          description: Output only. Information around the state of the Delivery Pipeline.
          readOnly: true
        createTime:
          description: Output only. Time at which the pipeline was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Description of the `DeliveryPipeline`. Max length is 255 characters.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."
          type: object
        name:
          description: Optional. Name of the `DeliveryPipeline`. Format is `projects/{project}/locations/{location}/deliveryPipelines/a-z{0,62}`.
          type: string
        serialPipeline:
          $ref: "#/components/schemas/SerialPipeline"
          description: SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
        suspended:
          description: When suspended, no new releases or rollouts can be created, but in-progress ones will complete.
          type: boolean
        uid:
          description: Output only. Unique identifier of the `DeliveryPipeline`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Most recent time at which the pipeline was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    DeliveryPipelineNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/deliverypipeline_notification" Platform Log event that describes the failure to send delivery pipeline status change Pub/Sub notification.
      properties:
        deliveryPipeline:
          description: The name of the `Delivery Pipeline`.
          type: string
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    DeployArtifact:
      description: The artifacts produced by a deploy operation.
      properties:
        artifactUri:
          description: Output only. URI of a directory containing the artifacts. All paths are relative to this location.
          readOnly: true
          type: string
        manifestPaths:
          description: Output only. File paths of the manifests applied during the deploy operation relative to the URI.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    DeployJob:
      description: A deploy Job.
      properties: {}
      type: object
    DeployJobRun:
      description: DeployJobRun contains information specific to a deploy `JobRun`.
      properties:
        artifact:
          $ref: "#/components/schemas/DeployArtifact"
          description: Output only. The artifact of a deploy job run, if available.
          readOnly: true
        build:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to deploy. Format is `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        failureCause:
          description: Output only. The reason the deploy failed. This will always be unspecified while the deploy is in progress or if it succeeded.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - MISSING_RESOURCES_FOR_CANARY
            - CLOUD_BUILD_REQUEST_FAILED
            - DEPLOY_FEATURE_NOT_SUPPORTED
          readOnly: true
          type: string
        failureMessage:
          description: Output only. Additional information about the deploy failure, if available.
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/DeployJobRunMetadata"
          description: Output only. Metadata containing information about the deploy job run.
          readOnly: true
      type: object
    DeployJobRunMetadata:
      description: DeployJobRunMetadata surfaces information associated with a `DeployJobRun` to the user.
      properties:
        cloudRun:
          $ref: "#/components/schemas/CloudRunMetadata"
          description: Output only. The name of the Cloud Run Service that is associated with a `DeployJobRun`.
          readOnly: true
        custom:
          $ref: "#/components/schemas/CustomMetadata"
          description: Output only. Custom metadata provided by user-defined deploy operation.
          readOnly: true
        customTarget:
          $ref: "#/components/schemas/CustomTargetDeployMetadata"
          description: Output only. Custom Target metadata associated with a `DeployJobRun`.
          readOnly: true
      type: object
    DeployParameters:
      description: DeployParameters contains deploy parameters information.
      properties:
        matchTargetLabels:
          additionalProperties:
            type: string
          description: Optional. Deploy parameters are applied to targets with match labels. If unspecified, deploy parameters are applied to all targets (including child targets of a multi-target).
          type: object
        values:
          additionalProperties:
            type: string
          description: Required. Values are deploy parameters in key-value pairs.
          type: object
      type: object
    DeploymentJobs:
      description: Deployment job composition.
      properties:
        deployJob:
          $ref: "#/components/schemas/Job"
          description: Output only. The deploy Job. This is the deploy job in the phase.
          readOnly: true
        postdeployJob:
          $ref: "#/components/schemas/Job"
          description: Output only. The postdeploy Job, which is the last job on the phase.
          readOnly: true
        predeployJob:
          $ref: "#/components/schemas/Job"
          description: Output only. The predeploy Job, which is the first job on the phase.
          readOnly: true
        verifyJob:
          $ref: "#/components/schemas/Job"
          description: Output only. The verify Job. Runs after a deploy if the deploy succeeds.
          readOnly: true
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    ExecutionConfig:
      description: Configuration of the environment to use when calling Skaffold.
      properties:
        artifactStorage:
          description: Optional. Cloud Storage location in which to store execution outputs. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
          type: string
        defaultPool:
          $ref: "#/components/schemas/DefaultPool"
          description: Optional. Use default Cloud Build pool.
        executionTimeout:
          description: Optional. Execution timeout for a Cloud Build Execution. This must be between 10m and 24h in seconds format. If unspecified, a default timeout of 1h is used.
          format: google-duration
          type: string
        privatePool:
          $ref: "#/components/schemas/PrivatePool"
          description: Optional. Use private Cloud Build pool.
        serviceAccount:
          description: Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) is used.
          type: string
        usages:
          description: Required. Usages when this configuration should be applied.
          items:
            enum:
              - EXECUTION_ENVIRONMENT_USAGE_UNSPECIFIED
              - RENDER
              - DEPLOY
              - VERIFY
              - PREDEPLOY
              - POSTDEPLOY
            type: string
          type: array
        workerPool:
          description: Optional. The resource name of the `WorkerPool`, with the format `projects/{project}/locations/{location}/workerPools/{worker_pool}`. If this optional field is unspecified, the default Cloud Build pool will be used.
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    GatewayServiceMesh:
      description: Information about the Kubernetes Gateway API service mesh configuration.
      properties:
        deployment:
          description: Required. Name of the Kubernetes Deployment whose traffic is managed by the specified HTTPRoute and Service.
          type: string
        httpRoute:
          description: Required. Name of the Gateway API HTTPRoute.
          type: string
        routeUpdateWaitTime:
          description: Optional. The time to wait for route updates to propagate. The maximum configurable time is 3 hours, in seconds format. If unspecified, there is no wait time.
          format: google-duration
          type: string
        service:
          description: Required. Name of the Kubernetes Service.
          type: string
        stableCutbackDuration:
          description: Optional. The amount of time to migrate traffic back from the canary Service to the original Service during the stable phase deployment. If specified, must be between 15s and 3600s. If unspecified, there is no cutback time.
          format: google-duration
          type: string
      type: object
    GkeCluster:
      description: Information specifying a GKE Cluster.
      properties:
        cluster:
          description: Information specifying a GKE Cluster. Format is `projects/{project_id}/locations/{location_id}/clusters/{cluster_id}`.
          type: string
        internalIp:
          description: Optional. If true, `cluster` is accessed using the private IP address of the control plane endpoint. Otherwise, the default IP address of the control plane endpoint is used. The default IP address is the private IP address for clusters with private control-plane endpoints and the public IP address otherwise. Only specify this option when `cluster` is a [private GKE cluster](https://cloud.google.com/kubernetes-engine/docs/concepts/private-cluster-concept).
          type: boolean
      type: object
    IgnoreJobRequest:
      description: The request object used by `IgnoreJob`.
      properties:
        jobId:
          description: Required. The job ID for the Job to ignore.
          type: string
        phaseId:
          description: Required. The phase ID the Job to ignore belongs to.
          type: string
      type: object
    IgnoreJobResponse:
      description: The response object from `IgnoreJob`.
      properties: {}
      type: object
    Job:
      description: Job represents an operation for a `Rollout`.
      properties:
        advanceChildRolloutJob:
          $ref: "#/components/schemas/AdvanceChildRolloutJob"
          description: Output only. An advanceChildRollout Job.
          readOnly: true
        createChildRolloutJob:
          $ref: "#/components/schemas/CreateChildRolloutJob"
          description: Output only. A createChildRollout Job.
          readOnly: true
        deployJob:
          $ref: "#/components/schemas/DeployJob"
          description: Output only. A deploy Job.
          readOnly: true
        id:
          description: Output only. The ID of the Job.
          readOnly: true
          type: string
        jobRun:
          description: Output only. The name of the `JobRun` responsible for the most recent invocation of this Job.
          readOnly: true
          type: string
        postdeployJob:
          $ref: "#/components/schemas/PostdeployJob"
          description: Output only. A postdeploy Job.
          readOnly: true
        predeployJob:
          $ref: "#/components/schemas/PredeployJob"
          description: Output only. A predeploy Job.
          readOnly: true
        skipMessage:
          description: Output only. Additional information on why the Job was skipped, if available.
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the Job.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - DISABLED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
            - IGNORED
          readOnly: true
          type: string
        verifyJob:
          $ref: "#/components/schemas/VerifyJob"
          description: Output only. A verify Job.
          readOnly: true
      type: object
    JobRun:
      description: A `JobRun` resource in the Cloud Deploy API. A `JobRun` contains information of a single `Rollout` job evaluation.
      properties:
        advanceChildRolloutJobRun:
          $ref: "#/components/schemas/AdvanceChildRolloutJobRun"
          description: Output only. Information specific to an advanceChildRollout `JobRun`
          readOnly: true
        createChildRolloutJobRun:
          $ref: "#/components/schemas/CreateChildRolloutJobRun"
          description: Output only. Information specific to a createChildRollout `JobRun`.
          readOnly: true
        createTime:
          description: Output only. Time at which the `JobRun` was created.
          format: google-datetime
          readOnly: true
          type: string
        deployJobRun:
          $ref: "#/components/schemas/DeployJobRun"
          description: Output only. Information specific to a deploy `JobRun`.
          readOnly: true
        endTime:
          description: Output only. Time at which the `JobRun` ended.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: Output only. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          readOnly: true
          type: string
        jobId:
          description: Output only. ID of the `Rollout` job this `JobRun` corresponds to.
          readOnly: true
          type: string
        name:
          description: Optional. Name of the `JobRun`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{releases}/rollouts/{rollouts}/jobRuns/{uuid}`.
          type: string
        phaseId:
          description: Output only. ID of the `Rollout` phase this `JobRun` belongs in.
          readOnly: true
          type: string
        postdeployJobRun:
          $ref: "#/components/schemas/PostdeployJobRun"
          description: Output only. Information specific to a postdeploy `JobRun`.
          readOnly: true
        predeployJobRun:
          $ref: "#/components/schemas/PredeployJobRun"
          description: Output only. Information specific to a predeploy `JobRun`.
          readOnly: true
        startTime:
          description: Output only. Time at which the `JobRun` was started.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The current state of the `JobRun`.
          enum:
            - STATE_UNSPECIFIED
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - TERMINATING
            - TERMINATED
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `JobRun`.
          readOnly: true
          type: string
        verifyJobRun:
          $ref: "#/components/schemas/VerifyJobRun"
          description: Output only. Information specific to a verify `JobRun`.
          readOnly: true
      type: object
    JobRunNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/jobrun_notification" Platform Log event that describes the failure to send JobRun resource update Pub/Sub notification.
      properties:
        jobRun:
          description: The name of the `JobRun`.
          type: string
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        rollout:
          description: The name of the `Rollout`.
          type: string
        rolloutUid:
          description: Unique identifier of the `Rollout`.
          type: string
        targetId:
          description: ID of the `Target`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    KubernetesConfig:
      description: KubernetesConfig contains the Kubernetes runtime configuration.
      properties:
        gatewayServiceMesh:
          $ref: "#/components/schemas/GatewayServiceMesh"
          description: Kubernetes Gateway API service mesh configuration.
        serviceNetworking:
          $ref: "#/components/schemas/ServiceNetworking"
          description: Kubernetes Service networking configuration.
      type: object
    ListAutomationRunsResponse:
      description: The response object from `ListAutomationRuns`.
      properties:
        automationRuns:
          description: The `AutomationRuns` objects.
          items:
            $ref: "#/components/schemas/AutomationRun"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListAutomationsResponse:
      description: The response object from `ListAutomations`.
      properties:
        automations:
          description: The `Automation` objects.
          items:
            $ref: "#/components/schemas/Automation"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCustomTargetTypesResponse:
      description: The response object from `ListCustomTargetTypes.`
      properties:
        customTargetTypes:
          description: The `CustomTargetType` objects.
          items:
            $ref: "#/components/schemas/CustomTargetType"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListDeliveryPipelinesResponse:
      description: The response object from `ListDeliveryPipelines`.
      properties:
        deliveryPipelines:
          description: The `DeliveryPipeline` objects.
          items:
            $ref: "#/components/schemas/DeliveryPipeline"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListJobRunsResponse:
      description: ListJobRunsResponse is the response object returned by `ListJobRuns`.
      properties:
        jobRuns:
          description: The `JobRun` objects.
          items:
            $ref: "#/components/schemas/JobRun"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Locations that could not be reached
          items:
            type: string
          type: array
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListReleasesResponse:
      description: The response object from `ListReleases`.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        releases:
          description: The `Release` objects.
          items:
            $ref: "#/components/schemas/Release"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListRolloutsResponse:
      description: ListRolloutsResponse is the response object reutrned by `ListRollouts`.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        rollouts:
          description: The `Rollout` objects.
          items:
            $ref: "#/components/schemas/Rollout"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListTargetsResponse:
      description: The response object from `ListTargets`.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        targets:
          description: The `Target` objects.
          items:
            $ref: "#/components/schemas/Target"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    Metadata:
      description: Metadata includes information associated with a `Rollout`.
      properties:
        automation:
          $ref: "#/components/schemas/AutomationRolloutMetadata"
          description: Output only. AutomationRolloutMetadata contains the information about the interactions between Automation service and this rollout.
          readOnly: true
        cloudRun:
          $ref: "#/components/schemas/CloudRunMetadata"
          description: Output only. The name of the Cloud Run Service that is associated with a `Rollout`.
          readOnly: true
        custom:
          $ref: "#/components/schemas/CustomMetadata"
          description: Output only. Custom metadata provided by user-defined `Rollout` operations.
          readOnly: true
      type: object
    MultiTarget:
      description: Information specifying a multiTarget.
      properties:
        targetIds:
          description: Required. The target_ids of this multiTarget.
          items:
            type: string
          type: array
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    Phase:
      description: Phase represents a collection of jobs that are logically grouped together for a `Rollout`.
      properties:
        childRolloutJobs:
          $ref: "#/components/schemas/ChildRolloutJobs"
          description: Output only. ChildRollout job composition.
          readOnly: true
        deploymentJobs:
          $ref: "#/components/schemas/DeploymentJobs"
          description: Output only. Deployment job composition.
          readOnly: true
        id:
          description: Output only. The ID of the Phase.
          readOnly: true
          type: string
        skipMessage:
          description: Output only. Additional information on why the Phase was skipped, if available.
          readOnly: true
          type: string
        state:
          description: Output only. Current state of the Phase.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - IN_PROGRESS
            - SUCCEEDED
            - FAILED
            - ABORTED
            - SKIPPED
          readOnly: true
          type: string
      type: object
    PhaseArtifact:
      description: Contains the paths to the artifacts, relative to the URI, for a phase.
      properties:
        jobManifestsPath:
          description: Output only. File path of the directory of rendered job manifests relative to the URI. This is only set if it is applicable.
          readOnly: true
          type: string
        manifestPath:
          description: Output only. File path of the rendered manifest relative to the URI.
          readOnly: true
          type: string
        skaffoldConfigPath:
          description: Output only. File path of the resolved Skaffold configuration relative to the URI.
          readOnly: true
          type: string
      type: object
    PhaseConfig:
      description: PhaseConfig represents the configuration for a phase in the custom canary deployment.
      properties:
        percentage:
          description: Required. Percentage deployment for the phase.
          format: int32
          type: integer
        phaseId:
          description: "Required. The ID to assign to the `Rollout` phase. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`."
          type: string
        postdeploy:
          $ref: "#/components/schemas/Postdeploy"
          description: Optional. Configuration for the postdeploy job of this phase. If this is not configured, there will be no postdeploy job for this phase.
        predeploy:
          $ref: "#/components/schemas/Predeploy"
          description: Optional. Configuration for the predeploy job of this phase. If this is not configured, there will be no predeploy job for this phase.
        profiles:
          description: Skaffold profiles to use when rendering the manifest for this phase. These are in addition to the profiles list specified in the `DeliveryPipeline` stage.
          items:
            type: string
          type: array
        verify:
          description: Whether to run verify tests after the deployment.
          type: boolean
      type: object
    PipelineCondition:
      description: PipelineCondition contains all conditions relevant to a Delivery Pipeline.
      properties:
        pipelineReadyCondition:
          $ref: "#/components/schemas/PipelineReadyCondition"
          description: Details around the Pipeline's overall status.
        targetsPresentCondition:
          $ref: "#/components/schemas/TargetsPresentCondition"
          description: Details around targets enumerated in the pipeline.
        targetsTypeCondition:
          $ref: "#/components/schemas/TargetsTypeCondition"
          description: Details on the whether the targets enumerated in the pipeline are of the same type.
      type: object
    PipelineReadyCondition:
      description: PipelineReadyCondition contains information around the status of the Pipeline.
      properties:
        status:
          description: True if the Pipeline is in a valid state. Otherwise at least one condition in `PipelineCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Pipeline.
          type: boolean
        updateTime:
          description: Last time the condition was updated.
          format: google-datetime
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    Postdeploy:
      description: Postdeploy contains the postdeploy job configuration information.
      properties:
        actions:
          description: Optional. A sequence of Skaffold custom actions to invoke during execution of the postdeploy job.
          items:
            type: string
          type: array
      type: object
    PostdeployJob:
      description: A postdeploy Job.
      properties:
        actions:
          description: Output only. The custom actions that the postdeploy Job executes.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    PostdeployJobRun:
      description: PostdeployJobRun contains information specific to a postdeploy `JobRun`.
      properties:
        build:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the postdeploy Job. Format is `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        failureCause:
          description: Output only. The reason the postdeploy failed. This will always be unspecified while the postdeploy is in progress or if it succeeded.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
          readOnly: true
          type: string
        failureMessage:
          description: Output only. Additional information about the postdeploy failure, if available.
          readOnly: true
          type: string
      type: object
    Predeploy:
      description: Predeploy contains the predeploy job configuration information.
      properties:
        actions:
          description: Optional. A sequence of Skaffold custom actions to invoke during execution of the predeploy job.
          items:
            type: string
          type: array
      type: object
    PredeployJob:
      description: A predeploy Job.
      properties:
        actions:
          description: Output only. The custom actions that the predeploy Job executes.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    PredeployJobRun:
      description: PredeployJobRun contains information specific to a predeploy `JobRun`.
      properties:
        build:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to execute the custom actions associated with the predeploy Job. Format is `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        failureCause:
          description: Output only. The reason the predeploy failed. This will always be unspecified while the predeploy is in progress or if it succeeded.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - CLOUD_BUILD_REQUEST_FAILED
          readOnly: true
          type: string
        failureMessage:
          description: Output only. Additional information about the predeploy failure, if available.
          readOnly: true
          type: string
      type: object
    PrivatePool:
      description: Execution using a private Cloud Build pool.
      properties:
        artifactStorage:
          description: Optional. Cloud Storage location where execution outputs should be stored. This can either be a bucket ("gs://my-bucket") or a path within a bucket ("gs://my-bucket/my-dir"). If unspecified, a default bucket located in the same region will be used.
          type: string
        serviceAccount:
          description: Optional. Google service account to use for execution. If unspecified, the project execution service account (-compute@developer.gserviceaccount.com) will be used.
          type: string
        workerPool:
          description: Required. Resource name of the Cloud Build worker pool to use. The format is `projects/{project}/locations/{location}/workerPools/{pool}`.
          type: string
      type: object
    PromoteReleaseOperation:
      description: Contains the information of an automated promote-release operation.
      properties:
        phase:
          description: Output only. The starting phase of the rollout created by this operation.
          readOnly: true
          type: string
        rollout:
          description: Output only. The name of the rollout that initiates the `AutomationRun`.
          readOnly: true
          type: string
        targetId:
          description: Output only. The ID of the target that represents the promotion stage to which the release will be promoted. The value of this field is the last segment of a target name.
          readOnly: true
          type: string
        wait:
          description: Output only. How long the operation will be paused.
          format: google-duration
          readOnly: true
          type: string
      type: object
    PromoteReleaseRule:
      description: "`PromoteRelease` rule will automatically promote a release from the current target to a specified target."
      properties:
        condition:
          $ref: "#/components/schemas/AutomationRuleCondition"
          description: Output only. Information around the state of the Automation rule.
          readOnly: true
        destinationPhase:
          description: Optional. The starting phase of the rollout created by this operation. Default to the first phase.
          type: string
        destinationTargetId:
          description: 'Optional. The ID of the stage in the pipeline to which this `Release` is deploying. If unspecified, default it to the next stage in the promotion flow. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine if the target is one of the stages in the promotion sequence defined in the pipeline. * "@next", the next target in the promotion sequence.'
          type: string
        id:
          description: Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
          type: string
        wait:
          description: Optional. How long the release need to be paused until being promoted to the next target.
          format: google-duration
          type: string
      type: object
    Release:
      description: A `Release` resource in the Cloud Deploy API. A `Release` defines a specific Skaffold configuration instance that can be deployed.
      properties:
        abandoned:
          description: Output only. Indicates whether this is an abandoned release.
          readOnly: true
          type: boolean
        annotations:
          additionalProperties:
            type: string
          description: User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
          type: object
        buildArtifacts:
          description: List of artifacts to pass through to Skaffold command.
          items:
            $ref: "#/components/schemas/BuildArtifact"
          type: array
        condition:
          $ref: "#/components/schemas/ReleaseCondition"
          description: Output only. Information around the state of the Release.
          readOnly: true
        createTime:
          description: Output only. Time at which the `Release` was created.
          format: google-datetime
          readOnly: true
          type: string
        customTargetTypeSnapshots:
          description: Output only. Snapshot of the custom target types referenced by the targets taken at release creation time.
          items:
            $ref: "#/components/schemas/CustomTargetType"
          readOnly: true
          type: array
        deliveryPipelineSnapshot:
          $ref: "#/components/schemas/DeliveryPipeline"
          description: Output only. Snapshot of the parent pipeline taken at release creation time.
          readOnly: true
        deployParameters:
          additionalProperties:
            type: string
          description: Optional. The deploy parameters to use for all targets in this release.
          type: object
        description:
          description: Description of the `Release`. Max length is 255 characters.
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."
          type: object
        name:
          description: Optional. Name of the `Release`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/a-z{0,62}`.
          type: string
        renderEndTime:
          description: Output only. Time at which the render completed.
          format: google-datetime
          readOnly: true
          type: string
        renderStartTime:
          description: Output only. Time at which the render began.
          format: google-datetime
          readOnly: true
          type: string
        renderState:
          description: Output only. Current state of the render operation.
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          readOnly: true
          type: string
        skaffoldConfigPath:
          description: Filepath of the Skaffold config inside of the config URI.
          type: string
        skaffoldConfigUri:
          description: Cloud Storage URI of tar.gz archive containing Skaffold configuration.
          type: string
        skaffoldVersion:
          description: The Skaffold version to use when operating on this release, such as "1.20.0". Not all versions are valid; Cloud Deploy supports a specific set of versions. If unset, the most recent supported Skaffold version will be used.
          type: string
        targetArtifacts:
          additionalProperties:
            $ref: "#/components/schemas/TargetArtifact"
          description: Output only. Map from target ID to the target artifacts created during the render operation.
          readOnly: true
          type: object
        targetRenders:
          additionalProperties:
            $ref: "#/components/schemas/TargetRender"
          description: Output only. Map from target ID to details of the render operation for that target.
          readOnly: true
          type: object
        targetSnapshots:
          description: Output only. Snapshot of the targets taken at release creation time.
          items:
            $ref: "#/components/schemas/Target"
          readOnly: true
          type: array
        uid:
          description: Output only. Unique identifier of the `Release`.
          readOnly: true
          type: string
      type: object
    ReleaseCondition:
      description: ReleaseCondition contains all conditions relevant to a Release.
      properties:
        releaseReadyCondition:
          $ref: "#/components/schemas/ReleaseReadyCondition"
          description: Details around the Releases's overall status.
        skaffoldSupportedCondition:
          $ref: "#/components/schemas/SkaffoldSupportedCondition"
          description: Details around the support state of the release's Skaffold version.
      type: object
    ReleaseNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/release_notification" Platform Log event that describes the failure to send release status change Pub/Sub notification.
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    ReleaseReadyCondition:
      description: ReleaseReadyCondition contains information around the status of the Release. If a release is not ready, you cannot create a rollout with the release.
      properties:
        status:
          description: True if the Release is in a valid state. Otherwise at least one condition in `ReleaseCondition` is in an invalid state. Iterate over those conditions and see which condition(s) has status = false to find out what is wrong with the Release.
          type: boolean
      type: object
    ReleaseRenderEvent:
      description: Payload proto for "clouddeploy.googleapis.com/release_render" Platform Log event that describes the render status change.
      properties:
        message:
          description: Debug message for when a render transition occurs. Provides further details as rendering progresses through render states.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        release:
          description: The name of the release. release_uid is not in this log message because we write some of these log messages at release creation time, before we've generated the uid.
          type: string
        releaseRenderState:
          description: The state of the release render.
          enum:
            - RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          type: string
        type:
          description: Type of this notification, e.g. for a release render state change event.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    RenderMetadata:
      description: RenderMetadata includes information associated with a `Release` render.
      properties:
        cloudRun:
          $ref: "#/components/schemas/CloudRunRenderMetadata"
          description: Output only. Metadata associated with rendering for Cloud Run.
          readOnly: true
        custom:
          $ref: "#/components/schemas/CustomMetadata"
          description: Output only. Custom metadata provided by user-defined render operation.
          readOnly: true
      type: object
    RepairMode:
      description: Configuration of the repair action.
      properties:
        retry:
          $ref: "#/components/schemas/Retry"
          description: Optional. Retries a failed job.
        rollback:
          $ref: "#/components/schemas/Rollback"
          description: Optional. Rolls back a `Rollout`.
      type: object
    RepairPhase:
      description: RepairPhase tracks the repair attempts that have been made for each `RepairMode` specified in the `Automation` resource.
      properties:
        retry:
          $ref: "#/components/schemas/RetryPhase"
          description: Output only. Records of the retry attempts for retry repair mode.
          readOnly: true
        rollback:
          $ref: "#/components/schemas/RollbackAttempt"
          description: Output only. Rollback attempt for rollback repair mode .
          readOnly: true
      type: object
    RepairRolloutOperation:
      description: Contains the information for an automated `repair rollout` operation.
      properties:
        currentRepairModeIndex:
          description: Output only. The index of the current repair action in the repair sequence.
          format: int64
          readOnly: true
          type: string
        jobId:
          description: Output only. The job ID for the Job to repair.
          readOnly: true
          type: string
        phaseId:
          description: Output only. The phase ID of the phase that includes the job being repaired.
          readOnly: true
          type: string
        repairPhases:
          description: Output only. Records of the repair attempts. Each repair phase may have multiple retry attempts or single rollback attempt.
          items:
            $ref: "#/components/schemas/RepairPhase"
          readOnly: true
          type: array
        rollout:
          description: Output only. The name of the rollout that initiates the `AutomationRun`.
          readOnly: true
          type: string
      type: object
    RepairRolloutRule:
      description: The `RepairRolloutRule` automation rule will automatically repair a failed `Rollout`.
      properties:
        condition:
          $ref: "#/components/schemas/AutomationRuleCondition"
          description: Output only. Information around the state of the 'Automation' rule.
          readOnly: true
        id:
          description: Required. ID of the rule. This id must be unique in the `Automation` resource to which this rule belongs. The format is `a-z{0,62}`.
          type: string
        jobs:
          description: "Optional. Jobs to repair. Proceeds only after job name matched any one in the list, or for all jobs if unspecified or empty. The phase that includes the job must match the phase ID specified in `source_phase`. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`."
          items:
            type: string
          type: array
        repairModes:
          description: Required. Defines the types of automatic repair actions for failed jobs.
          items:
            $ref: "#/components/schemas/RepairMode"
          type: array
        sourcePhases:
          description: "Optional. Phases within which jobs are subject to automatic repair actions on failure. Proceeds only after phase name matched any one in the list, or for all phases if unspecified. This value must consist of lower-case letters, numbers, and hyphens, start with a letter and end with a letter or a number, and have a max length of 63 characters. In other words, it must match the following regex: `^[a-z]([a-z0-9-]{0,61}[a-z0-9])?$`."
          items:
            type: string
          type: array
      type: object
    Retry:
      description: Retries the failed job.
      properties:
        attempts:
          description: Required. Total number of retries. Retry is skipped if set to 0; The minimum value is 1, and the maximum value is 10.
          format: int64
          type: string
        backoffMode:
          description: Optional. The pattern of how wait time will be increased. Default is linear. Backoff mode will be ignored if `wait` is 0.
          enum:
            - BACKOFF_MODE_UNSPECIFIED
            - BACKOFF_MODE_LINEAR
            - BACKOFF_MODE_EXPONENTIAL
          type: string
        wait:
          description: Optional. How long to wait for the first retry. Default is 0, and the maximum value is 14d.
          format: google-duration
          type: string
      type: object
    RetryAttempt:
      description: RetryAttempt represents an action of retrying the failed Cloud Deploy job.
      properties:
        attempt:
          description: Output only. The index of this retry attempt.
          format: int64
          readOnly: true
          type: string
        state:
          description: Output only. Valid state of this retry action.
          enum:
            - REPAIR_STATE_UNSPECIFIED
            - REPAIR_STATE_SUCCEEDED
            - REPAIR_STATE_CANCELLED
            - REPAIR_STATE_FAILED
            - REPAIR_STATE_IN_PROGRESS
            - REPAIR_STATE_PENDING
            - REPAIR_STATE_SKIPPED
            - REPAIR_STATE_ABORTED
          readOnly: true
          type: string
        stateDesc:
          description: Output only. Description of the state of the Retry.
          readOnly: true
          type: string
        wait:
          description: Output only. How long the operation will be paused.
          format: google-duration
          readOnly: true
          type: string
      type: object
    RetryJobRequest:
      description: RetryJobRequest is the request object used by `RetryJob`.
      properties:
        jobId:
          description: Required. The job ID for the Job to retry.
          type: string
        phaseId:
          description: Required. The phase ID the Job to retry belongs to.
          type: string
      type: object
    RetryJobResponse:
      description: The response object from 'RetryJob'.
      properties: {}
      type: object
    RetryPhase:
      description: RetryPhase contains the retry attempts and the metadata for initiating a new attempt.
      properties:
        attempts:
          description: Output only. Detail of a retry action.
          items:
            $ref: "#/components/schemas/RetryAttempt"
          readOnly: true
          type: array
        backoffMode:
          description: Output only. The pattern of how the wait time of the retry attempt is calculated.
          enum:
            - BACKOFF_MODE_UNSPECIFIED
            - BACKOFF_MODE_LINEAR
            - BACKOFF_MODE_EXPONENTIAL
          readOnly: true
          type: string
        jobId:
          deprecated: true
          description: Output only. The job ID for the Job to retry.
          readOnly: true
          type: string
        phaseId:
          deprecated: true
          description: Output only. The phase ID of the phase that includes the job being retried.
          readOnly: true
          type: string
        totalAttempts:
          description: Output only. The number of attempts that have been made.
          format: int64
          readOnly: true
          type: string
      type: object
    Rollback:
      description: Rolls back a `Rollout`.
      properties:
        destinationPhase:
          description: Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.
          type: string
      type: object
    RollbackAttempt:
      description: RollbackAttempt represents an action of rolling back a Cloud Deploy 'Target'.
      properties:
        destinationPhase:
          description: Output only. The phase to which the rollout will be rolled back to.
          readOnly: true
          type: string
        rolloutId:
          description: Output only. ID of the rollback `Rollout` to create.
          readOnly: true
          type: string
        state:
          description: Output only. Valid state of this rollback action.
          enum:
            - REPAIR_STATE_UNSPECIFIED
            - REPAIR_STATE_SUCCEEDED
            - REPAIR_STATE_CANCELLED
            - REPAIR_STATE_FAILED
            - REPAIR_STATE_IN_PROGRESS
            - REPAIR_STATE_PENDING
            - REPAIR_STATE_SKIPPED
            - REPAIR_STATE_ABORTED
          readOnly: true
          type: string
        stateDesc:
          description: Output only. Description of the state of the Rollback.
          readOnly: true
          type: string
      type: object
    RollbackTargetConfig:
      description: Configs for the Rollback rollout.
      properties:
        rollout:
          $ref: "#/components/schemas/Rollout"
          description: Optional. The rollback `Rollout` to create.
        startingPhaseId:
          description: Optional. The starting phase ID for the `Rollout`. If unspecified, the `Rollout` will start in the stable phase.
          type: string
      type: object
    RollbackTargetRequest:
      description: The request object for `RollbackTarget`.
      properties:
        releaseId:
          description: Optional. ID of the `Release` to roll back to. If this isn't specified, the previous successful `Rollout` to the specified target will be used to determine the `Release`.
          type: string
        rollbackConfig:
          $ref: "#/components/schemas/RollbackTargetConfig"
          description: Optional. Configs for the rollback `Rollout`.
        rolloutId:
          description: Required. ID of the rollback `Rollout` to create.
          type: string
        rolloutToRollBack:
          description: Optional. If provided, this must be the latest `Rollout` that is on the `Target`.
          type: string
        targetId:
          description: Required. ID of the `Target` that is being rolled back.
          type: string
        validateOnly:
          description: Optional. If set to true, the request is validated and the user is provided with a `RollbackTargetResponse`.
          type: boolean
      type: object
    RollbackTargetResponse:
      description: The response object from `RollbackTarget`.
      properties:
        rollbackConfig:
          $ref: "#/components/schemas/RollbackTargetConfig"
          description: The config of the rollback `Rollout` created or will be created.
      type: object
    Rollout:
      description: A `Rollout` resource in the Cloud Deploy API. A `Rollout` contains information around a specific deployment to a `Target`.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
          type: object
        approvalState:
          description: Output only. Approval state of the `Rollout`.
          enum:
            - APPROVAL_STATE_UNSPECIFIED
            - NEEDS_APPROVAL
            - DOES_NOT_NEED_APPROVAL
            - APPROVED
            - REJECTED
          readOnly: true
          type: string
        approveTime:
          description: Output only. Time at which the `Rollout` was approved.
          format: google-datetime
          readOnly: true
          type: string
        controllerRollout:
          description: Output only. Name of the `ControllerRollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
          readOnly: true
          type: string
        createTime:
          description: Output only. Time at which the `Rollout` was created.
          format: google-datetime
          readOnly: true
          type: string
        deployEndTime:
          description: Output only. Time at which the `Rollout` finished deploying.
          format: google-datetime
          readOnly: true
          type: string
        deployFailureCause:
          description: Output only. The reason this rollout failed. This will always be unspecified while the rollout is in progress.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - RELEASE_FAILED
            - RELEASE_ABANDONED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
            - OPERATION_FEATURE_NOT_SUPPORTED
          readOnly: true
          type: string
        deployStartTime:
          description: Output only. Time at which the `Rollout` started deploying.
          format: google-datetime
          readOnly: true
          type: string
        deployingBuild:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to deploy the Rollout. Format is `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        description:
          description: Description of the `Rollout` for user purposes. Max length is 255 characters.
          type: string
        enqueueTime:
          description: Output only. Time at which the `Rollout` was enqueued.
          format: google-datetime
          readOnly: true
          type: string
        etag:
          description: This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        failureReason:
          description: Output only. Additional information about the rollout failure, if available.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: "Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."
          type: object
        metadata:
          $ref: "#/components/schemas/Metadata"
          description: Output only. Metadata contains information about the rollout.
          readOnly: true
        name:
          description: Optional. Name of the `Rollout`. Format is `projects/{project}/locations/{location}/deliveryPipelines/{deliveryPipeline}/releases/{release}/rollouts/a-z{0,62}`.
          type: string
        phases:
          description: Output only. The phases that represent the workflows of this `Rollout`.
          items:
            $ref: "#/components/schemas/Phase"
          readOnly: true
          type: array
        rollbackOfRollout:
          description: Output only. Name of the `Rollout` that is rolled back by this `Rollout`. Empty if this `Rollout` wasn't created as a rollback.
          readOnly: true
          type: string
        rolledBackByRollouts:
          description: Output only. Names of `Rollouts` that rolled back this `Rollout`.
          items:
            type: string
          readOnly: true
          type: array
        state:
          description: Output only. Current state of the `Rollout`.
          enum:
            - STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
            - PENDING_APPROVAL
            - APPROVAL_REJECTED
            - PENDING
            - PENDING_RELEASE
            - CANCELLING
            - CANCELLED
            - HALTED
          readOnly: true
          type: string
        targetId:
          description: Required. The ID of Target to which this `Rollout` is deploying.
          type: string
        uid:
          description: Output only. Unique identifier of the `Rollout`.
          readOnly: true
          type: string
      type: object
    RolloutNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/rollout_notification" Platform Log event that describes the failure to send rollout status change Pub/Sub notification.
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        pipelineUid:
          description: Unique identifier of the `DeliveryPipeline`.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        releaseUid:
          description: Unique identifier of the `Release`.
          type: string
        rollout:
          description: The name of the `Rollout`.
          type: string
        rolloutUid:
          description: Unique identifier of the `Rollout`.
          type: string
        targetId:
          description: ID of the `Target` that the rollout is deployed to.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    RolloutUpdateEvent:
      description: Payload proto for "clouddeploy.googleapis.com/rollout_update" Platform Log event that describes the rollout update event.
      properties:
        message:
          description: Debug message for when a rollout update event occurs.
          type: string
        pipelineUid:
          description: Unique identifier of the pipeline.
          type: string
        release:
          description: The name of the `Release`.
          type: string
        releaseUid:
          description: Unique identifier of the release.
          type: string
        rollout:
          description: The name of the rollout. rollout_uid is not in this log message because we write some of these log messages at rollout creation time, before we've generated the uid.
          type: string
        rolloutUpdateType:
          description: The type of the rollout update.
          enum:
            - ROLLOUT_UPDATE_TYPE_UNSPECIFIED
            - PENDING
            - PENDING_RELEASE
            - IN_PROGRESS
            - CANCELLING
            - CANCELLED
            - HALTED
            - SUCCEEDED
            - FAILED
            - APPROVAL_REQUIRED
            - APPROVED
            - REJECTED
            - ADVANCE_REQUIRED
            - ADVANCED
          type: string
        targetId:
          description: ID of the target.
          type: string
        type:
          description: Type of this notification, e.g. for a rollout update event.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    RuntimeConfig:
      description: RuntimeConfig contains the runtime specific configurations for a deployment strategy.
      properties:
        cloudRun:
          $ref: "#/components/schemas/CloudRunConfig"
          description: Cloud Run runtime configuration.
        kubernetes:
          $ref: "#/components/schemas/KubernetesConfig"
          description: Kubernetes runtime configuration.
      type: object
    SerialPipeline:
      description: SerialPipeline defines a sequential set of stages for a `DeliveryPipeline`.
      properties:
        stages:
          description: Each stage specifies configuration for a `Target`. The ordering of this list defines the promotion flow.
          items:
            $ref: "#/components/schemas/Stage"
          type: array
      type: object
    ServiceNetworking:
      description: Information about the Kubernetes Service networking configuration.
      properties:
        deployment:
          description: Required. Name of the Kubernetes Deployment whose traffic is managed by the specified Service.
          type: string
        disablePodOverprovisioning:
          description: Optional. Whether to disable Pod overprovisioning. If Pod overprovisioning is disabled then Cloud Deploy will limit the number of total Pods used for the deployment strategy to the number of Pods the Deployment has on the cluster.
          type: boolean
        service:
          description: Required. Name of the Kubernetes Service.
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    SkaffoldGCSSource:
      description: Cloud Storage bucket containing Skaffold Config modules.
      properties:
        path:
          description: Optional. Relative path from the source to the Skaffold file.
          type: string
        source:
          description: Required. Cloud Storage source paths to copy recursively. For example, providing "gs://my-bucket/dir/configs/*" will result in Skaffold copying all files within the "dir/configs" directory in the bucket "my-bucket".
          type: string
      type: object
    SkaffoldGitSource:
      description: Git repository containing Skaffold Config modules.
      properties:
        path:
          description: Optional. Relative path from the repository root to the Skaffold file.
          type: string
        ref:
          description: Optional. Git ref the package should be cloned from.
          type: string
        repo:
          description: Required. Git repository the package should be cloned from.
          type: string
      type: object
    SkaffoldModules:
      description: Skaffold Config modules and their remote source.
      properties:
        configs:
          description: Optional. The Skaffold Config modules to use from the specified source.
          items:
            type: string
          type: array
        git:
          $ref: "#/components/schemas/SkaffoldGitSource"
          description: Remote git repository containing the Skaffold Config modules.
        googleCloudStorage:
          $ref: "#/components/schemas/SkaffoldGCSSource"
          description: Cloud Storage bucket containing the Skaffold Config modules.
      type: object
    SkaffoldSupportedCondition:
      description: SkaffoldSupportedCondition contains information about when support for the release's version of Skaffold ends.
      properties:
        maintenanceModeTime:
          description: The time at which this release's version of Skaffold will enter maintenance mode.
          format: google-datetime
          type: string
        skaffoldSupportState:
          description: The Skaffold support state for this release's version of Skaffold.
          enum:
            - SKAFFOLD_SUPPORT_STATE_UNSPECIFIED
            - SKAFFOLD_SUPPORT_STATE_SUPPORTED
            - SKAFFOLD_SUPPORT_STATE_MAINTENANCE_MODE
            - SKAFFOLD_SUPPORT_STATE_UNSUPPORTED
          type: string
        status:
          description: True if the version of Skaffold used by this release is supported.
          type: boolean
        supportExpirationTime:
          description: The time at which this release's version of Skaffold will no longer be supported.
          format: google-datetime
          type: string
      type: object
    SkaffoldVersion:
      description: Details of a supported Skaffold version.
      properties:
        maintenanceModeTime:
          description: The time at which this version of Skaffold will enter maintenance mode.
          format: google-datetime
          type: string
        supportEndDate:
          $ref: "#/components/schemas/Date"
          description: Date when this version is expected to no longer be supported.
        supportExpirationTime:
          description: The time at which this version of Skaffold will no longer be supported.
          format: google-datetime
          type: string
        version:
          description: Release version number. For example, "1.20.3".
          type: string
      type: object
    Stage:
      description: Stage specifies a location to which to deploy.
      properties:
        deployParameters:
          description: Optional. The deploy parameters to use for the target in this stage.
          items:
            $ref: "#/components/schemas/DeployParameters"
          type: array
        profiles:
          description: Skaffold profiles to use when rendering the manifest for this stage's `Target`.
          items:
            type: string
          type: array
        strategy:
          $ref: "#/components/schemas/Strategy"
          description: Optional. The strategy to use for a `Rollout` to this stage.
        targetId:
          description: The target_id to which this stage points. This field refers exclusively to the last segment of a target name. For example, this field would just be `my-target` (rather than `projects/project/locations/location/targets/my-target`). The location of the `Target` is inferred to be the same as the location of the `DeliveryPipeline` that contains this `Stage`.
          type: string
      type: object
    Standard:
      description: Standard represents the standard deployment strategy.
      properties:
        postdeploy:
          $ref: "#/components/schemas/Postdeploy"
          description: Optional. Configuration for the postdeploy job. If this is not configured, postdeploy job will not be present.
        predeploy:
          $ref: "#/components/schemas/Predeploy"
          description: Optional. Configuration for the predeploy job. If this is not configured, predeploy job will not be present.
        verify:
          description: Whether to verify a deployment.
          type: boolean
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    Strategy:
      description: Strategy contains deployment strategy information.
      properties:
        canary:
          $ref: "#/components/schemas/Canary"
          description: Canary deployment strategy provides progressive percentage based deployments to a Target.
        standard:
          $ref: "#/components/schemas/Standard"
          description: Standard deployment strategy executes a single deploy and allows verifying the deployment.
      type: object
    Target:
      description: A `Target` resource in the Cloud Deploy API. A `Target` defines a location to which a Skaffold configuration can be deployed.
      properties:
        annotations:
          additionalProperties:
            type: string
          description: Optional. User annotations. These attributes can only be set and used by the user, and not by Cloud Deploy. See https://google.aip.dev/128#annotations for more details such as format and size limitations.
          type: object
        anthosCluster:
          $ref: "#/components/schemas/AnthosCluster"
          description: Optional. Information specifying an Anthos Cluster.
        createTime:
          description: Output only. Time at which the `Target` was created.
          format: google-datetime
          readOnly: true
          type: string
        customTarget:
          $ref: "#/components/schemas/CustomTarget"
          description: Optional. Information specifying a Custom Target.
        deployParameters:
          additionalProperties:
            type: string
          description: Optional. The deploy parameters to use for this target.
          type: object
        description:
          description: Optional. Description of the `Target`. Max length is 255 characters.
          type: string
        etag:
          description: Optional. This checksum is computed by the server based on the value of other fields, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
          type: string
        executionConfigs:
          description: Configurations for all execution that relates to this `Target`. Each `ExecutionEnvironmentUsage` value may only be used in a single configuration; using the same value multiple times is an error. When one or more configurations are specified, they must include the `RENDER` and `DEPLOY` `ExecutionEnvironmentUsage` values. When no configurations are specified, execution will use the default specified in `DefaultPool`.
          items:
            $ref: "#/components/schemas/ExecutionConfig"
          type: array
        gke:
          $ref: "#/components/schemas/GkeCluster"
          description: Optional. Information specifying a GKE Cluster.
        labels:
          additionalProperties:
            type: string
          description: "Optional. Labels are attributes that can be set and used by both the user and by Cloud Deploy. Labels must meet the following constraints: * Keys and values can contain only lowercase letters, numeric characters, underscores, and dashes. * All characters must use UTF-8 encoding, and international characters are allowed. * Keys must start with a lowercase letter or international character. * Each resource is limited to a maximum of 64 labels. Both keys and values are additionally constrained to be <= 128 bytes."
          type: object
        multiTarget:
          $ref: "#/components/schemas/MultiTarget"
          description: Optional. Information specifying a multiTarget.
        name:
          description: Optional. Name of the `Target`. Format is `projects/{project}/locations/{location}/targets/a-z{0,62}`.
          type: string
        requireApproval:
          description: Optional. Whether or not the `Target` requires approval.
          type: boolean
        run:
          $ref: "#/components/schemas/CloudRunLocation"
          description: Optional. Information specifying a Cloud Run deployment target.
        targetId:
          description: Output only. Resource id of the `Target`.
          readOnly: true
          type: string
        uid:
          description: Output only. Unique identifier of the `Target`.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Most recent time at which the `Target` was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    TargetArtifact:
      description: The artifacts produced by a target render operation.
      properties:
        artifactUri:
          description: Output only. URI of a directory containing the artifacts. This contains deployment configuration used by Skaffold during a rollout, and all paths are relative to this location.
          readOnly: true
          type: string
        manifestPath:
          description: Output only. File path of the rendered manifest relative to the URI.
          readOnly: true
          type: string
        phaseArtifacts:
          additionalProperties:
            $ref: "#/components/schemas/PhaseArtifact"
          description: Output only. Map from the phase ID to the phase artifacts for the `Target`.
          readOnly: true
          type: object
        skaffoldConfigPath:
          description: Output only. File path of the resolved Skaffold configuration relative to the URI.
          readOnly: true
          type: string
      type: object
    TargetAttribute:
      description: Contains criteria for selecting Targets.
      properties:
        id:
          description: 'ID of the `Target`. The value of this field could be one of the following: * The last segment of a target name. It only needs the ID to determine which target is being referred to * "*", all targets in a location.'
          type: string
        labels:
          additionalProperties:
            type: string
          description: Target labels.
          type: object
      type: object
    TargetNotificationEvent:
      description: Payload proto for "clouddeploy.googleapis.com/target_notification" Platform Log event that describes the failure to send target status change Pub/Sub notification.
      properties:
        message:
          description: Debug message for when a notification fails to send.
          type: string
        target:
          description: The name of the `Target`.
          type: string
        type:
          description: Type of this notification, e.g. for a Pub/Sub failure.
          enum:
            - TYPE_UNSPECIFIED
            - TYPE_PUBSUB_NOTIFICATION_FAILURE
            - TYPE_RESOURCE_STATE_CHANGE
            - TYPE_PROCESS_ABORTED
            - TYPE_RESTRICTION_VIOLATED
            - TYPE_RESOURCE_DELETED
            - TYPE_ROLLOUT_UPDATE
            - TYPE_DEPLOY_POLICY_EVALUATION
            - TYPE_RENDER_STATUES_CHANGE
          type: string
          x-enumDeprecated:
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - true
      type: object
    TargetRender:
      description: Details of rendering for a single target.
      properties:
        failureCause:
          description: Output only. Reason this render failed. This will always be unspecified while the render in progress.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - CLOUD_BUILD_REQUEST_FAILED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CUSTOM_ACTION_NOT_FOUND
            - DEPLOYMENT_STRATEGY_NOT_SUPPORTED
            - RENDER_FEATURE_NOT_SUPPORTED
          readOnly: true
          type: string
        failureMessage:
          description: Output only. Additional information about the render failure, if available.
          readOnly: true
          type: string
        metadata:
          $ref: "#/components/schemas/RenderMetadata"
          description: Output only. Metadata related to the `Release` render for this Target.
          readOnly: true
        renderingBuild:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to render the manifest for this target. Format is `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        renderingState:
          description: Output only. Current state of the render operation for this Target.
          enum:
            - TARGET_RENDER_STATE_UNSPECIFIED
            - SUCCEEDED
            - FAILED
            - IN_PROGRESS
          readOnly: true
          type: string
      type: object
    TargetsPresentCondition:
      description: "`TargetsPresentCondition` contains information on any Targets referenced in the Delivery Pipeline that do not actually exist."
      properties:
        missingTargets:
          description: The list of Target names that do not exist. For example, `projects/{project_id}/locations/{location_name}/targets/{target_name}`.
          items:
            type: string
          type: array
        status:
          description: True if there aren't any missing Targets.
          type: boolean
        updateTime:
          description: Last time the condition was updated.
          format: google-datetime
          type: string
      type: object
    TargetsTypeCondition:
      description: TargetsTypeCondition contains information on whether the Targets defined in the Delivery Pipeline are of the same type.
      properties:
        errorDetails:
          description: Human readable error message.
          type: string
        status:
          description: True if the targets are all a comparable type. For example this is true if all targets are GKE clusters. This is false if some targets are Cloud Run targets and others are GKE clusters.
          type: boolean
      type: object
    TerminateJobRunRequest:
      description: The request object used by `TerminateJobRun`.
      properties: {}
      type: object
    TerminateJobRunResponse:
      description: The response object from `TerminateJobRun`.
      properties: {}
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    VerifyJob:
      description: A verify Job.
      properties: {}
      type: object
    VerifyJobRun:
      description: VerifyJobRun contains information specific to a verify `JobRun`.
      properties:
        artifactUri:
          description: Output only. URI of a directory containing the verify artifacts. This contains the Skaffold event log.
          readOnly: true
          type: string
        build:
          description: Output only. The resource name of the Cloud Build `Build` object that is used to verify. Format is `projects/{project}/locations/{location}/builds/{build}`.
          readOnly: true
          type: string
        eventLogPath:
          description: Output only. File path of the Skaffold event log relative to the artifact URI.
          readOnly: true
          type: string
        failureCause:
          description: Output only. The reason the verify failed. This will always be unspecified while the verify is in progress or if it succeeded.
          enum:
            - FAILURE_CAUSE_UNSPECIFIED
            - CLOUD_BUILD_UNAVAILABLE
            - EXECUTION_FAILED
            - DEADLINE_EXCEEDED
            - VERIFICATION_CONFIG_NOT_FOUND
            - CLOUD_BUILD_REQUEST_FAILED
          readOnly: true
          type: string
        failureMessage:
          description: Output only. Additional information about the verify failure, if available.
          readOnly: true
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
