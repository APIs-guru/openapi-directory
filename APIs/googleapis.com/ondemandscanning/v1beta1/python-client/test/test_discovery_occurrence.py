# coding: utf-8

"""
    On-Demand Scanning API

    A service to scan container images for vulnerabilities.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.discovery_occurrence import DiscoveryOccurrence

class TestDiscoveryOccurrence(unittest.TestCase):
    """DiscoveryOccurrence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DiscoveryOccurrence:
        """Test DiscoveryOccurrence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DiscoveryOccurrence`
        """
        model = DiscoveryOccurrence()
        if include_optional:
            return DiscoveryOccurrence(
                analysis_completed = openapi_client.models.analysis_completed.AnalysisCompleted(
                    analysis_type = [
                        ''
                        ], ),
                analysis_error = [
                    openapi_client.models.status.Status(
                        code = 56, 
                        details = [
                            {
                                'key' : null
                                }
                            ], 
                        message = '', )
                    ],
                analysis_status = 'ANALYSIS_STATUS_UNSPECIFIED',
                analysis_status_error = openapi_client.models.status.Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                archive_time = '',
                continuous_analysis = 'CONTINUOUS_ANALYSIS_UNSPECIFIED',
                cpe = '',
                last_scan_time = '',
                sbom_status = openapi_client.models.sbom_status.SBOMStatus(
                    error = '', 
                    sbom_state = 'SBOM_STATE_UNSPECIFIED', )
            )
        else:
            return DiscoveryOccurrence(
        )
        """

    def testDiscoveryOccurrence(self):
        """Test DiscoveryOccurrence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
