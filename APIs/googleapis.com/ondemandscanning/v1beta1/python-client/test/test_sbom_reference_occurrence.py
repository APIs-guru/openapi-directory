# coding: utf-8

"""
    On-Demand Scanning API

    A service to scan container images for vulnerabilities.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sbom_reference_occurrence import SBOMReferenceOccurrence

class TestSBOMReferenceOccurrence(unittest.TestCase):
    """SBOMReferenceOccurrence unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SBOMReferenceOccurrence:
        """Test SBOMReferenceOccurrence
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SBOMReferenceOccurrence`
        """
        model = SBOMReferenceOccurrence()
        if include_optional:
            return SBOMReferenceOccurrence(
                payload = openapi_client.models.sbom_reference_intoto_payload.SbomReferenceIntotoPayload(
                    _type = '', 
                    predicate = openapi_client.models.sbom_reference_intoto_predicate.SbomReferenceIntotoPredicate(
                        digest = {
                            'key' : ''
                            }, 
                        location = '', 
                        mime_type = '', 
                        referrer_id = '', ), 
                    predicate_type = '', 
                    subject = [
                        openapi_client.models.subject.Subject(
                            name = '', )
                        ], ),
                payload_type = '',
                signatures = [
                    openapi_client.models.envelope_signature.EnvelopeSignature(
                        keyid = '', 
                        sig = 'YQ==', )
                    ]
            )
        else:
            return SBOMReferenceOccurrence(
        )
        """

    def testSBOMReferenceOccurrence(self):
        """Test SBOMReferenceOccurrence"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
