# coding: utf-8

"""
    On-Demand Scanning API

    A service to scan container images for vulnerabilities.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.package_issue import PackageIssue

class TestPackageIssue(unittest.TestCase):
    """PackageIssue unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PackageIssue:
        """Test PackageIssue
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PackageIssue`
        """
        model = PackageIssue()
        if include_optional:
            return PackageIssue(
                affected_cpe_uri = '',
                affected_package = '',
                affected_version = openapi_client.models.version.Version(
                    epoch = 56, 
                    full_name = '', 
                    inclusive = True, 
                    kind = 'VERSION_KIND_UNSPECIFIED', 
                    name = '', 
                    revision = '', ),
                effective_severity = 'SEVERITY_UNSPECIFIED',
                file_location = [
                    openapi_client.models.grafeas_v1_file_location.GrafeasV1FileLocation(
                        file_path = '', )
                    ],
                fix_available = True,
                fixed_cpe_uri = '',
                fixed_package = '',
                fixed_version = openapi_client.models.version.Version(
                    epoch = 56, 
                    full_name = '', 
                    inclusive = True, 
                    kind = 'VERSION_KIND_UNSPECIFIED', 
                    name = '', 
                    revision = '', ),
                package_type = ''
            )
        else:
            return PackageIssue(
        )
        """

    def testPackageIssue(self):
        """Test PackageIssue"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
