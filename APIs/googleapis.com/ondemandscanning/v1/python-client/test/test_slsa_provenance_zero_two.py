# coding: utf-8

"""
    On-Demand Scanning API

    A service to scan container images for vulnerabilities.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.slsa_provenance_zero_two import SlsaProvenanceZeroTwo

class TestSlsaProvenanceZeroTwo(unittest.TestCase):
    """SlsaProvenanceZeroTwo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SlsaProvenanceZeroTwo:
        """Test SlsaProvenanceZeroTwo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SlsaProvenanceZeroTwo`
        """
        model = SlsaProvenanceZeroTwo()
        if include_optional:
            return SlsaProvenanceZeroTwo(
                build_config = {
                    'key' : null
                    },
                build_type = '',
                builder = openapi_client.models.grafeas_v1_slsa_provenance_zero_two_slsa_builder.GrafeasV1SlsaProvenanceZeroTwoSlsaBuilder(
                    id = '', ),
                invocation = openapi_client.models.grafeas_v1_slsa_provenance_zero_two_slsa_invocation.GrafeasV1SlsaProvenanceZeroTwoSlsaInvocation(
                    config_source = openapi_client.models.grafeas_v1_slsa_provenance_zero_two_slsa_config_source.GrafeasV1SlsaProvenanceZeroTwoSlsaConfigSource(
                        digest = {
                            'key' : ''
                            }, 
                        entry_point = '', 
                        uri = '', ), 
                    environment = {
                        'key' : null
                        }, 
                    parameters = {
                        'key' : null
                        }, ),
                materials = [
                    openapi_client.models.grafeas_v1_slsa_provenance_zero_two_slsa_material.GrafeasV1SlsaProvenanceZeroTwoSlsaMaterial(
                        digest = {
                            'key' : ''
                            }, 
                        uri = '', )
                    ],
                metadata = openapi_client.models.grafeas_v1_slsa_provenance_zero_two_slsa_metadata.GrafeasV1SlsaProvenanceZeroTwoSlsaMetadata(
                    build_finished_on = '', 
                    build_invocation_id = '', 
                    build_started_on = '', 
                    completeness = openapi_client.models.grafeas_v1_slsa_provenance_zero_two_slsa_completeness.GrafeasV1SlsaProvenanceZeroTwoSlsaCompleteness(
                        environment = True, 
                        materials = True, 
                        parameters = True, ), 
                    reproducible = True, )
            )
        else:
            return SlsaProvenanceZeroTwo(
        )
        """

    def testSlsaProvenanceZeroTwo(self):
        """Test SlsaProvenanceZeroTwo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
