openapi: 3.0.0
servers:
  - url: https://shoppingcontent.googleapis.com/content/v2.1
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Manage your product listings and accounts for Google Shopping
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Content API for Shopping
  version: v2.1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: openapi
      url: https://shoppingcontent.googleapis.com/$discovery/rest?version=v2.1
      version: "3.0"
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: content
externalDocs:
  url: https://developers.google.com/shopping-content/v2/
tags:
  - name: accounts
  - name: accountstatuses
  - name: accounttax
  - name: buyongoogleprograms
  - name: collections
  - name: collectionstatuses
  - name: conversionsources
  - name: csses
  - name: datafeeds
  - name: datafeedstatuses
  - name: freelistingsprogram
  - name: liasettings
  - name: localinventory
  - name: merchantsupport
  - name: orderinvoices
  - name: orderreports
  - name: orderreturns
  - name: orders
  - name: ordertrackingsignals
  - name: pos
  - name: productdeliverytime
  - name: products
  - name: productstatuses
  - name: promotions
  - name: pubsubnotificationsettings
  - name: quotas
  - name: recommendations
  - name: regionalinventory
  - name: regions
  - name: reports
  - name: returnaddress
  - name: returnpolicy
  - name: returnpolicyonline
  - name: settlementreports
  - name: settlementtransactions
  - name: shippingsettings
  - name: shoppingadsprogram
paths:
  /accounts/authinfo:
    get:
      description: Returns information about the authenticated user.
      operationId: content.accounts.authinfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsAuthInfoResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /accounts/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves, inserts, updates, and deletes multiple Merchant Center (sub-)accounts in a single request.
      operationId: content.accounts.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accounts/{accountId}/credentials:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads credentials for the Merchant Center account. If credentials already exist for this Merchant Center account and purpose, this method updates them.
      operationId: content.accounts.credentials.create
      parameters:
        - description: Required. The merchant id of the account these credentials belong to.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountCredentials"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountCredentials"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accounts/{accountId}/labels:
    get:
      description: Lists the labels assigned to an account.
      operationId: content.accounts.labels.list
      parameters:
        - description: Required. The account id for whose labels are to be listed.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The maximum number of labels to return. The service may return fewer than this value. If unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListAccountLabels` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListAccountLabels` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccountLabelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new label, not assigned to any account.
      operationId: content.accounts.labels.create
      parameters:
        - description: Required. The id of the account this label belongs to.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountLabel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLabel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accounts/{accountId}/labels/{labelId}:
    delete:
      description: Deletes a label and removes it from all accounts to which it was assigned.
      operationId: content.accounts.labels.delete
      parameters:
        - description: Required. The id of the account that owns the label.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Required. The id of the label to delete.
          in: path
          name: labelId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a label.
      operationId: content.accounts.labels.patch
      parameters:
        - description: Required. The id of the account this label belongs to.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Required. The id of the label to update.
          in: path
          name: labelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountLabel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountLabel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accounts/{accountId}/returncarrier:
    get:
      description: Lists available return carriers in the merchant account.
      operationId: content.accounts.returncarrier.list
      parameters:
        - description: Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAccountReturnCarrierResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Links return carrier to a merchant account.
      operationId: content.accounts.returncarrier.create
      parameters:
        - description: Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountReturnCarrier"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReturnCarrier"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accounts/{accountId}/returncarrier/{carrierAccountId}:
    delete:
      description: Delete a return carrier in the merchant account.
      operationId: content.accounts.returncarrier.delete
      parameters:
        - description: Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Required. The Google-provided unique carrier ID, used to update the resource.
          in: path
          name: carrierAccountId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a return carrier in the merchant account.
      operationId: content.accounts.returncarrier.patch
      parameters:
        - description: Required. The Merchant Center Account Id under which the Return Carrier is to be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Required. The Google-provided unique carrier ID, used to update the resource.
          in: path
          name: carrierAccountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountReturnCarrier"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountReturnCarrier"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /accountstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves multiple Merchant Center account statuses in a single request.
      operationId: content.accountstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountstatusesCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountstatusesCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
  /accounttax/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves and updates tax settings of multiple accounts in a single request.
      operationId: content.accounttax.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccounttaxCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccounttaxCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
  /datafeeds/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deletes, fetches, gets, inserts and updates multiple datafeeds in a single request.
      operationId: content.datafeeds.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatafeedsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatafeedsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  /datafeedstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets multiple Merchant Center datafeed statuses in a single request.
      operationId: content.datafeedstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DatafeedstatusesCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatafeedstatusesCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
  /liasettings/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves and/or updates the LIA settings of multiple accounts in a single request.
      operationId: content.liasettings.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LiasettingsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /liasettings/posdataproviders:
    get:
      description: Retrieves the list of POS data providers that have active settings for the all eiligible countries.
      operationId: content.liasettings.listposdataproviders
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsListPosDataProvidersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /localinventory/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates local inventory for multiple products or stores in a single request.
      operationId: content.localinventory.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalinventoryCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalinventoryCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - localinventory
  /pos/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batches multiple POS-related calls in a single request.
      operationId: content.pos.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  /products/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves, inserts, and deletes multiple products in a single request.
      operationId: content.products.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  /productstatuses/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets the statuses of multiple products in a single request.
      operationId: content.productstatuses.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductstatusesCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductstatusesCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
  /regionalinventory/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates regional inventory for multiple products or regions in a single request.
      operationId: content.regionalinventory.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionalinventoryCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionalinventoryCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regionalinventory
  /returnaddress/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batches multiple return address related calls in a single request.
      operationId: content.returnaddress.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnaddressCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnaddressCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnaddress
  /returnpolicy/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Batches multiple return policy related calls in a single request.
      operationId: content.returnpolicy.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnpolicyCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnpolicyCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicy
  /shippingsettings/batch:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves and updates the shipping settings of multiple accounts in a single request.
      operationId: content.shippingsettings.custombatch
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShippingsettingsCustomBatchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingsettingsCustomBatchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
  /{cssGroupId}/csses:
    get:
      description: Lists CSS domains affiliated with a CSS group.
      operationId: content.csses.list
      parameters:
        - description: Required. The CSS group ID of CSS domains to be listed.
          in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - description: The maximum number of CSS domains to return. The service may return fewer than this value. If unspecified, at most 50 CSS domains will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListCsses` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListCsses` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCssesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - csses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{cssGroupId}/csses/{cssDomainId}:
    get:
      description: Retrieves a single CSS domain by ID.
      operationId: content.csses.get
      parameters:
        - description: Required. The ID of the managing account. If this parameter is not the same as [cssDomainId](#cssDomainId), then this ID must be a CSS group ID and `cssDomainId` must be the ID of a CSS domain affiliated with this group.
          in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - description: Required. The ID of the CSS domain to return.
          in: path
          name: cssDomainId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Css"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - csses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{cssGroupId}/csses/{cssDomainId}/updatelabels:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates labels that are assigned to a CSS domain by its CSS group.
      operationId: content.csses.updatelabels
      parameters:
        - description: Required. The CSS group ID of the updated CSS domain.
          in: path
          name: cssGroupId
          required: true
          schema:
            type: string
        - description: Required. The ID of the updated CSS domain.
          in: path
          name: cssDomainId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LabelIds"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Css"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - csses
  /{merchantId}/accounts:
    get:
      description: Lists the sub-accounts in your Merchant Center account.
      operationId: content.accounts.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: If view is set to "css", only return accounts that are assigned label with given ID.
          in: query
          name: label
          schema:
            type: string
        - description: The maximum number of accounts to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: If set, only the accounts with the given name (case sensitive) will be returned.
          in: query
          name: name
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: 'Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default value is "merchant".'
          in: query
          name: view
          schema:
            enum:
              - MERCHANT
              - CSS
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a Merchant Center sub-account.
      operationId: content.accounts.insert
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accounts/{accountId}:
    delete:
      description: Deletes a Merchant Center sub-account.
      operationId: content.accounts.delete
      parameters:
        - description: The ID of the managing account. This must be a multi-client account, and accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Option to delete sub-accounts with products. The default value is false.
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    get:
      description: Retrieves a Merchant Center account.
      operationId: content.accounts.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: 'Controls which fields will be populated. Acceptable values are: "merchant" and "css". The default value is "merchant".'
          in: query
          name: view
          schema:
            enum:
              - MERCHANT
              - CSS
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates a Merchant Center account. Any fields that are not provided are deleted from the resource.
      operationId: content.accounts.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Account"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accounts/{accountId}/claimwebsite:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Claims the website of a Merchant Center sub-account. Merchant accounts with approved third-party CSSs aren't required to claim a website.
      operationId: content.accounts.claimwebsite
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account whose website is claimed.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: Only available to selected merchants, for example multi-client accounts (MCAs) and their sub-accounts. When set to `True`, this option removes any existing claim on the requested website and replaces it with a claim from the account that makes the request.
          in: query
          name: overwrite
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsClaimWebsiteResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accounts/{accountId}/link:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Performs an action on a link between two Merchant Center accounts, namely accountId and linkedAccountId.
      operationId: content.accounts.link
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account that should be linked.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountsLinkRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsLinkResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accounts/{accountId}/listlinks:
    get:
      description: Returns the list of accounts linked to your Merchant Center account.
      operationId: content.accounts.listlinks
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to list links.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The maximum number of links to return in the response, used for pagination. The minimum allowed value is 5 results per page. If provided value is lower than 5, it will be automatically increased to 5.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsListLinksResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/accounts/{accountId}/requestphoneverification:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Request verification code to start phone verification.
      operationId: content.accounts.requestphoneverification
      parameters:
        - description: Required. The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestPhoneVerificationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestPhoneVerificationResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accounts/{accountId}/updatelabels:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates labels that are assigned to the Merchant Center account by CSS user.
      operationId: content.accounts.updatelabels
      parameters:
        - description: The ID of the managing account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account whose labels are updated.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountsUpdateLabelsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountsUpdateLabelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accounts/{accountId}/verifyphonenumber:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Validates verification code to verify phone number for the account. If successful this will overwrite the value of `accounts.businessinformation.phoneNumber`. Only verified phone number will replace an existing verified phone number.
      operationId: content.accounts.verifyphonenumber
      parameters:
        - description: Required. The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and accountId must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/VerifyPhoneNumberRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/VerifyPhoneNumberResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounts
  /{merchantId}/accountstatuses:
    get:
      description: Lists the statuses of the sub-accounts in your Merchant Center account.
      operationId: content.accountstatuses.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The maximum number of account statuses to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: If set, only the accounts with the given name (case sensitive) will be returned.
          in: query
          name: name
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountstatusesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/accountstatuses/{accountId}:
    get:
      description: Retrieves the status of a Merchant Center account. No itemLevelIssues are returned for multi-client accounts.
      operationId: content.accountstatuses.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accountstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/accounttax:
    get:
      description: Lists the tax settings of the sub-accounts in your Merchant Center account.
      operationId: content.accounttax.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of tax settings to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccounttaxListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/accounttax/{accountId}:
    get:
      description: Retrieves the tax settings of the account.
      operationId: content.accounttax.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTax"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the tax settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.accounttax.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update account tax settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountTax"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountTax"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - accounttax
  /{merchantId}/buyongoogleprograms/{regionCode}:
    get:
      description: Retrieves a status of the BoG program for your Merchant Center account.
      operationId: content.buyongoogleprograms.get
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The Program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.
          in: path
          name: regionCode
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuyOnGoogleProgramStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - buyongoogleprograms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the status of the BoG program for your Merchant Center account.
      operationId: content.buyongoogleprograms.patch
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.
          in: path
          name: regionCode
          required: true
          schema:
            type: string
        - description: The list of fields to update. If the update mask is not provided, then all the fields set in buyOnGoogleProgramStatus will be updated. Clearing fields is only possible if update mask is provided.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BuyOnGoogleProgramStatus"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BuyOnGoogleProgramStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - buyongoogleprograms
  /{merchantId}/buyongoogleprograms/{regionCode}/activate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reactivates the BoG program in your Merchant Center account. Moves the program to the active state when allowed, for example, when paused. This method is only available to selected merchants.
      operationId: content.buyongoogleprograms.activate
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.
          in: path
          name: regionCode
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateBuyOnGoogleProgramRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - buyongoogleprograms
  /{merchantId}/buyongoogleprograms/{regionCode}/onboard:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Onboards the BoG program in your Merchant Center account. By using this method, you agree to the [Terms of Service](https://merchants.google.com/mc/termsofservice/transactions/US/latest). Calling this method is only possible if the authenticated account is the same as the merchant id in the request. Calling this method multiple times will only accept Terms of Service if the latest version is not currently signed.
      operationId: content.buyongoogleprograms.onboard
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.
          in: path
          name: regionCode
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OnboardBuyOnGoogleProgramRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - buyongoogleprograms
  /{merchantId}/buyongoogleprograms/{regionCode}/pause:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Pauses the BoG program in your Merchant Center account. This method is only available to selected merchants.
      operationId: content.buyongoogleprograms.pause
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.
          in: path
          name: regionCode
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PauseBuyOnGoogleProgramRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - buyongoogleprograms
  /{merchantId}/buyongoogleprograms/{regionCode}/requestreview:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Requests review and then activates the BoG program in your Merchant Center account for the first time. Moves the program to the REVIEW_PENDING state. This method is only available to selected merchants.
      operationId: content.buyongoogleprograms.requestreview
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The program region code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2). Currently only US is available.
          in: path
          name: regionCode
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestReviewBuyOnGoogleProgramRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - buyongoogleprograms
  /{merchantId}/collections:
    get:
      description: Lists the collections in your Merchant Center account. The response might contain fewer items than specified by page_size. Rely on next_page_token to determine if there are more items to be requested.
      operationId: content.collections.list
      parameters:
        - description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of collections to return in the response, used for paging. Defaults to 50; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCollectionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - collections
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads a collection to your Merchant Center account. If a collection with the same collectionId already exists, this method updates that entry. In each update, the collection is completely replaced by the fields in the body of the update request.
      operationId: content.collections.create
      parameters:
        - description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Collection"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - collections
  /{merchantId}/collections/{collectionId}:
    delete:
      description: Deletes a collection from your Merchant Center account.
      operationId: content.collections.delete
      parameters:
        - description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The collectionId of the collection. CollectionId is the same as the REST ID of the collection.
          in: path
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - collections
    get:
      description: Retrieves a collection from your Merchant Center account.
      operationId: content.collections.get
      parameters:
        - description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The REST ID of the collection.
          in: path
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Collection"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - collections
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/collectionstatuses:
    get:
      description: Lists the statuses of the collections in your Merchant Center account.
      operationId: content.collectionstatuses.list
      parameters:
        - description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of collection statuses to return in the response, used for paging. Defaults to 50; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCollectionStatusesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - collectionstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/collectionstatuses/{collectionId}:
    get:
      description: Gets the status of a collection from your Merchant Center account.
      operationId: content.collectionstatuses.get
      parameters:
        - description: Required. The ID of the account that contains the collection. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The collectionId of the collection. CollectionId is the same as the REST ID of the collection.
          in: path
          name: collectionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CollectionStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - collectionstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/conversionsources:
    get:
      description: Retrieves the list of conversion sources the caller has access to.
      operationId: content.conversionsources.list
      parameters:
        - description: Required. The ID of the account that owns the new conversion source.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of conversion sources to return in a page. If no `page_size` is specified, `100` is used as the default value. The maximum value is `200`. Values above `200` will be coerced to `200`. Regardless of pagination, at most `200` conversion sources are returned in total.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: If true, also returns archived conversion sources.
          in: query
          name: showDeleted
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConversionSourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - conversionsources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new conversion source.
      operationId: content.conversionsources.create
      parameters:
        - description: Required. The ID of the account that owns the new conversion source.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversionSource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversionSource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - conversionsources
  /{merchantId}/conversionsources/{conversionSourceId}:
    delete:
      description: Archives an existing conversion source. It will be recoverable for 30 days. This archiving behavior is not typical in the Content API and unique to this service.
      operationId: content.conversionsources.delete
      parameters:
        - description: Required. The ID of the account that owns the new conversion source.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The ID of the conversion source to be deleted.
          in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - conversionsources
    get:
      description: Fetches a conversion source.
      operationId: content.conversionsources.get
      parameters:
        - description: Required. The ID of the account that owns the new conversion source.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The REST ID of the collection.
          in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversionSource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - conversionsources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates information of an existing conversion source.
      operationId: content.conversionsources.patch
      parameters:
        - description: Required. The ID of the account that owns the new conversion source.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The ID of the conversion source to be updated.
          in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
        - description: Required. List of fields being updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConversionSource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ConversionSource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - conversionsources
  /{merchantId}/conversionsources/{conversionSourceId}:undelete:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Re-enables an archived conversion source.
      operationId: content.conversionsources.undelete
      parameters:
        - description: Required. The ID of the account that owns the new conversion source.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The ID of the conversion source to be undeleted.
          in: path
          name: conversionSourceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UndeleteConversionSourceRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - conversionsources
  /{merchantId}/datafeeds:
    get:
      description: Lists the configurations for datafeeds in your Merchant Center account.
      operationId: content.datafeeds.list
      parameters:
        - description: The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of products to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatafeedsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Registers a datafeed configuration with your Merchant Center account.
      operationId: content.datafeeds.insert
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Datafeed"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Datafeed"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  /{merchantId}/datafeeds/{datafeedId}:
    delete:
      description: Deletes a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.delete
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    get:
      description: Retrieves a datafeed configuration from your Merchant Center account.
      operationId: content.datafeeds.get
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Datafeed"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates a datafeed configuration of your Merchant Center account. Any fields that are not provided are deleted from the resource.
      operationId: content.datafeeds.update
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Datafeed"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Datafeed"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  /{merchantId}/datafeeds/{datafeedId}/fetchNow:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Invokes a fetch for the datafeed in your Merchant Center account. If you need to call this method more than once per day, we recommend you use the [Products service](https://developers.google.com/shopping-content/reference/rest/v2.1/products) to update your product data.
      operationId: content.datafeeds.fetchnow
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed to be fetched.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatafeedsFetchNowResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeeds
  /{merchantId}/datafeedstatuses:
    get:
      description: Lists the statuses of the datafeeds in your Merchant Center account.
      operationId: content.datafeedstatuses.list
      parameters:
        - description: The ID of the account that manages the datafeeds. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of products to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatafeedstatusesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/datafeedstatuses/{datafeedId}:
    get:
      description: Retrieves the status of a datafeed from your Merchant Center account.
      operationId: content.datafeedstatuses.get
      parameters:
        - description: The ID of the account that manages the datafeed. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the datafeed.
          in: path
          name: datafeedId
          required: true
          schema:
            type: string
        - description: Deprecated. Use `feedLabel` instead. The country to get the datafeed status for. If this parameter is provided then `language` must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
          in: query
          name: country
          schema:
            type: string
        - description: The feed label to get the datafeed status for. If this parameter is provided then `language` must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
          in: query
          name: feedLabel
          schema:
            type: string
        - description: The language to get the datafeed status for. If this parameter is provided then `country` must also be provided. Note that this parameter is required for feeds targeting multiple countries and languages, since a feed may have a different status for each target.
          in: query
          name: language
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DatafeedStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - datafeedstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/freelistingsprogram:
    get:
      description: Retrieves the status and review eligibility for the free listing program. Returns errors and warnings if they require action to resolve, will become disapprovals, or impact impressions. Use `accountstatuses` to view all issues for an account.
      operationId: content.freelistingsprogram.get
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FreeListingsProgramStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - freelistingsprogram
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/freelistingsprogram/checkoutsettings:
    delete:
      description: Deletes `Checkout` settings and unenrolls merchant from `Checkout` program.
      operationId: content.freelistingsprogram.checkoutsettings.delete
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - freelistingsprogram
    get:
      description: Gets Checkout settings for the given merchant. This includes information about review state, enrollment state and URL settings.
      operationId: content.freelistingsprogram.checkoutsettings.get
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - freelistingsprogram
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Enrolls merchant in `Checkout` program.
      operationId: content.freelistingsprogram.checkoutsettings.insert
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsertCheckoutSettingsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - freelistingsprogram
  /{merchantId}/freelistingsprogram/requestreview:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Requests a review of free listings in a specific region. This method deprecated. Use the `MerchantSupportService` to view product and account issues and request a review.
      operationId: content.freelistingsprogram.requestreview
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestReviewFreeListingsRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - freelistingsprogram
  /{merchantId}/liasettings:
    get:
      description: Lists the LIA settings of the sub-accounts in your Merchant Center account.
      operationId: content.liasettings.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of LIA settings to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/liasettings/{accountId}:
    get:
      description: Retrieves the LIA settings of the account.
      operationId: content.liasettings.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiaSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the LIA settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.liasettings.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get or update LIA settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LiaSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiaSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /{merchantId}/liasettings/{accountId}/accessiblegmbaccounts:
    get:
      description: Retrieves the list of accessible Business Profiles.
      operationId: content.liasettings.getaccessiblegmbaccounts
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to retrieve accessible Business Profiles.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsGetAccessibleGmbAccountsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/liasettings/{accountId}/requestgmbaccess:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Requests access to a specified Business Profile.
      operationId: content.liasettings.requestgmbaccess
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which Business Profile access is requested.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The email of the Business Profile.
          in: query
          name: gmbEmail
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsRequestGmbAccessResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /{merchantId}/liasettings/{accountId}/requestinventoryverification/{country}:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Requests inventory validation for the specified country.
      operationId: content.liasettings.requestinventoryverification
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which inventory validation is requested.
          in: path
          name: country
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsRequestInventoryVerificationResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /{merchantId}/liasettings/{accountId}/setinventoryverificationcontact:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the inventory verification contract for the specified country.
      operationId: content.liasettings.setinventoryverificationcontact
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which inventory verification is requested.
          in: query
          name: country
          required: true
          schema:
            type: string
        - description: The language for which inventory verification is requested.
          in: query
          name: language
          required: true
          schema:
            type: string
        - description: The name of the inventory verification contact.
          in: query
          name: contactName
          required: true
          schema:
            type: string
        - description: The email of the inventory verification contact.
          in: query
          name: contactEmail
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsSetInventoryVerificationContactResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /{merchantId}/liasettings/{accountId}/setomnichannelexperience:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the omnichannel experience for the specified country. Only supported for merchants whose POS data provider is trusted to enable the corresponding experience. For more context, see these help articles [about LFP](https://support.google.com/merchants/answer/7676652) and [how to get started](https://support.google.com/merchants/answer/7676578) with it.
      operationId: content.liasettings.setomnichannelexperience
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to retrieve accessible Business Profiles.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The CLDR country code (for example, "US") for which the omnichannel experience is selected.
          in: query
          name: country
          schema:
            type: string
        - description: 'The Local Store Front (LSF) type for this country. Acceptable values are: - "`ghlsf`" (Google-Hosted Local Store Front) - "`mhlsfBasic`" (Merchant-Hosted Local Store Front Basic) - "`mhlsfFull`" (Merchant-Hosted Local Store Front Full) More details about these types can be found here.'
          in: query
          name: lsfType
          schema:
            type: string
        - description: 'The Pickup types for this country. Acceptable values are: - "`pickupToday`" - "`pickupLater`" '
          explode: true
          in: query
          name: pickupTypes
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiaOmnichannelExperience"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /{merchantId}/liasettings/{accountId}/setposdataprovider:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the POS data provider for the specified country.
      operationId: content.liasettings.setposdataprovider
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to retrieve accessible Business Profiles.
          in: path
          name: accountId
          required: true
          schema:
            type: string
        - description: The country for which the POS data provider is selected.
          in: query
          name: country
          required: true
          schema:
            type: string
        - description: The ID of POS data provider.
          in: query
          name: posDataProviderId
          schema:
            type: string
        - description: The account ID by which this merchant is known to the POS data provider.
          in: query
          name: posExternalAccountId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LiasettingsSetPosDataProviderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - liasettings
  /{merchantId}/merchantsupport/renderaccountissues:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Provide a list of merchant's issues with a support content and available actions. This content and actions are meant to be rendered and shown in third-party applications.
      operationId: content.merchantsupport.renderaccountissues
      parameters:
        - description: Required. The ID of the account to fetch issues for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to localize support content. If not set, the result will be in default language `en-US`.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in support content. For example 'America/Los_Angeles'. If not set, results will use as a default UTC.
          in: query
          name: timeZone
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenderAccountIssuesRequestPayload"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenderAccountIssuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - merchantsupport
  /{merchantId}/merchantsupport/renderproductissues/{productId}:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Provide a list of issues for merchant's product with a support content and available actions. This content and actions are meant to be rendered and shown in third-party applications.
      operationId: content.merchantsupport.renderproductissues
      parameters:
        - description: Required. The ID of the account that contains the product.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The [REST_ID](https://developers.google.com/shopping-content/reference/rest/v2.1/products#Product.FIELDS.id) of the product to fetch issues for.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: Optional. The [IETF BCP-47](https://tools.ietf.org/html/bcp47) language code used to localize support content. If not set, the result will be in default language `en-US`.
          in: query
          name: languageCode
          schema:
            type: string
        - description: Optional. The [IANA](https://www.iana.org/time-zones) timezone used to localize times in support content. For example 'America/Los_Angeles'. If not set, results will use as a default UTC.
          in: query
          name: timeZone
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RenderProductIssuesRequestPayload"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RenderProductIssuesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - merchantsupport
  /{merchantId}/orderinvoices/{orderId}/createChargeInvoice:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a charge invoice for a shipment group, and triggers a charge capture for orderinvoice enabled orders.
      operationId: content.orderinvoices.createchargeinvoice
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderinvoicesCreateChargeInvoiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderinvoicesCreateChargeInvoiceResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderinvoices
  /{merchantId}/orderinvoices/{orderId}/createRefundInvoice:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a refund invoice for one or more shipment groups, and triggers a refund for orderinvoice enabled orders. This can only be used for line items that have previously been charged using `createChargeInvoice`. All amounts (except for the summary) are incremental with respect to the previous invoice.
      operationId: content.orderinvoices.createrefundinvoice
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderinvoicesCreateRefundInvoiceRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderinvoicesCreateRefundInvoiceResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderinvoices
  /{merchantId}/orderreports/disbursements:
    get:
      description: Retrieves a report for disbursements from your Merchant Center account.
      operationId: content.orderreports.listdisbursements
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "The last date which disbursements occurred. In ISO 8601 format. Default: current date."
          in: query
          name: disbursementEndDate
          schema:
            type: string
        - description: The first date which disbursements occurred. In ISO 8601 format.
          in: query
          name: disbursementStartDate
          schema:
            type: string
        - description: The maximum number of disbursements to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderreportsListDisbursementsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreports
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/orderreports/disbursements/{disbursementId}/transactions:
    get:
      description: Retrieves a list of transactions for a disbursement from your Merchant Center account.
      operationId: content.orderreports.listtransactions
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The Google-provided ID of the disbursement (found in Wallet).
          in: path
          name: disbursementId
          required: true
          schema:
            type: string
        - description: The maximum number of disbursements to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: "The last date in which transaction occurred. In ISO 8601 format. Default: current date."
          in: query
          name: transactionEndDate
          schema:
            type: string
        - description: The first date in which transaction occurred. In ISO 8601 format.
          in: query
          name: transactionStartDate
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderreportsListTransactionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreports
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/orderreturns:
    get:
      description: Lists order returns in your Merchant Center account.
      operationId: content.orderreturns.list
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "Obtains order returns that match the acknowledgement status. When set to true, obtains order returns that have been acknowledged. When false, obtains order returns that have not been acknowledged. When not provided, obtains order returns regardless of their acknowledgement status. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged order returns are returned. "
          in: query
          name: acknowledged
          schema:
            type: boolean
        - description: Obtains order returns created before this date (inclusively), in ISO 8601 format.
          in: query
          name: createdEndDate
          schema:
            type: string
        - description: Obtains order returns created after this date (inclusively), in ISO 8601 format.
          in: query
          name: createdStartDate
          schema:
            type: string
        - description: "Obtains order returns with the specified order ids. If this parameter is provided, createdStartDate, createdEndDate, shipmentType, shipmentStatus, shipmentState and acknowledged parameters must be not set. Note: if googleOrderId and shipmentTrackingNumber parameters are provided, the obtained results will include all order returns that either match the specified order id or the specified tracking number."
          explode: true
          in: query
          name: googleOrderIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The maximum number of order returns to return in the response, used for paging. The default value is 25 returns per page, and the maximum allowed value is 250 returns per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Return the results in the specified order.
          in: query
          name: orderBy
          schema:
            enum:
              - RETURN_CREATION_TIME_DESC
              - RETURN_CREATION_TIME_ASC
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Obtains order returns that match any shipment state provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment states.
          explode: true
          in: query
          name: shipmentStates
          schema:
            items:
              enum:
                - NEW
                - SHIPPED
                - COMPLETED
                - UNDELIVERABLE
                - PENDING
              type: string
            type: array
          style: form
        - description: Obtains order returns that match any shipment status provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment statuses.
          explode: true
          in: query
          name: shipmentStatus
          schema:
            items:
              enum:
                - NEW
                - IN_PROGRESS
                - PROCESSED
              type: string
            type: array
          style: form
        - description: "Obtains order returns with the specified tracking numbers. If this parameter is provided, createdStartDate, createdEndDate, shipmentType, shipmentStatus, shipmentState and acknowledged parameters must be not set. Note: if googleOrderId and shipmentTrackingNumber parameters are provided, the obtained results will include all order returns that either match the specified order id or the specified tracking number."
          explode: true
          in: query
          name: shipmentTrackingNumbers
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Obtains order returns that match any shipment type provided in this parameter. When this parameter is not provided, order returns are obtained regardless of their shipment types.
          explode: true
          in: query
          name: shipmentTypes
          schema:
            items:
              enum:
                - BY_MAIL
                - RETURNLESS
                - CONTACT_CUSTOMER_SUPPORT
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderreturnsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/orderreturns/createOrderReturn:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create return in your Merchant Center account.
      operationId: content.orderreturns.createorderreturn
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderreturnsCreateOrderReturnRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderreturnsCreateOrderReturnResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
  /{merchantId}/orderreturns/{returnId}:
    get:
      description: Retrieves an order return from your Merchant Center account.
      operationId: content.orderreturns.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Merchant order return ID generated by Google.
          in: path
          name: returnId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MerchantOrderReturn"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/orderreturns/{returnId}/acknowledge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Acks an order return in your Merchant Center account.
      operationId: content.orderreturns.acknowledge
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the return.
          in: path
          name: returnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderreturnsAcknowledgeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderreturnsAcknowledgeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
  /{merchantId}/orderreturns/{returnId}/labels:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Links a return shipping label to a return id. You can only create one return label per return id. Since the label is sent to the buyer, the linked return label cannot be updated or deleted. If you try to create multiple return shipping labels for a single return id, every create request except the first will fail.
      operationId: content.orderreturns.labels.create
      parameters:
        - description: Required. The merchant the Return Shipping Label belongs to.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. Provide the Google-generated merchant order return ID.
          in: path
          name: returnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnShippingLabel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnShippingLabel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
  /{merchantId}/orderreturns/{returnId}/process:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Processes return in your Merchant Center account.
      operationId: content.orderreturns.process
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the return.
          in: path
          name: returnId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderreturnsProcessRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderreturnsProcessResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orderreturns
  /{merchantId}/orders:
    get:
      description: Lists the orders in your Merchant Center account.
      operationId: content.orders.list
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "Obtains orders that match the acknowledgement status. When set to true, obtains orders that have been acknowledged. When false, obtains orders that have not been acknowledged. We recommend using this filter set to `false`, in conjunction with the `acknowledge` call, such that only un-acknowledged orders are returned. "
          in: query
          name: acknowledged
          schema:
            type: boolean
        - description: The maximum number of orders to return in the response, used for paging. The default value is 25 orders per page, and the maximum allowed value is 250 orders per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: "Order results by placement date in descending or ascending order. Acceptable values are: - placedDateAsc - placedDateDesc "
          in: query
          name: orderBy
          schema:
            type: string
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Obtains orders placed before this date (exclusively), in ISO 8601 format.
          in: query
          name: placedDateEnd
          schema:
            type: string
        - description: Obtains orders placed after this date (inclusively), in ISO 8601 format.
          in: query
          name: placedDateStart
          schema:
            type: string
        - description: Obtains orders that match any of the specified statuses. Note that `active` is a shortcut for `pendingShipment` and `partiallyShipped`, and `completed` is a shortcut for `shipped`, `partiallyDelivered`, `delivered`, `partiallyReturned`, `returned`, and `canceled`.
          explode: true
          in: query
          name: statuses
          schema:
            items:
              enum:
                - ACTIVE
                - COMPLETED
                - CANCELED
                - IN_PROGRESS
                - PENDING_SHIPMENT
                - PARTIALLY_SHIPPED
                - SHIPPED
                - PARTIALLY_DELIVERED
                - DELIVERED
                - PARTIALLY_RETURNED
                - RETURNED
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/orders/{orderId}:
    get:
      description: Retrieves an order from your Merchant Center account.
      operationId: content.orders.get
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/orders/{orderId}/acknowledge:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Marks an order as acknowledged.
      operationId: content.orders.acknowledge
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersAcknowledgeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersAcknowledgeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Cancels all line items in an order, making a full refund.
      operationId: content.orders.cancel
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersCancelResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/cancelLineItem:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Cancels a line item, making a full refund.
      operationId: content.orders.cancellineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersCancelLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/captureOrder:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Capture funds from the customer for the current order total. This method should be called after the merchant verifies that they are able and ready to start shipping the order. This method blocks until a response is received from the payment processsor. If this method succeeds, the merchant is guaranteed to receive funds for the order after shipment. If the request fails, it can be retried or the order may be cancelled. This method cannot be called after the entire order is already shipped. A rejected error code is returned when the payment service provider has declined the charge. This indicates a problem between the PSP and either the merchant's or customer's account. Sometimes this error will be resolved by the customer. We recommend retrying these errors once per day or cancelling the order with reason `failedToCaptureFunds` if the items cannot be held.
      operationId: content.orders.captureOrder
      parameters:
        - description: Required. The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The ID of the Order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CaptureOrderRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CaptureOrderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/inStoreRefundLineItem:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Deprecated. Notifies that item return and refund was handled directly by merchant outside of Google payments processing (for example, cash refund done in store). Note: We recommend calling the returnrefundlineitem method to refund in-store returns. We will issue the refund directly to the customer. This helps to prevent possible differences arising between merchant and Google transaction records. We also recommend having the point of sale system communicate with Google to ensure that customers do not receive a double refund by first refunding through Google then through an in-store return."
      operationId: content.orders.instorerefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersInStoreRefundLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersInStoreRefundLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/refunditem:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Issues a partial or total refund for items and shipment.
      operationId: content.orders.refunditem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRefundItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersRefundItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/refundorder:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Issues a partial or total refund for an order.
      operationId: content.orders.refundorder
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order to refund.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRefundOrderRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersRefundOrderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/rejectReturnLineItem:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Rejects return on an line item.
      operationId: content.orders.rejectreturnlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersRejectReturnLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersRejectReturnLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/returnRefundLineItem:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns and refunds a line item. Note that this method can only be called on fully shipped orders. The Orderreturns API is the preferred way to handle returns after you receive a return from a customer. You can use Orderreturns.list or Orderreturns.get to search for the return, and then use Orderreturns.processreturn to issue the refund. If the return cannot be found, then we recommend using this API to issue a refund.
      operationId: content.orders.returnrefundlineitem
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersReturnRefundLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersReturnRefundLineItemResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/setLineItemMetadata:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets (or overrides if it already exists) merchant provided annotations in the form of key-value pairs. A common use case would be to supply us with additional structured information about a line item that cannot be provided through other methods. Submitted key-value pairs can be retrieved as part of the orders resource.
      operationId: content.orders.setlineitemmetadata
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersSetLineItemMetadataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersSetLineItemMetadataResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/shipLineItems:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Marks line item(s) as shipped.
      operationId: content.orders.shiplineitems
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersShipLineItemsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersShipLineItemsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/testreturn:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sandbox only. Creates a test return.
      operationId: content.orders.createtestreturn
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCreateTestReturnRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersCreateTestReturnResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/updateLineItemShippingDetails:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates ship by and delivery by dates for a line item.
      operationId: content.orders.updatelineitemshippingdetails
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateLineItemShippingDetailsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersUpdateLineItemShippingDetailsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/updateMerchantOrderId:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the merchant order ID for a given order.
      operationId: content.orders.updatemerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateMerchantOrderIdRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersUpdateMerchantOrderIdResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/orders/{orderId}/updateShipment:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates a shipment's status, carrier, and/or tracking ID.
      operationId: content.orders.updateshipment
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the order.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersUpdateShipmentRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersUpdateShipmentResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/ordersbymerchantid/{merchantOrderId}:
    get:
      description: Retrieves an order using merchant order ID.
      operationId: content.orders.getbymerchantorderid
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The merchant order ID to be looked for.
          in: path
          name: merchantOrderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersGetByMerchantOrderIdResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/ordertrackingsignals:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates new order tracking signal.
      operationId: content.ordertrackingsignals.create
      parameters:
        - description: The ID of the merchant for which the order signal is created.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderTrackingSignal"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderTrackingSignal"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - ordertrackingsignals
  /{merchantId}/pos/{targetMerchantId}/inventory:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submit inventory for the given merchant.
      operationId: content.pos.inventory
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosInventoryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosInventoryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  /{merchantId}/pos/{targetMerchantId}/sale:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submit a sale event for the given merchant.
      operationId: content.pos.sale
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosSaleRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosSaleResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  /{merchantId}/pos/{targetMerchantId}/store:
    get:
      description: Lists the stores of the target merchant.
      operationId: content.pos.list
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a store for the given merchant.
      operationId: content.pos.insert
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PosStore"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosStore"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
  /{merchantId}/pos/{targetMerchantId}/store/{storeCode}:
    delete:
      description: Deletes a store for the given merchant.
      operationId: content.pos.delete
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    get:
      description: Retrieves information about the given store.
      operationId: content.pos.get
      parameters:
        - description: The ID of the POS or inventory data provider.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the target merchant.
          in: path
          name: targetMerchantId
          required: true
          schema:
            type: string
        - description: A store code that is unique per merchant.
          in: path
          name: storeCode
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PosStore"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pos
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/productdeliverytime:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates or updates the delivery time of a product.
      operationId: content.productdeliverytime.create
      parameters:
        - description: The Google merchant ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDeliveryTime"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDeliveryTime"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productdeliverytime
  /{merchantId}/productdeliverytime/{productId}:
    delete:
      description: Deletes the delivery time of a product.
      operationId: content.productdeliverytime.delete
      parameters:
        - description: Required. The Google merchant ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productdeliverytime
    get:
      description: Gets `productDeliveryTime` by `productId`.
      operationId: content.productdeliverytime.get
      parameters:
        - description: Required. The Google merchant ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductDeliveryTime"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productdeliverytime
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/products:
    get:
      description: Lists the products in your Merchant Center account. The response might contain fewer items than specified by maxResults. Rely on nextPageToken to determine if there are more items to be requested.
      operationId: content.products.list
      parameters:
        - description: The ID of the account that contains the products. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of products to return in the response, used for paging. The default value is 25. The maximum value is 250.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads a product to your Merchant Center account. If an item with the same channel, contentLanguage, offerId, and targetCountry already exists, this method updates that entry.
      operationId: content.products.insert
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The Content API Supplemental Feed ID. If present then product insertion applies to the data in a supplemental feed.
          in: query
          name: feedId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  /{merchantId}/products/{productId}:
    delete:
      description: Deletes a product from your Merchant Center account.
      operationId: content.products.delete
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: The Content API Supplemental Feed ID. If present then product deletion applies to the data in a supplemental feed. If absent, entire product will be deleted.
          in: query
          name: feedId
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    get:
      description: Retrieves a product from your Merchant Center account.
      operationId: content.products.get
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing product in your Merchant Center account. Only updates attributes provided in the request.
      operationId: content.products.update
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product for which to update.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: 'The comma-separated list of product attributes to be updated. Example: `"title,salePrice"`. Attributes specified in the update mask without a value specified in the body will be deleted from the product. *You must specify the update mask to delete attributes.* Only top-level product attributes can be updated. If not defined, product attributes with set values will be updated and other attributes will stay unchanged.'
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - products
  /{merchantId}/products/{productId}/localinventory:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the local inventory of a product in your Merchant Center account.
      operationId: content.localinventory.insert
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product for which to update local inventory.
          in: path
          name: productId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocalInventory"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocalInventory"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - localinventory
  /{merchantId}/products/{productId}/regionalinventory:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates the regional inventory of a product in your Merchant Center account. If a regional inventory with the same region ID already exists, this method updates that entry.
      operationId: content.regionalinventory.insert
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product for which to update the regional inventory.
          in: path
          name: productId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegionalInventory"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegionalInventory"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regionalinventory
  /{merchantId}/productstatuses:
    get:
      description: Lists the statuses of the products in your Merchant Center account.
      operationId: content.productstatuses.list
      parameters:
        - description: The ID of the account that contains the products. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The maximum number of product statuses to return in the response, used for paging. The default value is 25. The maximum value is 250.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductstatusesListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/productstatuses/{productId}:
    get:
      description: Gets the status of a product from your Merchant Center account.
      operationId: content.productstatuses.get
      parameters:
        - description: The ID of the account that contains the product. This account cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The REST ID of the product.
          in: path
          name: productId
          required: true
          schema:
            type: string
        - description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          explode: true
          in: query
          name: destinations
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProductStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - productstatuses
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/promotions:
    get:
      description: List all promotions from your Merchant Center account.
      operationId: content.promotions.list
      parameters:
        - description: Required. The ID of the account that contains the collection.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: '[CLDR country code](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) (for example, "US"), used as a filter on promotions target country.'
          in: query
          name: countryCode
          schema:
            type: string
        - description: The two-letter ISO 639-1 language code associated with the promotions, used as a filter.
          in: query
          name: languageCode
          schema:
            type: string
        - description: The maximum number of promotions to return. The service may return fewer than this value. If unspecified, at most 50 labels will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListPromotion` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPromotion` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPromotionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - promotions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a promotion for your Merchant Center account. If the promotion already exists, then it updates the promotion instead. To [end or delete] (https://developers.google.com/shopping-content/guides/promotions#end_a_promotion) a promotion update the time period of the promotion to a time that has already passed.
      operationId: content.promotions.create
      parameters:
        - description: Required. The ID of the account that contains the collection.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Promotion"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Promotion"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - promotions
  /{merchantId}/promotions/{id}:
    get:
      description: Retrieves a promotion from your Merchant Center account.
      operationId: content.promotions.get
      parameters:
        - description: Required. The ID of the account that contains the collection.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. REST ID of the promotion to retrieve.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Promotion"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - promotions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/pubsubnotificationsettings:
    get:
      description: Retrieves a Merchant Center account's pubsub notification settings.
      operationId: content.pubsubnotificationsettings.get
      parameters:
        - description: The ID of the account for which to get pubsub notification settings.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PubsubNotificationSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pubsubnotificationsettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Register a Merchant Center account for pubsub notifications. Note that cloud topic name shouldn't be provided as part of the request.
      operationId: content.pubsubnotificationsettings.update
      parameters:
        - description: The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PubsubNotificationSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PubsubNotificationSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - pubsubnotificationsettings
  /{merchantId}/quotas:
    get:
      description: Lists the daily call quota and usage per method for your Merchant Center account.
      operationId: content.quotas.list
      parameters:
        - description: Required. The ID of the account that has quota. This account must be an admin.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of quotas to return in the response, used for paging. Defaults to 500; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token (if provided) to retrieve the subsequent page. All other parameters must match the original call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListMethodQuotasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - quotas
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/recommendations/generate:
    get:
      description: Generates recommendations for a merchant.
      operationId: content.recommendations.generate
      parameters:
        - description: Required. The ID of the account to fetch recommendations for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: "Optional. List of allowed tags. Tags are a set of predefined strings that describe the category that individual recommendation types belong to. User can specify zero or more tags in this field to indicate what categories of recommendations they want to receive. Current list of supported tags: - TREND"
          explode: true
          in: query
          name: allowedTag
          schema:
            items:
              type: string
            type: array
          style: form
        - description: 'Optional. Language code of the client. If not set, the result will be in default language (English). This language code affects all fields prefixed with "localized". This should be set to ISO 639-1 country code. List of currently verified supported language code: en, fr, cs, da, de, es, it, nl, no, pl, pt, pt, fi, sv, vi, tr, th, ko, zh-CN, zh-TW, ja, id, hi'
          in: query
          name: languageCode
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateRecommendationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - recommendations
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/recommendations/reportInteraction:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Reports an interaction on a recommendation for a merchant.
      operationId: content.recommendations.reportInteraction
      parameters:
        - description: Required. The ID of the account that wants to report an interaction.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReportInteractionRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - recommendations
  /{merchantId}/regions:
    get:
      description: Lists the regions in your Merchant Center account.
      operationId: content.regions.list
      parameters:
        - description: Required. The id of the merchant for which to list region definitions.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of regions to return. The service may return fewer than this value. If unspecified, at most 50 rules will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token, received from a previous `ListRegions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListRegions` must match the call that provided the page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRegionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a region definition in your Merchant Center account.
      operationId: content.regions.create
      parameters:
        - description: Required. The id of the merchant for which to create region definition.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the region to create.
          in: query
          name: regionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Region"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Region"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regions
  /{merchantId}/regions/{regionId}:
    delete:
      description: Deletes a region definition from your Merchant Center account.
      operationId: content.regions.delete
      parameters:
        - description: Required. The id of the merchant for which to delete region definition.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the region to delete.
          in: path
          name: regionId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regions
    get:
      description: Retrieves a region defined in your Merchant Center account.
      operationId: content.regions.get
      parameters:
        - description: Required. The id of the merchant for which to retrieve region definition.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the region to retrieve.
          in: path
          name: regionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Region"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a region definition in your Merchant Center account.
      operationId: content.regions.patch
      parameters:
        - description: Required. The id of the merchant for which to update region definition.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the region to update.
          in: path
          name: regionId
          required: true
          schema:
            type: string
        - description: 'Optional. The comma-separated field mask indicating the fields to update. Example: `"displayName,postalCodeArea.regionCode"`.'
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Region"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Region"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - regions
  /{merchantId}/reports/search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieves merchant performance metrics matching the search query and optionally segmented by selected dimensions.
      operationId: content.reports.search
      parameters:
        - description: Required. Id of the merchant making the call. Must be a standalone account or an MCA subaccount.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - reports
  /{merchantId}/returnaddress:
    get:
      description: Lists the return addresses of the Merchant Center account.
      operationId: content.returnaddress.list
      parameters:
        - description: The Merchant Center account to list return addresses for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: List only return addresses applicable to the given country of sale. When omitted, all return addresses are listed.
          in: query
          name: country
          schema:
            type: string
        - description: The maximum number of addresses in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnaddressListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnaddress
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a return address for the Merchant Center account.
      operationId: content.returnaddress.insert
      parameters:
        - description: The Merchant Center account to insert a return address for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnAddress"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnAddress"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnaddress
  /{merchantId}/returnaddress/{returnAddressId}:
    delete:
      description: Deletes a return address for the given Merchant Center account.
      operationId: content.returnaddress.delete
      parameters:
        - description: The Merchant Center account from which to delete the given return address.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Return address ID generated by Google.
          in: path
          name: returnAddressId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnaddress
    get:
      description: Gets a return address of the Merchant Center account.
      operationId: content.returnaddress.get
      parameters:
        - description: The Merchant Center account to get a return address for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Return address ID generated by Google.
          in: path
          name: returnAddressId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnAddress"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnaddress
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/returnpolicy:
    get:
      description: Lists the return policies of the Merchant Center account.
      operationId: content.returnpolicy.list
      parameters:
        - description: The Merchant Center account to list return policies for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnpolicyListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicy
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a return policy for the Merchant Center account.
      operationId: content.returnpolicy.insert
      parameters:
        - description: The Merchant Center account to insert a return policy for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnPolicy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnPolicy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicy
  /{merchantId}/returnpolicy/{returnPolicyId}:
    delete:
      description: Deletes a return policy for the given Merchant Center account.
      operationId: content.returnpolicy.delete
      parameters:
        - description: The Merchant Center account from which to delete the given return policy.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Return policy ID generated by Google.
          in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicy
    get:
      description: Gets a return policy of the Merchant Center account.
      operationId: content.returnpolicy.get
      parameters:
        - description: The Merchant Center account to get a return policy for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Return policy ID generated by Google.
          in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnPolicy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicy
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/returnpolicyonline:
    get:
      description: Lists all existing return policies.
      operationId: content.returnpolicyonline.list
      parameters:
        - description: Required. The id of the merchant for which to retrieve the return policy online object.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListReturnPolicyOnlineResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicyonline
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new return policy.
      operationId: content.returnpolicyonline.create
      parameters:
        - description: Required. The id of the merchant for which to retrieve the return policy online object.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnPolicyOnline"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnPolicyOnline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicyonline
  /{merchantId}/returnpolicyonline/{returnPolicyId}:
    delete:
      description: Deletes an existing return policy.
      operationId: content.returnpolicyonline.delete
      parameters:
        - description: Required. The id of the merchant for which to retrieve the return policy online object.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the return policy to delete.
          in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicyonline
    get:
      description: Gets an existing return policy.
      operationId: content.returnpolicyonline.get
      parameters:
        - description: Required. The id of the merchant for which to retrieve the return policy online object.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the return policy to retrieve.
          in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnPolicyOnline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicyonline
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing return policy.
      operationId: content.returnpolicyonline.patch
      parameters:
        - description: Required. The id of the merchant for which to retrieve the return policy online object.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: Required. The id of the return policy to update.
          in: path
          name: returnPolicyId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReturnPolicyOnline"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReturnPolicyOnline"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - returnpolicyonline
  /{merchantId}/settlementreports:
    get:
      description: Retrieves a list of settlement reports from your Merchant Center account.
      operationId: content.settlementreports.list
      parameters:
        - description: The Merchant Center account to list settlements for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of settlements to return in the response, used for paging. The default value is 200 returns per page, and the maximum allowed value is 5000 returns per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Obtains settlements which have transactions before this date (inclusively), in ISO 8601 format.
          in: query
          name: transferEndDate
          schema:
            type: string
        - description: Obtains settlements which have transactions after this date (inclusively), in ISO 8601 format.
          in: query
          name: transferStartDate
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettlementreportsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - settlementreports
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/settlementreports/{settlementId}:
    get:
      description: Retrieves a settlement report from your Merchant Center account.
      operationId: content.settlementreports.get
      parameters:
        - description: The Merchant Center account of the settlement report.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The Google-provided ID of the settlement.
          in: path
          name: settlementId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettlementReport"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - settlementreports
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/settlementreports/{settlementId}/transactions:
    get:
      description: Retrieves a list of transactions for the settlement.
      operationId: content.settlementtransactions.list
      parameters:
        - description: The Merchant Center account to list transactions for.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The Google-provided ID of the settlement.
          in: path
          name: settlementId
          required: true
          schema:
            type: string
        - description: The maximum number of transactions to return in the response, used for paging. The default value is 200 transactions per page, and the maximum allowed value is 5000 transactions per page.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The list of transactions to return. If not set, all transactions will be returned.
          explode: true
          in: query
          name: transactionIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SettlementtransactionsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - settlementtransactions
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/shippingsettings:
    get:
      description: Lists the shipping settings of the sub-accounts in your Merchant Center account.
      operationId: content.shippingsettings.list
      parameters:
        - description: The ID of the managing account. This must be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The maximum number of shipping settings to return in the response, used for paging.
          in: query
          name: maxResults
          schema:
            type: integer
        - description: The token returned by the previous request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingsettingsListResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/shippingsettings/{accountId}:
    get:
      description: Retrieves the shipping settings of the account.
      operationId: content.shippingsettings.get
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates the shipping settings of the account. Any fields that are not provided are deleted from the resource.
      operationId: content.shippingsettings.update
      parameters:
        - description: The ID of the managing account. If this parameter is not the same as accountId, then this account must be a multi-client account and `accountId` must be the ID of a sub-account of this account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the account for which to get/update shipping settings.
          in: path
          name: accountId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ShippingSettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingSettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
  /{merchantId}/shoppingadsprogram:
    get:
      description: Retrieves the status and review eligibility for the Shopping Ads program. Returns errors and warnings if they require action to resolve, will become disapprovals, or impact impressions. Use `accountstatuses` to view all issues for an account.
      operationId: content.shoppingadsprogram.get
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShoppingAdsProgramStatus"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shoppingadsprogram
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/shoppingadsprogram/requestreview:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Requests a review of Shopping ads in a specific region. This method deprecated. Use the `MerchantSupportService` to view product and account issues and request a review.
      operationId: content.shoppingadsprogram.requestreview
      parameters:
        - description: Required. The ID of the account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestReviewShoppingAdsRequest"
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shoppingadsprogram
  /{merchantId}/supportedCarriers:
    get:
      description: Retrieves supported carriers and carrier services for an account.
      operationId: content.shippingsettings.getsupportedcarriers
      parameters:
        - description: The ID of the account for which to retrieve the supported carriers.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingsettingsGetSupportedCarriersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/supportedHolidays:
    get:
      description: Retrieves supported holidays for an account.
      operationId: content.shippingsettings.getsupportedholidays
      parameters:
        - description: The ID of the account for which to retrieve the supported holidays.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingsettingsGetSupportedHolidaysResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/supportedPickupServices:
    get:
      description: Retrieves supported pickup services for an account.
      operationId: content.shippingsettings.getsupportedpickupservices
      parameters:
        - description: The ID of the account for which to retrieve the supported pickup services.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ShippingsettingsGetSupportedPickupServicesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - shippingsettings
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /{merchantId}/testorders:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sandbox only. Creates a test order.
      operationId: content.orders.createtestorder
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCreateTestOrderRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersCreateTestOrderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/testorders/{orderId}/advance:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sandbox only. Moves a test order from state "`inProgress`" to state "`pendingShipment`".
      operationId: content.orders.advancetestorder
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to modify.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersAdvanceTestOrderResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/testorders/{orderId}/cancelByCustomer:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sandbox only. Cancels a test order for customer-initiated cancellation.
      operationId: content.orders.canceltestorderbycustomer
      parameters:
        - description: The ID of the account that manages the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The ID of the test order to cancel.
          in: path
          name: orderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrdersCancelTestOrderByCustomerRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersCancelTestOrderByCustomerResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
  /{merchantId}/testordertemplates/{templateName}:
    get:
      description: Sandbox only. Retrieves an order template that can be used to quickly create a new order in sandbox.
      operationId: content.orders.gettestordertemplate
      parameters:
        - description: The ID of the account that should manage the order. This cannot be a multi-client account.
          in: path
          name: merchantId
          required: true
          schema:
            type: string
        - description: The name of the template to retrieve.
          in: path
          name: templateName
          required: true
          schema:
            enum:
              - TEMPLATE1
              - TEMPLATE2
              - TEMPLATE1A
              - TEMPLATE1B
              - TEMPLATE3
              - TEMPLATE4
            type: string
        - description: The country of the template to retrieve. Defaults to "`US`".
          in: query
          name: country
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrdersGetTestOrderTemplateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/content
          Oauth2c:
            - https://www.googleapis.com/auth/content
      tags:
        - orders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Account:
      description: Account data. After the creation of a new account it may take a few minutes before it's fully operational. The methods delete, insert, and update require the admin role.
      properties:
        accountManagement:
          description: 'Output only. How the account is managed. Acceptable values are: - "`manual`" - "`automatic`" '
          readOnly: true
          type: string
        adsLinks:
          description: Linked Ads accounts that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected either in the Ads interface or through the Google Ads API. To delete an active link, or to cancel a link request, remove it from the list.
          items:
            $ref: "#/components/schemas/AccountAdsLink"
          type: array
        adultContent:
          description: Indicates whether the merchant sells adult content.
          type: boolean
        automaticImprovements:
          $ref: "#/components/schemas/AccountAutomaticImprovements"
          description: The automatic improvements of the account can be used to automatically update items, improve images and shipping. Each section inside AutomaticImprovements is updated separately.
        automaticLabelIds:
          description: Automatically created label IDs that are assigned to the account by CSS Center.
          items:
            format: uint64
            type: string
          type: array
        businessIdentity:
          $ref: "#/components/schemas/AccountBusinessIdentity"
          description: The business identity attributes can be used to self-declare attributes that let customers know more about your business.
        businessInformation:
          $ref: "#/components/schemas/AccountBusinessInformation"
          description: The business information of the account.
        conversionSettings:
          $ref: "#/components/schemas/AccountConversionSettings"
          description: Settings for conversion tracking.
        cssId:
          description: ID of CSS the account belongs to.
          format: uint64
          type: string
        googleMyBusinessLink:
          $ref: "#/components/schemas/AccountGoogleMyBusinessLink"
          description: The Business Profile which is linked or in the process of being linked with the Merchant Center account.
        id:
          description: Required. 64-bit Merchant Center account ID.
          format: uint64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#account`".'
          type: string
        labelIds:
          description: Manually created label IDs that are assigned to the account by CSS.
          items:
            format: uint64
            type: string
          type: array
        name:
          description: Required. Display name for the account.
          type: string
        sellerId:
          description: Client-specific, locally-unique, internal ID for the child account.
          type: string
        users:
          description: Users with access to the account. Every account (except for subaccounts) must have at least one admin user.
          items:
            $ref: "#/components/schemas/AccountUser"
          type: array
        websiteUrl:
          description: The merchant's website.
          type: string
        youtubeChannelLinks:
          description: Linked YouTube channels that are active or pending approval. To create a new link request, add a new link with status `active` to the list. It will remain in a `pending` state until approved or rejected in the YT Creator Studio interface. To delete an active link, or to cancel a link request, remove it from the list.
          items:
            $ref: "#/components/schemas/AccountYouTubeChannelLink"
          type: array
      type: object
    AccountAddress:
      properties:
        country:
          description: CLDR country code (for example, "US"). All MCA sub-accounts inherit the country of their parent MCA by default, however the country can be updated for individual sub-accounts.
          type: string
        locality:
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal code or ZIP (for example, "94043").
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          type: string
      type: object
    AccountAdsLink:
      properties:
        adsId:
          description: Customer ID of the Ads account.
          format: uint64
          type: string
        status:
          description: "Status of the link between this Merchant Center account and the Ads account. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in Google Ads or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending. Acceptable values are: - \"`active`\" - \"`pending`\" "
          type: string
      type: object
    AccountAutomaticImprovements:
      description: The automatic improvements of the account can be used to automatically update items, improve images and shipping.
      properties:
        imageImprovements:
          $ref: "#/components/schemas/AccountImageImprovements"
          description: "This improvement will attempt to automatically correct submitted images if they don't meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973) This field is only updated (cleared) if provided."
        itemUpdates:
          $ref: "#/components/schemas/AccountItemUpdates"
          description: Turning on [item updates](https://support.google.com/merchants/answer/3246284) allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown. This field is only updated (cleared) if provided.
        shippingImprovements:
          $ref: "#/components/schemas/AccountShippingImprovements"
          description: "Not available for MCAs [accounts](https://support.google.com/merchants/answer/188487). By turning on [automatic shipping improvements](https://support.google.com/merchants/answer/10027038), you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: - Delivery address of an order - Current handling time and shipping time settings - Estimated weekdays or business days - Parcel tracking data This field is only updated (cleared) if provided."
      type: object
    AccountBusinessIdentity:
      description: The [business identity attributes](https://support.google.com/merchants/answer/10342414) can be used to self-declare attributes that let customers know more about your business.
      properties:
        blackOwned:
          $ref: "#/components/schemas/AccountIdentityType"
          description: Specifies whether the business identifies itself as being black-owned. This optional field is only available for merchants with a business country set to "US". This field is not allowed for marketplaces or marketplace sellers.
        includeForPromotions:
          description: Required. By setting this field, your business may be included in promotions for all the selected attributes. If you clear this option, it won't affect your identification with any of the attributes. For this field to be set, the merchant must self identify with at least one of the `AccountIdentityType`. If none are included, the request will be considered invalid.
          type: boolean
        latinoOwned:
          $ref: "#/components/schemas/AccountIdentityType"
          description: Specifies whether the business identifies itself as being latino-owned. This optional field is only available for merchants with a business country set to "US". This field is not allowed for marketplaces or marketplace sellers.
        smallBusiness:
          $ref: "#/components/schemas/AccountIdentityType"
          description: Specifies whether the business identifies itself as a small business. This optional field is only available for merchants with a business country set to "US". It is also not allowed for marketplaces, but it is allowed to marketplace sellers.
        veteranOwned:
          $ref: "#/components/schemas/AccountIdentityType"
          description: Specifies whether the business identifies itself as being veteran-owned. This optional field is only available for merchants with a business country set to "US". This field is not allowed for marketplaces or marketplace sellers.
        womenOwned:
          $ref: "#/components/schemas/AccountIdentityType"
          description: Specifies whether the business identifies itself as being women-owned. This optional field is only available for merchants with a business country set to "US". This field is not allowed for marketplaces or marketplace sellers.
      type: object
    AccountBusinessInformation:
      properties:
        address:
          $ref: "#/components/schemas/AccountAddress"
          description: The address of the business. Use `\n` to add a second address line.
        customerService:
          $ref: "#/components/schemas/AccountCustomerService"
          description: The customer service information of the business.
        koreanBusinessRegistrationNumber:
          description: "The 10-digit [Korean business registration number](https://support.google.com/merchants/answer/9037766) separated with dashes in the format: XXX-XX-XXXXX. This field will only be updated if explicitly set."
          type: string
        phoneNumber:
          description: The phone number of the business in [E.164](https://en.wikipedia.org/wiki/E.164) format. This can only be updated if a verified phone number is not already set. To replace a verified phone number use the `Accounts.requestphoneverification` and `Accounts.verifyphonenumber`.
          type: string
        phoneVerificationStatus:
          description: 'Verification status of the phone number of the business. This status is read only and can be updated only by successful phone verification. Acceptable values are: - "`verified`" - "`unverified`" '
          type: string
      type: object
    AccountConversionSettings:
      description: Settings for conversion tracking.
      properties:
        freeListingsAutoTaggingEnabled:
          description: When enabled, free listing URLs have a parameter to enable conversion tracking for products owned by the current merchant account. See [auto-tagging](https://support.google.com/merchants/answer/11127659).
          type: boolean
      type: object
    AccountCredentials:
      description: Credentials allowing Google to call a partner's API on behalf of a merchant.
      properties:
        accessToken:
          description: An OAuth access token.
          type: string
        expiresIn:
          description: The amount of time, in seconds, after which the access token is no longer valid.
          format: int64
          type: string
        purpose:
          description: Indicates to Google how Google should use these OAuth tokens.
          enum:
            - ACCOUNT_CREDENTIALS_PURPOSE_UNSPECIFIED
            - SHOPIFY_ORDER_MANAGEMENT
            - SHOPIFY_INTEGRATION
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
      type: object
    AccountCustomerService:
      properties:
        email:
          description: Customer service email.
          type: string
        phoneNumber:
          description: Customer service phone number.
          type: string
        url:
          description: Customer service URL.
          type: string
      type: object
    AccountGoogleMyBusinessLink:
      properties:
        gmbAccountId:
          description: The ID of the Business Profile. If this is provided, then `gmbEmail` is ignored. The value of this field should match the `accountId` used by the Business Profile API.
          type: string
        gmbEmail:
          description: The Business Profile email address of a specific account within a Business Profile. A sample account within a Business Profile could be a business account with set of locations, managed under the Business Profile.
          type: string
        status:
          description: 'Status of the link between this Merchant Center account and the Business Profile. Acceptable values are: - "`active`" - "`pending`" '
          type: string
      type: object
    AccountIdentifier:
      properties:
        aggregatorId:
          description: The aggregator ID, set for aggregators and subaccounts (in that case, it represents the aggregator of the subaccount).
          format: uint64
          type: string
        merchantId:
          description: The merchant account ID, set for individual accounts and subaccounts.
          format: uint64
          type: string
      type: object
    AccountIdentityType:
      description: The account identity type used to specify attributes.
      properties:
        selfIdentified:
          description: Optional. Indicates that the business identifies itself with a given identity type. Setting this field does not automatically mean eligibility for promotions.
          type: boolean
      type: object
    AccountImageImprovements:
      description: "This improvement will attempt to automatically correct submitted images if they don't meet the [image requirements](https://support.google.com/merchants/answer/6324350), for example, removing overlays. If successful, the image will be replaced and approved. This improvement is only applied to images of disapproved offers. For more information see: [Automatic image improvements](https://support.google.com/merchants/answer/9242973)"
      properties:
        accountImageImprovementsSettings:
          $ref: "#/components/schemas/AccountImageImprovementsSettings"
          description: Determines how the images should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator.
        effectiveAllowAutomaticImageImprovements:
          description: Output only. The effective value of allow_automatic_image_improvements. If account_image_improvements_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
          type: boolean
      type: object
    AccountImageImprovementsSettings:
      description: Settings for the Automatic Image Improvements.
      properties:
        allowAutomaticImageImprovements:
          description: Enables automatic image improvements.
          type: boolean
      type: object
    AccountIssue:
      description: An issue affecting specific merchant.
      properties:
        actions:
          description: A list of actionable steps that can be executed to solve the issue. An example is requesting a re-review or providing arguments when merchant disagrees with the issue. Actions that are supported in (your) third-party application can be rendered as buttons and should be available to merchant when they expand the issue.
          items:
            $ref: "#/components/schemas/Action"
          type: array
        impact:
          $ref: "#/components/schemas/AccountIssueImpact"
          description: Clarifies the severity of the issue. The summarizing message, if present, should be shown right under the title for each issue. It helps merchants to quickly understand the impact of the issue. The detailed breakdown helps the merchant to fully understand the impact of the issue. It can be rendered as dialog that opens when the merchant mouse over the summarized impact statement. Issues with different severity can be styled differently. They may use a different color or icon to signal the difference between `ERROR`, `WARNING` and `INFO`.
        prerenderedContent:
          description: "Details of the issue as a pre-rendered HTML. HTML elements contain CSS classes that can be used to customize the style of the content. Always sanitize the HTML before embedding it directly to your application. The sanitizer needs to allow basic HTML tags, such as: `div`, `span`, `p`, `a`, `ul`, `li`, `table`, `tr`, `td`. For example, you can use [DOMPurify](https://www.npmjs.com/package/dompurify). CSS classes: * `issue-detail` - top level container for the detail of the issue * `callout-banners` - section of the `issue-detail` with callout banners * `callout-banner` - single callout banner, inside `callout-banners` * `callout-banner-info` - callout with important information (default) * `callout-banner-warning` - callout with a warning * `callout-banner-error` - callout informing about an error (most severe) * `issue-content` - section of the `issue-detail`, contains multiple `content-element` * `content-element` - content element such as a list, link or paragraph, inside `issue-content` * `root-causes` - unordered list with items describing root causes of the issue, inside `issue-content` * `root-causes-intro` - intro text before the `root-causes` list, inside `issue-content` * `segment` - section of the text, `span` inside paragraph * `segment-attribute` - section of the text that represents a product attribute, for example 'image\\_link' * `segment-literal` - section of the text that contains a special value, for example '0-1000 kg' * `segment-bold` - section of the text that should be rendered as bold * `segment-italic` - section of the text that should be rendered as italic * `tooltip` - used on paragraphs that should be rendered with a tooltip. A section of the text in such a paragraph will have a class `tooltip-text` and is intended to be shown in a mouse over dialog. If the style is not used, the `tooltip-text` section would be shown on a new line, after the main part of the text. * `tooltip-text` - marks a section of the text within a `tooltip`, that is intended to be shown in a mouse over dialog. * `tooltip-icon` - marks a section of the text within a `tooltip`, that can be replaced with a tooltip icon, for example '?' or 'i'. By default, this section contains a `br` tag, that is separating the main text and the tooltip text when the style is not used. * `tooltip-style-question` - the tooltip shows helpful information, can use the '?' as an icon. * `tooltip-style-info` - the tooltip adds additional information fitting to the context, can use the 'i' as an icon. * `content-moderation` - marks the paragraph that explains how the issue was identified. * `new-element` - Present for new elements added to the pre-rendered content in the future. To make sure that a new content element does not break your style, you can hide everything with this class."
          type: string
        title:
          description: Title of the issue.
          type: string
      type: object
    AccountIssueImpact:
      description: Overall impact of the issue.
      properties:
        breakdowns:
          description: Detailed impact breakdown. Explains the types of restriction the issue has in different shopping destinations and territory. If present, it should be rendered to the merchant. Can be shown as a mouse over dropdown or a dialog. Each breakdown item represents a group of regions with the same impact details.
          items:
            $ref: "#/components/schemas/Breakdown"
          type: array
        message:
          description: 'Optional. Message summarizing the overall impact of the issue. If present, it should be rendered to the merchant. For example: "Disapproves 90k offers in 25 countries"'
          type: string
        severity:
          description: The severity of the issue.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          type: string
      type: object
    AccountItemUpdates:
      description: Turning on [item updates](https://support.google.com/merchants/answer/3246284) allows Google to automatically update items for you. When item updates are on, Google uses the structured data markup on the website and advanced data extractors to update the price and availability of the items. When the item updates are off, items with mismatched data aren't shown.
      properties:
        accountItemUpdatesSettings:
          $ref: "#/components/schemas/AccountItemUpdatesSettings"
          description: Determines which attributes of the items should be automatically updated. If this field is not present, then the settings will be deleted. If there are no settings for subaccount, they are inherited from aggregator.
        effectiveAllowAvailabilityUpdates:
          description: Output only. The effective value of allow_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
          type: boolean
        effectiveAllowConditionUpdates:
          description: Output only. The effective value of allow_condition_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
          type: boolean
        effectiveAllowPriceUpdates:
          description: Output only. The effective value of allow_price_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
          type: boolean
        effectiveAllowStrictAvailabilityUpdates:
          description: Output only. The effective value of allow_strict_availability_updates. If account_item_updates_settings is present, then this value is the same. Otherwise, it represents the inherited value of the parent account. Read-only.
          readOnly: true
          type: boolean
      type: object
    AccountItemUpdatesSettings:
      description: Settings for the Automatic Item Updates.
      properties:
        allowAvailabilityUpdates:
          description: If availability updates are enabled, any previous availability values get overwritten if Google finds an out-of-stock annotation on the offer's page. If additionally `allow_availability_updates` field is set to true, values get overwritten if Google finds an in-stock annotation on the offer’s page.
          type: boolean
        allowConditionUpdates:
          description: If condition updates are enabled, Google always updates item condition with the condition detected from the details of your product.
          type: boolean
        allowPriceUpdates:
          description: If price updates are enabled, Google always updates the active price with the crawled information.
          type: boolean
        allowStrictAvailabilityUpdates:
          description: If allow_availability_updates is enabled, items are automatically updated in all your Shopping target countries. By default, availability updates will only be applied to items that are 'out of stock' on your website but 'in stock' on Shopping. Set this to true to also update items that are 'in stock' on your website, but 'out of stock' on Google Shopping. In order for this field to have an effect, you must also allow availability updates.
          type: boolean
      type: object
    AccountLabel:
      description: Label assigned by CSS domain or CSS group to one of its sub-accounts.
      properties:
        accountId:
          description: Immutable. The ID of account this label belongs to.
          format: int64
          type: string
        description:
          description: The description of this label.
          type: string
        labelId:
          description: Output only. The ID of the label.
          format: int64
          readOnly: true
          type: string
        labelType:
          description: Output only. The type of this label.
          enum:
            - LABEL_TYPE_UNSPECIFIED
            - MANUAL
            - AUTOMATIC
          readOnly: true
          type: string
        name:
          description: The display name of this label.
          type: string
      type: object
    AccountReturnCarrier:
      description: " The return carrier information. This service is designed for merchants enrolled in the Buy on Google program. "
      properties:
        carrierAccountId:
          description: Output only. Immutable. The Google-provided unique carrier ID, used to update the resource.
          format: int64
          readOnly: true
          type: string
        carrierAccountName:
          description: Name of the carrier account.
          type: string
        carrierAccountNumber:
          description: Number of the carrier account.
          type: string
        carrierCode:
          description: The carrier code enum. Accepts the values FEDEX or UPS.
          enum:
            - CARRIER_CODE_UNSPECIFIED
            - FEDEX
            - UPS
          type: string
      type: object
    AccountShippingImprovements:
      description: "Not available for MCAs [accounts](https://support.google.com/merchants/answer/188487). By turning on [automatic shipping improvements](https://support.google.com/merchants/answer/10027038), you are allowing Google to improve the accuracy of your delivery times shown to shoppers using Google. More accurate delivery times, especially when faster, typically lead to better conversion rates. Google will improve your estimated delivery times based on various factors: * Delivery address of an order * Current handling time and shipping time settings * Estimated weekdays or business days * Parcel tracking data"
      properties:
        allowShippingImprovements:
          description: Enables automatic shipping improvements.
          type: boolean
      type: object
    AccountStatus:
      description: The status of an account, that is, information about its products, which is computed offline and not returned immediately at insertion time.
      properties:
        accountId:
          description: The ID of the account for which the status is reported.
          type: string
        accountLevelIssues:
          description: A list of account level issues.
          items:
            $ref: "#/components/schemas/AccountStatusAccountLevelIssue"
          type: array
        accountManagement:
          description: 'How the account is managed. Acceptable values are: - "`manual`" - "`automatic`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountStatus`"'
          type: string
        products:
          description: List of product-related data by channel, destination, and country. Data in this field may be delayed by up to 30 minutes.
          items:
            $ref: "#/components/schemas/AccountStatusProducts"
          type: array
        websiteClaimed:
          description: Whether the account's website is claimed or not.
          type: boolean
      type: object
    AccountStatusAccountLevelIssue:
      properties:
        country:
          description: Country for which this issue is reported.
          type: string
        destination:
          description: The destination the issue applies to. If this field is empty then the issue applies to all available destinations.
          type: string
        detail:
          description: Additional details about the issue.
          type: string
        documentation:
          description: The URL of a web page to help resolving this issue.
          type: string
        id:
          description: Issue identifier.
          type: string
        severity:
          description: 'Severity of the issue. Acceptable values are: - "`critical`" - "`error`" - "`suggestion`" '
          type: string
        title:
          description: Short description of the issue.
          type: string
      type: object
    AccountStatusItemLevelIssue:
      properties:
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        numItems:
          description: Number of items with this issue.
          format: int64
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
      type: object
    AccountStatusProducts:
      properties:
        channel:
          description: 'The channel the data applies to. Acceptable values are: - "`local`" - "`online`" '
          type: string
        country:
          description: The country the data applies to.
          type: string
        destination:
          description: The destination the data applies to.
          type: string
        itemLevelIssues:
          description: List of item-level issues.
          items:
            $ref: "#/components/schemas/AccountStatusItemLevelIssue"
          type: array
        statistics:
          $ref: "#/components/schemas/AccountStatusStatistics"
          description: Aggregated product statistics.
      type: object
    AccountStatusStatistics:
      properties:
        active:
          description: Number of active offers.
          format: int64
          type: string
        disapproved:
          description: Number of disapproved offers.
          format: int64
          type: string
        expiring:
          description: Number of expiring offers.
          format: int64
          type: string
        pending:
          description: Number of pending offers.
          format: int64
          type: string
      type: object
    AccountTax:
      description: The tax settings of a merchant account. All methods require the admin role.
      properties:
        accountId:
          description: Required. The ID of the account to which these account tax settings belong.
          format: uint64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountTax`".'
          type: string
        rules:
          description: Tax rules. Updating the tax rules will enable "US" taxes (not reversible). Defining no rules is equivalent to not charging tax at all.
          items:
            $ref: "#/components/schemas/AccountTaxTaxRule"
          type: array
      type: object
    AccountTaxTaxRule:
      description: Tax calculation rule to apply in a state or province (US only).
      properties:
        country:
          description: Country code in which tax is applicable.
          type: string
        locationId:
          description: Required. State (or province) is which the tax is applicable, described by its location ID (also called criteria ID).
          format: uint64
          type: string
        ratePercent:
          description: Explicit tax rate in percent, represented as a floating point number without the percentage character. Must not be negative.
          type: string
        shippingTaxed:
          description: If true, shipping charges are also taxed.
          type: boolean
        useGlobalRate:
          description: Whether the tax rate is taken from a global tax table or specified explicitly.
          type: boolean
      type: object
    AccountUser:
      properties:
        admin:
          description: Whether user is an admin.
          type: boolean
        emailAddress:
          description: User's email address.
          type: string
        orderManager:
          description: Whether user is an order manager.
          type: boolean
        paymentsAnalyst:
          description: Whether user can access payment statements.
          type: boolean
        paymentsManager:
          description: Whether user can manage payment settings.
          type: boolean
        reportingManager:
          description: Whether user is a reporting manager.
          type: boolean
      type: object
    AccountYouTubeChannelLink:
      properties:
        channelId:
          description: Channel ID.
          type: string
        status:
          description: "Status of the link between this Merchant Center account and the YouTube channel. Upon retrieval, it represents the actual status of the link and can be either `active` if it was approved in YT Creator Studio or `pending` if it's pending approval. Upon insertion, it represents the *intended* status of the link. Re-uploading a link with status `active` when it's still pending or with status `pending` when it's already active will have no effect: the status will remain unchanged. Re-uploading a link with deprecated status `inactive` is equivalent to not submitting the link at all and will delete the link if it was active or cancel the link request if it was pending."
          type: string
      type: object
    AccountsAuthInfoResponse:
      properties:
        accountIdentifiers:
          description: "The account identifiers corresponding to the authenticated user. - For an individual account: only the merchant ID is defined - For an aggregator: only the aggregator ID is defined - For a subaccount of an MCA: both the merchant ID and the aggregator ID are defined. "
          items:
            $ref: "#/components/schemas/AccountIdentifier"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsAuthInfoResponse`".'
          type: string
      type: object
    AccountsClaimWebsiteResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsClaimWebsiteResponse`".'
          type: string
      type: object
    AccountsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AccountsCustomBatchRequestEntry"
          type: array
      type: object
    AccountsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounts request.
      properties:
        account:
          $ref: "#/components/schemas/Account"
          description: The account to create or update. Only defined if the method is `insert` or `update`.
        accountId:
          description: The ID of the targeted account. Only defined if the method is not `insert`.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        force:
          description: Whether the account should be deleted if the account has offers. Only applicable if the method is `delete`.
          type: boolean
        labelIds:
          description: Label IDs for the 'updatelabels' request.
          items:
            format: uint64
            type: string
          type: array
        linkRequest:
          $ref: "#/components/schemas/AccountsCustomBatchRequestEntryLinkRequest"
          description: Details about the `link` request.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`claimWebsite`" - "`delete`" - "`get`" - "`insert`" - "`link`" - "`update`" '
          type: string
        overwrite:
          description: Only applicable if the method is `claimwebsite`. Indicates whether or not to take the claim from another account in case there is a conflict.
          type: boolean
        view:
          description: Controls which fields are visible. Only applicable if the method is 'get'.
          type: string
      type: object
    AccountsCustomBatchRequestEntryLinkRequest:
      properties:
        action:
          description: 'Action to perform for this link. The `"request"` action is only available to select merchants. Acceptable values are: - "`approve`" - "`remove`" - "`request`" '
          type: string
        linkType:
          description: 'Type of the link between the two accounts. Acceptable values are: - "`channelPartner`" - "`eCommercePlatform`" - "`paymentServiceProvider`" - "`localProductManager`" '
          type: string
        linkedAccountId:
          description: The ID of the linked account.
          type: string
        services:
          description: 'Provided services. Acceptable values are: - "`shoppingAdsProductManagement`" - "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`" - "`paymentProcessing`" - "`localProductManagement`" '
          items:
            type: string
          type: array
      type: object
    AccountsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AccountsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsCustomBatchResponse`".'
          type: string
      type: object
    AccountsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounts response.
      properties:
        account:
          $ref: "#/components/schemas/Account"
          description: The retrieved, created, or updated account. Not defined if the method was `delete`, `claimwebsite` or `link`.
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsCustomBatchResponseEntry`"'
          type: string
      type: object
    AccountsLinkRequest:
      properties:
        action:
          description: 'Action to perform for this link. The `"request"` action is only available to select merchants. Acceptable values are: - "`approve`" - "`remove`" - "`request`" '
          type: string
        eCommercePlatformLinkInfo:
          $ref: "#/components/schemas/ECommercePlatformLinkInfo"
          description: Additional information required for `eCommercePlatform` link type.
        linkType:
          description: 'Type of the link between the two accounts. Acceptable values are: - "`channelPartner`" - "`eCommercePlatform`" - "`paymentServiceProvider`" '
          type: string
        linkedAccountId:
          description: The ID of the linked account.
          type: string
        paymentServiceProviderLinkInfo:
          $ref: "#/components/schemas/PaymentServiceProviderLinkInfo"
          description: Additional information required for `paymentServiceProvider` link type.
        services:
          description: ' Acceptable values are: - "`shoppingAdsProductManagement`" - "`shoppingActionsProductManagement`" - "`shoppingActionsOrderManagement`" - "`paymentProcessing`" '
          items:
            type: string
          type: array
      type: object
    AccountsLinkResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsLinkResponse`".'
          type: string
      type: object
    AccountsListLinksResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsListLinksResponse`".'
          type: string
        links:
          description: The list of available links.
          items:
            $ref: "#/components/schemas/LinkedAccount"
          type: array
        nextPageToken:
          description: The token for the retrieval of the next page of links.
          type: string
      type: object
    AccountsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of accounts.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Account"
          type: array
      type: object
    AccountsUpdateLabelsRequest:
      properties:
        labelIds:
          description: The IDs of labels that should be assigned to the account.
          items:
            format: uint64
            type: string
          type: array
      type: object
    AccountsUpdateLabelsResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountsUpdateLabelsResponse`".'
          type: string
      type: object
    AccountstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AccountstatusesCustomBatchRequestEntry"
          type: array
      type: object
    AccountstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accountstatuses request.
      properties:
        accountId:
          description: The ID of the (sub-)account whose status to get.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        destinations:
          description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          items:
            type: string
          type: array
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
      type: object
    AccountstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AccountstatusesCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountstatusesCustomBatchResponse`".'
          type: string
      type: object
    AccountstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accountstatuses response.
      properties:
        accountStatus:
          $ref: "#/components/schemas/AccountStatus"
          description: The requested account status. Defined if and only if the request was successful.
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
      type: object
    AccountstatusesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accountstatusesListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AccountStatus"
          type: array
      type: object
    AccounttaxCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/AccounttaxCustomBatchRequestEntry"
          type: array
      type: object
    AccounttaxCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch accounttax request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account tax settings.
          format: uint64
          type: string
        accountTax:
          $ref: "#/components/schemas/AccountTax"
          description: The account tax settings to update. Only defined if the method is `update`.
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`update`" '
          type: string
      type: object
    AccounttaxCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/AccounttaxCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxCustomBatchResponse`".'
          type: string
      type: object
    AccounttaxCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch accounttax response.
      properties:
        accountTax:
          $ref: "#/components/schemas/AccountTax"
          description: The retrieved or updated account tax settings.
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxCustomBatchResponseEntry`"'
          type: string
      type: object
    AccounttaxListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#accounttaxListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of account tax settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/AccountTax"
          type: array
      type: object
    Action:
      description: An actionable step that can be executed to solve the issue.
      properties:
        builtinSimpleAction:
          $ref: "#/components/schemas/BuiltInSimpleAction"
          description: Action implemented and performed in (your) third-party application. The application should point the merchant to the place, where they can access the corresponding functionality or provide instructions, if the specific functionality is not available.
        buttonLabel:
          description: Label of the action button.
          type: string
        externalAction:
          $ref: "#/components/schemas/ExternalAction"
          description: Action that is implemented and performed outside of (your) third-party application. The application needs to redirect the merchant to the external location where they can perform the action.
        isAvailable:
          description: Controlling whether the button is active or disabled. The value is 'false' when the action was already requested or is not available. If the action is not available then a reason will be present. If (your) third-party application shows a disabled button for action that is not available, then it should also show reasons.
          type: boolean
        reasons:
          description: List of reasons why the action is not available. The list of reasons is empty if the action is available. If there is only one reason, it can be displayed next to the disabled button. If there are more reasons, all of them should be displayed, for example in a pop-up dialog.
          items:
            $ref: "#/components/schemas/ActionReason"
          type: array
      type: object
    ActionReason:
      description: A single reason why the action is not available.
      properties:
        action:
          $ref: "#/components/schemas/Action"
          description: Optional. An action that needs to be performed to solve the problem represented by this reason. This action will always be available. Should be rendered as a link or button next to the summarizing message. For example, the review may be available only once merchant configure all required attributes. In such a situation this action can be a link to the form, where they can fill the missing attribute to unblock the main action.
        detail:
          description: Detailed explanation of the reason. Should be displayed as a hint if present.
          type: string
        message:
          description: 'Messages summarizing the reason, why the action is not available. For example: "Review requested on Jan 03. Review requests can take a few days to complete."'
          type: string
      type: object
    ActivateBuyOnGoogleProgramRequest:
      description: Request message for the ActivateProgram method.
      properties: {}
      type: object
    Address:
      properties:
        administrativeArea:
          description: Required. Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        city:
          description: Required. City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
          type: string
        country:
          description: Required. [CLDR country code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml) (for example, "US").
          type: string
        postalCode:
          description: Required. Postal code or ZIP (for example, "94043").
          type: string
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          type: string
      type: object
    AlternateDisputeResolution:
      description: The Alternate Dispute Resolution (ADR) that may be available to merchants in some regions. If present, the link should be shown on the same page as the list of issues.
      properties:
        label:
          description: The label for the alternate dispute resolution link.
          type: string
        uri:
          description: The URL pointing to a page, where merchant can request alternative dispute resolution with an [external body](https://support.google.com/european-union-digital-services-act-redress-options/answer/13535501).
          type: string
      type: object
    Amount:
      properties:
        priceAmount:
          $ref: "#/components/schemas/Price"
          description: "[required] The pre-tax or post-tax price depending on the location of the order."
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: "[required] Tax value."
      type: object
    AttributionSettings:
      description: Represents attribution settings for conversion sources receiving pre-attribution data.
      properties:
        attributionLookbackWindowInDays:
          description: Required. Lookback windows (in days) used for attribution in this source. Supported values are 7, 30, 40.
          format: int32
          type: integer
        attributionModel:
          description: Required. Attribution model.
          enum:
            - ATTRIBUTION_MODEL_UNSPECIFIED
            - CROSS_CHANNEL_LAST_CLICK
            - ADS_PREFERRED_LAST_CLICK
            - CROSS_CHANNEL_DATA_DRIVEN
            - CROSS_CHANNEL_FIRST_CLICK
            - CROSS_CHANNEL_LINEAR
            - CROSS_CHANNEL_POSITION_BASED
            - CROSS_CHANNEL_TIME_DECAY
          type: string
        conversionType:
          description: Immutable. Unordered list. List of different conversion types a conversion event can be classified as. A standard "purchase" type will be automatically created if this list is empty at creation time.
          items:
            $ref: "#/components/schemas/AttributionSettingsConversionType"
          type: array
      type: object
    AttributionSettingsConversionType:
      description: Message representing a types of conversion events
      properties:
        includeInReporting:
          description: Output only. Option indicating if the type should be included in Merchant Center reporting.
          readOnly: true
          type: boolean
        name:
          description: Output only. Conversion event name, as it'll be reported by the client.
          readOnly: true
          type: string
      type: object
    BestSellers:
      description: Fields related to the [Best sellers reports](https://support.google.com/merchants/answer/9488679).
      properties:
        categoryId:
          description: Google product category ID to calculate the ranking for, represented in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436). If a `WHERE` condition on `best_sellers.category_id` is not specified in the query, rankings for all top-level categories are returned.
          format: int64
          type: string
        countryCode:
          description: Country where the ranking is calculated. A `WHERE` condition on `best_sellers.country_code` is required in the query.
          type: string
        previousRank:
          description: Popularity rank in the previous week or month.
          format: int64
          type: string
        previousRelativeDemand:
          description: Estimated demand in relation to the item with the highest popularity rank in the same category and country in the previous week or month.
          enum:
            - RELATIVE_DEMAND_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
          type: string
        rank:
          description: Popularity on Shopping ads and free listings, in the selected category and country, based on the estimated number of units sold.
          format: int64
          type: string
        relativeDemand:
          description: Estimated demand in relation to the item with the highest popularity rank in the same category and country.
          enum:
            - RELATIVE_DEMAND_UNSPECIFIED
            - VERY_LOW
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
          type: string
        relativeDemandChange:
          description: Change in the estimated demand. Whether it rose, sank or remained flat.
          enum:
            - RELATIVE_DEMAND_CHANGE_TYPE_UNSPECIFIED
            - SINKER
            - FLAT
            - RISER
          type: string
        reportDate:
          $ref: "#/components/schemas/Date"
          description: "Report date. The value of this field can only be one of the following: * The first day of the week (Monday) for weekly reports. * The first day of the month for monthly reports. If a `WHERE` condition on `best_sellers.report_date` is not specified in the query, the latest available weekly or monthly report is returned."
        reportGranularity:
          description: Granularity of the report. The ranking can be done over a week or a month timeframe. A `WHERE` condition on `best_sellers.report_granularity` is required in the query.
          enum:
            - REPORT_GRANULARITY_UNSPECIFIED
            - WEEKLY
            - MONTHLY
          type: string
      type: object
    Brand:
      description: Brand fields. Values are only set for fields requested explicitly in the request's search query.
      properties:
        name:
          description: Name of the brand.
          type: string
      type: object
    Breakdown:
      description: A detailed impact breakdown for a group of regions where the impact of the issue on different shopping destinations is the same.
      properties:
        details:
          description: "Human readable, localized description of issue's effect on different targets. Should be rendered as a list. For example: * \"Products not showing in ads\" * \"Products not showing organically\""
          items:
            type: string
          type: array
        regions:
          description: Lists of regions. Should be rendered as a title for this group of details. The full list should be shown to merchant. If the list is too long, it is recommended to make it expandable.
          items:
            $ref: "#/components/schemas/BreakdownRegion"
          type: array
      type: object
    BreakdownRegion:
      description: Region with code and localized name.
      properties:
        code:
          description: The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml)
          type: string
        name:
          description: The localized name of the region. For region with code='001' the value is 'All countries' or the equivalent in other languages.
          type: string
      type: object
    BuiltInSimpleAction:
      description: Action that is implemented and performed in (your) third-party application. Represents various functionality that is expected to be available to merchant and will help them with resolving the issue. The application should point the merchant to the place, where they can access the corresponding functionality. If the functionality is not supported, it is recommended to explain the situation to merchant and provide them with instructions how to solve the issue.
      properties:
        additionalContent:
          $ref: "#/components/schemas/BuiltInSimpleActionAdditionalContent"
          description: Long text from an external source that should be available to the merchant. Present when the type is `SHOW_ADDITIONAL_CONTENT`.
        attributeCode:
          description: The attribute that needs to be updated. Present when the type is `EDIT_ITEM_ATTRIBUTE`. This field contains a code for attribute, represented in snake_case. You can find a list of product's attributes, with their codes [here](https://support.google.com/merchants/answer/7052112).
          type: string
        type:
          description: The type of action that represents a functionality that is expected to be available in third-party application.
          enum:
            - BUILT_IN_SIMPLE_ACTION_TYPE_UNSPECIFIED
            - VERIFY_PHONE
            - CLAIM_WEBSITE
            - ADD_PRODUCTS
            - ADD_CONTACT_INFO
            - LINK_ADS_ACCOUNT
            - ADD_BUSINESS_REGISTRATION_NUMBER
            - EDIT_ITEM_ATTRIBUTE
            - FIX_ACCOUNT_ISSUE
            - SHOW_ADDITIONAL_CONTENT
          type: string
      type: object
    BuiltInSimpleActionAdditionalContent:
      description: Long text from external source.
      properties:
        paragraphs:
          description: Long text organized into paragraphs.
          items:
            type: string
          type: array
        title:
          description: Title of the additional content;
          type: string
      type: object
    BusinessDayConfig:
      properties:
        businessDays:
          description: Regular business days, such as '"monday"'. May not be empty.
          items:
            type: string
          type: array
      type: object
    BuyOnGoogleProgramStatus:
      description: Response message for the GetProgramStatus method.
      properties:
        businessModel:
          description: The business models in which merchant participates.
          items:
            enum:
              - BUSINESS_MODEL_UNSPECIFIED
              - MANUFACTURER
              - IMPORTER
              - RESELLER
              - OTHER
            type: string
          type: array
        customerServicePendingEmail:
          description: The customer service pending email. After verification this field becomes empty.
          type: string
        customerServicePendingPhoneNumber:
          description: The pending phone number specified for BuyOnGoogle program. It might be different than account level phone number. In order to update this field the customer_service_pending_phone_region_code must also be set. After verification this field becomes empty.
          type: string
        customerServicePendingPhoneRegionCode:
          description: Two letter country code for the pending phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes. In order to update this field the customer_service_pending_phone_number must also be set. After verification this field becomes empty.
          type: string
        customerServiceVerifiedEmail:
          description: Output only. The customer service verified email.
          readOnly: true
          type: string
        customerServiceVerifiedPhoneNumber:
          description: Output only. The verified phone number specified for BuyOnGoogle program. It might be different than account level phone number.
          readOnly: true
          type: string
        customerServiceVerifiedPhoneRegionCode:
          description: Output only. Two letter country code for the verified phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
          readOnly: true
          type: string
        onlineSalesChannel:
          description: The channels through which the merchant is selling.
          enum:
            - ONLINE_SALES_CHANNEL_UNSPECIFIED
            - GOOGLE_EXCLUSIVE
            - GOOGLE_AND_OTHER_WEBSITES
          type: string
        participationStage:
          description: Output only. The current participation stage for the program.
          enum:
            - PROGRAM_PARTICIPATION_STAGE_UNSPECIFIED
            - NOT_ELIGIBLE
            - ELIGIBLE
            - ONBOARDING
            - ELIGIBLE_FOR_REVIEW
            - PENDING_REVIEW
            - REVIEW_DISAPPROVED
            - ACTIVE
            - PAUSED
            - DEPRECATED
          readOnly: true
          type: string
      type: object
    CaptureOrderRequest:
      description: Request message for the CaptureOrder method.
      properties: {}
      type: object
    CaptureOrderResponse:
      description: Response message for the CaptureOrder method.
      properties:
        executionStatus:
          description: 'The status of the execution. Only defined if the request was successful. Acceptable values are: * "duplicate" * "executed"'
          enum:
            - EXECUTION_STATUS_UNSPECIFIED
            - EXECUTED
            - DUPLICATE
          type: string
      type: object
    CarrierRate:
      properties:
        carrierName:
          description: Carrier service, such as `"UPS"` or `"Fedex"`. The list of supported carriers can be retrieved through the `getSupportedCarriers` method. Required.
          type: string
        carrierService:
          description: Carrier service, such as `"ground"` or `"2 days"`. The list of supported services for a carrier can be retrieved through the `getSupportedCarriers` method. Required.
          type: string
        flatAdjustment:
          $ref: "#/components/schemas/Price"
          description: 'Additive shipping rate modifier. Can be negative. For example `{ "value": "1", "currency" : "USD" }` adds $1 to the rate, `{ "value": "-3", "currency" : "USD" }` removes $3 from the rate. Optional.'
        name:
          description: Name of the carrier rate. Must be unique per rate group. Required.
          type: string
        originPostalCode:
          description: Shipping origin for this carrier rate. Required.
          type: string
        percentageAdjustment:
          description: Multiplicative shipping rate modifier as a number in decimal notation. Can be negative. For example `"5.4"` increases the rate by 5.4%, `"-3"` decreases the rate by 3%. Optional.
          type: string
      type: object
    CarriersCarrier:
      properties:
        country:
          description: The CLDR country code of the carrier (for example, "US"). Always present.
          type: string
        eddServices:
          description: A list of services supported for EDD (Estimated Delivery Date) calculation. This is the list of valid values for WarehouseBasedDeliveryTime.carrierService.
          items:
            type: string
          type: array
        name:
          description: The name of the carrier (for example, `"UPS"`). Always present.
          type: string
        services:
          description: A list of supported services (for example, `"ground"`) for that carrier. Contains at least one service. This is the list of valid values for CarrierRate.carrierService.
          items:
            type: string
          type: array
      type: object
    CheckoutSettings:
      description: "`CheckoutSettings` for a specific merchant ID."
      properties:
        effectiveEnrollmentState:
          description: Output only. The effective value of enrollment state for a given merchant ID. If account level settings are present then this value will be a copy of the account level settings. Otherwise, it will have the value of the parent account.
          enum:
            - CHECKOUT_ON_MERCHANT_ENROLLMENT_STATE_UNSPECIFIED
            - INACTIVE
            - ENROLLED
            - OPT_OUT
          readOnly: true
          type: string
        effectiveReviewState:
          description: Output only. The effective value of review state for a given merchant ID. If account level settings are present then this value will be a copy of the account level settings. Otherwise, it will have the value of the parent account.
          enum:
            - CHECKOUT_ON_MERCHANT_REVIEW_STATE_UNSPECIFIED
            - IN_REVIEW
            - APPROVED
            - DISAPPROVED
          readOnly: true
          type: string
        effectiveUriSettings:
          $ref: "#/components/schemas/UrlSettings"
          description: The effective value of `url_settings` for a given merchant ID. If account level settings are present then this value will be a copy of the account level settings. Otherwise, it will have the value of the parent account.
        enrollmentState:
          description: Output only. Reflects the merchant enrollment state in `Checkout` feature.
          enum:
            - CHECKOUT_ON_MERCHANT_ENROLLMENT_STATE_UNSPECIFIED
            - INACTIVE
            - ENROLLED
            - OPT_OUT
          readOnly: true
          type: string
        merchantId:
          description: Required. The ID of the account.
          format: int64
          type: string
        reviewState:
          description: "Output only. Reflects the merchant review state in `Checkout` feature. This is set based on the data quality reviews of the URL provided by the merchant. A merchant with enrollment state as `ENROLLED` can be in the following review states: `IN_REVIEW`, `APPROVED` or `DISAPPROVED`. A merchant must be in an enrollment_state of `ENROLLED` before a review can begin for the merchant."
          enum:
            - CHECKOUT_ON_MERCHANT_REVIEW_STATE_UNSPECIFIED
            - IN_REVIEW
            - APPROVED
            - DISAPPROVED
          readOnly: true
          type: string
        uriSettings:
          $ref: "#/components/schemas/UrlSettings"
          description: URL settings for cart or checkout URL.
      type: object
    CloudExportAdditionalProperties:
      description: Product property for the Cloud Retail API. For example, properties for a TV product could be "Screen-Resolution" or "Screen-Size".
      properties:
        boolValue:
          description: Boolean value of the given property. For example for a TV product, "True" or "False" if the screen is UHD.
          type: boolean
        floatValue:
          description: Float values of the given property. For example for a TV product 1.2345. Maximum number of specified values for this field is 400. Values are stored in an arbitrary but consistent order.
          items:
            format: float
            type: number
          type: array
        intValue:
          description: Integer values of the given property. For example, 1080 for a screen resolution of a TV product. Maximum number of specified values for this field is 400. Values are stored in an arbitrary but consistent order.
          items:
            format: int64
            type: string
          type: array
        maxValue:
          description: Maximum float value of the given property. For example for a TV product 100.00.
          format: float
          type: number
        minValue:
          description: Minimum float value of the given property. For example for a TV product 1.00.
          format: float
          type: number
        propertyName:
          description: Name of the given property. For example, "Screen-Resolution" for a TV product. Maximum string size is 256 characters.
          type: string
        textValue:
          description: Text value of the given property. For example, "8K(UHD)" could be a text value for a TV product. Maximum number of specified values for this field is 400. Values are stored in an arbitrary but consistent order. Maximum string size is 256 characters.
          items:
            type: string
          type: array
        unitCode:
          description: Unit of the given property. For example, "Pixels" for a TV product. Maximum string size is 256 bytes.
          type: string
      type: object
    Collection:
      description: The collection message.
      properties:
        customLabel0:
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns. [Custom label](https://support.google.com/merchants/answer/9674217)
          type: string
        customLabel1:
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          type: string
        customLabel2:
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          type: string
        customLabel3:
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          type: string
        customLabel4:
          description: Label that you assign to a collection to help organize bidding and reporting in Shopping campaigns.
          type: string
        featuredProduct:
          description: This identifies one or more products associated with the collection. Used as a lookup to the corresponding product ID in your product feeds. Provide a maximum of 100 featuredProduct (for collections). Provide up to 10 featuredProduct (for Shoppable Images only) with ID and X and Y coordinates. [featured_product attribute](https://support.google.com/merchants/answer/9703736)
          items:
            $ref: "#/components/schemas/CollectionFeaturedProduct"
          type: array
        headline:
          description: Your collection's name. [headline attribute](https://support.google.com/merchants/answer/9673580)
          items:
            type: string
          type: array
        id:
          description: Required. The REST ID of the collection. Content API methods that operate on collections take this as their collectionId parameter. The REST ID for a collection is of the form collectionId. [id attribute](https://support.google.com/merchants/answer/9649290)
          type: string
        imageLink:
          description: The URL of a collection’s image. [image_link attribute](https://support.google.com/merchants/answer/9703236)
          items:
            type: string
          type: array
        language:
          description: The language of a collection and the language of any featured products linked to the collection. [language attribute](https://support.google.com/merchants/answer/9673781)
          type: string
        link:
          description: A collection’s landing page. URL directly linking to your collection's page on your website. [link attribute](https://support.google.com/merchants/answer/9673983)
          type: string
        mobileLink:
          description: A collection’s mobile-optimized landing page when you have a different URL for mobile and desktop traffic. [mobile_link attribute](https://support.google.com/merchants/answer/9646123)
          type: string
        productCountry:
          description: "[product_country attribute](https://support.google.com/merchants/answer/9674155)"
          type: string
      type: object
    CollectionFeaturedProduct:
      description: The message for FeaturedProduct. [FeaturedProduct](https://support.google.com/merchants/answer/9703736)
      properties:
        offerId:
          description: The unique identifier for the product item.
          type: string
        x:
          description: Required. X-coordinate of the product callout on the Shoppable Image.
          format: float
          type: number
        y:
          description: Required. Y-coordinate of the product callout on the Shoppable Image.
          format: float
          type: number
      type: object
    CollectionStatus:
      description: The collectionstatus message.
      properties:
        collectionLevelIssuses:
          description: A list of all issues associated with the collection.
          items:
            $ref: "#/components/schemas/CollectionStatusItemLevelIssue"
          type: array
        creationDate:
          description: 'Date on which the collection has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
          type: string
        destinationStatuses:
          description: The intended destinations for the collection.
          items:
            $ref: "#/components/schemas/CollectionStatusDestinationStatus"
          type: array
        id:
          description: Required. The ID of the collection for which status is reported.
          type: string
        lastUpdateDate:
          description: 'Date on which the collection has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
          type: string
      type: object
    CollectionStatusDestinationStatus:
      description: Destination status message.
      properties:
        approvedCountries:
          description: Country codes (ISO 3166-1 alpha-2) where the collection is approved.
          items:
            type: string
          type: array
        destination:
          description: The name of the destination
          type: string
        disapprovedCountries:
          description: Country codes (ISO 3166-1 alpha-2) where the collection is disapproved.
          items:
            type: string
          type: array
        pendingCountries:
          description: Country codes (ISO 3166-1 alpha-2) where the collection is pending approval.
          items:
            type: string
          type: array
        status:
          description: The status for the specified destination in the collections target country.
          type: string
      type: object
    CollectionStatusItemLevelIssue:
      description: Issue associated with the collection.
      properties:
        applicableCountries:
          description: Country codes (ISO 3166-1 alpha-2) where issue applies to the offer.
          items:
            type: string
          type: array
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects the serving of the collection.
          type: string
      type: object
    CompetitiveVisibility:
      description: Fields related to [competitive visibility reports] (https://support.google.com/merchants/answer/11366442).
      properties:
        adsOrganicRatio:
          description: "[Ads / organic ratio] (https://support.google.com/merchants/answer/11366442#zippy=%2Cadsfree-ratio) shows how often a merchant receives impressions from Shopping ads compared to organic traffic. The number is rounded and bucketed. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause."
          format: double
          type: number
        categoryBenchmarkVisibilityTrend:
          description: Change in visibility based on impressions with respect to the start of the selected time range (or first day with non-zero impressions) for a combined set of merchants with highest visibility approximating the market. Available only in `CompetitiveVisibilityBenchmarkView`. Cannot be filtered on in the 'WHERE' clause.
          format: double
          type: number
        categoryId:
          description: Google product category ID to calculate the report for, represented in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436). Required in the `SELECT` clause. A `WHERE` condition on `competitive_visibility.category_id` is required in the query.
          format: int64
          type: string
        countryCode:
          description: The country where impression appeared. Required in the `SELECT` clause. A `WHERE` condition on `competitive_visibility.country_code` is required in the query.
          type: string
        date:
          $ref: "#/components/schemas/Date"
          description: Date of this row. Available only in `CompetitiveVisibilityBenchmarkView` and `CompetitiveVisibilityCompetitorView`. Required in the `SELECT` clause for `CompetitiveVisibilityMarketBenchmarkView`.
        domain:
          description: Domain of your competitor or your domain, if 'is_your_domain' is true. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Required in the `SELECT` clause for `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
          type: string
        higherPositionRate:
          description: Higher position rate shows how often a competitor’s offer got placed in a higher position on the page than your offer. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
          format: double
          type: number
        isYourDomain:
          description: True if this row contains data for your domain. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
          type: boolean
        pageOverlapRate:
          description: Page overlap rate describes how frequently competing retailers’ offers are shown together with your offers on the same page. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
          format: double
          type: number
        rank:
          description: Position of the domain in the top merchants ranking for the selected keys (`date`, `category_id`, `country_code`, `listing_type`) based on impressions. 1 is the highest. Available only in `CompetitiveVisibilityTopMerchantView` and `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
          format: uint64
          type: string
        relativeVisibility:
          description: Relative visibility shows how often your competitors’ offers are shown compared to your offers. In other words, this is the number of displayed impressions of a competitor retailer divided by the number of your displayed impressions during a selected time range for a selected product category and country. Available only in `CompetitiveVisibilityCompetitorView`. Cannot be filtered on in the 'WHERE' clause.
          format: double
          type: number
        trafficSource:
          description: Type of impression listing. Required in the `SELECT` clause. Cannot be filtered on in the 'WHERE' clause.
          enum:
            - UNKNOWN
            - ORGANIC
            - ADS
            - ALL
          type: string
        yourDomainVisibilityTrend:
          description: Change in visibility based on impressions for your domain with respect to the start of the selected time range (or first day with non-zero impressions). Available only in `CompetitiveVisibilityBenchmarkView`. Cannot be filtered on in the 'WHERE' clause.
          format: double
          type: number
      type: object
    ConversionSource:
      description: Represents a conversion source owned by a Merchant account. A merchant account can have up to 200 conversion sources.
      properties:
        conversionSourceId:
          description: "Output only. Generated by the Content API upon creation of a new `ConversionSource`. Format: [a-z]{4}:.+ The four characters before the colon represent the type of conversio source. Content after the colon represents the ID of the conversion source within that type. The ID of two different conversion sources might be the same across different types. The following type prefixes are supported: - galk: For GoogleAnalyticsLink sources. - mcdn: For MerchantCenterDestination sources."
          readOnly: true
          type: string
        expireTime:
          description: Output only. The time when an archived conversion source becomes permanently deleted and is no longer available to undelete.
          format: google-datetime
          readOnly: true
          type: string
        googleAnalyticsLink:
          $ref: "#/components/schemas/GoogleAnalyticsLink"
          description: Immutable. Conversion Source of type "Link to Google Analytics Property".
        merchantCenterDestination:
          $ref: "#/components/schemas/MerchantCenterDestination"
          description: Conversion Source of type "Merchant Center Tag Destination".
        state:
          description: Output only. Current state of this conversion source. Can't be edited through the API.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - ARCHIVED
            - PENDING
          readOnly: true
          type: string
      type: object
    Css:
      description: Information about CSS domain.
      properties:
        cssDomainId:
          description: Output only. Immutable. The CSS domain ID.
          format: int64
          readOnly: true
          type: string
        cssGroupId:
          description: Output only. Immutable. The ID of the CSS group this CSS domain is affiliated with. Only populated for CSS group users.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: Output only. Immutable. The CSS domain's display name, used when space is constrained.
          readOnly: true
          type: string
        fullName:
          description: Output only. Immutable. The CSS domain's full name.
          readOnly: true
          type: string
        homepageUri:
          description: Output only. Immutable. The CSS domain's homepage.
          readOnly: true
          type: string
        labelIds:
          description: A list of label IDs that are assigned to this CSS domain by its CSS group. Only populated for CSS group users.
          items:
            format: int64
            type: string
          type: array
      type: object
    CustomAttribute:
      description: A message that represents custom attributes. Exactly one of `value` or `groupValues` must be provided. Maximum allowed number of characters for each custom attribute is 10240 (represents sum of characters for name and value). Maximum 2500 custom attributes can be set per merchant, with total size of 102.4kB.
      properties:
        groupValues:
          description: Subattributes within this attribute group. Exactly one of value or groupValues must be provided.
          items:
            $ref: "#/components/schemas/CustomAttribute"
          type: array
        name:
          description: The name of the attribute. Underscores will be replaced by spaces upon insertion.
          type: string
        value:
          description: The value of the attribute.
          type: string
      type: object
    CustomerReturnReason:
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          description: 'Code of the return reason. Acceptable values are: - "`betterPriceFound`" - "`changedMind`" - "`damagedOrDefectiveItem`" - "`didNotMatchDescription`" - "`doesNotFit`" - "`expiredItem`" - "`incorrectItemReceived`" - "`noLongerNeeded`" - "`notSpecified`" - "`orderedWrongItem`" - "`other`" - "`qualityNotExpected`" - "`receivedTooLate`" - "`undeliverable`" '
          type: string
      type: object
    CutoffTime:
      properties:
        hour:
          description: Hour of the cutoff time until which an order has to be placed to be processed in the same day. Required.
          format: uint32
          type: integer
        minute:
          description: Minute of the cutoff time until which an order has to be placed to be processed in the same day. Required.
          format: uint32
          type: integer
        timezone:
          description: Timezone identifier for the cutoff time (for example, "Europe/Zurich"). List of identifiers. Required.
          type: string
      type: object
    Datafeed:
      description: Datafeed configuration data.
      properties:
        attributeLanguage:
          description: The two-letter ISO 639-1 language in which the attributes are defined in the data feed.
          type: string
        contentType:
          description: 'Required. The type of data feed. For product inventory feeds, only feeds for local stores, not online stores, are supported. Acceptable values are: - "`local products`" - "`product inventory`" - "`products`" '
          type: string
        fetchSchedule:
          $ref: "#/components/schemas/DatafeedFetchSchedule"
          description: Fetch schedule for the feed file.
        fileName:
          description: Required. The filename of the feed. All feeds must have a unique file name.
          type: string
        format:
          $ref: "#/components/schemas/DatafeedFormat"
          description: Format of the feed file.
        id:
          description: Required for update. The ID of the data feed.
          format: int64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeed`"'
          type: string
        name:
          description: Required for insert. A descriptive name of the data feed.
          type: string
        targets:
          description: The targets this feed should apply to (country, language, destinations).
          items:
            $ref: "#/components/schemas/DatafeedTarget"
          type: array
      type: object
    DatafeedFetchSchedule:
      description: The required fields vary based on the frequency of fetching. For a monthly fetch schedule, day_of_month and hour are required. For a weekly fetch schedule, weekday and hour are required. For a daily fetch schedule, only hour is required.
      properties:
        dayOfMonth:
          description: The day of the month the feed file should be fetched (1-31).
          format: uint32
          type: integer
        fetchUrl:
          description: The URL where the feed file can be fetched. Google Merchant Center will support automatic scheduled uploads using the HTTP, HTTPS, FTP, or SFTP protocols, so the value will need to be a valid link using one of those four protocols.
          type: string
        hour:
          description: The hour of the day the feed file should be fetched (0-23).
          format: uint32
          type: integer
        minuteOfHour:
          description: The minute of the hour the feed file should be fetched (0-59). Read-only.
          format: uint32
          type: integer
        password:
          description: An optional password for fetch_url.
          type: string
        paused:
          description: Whether the scheduled fetch is paused or not.
          type: boolean
        timeZone:
          description: Time zone used for schedule. UTC by default. For example, "America/Los_Angeles".
          type: string
        username:
          description: An optional user name for fetch_url.
          type: string
        weekday:
          description: 'The day of the week the feed file should be fetched. Acceptable values are: - "`monday`" - "`tuesday`" - "`wednesday`" - "`thursday`" - "`friday`" - "`saturday`" - "`sunday`" '
          type: string
      type: object
    DatafeedFormat:
      properties:
        columnDelimiter:
          description: 'Delimiter for the separation of values in a delimiter-separated values feed. If not specified, the delimiter will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`pipe`" - "`tab`" - "`tilde`" '
          type: string
        fileEncoding:
          description: 'Character encoding scheme of the data feed. If not specified, the encoding will be auto-detected. Acceptable values are: - "`latin-1`" - "`utf-16be`" - "`utf-16le`" - "`utf-8`" - "`windows-1252`" '
          type: string
        quotingMode:
          description: 'Specifies how double quotes are interpreted. If not specified, the mode will be auto-detected. Ignored for non-DSV data feeds. Acceptable values are: - "`normal character`" - "`value quoting`" '
          type: string
      type: object
    DatafeedStatus:
      description: The status of a datafeed, that is, the result of the last retrieval of the datafeed computed asynchronously when the feed processing is finished.
      properties:
        country:
          description: The country for which the status is reported, represented as a CLDR territory code.
          type: string
        datafeedId:
          description: The ID of the feed for which the status is reported.
          format: uint64
          type: string
        errors:
          description: The list of errors occurring in the feed.
          items:
            $ref: "#/components/schemas/DatafeedStatusError"
          type: array
        feedLabel:
          description: The feed label status is reported for.
          type: string
        itemsTotal:
          description: The number of items in the feed that were processed.
          format: uint64
          type: string
        itemsValid:
          description: The number of items in the feed that were valid.
          format: uint64
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedStatus`"'
          type: string
        language:
          description: The two-letter ISO 639-1 language for which the status is reported.
          type: string
        lastUploadDate:
          description: The last date at which the feed was uploaded.
          type: string
        processingStatus:
          description: 'The processing status of the feed. Acceptable values are: - "`"`failure`": The feed could not be processed or all items had errors.`" - "`in progress`": The feed is being processed. - "`none`": The feed has not yet been processed. For example, a feed that has never been uploaded will have this processing status. - "`success`": The feed was processed successfully, though some items might have had errors. '
          type: string
        warnings:
          description: The list of errors occurring in the feed.
          items:
            $ref: "#/components/schemas/DatafeedStatusError"
          type: array
      type: object
    DatafeedStatusError:
      description: An error occurring in the feed, like "invalid price".
      properties:
        code:
          description: The code of the error, for example, "validation/invalid_value".
          type: string
        count:
          description: The number of occurrences of the error in the feed.
          format: uint64
          type: string
        examples:
          description: A list of example occurrences of the error, grouped by product.
          items:
            $ref: "#/components/schemas/DatafeedStatusExample"
          type: array
        message:
          description: The error message, for example, "Invalid price".
          type: string
      type: object
    DatafeedStatusExample:
      description: An example occurrence for a particular error.
      properties:
        itemId:
          description: The ID of the example item.
          type: string
        lineNumber:
          description: Line number in the data feed where the example is found.
          format: uint64
          type: string
        value:
          description: The problematic value.
          type: string
      type: object
    DatafeedTarget:
      properties:
        country:
          description: Deprecated. Use `feedLabel` instead. The country where the items in the feed will be included in the search index, represented as a CLDR territory code.
          type: string
        excludedDestinations:
          description: The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.
          items:
            type: string
          type: array
        feedLabel:
          description: Feed label for the DatafeedTarget. Either `country` or `feedLabel` is required. If both `feedLabel` and `country` is specified, the values must match. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-).
          type: string
        includedDestinations:
          description: The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.
          items:
            type: string
          type: array
        language:
          description: The two-letter ISO 639-1 language of the items in the feed. Must be a valid language for `targets[].country`.
          type: string
        targetCountries:
          description: The countries where the items may be displayed. Represented as a CLDR territory code. Will be ignored for "product inventory" feeds.
          items:
            type: string
          type: array
      type: object
    DatafeedsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/DatafeedsCustomBatchRequestEntry"
          type: array
      type: object
    DatafeedsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeeds request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        datafeed:
          $ref: "#/components/schemas/Datafeed"
          description: The data feed to insert.
        datafeedId:
          description: The ID of the data feed to get, delete or fetch.
          format: uint64
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`fetchNow`" - "`get`" - "`insert`" - "`update`" '
          type: string
      type: object
    DatafeedsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/DatafeedsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedsCustomBatchResponse`".'
          type: string
      type: object
    DatafeedsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeeds response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeed:
          $ref: "#/components/schemas/Datafeed"
          description: The requested data feed. Defined if and only if the request was successful.
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
      type: object
    DatafeedsFetchNowResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedsFetchNowResponse`".'
          type: string
      type: object
    DatafeedsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeeds.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Datafeed"
          type: array
      type: object
    DatafeedstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/DatafeedstatusesCustomBatchRequestEntry"
          type: array
      type: object
    DatafeedstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        country:
          description: Deprecated. Use `feedLabel` instead. The country to get the datafeed status for. If this parameter is provided, then `language` must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        datafeedId:
          description: The ID of the data feed to get.
          format: uint64
          type: string
        feedLabel:
          description: The feed label to get the datafeed status for. If this parameter is provided, then `language` must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        language:
          description: The language to get the datafeed status for. If this parameter is provided then `country` must also be provided. Note that for multi-target datafeeds this parameter is required.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
      type: object
    DatafeedstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/DatafeedstatusesCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedstatusesCustomBatchResponse`".'
          type: string
      type: object
    DatafeedstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch datafeedstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        datafeedStatus:
          $ref: "#/components/schemas/DatafeedStatus"
          description: The requested data feed status. Defined if and only if the request was successful.
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
      type: object
    DatafeedstatusesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#datafeedstatusesListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of datafeed statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/DatafeedStatus"
          type: array
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DateTime:
      description: "Represents civil time (or occasionally physical time). This type can represent a civil time in one of a few possible ways: * When utc_offset is set and time_zone is unset: a civil time on a calendar day with a particular offset from UTC. * When time_zone is set and utc_offset is unset: a civil time on a calendar day in a particular time zone. * When neither time_zone nor utc_offset is set: a civil time on a calendar day in local time. The date is relative to the Proleptic Gregorian Calendar. If year, month, or day are 0, the DateTime is considered not to have a specific year, month, or day respectively. This type may also be used to represent a physical time if all the date and time fields are set and either case of the `time_offset` oneof is set. Consider using `Timestamp` message for physical time instead. If your use case also would like to store the user's timezone, that can be done in another field. This type is more flexible than some applications may want. Make sure to document and validate your application's limitations."
      properties:
        day:
          description: Optional. Day of month. Must be from 1 to 31 and valid for the year and month, or 0 if specifying a datetime without a day.
          format: int32
          type: integer
        hours:
          description: Optional. Hours of day in 24 hour format. Should be from 0 to 23, defaults to 0 (midnight). An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Optional. Minutes of hour of day. Must be from 0 to 59, defaults to 0.
          format: int32
          type: integer
        month:
          description: Optional. Month of year. Must be from 1 to 12, or 0 if specifying a datetime without a month.
          format: int32
          type: integer
        nanos:
          description: Optional. Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999, defaults to 0.
          format: int32
          type: integer
        seconds:
          description: Optional. Seconds of minutes of the time. Must normally be from 0 to 59, defaults to 0. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
        timeZone:
          $ref: "#/components/schemas/TimeZone"
          description: Time zone.
        utcOffset:
          description: "UTC offset. Must be whole seconds, between -18 hours and +18 hours. For example, a UTC offset of -4:00 would be represented as { seconds: -14400 }."
          format: google-duration
          type: string
        year:
          description: Optional. Year of date. Must be from 1 to 9999, or 0 if specifying a datetime without a year.
          format: int32
          type: integer
      type: object
    DeliveryArea:
      description: A delivery area for the product. Only one of `countryCode` or `postalCodeRange` must be set.
      properties:
        countryCode:
          description: Required. The country that the product can be delivered to. Submit a [unicode CLDR region](http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) such as `US` or `CH`.
          type: string
        postalCodeRange:
          $ref: "#/components/schemas/DeliveryAreaPostalCodeRange"
          description: A postal code, postal code range or postal code prefix that defines this area. Limited to US and AUS.
        regionCode:
          description: A state, territory, or prefecture. This is supported for the United States, Australia, and Japan. Provide a subdivision code from the ISO 3166-2 code tables ([US](https://en.wikipedia.org/wiki/ISO_3166-2:US), [AU](https://en.wikipedia.org/wiki/ISO_3166-2:AU), or [JP](https://en.wikipedia.org/wiki/ISO_3166-2:JP)) without country prefix (for example, `"NY"`, `"NSW"`, `"03"`).
          type: string
      type: object
    DeliveryAreaPostalCodeRange:
      description: A range of postal codes that defines the delivery area. Only set `firstPostalCode` when specifying a single postal code.
      properties:
        firstPostalCode:
          description: 'Required. A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: `"94108"`, `"9410*"`, `"9*"`.'
          type: string
        lastPostalCode:
          description: "A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area (for example [070* - 078*] results in the range [07000 - 07899]). It must have the same length as `firstPostalCode`: if `firstPostalCode` is a postal code then `lastPostalCode` must be a postal code too; if firstPostalCode is a pattern then `lastPostalCode` must be a pattern with the same prefix length. Ignored if not set, then the area is defined as being all the postal codes matching `firstPostalCode`."
          type: string
      type: object
    DeliveryTime:
      properties:
        cutoffTime:
          $ref: "#/components/schemas/CutoffTime"
          description: Business days cutoff time definition. If not configured, the cutoff time will be defaulted to 8AM PST. If local delivery, use Service.StoreConfig.CutoffConfig.
        handlingBusinessDayConfig:
          $ref: "#/components/schemas/BusinessDayConfig"
          description: The business days during which orders can be handled. If not provided, Monday to Friday business days will be assumed.
        holidayCutoffs:
          description: Holiday cutoff definitions. If configured, they specify order cutoff times for holiday-specific shipping.
          items:
            $ref: "#/components/schemas/HolidayCutoff"
          type: array
        maxHandlingTimeInDays:
          description: Maximum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped. Must be greater than or equal to `minHandlingTimeInDays`.
          format: uint32
          type: integer
        maxTransitTimeInDays:
          description: Maximum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Must be greater than or equal to `minTransitTimeInDays`.
          format: uint32
          type: integer
        minHandlingTimeInDays:
          description: Minimum number of business days spent before an order is shipped. 0 means same day shipped, 1 means next day shipped.
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: Minimum number of business days that are spent in transit. 0 means same day delivery, 1 means next day delivery. Either `{min,max}TransitTimeInDays` or `transitTimeTable` must be set, but not both.
          format: uint32
          type: integer
        transitBusinessDayConfig:
          $ref: "#/components/schemas/BusinessDayConfig"
          description: The business days during which orders can be in-transit. If not provided, Monday to Friday business days will be assumed.
        transitTimeTable:
          $ref: "#/components/schemas/TransitTable"
          description: Transit time table, number of business days spent in transit based on row and column dimensions. Either `{min,max}TransitTimeInDays` or `transitTimeTable` can be set, but not both.
        warehouseBasedDeliveryTimes:
          description: Indicates that the delivery time should be calculated per warehouse (shipping origin location) based on the settings of the selected carrier. When set, no other transit time related field in DeliveryTime should be set.
          items:
            $ref: "#/components/schemas/WarehouseBasedDeliveryTime"
          type: array
      type: object
    Distance:
      description: Distance represented by an integer and unit.
      properties:
        unit:
          description: The distance unit. Acceptable values are `None`, `Miles`, and `Kilometers`.
          type: string
        value:
          description: The distance represented as a number.
          format: int64
          type: string
      type: object
    ECommercePlatformLinkInfo:
      description: Additional information required for E_COMMERCE_PLATFORM link type.
      properties:
        externalAccountId:
          description: The id used by the third party service provider to identify the merchant.
          type: string
      type: object
    Error:
      description: An error returned by the API.
      properties:
        domain:
          description: The domain of the error.
          type: string
        message:
          description: A description of the error.
          type: string
        reason:
          description: The error code.
          type: string
      type: object
    Errors:
      description: A list of errors returned by a failed batch entry.
      properties:
        code:
          description: The HTTP status of the first error in `errors`.
          format: uint32
          type: integer
        errors:
          description: A list of errors.
          items:
            $ref: "#/components/schemas/Error"
          type: array
        message:
          description: The message of the first error in `errors`.
          type: string
      type: object
    ExternalAction:
      description: Action that is implemented and performed outside of the third-party application. It should redirect the merchant to the provided URL of an external system where they can perform the action. For example to request a review in the Merchant Center.
      properties:
        type:
          description: The type of external action.
          enum:
            - EXTERNAL_ACTION_TYPE_UNSPECIFIED
            - REVIEW_PRODUCT_ISSUE_IN_MERCHANT_CENTER
            - REVIEW_ACCOUNT_ISSUE_IN_MERCHANT_CENTER
            - LEGAL_APPEAL_IN_HELP_CENTER
            - VERIFY_IDENTITY_IN_MERCHANT_CENTER
          type: string
        uri:
          description: URL to external system, for example Merchant Center, where the merchant can perform the action.
          type: string
      type: object
    FreeListingsProgramStatus:
      description: Response message for GetFreeListingsProgramStatus.
      properties:
        globalState:
          description: State of the program. `ENABLED` if there are offers for at least one region.
          enum:
            - PROGRAM_STATE_UNSPECIFIED
            - NOT_ENABLED
            - NO_OFFERS_UPLOADED
            - ENABLED
          type: string
        regionStatuses:
          description: Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.
          items:
            $ref: "#/components/schemas/FreeListingsProgramStatusRegionStatus"
          type: array
      type: object
    FreeListingsProgramStatusRegionStatus:
      description: Status of program and region.
      properties:
        disapprovalDate:
          description: "Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`."
          type: string
        eligibilityStatus:
          description: Eligibility status of the standard free listing program.
          enum:
            - STATE_UNSPECIFIED
            - APPROVED
            - DISAPPROVED
            - WARNING
            - UNDER_REVIEW
            - PENDING_REVIEW
            - ONBOARDING
          type: string
        onboardingIssues:
          description: Issues that must be fixed to be eligible for review.
          items:
            type: string
          type: array
        regionCodes:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
          items:
            type: string
          type: array
        reviewEligibilityStatus:
          description: If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
          enum:
            - REVIEW_ELIGIBILITY_UNSPECIFIED
            - ELIGIBLE
            - INELIGIBLE
          type: string
        reviewIneligibilityReason:
          description: Review ineligibility reason if account is not eligible for review.
          enum:
            - REVIEW_INELIGIBILITY_REASON_UNSPECIFIED
            - ONBOARDING_ISSUES
            - NOT_ENOUGH_OFFERS
            - IN_COOLDOWN_PERIOD
            - ALREADY_UNDER_REVIEW
            - NO_REVIEW_REQUIRED
            - WILL_BE_REVIEWED_AUTOMATICALLY
            - IS_RETIRED
            - ALREADY_REVIEWED
          type: string
        reviewIneligibilityReasonDescription:
          description: Reason a program in a specific region isn’t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
          type: string
        reviewIneligibilityReasonDetails:
          $ref: "#/components/schemas/FreeListingsProgramStatusReviewIneligibilityReasonDetails"
          description: Additional information for ineligibility. If `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is provided.
        reviewIssues:
          description: Issues evaluated in the review process. Fix all issues before requesting a review.
          items:
            type: string
          type: array
      type: object
    FreeListingsProgramStatusReviewIneligibilityReasonDetails:
      description: Additional details for review ineligibility reasons.
      properties:
        cooldownTime:
          description: This timestamp represents end of cooldown period for review ineligbility reason `IN_COOLDOWN_PERIOD`.
          format: google-datetime
          type: string
      type: object
    GenerateRecommendationsResponse:
      description: Response containing generated recommendations.
      properties:
        recommendations:
          description: Recommendations generated for a request.
          items:
            $ref: "#/components/schemas/Recommendation"
          type: array
        responseToken:
          description: Output only. Response token is a string created for each `GenerateRecommendationsResponse`. This token doesn't expire, and is globally unique. This token must be used when reporting interactions for recommendations.
          readOnly: true
          type: string
      type: object
    GmbAccounts:
      properties:
        accountId:
          description: The ID of the Merchant Center account.
          format: uint64
          type: string
        gmbAccounts:
          description: A list of Business Profiles which are available to the merchant.
          items:
            $ref: "#/components/schemas/GmbAccountsGmbAccount"
          type: array
      type: object
    GmbAccountsGmbAccount:
      properties:
        email:
          description: The email which identifies the Business Profile.
          type: string
        listingCount:
          description: Number of listings under this account.
          format: uint64
          type: string
        name:
          description: The name of the Business Profile.
          type: string
        type:
          description: The type of the Business Profile (User or Business).
          type: string
      type: object
    GoogleAnalyticsLink:
      description: '"Google Analytics Link" sources can be used to get conversion data from an existing Google Analytics property into the linked Merchant Center account.'
      properties:
        attributionSettings:
          $ref: "#/components/schemas/AttributionSettings"
          description: Output only. Attribution settings for the linked Google Analytics property.
          readOnly: true
        propertyId:
          description: Required. Immutable. ID of the Google Analytics property the merchant is linked to.
          format: int64
          type: string
        propertyName:
          description: Output only. Name of the Google Analytics property the merchant is linked to.
          readOnly: true
          type: string
      type: object
    Headers:
      description: A non-empty list of row or column headers for a table. Exactly one of `prices`, `weights`, `numItems`, `postalCodeGroupNames`, or `location` must be set.
      properties:
        locations:
          description: A list of location ID sets. Must be non-empty. Can only be set if all other fields are not set.
          items:
            $ref: "#/components/schemas/LocationIdSet"
          type: array
        numberOfItems:
          description: A list of inclusive number of items upper bounds. The last value can be `"infinity"`. For example `["10", "50", "infinity"]` represents the headers "<= 10 items", "<= 50 items", and "> 50 items". Must be non-empty. Can only be set if all other fields are not set.
          items:
            type: string
          type: array
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be `"all other locations"`. Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal code groups must match the delivery country of the service. Must be non-empty. Can only be set if all other fields are not set.'
          items:
            type: string
          type: array
        prices:
          description: "A list of inclusive order price upper bounds. The last price's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"currency\": \"USD\"}, {\"value\": \"500\", \"currency\": \"USD\"}, {\"value\": \"infinity\", \"currency\": \"USD\"}]` represents the headers \"<= $10\", \"<= $500\", and \"> $500\". All prices within a service must have the same currency. Must be non-empty. Can only be set if all other fields are not set."
          items:
            $ref: "#/components/schemas/Price"
          type: array
        weights:
          description: "A list of inclusive order weight upper bounds. The last weight's value can be `\"infinity\"`. For example `[{\"value\": \"10\", \"unit\": \"kg\"}, {\"value\": \"50\", \"unit\": \"kg\"}, {\"value\": \"infinity\", \"unit\": \"kg\"}]` represents the headers \"<= 10kg\", \"<= 50kg\", and \"> 50kg\". All weights within a service must have the same unit. Must be non-empty. Can only be set if all other fields are not set."
          items:
            $ref: "#/components/schemas/Weight"
          type: array
      type: object
    HolidayCutoff:
      properties:
        deadlineDate:
          description: Date of the order deadline, in ISO 8601 format. For example, "2016-11-29" for 29th November 2016. Required.
          type: string
        deadlineHour:
          description: "Hour of the day on the deadline date until which the order has to be placed to qualify for the delivery guarantee. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Required."
          format: uint32
          type: integer
        deadlineTimezone:
          description: Timezone identifier for the deadline hour (for example, "Europe/Zurich"). List of identifiers. Required.
          type: string
        holidayId:
          description: Unique identifier for the holiday. Required.
          type: string
        visibleFromDate:
          description: Date on which the deadline will become visible to consumers in ISO 8601 format. For example, "2016-10-31" for 31st October 2016. Required.
          type: string
      type: object
    HolidaysHoliday:
      properties:
        countryCode:
          description: The CLDR territory code of the country in which the holiday is available. For example, "US", "DE", "GB". A holiday cutoff can only be configured in a shipping settings service with matching delivery country. Always present.
          type: string
        date:
          description: Date of the holiday, in ISO 8601 format. For example, "2016-12-25" for Christmas 2016. Always present.
          type: string
        deliveryGuaranteeDate:
          description: Date on which the order has to arrive at the customer's, in ISO 8601 format. For example, "2016-12-24" for 24th December 2016. Always present.
          type: string
        deliveryGuaranteeHour:
          description: "Hour of the day in the delivery location's timezone on the guaranteed delivery date by which the order has to arrive at the customer's. Possible values are: 0 (midnight), 1, ..., 12 (noon), 13, ..., 23. Always present."
          format: uint64
          type: string
        id:
          description: Unique identifier for the holiday to be used when configuring holiday cutoffs. Always present.
          type: string
        type:
          description: "The holiday type. Always present. Acceptable values are: - \"`Christmas`\" - \"`Easter`\" - \"`Father's Day`\" - \"`Halloween`\" - \"`Independence Day (USA)`\" - \"`Mother's Day`\" - \"`Thanksgiving`\" - \"`Valentine's Day`\" "
          type: string
      type: object
    InsertCheckoutSettingsRequest:
      description: Request message for the `InsertCheckoutSettings` method.
      properties:
        uriSettings:
          $ref: "#/components/schemas/UrlSettings"
          description: Required. The `UrlSettings` for the request. The presence of URL settings indicates `Checkout` enrollment.
      type: object
    Installment:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
          description: The amount the buyer has to pay per month.
        months:
          description: The number of installments the buyer has to pay.
          format: int64
          type: string
      type: object
    InvoiceSummary:
      properties:
        additionalChargeSummaries:
          description: Summary of the total amounts of the additional charges.
          items:
            $ref: "#/components/schemas/InvoiceSummaryAdditionalChargeSummary"
          type: array
        productTotal:
          $ref: "#/components/schemas/Amount"
          description: "[required] Total price for the product."
      type: object
    InvoiceSummaryAdditionalChargeSummary:
      properties:
        totalAmount:
          $ref: "#/components/schemas/Amount"
          description: "[required] Total additional charge for this type."
        type:
          description: '[required] Type of the additional charge. Acceptable values are: - "`shipping`" '
          type: string
      type: object
    LabelIds:
      description: The IDs of labels that should be assigned to the CSS domain.
      properties:
        labelIds:
          description: The list of label IDs.
          items:
            format: int64
            type: string
          type: array
      type: object
    LiaAboutPageSettings:
      properties:
        status:
          description: 'The status of the verification process for the About page. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
        url:
          description: The URL for the About page.
          type: string
      type: object
    LiaCountrySettings:
      properties:
        about:
          $ref: "#/components/schemas/LiaAboutPageSettings"
          description: The settings for the About page.
        country:
          description: Required. CLDR country code (for example, "US").
          type: string
        hostedLocalStorefrontActive:
          description: The status of the "Merchant hosted local storefront" feature.
          type: boolean
        inventory:
          $ref: "#/components/schemas/LiaInventorySettings"
          description: LIA inventory verification settings.
        omnichannelExperience:
          $ref: "#/components/schemas/LiaOmnichannelExperience"
          description: The omnichannel experience configured for this country.
        onDisplayToOrder:
          $ref: "#/components/schemas/LiaOnDisplayToOrderSettings"
          description: LIA "On Display To Order" settings.
        posDataProvider:
          $ref: "#/components/schemas/LiaPosDataProvider"
          description: The POS data provider linked with this country.
        storePickupActive:
          description: The status of the "Store pickup" feature.
          type: boolean
      type: object
    LiaInventorySettings:
      properties:
        inventoryVerificationContactEmail:
          description: The email of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactName:
          description: The name of the contact for the inventory verification process.
          type: string
        inventoryVerificationContactStatus:
          description: 'The status of the verification contact. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
        status:
          description: 'The status of the inventory verification process. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      type: object
    LiaOmnichannelExperience:
      description: Omnichannel experience details.
      properties:
        country:
          description: The CLDR country code (for example, "US").
          type: string
        lsfType:
          description: 'The Local Store Front (LSF) type for this country. Acceptable values are: - "`ghlsf`" (Google-Hosted Local Store Front) - "`mhlsfBasic`" (Merchant-Hosted Local Store Front Basic) - "`mhlsfFull`" (Merchant-Hosted Local Store Front Full) More details about these types can be found here.'
          type: string
        pickupTypes:
          description: 'The Pickup types for this country. Acceptable values are: - "`pickupToday`" - "`pickupLater`" '
          items:
            type: string
          type: array
      type: object
    LiaOnDisplayToOrderSettings:
      properties:
        shippingCostPolicyUrl:
          description: Shipping cost and policy URL.
          type: string
        status:
          description: 'The status of the ?On display to order? feature. Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      type: object
    LiaPosDataProvider:
      properties:
        posDataProviderId:
          description: The ID of the POS data provider.
          format: uint64
          type: string
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS data provider.
          type: string
      type: object
    LiaSettings:
      description: Local Inventory ads (LIA) settings. All methods except listposdataproviders require the admin role.
      properties:
        accountId:
          description: The ID of the account to which these LIA settings belong. Ignored upon update, always present in get request responses.
          format: uint64
          type: string
        countrySettings:
          description: The LIA settings for each country.
          items:
            $ref: "#/components/schemas/LiaCountrySettings"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liaSettings`"'
          type: string
      type: object
    LiasettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/LiasettingsCustomBatchRequestEntry"
          type: array
      type: object
    LiasettingsCustomBatchRequestEntry:
      properties:
        accountId:
          description: The ID of the account for which to get/update account LIA settings.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        contactEmail:
          description: Inventory validation contact email. Required only for SetInventoryValidationContact.
          type: string
        contactName:
          description: Inventory validation contact name. Required only for SetInventoryValidationContact.
          type: string
        country:
          description: The country code. Required only for RequestInventoryVerification.
          type: string
        gmbEmail:
          description: The Business Profile. Required only for RequestGmbAccess.
          type: string
        liaSettings:
          $ref: "#/components/schemas/LiaSettings"
          description: The account Lia settings to update. Only defined if the method is `update`.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`getAccessibleGmbAccounts`" - "`requestGmbAccess`" - "`requestInventoryVerification`" - "`setInventoryVerificationContact`" - "`update`" '
          type: string
        omnichannelExperience:
          $ref: "#/components/schemas/LiaOmnichannelExperience"
          description: The omnichannel experience for a country. Required only for SetOmnichannelExperience.
        posDataProviderId:
          description: The ID of POS data provider. Required only for SetPosProvider.
          format: uint64
          type: string
        posExternalAccountId:
          description: The account ID by which this merchant is known to the POS provider.
          type: string
      type: object
    LiasettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/LiasettingsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsCustomBatchResponse`".'
          type: string
      type: object
    LiasettingsCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors defined if, and only if, the request failed.
        gmbAccounts:
          $ref: "#/components/schemas/GmbAccounts"
          description: The list of accessible Business Profiles.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsCustomBatchResponseEntry`"'
          type: string
        liaSettings:
          $ref: "#/components/schemas/LiaSettings"
          description: The retrieved or updated Lia settings.
        omnichannelExperience:
          $ref: "#/components/schemas/LiaOmnichannelExperience"
          description: The updated omnichannel experience for a country.
        posDataProviders:
          description: The list of POS data providers.
          items:
            $ref: "#/components/schemas/PosDataProviders"
          type: array
      type: object
    LiasettingsGetAccessibleGmbAccountsResponse:
      properties:
        accountId:
          description: The ID of the Merchant Center account.
          format: uint64
          type: string
        gmbAccounts:
          description: A list of Business Profiles which are available to the merchant.
          items:
            $ref: "#/components/schemas/GmbAccountsGmbAccount"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsGetAccessibleGmbAccountsResponse`".'
          type: string
      type: object
    LiasettingsListPosDataProvidersResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsListPosDataProvidersResponse`".'
          type: string
        posDataProviders:
          description: The list of POS data providers for each eligible country
          items:
            $ref: "#/components/schemas/PosDataProviders"
          type: array
      type: object
    LiasettingsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of LIA settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/LiaSettings"
          type: array
      type: object
    LiasettingsRequestGmbAccessResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsRequestGmbAccessResponse`".'
          type: string
      type: object
    LiasettingsRequestInventoryVerificationResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsRequestInventoryVerificationResponse`".'
          type: string
      type: object
    LiasettingsSetInventoryVerificationContactResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsSetInventoryVerificationContactResponse`".'
          type: string
      type: object
    LiasettingsSetPosDataProviderResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#liasettingsSetPosDataProviderResponse`".'
          type: string
      type: object
    LinkService:
      properties:
        service:
          description: 'Service provided to or by the linked account. Acceptable values are: - "`shoppingActionsOrderManagement`" - "`shoppingActionsProductManagement`" - "`shoppingAdsProductManagement`" - "`paymentProcessing`" '
          type: string
        status:
          description: 'Status of the link Acceptable values are: - "`active`" - "`inactive`" - "`pending`" '
          type: string
      type: object
    LinkedAccount:
      properties:
        linkedAccountId:
          description: The ID of the linked account.
          type: string
        services:
          description: List of provided services.
          items:
            $ref: "#/components/schemas/LinkService"
          type: array
      type: object
    ListAccountLabelsResponse:
      description: Response message for the `ListAccountLabels` method.
      properties:
        accountLabels:
          description: The labels from the specified account.
          items:
            $ref: "#/components/schemas/AccountLabel"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    ListAccountReturnCarrierResponse:
      description: Response for listing account return carriers.
      properties:
        accountReturnCarriers:
          description: List of all available account return carriers for the merchant.
          items:
            $ref: "#/components/schemas/AccountReturnCarrier"
          type: array
      type: object
    ListCollectionStatusesResponse:
      description: Response message for the ListCollectionStatuses method.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        resources:
          description: The collectionstatuses listed.
          items:
            $ref: "#/components/schemas/CollectionStatus"
          type: array
      type: object
    ListCollectionsResponse:
      description: Response message for the ListCollections method.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        resources:
          description: The collections listed.
          items:
            $ref: "#/components/schemas/Collection"
          type: array
      type: object
    ListConversionSourcesResponse:
      description: Response message for the ListConversionSources method.
      properties:
        conversionSources:
          description: List of conversion sources.
          items:
            $ref: "#/components/schemas/ConversionSource"
          type: array
        nextPageToken:
          description: Token to be used to fetch the next results page.
          type: string
      type: object
    ListCssesResponse:
      description: The response message for the `ListCsses` method
      properties:
        csses:
          description: The CSS domains affiliated with the specified CSS group.
          items:
            $ref: "#/components/schemas/Css"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    ListMethodQuotasResponse:
      description: Response message for the ListMethodQuotas method.
      properties:
        methodQuotas:
          description: The current quota usage and limits per each method.
          items:
            $ref: "#/components/schemas/MethodQuota"
          type: array
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    ListPromotionResponse:
      description: Response message for Promotions.List method.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        promotions:
          description: List of all available promotions for the merchant.
          items:
            $ref: "#/components/schemas/Promotion"
          type: array
      type: object
    ListRegionsResponse:
      description: Response message for the `ListRegions` method.
      properties:
        nextPageToken:
          description: A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        regions:
          description: The regions from the specified merchant.
          items:
            $ref: "#/components/schemas/Region"
          type: array
      type: object
    ListReturnPolicyOnlineResponse:
      description: Response message for the `ListReturnPolicyOnline` method.
      properties:
        returnPolicies:
          description: The retrieved return policies.
          items:
            $ref: "#/components/schemas/ReturnPolicyOnline"
          type: array
      type: object
    LocalInventory:
      description: Local inventory resource. For accepted attribute values, see the local product inventory feed specification.
      properties:
        availability:
          description: The availability of the product. For accepted attribute values, see the local product inventory feed specification.
          type: string
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. Can also be used to submit any attribute of the feed specification in its generic form, for example, `{ "name": "size type", "value": "regular" }`.'
          items:
            $ref: "#/components/schemas/CustomAttribute"
          type: array
        instoreProductLocation:
          description: The in-store product location.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#localInventory`"'
          type: string
        pickupMethod:
          description: The supported pickup method for this offer. Unless the value is "not supported", this field must be submitted together with `pickupSla`. For accepted attribute values, see the local product inventory feed specification.
          type: string
        pickupSla:
          description: The expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the local product inventory feed specification.
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: The price of the product.
        quantity:
          description: The quantity of the product. Must be nonnegative.
          format: uint32
          type: integer
        salePrice:
          $ref: "#/components/schemas/Price"
          description: The sale price of the product. Mandatory if `sale_price_effective_date` is defined.
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates may be specified as 'null' if undecided.
          type: string
        storeCode:
          description: Required. The store code of this local inventory resource.
          type: string
      type: object
    LocalinventoryCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/LocalinventoryCustomBatchRequestEntry"
          type: array
      type: object
    LocalinventoryCustomBatchRequestEntry:
      description: Batch entry encoding a single local inventory update request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        localInventory:
          $ref: "#/components/schemas/LocalInventory"
          description: Local inventory of the product.
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'Method of the batch request entry. Acceptable values are: - "`insert`" '
          type: string
        productId:
          description: The ID of the product for which to update local inventory.
          type: string
      type: object
    LocalinventoryCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/LocalinventoryCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#localinventoryCustomBatchResponse`".'
          type: string
      type: object
    LocalinventoryCustomBatchResponseEntry:
      description: Batch entry encoding a single local inventory update response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#localinventoryCustomBatchResponseEntry`"'
          type: string
      type: object
    LocationIdSet:
      properties:
        locationIds:
          description: A non-empty list of location IDs. They must all be of the same location type (for example, state).
          items:
            type: string
          type: array
      type: object
    LoyaltyPoints:
      properties:
        name:
          description: Name of loyalty points program. It is recommended to limit the name to 12 full-width characters or 24 Roman characters.
          type: string
        pointsValue:
          description: The retailer's loyalty points in absolute value.
          format: int64
          type: string
        ratio:
          description: The ratio of a point when converted to currency. Google assumes currency based on Merchant Center settings. If ratio is left out, it defaults to 1.0.
          format: double
          type: number
      type: object
    MerchantCenterDestination:
      description: '"Merchant Center Destination" sources can be used to send conversion events from a website using a Google tag directly to a Merchant Center account where the source is created.'
      properties:
        attributionSettings:
          $ref: "#/components/schemas/AttributionSettings"
          description: Required. Attribution settings being used for the Merchant Center Destination.
        currencyCode:
          description: Required. Three-letter currency code (ISO 4217). The currency code defines in which currency the conversions sent to this destination will be reported in Merchant Center.
          type: string
        destinationId:
          description: Output only. Merchant Center Destination ID.
          readOnly: true
          type: string
        displayName:
          description: Required. Merchant-specified display name for the destination. This is the name that identifies the conversion source within the Merchant Center UI. Limited to 64 characters.
          type: string
      type: object
    MerchantOrderReturn:
      description: Order return. Production access (all methods) requires the order manager role. Sandbox access does not.
      properties:
        creationDate:
          description: The date of creation of the return, in ISO 8601 format.
          type: string
        merchantOrderId:
          description: Merchant defined order ID.
          type: string
        orderId:
          description: Google order ID.
          type: string
        orderReturnId:
          description: Order return ID generated by Google.
          type: string
        returnItems:
          description: Items of the return.
          items:
            $ref: "#/components/schemas/MerchantOrderReturnItem"
          type: array
        returnPricingInfo:
          $ref: "#/components/schemas/ReturnPricingInfo"
          description: Information about shipping costs.
        returnShipments:
          description: Shipments of the return.
          items:
            $ref: "#/components/schemas/ReturnShipment"
          type: array
      type: object
    MerchantOrderReturnItem:
      properties:
        customerReturnReason:
          $ref: "#/components/schemas/CustomerReturnReason"
          description: The reason that the customer chooses to return an item.
        itemId:
          description: Product level item ID. If the returned items are of the same product, they will have the same ID.
          type: string
        merchantRejectionReason:
          $ref: "#/components/schemas/MerchantRejectionReason"
          description: The reason that the merchant chose to reject an item return.
        merchantReturnReason:
          $ref: "#/components/schemas/RefundReason"
          description: The reason that merchant chooses to accept a return item.
        product:
          $ref: "#/components/schemas/OrderLineItemProduct"
          description: Product data from the time of the order placement.
        refundableAmount:
          $ref: "#/components/schemas/MonetaryAmount"
          description: Maximum amount that can be refunded for this return item.
        returnItemId:
          description: Unit level ID for the return item. Different units of the same product will have different IDs.
          type: string
        returnShipmentIds:
          description: IDs of the return shipments that this return item belongs to.
          items:
            type: string
          type: array
        shipmentGroupId:
          description: ID of the original shipment group. Provided for shipments with invoice support.
          type: string
        shipmentUnitId:
          description: ID of the shipment unit assigned by the merchant. Provided for shipments with invoice support.
          type: string
        state:
          description: 'State of the item. Acceptable values are: - "`canceled`" - "`new`" - "`received`" - "`refunded`" - "`rejected`" '
          type: string
      type: object
    MerchantRejectionReason:
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          description: Code of the rejection reason.
          type: string
      type: object
    MethodQuota:
      description: The quota information per method in the Content API.
      properties:
        method:
          description: The method name, for example `products.list`. Method name does not contain version because quota can be shared between different API versions of the same method.
          type: string
        quotaLimit:
          description: The current quota limit per day, meaning the maximum number of calls for the method.
          format: int64
          type: string
        quotaUsage:
          description: The current quota usage, meaning the number of calls already made to the method.
          format: int64
          type: string
      type: object
    Metrics:
      description: Performance metrics. Values are only set for metrics requested explicitly in the request's search query.
      properties:
        aos:
          description: Average order size - the average number of items in an order. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: double
          type: number
        aovMicros:
          description: Average order value in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) - the average value (total price of items) of all placed orders. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: double
          type: number
        clicks:
          description: Number of clicks.
          format: int64
          type: string
        conversionRate:
          description: Number of conversions divided by the number of clicks, reported on the impression date. The metric is currently available only for the FREE_PRODUCT_LISTING program.
          format: double
          type: number
        conversionValueMicros:
          description: Value of conversions in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) attributed to the product, reported on the conversion date. The metric is currently available only for the FREE_PRODUCT_LISTING program. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response.
          format: int64
          type: string
        conversions:
          description: Number of conversions attributed to the product, reported on the conversion date. Depending on the attribution model, a conversion might be distributed across multiple clicks, where each click gets its own credit assigned. This metric is a sum of all such credits. The metric is currently available only for the FREE_PRODUCT_LISTING program.
          format: double
          type: number
        ctr:
          description: Click-through rate - the number of clicks merchant's products receive (clicks) divided by the number of times the products are shown (impressions).
          format: double
          type: number
        daysToShip:
          description: Average number of days between an order being placed and the order being fully shipped, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: double
          type: number
        impressions:
          description: Number of times merchant's products are shown.
          format: int64
          type: string
        itemDaysToShip:
          description: Average number of days between an item being ordered and the item being **This metric cannot be segmented by customer_country_code.**
          format: double
          type: number
        itemFillRate:
          description: Percentage of shipped items in relation to all finalized items (shipped or rejected by the merchant; unshipped items are not taken into account), reported on the order date. Item fill rate is lowered by merchant rejections. **This metric cannot be segmented by customer_country_code.**
          format: double
          type: number
        orderedItemSalesMicros:
          description: Total price of ordered items in micros (1 millionth of a standard unit, 1 USD = 1000000 micros). Excludes shipping, taxes (US only), and customer cancellations that happened within 30 minutes of placing the order. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        orderedItems:
          description: Number of ordered items. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        orders:
          description: Number of placed orders. Excludes customer cancellations that happened within 30 minutes of placing the order. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: int64
          type: string
        rejectedItems:
          description: Number of ordered items canceled by the merchant, reported on the order date. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        returnRate:
          description: Total price of returned items divided by the total price of shipped items, reported on the order date. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          format: double
          type: number
        returnedItems:
          description: Number of ordered items sent back for return, reported on the date when the merchant accepted the return. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        returnsMicros:
          description: Total price of ordered items sent back for return in micros (1 millionth of a standard unit, 1 USD = 1000000 micros), reported on the date when the merchant accepted the return. The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        shippedItemSalesMicros:
          description: Total price of shipped items in micros (1 millionth of a standard unit, 1 USD = 1000000 micros), reported on the order date. Excludes shipping and taxes (US only). The currency of the returned value is stored in the currency_code segment. If this metric is selected, 'segments.currency_code' is automatically added to the SELECT clause in the search query (unless it is explicitly selected by the user) and the currency_code segment is populated in the response. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        shippedItems:
          description: Number of shipped items, reported on the shipment date. **This metric cannot be segmented by customer_country_code.**
          format: int64
          type: string
        shippedOrders:
          description: Number of fully shipped orders, reported on the last shipment date. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: int64
          type: string
        unshippedItems:
          description: Number of ordered items not shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped items over the days in the queried period. **This metric cannot be segmented by customer_country_code.**
          format: double
          type: number
        unshippedOrders:
          description: Number of orders not shipped or partially shipped up until the end of the queried day. If a multi-day period is specified in the search query, the returned value is the average number of unshipped orders over the days in the queried period. **This metric cannot be segmented by product dimensions and customer_country_code.**
          format: double
          type: number
      type: object
    MinimumOrderValueTable:
      properties:
        storeCodeSetWithMovs:
          items:
            $ref: "#/components/schemas/MinimumOrderValueTableStoreCodeSetWithMov"
          type: array
      type: object
    MinimumOrderValueTableStoreCodeSetWithMov:
      description: A list of store code sets sharing the same minimum order value. At least two sets are required and the last one must be empty, which signifies 'MOV for all other stores'. Each store code can only appear once across all the sets. All prices within a service must have the same currency.
      properties:
        storeCodes:
          description: A list of unique store codes or empty for the catch all.
          items:
            type: string
          type: array
        value:
          $ref: "#/components/schemas/Price"
          description: The minimum order value for the given stores.
      type: object
    MonetaryAmount:
      properties:
        priceAmount:
          $ref: "#/components/schemas/Price"
          description: The pre-tax or post-tax price depends on the location of the order. - For countries (for example, "US". where price attribute excludes tax, this field corresponds to the pre-tax value. - For coutries (for example, "France") where price attribute includes tax, this field corresponds to the post-tax value .
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: Tax value, present only for countries where price attribute excludes tax (for example, "US". No tax is referenced as 0 value with the corresponding `currency`.
      type: object
    OnboardBuyOnGoogleProgramRequest:
      description: Request message for the OnboardProgram method.
      properties:
        customerServiceEmail:
          description: The customer service email.
          type: string
      type: object
    Order:
      description: Order. Production access (all methods) requires the order manager role. Sandbox access does not.
      properties:
        acknowledged:
          description: Whether the order was acknowledged.
          type: boolean
        annotations:
          description: List of key-value pairs that are attached to a given order.
          items:
            $ref: "#/components/schemas/OrderOrderAnnotation"
          type: array
        billingAddress:
          $ref: "#/components/schemas/OrderAddress"
          description: The billing address.
        customer:
          $ref: "#/components/schemas/OrderCustomer"
          description: The details of the customer who placed the order.
        deliveryDetails:
          $ref: "#/components/schemas/OrderDeliveryDetails"
          description: Delivery details for shipments of type `delivery`.
        id:
          description: The REST ID of the order. Globally unique.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#order`"'
          type: string
        lineItems:
          description: Line items that are ordered.
          items:
            $ref: "#/components/schemas/OrderLineItem"
          type: array
        merchantId:
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        netPriceAmount:
          $ref: "#/components/schemas/Price"
          description: The net amount for the order (price part). For example, if an order was originally for $100 and a refund was issued for $20, the net amount will be $80.
        netTaxAmount:
          $ref: "#/components/schemas/Price"
          description: The net amount for the order (tax part). Note that in certain cases due to taxable base adjustment `netTaxAmount` might not match to a sum of tax field across all lineItems and refunds.
        paymentStatus:
          description: 'The status of the payment. Acceptable values are: - "`paymentCaptured`" - "`paymentRejected`" - "`paymentSecured`" - "`pendingAuthorization`" '
          type: string
        pickupDetails:
          $ref: "#/components/schemas/OrderPickupDetails"
          description: Pickup details for shipments of type `pickup`.
        placedDate:
          description: The date when the order was placed, in ISO 8601 format.
          type: string
        promotions:
          description: "Promotions associated with the order. To determine which promotions apply to which products, check the `Promotions[].appliedItems[].lineItemId` field against the `LineItems[].id` field for each promotion. If a promotion is applied to more than 1 offerId, divide the discount value by the number of affected offers to determine how much discount to apply to each offerId. Examples: 1. To calculate price paid by the customer for a single line item including the discount: For each promotion, subtract the `LineItems[].adjustments[].priceAdjustment.value` amount from the `LineItems[].Price.value`. 2. To calculate price paid by the customer for a single line item including the discount in case of multiple quantity: For each promotion, divide the `LineItems[].adjustments[].priceAdjustment.value` by the quantity of products then subtract the resulting value from the `LineItems[].Product.Price.value` for each quantity item. Only 1 promotion can be applied to an offerId in a given order. To refund an item which had a promotion applied to it, make sure to refund the amount after first subtracting the promotion discount from the item price. More details about the program are here."
          items:
            $ref: "#/components/schemas/OrderPromotion"
          type: array
        refunds:
          description: Refunds for the order.
          items:
            $ref: "#/components/schemas/OrderRefund"
          type: array
        shipments:
          description: Shipments of the order.
          items:
            $ref: "#/components/schemas/OrderShipment"
          type: array
        shippingCost:
          $ref: "#/components/schemas/Price"
          description: The total cost of shipping for all items.
        shippingCostTax:
          $ref: "#/components/schemas/Price"
          description: The tax for the total shipping cost.
        status:
          description: 'The status of the order. Acceptable values are: - "`canceled`" - "`delivered`" - "`inProgress`" - "`partiallyDelivered`" - "`partiallyReturned`" - "`partiallyShipped`" - "`pendingShipment`" - "`returned`" - "`shipped`" '
          type: string
        taxCollector:
          description: 'The party responsible for collecting and remitting taxes. Acceptable values are: - "`marketplaceFacilitator`" - "`merchant`" '
          type: string
      type: object
    OrderAddress:
      properties:
        country:
          description: CLDR country code (for example, "US").
          type: string
        fullAddress:
          description: "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States "
          items:
            type: string
          type: array
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        locality:
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal Code or ZIP (for example, "94043").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          items:
            type: string
          type: array
      type: object
    OrderCancellation:
      properties:
        actor:
          description: 'The actor that created the cancellation. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        creationDate:
          description: Date on which the cancellation has been created, in ISO 8601 format.
          type: string
        quantity:
          description: The quantity that was canceled.
          format: uint32
          type: integer
        reason:
          description: "The reason for the cancellation. Orders that are canceled with a noInventory reason will lead to the removal of the product from Buy on Google until you make an update to that product. This won't affect your Shopping ads. Acceptable values are: - \"`autoPostInternal`\" - \"`autoPostInvalidBillingAddress`\" - \"`autoPostNoInventory`\" - \"`autoPostPriceError`\" - \"`autoPostUndeliverableShippingAddress`\" - \"`couponAbuse`\" - \"`customerCanceled`\" - \"`customerInitiatedCancel`\" - \"`customerSupportRequested`\" - \"`failToPushOrderGoogleError`\" - \"`failToPushOrderMerchantError`\" - \"`failToPushOrderMerchantFulfillmentError`\" - \"`failToPushOrderToMerchant`\" - \"`failToPushOrderToMerchantOutOfStock`\" - \"`invalidCoupon`\" - \"`malformedShippingAddress`\" - \"`merchantDidNotShipOnTime`\" - \"`noInventory`\" - \"`orderTimeout`\" - \"`other`\" - \"`paymentAbuse`\" - \"`paymentDeclined`\" - \"`priceError`\" - \"`returnRefundAbuse`\" - \"`shippingPriceError`\" - \"`taxError`\" - \"`undeliverableShippingAddress`\" - \"`unsupportedPoBoxAddress`\" - \"`failedToCaptureFunds`\" "
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderCustomer:
      properties:
        fullName:
          description: Full name of the customer.
          type: string
        invoiceReceivingEmail:
          description: Email address for the merchant to send value-added tax or invoice documentation of the order. Only the last document sent is made available to the customer. For more information, see About automated VAT invoicing for Buy on Google.
          type: string
        loyaltyInfo:
          $ref: "#/components/schemas/OrderCustomerLoyaltyInfo"
          description: Loyalty program information.
        marketingRightsInfo:
          $ref: "#/components/schemas/OrderCustomerMarketingRightsInfo"
          description: Customer's marketing preferences. Contains the marketing opt-in information that is current at the time that the merchant call. User preference selections can change from one order to the next so preferences must be checked with every order.
      type: object
    OrderCustomerLoyaltyInfo:
      properties:
        loyaltyNumber:
          description: The loyalty card/membership number.
          type: string
        name:
          description: Name of card/membership holder, this field will be populated when
          type: string
      type: object
    OrderCustomerMarketingRightsInfo:
      properties:
        explicitMarketingPreference:
          description: 'Last known customer selection regarding marketing preferences. In certain cases this selection might not be known, so this field would be empty. If a customer selected `granted` in their most recent order, they can be subscribed to marketing emails. Customers who have chosen `denied` must not be subscribed, or must be unsubscribed if already opted-in. Acceptable values are: - "`denied`" - "`granted`" '
          type: string
        lastUpdatedTimestamp:
          description: Timestamp when last time marketing preference was updated. Could be empty, if user wasn't offered a selection yet.
          type: string
        marketingEmailAddress:
          description: Email address that can be used for marketing purposes. The field may be empty even if `explicitMarketingPreference` is 'granted'. This happens when retrieving an old order from the customer who deleted their account.
          type: string
      type: object
    OrderDeliveryDetails:
      properties:
        address:
          $ref: "#/components/schemas/OrderAddress"
          description: The delivery address
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
      type: object
    OrderLineItem:
      properties:
        adjustments:
          description: Price and tax adjustments applied on the line item.
          items:
            $ref: "#/components/schemas/OrderLineItemAdjustment"
          type: array
        annotations:
          description: Annotations that are attached to the line item.
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        cancellations:
          description: Cancellations of the line item.
          items:
            $ref: "#/components/schemas/OrderCancellation"
          type: array
        id:
          description: The ID of the line item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Total price for the line item. For example, if two items for $10 are purchased, the total price will be $20.
        product:
          $ref: "#/components/schemas/OrderLineItemProduct"
          description: Product data as seen by customer from the time of the order placement. Note that certain attributes values (for example, title or gtin) might be reformatted and no longer match values submitted through product feed.
        quantityCanceled:
          description: Number of items canceled.
          format: uint32
          type: integer
        quantityDelivered:
          description: Number of items delivered.
          format: uint32
          type: integer
        quantityOrdered:
          description: Number of items ordered.
          format: uint32
          type: integer
        quantityPending:
          description: Number of items pending.
          format: uint32
          type: integer
        quantityReadyForPickup:
          description: Number of items ready for pickup.
          format: uint32
          type: integer
        quantityReturned:
          description: Number of items returned.
          format: uint32
          type: integer
        quantityShipped:
          description: Number of items shipped.
          format: uint32
          type: integer
        quantityUndeliverable:
          description: Number of items undeliverable.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/OrderLineItemReturnInfo"
          description: Details of the return policy for the line item.
        returns:
          description: Returns of the line item.
          items:
            $ref: "#/components/schemas/OrderReturn"
          type: array
        shippingDetails:
          $ref: "#/components/schemas/OrderLineItemShippingDetails"
          description: Details of the requested shipping for the line item.
        tax:
          $ref: "#/components/schemas/Price"
          description: Total tax amount for the line item. For example, if two items are purchased, and each have a cost tax of $2, the total tax amount will be $4.
      type: object
    OrderLineItemAdjustment:
      properties:
        priceAdjustment:
          $ref: "#/components/schemas/Price"
          description: Adjustment for total price of the line item.
        taxAdjustment:
          $ref: "#/components/schemas/Price"
          description: Adjustment for total tax of the line item.
        type:
          description: 'Type of this adjustment. Acceptable values are: - "`promotion`" '
          type: string
      type: object
    OrderLineItemProduct:
      properties:
        brand:
          description: Brand of the item.
          type: string
        condition:
          description: 'Condition or state of the item. Acceptable values are: - "`new`" - "`refurbished`" - "`used`" '
          type: string
        contentLanguage:
          description: The two-letter ISO 639-1 language code for the item.
          type: string
        fees:
          description: Associated fees at order creation time.
          items:
            $ref: "#/components/schemas/OrderLineItemProductFee"
          type: array
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: The REST ID of the product.
          type: string
        imageLink:
          description: URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        offerId:
          description: An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Price of the item.
        shownImage:
          description: URL to the cached image shown to the user when order was placed.
          type: string
        targetCountry:
          description: The CLDR territory code of the target country of the product.
          type: string
        title:
          description: The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. These are dimensions of the product, such as color, gender, material, pattern, and size. You can find a comprehensive list of variant attributes here.
          items:
            $ref: "#/components/schemas/OrderLineItemProductVariantAttribute"
          type: array
      type: object
    OrderLineItemProductFee:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
          description: Amount of the fee.
        name:
          description: Name of the fee.
          type: string
      type: object
    OrderLineItemProductVariantAttribute:
      properties:
        dimension:
          description: The dimension of the variant.
          type: string
        value:
          description: The value for the dimension.
          type: string
      type: object
    OrderLineItemReturnInfo:
      properties:
        daysToReturn:
          description: Required. How many days later the item can be returned.
          format: int32
          type: integer
        isReturnable:
          description: Required. Whether the item is returnable.
          type: boolean
        policyUrl:
          description: Required. URL of the item return policy.
          type: string
      type: object
    OrderLineItemShippingDetails:
      properties:
        deliverByDate:
          description: Required. The delivery by date, in ISO 8601 format.
          type: string
        method:
          $ref: "#/components/schemas/OrderLineItemShippingDetailsMethod"
          description: Required. Details of the shipping method.
        pickupPromiseInMinutes:
          description: The promised time in minutes in which the order will be ready for pickup. This only applies to buy-online-pickup-in-store same-day order.
          format: uint32
          type: integer
        shipByDate:
          description: Required. The ship by date, in ISO 8601 format.
          type: string
        type:
          description: 'Type of shipment. Indicates whether `deliveryDetails` or `pickupDetails` is applicable for this shipment. Acceptable values are: - "`delivery`" - "`pickup`" '
          type: string
      type: object
    OrderLineItemShippingDetailsMethod:
      properties:
        carrier:
          description: The carrier for the shipping. Optional. See `shipments[].carrier` for a list of acceptable values.
          type: string
        maxDaysInTransit:
          description: Required. Maximum transit time.
          format: uint32
          type: integer
        methodName:
          description: Required. The name of the shipping method.
          type: string
        minDaysInTransit:
          description: Required. Minimum transit time.
          format: uint32
          type: integer
      type: object
    OrderMerchantProvidedAnnotation:
      properties:
        key:
          description: Key for additional merchant provided (as key-value pairs) annotation about the line item.
          type: string
        value:
          description: Value for additional merchant provided (as key-value pairs) annotation about the line item.
          type: string
      type: object
    OrderOrderAnnotation:
      properties:
        key:
          description: Key for additional google provided (as key-value pairs) annotation.
          type: string
        value:
          description: Value for additional google provided (as key-value pairs) annotation.
          type: string
      type: object
    OrderPickupDetails:
      properties:
        address:
          $ref: "#/components/schemas/OrderAddress"
          description: Address of the pickup location where the shipment should be sent. Note that `recipientName` in the address is the name of the business at the pickup location.
        collectors:
          description: Collectors authorized to pick up shipment from the pickup location.
          items:
            $ref: "#/components/schemas/OrderPickupDetailsCollector"
          type: array
        locationId:
          description: ID of the pickup location.
          type: string
        pickupType:
          description: 'The pickup type of this order. Acceptable values are: - "`merchantStore`" - "`merchantStoreCurbside`" - "`merchantStoreLocker`" - "`thirdPartyPickupPoint`" - "`thirdPartyLocker`" '
          type: string
      type: object
    OrderPickupDetailsCollector:
      properties:
        name:
          description: Name of the person picking up the shipment.
          type: string
        phoneNumber:
          description: Phone number of the person picking up the shipment.
          type: string
      type: object
    OrderPromotion:
      properties:
        applicableItems:
          description: Items that this promotion may be applied to. If empty, there are no restrictions on applicable items and quantity. This field will also be empty for shipping promotions because shipping is not tied to any specific item.
          items:
            $ref: "#/components/schemas/OrderPromotionItem"
          type: array
        appliedItems:
          description: Items that this promotion have been applied to. Do not provide for `orders.createtestorder`. This field will be empty for shipping promotions because shipping is not tied to any specific item.
          items:
            $ref: "#/components/schemas/OrderPromotionItem"
          type: array
        endTime:
          description: Promotion end time in ISO 8601 format. Date, time, and offset required, for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
          type: string
        funder:
          description: 'Required. The party funding the promotion. Only `merchant` is supported for `orders.createtestorder`. Acceptable values are: - "`google`" - "`merchant`" '
          type: string
        merchantPromotionId:
          description: Required. This field is used to identify promotions within merchants' own systems.
          type: string
        priceValue:
          $ref: "#/components/schemas/Price"
          description: Estimated discount applied to price. Amount is pre-tax or post-tax depending on location of order.
        shortTitle:
          description: A short title of the promotion to be shown on the checkout page. Do not provide for `orders.createtestorder`.
          type: string
        startTime:
          description: Promotion start time in ISO 8601 format. Date, time, and offset required, for example, "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z".
          type: string
        subtype:
          description: 'Required. The category of the promotion. Only `moneyOff` is supported for `orders.createtestorder`. Acceptable values are: - "`buyMGetMoneyOff`" - "`buyMGetNMoneyOff`" - "`buyMGetNPercentOff`" - "`buyMGetPercentOff`" - "`freeGift`" - "`freeGiftWithItemId`" - "`freeGiftWithValue`" - "`freeShippingOvernight`" - "`freeShippingStandard`" - "`freeShippingTwoDay`" - "`moneyOff`" - "`percentOff`" - "`rewardPoints`" - "`salePrice`" '
          type: string
        taxValue:
          $ref: "#/components/schemas/Price"
          description: Estimated discount applied to tax (if allowed by law). Do not provide for `orders.createtestorder`.
        title:
          description: Required. The title of the promotion.
          type: string
        type:
          description: 'Required. The scope of the promotion. Only `product` is supported for `orders.createtestorder`. Acceptable values are: - "`product`" - "`shipping`" '
          type: string
      type: object
    OrderPromotionItem:
      properties:
        lineItemId:
          description: The line item ID of a product. Do not provide for `orders.createtestorder`.
          type: string
        offerId:
          description: Required. Offer ID of a product. Only for `orders.createtestorder`.
          type: string
        productId:
          description: "`orders.createtestorder`."
          type: string
        quantity:
          description: The quantity of the associated product. Do not provide for `orders.createtestorder`.
          format: int32
          type: integer
      type: object
    OrderRefund:
      properties:
        actor:
          description: 'The actor that created the refund. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        amount:
          $ref: "#/components/schemas/Price"
          description: The amount that is refunded.
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderReportDisbursement:
      description: Order disbursement. All methods require the payment analyst role.
      properties:
        disbursementAmount:
          $ref: "#/components/schemas/Price"
          description: The disbursement amount.
        disbursementCreationDate:
          description: The disbursement date, in ISO 8601 format.
          type: string
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementId:
          description: The ID of the disbursement.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
      type: object
    OrderReportTransaction:
      properties:
        disbursementAmount:
          $ref: "#/components/schemas/Price"
          description: The disbursement amount.
        disbursementCreationDate:
          description: The date the disbursement was created, in ISO 8601 format.
          type: string
        disbursementDate:
          description: The date the disbursement was initiated, in ISO 8601 format.
          type: string
        disbursementId:
          description: The ID of the disbursement.
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        merchantOrderId:
          description: Merchant-provided ID of the order.
          type: string
        orderId:
          description: The ID of the order.
          type: string
        productAmount:
          $ref: "#/components/schemas/ProductAmount"
          description: Total amount for the items.
        transactionDate:
          description: The date of the transaction, in ISO 8601 format.
          type: string
      type: object
    OrderReturn:
      properties:
        actor:
          description: 'The actor that created the refund. Acceptable values are: - "`customer`" - "`googleBot`" - "`googleCustomerService`" - "`googlePayments`" - "`googleSabre`" - "`merchant`" '
          type: string
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderShipment:
      properties:
        carrier:
          description: "The carrier handling the shipment. For supported carriers, Google includes the carrier name and tracking URL in emails to customers. For select supported carriers, Google also automatically updates the shipment status based on the provided shipment ID. *Note:* You can also use unsupported carriers, but emails to customers won't include the carrier name or tracking URL, and there will be no automatic order status updates. Supported carriers for \"US\" are: - \"`ups`\" (United Parcel Service) *automatic status updates* - \"`usps`\" (United States Postal Service) *automatic status updates* - \"`fedex`\" (FedEx) *automatic status updates * - \"`dhl`\" (DHL eCommerce) *automatic status updates* (US only) - \"`ontrac`\" (OnTrac) *automatic status updates * - \"`dhl express`\" (DHL Express) - \"`deliv`\" (Deliv) - \"`dynamex`\" (TForce) - \"`lasership`\" (LaserShip) - \"`mpx`\" (Military Parcel Xpress) - \"`uds`\" (United Delivery Service) - \"`efw`\" (Estes Forwarding Worldwide) - \"`jd logistics`\" (JD Logistics) - \"`yunexpress`\" (YunExpress) - \"`china post`\" (China Post) - \"`china ems`\" (China Post Express Mail Service) - \"`singapore post`\" (Singapore Post) - \"`pos malaysia`\" (Pos Malaysia) - \"`postnl`\" (PostNL) - \"`ptt`\" (PTT Turkish Post) - \"`eub`\" (ePacket) - \"`chukou1`\" (Chukou1 Logistics) - \"`bestex`\" (Best Express) - \"`canada post`\" (Canada Post) - \"`purolator`\" (Purolator) - \"`canpar`\" (Canpar) - \"`india post`\" (India Post) - \"`blue dart`\" (Blue Dart) - \"`delhivery`\" (Delhivery) - \"`dtdc`\" (DTDC) - \"`tpc india`\" (TPC India) - \"`lso`\" (Lone Star Overnight) - \"`tww`\" (Team Worldwide) - \"`deliver-it`\" (Deliver-IT) - \"`cdl last mile`\" (CDL Last Mile) Supported carriers for FR are: - \"`la poste`\" (La Poste) *automatic status updates * - \"`colissimo`\" (Colissimo by La Poste) *automatic status updates* - \"`ups`\" (United Parcel Service) *automatic status updates * - \"`chronopost`\" (Chronopost by La Poste) - \"`gls`\" (General Logistics Systems France) - \"`dpd`\" (DPD Group by GeoPost) - \"`bpost`\" (Belgian Post Group) - \"`colis prive`\" (Colis Privé) - \"`boxtal`\" (Boxtal) - \"`geodis`\" (GEODIS) - \"`tnt`\" (TNT) - \"`db schenker`\" (DB Schenker) - \"`aramex`\" (Aramex) "
          type: string
        creationDate:
          description: Date on which the shipment has been created, in ISO 8601 format.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Present only if `status` is `delivered`
          type: string
        id:
          description: The ID of the shipment.
          type: string
        lineItems:
          description: The line items that are shipped.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        scheduledDeliveryDetails:
          $ref: "#/components/schemas/OrderShipmentScheduledDeliveryDetails"
          description: Delivery details of the shipment if scheduling is needed.
        shipmentGroupId:
          description: The shipment group ID of the shipment. This is set in shiplineitems request.
          type: string
        status:
          description: 'The status of the shipment. Acceptable values are: - "`delivered`" - "`readyForPickup`" - "`shipped`" - "`undeliverable`" '
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
      type: object
    OrderShipmentLineItemShipment:
      properties:
        lineItemId:
          description: The ID of the line item that is shipped. This value is assigned by Google when an order is created. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to ship. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity that is shipped.
          format: uint32
          type: integer
      type: object
    OrderShipmentScheduledDeliveryDetails:
      properties:
        carrierPhoneNumber:
          description: The phone number of the carrier fulfilling the delivery. The phone number is formatted as the international notation in ITU-T Recommendation E.123 (for example, "+41 44 668 1800").
          type: string
        scheduledDate:
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
          type: string
      type: object
    OrderTrackingSignal:
      description: Represents a merchant trade from which signals are extracted, e.g. shipping.
      properties:
        customerShippingFee:
          $ref: "#/components/schemas/PriceAmount"
          description: The shipping fee of the order; this value should be set to zero in the case of free shipping.
        deliveryPostalCode:
          description: Required. The delivery postal code, as a continuous string without spaces or dashes, e.g. "95016". This field will be anonymized in returned OrderTrackingSignal creation response.
          type: string
        deliveryRegionCode:
          description: Required. The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping destination.
          type: string
        lineItems:
          description: Information about line items in the order.
          items:
            $ref: "#/components/schemas/OrderTrackingSignalLineItemDetails"
          type: array
        merchantId:
          description: The Google merchant ID of this order tracking signal. This value is optional. If left unset, the caller's merchant ID is used. You must request access in order to provide data on behalf of another merchant. For more information, see [Submitting Order Tracking Signals](/shopping-content/guides/order-tracking-signals).
          format: int64
          type: string
        orderCreatedTime:
          $ref: "#/components/schemas/DateTime"
          description: Required. The time when the order was created on the merchant side. Include the year and timezone string, if available.
        orderId:
          description: Required. The ID of the order on the merchant side. This field will be hashed in returned OrderTrackingSignal creation response.
          type: string
        orderTrackingSignalId:
          description: Output only. The ID that uniquely identifies this order tracking signal.
          format: int64
          readOnly: true
          type: string
        shipmentLineItemMapping:
          description: The mapping of the line items to the shipment information.
          items:
            $ref: "#/components/schemas/OrderTrackingSignalShipmentLineItemMapping"
          type: array
        shippingInfo:
          description: The shipping information for the order.
          items:
            $ref: "#/components/schemas/OrderTrackingSignalShippingInfo"
          type: array
      type: object
    OrderTrackingSignalLineItemDetails:
      description: The line items of the order.
      properties:
        brand:
          description: Brand of the product.
          type: string
        gtin:
          description: The Global Trade Item Number.
          type: string
        lineItemId:
          description: Required. The ID for this line item.
          type: string
        mpn:
          description: The manufacturer part number.
          type: string
        productDescription:
          deprecated: true
          description: "Plain text description of this product (deprecated: Please use product_title instead)."
          type: string
        productId:
          description: Required. The Content API REST ID of the product, in the form channel:contentLanguage:targetCountry:offerId.
          type: string
        productTitle:
          description: Plain text title of this product.
          type: string
        quantity:
          description: The quantity of the line item in the order.
          format: int64
          type: string
        sku:
          deprecated: true
          description: Merchant SKU for this item (deprecated).
          type: string
        upc:
          deprecated: true
          description: "Universal product code for this item (deprecated: Please use GTIN instead)."
          type: string
      type: object
    OrderTrackingSignalShipmentLineItemMapping:
      description: Represents how many items are in the shipment for the given shipment_id and line_item_id.
      properties:
        lineItemId:
          description: Required. The line item ID.
          type: string
        quantity:
          description: The line item quantity in the shipment.
          format: int64
          type: string
        shipmentId:
          description: Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response.
          type: string
      type: object
    OrderTrackingSignalShippingInfo:
      description: The shipping information for the order.
      properties:
        actualDeliveryTime:
          $ref: "#/components/schemas/DateTime"
          description: "The time when the shipment was actually delivered. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name."
        carrierName:
          description: "The name of the shipping carrier for the delivery. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time."
          type: string
        carrierServiceName:
          description: The service type for fulfillment, e.g., GROUND, FIRST_CLASS, etc.
          type: string
        earliestDeliveryPromiseTime:
          $ref: "#/components/schemas/DateTime"
          description: "The earliest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name."
        latestDeliveryPromiseTime:
          $ref: "#/components/schemas/DateTime"
          description: "The latest delivery promised time. Include the year and timezone string, if available. This field is required, if one of the following fields is absent: tracking_id or carrier_name."
        originPostalCode:
          description: The origin postal code, as a continuous string without spaces or dashes, e.g. "95016". This field will be anonymized in returned OrderTrackingSignal creation response.
          type: string
        originRegionCode:
          description: The [CLDR territory code] (http://www.unicode.org/repos/cldr/tags/latest/common/main/en.xml) for the shipping origin.
          type: string
        shipmentId:
          description: Required. The shipment ID. This field will be hashed in returned OrderTrackingSignal creation response.
          type: string
        shippedTime:
          $ref: "#/components/schemas/DateTime"
          description: The time when the shipment was shipped. Include the year and timezone string, if available.
        shippingStatus:
          description: The status of the shipment.
          enum:
            - SHIPPING_STATE_UNSPECIFIED
            - SHIPPED
            - DELIVERED
          type: string
        trackingId:
          description: "The tracking ID of the shipment. This field is required if one of the following fields is absent: earliest_delivery_promise_time, latest_delivery_promise_time, and actual_delivery_time."
          type: string
      type: object
    OrderinvoicesCreateChargeInvoiceRequest:
      properties:
        invoiceId:
          description: "[required] The ID of the invoice."
          type: string
        invoiceSummary:
          $ref: "#/components/schemas/InvoiceSummary"
          description: "[required] Invoice summary."
        lineItemInvoices:
          description: "[required] Invoice details per line item."
          items:
            $ref: "#/components/schemas/ShipmentInvoiceLineItemInvoice"
          type: array
        operationId:
          description: "[required] The ID of the operation, unique across all operations for a given order."
          type: string
        shipmentGroupId:
          description: "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
          type: string
      type: object
    OrderinvoicesCreateChargeInvoiceResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderinvoicesCreateChargeInvoiceResponse`".'
          type: string
      type: object
    OrderinvoicesCreateRefundInvoiceRequest:
      properties:
        invoiceId:
          description: "[required] The ID of the invoice."
          type: string
        operationId:
          description: "[required] The ID of the operation, unique across all operations for a given order."
          type: string
        refundOnlyOption:
          $ref: "#/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption"
          description: Option to create a refund-only invoice. Exactly one of `refundOnlyOption` or `returnOption` must be provided.
        returnOption:
          $ref: "#/components/schemas/OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption"
          description: Option to create an invoice for a refund and mark all items within the invoice as returned. Exactly one of `refundOnlyOption` or `returnOption` must be provided.
        shipmentInvoices:
          description: Invoice details for different shipment groups.
          items:
            $ref: "#/components/schemas/ShipmentInvoice"
          type: array
      type: object
    OrderinvoicesCreateRefundInvoiceResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderinvoicesCreateRefundInvoiceResponse`".'
          type: string
      type: object
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceRefundOption:
      properties:
        description:
          description: Optional description of the refund reason.
          type: string
        reason:
          description: '[required] Reason for the refund. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
      type: object
    OrderinvoicesCustomBatchRequestEntryCreateRefundInvoiceReturnOption:
      properties:
        description:
          description: Optional description of the return reason.
          type: string
        reason:
          description: '[required] Reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
      type: object
    OrderreportsListDisbursementsResponse:
      properties:
        disbursements:
          description: The list of disbursements.
          items:
            $ref: "#/components/schemas/OrderReportDisbursement"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreportsListDisbursementsResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of disbursements.
          type: string
      type: object
    OrderreportsListTransactionsResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreportsListTransactionsResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of transactions.
          type: string
        transactions:
          description: The list of transactions.
          items:
            $ref: "#/components/schemas/OrderReportTransaction"
          type: array
      type: object
    OrderreturnsAcknowledgeRequest:
      properties:
        operationId:
          description: "[required] The ID of the operation, unique across all operations for a given order return."
          type: string
      type: object
    OrderreturnsAcknowledgeResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsAcknowledgeResponse`".'
          type: string
      type: object
    OrderreturnsCreateOrderReturnRequest:
      properties:
        lineItems:
          description: The list of line items to return.
          items:
            $ref: "#/components/schemas/OrderreturnsLineItem"
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        orderId:
          description: The ID of the order.
          type: string
        returnMethodType:
          description: The way of the package being returned.
          type: string
      type: object
    OrderreturnsCreateOrderReturnResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsCreateOrderReturnResponse`".'
          type: string
        orderReturn:
          $ref: "#/components/schemas/MerchantOrderReturn"
          description: Created order return.
      type: object
    OrderreturnsLineItem:
      properties:
        lineItemId:
          description: The ID of the line item. This value is assigned by Google when an order is created. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity of this line item.
          format: uint32
          type: integer
      type: object
    OrderreturnsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/MerchantOrderReturn"
          type: array
      type: object
    OrderreturnsPartialRefund:
      properties:
        priceAmount:
          $ref: "#/components/schemas/Price"
          description: The pre-tax or post-tax amount to be refunded, depending on the location of the order.
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: "Tax amount to be refunded. Note: This has different meaning depending on the location of the order."
      type: object
    OrderreturnsProcessRequest:
      properties:
        fullChargeReturnShippingCost:
          description: Option to charge the customer return shipping cost.
          type: boolean
        operationId:
          description: "[required] The ID of the operation, unique across all operations for a given order return."
          type: string
        refundShippingFee:
          $ref: "#/components/schemas/OrderreturnsRefundOperation"
          description: Refunds for original shipping fee.
        returnItems:
          description: The list of items to return.
          items:
            $ref: "#/components/schemas/OrderreturnsReturnItem"
          type: array
      type: object
    OrderreturnsProcessResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#orderreturnsProcessResponse`".'
          type: string
      type: object
    OrderreturnsRefundOperation:
      properties:
        fullRefund:
          description: If true, the item will be fully refunded. Allowed only when payment_type is FOP. Merchant can choose this refund option to indicate the full remaining amount of corresponding object to be refunded to the customer through FOP.
          type: boolean
        partialRefund:
          $ref: "#/components/schemas/OrderreturnsPartialRefund"
          description: If this is set, the item will be partially refunded. Merchant can choose this refund option to specify the customized amount that to be refunded to the customer.
        paymentType:
          description: The payment way of issuing refund. Default value is ORIGINAL_FOP if not set.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        returnRefundReason:
          description: Code of the refund reason.
          type: string
      type: object
    OrderreturnsRejectOperation:
      properties:
        reason:
          description: The reason for the return.
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrderreturnsReturnItem:
      properties:
        refund:
          $ref: "#/components/schemas/OrderreturnsRefundOperation"
          description: Refunds the item.
        reject:
          $ref: "#/components/schemas/OrderreturnsRejectOperation"
          description: Rejects the item.
        returnItemId:
          description: Unit level ID for the return item. Different units of the same product will have different IDs.
          type: string
      type: object
    OrdersAcknowledgeRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
    OrdersAcknowledgeResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersAcknowledgeResponse`".'
          type: string
      type: object
    OrdersAdvanceTestOrderResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersAdvanceTestOrderResponse`".'
          type: string
      type: object
    OrdersCancelLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to cancel. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to cancel. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to cancel.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCancelLineItemResponse`".'
          type: string
      type: object
    OrdersCancelRequest:
      properties:
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`customerInitiatedCancel`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`noInventory`" - "`other`" - "`priceError`" - "`shippingPriceError`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`failedToCaptureFunds`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersCancelResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCancelResponse`".'
          type: string
      type: object
    OrdersCancelTestOrderByCustomerRequest:
      properties:
        reason:
          description: 'The reason for the cancellation. Acceptable values are: - "`changedMind`" - "`orderedWrongItem`" - "`other`" '
          type: string
      type: object
    OrdersCancelTestOrderByCustomerResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCancelTestOrderByCustomerResponse`".'
          type: string
      type: object
    OrdersCreateTestOrderRequest:
      properties:
        country:
          description: 'The CLDR territory code of the country of the test order to create. Affects the currency and addresses of orders created through `template_name`, or the addresses of orders created through `test_order`. Acceptable values are: - "`US`" - "`FR`" Defaults to "`US`".'
          type: string
        templateName:
          description: 'The test order template to use. Specify as an alternative to `testOrder` as a shortcut for retrieving a template and then creating an order using that template. Acceptable values are: - "`template1`" - "`template1a`" - "`template1b`" - "`template2`" - "`template3`" '
          type: string
        testOrder:
          $ref: "#/components/schemas/TestOrder"
          description: The test order to create.
      type: object
    OrdersCreateTestOrderResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCreateTestOrderResponse`".'
          type: string
        orderId:
          description: The ID of the newly created test order.
          type: string
      type: object
    OrdersCreateTestReturnRequest:
      properties:
        items:
          description: Returned items.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryCreateTestReturnReturnItem"
          type: array
      type: object
    OrdersCreateTestReturnResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersCreateTestReturnResponse`".'
          type: string
        returnId:
          description: The ID of the newly created test order return.
          type: string
      type: object
    OrdersCustomBatchRequestEntryCreateTestReturnReturnItem:
      properties:
        lineItemId:
          description: The ID of the line item to return.
          type: string
        quantity:
          description: Quantity that is returned.
          format: uint32
          type: integer
      type: object
    OrdersCustomBatchRequestEntryRefundItemItem:
      properties:
        amount:
          $ref: "#/components/schemas/MonetaryAmount"
          description: The total amount that is refunded. (for example, refunding $5 each for 2 products should be done by setting quantity to 2 and amount to 10$) In case of multiple refunds, this should be the amount you currently want to refund to the customer.
        fullRefund:
          description: If true, the full item will be refunded. If this is true, amount shouldn't be provided and will be ignored.
          type: boolean
        lineItemId:
          description: The ID of the line item. Either lineItemId or productId is required.
          type: string
        productId:
          description: The ID of the product. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The number of products that are refunded.
          format: int32
          type: integer
      type: object
    OrdersCustomBatchRequestEntryRefundItemShipping:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
          description: The amount that is refunded. If this is not the first refund for the shipment, this should be the newly refunded amount.
        fullRefund:
          description: If set to true, all shipping costs for the order will be refunded. If this is true, amount shouldn't be provided and will be ignored. If set to false, submit the amount of the partial shipping refund, excluding the shipping tax. The shipping tax is calculated and handled on Google's side.
          type: boolean
      type: object
    OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo:
      properties:
        carrier:
          description: The carrier handling the shipment. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        shipmentId:
          description: Required. The ID of the shipment. This is assigned by the merchant and is unique to each shipment.
          type: string
        trackingId:
          description: The tracking ID for the shipment.
          type: string
      type: object
    OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails:
      description: ScheduledDeliveryDetails used to update the scheduled delivery order.
      properties:
        carrierPhoneNumber:
          description: The phone number of the carrier fulfilling the delivery. The phone number should be formatted as the international notation in
          type: string
        scheduledDate:
          description: The date a shipment is scheduled for delivery, in ISO 8601 format.
          type: string
      type: object
    OrdersGetByMerchantOrderIdResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersGetByMerchantOrderIdResponse`".'
          type: string
        order:
          $ref: "#/components/schemas/Order"
          description: The requested order.
      type: object
    OrdersGetTestOrderTemplateResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersGetTestOrderTemplateResponse`".'
          type: string
        template:
          $ref: "#/components/schemas/TestOrder"
          description: The requested test order template.
      type: object
    OrdersInStoreRefundLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        priceAmount:
          $ref: "#/components/schemas/Price"
          description: The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. Required.
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: The amount of tax to be refunded. Required.
      type: object
    OrdersInStoreRefundLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersInStoreRefundLineItemResponse`".'
          type: string
      type: object
    OrdersListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of orders.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Order"
          type: array
      type: object
    OrdersRefundItemRequest:
      properties:
        items:
          description: The items that are refunded. Either Item or Shipping must be provided in the request.
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryRefundItemItem"
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`shippingCostAdjustment`" - "`priceAdjustment`" - "`taxAdjustment`" - "`feeAdjustment`" - "`courtesyAdjustment`" - "`adjustment`" - "`customerCancelled`" - "`noInventory`" - "`productNotAsDescribed`" - "`undeliverableShippingAddress`" - "`wrongProductShipped`" - "`lateShipmentCredit`" - "`deliveredLateByCarrier`" - "`productArrivedDamaged`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        shipping:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryRefundItemShipping"
          description: The refund on shipping. Optional, but either Item or Shipping must be provided in the request.
      type: object
    OrdersRefundItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersRefundItemResponse`".'
          type: string
      type: object
    OrdersRefundOrderRequest:
      properties:
        amount:
          $ref: "#/components/schemas/MonetaryAmount"
          description: The amount that is refunded. If this is not the first refund for the order, this should be the newly refunded amount.
        fullRefund:
          description: If true, the full order will be refunded, including shipping. If this is true, amount shouldn't be provided and will be ignored.
          type: boolean
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        reason:
          description: 'The reason for the refund. Acceptable values are: - "`courtesyAdjustment`" - "`other`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRefundOrderResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersRefundOrderResponse`".'
          type: string
      type: object
    OrdersRejectReturnLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`damagedOrUsed`" - "`missingComponent`" - "`notEligible`" - "`other`" - "`outOfReturnWindow`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
      type: object
    OrdersRejectReturnLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersRejectReturnLineItemResponse`".'
          type: string
      type: object
    OrdersReturnRefundLineItemRequest:
      properties:
        lineItemId:
          description: The ID of the line item to return. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        priceAmount:
          $ref: "#/components/schemas/Price"
          description: The amount to be refunded. This may be pre-tax or post-tax depending on the location of the order. If omitted, refundless return is assumed.
        productId:
          description: The ID of the product to return. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        quantity:
          description: The quantity to return and refund. Quantity is required.
          format: uint32
          type: integer
        reason:
          description: 'The reason for the return. Acceptable values are: - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`deliveredTooLate`" - "`expiredItem`" - "`invalidCoupon`" - "`malformedShippingAddress`" - "`other`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`qualityNotAsExpected`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
        reasonText:
          description: The explanation of the reason.
          type: string
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: The amount of tax to be refunded. Optional, but if filled, then priceAmount must be set. Calculated automatically if not provided.
      type: object
    OrdersReturnRefundLineItemResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersReturnRefundLineItemResponse`".'
          type: string
      type: object
    OrdersSetLineItemMetadataRequest:
      properties:
        annotations:
          items:
            $ref: "#/components/schemas/OrderMerchantProvidedAnnotation"
          type: array
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
      type: object
    OrdersSetLineItemMetadataResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersSetLineItemMetadataResponse`".'
          type: string
      type: object
    OrdersShipLineItemsRequest:
      properties:
        lineItems:
          description: Line items to ship.
          items:
            $ref: "#/components/schemas/OrderShipmentLineItemShipment"
          type: array
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        shipmentGroupId:
          description: ID of the shipment group. Required for orders that use the orderinvoices service.
          type: string
        shipmentInfos:
          description: Shipment information. This field is repeated because a single line item can be shipped in several packages (and have several tracking IDs).
          items:
            $ref: "#/components/schemas/OrdersCustomBatchRequestEntryShipLineItemsShipmentInfo"
          type: array
      type: object
    OrdersShipLineItemsResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersShipLineItemsResponse`".'
          type: string
      type: object
    OrdersUpdateLineItemShippingDetailsRequest:
      properties:
        deliverByDate:
          description: Updated delivery by date, in ISO 8601 format. If not specified only ship by date is updated. Provided date should be within 1 year timeframe and can't be a date in the past.
          type: string
        lineItemId:
          description: The ID of the line item to set metadata. Either lineItemId or productId is required.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        productId:
          description: The ID of the product to set metadata. This is the REST ID used in the products service. Either lineItemId or productId is required.
          type: string
        shipByDate:
          description: Updated ship by date, in ISO 8601 format. If not specified only deliver by date is updated. Provided date should be within 1 year timeframe and can't be a date in the past.
          type: string
      type: object
    OrdersUpdateLineItemShippingDetailsResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersUpdateLineItemShippingDetailsResponse`".'
          type: string
      type: object
    OrdersUpdateMerchantOrderIdRequest:
      properties:
        merchantOrderId:
          description: The merchant order id to be assigned to the order. Must be unique per merchant.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
      type: object
    OrdersUpdateMerchantOrderIdResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersUpdateMerchantOrderIdResponse`".'
          type: string
      type: object
    OrdersUpdateShipmentRequest:
      properties:
        carrier:
          description: The carrier handling the shipment. Not updated if missing. See `shipments[].carrier` in the Orders resource representation for a list of acceptable values.
          type: string
        deliveryDate:
          description: Date on which the shipment has been delivered, in ISO 8601 format. Optional and can be provided only if `status` is `delivered`.
          type: string
        lastPickupDate:
          description: Date after which the pickup will expire, in ISO 8601 format. Required only when order is buy-online-pickup-in-store(BOPIS) and `status` is `ready for pickup`.
          type: string
        operationId:
          description: The ID of the operation. Unique across all operations for a given order.
          type: string
        readyPickupDate:
          description: Date on which the shipment has been ready for pickup, in ISO 8601 format. Optional and can be provided only if `status` is `ready for pickup`.
          type: string
        scheduledDeliveryDetails:
          $ref: "#/components/schemas/OrdersCustomBatchRequestEntryUpdateShipmentScheduledDeliveryDetails"
          description: Delivery details of the shipment if scheduling is needed.
        shipmentId:
          description: The ID of the shipment.
          type: string
        status:
          description: 'New status for the shipment. Not updated if missing. Acceptable values are: - "`delivered`" - "`undeliverable`" - "`readyForPickup`" '
          type: string
        trackingId:
          description: The tracking ID for the shipment. Not updated if missing.
          type: string
        undeliveredDate:
          description: Date on which the shipment has been undeliverable, in ISO 8601 format. Optional and can be provided only if `status` is `undeliverable`.
          type: string
      type: object
    OrdersUpdateShipmentResponse:
      properties:
        executionStatus:
          description: 'The status of the execution. Acceptable values are: - "`duplicate`" - "`executed`" '
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#ordersUpdateShipmentResponse`".'
          type: string
      type: object
    PauseBuyOnGoogleProgramRequest:
      description: Request message for the PauseProgram method.
      properties: {}
      type: object
    PaymentServiceProviderLinkInfo:
      description: Additional information required for PAYMENT_SERVICE_PROVIDER link type.
      properties:
        externalAccountBusinessCountry:
          description: The business country of the merchant account as identified by the third party service provider.
          type: string
        externalAccountId:
          description: The id used by the third party service provider to identify the merchant.
          type: string
      type: object
    PickupCarrierService:
      properties:
        carrierName:
          description: The name of the pickup carrier (for example, `"UPS"`). Required.
          type: string
        serviceName:
          description: The name of the pickup service (for example, `"Access point"`). Required.
          type: string
      type: object
    PickupServicesPickupService:
      properties:
        carrierName:
          description: The name of the carrier (for example, `"UPS"`). Always present.
          type: string
        country:
          description: The CLDR country code of the carrier (for example, "US"). Always present.
          type: string
        serviceName:
          description: The name of the pickup service (for example, `"Access point"`). Always present.
          type: string
      type: object
    PosCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/PosCustomBatchRequestEntry"
          type: array
      type: object
    PosCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        inventory:
          $ref: "#/components/schemas/PosInventory"
          description: The inventory to submit. This should be set only if the method is `inventory`.
        merchantId:
          description: The ID of the POS data provider.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" - "`inventory`" - "`sale`" '
          type: string
        sale:
          $ref: "#/components/schemas/PosSale"
          description: The sale information to submit. This should be set only if the method is `sale`.
        store:
          $ref: "#/components/schemas/PosStore"
          description: The store information to submit. This should be set only if the method is `insert`.
        storeCode:
          description: The store code. This should be set only if the method is `delete` or `get`.
          type: string
        targetMerchantId:
          description: The ID of the account for which to get/submit data.
          format: uint64
          type: string
      type: object
    PosCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/PosCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posCustomBatchResponse`".'
          type: string
      type: object
    PosCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors defined if, and only if, the request failed.
        inventory:
          $ref: "#/components/schemas/PosInventory"
          description: The updated inventory information.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posCustomBatchResponseEntry`"'
          type: string
        sale:
          $ref: "#/components/schemas/PosSale"
          description: The updated sale information.
        store:
          $ref: "#/components/schemas/PosStore"
          description: The retrieved or updated store information.
      type: object
    PosDataProviders:
      properties:
        country:
          description: Country code.
          type: string
        posDataProviders:
          description: A list of POS data providers.
          items:
            $ref: "#/components/schemas/PosDataProvidersPosDataProvider"
          type: array
      type: object
    PosDataProvidersPosDataProvider:
      properties:
        displayName:
          description: The display name of Pos data Provider.
          type: string
        fullName:
          description: The full name of this POS data Provider.
          type: string
        providerId:
          description: The ID of the account.
          format: uint64
          type: string
      type: object
    PosInventory:
      description: The absolute quantity of an item available at the given store.
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posInventory`"'
          type: string
        pickupMethod:
          description: Optional. Supported pickup method for this offer. Unless the value is "not supported", this field must be submitted together with `pickupSla`. For accepted attribute values, see the [local product inventory feed specification](https://support.google.com/merchants/answer/3061342).
          type: string
        pickupSla:
          description: Optional. Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the [local product inventory feed specification](https://support.google.com/merchants/answer/3061342).
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The current price of the item.
        quantity:
          description: Required. The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosInventoryRequest:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        pickupMethod:
          description: Optional. Supported pickup method for this offer. Unless the value is "not supported", this field must be submitted together with `pickupSla`. For accepted attribute values, see the [local product inventory feed specification](https://support.google.com/merchants/answer/3061342).
          type: string
        pickupSla:
          description: Optional. Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the [local product inventory feed specification](https://support.google.com/merchants/answer/3061342).
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The current price of the item.
        quantity:
          description: Required. The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosInventoryResponse:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posInventoryResponse`".'
          type: string
        pickupMethod:
          description: Optional. Supported pickup method for this offer. Unless the value is "not supported", this field must be submitted together with `pickupSla`. For accepted attribute values, see the [local product inventory feed specification](https://support.google.com/merchants/answer/3061342).
          type: string
        pickupSla:
          description: Optional. Expected date that an order will be ready for pickup relative to the order date. Must be submitted together with `pickupMethod`. For accepted attribute values, see the [local product inventory feed specification](https://support.google.com/merchants/answer/3061342).
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The current price of the item.
        quantity:
          description: Required. The available quantity of the item.
          format: int64
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posListResponse`".'
          type: string
        resources:
          items:
            $ref: "#/components/schemas/PosStore"
          type: array
      type: object
    PosSale:
      description: The change of the available quantity of an item at the given store.
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posSale`"'
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The price of the item.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosSaleRequest:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The price of the item.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosSaleResponse:
      properties:
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        gtin:
          description: Global Trade Item Number.
          type: string
        itemId:
          description: Required. A unique identifier for the item.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posSaleResponse`".'
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The price of the item.
        quantity:
          description: Required. The relative change of the available quantity. Negative for items returned.
          format: int64
          type: string
        saleId:
          description: A unique ID to group items from the same sale event.
          type: string
        storeCode:
          description: Required. The identifier of the merchant's store. Either a `storeCode` inserted through the API or the code of the store in a Business Profile.
          type: string
        targetCountry:
          description: Required. The CLDR territory code for the item.
          type: string
        timestamp:
          description: Required. The inventory timestamp, in ISO 8601 format.
          type: string
      type: object
    PosStore:
      description: Store resource.
      properties:
        gcidCategory:
          description: The business type of the store.
          items:
            type: string
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#posStore`"'
          type: string
        matchingStatus:
          description: 'Output only. The matching status of POS store and Google Business Profile store. Possible values are: - "`matched`": The POS store is successfully matched with the Google Business Profile store. - "`failed`": The POS store is not matched with the Google Business Profile store. See matching_status_hint for further details. Note that there is up to 48 hours propagation delay for changes in Merchant Center (e.g. creation of new account, accounts linking) and Google Business Profile (e.g. store address update) which may affect the matching status. In such cases, after a delay call [pos.list](https://developers.google.com/shopping-content/reference/rest/v2.1/pos/list) to retrieve the updated matching status. '
          readOnly: true
          type: string
        matchingStatusHint:
          description: "Output only. The hint of why the matching has failed. This is only set when matching_status=failed. Possible values are: - \"`linked-store-not-found`\": There aren't any Google Business Profile stores available for matching. Connect your Merchant Center account with the Google Business Profile account. Or add a new Google Business Profile store corresponding to the POS store. - \"`store-match-not-found`\": The provided POS store couldn't be matched to any of the connected Google Business Profile stores. Merchant Center account is connected correctly and stores are available on Google Business Profile, but POS store location address does not match with Google Business Profile stores' addresses. Update POS store address or Google Business Profile store address to match correctly. - \"`store-match-unverified`\": The provided POS store couldn't be matched to any of the connected Google Business Profile stores, as the matched Google Business Profile store is unverified. Go through the Google Business Profile verification process to match correctly. "
          readOnly: true
          type: string
        phoneNumber:
          description: The store phone number.
          type: string
        placeId:
          description: The Google Place Id of the store location.
          type: string
        storeAddress:
          description: Required. The street address of the store.
          type: string
        storeCode:
          description: Required. A store identifier that is unique for the given merchant.
          type: string
        storeName:
          description: The merchant or store name.
          type: string
        websiteUrl:
          description: The website url for the store or merchant.
          type: string
      type: object
    PostalCodeGroup:
      properties:
        country:
          description: The CLDR territory code of the country the postal code group applies to. Required.
          type: string
        name:
          description: The name of the postal code group, referred to in headers. Required.
          type: string
        postalCodeRanges:
          description: A range of postal codes. Required.
          items:
            $ref: "#/components/schemas/PostalCodeRange"
          type: array
      type: object
    PostalCodeRange:
      properties:
        postalCodeRangeBegin:
          description: 'A postal code or a pattern of the form `prefix*` denoting the inclusive lower bound of the range defining the area. Examples values: `"94108"`, `"9410*"`, `"9*"`. Required.'
          type: string
        postalCodeRangeEnd:
          description: "A postal code or a pattern of the form `prefix*` denoting the inclusive upper bound of the range defining the area. It must have the same length as `postalCodeRangeBegin`: if `postalCodeRangeBegin` is a postal code then `postalCodeRangeEnd` must be a postal code too; if `postalCodeRangeBegin` is a pattern then `postalCodeRangeEnd` must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching `postalCodeRangeBegin`."
          type: string
      type: object
    Price:
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
    PriceAmount:
      description: The price represented as a number and currency.
      properties:
        currency:
          description: The currency of the price.
          type: string
        value:
          description: The price represented as a number.
          type: string
      type: object
    PriceCompetitiveness:
      description: Price competitiveness fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceCompetitivenessProductView`. https://support.google.com/merchants/answer/9626903
      properties:
        benchmarkPriceCurrencyCode:
          description: The price benchmark currency (ISO 4217 code).
          type: string
        benchmarkPriceMicros:
          description: The latest available price benchmark in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) for the product's catalog in the benchmark country.
          format: int64
          type: string
        countryCode:
          description: The country of the price benchmark (ISO 3166 code).
          type: string
      type: object
    PriceInsights:
      description: Price insights fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceInsightsProductView`. https://support.google.com/merchants/answer/11916926
      properties:
        predictedClicksChangeFraction:
          description: The predicted change in clicks as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in clicks.
          format: double
          type: number
        predictedConversionsChangeFraction:
          description: The predicted change in conversions as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in conversions).
          format: double
          type: number
        predictedGrossProfitChangeFraction:
          description: "*Deprecated*: This field is no longer supported and will start returning 0. The predicted change in gross profit as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in gross profit."
          format: double
          type: number
        predictedImpressionsChangeFraction:
          description: The predicted change in impressions as a fraction after introducing the suggested price compared to current active price. For example, 0.05 is a 5% predicted increase in impressions.
          format: double
          type: number
        predictedMonthlyGrossProfitChangeCurrencyCode:
          description: "*Deprecated*: This field is no longer supported and will start returning USD for all requests. The predicted monthly gross profit change currency (ISO 4217 code)."
          type: string
        predictedMonthlyGrossProfitChangeMicros:
          description: "*Deprecated*: This field is no longer supported and will start returning 0. The predicted change in gross profit in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) after introducing the suggested price for a month compared to current active price."
          format: int64
          type: string
        suggestedPriceCurrencyCode:
          description: The suggested price currency (ISO 4217 code).
          type: string
        suggestedPriceMicros:
          description: The latest suggested price in micros (1 millionth of a standard unit, 1 USD = 1000000 micros) for the product.
          format: int64
          type: string
      type: object
    Product:
      description: " Required product attributes are primarily defined by the product data specification. See the Product Data Specification Help Center article for information. Product data. After inserting, updating, or deleting a product, it may take several minutes before changes take effect."
      properties:
        additionalImageLinks:
          description: Additional URLs of images of the item.
          items:
            type: string
          type: array
        additionalSizeType:
          description: Additional cut of the item. Used together with size_type to represent combined size types for apparel items.
          type: string
        adsGrouping:
          description: Used to group items in an arbitrary way. Only for CPA%, discouraged otherwise.
          type: string
        adsLabels:
          description: Similar to ads_grouping, but only works on CPC.
          items:
            type: string
          type: array
        adsRedirect:
          description: Allows advertisers to override the item URL when the product is shown within the context of Product Ads.
          type: string
        adult:
          description: Should be set to true if the item is targeted towards adults.
          type: boolean
        ageGroup:
          description: Target age group of the item.
          type: string
        availability:
          description: Availability status of the item.
          type: string
        availabilityDate:
          description: The day a pre-ordered product becomes available for delivery, in ISO 8601 format.
          type: string
        brand:
          description: Brand of the item.
          type: string
        canonicalLink:
          description: URL for the canonical version of your item's landing page.
          type: string
        certifications:
          description: Product [certification](https://support.google.com/merchants/answer/13528839), introduced for EU energy efficiency labeling compliance using the [EU EPREL](https://eprel.ec.europa.eu/screen/home) database.
          items:
            $ref: "#/components/schemas/ProductCertification"
          type: array
        channel:
          description: "Required. The item's channel (online or local). Acceptable values are: - \"`local`\" - \"`online`\" "
          type: string
        cloudExportAdditionalProperties:
          description: Extra fields to export to the Cloud Retail program.
          items:
            $ref: "#/components/schemas/CloudExportAdditionalProperties"
          type: array
        color:
          description: Color of the item.
          type: string
        condition:
          description: Condition or state of the item.
          type: string
        contentLanguage:
          description: Required. The two-letter ISO 639-1 language code for the item.
          type: string
        costOfGoodsSold:
          $ref: "#/components/schemas/Price"
          description: Cost of goods sold. Used for gross profit reporting.
        customAttributes:
          description: 'A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form (for example, `{ "name": "size type", "value": "regular" }`). This is useful for submitting attributes not explicitly exposed by the API, such as additional attributes used for Buy on Google (formerly known as Shopping Actions).'
          items:
            $ref: "#/components/schemas/CustomAttribute"
          type: array
        customLabel0:
          description: Custom label 0 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of items in a Shopping campaign.
          type: string
        customLabel4:
          description: Custom label 4 for custom grouping of items in a Shopping campaign.
          type: string
        description:
          description: Description of the item.
          type: string
        disclosureDate:
          description: The date time when an offer becomes visible in search results across Google’s YouTube surfaces, in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format. See [Disclosure date](https://support.google.com/merchants/answer/13034208) for more information.
          type: string
        displayAdsId:
          description: An identifier for an item for dynamic remarketing campaigns.
          type: string
        displayAdsLink:
          description: URL directly to your item's landing page for dynamic remarketing campaigns.
          type: string
        displayAdsSimilarIds:
          description: Advertiser-specified recommendations.
          items:
            type: string
          type: array
        displayAdsTitle:
          description: Title of an item for dynamic remarketing campaigns.
          type: string
        displayAdsValue:
          description: Offer margin for dynamic remarketing campaigns.
          format: double
          type: number
        energyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        excludedDestinations:
          description: The list of destinations to exclude for this target (corresponds to cleared check boxes in Merchant Center). Products that are excluded from all destinations for more than 7 days are automatically deleted.
          items:
            type: string
          type: array
        expirationDate:
          description: Date on which the item should expire, as specified upon insertion, in ISO 8601 format. The actual expiration date in Google Shopping is exposed in `productstatuses` as `googleExpirationDate` and might be earlier if `expirationDate` is too far in the future.
          type: string
        externalSellerId:
          description: Required for multi-seller accounts. Use this attribute if you're a marketplace uploading products for various sellers to your multi-seller account.
          type: string
        feedLabel:
          description: Feed label for the item. Either `targetCountry` or `feedLabel` is required. Must be less than or equal to 20 uppercase letters (A-Z), numbers (0-9), and dashes (-).
          type: string
        gender:
          description: Target gender of the item.
          type: string
        googleProductCategory:
          description: Google's category of the item (see [Google product taxonomy](https://support.google.com/merchants/answer/1705911)). When querying products, this field will contain the user provided value. There is currently no way to get back the auto assigned google product categories through the API.
          type: string
        gtin:
          description: Global Trade Item Number (GTIN) of the item.
          type: string
        id:
          description: "The REST ID of the product. Content API methods that operate on products take this as their `productId` parameter. The REST ID for a product has one of the 2 forms channel:contentLanguage: targetCountry: offerId or channel:contentLanguage:feedLabel: offerId."
          type: string
        identifierExists:
          description: False when the item does not have unique product identifiers appropriate to its category, such as GTIN, MPN, and brand. Required according to the Unique Product Identifier Rules for all target countries except for Canada.
          type: boolean
        imageLink:
          description: URL of an image of the item.
          type: string
        includedDestinations:
          description: The list of destinations to include for this target (corresponds to checked check boxes in Merchant Center). Default destinations are always included unless provided in `excludedDestinations`.
          items:
            type: string
          type: array
        installment:
          $ref: "#/components/schemas/Installment"
          description: Number and amount of installments to pay for an item.
        isBundle:
          description: Whether the item is a merchant-defined bundle. A bundle is a custom grouping of different products sold by a merchant for a single price.
          type: boolean
        itemGroupId:
          description: Shared identifier for all variants of the same product.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#product`"'
          type: string
        lifestyleImageLinks:
          description: Additional URLs of lifestyle images of the item. Used to explicitly identify images that showcase your item in a real-world context. See the Help Center article for more information.
          items:
            type: string
          type: array
        link:
          description: URL directly linking to your item's page on your website.
          type: string
        linkTemplate:
          description: URL template for merchant hosted local storefront.
          type: string
        loyaltyPoints:
          $ref: "#/components/schemas/LoyaltyPoints"
          description: Loyalty points that users receive after purchasing the item. Japan only.
        material:
          description: The material of which the item is made.
          type: string
        maxEnergyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        maxHandlingTime:
          description: Maximal product handling time (in business days).
          format: int64
          type: string
        minEnergyEfficiencyClass:
          description: The energy efficiency class as defined in EU directive 2010/30/EU.
          type: string
        minHandlingTime:
          description: Minimal product handling time (in business days).
          format: int64
          type: string
        mobileLink:
          description: URL for the mobile-optimized version of your item's landing page.
          type: string
        mobileLinkTemplate:
          description: URL template for merchant hosted local storefront optimized for mobile devices.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item.
          type: string
        multipack:
          description: The number of identical products in a merchant-defined multipack.
          format: int64
          type: string
        offerId:
          description: Required. A unique identifier for the item. Leading and trailing whitespaces are stripped and multiple whitespaces are replaced by a single whitespace upon submission. Only valid unicode characters are accepted. See the products feed specification for details. *Note:* Content API methods that operate on products take the REST ID of the product, *not* this identifier.
          type: string
        pattern:
          description: The item's pattern (for example, polka dots).
          type: string
        pause:
          description: 'Publication of this item should be temporarily paused. Acceptable values are: - "`ads`" '
          type: string
        pickupMethod:
          description: 'The pick up option for the item. Acceptable values are: - "`buy`" - "`reserve`" - "`ship to store`" - "`not supported`" '
          type: string
        pickupSla:
          description: 'Item store pickup timeline. Acceptable values are: - "`same day`" - "`next day`" - "`2-day`" - "`3-day`" - "`4-day`" - "`5-day`" - "`6-day`" - "`7-day`" - "`multi-week`" '
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Price of the item.
        productDetails:
          description: Technical specification or additional product details.
          items:
            $ref: "#/components/schemas/ProductProductDetail"
          type: array
        productHeight:
          $ref: "#/components/schemas/ProductDimension"
          description: The height of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).
        productHighlights:
          description: Bullet points describing the most relevant highlights of a product.
          items:
            type: string
          type: array
        productLength:
          $ref: "#/components/schemas/ProductDimension"
          description: The length of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).
        productTypes:
          description: Categories of the item (formatted as in product data specification).
          items:
            type: string
          type: array
        productWeight:
          $ref: "#/components/schemas/ProductWeight"
          description: The weight of the product in the units provided. The value must be between 0 (exclusive) and 2000 (inclusive).
        productWidth:
          $ref: "#/components/schemas/ProductDimension"
          description: The width of the product in the units provided. The value must be between 0 (exclusive) and 3000 (inclusive).
        promotionIds:
          description: The unique ID of a promotion.
          items:
            type: string
          type: array
        salePrice:
          $ref: "#/components/schemas/Price"
          description: Advertised sale price of the item.
        salePriceEffectiveDate:
          description: Date range during which the item is on sale (see product data specification ).
          type: string
        sellOnGoogleQuantity:
          description: The quantity of the product that is available for selling on Google. Supported only for online products.
          format: int64
          type: string
        shipping:
          description: Shipping rules.
          items:
            $ref: "#/components/schemas/ProductShipping"
          type: array
        shippingHeight:
          $ref: "#/components/schemas/ProductShippingDimension"
          description: Height of the item for shipping.
        shippingLabel:
          description: The shipping label of the product, used to group product in account-level shipping rules.
          type: string
        shippingLength:
          $ref: "#/components/schemas/ProductShippingDimension"
          description: Length of the item for shipping.
        shippingWeight:
          $ref: "#/components/schemas/ProductShippingWeight"
          description: Weight of the item for shipping.
        shippingWidth:
          $ref: "#/components/schemas/ProductShippingDimension"
          description: Width of the item for shipping.
        shoppingAdsExcludedCountries:
          description: List of country codes (ISO 3166-1 alpha-2) to exclude the offer from Shopping Ads destination. Countries from this list are removed from countries configured in MC feed settings.
          items:
            type: string
          type: array
        sizeSystem:
          description: System in which the size is specified. Recommended for apparel items.
          type: string
        sizeType:
          description: The cut of the item. Recommended for apparel items.
          type: string
        sizes:
          description: Size of the item. Only one value is allowed. For variants with different sizes, insert a separate product for each size with the same `itemGroupId` value (see size definition).
          items:
            type: string
          type: array
        source:
          description: 'The source of the offer, that is, how the offer was created. Acceptable values are: - "`api`" - "`crawl`" - "`feed`" '
          type: string
        subscriptionCost:
          $ref: "#/components/schemas/ProductSubscriptionCost"
          description: Number of periods (months or years) and amount of payment per period for an item with an associated subscription contract.
        targetCountry:
          description: Required. The CLDR territory code for the item's country of sale.
          type: string
        taxCategory:
          description: The tax category of the product, used to configure detailed tax nexus in account-level tax settings.
          type: string
        taxes:
          description: Tax information.
          items:
            $ref: "#/components/schemas/ProductTax"
          type: array
        title:
          description: Title of the item.
          type: string
        transitTimeLabel:
          description: The transit time label of the product, used to group product in account-level transit time tables.
          type: string
        unitPricingBaseMeasure:
          $ref: "#/components/schemas/ProductUnitPricingBaseMeasure"
          description: The preference of the denominator of the unit price.
        unitPricingMeasure:
          $ref: "#/components/schemas/ProductUnitPricingMeasure"
          description: The measure and dimension of an item.
        virtualModelLink:
          description: URL of the 3D model of the item to provide more visuals.
          type: string
      type: object
    ProductAmount:
      properties:
        priceAmount:
          $ref: "#/components/schemas/Price"
          description: The pre-tax or post-tax price depending on the location of the order.
        remittedTaxAmount:
          $ref: "#/components/schemas/Price"
          description: Remitted tax value.
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: Tax value.
      type: object
    ProductCertification:
      description: Product [certification](https://support.google.com/merchants/answer/13528839), introduced for EU energy efficiency labeling compliance using the [EU EPREL](https://eprel.ec.europa.eu/screen/home) database.
      properties:
        certificationAuthority:
          description: The certification authority, for example "European_Commission". Maximum length is 2000 characters.
          type: string
        certificationCode:
          description: The certification code, for eaxample "123456". Maximum length is 2000 characters.
          type: string
        certificationName:
          description: The name of the certification, for example "EPREL". Maximum length is 2000 characters.
          type: string
      type: object
    ProductCluster:
      description: Product cluster fields. A product cluster is a grouping for different offers that represent the same product. Values are only set for fields requested explicitly in the request's search query.
      properties:
        brand:
          description: Brand of the product cluster.
          type: string
        brandInventoryStatus:
          description: Tells if there is at least one product of the brand currently `IN_STOCK` in your product feed across multiple countries, all products are `OUT_OF_STOCK` in your product feed, or `NOT_IN_INVENTORY`. The field doesn't take the Best Sellers report country filter into account.
          enum:
            - INVENTORY_STATUS_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - NOT_IN_INVENTORY
          type: string
        categoryL1:
          description: Product category (1st level) of the product cluster, represented in Google's product taxonomy.
          type: string
        categoryL2:
          description: Product category (2nd level) of the product cluster, represented in Google's product taxonomy.
          type: string
        categoryL3:
          description: Product category (3rd level) of the product cluster, represented in Google's product taxonomy.
          type: string
        categoryL4:
          description: Product category (4th level) of the product cluster, represented in Google's product taxonomy.
          type: string
        categoryL5:
          description: Product category (5th level) of the product cluster, represented in Google's product taxonomy.
          type: string
        inventoryStatus:
          description: Tells whether the product cluster is `IN_STOCK` in your product feed across multiple countries, `OUT_OF_STOCK` in your product feed, or `NOT_IN_INVENTORY` at all. The field doesn't take the Best Sellers report country filter into account.
          enum:
            - INVENTORY_STATUS_UNSPECIFIED
            - IN_STOCK
            - OUT_OF_STOCK
            - NOT_IN_INVENTORY
          type: string
        title:
          description: Title of the product cluster.
          type: string
        variantGtins:
          description: GTINs of example variants of the product cluster.
          items:
            type: string
          type: array
      type: object
    ProductDeliveryTime:
      description: The estimated days to deliver a product after an order is placed. Only authorized shipping signals partners working with a merchant can use this resource. Merchants should use the [`products`](https://developers.google.com/shopping-content/reference/rest/v2.1/products#productshipping) resource instead.
      properties:
        areaDeliveryTimes:
          description: Required. A set of associations between `DeliveryArea` and `DeliveryTime` entries. The total number of `areaDeliveryTimes` can be at most 100.
          items:
            $ref: "#/components/schemas/ProductDeliveryTimeAreaDeliveryTime"
          type: array
        productId:
          $ref: "#/components/schemas/ProductId"
          description: Required. The `id` of the product.
      type: object
    ProductDeliveryTimeAreaDeliveryTime:
      description: A pairing of `DeliveryArea` associated with a `DeliveryTime` for this product.
      properties:
        deliveryArea:
          $ref: "#/components/schemas/DeliveryArea"
          description: Required. The delivery area associated with `deliveryTime` for this product.
        deliveryTime:
          $ref: "#/components/schemas/ProductDeliveryTimeAreaDeliveryTimeDeliveryTime"
          description: Required. The delivery time associated with `deliveryArea` for this product.
      type: object
    ProductDeliveryTimeAreaDeliveryTimeDeliveryTime:
      description: A delivery time for this product.
      properties:
        maxHandlingTimeDays:
          description: Required. The maximum number of business days (inclusive) between when an order is placed and when the product ships. If a product ships in the same day, set this value to 0.
          format: int32
          type: integer
        maxTransitTimeDays:
          description: Required. The maximum number of business days (inclusive) between when the product ships and when the product is delivered.
          format: int32
          type: integer
        minHandlingTimeDays:
          description: Required. The minimum number of business days (inclusive) between when an order is placed and when the product ships. If a product ships in the same day, set this value to 0.
          format: int32
          type: integer
        minTransitTimeDays:
          description: Required. The minimum number of business days (inclusive) between when the product ships and when the product is delivered.
          format: int32
          type: integer
      type: object
    ProductDimension:
      properties:
        unit:
          description: 'Required. The length units. Acceptable values are: - "`in`" - "`cm`" '
          type: string
        value:
          description: Required. The length value represented as a number. The value can have a maximum precision of four decimal places.
          format: double
          type: number
      type: object
    ProductId:
      description: The Content API ID of the product.
      properties:
        productId:
          description: The Content API ID of the product, in the form `channel:contentLanguage:targetCountry:offerId`.
          type: string
      type: object
    ProductIssue:
      description: An issue affecting specific product.
      properties:
        actions:
          description: A list of actionable steps that can be executed to solve the issue. An example is requesting a re-review or providing arguments when merchant disagrees with the issue. Actions that are supported in (your) third-party application can be rendered as buttons and should be available to merchant when they expand the issue.
          items:
            $ref: "#/components/schemas/Action"
          type: array
        impact:
          $ref: "#/components/schemas/ProductIssueImpact"
          description: Clarifies the severity of the issue. The summarizing message, if present, should be shown right under the title for each issue. It helps merchants to quickly understand the impact of the issue. The detailed breakdown helps the merchant to fully understand the impact of the issue. It can be rendered as dialog that opens when the merchant mouse over the summarized impact statement. Issues with different severity can be styled differently. They may use a different color or icon to signal the difference between `ERROR`, `WARNING` and `INFO`.
        prerenderedContent:
          description: "Details of the issue as a pre-rendered HTML. HTML elements contain CSS classes that can be used to customize the style of the content. Always sanitize the HTML before embedding it directly to your application. The sanitizer needs to allow basic HTML tags, such as: `div`, `span`, `p`, `a`, `ul`, `li`, `table`, `tr`, `td`. For example, you can use [DOMPurify](https://www.npmjs.com/package/dompurify). CSS classes: * `issue-detail` - top level container for the detail of the issue * `callout-banners` - section of the `issue-detail` with callout banners * `callout-banner` - single callout banner, inside `callout-banners` * `callout-banner-info` - callout with important information (default) * `callout-banner-warning` - callout with a warning * `callout-banner-error` - callout informing about an error (most severe) * `issue-content` - section of the `issue-detail`, contains multiple `content-element` * `content-element` - content element such as a list, link or paragraph, inside `issue-content` * `root-causes` - unordered list with items describing root causes of the issue, inside `issue-content` * `root-causes-intro` - intro text before the `root-causes` list, inside `issue-content` * `segment` - section of the text, `span` inside paragraph * `segment-attribute` - section of the text that represents a product attribute, for example 'image\\_link' * `segment-literal` - section of the text that contains a special value, for example '0-1000 kg' * `segment-bold` - section of the text that should be rendered as bold * `segment-italic` - section of the text that should be rendered as italic * `tooltip` - used on paragraphs that should be rendered with a tooltip. A section of the text in such a paragraph will have a class `tooltip-text` and is intended to be shown in a mouse over dialog. If the style is not used, the `tooltip-text` section would be shown on a new line, after the main part of the text. * `tooltip-text` - marks a section of the text within a `tooltip`, that is intended to be shown in a mouse over dialog. * `tooltip-icon` - marks a section of the text within a `tooltip`, that can be replaced with a tooltip icon, for example '?' or 'i'. By default, this section contains a `br` tag, that is separating the main text and the tooltip text when the style is not used. * `tooltip-style-question` - the tooltip shows helpful information, can use the '?' as an icon. * `tooltip-style-info` - the tooltip adds additional information fitting to the context, can use the 'i' as an icon. * `content-moderation` - marks the paragraph that explains how the issue was identified. * `new-element` - Present for new elements added to the pre-rendered content in the future. To make sure that a new content element does not break your style, you can hide everything with this class."
          type: string
        title:
          description: Title of the issue.
          type: string
      type: object
    ProductIssueImpact:
      description: Overall impact of product issue.
      properties:
        breakdowns:
          description: Detailed impact breakdown. Explains the types of restriction the issue has in different shopping destinations and territory. If present, it should be rendered to the merchant. Can be shown as a mouse over dropdown or a dialog. Each breakdown item represents a group of regions with the same impact details.
          items:
            $ref: "#/components/schemas/Breakdown"
          type: array
        message:
          description: 'Optional. Message summarizing the overall impact of the issue. If present, it should be rendered to the merchant. For example: "Limits visibility in France"'
          type: string
        severity:
          description: The severity of the issue.
          enum:
            - SEVERITY_UNSPECIFIED
            - ERROR
            - WARNING
            - INFO
          type: string
      type: object
    ProductProductDetail:
      properties:
        attributeName:
          description: The name of the product detail.
          type: string
        attributeValue:
          description: The value of the product detail.
          type: string
        sectionName:
          description: The section header used to group a set of product details.
          type: string
      type: object
    ProductShipping:
      properties:
        country:
          description: The CLDR territory code of the country to which an item will ship.
          type: string
        locationGroupName:
          description: The location where the shipping is applicable, represented by a location group name.
          type: string
        locationId:
          description: The numeric ID of a location that the shipping rate applies to as defined in the Google Ads API.
          format: int64
          type: string
        maxHandlingTime:
          description: Maximum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.
          format: int64
          type: string
        maxTransitTime:
          description: Maximum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. Both maxHandlingTime and maxTransitTime are required if providing shipping speeds.
          format: int64
          type: string
        minHandlingTime:
          description: Minimum handling time (inclusive) between when the order is received and shipped in business days. 0 means that the order is shipped on the same day as it's received if it happens before the cut-off time. minHandlingTime can only be present together with maxHandlingTime; but it's not required if maxHandlingTime is present.
          format: int64
          type: string
        minTransitTime:
          description: Minimum transit time (inclusive) between when the order has shipped and when it's delivered in business days. 0 means that the order is delivered on the same day as it ships. minTransitTime can only be present together with maxTransitTime; but it's not required if maxTransitTime is present.
          format: int64
          type: string
        postalCode:
          description: The postal code range that the shipping rate applies to, represented by a postal code, a postal code prefix followed by a * wildcard, a range between two postal codes or two postal code prefixes of equal length.
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Fixed shipping price, represented as a number.
        region:
          description: The geographic region to which a shipping rate applies.
          type: string
        service:
          description: A free-form description of the service class or delivery speed.
          type: string
      type: object
    ProductShippingDimension:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The dimension of the product used to calculate the shipping cost of the item.
          format: double
          type: number
      type: object
    ProductShippingWeight:
      properties:
        unit:
          description: The unit of value.
          type: string
        value:
          description: The weight of the product used to calculate the shipping cost of the item.
          format: double
          type: number
      type: object
    ProductStatus:
      description: The status of a product, that is, information about a product computed asynchronously.
      properties:
        creationDate:
          description: Date on which the item has been created, in ISO 8601 format.
          type: string
        destinationStatuses:
          description: The intended destinations for the product.
          items:
            $ref: "#/components/schemas/ProductStatusDestinationStatus"
          type: array
        googleExpirationDate:
          description: Date on which the item expires in Google Shopping, in ISO 8601 format.
          type: string
        itemLevelIssues:
          description: A list of all issues associated with the product.
          items:
            $ref: "#/components/schemas/ProductStatusItemLevelIssue"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productStatus`"'
          type: string
        lastUpdateDate:
          description: Date on which the item has been last updated, in ISO 8601 format.
          type: string
        link:
          description: The link to the product.
          type: string
        productId:
          description: The ID of the product for which status is reported.
          type: string
        title:
          description: The title of the product.
          type: string
      type: object
    ProductStatusDestinationStatus:
      properties:
        approvedCountries:
          description: List of country codes (ISO 3166-1 alpha-2) where the offer is approved.
          items:
            type: string
          type: array
        destination:
          description: The name of the destination
          type: string
        disapprovedCountries:
          description: List of country codes (ISO 3166-1 alpha-2) where the offer is disapproved.
          items:
            type: string
          type: array
        pendingCountries:
          description: List of country codes (ISO 3166-1 alpha-2) where the offer is pending approval.
          items:
            type: string
          type: array
        status:
          deprecated: true
          description: Deprecated. Destination approval status in `targetCountry` of the offer.
          type: string
      type: object
    ProductStatusItemLevelIssue:
      properties:
        applicableCountries:
          description: List of country codes (ISO 3166-1 alpha-2) where issue applies to the offer.
          items:
            type: string
          type: array
        attributeName:
          description: The attribute's name, if the issue is caused by a single attribute.
          type: string
        code:
          description: The error code of the issue.
          type: string
        description:
          description: A short issue description in English.
          type: string
        destination:
          description: The destination the issue applies to.
          type: string
        detail:
          description: A detailed issue description in English.
          type: string
        documentation:
          description: The URL of a web page to help with resolving this issue.
          type: string
        resolution:
          description: Whether the issue can be resolved by the merchant.
          type: string
        servability:
          description: How this issue affects serving of the offer.
          type: string
      type: object
    ProductSubscriptionCost:
      properties:
        amount:
          $ref: "#/components/schemas/Price"
          description: The amount the buyer has to pay per subscription period.
        period:
          description: The type of subscription period.
          type: string
        periodLength:
          description: The number of subscription periods the buyer has to pay.
          format: int64
          type: string
      type: object
    ProductTax:
      properties:
        country:
          description: The country within which the item is taxed, specified as a CLDR territory code.
          type: string
        locationId:
          description: The numeric ID of a location that the tax rate applies to as defined in the Google Ads API.
          format: int64
          type: string
        postalCode:
          description: "The postal code range that the tax rate applies to, represented by a ZIP code, a ZIP code prefix using * wildcard, a range between two ZIP codes or two ZIP code prefixes of equal length. Examples: 94114, 94*, 94002-95460, 94*-95*."
          type: string
        rate:
          description: The percentage of tax rate that applies to the item price.
          format: double
          type: number
        region:
          description: The geographic region to which the tax rate applies.
          type: string
        taxShip:
          description: Should be set to true if tax is charged on shipping.
          type: boolean
      type: object
    ProductUnitPricingBaseMeasure:
      properties:
        unit:
          description: The unit of the denominator.
          type: string
        value:
          description: The denominator of the unit price.
          format: int64
          type: string
      type: object
    ProductUnitPricingMeasure:
      properties:
        unit:
          description: The unit of the measure.
          type: string
        value:
          description: The measure of an item.
          format: double
          type: number
      type: object
    ProductView:
      description: Product fields. Values are only set for fields requested explicitly in the request's search query.
      properties:
        aggregatedDestinationStatus:
          description: Aggregated destination status.
          enum:
            - AGGREGATED_STATUS_UNSPECIFIED
            - NOT_ELIGIBLE_OR_DISAPPROVED
            - PENDING
            - ELIGIBLE_LIMITED
            - ELIGIBLE
          type: string
        availability:
          description: Availability of the product.
          type: string
        brand:
          description: Brand of the product.
          type: string
        categoryL1:
          description: First level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL2:
          description: Second level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL3:
          description: Third level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL4:
          description: Fourth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        categoryL5:
          description: Fifth level of the product category in [Google's product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        channel:
          description: Channel of the product (online versus local).
          enum:
            - CHANNEL_UNSPECIFIED
            - LOCAL
            - ONLINE
          type: string
        condition:
          description: Condition of the product.
          type: string
        creationTime:
          description: The time the merchant created the product in timestamp seconds.
          format: google-datetime
          type: string
        currencyCode:
          description: Product price currency code (for example, ISO 4217). Absent if product price is not available.
          type: string
        expirationDate:
          $ref: "#/components/schemas/Date"
          description: Expiration date for the product. Specified on insertion.
        gtin:
          description: GTIN of the product.
          items:
            type: string
          type: array
        id:
          description: The REST ID of the product, in the form of channel:contentLanguage:targetCountry:offerId. Content API methods that operate on products take this as their productId parameter. Should always be included in the SELECT clause.
          type: string
        itemGroupId:
          description: Item group ID provided by the merchant for grouping variants together.
          type: string
        itemIssues:
          description: List of item issues for the product.
          items:
            $ref: "#/components/schemas/ProductViewItemIssue"
          type: array
        languageCode:
          description: Language code of the product in BCP 47 format.
          type: string
        offerId:
          description: Merchant-provided id of the product.
          type: string
        priceMicros:
          description: Product price specified as micros (1 millionth of a standard unit, 1 USD = 1000000 micros) in the product currency. Absent in case the information about the price of the product is not available.
          format: int64
          type: string
        productTypeL1:
          description: First level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        productTypeL2:
          description: Second level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        productTypeL3:
          description: Third level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        productTypeL4:
          description: Fourth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        productTypeL5:
          description: Fifth level of the product type in merchant's own [product taxonomy](https://support.google.com/merchants/answer/6324436).
          type: string
        shippingLabel:
          description: The normalized shipping label specified in the feed
          type: string
        title:
          description: Title of the product.
          type: string
      type: object
    ProductViewItemIssue:
      description: Item issue associated with the product.
      properties:
        issueType:
          $ref: "#/components/schemas/ProductViewItemIssueItemIssueType"
          description: Item issue type.
        resolution:
          description: Item issue resolution.
          enum:
            - UNKNOWN
            - MERCHANT_ACTION
            - PENDING_PROCESSING
          type: string
        severity:
          $ref: "#/components/schemas/ProductViewItemIssueItemIssueSeverity"
          description: Item issue severity.
      type: object
    ProductViewItemIssueIssueSeverityPerDestination:
      description: Issue severity for all affected regions in a destination.
      properties:
        demotedCountries:
          description: List of demoted countries in the destination.
          items:
            type: string
          type: array
        destination:
          description: Issue destination.
          type: string
        disapprovedCountries:
          description: List of disapproved countries in the destination.
          items:
            type: string
          type: array
      type: object
    ProductViewItemIssueItemIssueSeverity:
      description: Severity of an issue per destination in a region, and aggregated severity.
      properties:
        aggregatedSeverity:
          description: Severity of an issue aggregated for destination.
          enum:
            - AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED
            - DISAPPROVED
            - DEMOTED
            - PENDING
          type: string
        severityPerDestination:
          description: Item issue severity for every destination.
          items:
            $ref: "#/components/schemas/ProductViewItemIssueIssueSeverityPerDestination"
          type: array
      type: object
    ProductViewItemIssueItemIssueType:
      description: Type of the item issue.
      properties:
        canonicalAttribute:
          description: Canonical attribute name for attribute-specific issues.
          type: string
        code:
          description: Error code of the issue.
          type: string
      type: object
    ProductWeight:
      properties:
        unit:
          description: 'Required. The weight unit. Acceptable values are: - "`g`" - "`kg`" - "`oz`" - "`lb`" '
          type: string
        value:
          description: Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.
          format: double
          type: number
      type: object
    ProductsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ProductsCustomBatchRequestEntry"
          type: array
      type: object
    ProductsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch products request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        feedId:
          description: The Content API Supplemental Feed ID. If present then product insertion or deletion applies to a supplemental feed instead of primary Content API feed.
          format: uint64
          type: string
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" - "`update`" '
          type: string
        product:
          $ref: "#/components/schemas/Product"
          description: The product to insert or update. Only required if the method is `insert` or `update`. If the `update` method is used with `updateMask` only to delete a field, then this isn't required. For example, setting `salePrice` on the `updateMask` and not providing a `product` will result in an existing sale price on the product specified by `productId` being deleted.
        productId:
          description: The ID of the product to get or mutate. Only defined if the method is `get`, `delete`, or `update`.
          type: string
        updateMask:
          description: 'The comma-separated list of product attributes to be updated. Example: `"title,salePrice"`. Attributes specified in the update mask without a value specified in the body will be deleted from the product. *You must specify the update mask to delete attributes.* Only top-level product attributes can be updated. If not defined, product attributes with set values will be updated and other attributes will stay unchanged. Only defined if the method is `update`.'
          format: google-fieldmask
          type: string
      type: object
    ProductsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ProductsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsCustomBatchResponse`".'
          type: string
      type: object
    ProductsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch products response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsCustomBatchResponseEntry`"'
          type: string
        product:
          $ref: "#/components/schemas/Product"
          description: The inserted product. Only defined if the method is `insert` and if the request was successful.
      type: object
    ProductsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/Product"
          type: array
      type: object
    ProductstatusesCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ProductstatusesCustomBatchRequestEntry"
          type: array
      type: object
    ProductstatusesCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch productstatuses request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        destinations:
          description: If set, only issues for the specified destinations are returned, otherwise only issues for the Shopping destination.
          items:
            type: string
          type: array
        includeAttributes:
          deprecated: true
          description: "Deprecated: Setting this field has no effect and attributes are never included."
          type: boolean
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" '
          type: string
        productId:
          description: The ID of the product whose status to get.
          type: string
      type: object
    ProductstatusesCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ProductstatusesCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesCustomBatchResponse`".'
          type: string
      type: object
    ProductstatusesCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch productstatuses response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesCustomBatchResponseEntry`"'
          type: string
        productStatus:
          $ref: "#/components/schemas/ProductStatus"
          description: The requested product status. Only defined if the request was successful.
      type: object
    ProductstatusesListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#productstatusesListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of products statuses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/ProductStatus"
          type: array
      type: object
    Promotion:
      description: Represents a promotion. See the following articles for more details. * [Promotions feed specification](https://support.google.com/merchants/answer/2906014) * [Local promotions feed specification](https://support.google.com/merchants/answer/10146130) * [Promotions on Buy on Google product data specification](https://support.google.com/merchants/answer/9173673)
      properties:
        brand:
          description: Product filter by brand for the promotion.
          items:
            type: string
          type: array
        brandExclusion:
          description: Product filter by brand exclusion for the promotion.
          items:
            type: string
          type: array
        contentLanguage:
          description: Required. The content language used as part of the unique identifier. `en` content language is available for all target countries. `fr` content language is available for `CA` and `FR` target countries. `de` content language is available for `DE` target country. `nl` content language is available for `NL` target country. `it` content language is available for `IT` target country. `pt` content language is available for `BR` target country. `ja` content language is available for `JP` target country. `ko` content language is available for `KR` target country.
          type: string
        couponValueType:
          description: Required. Coupon value type for the promotion.
          enum:
            - COUPON_VALUE_TYPE_UNSPECIFIED
            - MONEY_OFF
            - PERCENT_OFF
            - BUY_M_GET_N_MONEY_OFF
            - BUY_M_GET_N_PERCENT_OFF
            - BUY_M_GET_MONEY_OFF
            - BUY_M_GET_PERCENT_OFF
            - FREE_GIFT
            - FREE_GIFT_WITH_VALUE
            - FREE_GIFT_WITH_ITEM_ID
            - FREE_SHIPPING_STANDARD
            - FREE_SHIPPING_OVERNIGHT
            - FREE_SHIPPING_TWO_DAY
          type: string
        freeGiftDescription:
          description: Free gift description for the promotion.
          type: string
        freeGiftItemId:
          description: Free gift item ID for the promotion.
          type: string
        freeGiftValue:
          $ref: "#/components/schemas/PriceAmount"
          description: Free gift value for the promotion.
        genericRedemptionCode:
          description: Generic redemption code for the promotion. To be used with the `offerType` field.
          type: string
        getThisQuantityDiscounted:
          description: The number of items discounted in the promotion.
          format: int32
          type: integer
        id:
          description: Output only. The REST promotion ID to uniquely identify the promotion. Content API methods that operate on promotions take this as their `promotionId` parameter. The REST ID for a promotion is of the form channel:contentLanguage:targetCountry:promotionId The `channel` field has a value of `"online"`, `"in_store"`, or `"online_in_store"`.
          readOnly: true
          type: string
        itemGroupId:
          description: Product filter by item group ID for the promotion.
          items:
            type: string
          type: array
        itemGroupIdExclusion:
          description: Product filter by item group ID exclusion for the promotion.
          items:
            type: string
          type: array
        itemId:
          description: Product filter by item ID for the promotion.
          items:
            type: string
          type: array
        itemIdExclusion:
          description: Product filter by item ID exclusion for the promotion.
          items:
            type: string
          type: array
        limitQuantity:
          description: Maximum purchase quantity for the promotion.
          format: int32
          type: integer
        limitValue:
          $ref: "#/components/schemas/PriceAmount"
          description: Maximum purchase value for the promotion.
        longTitle:
          description: Required. Long title for the promotion.
          type: string
        minimumPurchaseAmount:
          $ref: "#/components/schemas/PriceAmount"
          description: Minimum purchase amount for the promotion.
        minimumPurchaseQuantity:
          description: Minimum purchase quantity for the promotion.
          format: int32
          type: integer
        moneyBudget:
          $ref: "#/components/schemas/PriceAmount"
          description: Cost cap for the promotion.
        moneyOffAmount:
          $ref: "#/components/schemas/PriceAmount"
          description: The money off amount offered in the promotion.
        offerType:
          description: Required. Type of the promotion.
          enum:
            - OFFER_TYPE_UNSPECIFIED
            - NO_CODE
            - GENERIC_CODE
          type: string
        orderLimit:
          description: Order limit for the promotion.
          format: int32
          type: integer
        percentOff:
          description: The percentage discount offered in the promotion.
          format: int32
          type: integer
        productApplicability:
          description: Required. Applicability of the promotion to either all products or only specific products.
          enum:
            - PRODUCT_APPLICABILITY_UNSPECIFIED
            - ALL_PRODUCTS
            - SPECIFIC_PRODUCTS
          type: string
        productType:
          description: Product filter by product type for the promotion.
          items:
            type: string
          type: array
        productTypeExclusion:
          description: Product filter by product type exclusion for the promotion.
          items:
            type: string
          type: array
        promotionDestinationIds:
          description: Destination ID for the promotion.
          items:
            type: string
          type: array
        promotionDisplayDates:
          deprecated: true
          description: String representation of the promotion display dates. Deprecated. Use `promotion_display_time_period` instead.
          type: string
        promotionDisplayTimePeriod:
          $ref: "#/components/schemas/TimePeriod"
          description: "`TimePeriod` representation of the promotion's display dates."
        promotionEffectiveDates:
          deprecated: true
          description: String representation of the promotion effective dates. Deprecated. Use `promotion_effective_time_period` instead.
          type: string
        promotionEffectiveTimePeriod:
          $ref: "#/components/schemas/TimePeriod"
          description: Required. `TimePeriod` representation of the promotion's effective dates.
        promotionId:
          description: Required. The user provided promotion ID to uniquely identify the promotion.
          type: string
        promotionStatus:
          $ref: "#/components/schemas/PromotionPromotionStatus"
          description: Output only. The current status of the promotion.
          readOnly: true
        promotionUrl:
          description: URL to the page on the merchant's site where the promotion shows. Local Inventory ads promotions throw an error if no promo url is included. URL is used to confirm that the promotion is valid and can be redeemed.
          type: string
        redemptionChannel:
          description: Required. Redemption channel for the promotion. At least one channel is required.
          items:
            enum:
              - REDEMPTION_CHANNEL_UNSPECIFIED
              - IN_STORE
              - ONLINE
            type: string
          type: array
        shippingServiceNames:
          description: Shipping service names for the promotion.
          items:
            type: string
          type: array
        storeApplicability:
          description: Whether the promotion applies to all stores, or only specified stores. Local Inventory ads promotions throw an error if no store applicability is included. An INVALID_ARGUMENT error is thrown if store_applicability is set to ALL_STORES and store_code or score_code_exclusion is set to a value.
          enum:
            - STORE_APPLICABILITY_UNSPECIFIED
            - ALL_STORES
            - SPECIFIC_STORES
          type: string
        storeCode:
          description: Store codes to include for the promotion.
          items:
            type: string
          type: array
        storeCodeExclusion:
          description: Store codes to exclude for the promotion.
          items:
            type: string
          type: array
        targetCountry:
          description: Required. The target country used as part of the unique identifier. Can be `AU`, `CA`, `DE`, `FR`, `GB`, `IN`, `US`, `BR`, `ES`, `NL`, `JP`, `IT` or `KR`.
          type: string
      type: object
    PromotionPromotionStatus:
      description: The status of the promotion.
      properties:
        creationDate:
          description: 'Date on which the promotion has been created in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
          type: string
        destinationStatuses:
          description: The intended destinations for the promotion.
          items:
            $ref: "#/components/schemas/PromotionPromotionStatusDestinationStatus"
          type: array
        lastUpdateDate:
          description: 'Date on which the promotion status has been last updated in [ISO 8601](http://en.wikipedia.org/wiki/ISO_8601) format: Date, time, and offset, for example "2020-01-02T09:00:00+01:00" or "2020-01-02T09:00:00Z"'
          type: string
        promotionIssue:
          description: A list of issues associated with the promotion.
          items:
            $ref: "#/components/schemas/PromotionPromotionStatusPromotionIssue"
          type: array
      type: object
    PromotionPromotionStatusDestinationStatus:
      description: The destination status of the promotion.
      properties:
        destination:
          description: The name of the destination.
          type: string
        status:
          description: The status for the specified destination.
          enum:
            - STATE_UNSPECIFIED
            - IN_REVIEW
            - REJECTED
            - LIVE
            - STOPPED
            - EXPIRED
            - PENDING
          type: string
      type: object
    PromotionPromotionStatusPromotionIssue:
      description: The issue associated with the promotion.
      properties:
        code:
          description: Code of the issue.
          type: string
        detail:
          description: Explanation of the issue.
          type: string
      type: object
    PubsubNotificationSettings:
      description: Settings for Pub/Sub notifications, all methods require that the caller is a direct user of the merchant center account.
      properties:
        cloudTopicName:
          description: Cloud pub/sub topic to which notifications are sent (read-only).
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#pubsubNotificationSettings`"'
          type: string
        registeredEvents:
          description: 'List of event types. Acceptable values are: - "`orderPendingShipment`" '
          items:
            type: string
          type: array
      type: object
    RateGroup:
      properties:
        applicableShippingLabels:
          description: "A list of shipping labels defining the products to which this rate group applies to. This is a disjunction: only one of the labels has to match for the rate group to apply. May only be empty for the last rate group of a service. Required."
          items:
            type: string
          type: array
        carrierRates:
          description: A list of carrier rates that can be referred to by `mainTable` or `singleValue`.
          items:
            $ref: "#/components/schemas/CarrierRate"
          type: array
        mainTable:
          $ref: "#/components/schemas/Table"
          description: A table defining the rate group, when `singleValue` is not expressive enough. Can only be set if `singleValue` is not set.
        name:
          description: Name of the rate group. Optional. If set has to be unique within shipping service.
          type: string
        singleValue:
          $ref: "#/components/schemas/Value"
          description: The value of the rate group (for example, flat rate $10). Can only be set if `mainTable` and `subtables` are not set.
        subtables:
          description: A list of subtables referred to by `mainTable`. Can only be set if `mainTable` is set.
          items:
            $ref: "#/components/schemas/Table"
          type: array
      type: object
    Recommendation:
      description: Recommendations are suggested ways to improve your merchant account's performance. For example, to engage with a feature, or start using a new Google product.
      properties:
        additionalCallToAction:
          description: Output only. CTAs of this recommendation. Repeated.
          items:
            $ref: "#/components/schemas/RecommendationCallToAction"
          readOnly: true
          type: array
        additionalDescriptions:
          description: Output only. List of additional localized descriptions for a recommendation. Localication uses the `languageCode` field in `GenerateRecommendations` requests. Not all description types are guaranteed to be present and we recommend to rely on default description.
          items:
            $ref: "#/components/schemas/RecommendationDescription"
          readOnly: true
          type: array
        creative:
          description: Output only. Any creatives attached to the recommendation. Repeated.
          items:
            $ref: "#/components/schemas/RecommendationCreative"
          readOnly: true
          type: array
        defaultCallToAction:
          $ref: "#/components/schemas/RecommendationCallToAction"
          description: Optional. Default CTA of the recommendation.
        defaultDescription:
          description: Optional. Localized recommendation description. The localization the {@link `GenerateRecommendationsRequest.language_code`} field in {@link `GenerateRecommendationsRequest`} requests.
          type: string
        numericalImpact:
          description: Optional. A numerical score of the impact from the recommendation's description. For example, a recommendation might suggest an upward trend in sales for a certain product. Higher number means larger impact.
          format: int32
          type: integer
        paid:
          description: Optional. Indicates whether a user needs to pay when they complete the user journey suggested by the recommendation.
          type: boolean
        recommendationName:
          description: Optional. Localized recommendation name. The localization uses the {@link `GenerateRecommendationsRequest.language_code`} field in {@link `GenerateRecommendationsRequest`} requests.
          type: string
        subType:
          description: Optional. Subtype of the recommendations. Only applicable when multiple recommendations can be generated per type, and is used as an identifier of recommendation under the same recommendation type.
          type: string
        title:
          description: Optional. Localized Recommendation Title. Localization uses the {@link `GenerateRecommendationsRequest.language_code`} field in {@link `GenerateRecommendationsRequest`} requests.
          type: string
        type:
          description: "Output only. Type of the recommendation. List of currently available recommendation types: - OPPORTUNITY_CREATE_NEW_COLLECTION - OPPORTUNITY_CREATE_EMAIL_CAMPAIGN"
          readOnly: true
          type: string
      type: object
    RecommendationCallToAction:
      description: Call to action (CTA) that explains how a merchant can implement this recommendation
      properties:
        intent:
          description: "Output only. Intent of the action. This value describes the intent (for example, `OPEN_CREATE_EMAIL_CAMPAIGN_FLOW`) and can vary from recommendation to recommendation. This value can change over time for the same recommendation. Currently available intent values: - OPEN_CREATE_EMAIL_CAMPAIGN_FLOW: Opens a user journey where they can create a marketing email campaign. (No default URL) - OPEN_CREATE_COLLECTION_TAB: Opens a user journey where they can [create a collection](https://support.google.com/merchants/answer/9703228) for their Merchant account. (No default URL)"
          readOnly: true
          type: string
        localizedText:
          description: Output only. Localized text of the CTA. Optional.
          readOnly: true
          type: string
        uri:
          description: Optional. URL of the CTA. This field will only be set for some recommendations where there is a suggested landing URL. Otherwise it will be set to an empty string. We recommend developers to use their own custom landing page according to the description of the intent field above when this uri field is empty.
          type: string
      type: object
    RecommendationCreative:
      description: Creative is a multimedia attachment to recommendation that can be used on the frontend.
      properties:
        type:
          description: Type of the creative.
          enum:
            - CREATIVE_TYPE_UNSPECIFIED
            - VIDEO
            - PHOTO
          type: string
        uri:
          description: URL of the creative.
          type: string
      type: object
    RecommendationDescription:
      description: Google-provided description for the recommendation.
      properties:
        text:
          description: Output only. Text of the description.
          readOnly: true
          type: string
        type:
          description: Output only. Type of the description.
          enum:
            - DESCRIPTION_TYPE_UNSPECIFIED
            - SHORT
            - LONG
          readOnly: true
          type: string
      type: object
    RefundReason:
      properties:
        description:
          description: Description of the reason.
          type: string
        reasonCode:
          description: 'Code of the refund reason. Acceptable values are: - "`adjustment`" - "`autoPostInternal`" - "`autoPostInvalidBillingAddress`" - "`autoPostNoInventory`" - "`autoPostPriceError`" - "`autoPostUndeliverableShippingAddress`" - "`couponAbuse`" - "`courtesyAdjustment`" - "`customerCanceled`" - "`customerDiscretionaryReturn`" - "`customerInitiatedMerchantCancel`" - "`customerSupportRequested`" - "`deliveredLateByCarrier`" - "`deliveredTooLate`" - "`expiredItem`" - "`failToPushOrderGoogleError`" - "`failToPushOrderMerchantError`" - "`failToPushOrderMerchantFulfillmentError`" - "`failToPushOrderToMerchant`" - "`failToPushOrderToMerchantOutOfStock`" - "`feeAdjustment`" - "`invalidCoupon`" - "`lateShipmentCredit`" - "`malformedShippingAddress`" - "`merchantDidNotShipOnTime`" - "`noInventory`" - "`orderTimeout`" - "`other`" - "`paymentAbuse`" - "`paymentDeclined`" - "`priceAdjustment`" - "`priceError`" - "`productArrivedDamaged`" - "`productNotAsDescribed`" - "`promoReallocation`" - "`qualityNotAsExpected`" - "`returnRefundAbuse`" - "`shippingCostAdjustment`" - "`shippingPriceError`" - "`taxAdjustment`" - "`taxError`" - "`undeliverableShippingAddress`" - "`unsupportedPoBoxAddress`" - "`wrongProductShipped`" '
          type: string
      type: object
    Region:
      description: Represents a geographic region that you can use as a target with both the `RegionalInventory` and `ShippingSettings` services. You can define regions as collections of either postal codes or, in some countries, using predefined geotargets.
      properties:
        displayName:
          description: The display name of the region.
          type: string
        geotargetArea:
          $ref: "#/components/schemas/RegionGeoTargetArea"
          description: A list of geotargets that defines the region area.
        merchantId:
          description: Output only. Immutable. Merchant that owns the region.
          format: int64
          readOnly: true
          type: string
        postalCodeArea:
          $ref: "#/components/schemas/RegionPostalCodeArea"
          description: A list of postal codes that defines the region area.
        regionId:
          description: Output only. Immutable. The ID uniquely identifying each region.
          readOnly: true
          type: string
        regionalInventoryEligible:
          description: Output only. Indicates if the region is eligible to use in the Regional Inventory configuration.
          readOnly: true
          type: boolean
        shippingEligible:
          description: Output only. Indicates if the region is eligible to use in the Shipping Services configuration.
          readOnly: true
          type: boolean
      type: object
    RegionGeoTargetArea:
      description: A list of geotargets that defines the region area.
      properties:
        geotargetCriteriaIds:
          description: Required. A non-empty list of [location IDs](https://developers.google.com/adwords/api/docs/appendix/geotargeting). They must all be of the same location type (e.g., state).
          items:
            format: int64
            type: string
          type: array
      type: object
    RegionPostalCodeArea:
      description: "A list of postal codes that defines the region area. Note: All regions defined using postal codes are accessible via the account's `ShippingSettings.postalCodeGroups` resource."
      properties:
        postalCodes:
          description: Required. A range of postal codes.
          items:
            $ref: "#/components/schemas/RegionPostalCodeAreaPostalCodeRange"
          type: array
        regionCode:
          description: Required. CLDR territory code or the country the postal code group applies to.
          type: string
      type: object
    RegionPostalCodeAreaPostalCodeRange:
      description: A range of postal codes that defines the region area.
      properties:
        begin:
          description: 'Required. A postal code or a pattern of the form prefix* denoting the inclusive lower bound of the range defining the area. Examples values: "94108", "9410*", "9*".'
          type: string
        end:
          description: "Optional. A postal code or a pattern of the form prefix* denoting the inclusive upper bound of the range defining the area. It must have the same length as postalCodeRangeBegin: if postalCodeRangeBegin is a postal code then postalCodeRangeEnd must be a postal code too; if postalCodeRangeBegin is a pattern then postalCodeRangeEnd must be a pattern with the same prefix length. Optional: if not set, then the area is defined as being all the postal codes matching postalCodeRangeBegin."
          type: string
      type: object
    RegionalInventory:
      description: Regional inventory resource. contains the regional name and all attributes which are overridden for the specified region.
      properties:
        availability:
          description: The availability of the product.
          type: string
        customAttributes:
          description: A list of custom (merchant-provided) attributes. It can also be used for submitting any attribute of the feed specification in its generic form.
          items:
            $ref: "#/components/schemas/CustomAttribute"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#regionalInventory`".'
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: The price of the product.
        regionId:
          description: The ID uniquely identifying each region.
          type: string
        salePrice:
          $ref: "#/components/schemas/Price"
          description: The sale price of the product. Mandatory if `sale_price_effective_date` is defined.
        salePriceEffectiveDate:
          description: A date range represented by a pair of ISO 8601 dates separated by a space, comma, or slash. Both dates might be specified as 'null' if undecided.
          type: string
      type: object
    RegionalinventoryCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/RegionalinventoryCustomBatchRequestEntry"
          type: array
      type: object
    RegionalinventoryCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch regional inventory request.
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'Method of the batch request entry. Acceptable values are: - "`insert`" '
          type: string
        productId:
          description: The ID of the product for which to update price and availability.
          type: string
        regionalInventory:
          $ref: "#/components/schemas/RegionalInventory"
          description: Price and availability of the product.
      type: object
    RegionalinventoryCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/RegionalinventoryCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#regionalinventoryCustomBatchResponse`".'
          type: string
      type: object
    RegionalinventoryCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch regional inventory response.
      properties:
        batchId:
          description: The ID of the request entry this entry responds to.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#regionalinventoryCustomBatchResponseEntry`".'
          type: string
        regionalInventory:
          $ref: "#/components/schemas/RegionalInventory"
          description: Price and availability of the product.
      type: object
    RenderAccountIssuesRequestPayload:
      description: The payload for configuring how the content should be rendered.
      properties:
        contentOption:
          description: Optional. How the detailed content should be returned. Default option is to return the content as a pre-rendered HTML text.
          enum:
            - CONTENT_OPTION_UNSPECIFIED
            - PRE_RENDERED_HTML
          type: string
      type: object
    RenderAccountIssuesResponse:
      description: Response containing support content and actions for listed account issues.
      properties:
        alternateDisputeResolution:
          $ref: "#/components/schemas/AlternateDisputeResolution"
          description: The Alternate Dispute Resolution (ADR) contains a link to a page where merchant can bring their appeal to an [external body](https://support.google.com/european-union-digital-services-act-redress-options/answer/13535501). If the ADR is present, it MUST be available to the merchant on the page that shows the list with their account issues.
        issues:
          description: List of account issues for a given account. This list can be shown with compressed, expandable items. In the compressed form, the title and impact should be shown for each issue. Once the issue is expanded, the detailed content and available actions should be rendered.
          items:
            $ref: "#/components/schemas/AccountIssue"
          type: array
      type: object
    RenderProductIssuesRequestPayload:
      description: The payload for configuring how the content should be rendered.
      properties:
        contentOption:
          description: Optional. How the detailed content should be returned. Default option is to return the content as a pre-rendered HTML text.
          enum:
            - CONTENT_OPTION_UNSPECIFIED
            - PRE_RENDERED_HTML
          type: string
      type: object
    RenderProductIssuesResponse:
      description: Response containing support content and actions for listed product issues.
      properties:
        alternateDisputeResolution:
          $ref: "#/components/schemas/AlternateDisputeResolution"
          description: The Alternate Dispute Resolution (ADR) contains a link to a page where merchant can bring their appeal to an [external body](https://support.google.com/european-union-digital-services-act-redress-options/answer/13535501). If present, the link should be shown on the same page as the list of issues.
        issues:
          description: List of issues for a given product. This list can be shown with compressed, expandable items. In the compressed form, the title and impact should be shown for each issue. Once the issue is expanded, the detailed content and available actions should be rendered.
          items:
            $ref: "#/components/schemas/ProductIssue"
          type: array
      type: object
    ReportInteractionRequest:
      description: Request to report interactions on a recommendation.
      properties:
        interactionType:
          description: Required. Type of the interaction that is reported, for example INTERACTION_CLICK.
          enum:
            - INTERACTION_TYPE_UNSPECIFIED
            - INTERACTION_DISMISS
            - INTERACTION_CLICK
          type: string
        responseToken:
          description: Required. Token of the response when recommendation was returned.
          type: string
        subtype:
          description: Optional. Subtype of the recommendations this interaction happened on. This field must be set only to the value that is returned by {@link `RecommendationsService.GenerateRecommendations`} call.
          type: string
        type:
          description: Required. Type of the recommendations on which this interaction happened. This field must be set only to the value that is returned by {@link `GenerateRecommendationsResponse`} call.
          type: string
      type: object
    ReportRow:
      description: Result row returned from the search query.
      properties:
        bestSellers:
          $ref: "#/components/schemas/BestSellers"
          description: Best sellers fields requested by the merchant in the query. Field values are only set if the merchant queries `BestSellersProductClusterView` or `BestSellersBrandView`.
        brand:
          $ref: "#/components/schemas/Brand"
          description: Brand fields requested by the merchant in the query. Field values are only set if the merchant queries `BestSellersBrandView`.
        competitiveVisibility:
          $ref: "#/components/schemas/CompetitiveVisibility"
          description: Competitive visibility fields requested by the merchant in the query. Field values are only set if the merchant queries `CompetitiveVisibilityTopMerchantView`, `CompetitiveVisibilityBenchmarkView` or `CompetitiveVisibilityCompetitorView`.
        metrics:
          $ref: "#/components/schemas/Metrics"
          description: Metrics requested by the merchant in the query. Metric values are only set for metrics requested explicitly in the query.
        priceCompetitiveness:
          $ref: "#/components/schemas/PriceCompetitiveness"
          description: Price competitiveness fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceCompetitivenessProductView`.
        priceInsights:
          $ref: "#/components/schemas/PriceInsights"
          description: Price insights fields requested by the merchant in the query. Field values are only set if the merchant queries `PriceInsightsProductView`.
        productCluster:
          $ref: "#/components/schemas/ProductCluster"
          description: Product cluster fields requested by the merchant in the query. Field values are only set if the merchant queries `BestSellersProductClusterView`.
        productView:
          $ref: "#/components/schemas/ProductView"
          description: Product fields requested by the merchant in the query. Field values are only set if the merchant queries `ProductView`.
        segments:
          $ref: "#/components/schemas/Segments"
          description: Segmentation dimensions requested by the merchant in the query. Dimension values are only set for dimensions requested explicitly in the query.
      type: object
    RequestPhoneVerificationRequest:
      description: Request message for the RequestPhoneVerification method.
      properties:
        languageCode:
          description: Language code [IETF BCP 47 syntax](https://tools.ietf.org/html/bcp47) (for example, en-US). Language code is used to provide localized `SMS` and `PHONE_CALL`. Default language used is en-US if not provided.
          type: string
        phoneNumber:
          description: Phone number to be verified.
          type: string
        phoneRegionCode:
          description: Required. Two letter country code for the phone number, for example `CA` for Canadian numbers. See the [ISO 3166-1 alpha-2](https://wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements) officially assigned codes.
          type: string
        phoneVerificationMethod:
          description: Verification method to receive verification code.
          enum:
            - PHONE_VERIFICATION_METHOD_UNSPECIFIED
            - SMS
            - PHONE_CALL
          type: string
      type: object
    RequestPhoneVerificationResponse:
      description: Response message for the RequestPhoneVerification method.
      properties:
        verificationId:
          description: The verification ID to use in subsequent calls to `verifyphonenumber`.
          type: string
      type: object
    RequestReviewBuyOnGoogleProgramRequest:
      description: Request message for the RequestReviewProgram method.
      properties: {}
      type: object
    RequestReviewFreeListingsRequest:
      description: Request message for the RequestReviewFreeListings Program method.
      properties:
        regionCode:
          description: The code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country for which review is to be requested.
          type: string
      type: object
    RequestReviewShoppingAdsRequest:
      description: Request message for the RequestReviewShoppingAds program method.
      properties:
        regionCode:
          description: The code [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) of the country for which review is to be requested.
          type: string
      type: object
    ReturnAddress:
      description: Return address resource.
      properties:
        address:
          $ref: "#/components/schemas/ReturnAddressAddress"
          description: Required. The address.
        country:
          description: Required. The country of sale where the return address is applicable.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnAddress`"'
          type: string
        label:
          description: Required. The user-defined label of the return address. For the default address, use the label "default".
          type: string
        phoneNumber:
          description: Required. The merchant's contact phone number regarding the return.
          type: string
        returnAddressId:
          description: Return address ID generated by Google.
          type: string
      type: object
    ReturnAddressAddress:
      properties:
        country:
          description: CLDR country code (for example, "US").
          type: string
        locality:
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal code or ZIP (for example, "94043").
          type: string
        recipientName:
          description: Name of the recipient to address returns to.
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address. May be up to two lines, each line specified as an array element.
          items:
            type: string
          type: array
      type: object
    ReturnPolicy:
      description: Return policy resource.
      properties:
        country:
          description: Required. The country of sale where the return policy is applicable.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnPolicy`"'
          type: string
        label:
          description: Required. The user-defined label of the return policy. For the default policy, use the label "default".
          type: string
        name:
          description: Required. The name of the policy as shown in Merchant Center.
          type: string
        nonFreeReturnReasons:
          description: Return reasons that will incur return fees.
          items:
            type: string
          type: array
        policy:
          $ref: "#/components/schemas/ReturnPolicyPolicy"
          description: Required. The policy.
        returnPolicyId:
          description: Return policy ID generated by Google.
          type: string
        returnShippingFee:
          $ref: "#/components/schemas/Price"
          description: The return shipping fee that will apply to non free return reasons.
        seasonalOverrides:
          description: An optional list of seasonal overrides.
          items:
            $ref: "#/components/schemas/ReturnPolicySeasonalOverride"
          type: array
      type: object
    ReturnPolicyOnline:
      description: Return policy online object. This is currently used to represent return policies for ads and free listings programs.
      properties:
        countries:
          description: The countries of sale where the return policy is applicable. The values must be a valid 2 letter ISO 3166 code, e.g. "US".
          items:
            type: string
          type: array
        itemConditions:
          description: The item conditions that are accepted for returns. This is required to not be empty unless the type of return policy is noReturns.
          items:
            enum:
              - ITEM_CONDITION_UNSPECIFIED
              - NEW
              - USED
            type: string
          type: array
        label:
          description: The unique user-defined label of the return policy. The same label cannot be used in different return policies for the same country. Policies with the label 'default' will apply to all products, unless a product specifies a return_policy_label attribute.
          type: string
        name:
          description: The name of the policy as shown in Merchant Center.
          type: string
        policy:
          $ref: "#/components/schemas/ReturnPolicyOnlinePolicy"
          description: The return policy.
        restockingFee:
          $ref: "#/components/schemas/ReturnPolicyOnlineRestockingFee"
          description: The restocking fee that applies to all return reason categories. This would be treated as a free restocking fee if the value is not set.
        returnMethods:
          description: The return methods of how customers can return an item. This value is required to not be empty unless the type of return policy is noReturns.
          items:
            enum:
              - RETURN_METHOD_UNSPECIFIED
              - BY_MAIL
              - IN_STORE
              - AT_A_KIOSK
            type: string
          type: array
        returnPolicyId:
          description: Output only. Return policy ID generated by Google.
          readOnly: true
          type: string
        returnPolicyUri:
          description: The return policy uri. This can used by Google to do a sanity check for the policy.
          type: string
        returnReasonCategoryInfo:
          description: The return reason category information. This required to not be empty unless the type of return policy is noReturns.
          items:
            $ref: "#/components/schemas/ReturnPolicyOnlineReturnReasonCategoryInfo"
          type: array
      type: object
    ReturnPolicyOnlinePolicy:
      description: The available policies.
      properties:
        days:
          description: The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. Required for `numberOfDaysAfterDelivery` returns.
          format: int64
          type: string
        type:
          description: Policy type.
          enum:
            - TYPE_UNSPECIFIED
            - NUMBER_OF_DAYS_AFTER_DELIVERY
            - NO_RETURNS
            - LIFETIME_RETURNS
          type: string
      type: object
    ReturnPolicyOnlineRestockingFee:
      description: The restocking fee. This can either be a fixed fee or a micro percent.
      properties:
        fixedFee:
          $ref: "#/components/schemas/PriceAmount"
          description: Fixed restocking fee.
        microPercent:
          description: Percent of total price in micros. 15,000,000 means 15% of the total price would be charged.
          format: int32
          type: integer
      type: object
    ReturnPolicyOnlineReturnReasonCategoryInfo:
      description: The return reason category info wrapper.
      properties:
        returnLabelSource:
          description: The corresponding return label source.
          enum:
            - RETURN_LABEL_SOURCE_UNSPECIFIED
            - DOWNLOAD_AND_PRINT
            - IN_THE_BOX
            - CUSTOMER_RESPONSIBILITY
          type: string
        returnReasonCategory:
          description: The return reason category.
          enum:
            - RETURN_REASON_CATEGORY_UNSPECIFIED
            - BUYER_REMORSE
            - ITEM_DEFECT
          type: string
        returnShippingFee:
          $ref: "#/components/schemas/ReturnPolicyOnlineReturnShippingFee"
          description: The corresponding return shipping fee. This is only applicable when returnLabelSource is not the customer's responsibility.
      type: object
    ReturnPolicyOnlineReturnShippingFee:
      description: The return shipping fee. This can either be a fixed fee or a boolean to indicate that the customer pays the actual shipping cost.
      properties:
        fixedFee:
          $ref: "#/components/schemas/PriceAmount"
          description: Fixed return shipping fee amount. This value is only applicable when type is FIXED. We will treat the return shipping fee as free if type is FIXED and this value is not set.
        type:
          description: Type of return shipping fee.
          enum:
            - TYPE_UNSPECIFIED
            - FIXED
            - CUSTOMER_PAYING_ACTUAL_FEE
          type: string
      type: object
    ReturnPolicyPolicy:
      properties:
        lastReturnDate:
          description: Required. Last day for returning the items. In ISO 8601 format. When specifying the return window like this, set the policy type to "lastReturnDate". Use this for seasonal overrides only.
          type: string
        numberOfDays:
          description: The number of days items can be returned after delivery, where one day is defined to be 24 hours after the delivery timestamp. When specifying the return window like this, set the policy type to "numberOfDaysAfterDelivery". Acceptable values are 30, 45, 60, 90, 100, 180, 270 and 365 for the default policy. Additional policies further allow 14, 15, 21 and 28 days, but note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics. A policy of less than 30 days can only be applied to those items.
          format: int64
          type: string
        type:
          description: 'Policy type. Use "lastReturnDate" for seasonal overrides only. Note that for most items a minimum of 30 days is required for returns. Exceptions may be made for electronics or non-returnable items such as food, perishables, and living things. A policy of less than 30 days can only be applied to those items. Acceptable values are: - "`lastReturnDate`" - "`lifetimeReturns`" - "`noReturns`" - "`numberOfDaysAfterDelivery`" '
          type: string
      type: object
    ReturnPolicySeasonalOverride:
      properties:
        endDate:
          description: Required. Last day on which the override applies. In ISO 8601 format.
          type: string
        name:
          description: Required. The name of the seasonal override as shown in Merchant Center.
          type: string
        policy:
          $ref: "#/components/schemas/ReturnPolicyPolicy"
          description: Required. The policy which is in effect during that time.
        startDate:
          description: Required. First day on which the override applies. In ISO 8601 format.
          type: string
      type: object
    ReturnPricingInfo:
      properties:
        chargeReturnShippingFee:
          description: Default option for whether merchant should charge the customer for return shipping costs, based on customer selected return reason and merchant's return policy for the items being returned.
          type: boolean
        maxReturnShippingFee:
          $ref: "#/components/schemas/MonetaryAmount"
          description: Maximum return shipping costs that may be charged to the customer depending on merchant's assessment of the return reason and the merchant's return policy for the items being returned.
        refundableItemsTotalAmount:
          $ref: "#/components/schemas/MonetaryAmount"
          description: Total amount that can be refunded for the items in this return. It represents the total amount received by the merchant for the items, after applying merchant coupons.
        refundableShippingAmount:
          $ref: "#/components/schemas/MonetaryAmount"
          description: Maximum amount that can be refunded for the original shipping fee.
        totalRefundedAmount:
          $ref: "#/components/schemas/MonetaryAmount"
          description: Total amount already refunded by the merchant. It includes all types of refunds (items, shipping, etc.) Not provided if no refund has been applied yet.
      type: object
    ReturnShipment:
      properties:
        creationDate:
          description: The date of creation of the shipment, in ISO 8601 format.
          type: string
        deliveryDate:
          description: The date of delivery of the shipment, in ISO 8601 format.
          type: string
        returnMethodType:
          description: 'Type of the return method. Acceptable values are: - "`byMail`" - "`contactCustomerSupport`" - "`returnless`" - "`inStore`" '
          type: string
        shipmentId:
          description: Shipment ID generated by Google.
          type: string
        shipmentTrackingInfos:
          description: Tracking information of the shipment. One return shipment might be handled by several shipping carriers sequentially.
          items:
            $ref: "#/components/schemas/ShipmentTrackingInfo"
          type: array
        shippingDate:
          description: The date of shipping of the shipment, in ISO 8601 format.
          type: string
        state:
          description: 'State of the shipment. Acceptable values are: - "`completed`" - "`new`" - "`shipped`" - "`undeliverable`" - "`pending`" '
          type: string
      type: object
    ReturnShippingLabel:
      description: Return shipping label for a Buy on Google merchant-managed return.
      properties:
        carrier:
          description: Name of the carrier.
          type: string
        labelUri:
          description: The URL for the return shipping label in PDF format
          type: string
        trackingId:
          description: The tracking id of this return label.
          type: string
      type: object
    ReturnaddressCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ReturnaddressCustomBatchRequestEntry"
          type: array
      type: object
    ReturnaddressCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The Merchant Center account ID.
          format: uint64
          type: string
        method:
          description: 'Method of the batch request entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" '
          type: string
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress"
          description: The return address to submit. This should be set only if the method is `insert`.
        returnAddressId:
          description: The return address ID. This should be set only if the method is `delete` or `get`.
          type: string
      type: object
    ReturnaddressCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ReturnaddressCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnaddressCustomBatchResponse`".'
          type: string
      type: object
    ReturnaddressCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors defined if, and only if, the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnaddressCustomBatchResponseEntry`"'
          type: string
        returnAddress:
          $ref: "#/components/schemas/ReturnAddress"
          description: The retrieved return address.
      type: object
    ReturnaddressListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnaddressListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of addresses.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/ReturnAddress"
          type: array
      type: object
    ReturnpolicyCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ReturnpolicyCustomBatchRequestEntry"
          type: array
      type: object
    ReturnpolicyCustomBatchRequestEntry:
      properties:
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The Merchant Center account ID.
          format: uint64
          type: string
        method:
          description: 'Method of the batch request entry. Acceptable values are: - "`delete`" - "`get`" - "`insert`" '
          type: string
        returnPolicy:
          $ref: "#/components/schemas/ReturnPolicy"
          description: The return policy to submit. This should be set only if the method is `insert`.
        returnPolicyId:
          description: The return policy ID. This should be set only if the method is `delete` or `get`.
          type: string
      type: object
    ReturnpolicyCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ReturnpolicyCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnpolicyCustomBatchResponse`".'
          type: string
      type: object
    ReturnpolicyCustomBatchResponseEntry:
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors defined if, and only if, the request failed.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnpolicyCustomBatchResponseEntry`"'
          type: string
        returnPolicy:
          $ref: "#/components/schemas/ReturnPolicy"
          description: The retrieved return policy.
      type: object
    ReturnpolicyListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#returnpolicyListResponse`".'
          type: string
        resources:
          items:
            $ref: "#/components/schemas/ReturnPolicy"
          type: array
      type: object
    Row:
      properties:
        cells:
          description: The list of cells that constitute the row. Must have the same length as `columnHeaders` for two-dimensional tables, a length of 1 for one-dimensional tables. Required.
          items:
            $ref: "#/components/schemas/Value"
          type: array
      type: object
    SearchRequest:
      description: Request message for the ReportService.Search method.
      properties:
        pageSize:
          description: Number of ReportRows to retrieve in a single page. Defaults to 1000. Values above 5000 are coerced to 5000.
          format: int32
          type: integer
        pageToken:
          description: Token of the page to retrieve. If not specified, the first page of results is returned. In order to request the next page of results, the value obtained from `next_page_token` in the previous response should be used.
          type: string
        query:
          description: Required. Query that defines performance metrics to retrieve and dimensions according to which the metrics are to be segmented. For details on how to construct your query, see the [Query Language guide](https://developers.google.com/shopping-content/guides/reports/query-language/overview).
          type: string
      type: object
    SearchResponse:
      description: Response message for the ReportService.Search method.
      properties:
        nextPageToken:
          description: Token which can be sent as `page_token` to retrieve the next page. If omitted, there are no subsequent pages.
          type: string
        results:
          description: Rows that matched the search query.
          items:
            $ref: "#/components/schemas/ReportRow"
          type: array
      type: object
    Segments:
      description: Dimensions according to which metrics are segmented in the response. Values of product dimensions, such as `offer_id`, reflect the state of a product at the time of the corresponding event, for example, impression or order. Segment fields cannot be selected in queries without also selecting at least one metric field. Values are only set for dimensions requested explicitly in the request's search query.
      properties:
        brand:
          description: Brand of the product.
          type: string
        categoryL1:
          description: "[Product category (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
          type: string
        categoryL2:
          description: "[Product category (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
          type: string
        categoryL3:
          description: "[Product category (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
          type: string
        categoryL4:
          description: "[Product category (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
          type: string
        categoryL5:
          description: "[Product category (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in Google's product taxonomy."
          type: string
        currencyCode:
          description: Currency in which price metrics are represented, for example, if you select `ordered_item_sales_micros`, the returned value will be represented by this currency.
          type: string
        customLabel0:
          description: Custom label 0 for custom grouping of products.
          type: string
        customLabel1:
          description: Custom label 1 for custom grouping of products.
          type: string
        customLabel2:
          description: Custom label 2 for custom grouping of products.
          type: string
        customLabel3:
          description: Custom label 3 for custom grouping of products.
          type: string
        customLabel4:
          description: Custom label 4 for custom grouping of products.
          type: string
        customerCountryCode:
          description: Code of the country where the customer is located at the time of the event. Represented in the ISO 3166 format. If the customer country cannot be determined, a special 'ZZ' code is returned.
          type: string
        date:
          $ref: "#/components/schemas/Date"
          description: Date in the merchant timezone to which metrics apply.
        offerId:
          description: Merchant-provided id of the product.
          type: string
        productTypeL1:
          description: "[Product type (1st level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
          type: string
        productTypeL2:
          description: "[Product type (2nd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
          type: string
        productTypeL3:
          description: "[Product type (3rd level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
          type: string
        productTypeL4:
          description: "[Product type (4th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
          type: string
        productTypeL5:
          description: "[Product type (5th level)](https://developers.google.com/shopping-content/guides/reports/segmentation#category_and_product_type) in merchant's own product taxonomy."
          type: string
        program:
          description: Program to which metrics apply, for example, Free Product Listing.
          enum:
            - PROGRAM_UNSPECIFIED
            - SHOPPING_ADS
            - FREE_PRODUCT_LISTING
            - FREE_LOCAL_PRODUCT_LISTING
            - BUY_ON_GOOGLE_LISTING
          type: string
        title:
          description: Title of the product.
          type: string
        week:
          $ref: "#/components/schemas/Date"
          description: First day of the week (Monday) of the metrics date in the merchant timezone.
      type: object
    Service:
      properties:
        active:
          description: A boolean exposing the active status of the shipping service. Required.
          type: boolean
        currency:
          description: The CLDR code of the currency to which this service applies. Must match that of the prices in rate groups.
          type: string
        deliveryCountry:
          description: The CLDR territory code of the country to which the service applies. Required.
          type: string
        deliveryTime:
          $ref: "#/components/schemas/DeliveryTime"
          description: Time spent in various aspects from order to the delivery of the product. Required.
        eligibility:
          description: 'Eligibility for this service. Acceptable values are: - "`All scenarios`" - "`All scenarios except Shopping Actions`" - "`Shopping Actions`" '
          type: string
        minimumOrderValue:
          $ref: "#/components/schemas/Price"
          description: Minimum order value for this service. If set, indicates that customers will have to spend at least this amount. All prices within a service must have the same currency. Cannot be set together with minimum_order_value_table.
        minimumOrderValueTable:
          $ref: "#/components/schemas/MinimumOrderValueTable"
          description: Table of per store minimum order values for the pickup fulfillment type. Cannot be set together with minimum_order_value.
        name:
          description: Free-form name of the service. Must be unique within target account. Required.
          type: string
        pickupService:
          $ref: "#/components/schemas/PickupCarrierService"
          description: The carrier-service pair delivering items to collection points. The list of supported pickup services can be retrieved through the `getSupportedPickupServices` method. Required if and only if the service delivery type is `pickup`.
        rateGroups:
          description: Shipping rate group definitions. Only the last one is allowed to have an empty `applicableShippingLabels`, which means "everything else". The other `applicableShippingLabels` must not overlap.
          items:
            $ref: "#/components/schemas/RateGroup"
          type: array
        shipmentType:
          description: 'Type of locations this service ships orders to. Acceptable values are: - "`delivery`" - "`pickup` (deprecated)" - "`local_delivery`" - "`collection_point`" '
          type: string
        storeConfig:
          $ref: "#/components/schemas/ServiceStoreConfig"
          description: A list of stores your products are delivered from. This is only available for the local delivery shipment type.
      type: object
    ServiceStoreConfig:
      description: Stores that provide local delivery. Only valid with local delivery fulfillment.
      properties:
        cutoffConfig:
          $ref: "#/components/schemas/ServiceStoreConfigCutoffConfig"
          description: Time local delivery ends for the day. This can be either `local_cutoff_time` or `store_close_offset_hours`, if both are provided an error is thrown.
        serviceRadius:
          $ref: "#/components/schemas/Distance"
          description: Maximum delivery radius. Only needed for local delivery fulfillment type.
        storeCodes:
          description: A list of store codes that provide local delivery. If empty, then `store_service_type` must be `all_stores`, or an error is thrown. If not empty, then `store_service_type` must be `selected_stores`, or an error is thrown.
          items:
            type: string
          type: array
        storeServiceType:
          description: Indicates whether all stores listed by this merchant provide local delivery or not. Acceptable values are `all stores` and `selected stores`
          type: string
      type: object
    ServiceStoreConfigCutoffConfig:
      description: Time local delivery ends for the day based on the local timezone of the store. `local_cutoff_time` and `store_close_offset_hours` are mutually exclusive.
      properties:
        localCutoffTime:
          $ref: "#/components/schemas/ServiceStoreConfigCutoffConfigLocalCutoffTime"
          description: Time in hours and minutes in the local timezone when local delivery ends.
        noDeliveryPostCutoff:
          description: Merchants can opt-out of showing n+1 day local delivery when they have a shipping service configured to n day local delivery. For example, if the shipping service defines same-day delivery, and it's past the cut-off, setting this field to `true` results in the calculated shipping service rate returning `NO_DELIVERY_POST_CUTOFF`. In the same example, setting this field to `false` results in the calculated shipping time being one day. This is only for local delivery.
          type: boolean
        storeCloseOffsetHours:
          description: Represents cutoff time as the number of hours before store closing. Mutually exclusive with other fields (hour and minute).
          format: int64
          type: string
      type: object
    ServiceStoreConfigCutoffConfigLocalCutoffTime:
      description: Time in hours and minutes in the local timezone when local delivery ends.
      properties:
        hour:
          description: Hour local delivery orders must be placed by to process the same day.
          format: int64
          type: string
        minute:
          description: Minute local delivery orders must be placed by to process the same day.
          format: int64
          type: string
      type: object
    SettlementReport:
      description: " Settlement reports detail order-level and item-level credits and debits between you and Google."
      properties:
        endDate:
          description: The end date on which all transactions are included in the report, in ISO 8601 format.
          type: string
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementReport`"'
          type: string
        previousBalance:
          $ref: "#/components/schemas/Price"
          description: The residual amount from the previous invoice. This is set only if the previous invoices are not paid because of negative balance.
        settlementId:
          description: The ID of the settlement report.
          type: string
        startDate:
          description: The start date on which all transactions are included in the report, in ISO 8601 format.
          type: string
        transferAmount:
          $ref: "#/components/schemas/Price"
          description: The money due to the merchant.
        transferDate:
          description: Date on which transfer for this payment was initiated by Google, in ISO 8601 format.
          type: string
        transferIds:
          description: The list of bank identifiers used for the transfer. For example, Trace ID for Federal Automated Clearing House (ACH). This may also be known as the Wire ID.
          items:
            type: string
          type: array
      type: object
    SettlementTransaction:
      description: Settlement transactions give a detailed breakdown of the settlement report.
      properties:
        amount:
          $ref: "#/components/schemas/SettlementTransactionAmount"
          description: The amount for the transaction.
        identifiers:
          $ref: "#/components/schemas/SettlementTransactionIdentifiers"
          description: Identifiers of the transaction.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementTransaction`"'
          type: string
        transaction:
          $ref: "#/components/schemas/SettlementTransactionTransaction"
          description: Details of the transaction.
      type: object
    SettlementTransactionAmount:
      properties:
        commission:
          $ref: "#/components/schemas/SettlementTransactionAmountCommission"
        description:
          description: 'The description of the event. Acceptable values are: - "`taxWithhold`" - "`principal`" - "`principalAdjustment`" - "`shippingFee`" - "`merchantRemittedSalesTax`" - "`googleRemittedSalesTax`" - "`merchantCoupon`" - "`merchantCouponTax`" - "`merchantRemittedDisposalTax`" - "`googleRemittedDisposalTax`" - "`merchantRemittedRedemptionFee`" - "`googleRemittedRedemptionFee`" - "`eeeEcoFee`" - "`furnitureEcoFee`" - "`copyPrivateFee`" - "`eeeEcoFeeCommission`" - "`furnitureEcoFeeCommission`" - "`copyPrivateFeeCommission`" - "`principalRefund`" - "`principalRefundTax`" - "`itemCommission`" - "`adjustmentCommission`" - "`shippingFeeCommission`" - "`commissionRefund`" - "`damaged`" - "`damagedOrDefectiveItem`" - "`expiredItem`" - "`faultyItem`" - "`incorrectItemReceived`" - "`itemMissing`" - "`qualityNotExpected`" - "`receivedTooLate`" - "`storePackageMissing`" - "`transitPackageMissing`" - "`unsuccessfulDeliveryUndeliverable`" - "`wrongChargeInStore`" - "`wrongItem`" - "`returns`" - "`undeliverable`" - "`issueRelatedRefundAndReplacementAmountDescription`" - "`refundFromMerchant`" - "`returnLabelShippingFee`" - "`lumpSumCorrection`" - "`pspFee`" - "`principalRefundDoesNotFit`" - "`principalRefundOrderedWrongItem`" - "`principalRefundQualityNotExpected`" - "`principalRefundBetterPriceFound`" - "`principalRefundNoLongerNeeded`" - "`principalRefundChangedMind`" - "`principalRefundReceivedTooLate`" - "`principalRefundIncorrectItemReceived`" - "`principalRefundDamagedOrDefectiveItem`" - "`principalRefundDidNotMatchDescription`" - "`principalRefundExpiredItem`" '
          type: string
        transactionAmount:
          $ref: "#/components/schemas/Price"
          description: The amount that contributes to the line item price.
        type:
          description: 'The type of the amount. Acceptable values are: - "`itemPrice`" - "`orderPrice`" - "`refund`" - "`earlyRefund`" - "`courtesyRefund`" - "`returnRefund`" - "`returnLabelShippingFeeAmount`" - "`lumpSumCorrectionAmount`" '
          type: string
      type: object
    SettlementTransactionAmountCommission:
      properties:
        category:
          description: 'The category of the commission. Acceptable values are: - "`animalsAndPetSupplies`" - "`dogCatFoodAndCatLitter`" - "`apparelAndAccessories`" - "`shoesHandbagsAndSunglasses`" - "`costumesAndAccessories`" - "`jewelry`" - "`watches`" - "`hobbiesArtsAndCrafts`" - "`homeAndGarden`" - "`entertainmentCollectibles`" - "`collectibleCoins`" - "`sportsCollectibles`" - "`sportingGoods`" - "`toysAndGames`" - "`musicalInstruments`" - "`giftCards`" - "`babyAndToddler`" - "`babyFoodWipesAndDiapers`" - "`businessAndIndustrial`" - "`camerasOpticsAndPhotography`" - "`consumerElectronics`" - "`electronicsAccessories`" - "`personalComputers`" - "`videoGameConsoles`" - "`foodAndGrocery`" - "`beverages`" - "`tobaccoProducts`" - "`furniture`" - "`hardware`" - "`buildingMaterials`" - "`tools`" - "`healthAndPersonalCare`" - "`beauty`" - "`householdSupplies`" - "`kitchenAndDining`" - "`majorAppliances`" - "`luggageAndBags`" - "`media`" - "`officeSupplies`" - "`softwareAndVideoGames`" - "`vehiclePartsAndAccessories`" - "`vehicleTiresAndWheels`" - "`vehicles`" - "`everythingElse`" '
          type: string
        rate:
          description: Rate of the commission in percentage.
          type: string
      type: object
    SettlementTransactionIdentifiers:
      properties:
        adjustmentId:
          description: The identifier of the adjustments, if it's available.
          type: string
        merchantOrderId:
          description: The merchant provided order ID.
          type: string
        orderItemId:
          description: The identifier of the item.
          type: string
        settlementEntryId:
          description: The unique ID of the settlement transaction entry.
          type: string
        shipmentIds:
          description: The shipment ids for the item.
          items:
            type: string
          type: array
        transactionId:
          description: The Google transaction ID.
          type: string
      type: object
    SettlementTransactionTransaction:
      properties:
        postDate:
          description: The time on which the event occurred in ISO 8601 format.
          type: string
        type:
          description: 'The type of the transaction that occurred. Acceptable values are: - "`order`" - "`reversal`" - "`orderRefund`" - "`reversalRefund`" - "`issueRelatedRefundAndReplacement`" - "`returnLabelShippingFeeTransaction`" - "`reversalIssueRelatedRefundAndReplacement`" - "`reversalReturnLabelShippingFeeTransaction`" - "`lumpSumCorrectionTransaction`" '
          type: string
      type: object
    SettlementreportsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementreportsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/SettlementReport"
          type: array
      type: object
    SettlementtransactionsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#settlementtransactionsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of returns.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/SettlementTransaction"
          type: array
      type: object
    ShipmentInvoice:
      properties:
        invoiceSummary:
          $ref: "#/components/schemas/InvoiceSummary"
          description: "[required] Invoice summary."
        lineItemInvoices:
          description: "[required] Invoice details per line item."
          items:
            $ref: "#/components/schemas/ShipmentInvoiceLineItemInvoice"
          type: array
        shipmentGroupId:
          description: "[required] ID of the shipment group. It is assigned by the merchant in the `shipLineItems` method and is used to group multiple line items that have the same kind of shipping charges."
          type: string
      type: object
    ShipmentInvoiceLineItemInvoice:
      properties:
        lineItemId:
          description: ID of the line item. Either lineItemId or productId must be set.
          type: string
        productId:
          description: ID of the product. This is the REST ID used in the products service. Either lineItemId or productId must be set.
          type: string
        shipmentUnitIds:
          description: "[required] The shipment unit ID is assigned by the merchant and defines individual quantities within a line item. The same ID can be assigned to units that are the same while units that differ must be assigned a different ID (for example: free or promotional units)."
          items:
            type: string
          type: array
        unitInvoice:
          $ref: "#/components/schemas/UnitInvoice"
          description: "[required] Invoice details for a single unit."
      type: object
    ShipmentTrackingInfo:
      properties:
        carrier:
          description: 'The shipping carrier that handles the package. Acceptable values are: - "`boxtal`" - "`bpost`" - "`chronopost`" - "`colisPrive`" - "`colissimo`" - "`cxt`" - "`deliv`" - "`dhl`" - "`dpd`" - "`dynamex`" - "`eCourier`" - "`easypost`" - "`efw`" - "`fedex`" - "`fedexSmartpost`" - "`geodis`" - "`gls`" - "`googleCourier`" - "`gsx`" - "`jdLogistics`" - "`laPoste`" - "`lasership`" - "`manual`" - "`mpx`" - "`onTrac`" - "`other`" - "`tnt`" - "`uds`" - "`ups`" - "`usps`" '
          type: string
        trackingNumber:
          description: The tracking number for the package.
          type: string
      type: object
    ShippingSettings:
      description: The merchant account's shipping settings. All methods except getsupportedcarriers and getsupportedholidays require the admin role.
      properties:
        accountId:
          description: The ID of the account to which these account shipping settings belong. Ignored upon update, always present in get request responses.
          format: uint64
          type: string
        postalCodeGroups:
          description: A list of postal code groups that can be referred to in `services`. Optional.
          items:
            $ref: "#/components/schemas/PostalCodeGroup"
          type: array
        services:
          description: The target account's list of services. Optional.
          items:
            $ref: "#/components/schemas/Service"
          type: array
        warehouses:
          description: Optional. A list of warehouses which can be referred to in `services`.
          items:
            $ref: "#/components/schemas/Warehouse"
          type: array
      type: object
    ShippingsettingsCustomBatchRequest:
      properties:
        entries:
          description: The request entries to be processed in the batch.
          items:
            $ref: "#/components/schemas/ShippingsettingsCustomBatchRequestEntry"
          type: array
      type: object
    ShippingsettingsCustomBatchRequestEntry:
      description: A batch entry encoding a single non-batch shippingsettings request.
      properties:
        accountId:
          description: The ID of the account for which to get/update account shipping settings.
          format: uint64
          type: string
        batchId:
          description: An entry ID, unique within the batch request.
          format: uint32
          type: integer
        merchantId:
          description: The ID of the managing account.
          format: uint64
          type: string
        method:
          description: 'The method of the batch entry. Acceptable values are: - "`get`" - "`update`" '
          type: string
        shippingSettings:
          $ref: "#/components/schemas/ShippingSettings"
          description: The account shipping settings to update. Only defined if the method is `update`.
      type: object
    ShippingsettingsCustomBatchResponse:
      properties:
        entries:
          description: The result of the execution of the batch requests.
          items:
            $ref: "#/components/schemas/ShippingsettingsCustomBatchResponseEntry"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsCustomBatchResponse`".'
          type: string
      type: object
    ShippingsettingsCustomBatchResponseEntry:
      description: A batch entry encoding a single non-batch shipping settings response.
      properties:
        batchId:
          description: The ID of the request entry to which this entry responds.
          format: uint32
          type: integer
        errors:
          $ref: "#/components/schemas/Errors"
          description: A list of errors for failed custombatch entries. *Note:* Schema errors fail the whole request.
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsCustomBatchResponseEntry`"'
          type: string
        shippingSettings:
          $ref: "#/components/schemas/ShippingSettings"
          description: The retrieved or updated account shipping settings.
      type: object
    ShippingsettingsGetSupportedCarriersResponse:
      properties:
        carriers:
          description: A list of supported carriers. May be empty.
          items:
            $ref: "#/components/schemas/CarriersCarrier"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsGetSupportedCarriersResponse`".'
          type: string
      type: object
    ShippingsettingsGetSupportedHolidaysResponse:
      properties:
        holidays:
          description: A list of holidays applicable for delivery guarantees. May be empty.
          items:
            $ref: "#/components/schemas/HolidaysHoliday"
          type: array
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsGetSupportedHolidaysResponse`".'
          type: string
      type: object
    ShippingsettingsGetSupportedPickupServicesResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsGetSupportedPickupServicesResponse`".'
          type: string
        pickupServices:
          description: A list of supported pickup services. May be empty.
          items:
            $ref: "#/components/schemas/PickupServicesPickupService"
          type: array
      type: object
    ShippingsettingsListResponse:
      properties:
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#shippingsettingsListResponse`".'
          type: string
        nextPageToken:
          description: The token for the retrieval of the next page of shipping settings.
          type: string
        resources:
          items:
            $ref: "#/components/schemas/ShippingSettings"
          type: array
      type: object
    ShoppingAdsProgramStatus:
      description: Response message for GetShoppingAdsProgramStatus.
      properties:
        globalState:
          description: State of the program. `ENABLED` if there are offers for at least one region.
          enum:
            - PROGRAM_STATE_UNSPECIFIED
            - NOT_ENABLED
            - NO_OFFERS_UPLOADED
            - ENABLED
          type: string
        regionStatuses:
          description: Status of the program in each region. Regions with the same status and review eligibility are grouped together in `regionCodes`.
          items:
            $ref: "#/components/schemas/ShoppingAdsProgramStatusRegionStatus"
          type: array
      type: object
    ShoppingAdsProgramStatusRegionStatus:
      description: Status of program and region.
      properties:
        disapprovalDate:
          description: "Date by which eligibilityStatus will go from `WARNING` to `DISAPPROVED`. Only visible when your eligibilityStatus is WARNING. In [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DD`."
          type: string
        eligibilityStatus:
          description: Eligibility status of the Shopping Ads program.
          enum:
            - STATE_UNSPECIFIED
            - APPROVED
            - DISAPPROVED
            - WARNING
            - UNDER_REVIEW
            - PENDING_REVIEW
            - ONBOARDING
          type: string
        onboardingIssues:
          description: Issues that must be fixed to be eligible for review.
          items:
            type: string
          type: array
        regionCodes:
          description: The two-letter [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) codes for all the regions with the same `eligibilityStatus` and `reviewEligibility`.
          items:
            type: string
          type: array
        reviewEligibilityStatus:
          description: If a program is eligible for review in a specific region. Only visible if `eligibilityStatus` is `DISAPPROVED`.
          enum:
            - REVIEW_ELIGIBILITY_UNSPECIFIED
            - ELIGIBLE
            - INELIGIBLE
          type: string
        reviewIneligibilityReason:
          description: Review ineligibility reason if account is not eligible for review.
          enum:
            - REVIEW_INELIGIBILITY_REASON_UNSPECIFIED
            - ONBOARDING_ISSUES
            - NOT_ENOUGH_OFFERS
            - IN_COOLDOWN_PERIOD
            - ALREADY_UNDER_REVIEW
            - NO_REVIEW_REQUIRED
            - WILL_BE_REVIEWED_AUTOMATICALLY
            - IS_RETIRED
            - ALREADY_REVIEWED
          type: string
        reviewIneligibilityReasonDescription:
          description: Reason a program in a specific region isn’t eligible for review. Only visible if `reviewEligibilityStatus` is `INELIGIBLE`.
          type: string
        reviewIneligibilityReasonDetails:
          $ref: "#/components/schemas/ShoppingAdsProgramStatusReviewIneligibilityReasonDetails"
          description: Additional information for ineligibility. If `reviewIneligibilityReason` is `IN_COOLDOWN_PERIOD`, a timestamp for the end of the cooldown period is provided.
        reviewIssues:
          description: Issues evaluated in the review process. Fix all issues before requesting a review.
          items:
            type: string
          type: array
      type: object
    ShoppingAdsProgramStatusReviewIneligibilityReasonDetails:
      description: Additional details for review ineligibility reasons.
      properties:
        cooldownTime:
          description: This timestamp represents end of cooldown period for review ineligbility reason `IN_COOLDOWN_PERIOD`.
          format: google-datetime
          type: string
      type: object
    Table:
      properties:
        columnHeaders:
          $ref: "#/components/schemas/Headers"
          description: "Headers of the table's columns. Optional: if not set then the table has only one dimension."
        name:
          description: Name of the table. Required for subtables, ignored for the main table.
          type: string
        rowHeaders:
          $ref: "#/components/schemas/Headers"
          description: Headers of the table's rows. Required.
        rows:
          description: The list of rows that constitute the table. Must have the same length as `rowHeaders`. Required.
          items:
            $ref: "#/components/schemas/Row"
          type: array
      type: object
    TestOrder:
      properties:
        deliveryDetails:
          $ref: "#/components/schemas/TestOrderDeliveryDetails"
          description: Overrides the predefined delivery details if provided.
        enableOrderinvoices:
          description: Whether the orderinvoices service should support this order.
          type: boolean
        kind:
          description: 'Identifies what kind of resource this is. Value: the fixed string "`content#testOrder`"'
          type: string
        lineItems:
          description: Required. Line items that are ordered. At least one line item must be provided.
          items:
            $ref: "#/components/schemas/TestOrderLineItem"
          type: array
        notificationMode:
          description: Restricted. Do not use.
          type: string
        pickupDetails:
          $ref: "#/components/schemas/TestOrderPickupDetails"
          description: Overrides the predefined pickup details if provided.
        predefinedBillingAddress:
          description: 'Required. The billing address. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        predefinedDeliveryAddress:
          description: 'Required. Identifier of one of the predefined delivery addresses for the delivery. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        predefinedEmail:
          description: 'Required. Email address of the customer. Acceptable values are: - "`pog.dwight.schrute@gmail.com`" - "`pog.jim.halpert@gmail.com`" - "`penpog.pam.beesly@gmail.comding`" '
          type: string
        predefinedPickupDetails:
          description: 'Identifier of one of the predefined pickup details. Required for orders containing line items with shipping type `pickup`. Acceptable values are: - "`dwight`" - "`jim`" - "`pam`" '
          type: string
        promotions:
          description: Promotions associated with the order.
          items:
            $ref: "#/components/schemas/OrderPromotion"
          type: array
        shippingCost:
          $ref: "#/components/schemas/Price"
          description: Required. The price of shipping for all items. Shipping tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied. Note that shipping is not taxed in certain states.
        shippingOption:
          description: 'Required. The requested shipping option. Acceptable values are: - "`economy`" - "`expedited`" - "`oneDay`" - "`sameDay`" - "`standard`" - "`twoDay`" '
          type: string
      type: object
    TestOrderAddress:
      properties:
        country:
          description: CLDR country code (for example, "US").
          type: string
        fullAddress:
          description: "Strings representing the lines of the printed label for mailing the order, for example: John Smith 1600 Amphitheatre Parkway Mountain View, CA, 94043 United States "
          items:
            type: string
          type: array
        isPostOfficeBox:
          description: Whether the address is a post office box.
          type: boolean
        locality:
          description: City, town or commune. May also include dependent localities or sublocalities (for example, neighborhoods or suburbs).
          type: string
        postalCode:
          description: Postal Code or ZIP (for example, "94043").
          type: string
        recipientName:
          description: Name of the recipient.
          type: string
        region:
          description: Top-level administrative subdivision of the country. For example, a state like California ("CA") or a province like Quebec ("QC").
          type: string
        streetAddress:
          description: Street-level part of the address. Use `\n` to add a second line.
          items:
            type: string
          type: array
      type: object
    TestOrderDeliveryDetails:
      properties:
        address:
          $ref: "#/components/schemas/TestOrderAddress"
          description: The delivery address
        isScheduledDelivery:
          description: Whether the order is scheduled delivery order.
          type: boolean
        phoneNumber:
          description: The phone number of the person receiving the delivery.
          type: string
      type: object
    TestOrderLineItem:
      properties:
        product:
          $ref: "#/components/schemas/TestOrderLineItemProduct"
          description: Required. Product data from the time of the order placement.
        quantityOrdered:
          description: Required. Number of items ordered.
          format: uint32
          type: integer
        returnInfo:
          $ref: "#/components/schemas/OrderLineItemReturnInfo"
          description: Required. Details of the return policy for the line item.
        shippingDetails:
          $ref: "#/components/schemas/OrderLineItemShippingDetails"
          description: Required. Details of the requested shipping for the line item.
      type: object
    TestOrderLineItemProduct:
      properties:
        brand:
          description: Required. Brand of the item.
          type: string
        condition:
          description: 'Required. Condition or state of the item. Acceptable values are: - "`new`" '
          type: string
        contentLanguage:
          description: 'Required. The two-letter ISO 639-1 language code for the item. Acceptable values are: - "`en`" - "`fr`" '
          type: string
        fees:
          description: Fees for the item. Optional.
          items:
            $ref: "#/components/schemas/OrderLineItemProductFee"
          type: array
        gtin:
          description: Global Trade Item Number (GTIN) of the item. Optional.
          type: string
        imageLink:
          description: Required. URL of an image of the item.
          type: string
        itemGroupId:
          description: Shared identifier for all variants of the same product. Optional.
          type: string
        mpn:
          description: Manufacturer Part Number (MPN) of the item. Optional.
          type: string
        offerId:
          description: Required. An identifier of the item.
          type: string
        price:
          $ref: "#/components/schemas/Price"
          description: Required. The price for the product. Tax is automatically calculated for orders where marketplace facilitator tax laws are applicable. Otherwise, tax settings from Merchant Center are applied.
        targetCountry:
          description: Required. The CLDR territory code of the target country of the product.
          type: string
        title:
          description: Required. The title of the product.
          type: string
        variantAttributes:
          description: Variant attributes for the item. Optional.
          items:
            $ref: "#/components/schemas/OrderLineItemProductVariantAttribute"
          type: array
      type: object
    TestOrderPickupDetails:
      properties:
        locationCode:
          description: Required. Code of the location defined by provider or merchant.
          type: string
        pickupLocationAddress:
          $ref: "#/components/schemas/TestOrderAddress"
          description: Required. Pickup location address.
        pickupLocationType:
          description: 'Pickup location type. Acceptable values are: - "`locker`" - "`store`" - "`curbside`" '
          type: string
        pickupPersons:
          description: Required. all pickup persons set by users.
          items:
            $ref: "#/components/schemas/TestOrderPickupDetailsPickupPerson"
          type: array
      type: object
    TestOrderPickupDetailsPickupPerson:
      properties:
        name:
          description: Required. Full name of the pickup person.
          type: string
        phoneNumber:
          description: Required. The phone number of the person picking up the items.
          type: string
      type: object
    TimePeriod:
      description: A message that represents a time period.
      properties:
        endTime:
          description: The ending timestamp.
          format: google-datetime
          type: string
        startTime:
          description: The starting timestamp.
          format: google-datetime
          type: string
      type: object
    TimeZone:
      description: Represents a time zone from the [IANA Time Zone Database](https://www.iana.org/time-zones).
      properties:
        id:
          description: IANA Time Zone Database time zone, e.g. "America/New_York".
          type: string
        version:
          description: Optional. IANA Time Zone Database version number, e.g. "2019a".
          type: string
      type: object
    TransitTable:
      properties:
        postalCodeGroupNames:
          description: 'A list of postal group names. The last value can be `"all other locations"`. Example: `["zone 1", "zone 2", "all other locations"]`. The referred postal code groups must match the delivery country of the service.'
          items:
            type: string
          type: array
        rows:
          items:
            $ref: "#/components/schemas/TransitTableTransitTimeRow"
          type: array
        transitTimeLabels:
          description: 'A list of transit time labels. The last value can be `"all other labels"`. Example: `["food", "electronics", "all other labels"]`.'
          items:
            type: string
          type: array
      type: object
    TransitTableTransitTimeRow:
      properties:
        values:
          items:
            $ref: "#/components/schemas/TransitTableTransitTimeRowTransitTimeValue"
          type: array
      type: object
    TransitTableTransitTimeRowTransitTimeValue:
      properties:
        maxTransitTimeInDays:
          description: Must be greater than or equal to `minTransitTimeInDays`.
          format: uint32
          type: integer
        minTransitTimeInDays:
          description: Transit time range (min-max) in business days. 0 means same day delivery, 1 means next day delivery.
          format: uint32
          type: integer
      type: object
    UndeleteConversionSourceRequest:
      description: Request message for the UndeleteConversionSource method.
      properties: {}
      type: object
    UnitInvoice:
      properties:
        additionalCharges:
          description: Additional charges for a unit, for example, shipping costs.
          items:
            $ref: "#/components/schemas/UnitInvoiceAdditionalCharge"
          type: array
        unitPrice:
          $ref: "#/components/schemas/Price"
          description: "[required] Pre-tax or post-tax price of one unit depending on the locality of the order. *Note:* Invoicing works on a per unit basis. The `unitPrice` is the price of a single unit, and will be multiplied by the number of entries in `shipmentUnitId`."
        unitPriceTaxes:
          description: Tax amounts to apply to the unit price.
          items:
            $ref: "#/components/schemas/UnitInvoiceTaxLine"
          type: array
      type: object
    UnitInvoiceAdditionalCharge:
      properties:
        additionalChargeAmount:
          $ref: "#/components/schemas/Amount"
          description: "[required] Amount of the additional charge per unit. *Note:* Invoicing works on a per unit bases. The `additionalChargeAmount` is the amount charged per unit, and will be multiplied by the number of entries in `shipmentUnitID`."
        type:
          description: '[required] Type of the additional charge. Acceptable values are: - "`shipping`" '
          type: string
      type: object
    UnitInvoiceTaxLine:
      properties:
        taxAmount:
          $ref: "#/components/schemas/Price"
          description: "[required] Tax amount for the tax type."
        taxName:
          description: Optional name of the tax type. This should only be provided if `taxType` is `otherFeeTax`.
          type: string
        taxType:
          description: '[required] Type of the tax. Acceptable values are: - "`otherFee`" - "`otherFeeTax`" - "`sales`" '
          type: string
      type: object
    UrlSettings:
      description: Specifications related to the `Checkout` URL. The `UriTemplate` is of the form `https://www.mystore.com/checkout?item_id={id}` where `{id}` will be automatically replaced with data from the merchant account with this attribute [offer_id](https://developers.google.com/shopping-content/reference/rest/v2.1/products#Product.FIELDS.offer_id)
      properties:
        cartUriTemplate:
          description: URL template when the placeholders are expanded will redirect the buyer to the cart page on the merchant website with the selected item in cart.
          type: string
        checkoutUriTemplate:
          description: URL template when the placeholders are expanded will redirect the buyer to the merchant checkout page with the item in the cart.
          type: string
      type: object
    Value:
      description: The single value of a rate group or the value of a rate group table's cell. Exactly one of `noShipping`, `flatRate`, `pricePercentage`, `carrierRateName`, `subtableName` must be set.
      properties:
        carrierRateName:
          description: The name of a carrier rate referring to a carrier rate defined in the same rate group. Can only be set if all other fields are not set.
          type: string
        flatRate:
          $ref: "#/components/schemas/Price"
          description: A flat rate. Can only be set if all other fields are not set.
        noShipping:
          description: If true, then the product can't ship. Must be true when set, can only be set if all other fields are not set.
          type: boolean
        pricePercentage:
          description: A percentage of the price represented as a number in decimal notation (for example, `"5.4"`). Can only be set if all other fields are not set.
          type: string
        subtableName:
          description: The name of a subtable. Can only be set in table cells (not for single values), and only if all other fields are not set.
          type: string
      type: object
    VerifyPhoneNumberRequest:
      description: Request message for the VerifyPhoneNumber method.
      properties:
        phoneVerificationMethod:
          description: Verification method used to receive verification code.
          enum:
            - PHONE_VERIFICATION_METHOD_UNSPECIFIED
            - SMS
            - PHONE_CALL
          type: string
        verificationCode:
          description: The verification code that was sent to the phone number for validation.
          type: string
        verificationId:
          description: The verification ID returned by `requestphoneverification`.
          type: string
      type: object
    VerifyPhoneNumberResponse:
      description: Response message for the VerifyPhoneNumber method.
      properties:
        verifiedPhoneNumber:
          description: Verified phone number if verification is successful. This phone number can only be replaced by another verified phone number.
          type: string
      type: object
    Warehouse:
      description: A fulfillment warehouse, which stores and handles inventory.
      properties:
        businessDayConfig:
          $ref: "#/components/schemas/BusinessDayConfig"
          description: Business days of the warehouse. If not set, will be Monday to Friday by default.
        cutoffTime:
          $ref: "#/components/schemas/WarehouseCutoffTime"
          description: Required. The latest time of day that an order can be accepted and begin processing. Later orders will be processed in the next day. The time is based on the warehouse postal code.
        handlingDays:
          description: Required. The number of days it takes for this warehouse to pack up and ship an item. This is on the warehouse level, but can be overridden on the offer level based on the attributes of an item.
          format: int64
          type: string
        name:
          description: Required. The name of the warehouse. Must be unique within account.
          type: string
        shippingAddress:
          $ref: "#/components/schemas/Address"
          description: Required. Shipping address of the warehouse.
      type: object
    WarehouseBasedDeliveryTime:
      properties:
        carrier:
          description: Required. Carrier, such as `"UPS"` or `"Fedex"`. The list of supported carriers can be retrieved through the `listSupportedCarriers` method.
          type: string
        carrierService:
          description: Required. Carrier service, such as `"ground"` or `"2 days"`. The list of supported services for a carrier can be retrieved through the `listSupportedCarriers` method. The name of the service must be in the eddSupportedServices list.
          type: string
        originAdministrativeArea:
          description: Shipping origin's state.
          type: string
        originCity:
          description: Shipping origin's city.
          type: string
        originCountry:
          description: Shipping origin's country represented as a [CLDR territory code](https://github.com/unicode-org/cldr/blob/latest/common/main/en.xml).
          type: string
        originPostalCode:
          description: Shipping origin.
          type: string
        originStreetAddress:
          description: Shipping origin's street address.
          type: string
        warehouseName:
          description: The name of the warehouse. Warehouse name need to be matched with name. If warehouseName is set, the below fields will be ignored. The warehouse info will be read from warehouse.
          type: string
      type: object
    WarehouseCutoffTime:
      properties:
        hour:
          description: Required. Hour (24-hour clock) of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Hour is based on the timezone of warehouse.
          format: int32
          type: integer
        minute:
          description: Required. Minute of the cutoff time until which an order has to be placed to be processed in the same day by the warehouse. Minute is based on the timezone of warehouse.
          format: int32
          type: integer
      type: object
    Weight:
      properties:
        unit:
          description: 'Required. The weight unit. Acceptable values are: - "`kg`" - "`lb`" '
          type: string
        value:
          description: Required. The weight represented as a number. The weight can have a maximum precision of four decimal places.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/content: Manage your product listings and accounts for Google Shopping
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
