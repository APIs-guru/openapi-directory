# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_promotion import OrderPromotion

class TestOrderPromotion(unittest.TestCase):
    """OrderPromotion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderPromotion:
        """Test OrderPromotion
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderPromotion`
        """
        model = OrderPromotion()
        if include_optional:
            return OrderPromotion(
                applicable_items = [
                    openapi_client.models.order_promotion_item.OrderPromotionItem(
                        line_item_id = '', 
                        offer_id = '', 
                        product_id = '', 
                        quantity = 56, )
                    ],
                applied_items = [
                    openapi_client.models.order_promotion_item.OrderPromotionItem(
                        line_item_id = '', 
                        offer_id = '', 
                        product_id = '', 
                        quantity = 56, )
                    ],
                end_time = '',
                funder = '',
                merchant_promotion_id = '',
                price_value = openapi_client.models.price.Price(
                    currency = '', 
                    value = '', ),
                short_title = '',
                start_time = '',
                subtype = '',
                tax_value = openapi_client.models.price.Price(
                    currency = '', 
                    value = '', ),
                title = '',
                type = ''
            )
        else:
            return OrderPromotion(
        )
        """

    def testOrderPromotion(self):
        """Test OrderPromotion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
