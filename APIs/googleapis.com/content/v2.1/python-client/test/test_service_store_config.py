# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.service_store_config import ServiceStoreConfig

class TestServiceStoreConfig(unittest.TestCase):
    """ServiceStoreConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ServiceStoreConfig:
        """Test ServiceStoreConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ServiceStoreConfig`
        """
        model = ServiceStoreConfig()
        if include_optional:
            return ServiceStoreConfig(
                cutoff_config = openapi_client.models.service_store_config_cutoff_config.ServiceStoreConfigCutoffConfig(
                    local_cutoff_time = openapi_client.models.service_store_config_cutoff_config_local_cutoff_time.ServiceStoreConfigCutoffConfigLocalCutoffTime(
                        hour = '', 
                        minute = '', ), 
                    no_delivery_post_cutoff = True, 
                    store_close_offset_hours = '', ),
                service_radius = openapi_client.models.distance.Distance(
                    unit = '', 
                    value = '', ),
                store_codes = [
                    ''
                    ],
                store_service_type = ''
            )
        else:
            return ServiceStoreConfig(
        )
        """

    def testServiceStoreConfig(self):
        """Test ServiceStoreConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
