# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account_automatic_improvements import AccountAutomaticImprovements

class TestAccountAutomaticImprovements(unittest.TestCase):
    """AccountAutomaticImprovements unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccountAutomaticImprovements:
        """Test AccountAutomaticImprovements
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccountAutomaticImprovements`
        """
        model = AccountAutomaticImprovements()
        if include_optional:
            return AccountAutomaticImprovements(
                image_improvements = openapi_client.models.account_image_improvements.AccountImageImprovements(
                    account_image_improvements_settings = openapi_client.models.account_image_improvements_settings.AccountImageImprovementsSettings(
                        allow_automatic_image_improvements = True, ), 
                    effective_allow_automatic_image_improvements = True, ),
                item_updates = openapi_client.models.account_item_updates.AccountItemUpdates(
                    account_item_updates_settings = openapi_client.models.account_item_updates_settings.AccountItemUpdatesSettings(
                        allow_availability_updates = True, 
                        allow_condition_updates = True, 
                        allow_price_updates = True, 
                        allow_strict_availability_updates = True, ), 
                    effective_allow_availability_updates = True, 
                    effective_allow_condition_updates = True, 
                    effective_allow_price_updates = True, 
                    effective_allow_strict_availability_updates = True, ),
                shipping_improvements = openapi_client.models.account_shipping_improvements.AccountShippingImprovements(
                    allow_shipping_improvements = True, )
            )
        else:
            return AccountAutomaticImprovements(
        )
        """

    def testAccountAutomaticImprovements(self):
        """Test AccountAutomaticImprovements"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
