# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account import Account

class TestAccount(unittest.TestCase):
    """Account unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Account:
        """Test Account
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Account`
        """
        model = Account()
        if include_optional:
            return Account(
                account_management = '',
                ads_links = [
                    openapi_client.models.account_ads_link.AccountAdsLink(
                        ads_id = '', 
                        status = '', )
                    ],
                adult_content = True,
                automatic_improvements = openapi_client.models.account_automatic_improvements.AccountAutomaticImprovements(
                    image_improvements = openapi_client.models.account_image_improvements.AccountImageImprovements(
                        account_image_improvements_settings = openapi_client.models.account_image_improvements_settings.AccountImageImprovementsSettings(
                            allow_automatic_image_improvements = True, ), 
                        effective_allow_automatic_image_improvements = True, ), 
                    item_updates = openapi_client.models.account_item_updates.AccountItemUpdates(
                        account_item_updates_settings = openapi_client.models.account_item_updates_settings.AccountItemUpdatesSettings(
                            allow_availability_updates = True, 
                            allow_condition_updates = True, 
                            allow_price_updates = True, 
                            allow_strict_availability_updates = True, ), 
                        effective_allow_availability_updates = True, 
                        effective_allow_condition_updates = True, 
                        effective_allow_price_updates = True, 
                        effective_allow_strict_availability_updates = True, ), 
                    shipping_improvements = openapi_client.models.account_shipping_improvements.AccountShippingImprovements(
                        allow_shipping_improvements = True, ), ),
                automatic_label_ids = [
                    ''
                    ],
                business_identity = openapi_client.models.account_business_identity.AccountBusinessIdentity(
                    black_owned = openapi_client.models.account_identity_type.AccountIdentityType(
                        self_identified = True, ), 
                    include_for_promotions = True, 
                    latino_owned = openapi_client.models.account_identity_type.AccountIdentityType(
                        self_identified = True, ), 
                    small_business = , 
                    veteran_owned = , 
                    women_owned = , ),
                business_information = openapi_client.models.account_business_information.AccountBusinessInformation(
                    address = openapi_client.models.account_address.AccountAddress(
                        country = '', 
                        locality = '', 
                        postal_code = '', 
                        region = '', 
                        street_address = '', ), 
                    customer_service = openapi_client.models.account_customer_service.AccountCustomerService(
                        email = '', 
                        phone_number = '', 
                        url = '', ), 
                    korean_business_registration_number = '', 
                    phone_number = '', 
                    phone_verification_status = '', ),
                conversion_settings = openapi_client.models.account_conversion_settings.AccountConversionSettings(
                    free_listings_auto_tagging_enabled = True, ),
                css_id = '',
                google_my_business_link = openapi_client.models.account_google_my_business_link.AccountGoogleMyBusinessLink(
                    gmb_account_id = '', 
                    gmb_email = '', 
                    status = '', ),
                id = '',
                kind = '',
                label_ids = [
                    ''
                    ],
                name = '',
                seller_id = '',
                users = [
                    openapi_client.models.account_user.AccountUser(
                        admin = True, 
                        email_address = '', 
                        order_manager = True, 
                        payments_analyst = True, 
                        payments_manager = True, 
                        reporting_manager = True, )
                    ],
                website_url = '',
                youtube_channel_links = [
                    openapi_client.models.account_you_tube_channel_link.AccountYouTubeChannelLink(
                        channel_id = '', 
                        status = '', )
                    ]
            )
        else:
            return Account(
        )
        """

    def testAccount(self):
        """Test Account"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
