# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.return_policy_online_return_reason_category_info import ReturnPolicyOnlineReturnReasonCategoryInfo

class TestReturnPolicyOnlineReturnReasonCategoryInfo(unittest.TestCase):
    """ReturnPolicyOnlineReturnReasonCategoryInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReturnPolicyOnlineReturnReasonCategoryInfo:
        """Test ReturnPolicyOnlineReturnReasonCategoryInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReturnPolicyOnlineReturnReasonCategoryInfo`
        """
        model = ReturnPolicyOnlineReturnReasonCategoryInfo()
        if include_optional:
            return ReturnPolicyOnlineReturnReasonCategoryInfo(
                return_label_source = 'RETURN_LABEL_SOURCE_UNSPECIFIED',
                return_reason_category = 'RETURN_REASON_CATEGORY_UNSPECIFIED',
                return_shipping_fee = openapi_client.models.return_policy_online_return_shipping_fee.ReturnPolicyOnlineReturnShippingFee(
                    fixed_fee = openapi_client.models.price_amount.PriceAmount(
                        currency = '', 
                        value = '', ), 
                    type = 'TYPE_UNSPECIFIED', )
            )
        else:
            return ReturnPolicyOnlineReturnReasonCategoryInfo(
        )
        """

    def testReturnPolicyOnlineReturnReasonCategoryInfo(self):
        """Test ReturnPolicyOnlineReturnReasonCategoryInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
