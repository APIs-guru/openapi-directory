# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.action_reason import ActionReason

class TestActionReason(unittest.TestCase):
    """ActionReason unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ActionReason:
        """Test ActionReason
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ActionReason`
        """
        model = ActionReason()
        if include_optional:
            return ActionReason(
                action = openapi_client.models.action.Action(
                    builtin_simple_action = openapi_client.models.built_in_simple_action.BuiltInSimpleAction(
                        additional_content = openapi_client.models.built_in_simple_action_additional_content.BuiltInSimpleActionAdditionalContent(
                            paragraphs = [
                                ''
                                ], 
                            title = '', ), 
                        attribute_code = '', 
                        type = 'BUILT_IN_SIMPLE_ACTION_TYPE_UNSPECIFIED', ), 
                    button_label = '', 
                    external_action = openapi_client.models.external_action.ExternalAction(
                        type = 'EXTERNAL_ACTION_TYPE_UNSPECIFIED', 
                        uri = '', ), 
                    is_available = True, 
                    reasons = [
                        openapi_client.models.action_reason.ActionReason(
                            detail = '', 
                            message = '', )
                        ], ),
                detail = '',
                message = ''
            )
        else:
            return ActionReason(
        )
        """

    def testActionReason(self):
        """Test ActionReason"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
