# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.test_order_line_item_product import TestOrderLineItemProduct

class TestTestOrderLineItemProduct(unittest.TestCase):
    """TestOrderLineItemProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TestOrderLineItemProduct:
        """Test TestOrderLineItemProduct
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TestOrderLineItemProduct`
        """
        model = TestOrderLineItemProduct()
        if include_optional:
            return TestOrderLineItemProduct(
                brand = '',
                condition = '',
                content_language = '',
                fees = [
                    openapi_client.models.order_line_item_product_fee.OrderLineItemProductFee(
                        amount = openapi_client.models.price.Price(
                            currency = '', 
                            value = '', ), 
                        name = '', )
                    ],
                gtin = '',
                image_link = '',
                item_group_id = '',
                mpn = '',
                offer_id = '',
                price = openapi_client.models.price.Price(
                    currency = '', 
                    value = '', ),
                target_country = '',
                title = '',
                variant_attributes = [
                    openapi_client.models.order_line_item_product_variant_attribute.OrderLineItemProductVariantAttribute(
                        dimension = '', 
                        value = '', )
                    ]
            )
        else:
            return TestOrderLineItemProduct(
        )
        """

    def testTestOrderLineItemProduct(self):
        """Test TestOrderLineItemProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
