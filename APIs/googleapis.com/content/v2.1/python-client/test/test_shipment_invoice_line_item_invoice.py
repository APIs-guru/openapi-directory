# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.shipment_invoice_line_item_invoice import ShipmentInvoiceLineItemInvoice

class TestShipmentInvoiceLineItemInvoice(unittest.TestCase):
    """ShipmentInvoiceLineItemInvoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ShipmentInvoiceLineItemInvoice:
        """Test ShipmentInvoiceLineItemInvoice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ShipmentInvoiceLineItemInvoice`
        """
        model = ShipmentInvoiceLineItemInvoice()
        if include_optional:
            return ShipmentInvoiceLineItemInvoice(
                line_item_id = '',
                product_id = '',
                shipment_unit_ids = [
                    ''
                    ],
                unit_invoice = openapi_client.models.unit_invoice.UnitInvoice(
                    additional_charges = [
                        openapi_client.models.unit_invoice_additional_charge.UnitInvoiceAdditionalCharge(
                            additional_charge_amount = openapi_client.models.amount.Amount(
                                price_amount = openapi_client.models.price.Price(
                                    currency = '', 
                                    value = '', ), 
                                tax_amount = openapi_client.models.price.Price(
                                    currency = '', 
                                    value = '', ), ), 
                            type = '', )
                        ], 
                    unit_price = , 
                    unit_price_taxes = [
                        openapi_client.models.unit_invoice_tax_line.UnitInvoiceTaxLine(
                            tax_name = '', 
                            tax_type = '', )
                        ], )
            )
        else:
            return ShipmentInvoiceLineItemInvoice(
        )
        """

    def testShipmentInvoiceLineItemInvoice(self):
        """Test ShipmentInvoiceLineItemInvoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
