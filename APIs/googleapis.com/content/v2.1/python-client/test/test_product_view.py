# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.product_view import ProductView

class TestProductView(unittest.TestCase):
    """ProductView unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProductView:
        """Test ProductView
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProductView`
        """
        model = ProductView()
        if include_optional:
            return ProductView(
                aggregated_destination_status = 'AGGREGATED_STATUS_UNSPECIFIED',
                availability = '',
                brand = '',
                category_l1 = '',
                category_l2 = '',
                category_l3 = '',
                category_l4 = '',
                category_l5 = '',
                channel = 'CHANNEL_UNSPECIFIED',
                condition = '',
                creation_time = '',
                currency_code = '',
                expiration_date = openapi_client.models.date.Date(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                gtin = [
                    ''
                    ],
                id = '',
                item_group_id = '',
                item_issues = [
                    openapi_client.models.product_view_item_issue.ProductViewItemIssue(
                        issue_type = openapi_client.models.product_view_item_issue_item_issue_type.ProductViewItemIssueItemIssueType(
                            canonical_attribute = '', 
                            code = '', ), 
                        resolution = 'UNKNOWN', 
                        severity = openapi_client.models.product_view_item_issue_item_issue_severity.ProductViewItemIssueItemIssueSeverity(
                            aggregated_severity = 'AGGREGATED_ISSUE_SEVERITY_UNSPECIFIED', 
                            severity_per_destination = [
                                openapi_client.models.product_view_item_issue_issue_severity_per_destination.ProductViewItemIssueIssueSeverityPerDestination(
                                    demoted_countries = [
                                        ''
                                        ], 
                                    destination = '', 
                                    disapproved_countries = [
                                        ''
                                        ], )
                                ], ), )
                    ],
                language_code = '',
                offer_id = '',
                price_micros = '',
                product_type_l1 = '',
                product_type_l2 = '',
                product_type_l3 = '',
                product_type_l4 = '',
                product_type_l5 = '',
                shipping_label = '',
                title = ''
            )
        else:
            return ProductView(
        )
        """

    def testProductView(self):
        """Test ProductView"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
