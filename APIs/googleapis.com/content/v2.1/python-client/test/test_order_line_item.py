# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.order_line_item import OrderLineItem

class TestOrderLineItem(unittest.TestCase):
    """OrderLineItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderLineItem:
        """Test OrderLineItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderLineItem`
        """
        model = OrderLineItem()
        if include_optional:
            return OrderLineItem(
                adjustments = [
                    openapi_client.models.order_line_item_adjustment.OrderLineItemAdjustment(
                        price_adjustment = openapi_client.models.price.Price(
                            currency = '', 
                            value = '', ), 
                        tax_adjustment = openapi_client.models.price.Price(
                            currency = '', 
                            value = '', ), 
                        type = '', )
                    ],
                annotations = [
                    openapi_client.models.order_merchant_provided_annotation.OrderMerchantProvidedAnnotation(
                        key = '', 
                        value = '', )
                    ],
                cancellations = [
                    openapi_client.models.order_cancellation.OrderCancellation(
                        actor = '', 
                        creation_date = '', 
                        quantity = 56, 
                        reason = '', 
                        reason_text = '', )
                    ],
                id = '',
                price = openapi_client.models.price.Price(
                    currency = '', 
                    value = '', ),
                product = openapi_client.models.order_line_item_product.OrderLineItemProduct(
                    brand = '', 
                    condition = '', 
                    content_language = '', 
                    fees = [
                        openapi_client.models.order_line_item_product_fee.OrderLineItemProductFee(
                            amount = openapi_client.models.price.Price(
                                currency = '', 
                                value = '', ), 
                            name = '', )
                        ], 
                    gtin = '', 
                    id = '', 
                    image_link = '', 
                    item_group_id = '', 
                    mpn = '', 
                    offer_id = '', 
                    price = openapi_client.models.price.Price(
                        currency = '', 
                        value = '', ), 
                    shown_image = '', 
                    target_country = '', 
                    title = '', 
                    variant_attributes = [
                        openapi_client.models.order_line_item_product_variant_attribute.OrderLineItemProductVariantAttribute(
                            dimension = '', 
                            value = '', )
                        ], ),
                quantity_canceled = 56,
                quantity_delivered = 56,
                quantity_ordered = 56,
                quantity_pending = 56,
                quantity_ready_for_pickup = 56,
                quantity_returned = 56,
                quantity_shipped = 56,
                quantity_undeliverable = 56,
                return_info = openapi_client.models.order_line_item_return_info.OrderLineItemReturnInfo(
                    days_to_return = 56, 
                    is_returnable = True, 
                    policy_url = '', ),
                returns = [
                    openapi_client.models.order_return.OrderReturn(
                        actor = '', 
                        creation_date = '', 
                        quantity = 56, 
                        reason = '', 
                        reason_text = '', )
                    ],
                shipping_details = openapi_client.models.order_line_item_shipping_details.OrderLineItemShippingDetails(
                    deliver_by_date = '', 
                    method = openapi_client.models.order_line_item_shipping_details_method.OrderLineItemShippingDetailsMethod(
                        carrier = '', 
                        max_days_in_transit = 56, 
                        method_name = '', 
                        min_days_in_transit = 56, ), 
                    pickup_promise_in_minutes = 56, 
                    ship_by_date = '', 
                    type = '', ),
                tax = openapi_client.models.price.Price(
                    currency = '', 
                    value = '', )
            )
        else:
            return OrderLineItem(
        )
        """

    def testOrderLineItem(self):
        """Test OrderLineItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
