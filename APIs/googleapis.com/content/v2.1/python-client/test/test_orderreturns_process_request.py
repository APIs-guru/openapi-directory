# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.orderreturns_process_request import OrderreturnsProcessRequest

class TestOrderreturnsProcessRequest(unittest.TestCase):
    """OrderreturnsProcessRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OrderreturnsProcessRequest:
        """Test OrderreturnsProcessRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OrderreturnsProcessRequest`
        """
        model = OrderreturnsProcessRequest()
        if include_optional:
            return OrderreturnsProcessRequest(
                full_charge_return_shipping_cost = True,
                operation_id = '',
                refund_shipping_fee = openapi_client.models.orderreturns_refund_operation.OrderreturnsRefundOperation(
                    full_refund = True, 
                    partial_refund = openapi_client.models.orderreturns_partial_refund.OrderreturnsPartialRefund(
                        price_amount = openapi_client.models.price.Price(
                            currency = '', 
                            value = '', ), 
                        tax_amount = openapi_client.models.price.Price(
                            currency = '', 
                            value = '', ), ), 
                    payment_type = '', 
                    reason_text = '', 
                    return_refund_reason = '', ),
                return_items = [
                    openapi_client.models.orderreturns_return_item.OrderreturnsReturnItem(
                        refund = openapi_client.models.orderreturns_refund_operation.OrderreturnsRefundOperation(
                            full_refund = True, 
                            partial_refund = openapi_client.models.orderreturns_partial_refund.OrderreturnsPartialRefund(
                                price_amount = openapi_client.models.price.Price(
                                    currency = '', 
                                    value = '', ), 
                                tax_amount = openapi_client.models.price.Price(
                                    currency = '', 
                                    value = '', ), ), 
                            payment_type = '', 
                            reason_text = '', 
                            return_refund_reason = '', ), 
                        reject = openapi_client.models.orderreturns_reject_operation.OrderreturnsRejectOperation(
                            reason = '', 
                            reason_text = '', ), 
                        return_item_id = '', )
                    ]
            )
        else:
            return OrderreturnsProcessRequest(
        )
        """

    def testOrderreturnsProcessRequest(self):
        """Test OrderreturnsProcessRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
