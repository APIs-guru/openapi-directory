# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.table import Table

class TestTable(unittest.TestCase):
    """Table unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Table:
        """Test Table
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Table`
        """
        model = Table()
        if include_optional:
            return Table(
                column_headers = openapi_client.models.headers.Headers(
                    locations = [
                        openapi_client.models.location_id_set.LocationIdSet(
                            location_ids = [
                                ''
                                ], )
                        ], 
                    number_of_items = [
                        ''
                        ], 
                    postal_code_group_names = [
                        ''
                        ], 
                    prices = [
                        openapi_client.models.price.Price(
                            currency = '', 
                            value = '', )
                        ], 
                    weights = [
                        openapi_client.models.weight.Weight(
                            unit = '', 
                            value = '', )
                        ], ),
                name = '',
                row_headers = openapi_client.models.headers.Headers(
                    locations = [
                        openapi_client.models.location_id_set.LocationIdSet(
                            location_ids = [
                                ''
                                ], )
                        ], 
                    number_of_items = [
                        ''
                        ], 
                    postal_code_group_names = [
                        ''
                        ], 
                    prices = [
                        openapi_client.models.price.Price(
                            currency = '', 
                            value = '', )
                        ], 
                    weights = [
                        openapi_client.models.weight.Weight(
                            unit = '', 
                            value = '', )
                        ], ),
                rows = [
                    openapi_client.models.row.Row(
                        cells = [
                            openapi_client.models.value.Value(
                                carrier_rate_name = '', 
                                flat_rate = openapi_client.models.price.Price(
                                    currency = '', 
                                    value = '', ), 
                                no_shipping = True, 
                                price_percentage = '', 
                                subtable_name = '', )
                            ], )
                    ]
            )
        else:
            return Table(
        )
        """

    def testTable(self):
        """Test Table"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
