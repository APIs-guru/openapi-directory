# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.checkout_settings import CheckoutSettings

class TestCheckoutSettings(unittest.TestCase):
    """CheckoutSettings unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckoutSettings:
        """Test CheckoutSettings
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckoutSettings`
        """
        model = CheckoutSettings()
        if include_optional:
            return CheckoutSettings(
                effective_enrollment_state = 'CHECKOUT_ON_MERCHANT_ENROLLMENT_STATE_UNSPECIFIED',
                effective_review_state = 'CHECKOUT_ON_MERCHANT_REVIEW_STATE_UNSPECIFIED',
                effective_uri_settings = openapi_client.models.url_settings.UrlSettings(
                    cart_uri_template = '', 
                    checkout_uri_template = '', ),
                enrollment_state = 'CHECKOUT_ON_MERCHANT_ENROLLMENT_STATE_UNSPECIFIED',
                merchant_id = '',
                review_state = 'CHECKOUT_ON_MERCHANT_REVIEW_STATE_UNSPECIFIED',
                uri_settings = openapi_client.models.url_settings.UrlSettings(
                    cart_uri_template = '', 
                    checkout_uri_template = '', )
            )
        else:
            return CheckoutSettings(
        )
        """

    def testCheckoutSettings(self):
        """Test CheckoutSettings"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
