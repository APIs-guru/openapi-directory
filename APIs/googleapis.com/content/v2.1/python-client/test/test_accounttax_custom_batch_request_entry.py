# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.accounttax_custom_batch_request_entry import AccounttaxCustomBatchRequestEntry

class TestAccounttaxCustomBatchRequestEntry(unittest.TestCase):
    """AccounttaxCustomBatchRequestEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AccounttaxCustomBatchRequestEntry:
        """Test AccounttaxCustomBatchRequestEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AccounttaxCustomBatchRequestEntry`
        """
        model = AccounttaxCustomBatchRequestEntry()
        if include_optional:
            return AccounttaxCustomBatchRequestEntry(
                account_id = '',
                account_tax = openapi_client.models.account_tax.AccountTax(
                    account_id = '', 
                    kind = '', 
                    rules = [
                        openapi_client.models.account_tax_tax_rule.AccountTaxTaxRule(
                            country = '', 
                            location_id = '', 
                            rate_percent = '', 
                            shipping_taxed = True, 
                            use_global_rate = True, )
                        ], ),
                batch_id = 56,
                merchant_id = '',
                method = ''
            )
        else:
            return AccounttaxCustomBatchRequestEntry(
        )
        """

    def testAccounttaxCustomBatchRequestEntry(self):
        """Test AccounttaxCustomBatchRequestEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
