# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.collection_status import CollectionStatus

class TestCollectionStatus(unittest.TestCase):
    """CollectionStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CollectionStatus:
        """Test CollectionStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CollectionStatus`
        """
        model = CollectionStatus()
        if include_optional:
            return CollectionStatus(
                collection_level_issuses = [
                    openapi_client.models.collection_status_item_level_issue.CollectionStatusItemLevelIssue(
                        applicable_countries = [
                            ''
                            ], 
                        attribute_name = '', 
                        code = '', 
                        description = '', 
                        destination = '', 
                        detail = '', 
                        documentation = '', 
                        resolution = '', 
                        servability = '', )
                    ],
                creation_date = '',
                destination_statuses = [
                    openapi_client.models.collection_status_destination_status.CollectionStatusDestinationStatus(
                        approved_countries = [
                            ''
                            ], 
                        destination = '', 
                        disapproved_countries = [
                            ''
                            ], 
                        pending_countries = [
                            ''
                            ], 
                        status = '', )
                    ],
                id = '',
                last_update_date = ''
            )
        else:
            return CollectionStatus(
        )
        """

    def testCollectionStatus(self):
        """Test CollectionStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
