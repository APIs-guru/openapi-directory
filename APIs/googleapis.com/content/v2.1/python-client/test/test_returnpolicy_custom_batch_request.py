# coding: utf-8

"""
    Content API for Shopping

    Manage your product listings and accounts for Google Shopping

    The version of the OpenAPI document: v2.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.returnpolicy_custom_batch_request import ReturnpolicyCustomBatchRequest

class TestReturnpolicyCustomBatchRequest(unittest.TestCase):
    """ReturnpolicyCustomBatchRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReturnpolicyCustomBatchRequest:
        """Test ReturnpolicyCustomBatchRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReturnpolicyCustomBatchRequest`
        """
        model = ReturnpolicyCustomBatchRequest()
        if include_optional:
            return ReturnpolicyCustomBatchRequest(
                entries = [
                    openapi_client.models.returnpolicy_custom_batch_request_entry.ReturnpolicyCustomBatchRequestEntry(
                        batch_id = 56, 
                        merchant_id = '', 
                        method = '', 
                        return_policy = openapi_client.models.return_policy.ReturnPolicy(
                            country = '', 
                            kind = '', 
                            label = '', 
                            name = '', 
                            non_free_return_reasons = [
                                ''
                                ], 
                            policy = openapi_client.models.return_policy_policy.ReturnPolicyPolicy(
                                last_return_date = '', 
                                number_of_days = '', 
                                type = '', ), 
                            return_policy_id = '', 
                            return_shipping_fee = openapi_client.models.price.Price(
                                currency = '', 
                                value = '', ), 
                            seasonal_overrides = [
                                openapi_client.models.return_policy_seasonal_override.ReturnPolicySeasonalOverride(
                                    end_date = '', 
                                    name = '', 
                                    start_date = '', )
                                ], ), 
                        return_policy_id = '', )
                    ]
            )
        else:
            return ReturnpolicyCustomBatchRequest(
        )
        """

    def testReturnpolicyCustomBatchRequest(self):
        """Test ReturnpolicyCustomBatchRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
