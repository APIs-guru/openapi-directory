openapi: 3.0.0
servers:
  - url: https://connectors.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Connectors API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://connectors.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: connectors
externalDocs:
  url: https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors
tags:
  - name: projects
paths:
  /v1/{name}:
    delete:
      description: Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.
      operationId: connectors.projects.locations.operations.delete
      parameters:
        - description: The name of the operation resource to be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. If set to true, any customConnectorVersion which is a child resource will also be deleted. https://aip.dev/135#cascading-delete
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets details of a single event type.
      operationId: connectors.projects.locations.providers.connectors.versions.eventtypes.get
      parameters:
        - description: "Required. Resource name of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*/eventtypes/*` Only global location is supported for EventType resource."
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `CUSTOMER` view.
          in: query
          name: view
          schema:
            enum:
              - CONNECTOR_VERSION_VIEW_UNSPECIFIED
              - CONNECTOR_VERSION_VIEW_BASIC
              - CONNECTOR_VERSION_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventType"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the parameters of a single ManagedZone.
      operationId: connectors.projects.locations.global.managedZones.patch
      parameters:
        - description: "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: "Required. The list of fields to update. Fields are specified relative to the managedZone. A field will be overwritten if it is in the mask. You can modify only the fields listed below. To update the managedZone details: * `description` * `labels` * `target_project` * `target_network`"
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagedZone"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}/locations:
    get:
      description: Lists information about the supported locations for this service.
      operationId: connectors.projects.locations.list
      parameters:
        - description: The resource that owns the locations collection, if applicable.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: A filter to narrow down results to a preferred subset. The filtering language accepts strings like `"displayName=tokyo"`, and is documented in more detail in [AIP-160](https://google.aip.dev/160).
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of results to return. If not set, the service selects a default.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A page token received from the `next_page_token` field in the response. Send that page token to receive the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}/operations:
    get:
      description: Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`.
      operationId: connectors.projects.locations.operations.list
      parameters:
        - description: The name of the operation's parent resource.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The standard list filter.
          in: query
          name: filter
          schema:
            type: string
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListOperationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
      operationId: connectors.projects.locations.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelOperationRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:getAction:
    get:
      description: Get action.
      operationId: connectors.projects.locations.connections.connectionSchemaMetadata.getAction
      parameters:
        - description: "Required. Resource name format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Id of the action.
          in: query
          name: actionId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:getEntityType:
    get:
      description: Get entity type.
      operationId: connectors.projects.locations.connections.connectionSchemaMetadata.getEntityType
      parameters:
        - description: "Required. Resource name format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Id of the entity type.
          in: query
          name: entityId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:listActions:
    get:
      description: List actions.
      operationId: connectors.projects.locations.connections.connectionSchemaMetadata.listActions
      parameters:
        - description: Required. Resource name format. projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Filter Wildcards are not supported in the filter currently.
          in: query
          name: filter
          schema:
            type: string
        - description: Page size. If unspecified, at most 50 actions will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which fields are returned in response. Defaults to BASIC view.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:listEntityTypes:
    get:
      description: List entity types.
      operationId: connectors.projects.locations.connections.connectionSchemaMetadata.listEntityTypes
      parameters:
        - description: "Required. Resource name format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Filter Wildcards are not supported in the filter currently.
          in: query
          name: filter
          schema:
            type: string
        - description: Page size. If unspecified, at most 50 entity types will be returned.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which fields are returned in response. Defaults to BASIC view.
          in: query
          name: view
          schema:
            enum:
              - VIEW_UNSPECIFIED
              - BASIC
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntityTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{name}:refresh:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Refresh runtime schema of a connection.
      operationId: connectors.projects.locations.connections.connectionSchemaMetadata.refresh
      parameters:
        - description: "Required. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshConnectionSchemaMetadataRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:repairEventing:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: RepaiEventing tries to repair eventing related event subscriptions.
      operationId: connectors.projects.locations.connections.repairEventing
      parameters:
        - description: "Required. Resource name of the form: `projects/*/locations/*/connections/*`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairEventingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:retry:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: RetryEventSubscription retries the registration of Subscription.
      operationId: connectors.projects.locations.connections.eventSubscriptions.retry
      parameters:
        - description: "Required. Resource name of the form: `projects/*/locations/*/connections/*/eventSubscriptions/*`"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetryEventSubscriptionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/connections:
    get:
      description: Lists Connections in a given project and location.
      operationId: connectors.projects.locations.connections.list
      parameters:
        - description: "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Order by parameters.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which fields of the Connection are returned in the response. Defaults to `BASIC` view.
          in: query
          name: view
          schema:
            enum:
              - CONNECTION_VIEW_UNSPECIFIED
              - BASIC
              - FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new Connection in a given project and location.
      operationId: connectors.projects.locations.connections.create
      parameters:
        - description: "Required. Parent resource of the Connection, of the form: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Identifier to assign to the Connection. Must be unique within scope of the parent resource.
          in: query
          name: connectionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Connection"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/connectors:
    get:
      description: Lists Connectors in a given project and location.
      operationId: connectors.projects.locations.providers.connectors.list
      parameters:
        - description: "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*` Only global location is supported for Connector resource."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter string.
          in: query
          name: filter
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectorsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/customConnectorVersions:
    get:
      description: List CustomConnectorVersions in a given project
      operationId: connectors.projects.locations.global.customConnectors.customConnectorVersions.list
      parameters:
        - description: "Required. Parent resource of the connectors, of the form: `projects/*/locations/{location}/customConnectors/*/customConnectorVersions/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomConnectorVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new CustomConnectorVersion in a given project and location.
      operationId: connectors.projects.locations.global.customConnectors.customConnectorVersions.create
      parameters:
        - description: "Required. Parent resource of the CreateCustomConnector, of the form: `projects/{project}/locations/{location}/customConnectors/{custom_connector}`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Identifier to assign to the CreateCustomConnectorVersion. Must be unique within scope of the parent resource.
          in: query
          name: customConnectorVersionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomConnectorVersion"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/customConnectors:
    get:
      description: List CustomConnectorVersions in a given project
      operationId: connectors.projects.locations.global.customConnectors.list
      parameters:
        - description: "Required. Parent resource of the custom connectors, of the form: `projects/*/locations/*` Only global location is supported for CustomConnector resource."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter string.
          in: query
          name: filter
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomConnectorsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new CustomConnector in a given project and location.
      operationId: connectors.projects.locations.global.customConnectors.create
      parameters:
        - description: "Required. Parent resource of the CreateCustomConnector, of the form: `projects/{project}/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Identifier to assign to the CreateCustomConnector. Must be unique within scope of the parent resource.
          in: query
          name: customConnectorId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomConnector"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/endpointAttachments:
    get:
      description: List EndpointAttachments in a given project
      operationId: connectors.projects.locations.endpointAttachments.list
      parameters:
        - description: "Required. Parent resource od the EndpointAttachment, of the form: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Order by parameters.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEndpointAttachmentsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new EndpointAttachment in a given project and location.
      operationId: connectors.projects.locations.endpointAttachments.create
      parameters:
        - description: "Required. Parent resource of the EndpointAttachment, of the form: `projects/*/locations/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Identifier to assign to the EndpointAttachment. Must be unique within scope of the parent resource.
          in: query
          name: endpointAttachmentId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EndpointAttachment"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/eventSubscriptions:
    get:
      description: List EventSubscriptions in a given project,location and connection.
      operationId: connectors.projects.locations.connections.eventSubscriptions.list
      parameters:
        - description: "Required. Parent resource of the EventSubscription, of the form: `projects/*/locations/*/connections/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Order by parameters.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventSubscriptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new EventSubscription in a given project,location and connection.
      operationId: connectors.projects.locations.connections.eventSubscriptions.create
      parameters:
        - description: "Required. Parent resource of the EventSubscription, of the form: `projects/*/locations/*/connections/*`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Identifier to assign to the Event Subscription. Must be unique within scope of the parent resource.
          in: query
          name: eventSubscriptionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventSubscription"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/eventtypes:
    get:
      description: Lists Event Types in a given Connector Version.
      operationId: connectors.projects.locations.providers.connectors.versions.eventtypes.list
      parameters:
        - description: "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*/versions/*` Only global location is supported for EventType resource."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEventTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/managedZones:
    get:
      description: List ManagedZones in a given project
      operationId: connectors.projects.locations.global.managedZones.list
      parameters:
        - description: "Required. Parent resource of the Managed Zone, of the form: `projects/*/locations/global`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Filter.
          in: query
          name: filter
          schema:
            type: string
        - description: Order by parameters.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListManagedZonesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new ManagedZone in a given project and location.
      operationId: connectors.projects.locations.global.managedZones.create
      parameters:
        - description: "Required. Parent resource of the ManagedZone, of the form: `projects/*/locations/global`"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. Identifier to assign to the ManagedZone. Must be unique within scope of the parent resource.
          in: query
          name: managedZoneId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManagedZone"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/providers:
    get:
      description: Lists Providers in a given project and location.
      operationId: connectors.projects.locations.providers.list
      parameters:
        - description: "Required. Parent resource of the API, of the form: `projects/*/locations/*` Only global location is supported for Provider resource."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListProvidersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/runtimeActionSchemas:
    get:
      description: List schema of a runtime actions filtered by action name.
      operationId: connectors.projects.locations.connections.runtimeActionSchemas.list
      parameters:
        - description: "Required. Parent resource of RuntimeActionSchema Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Required. Filter Format: action="{actionId}" Only action field is supported with literal equality operator. Accepted filter example: action="CancelOrder" Wildcards are not supported in the filter currently.'
          in: query
          name: filter
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRuntimeActionSchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/runtimeEntitySchemas:
    get:
      description: List schema of a runtime entities filtered by entity name.
      operationId: connectors.projects.locations.connections.runtimeEntitySchemas.list
      parameters:
        - description: "Required. Parent resource of RuntimeEntitySchema Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Required. Filter Format: entity="{entityId}" Only entity field is supported with literal equality operator. Accepted filter example: entity="Order" Wildcards are not supported in the filter currently.'
          in: query
          name: filter
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListRuntimeEntitySchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{parent}/versions:
    get:
      description: Lists Connector Versions in a given project and location.
      operationId: connectors.projects.locations.providers.connectors.versions.list
      parameters:
        - description: "Required. Parent resource of the connectors, of the form: `projects/*/locations/*/providers/*/connectors/*` Only global location is supported for ConnectorVersion resource."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which fields of the ConnectorVersion are returned in the response. Defaults to `BASIC` view.
          in: query
          name: view
          schema:
            enum:
              - CONNECTOR_VERSION_VIEW_UNSPECIFIED
              - CONNECTOR_VERSION_VIEW_BASIC
              - CONNECTOR_VERSION_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListConnectorVersionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resourcePath}:listenEvent:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: ListenEvent listens to the event.
      operationId: connectors.projects.locations.connections.listenEvent
      parameters:
        - description: Required. Resource path for request.
          in: path
          name: resourcePath
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ListenEventRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListenEventResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    get:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: connectors.projects.locations.providers.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
        - description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          in: query
          name: options.requestedPolicyVersion
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.
      operationId: connectors.projects.locations.providers.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: connectors.projects.locations.providers.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AuditConfig:
      description: 'Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { "audit_configs": [ { "service": "allServices", "audit_log_configs": [ { "log_type": "DATA_READ", "exempted_members": [ "user:jose@example.com" ] }, { "log_type": "DATA_WRITE" }, { "log_type": "ADMIN_READ" } ] }, { "service": "sampleservice.googleapis.com", "audit_log_configs": [ { "log_type": "DATA_READ" }, { "log_type": "DATA_WRITE", "exempted_members": [ "user:aliya@example.com" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts `jose@example.com` from DATA_READ logging, and `aliya@example.com` from DATA_WRITE logging.'
      properties:
        auditLogConfigs:
          description: The configuration for logging of each type of permission.
          items:
            $ref: "#/components/schemas/AuditLogConfig"
          type: array
        service:
          description: Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.
          type: string
      type: object
    AuditLogConfig:
      description: "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
      properties:
        exemptedMembers:
          description: Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.
          items:
            type: string
          type: array
        logType:
          description: The log type that this config enables.
          enum:
            - LOG_TYPE_UNSPECIFIED
            - ADMIN_READ
            - DATA_WRITE
            - DATA_READ
          type: string
      type: object
    AuthConfig:
      description: AuthConfig defines details of a authentication type.
      properties:
        additionalVariables:
          description: List containing additional auth configs.
          items:
            $ref: "#/components/schemas/ConfigVariable"
          type: array
        authKey:
          description: Identifier key for auth config
          type: string
        authType:
          description: The type of authentication configured.
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER_PASSWORD
            - OAUTH2_JWT_BEARER
            - OAUTH2_CLIENT_CREDENTIALS
            - SSH_PUBLIC_KEY
            - OAUTH2_AUTH_CODE_FLOW
            - GOOGLE_AUTHENTICATION
          type: string
        oauth2AuthCodeFlow:
          $ref: "#/components/schemas/Oauth2AuthCodeFlow"
          description: Oauth2AuthCodeFlow.
        oauth2ClientCredentials:
          $ref: "#/components/schemas/Oauth2ClientCredentials"
          description: Oauth2ClientCredentials.
        oauth2JwtBearer:
          $ref: "#/components/schemas/Oauth2JwtBearer"
          description: Oauth2JwtBearer.
        sshPublicKey:
          $ref: "#/components/schemas/SshPublicKey"
          description: SSH Public Key.
        userPassword:
          $ref: "#/components/schemas/UserPassword"
          description: UserPassword.
      type: object
    AuthConfigTemplate:
      description: AuthConfigTemplate defines required field over an authentication type.
      properties:
        authKey:
          description: Identifier key for auth config
          type: string
        authType:
          description: The type of authentication configured.
          enum:
            - AUTH_TYPE_UNSPECIFIED
            - USER_PASSWORD
            - OAUTH2_JWT_BEARER
            - OAUTH2_CLIENT_CREDENTIALS
            - SSH_PUBLIC_KEY
            - OAUTH2_AUTH_CODE_FLOW
            - GOOGLE_AUTHENTICATION
          type: string
        configVariableTemplates:
          description: Config variables to describe an `AuthConfig` for a `Connection`.
          items:
            $ref: "#/components/schemas/ConfigVariableTemplate"
          type: array
        description:
          description: Connector specific description for an authentication template.
          type: string
        displayName:
          description: Display name for authentication template.
          type: string
      type: object
    AuthorizationCodeLink:
      description: This configuration captures the details required to render an authorization link for the OAuth Authorization Code Flow.
      properties:
        clientId:
          description: The client ID assigned to the Google Cloud Connectors OAuth app for the connector data source.
          type: string
        enablePkce:
          description: Whether to enable PKCE for the auth code flow.
          type: boolean
        scopes:
          description: The scopes for which the user will authorize Google Cloud Connectors on the connector data source.
          items:
            type: string
          type: array
        uri:
          description: The base URI the user must click to trigger the authorization code login flow.
          type: string
      type: object
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. * `principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workforce identity pool. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}`: All workforce identities in a group. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All workforce identities with a specific attribute value. * `principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*`: All identities in a workforce identity pool. * `principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}`: A single identity in a workload identity pool. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}`: A workload identity pool group. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}`: All identities in a workload identity pool with a certain attribute. * `principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*`: All identities in a workload identity pool. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}`: Deleted single identity in a workforce identity pool. For example, `deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value`."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`. For an overview of the IAM roles and permissions, see the [IAM documentation](https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see [here](https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    CancelOperationRequest:
      description: The request message for Operations.CancelOperation.
      properties: {}
      type: object
    ConfigVariable:
      description: ConfigVariable represents a configuration variable present in a Connection. or AuthConfig.
      properties:
        boolValue:
          description: Value is a bool.
          type: boolean
        encryptionKeyValue:
          $ref: "#/components/schemas/EncryptionKey"
          description: Value is a Encryption Key.
        intValue:
          description: Value is an integer
          format: int64
          type: string
        key:
          description: Key of the config variable.
          type: string
        secretValue:
          $ref: "#/components/schemas/Secret"
          description: Value is a secret.
        stringValue:
          description: Value is a string.
          type: string
      type: object
    ConfigVariableTemplate:
      description: ConfigVariableTemplate provides metadata about a `ConfigVariable` that is used in a Connection.
      properties:
        authorizationCodeLink:
          $ref: "#/components/schemas/AuthorizationCodeLink"
          description: Authorization code link options. To be populated if `ValueType` is `AUTHORIZATION_CODE`
        description:
          description: Description.
          type: string
        displayName:
          description: Display name of the parameter.
          type: string
        enumOptions:
          description: Enum options. To be populated if `ValueType` is `ENUM`
          items:
            $ref: "#/components/schemas/EnumOption"
          type: array
        isAdvanced:
          description: Indicates if current template is part of advanced settings
          type: boolean
        key:
          description: Key of the config variable.
          type: string
        locationType:
          description: Optional. Location Tyep denotes where this value should be sent in BYOC connections.
          enum:
            - LOCATION_TYPE_UNSPECIFIED
            - HEADER
            - PAYLOAD
            - QUERY_PARAM
            - PATH_PARAM
          type: string
        required:
          description: Flag represents that this `ConfigVariable` must be provided for a connection.
          type: boolean
        requiredCondition:
          $ref: "#/components/schemas/LogicalExpression"
          description: Condition under which a field would be required. The condition can be represented in the form of a logical expression.
        roleGrant:
          $ref: "#/components/schemas/RoleGrant"
          description: Role grant configuration for the config variable.
        state:
          description: State of the config variable.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DEPRECATED
          type: string
        validationRegex:
          description: Regular expression in RE2 syntax used for validating the `value` of a `ConfigVariable`.
          type: string
        valueType:
          description: "Type of the parameter: string, int, bool etc. consider custom type for the benefit for the validation."
          enum:
            - VALUE_TYPE_UNSPECIFIED
            - STRING
            - INT
            - BOOL
            - SECRET
            - ENUM
            - AUTHORIZATION_CODE
            - ENCRYPTION_KEY
          type: string
      type: object
    Connection:
      description: Connection represents an instance of connector.
      properties:
        authConfig:
          $ref: "#/components/schemas/AuthConfig"
          description: Optional. Configuration for establishing the connection's authentication with an external system.
        configVariables:
          description: Optional. Configuration for configuring the connection with an external system.
          items:
            $ref: "#/components/schemas/ConfigVariable"
          type: array
        connectionRevision:
          description: Output only. Connection revision. This field is only updated when the connection is created or updated by User.
          format: int64
          readOnly: true
          type: string
        connectorVersion:
          description: "Required. Connector version on which the connection is created. The format is: projects/*/locations/*/providers/*/connectors/*/versions/* Only global location is supported for ConnectorVersion resource."
          type: string
        connectorVersionInfraConfig:
          $ref: "#/components/schemas/ConnectorVersionInfraConfig"
          description: Output only. Infra configs supported by Connector Version.
          readOnly: true
        connectorVersionLaunchStage:
          description: Output only. Flag to mark the version indicating the launch stage.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          readOnly: true
          type: string
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the resource.
          type: string
        destinationConfigs:
          description: Optional. Configuration of the Connector's destination. Only accepted for Connectors that accepts user defined destination(s).
          items:
            $ref: "#/components/schemas/DestinationConfig"
          type: array
        envoyImageLocation:
          description: "Output only. GCR location where the envoy image is stored. formatted like: gcr.io/{bucketName}/{imageName}"
          readOnly: true
          type: string
        eventingConfig:
          $ref: "#/components/schemas/EventingConfig"
          description: Optional. Eventing config of a connection
        eventingEnablementType:
          description: Optional. Eventing enablement type. Will be nil if eventing is not enabled.
          enum:
            - EVENTING_ENABLEMENT_TYPE_UNSPECIFIED
            - EVENTING_AND_CONNECTION
            - ONLY_EVENTING
          type: string
        eventingRuntimeData:
          $ref: "#/components/schemas/EventingRuntimeData"
          description: Output only. Eventing Runtime Data.
          readOnly: true
        imageLocation:
          description: "Output only. GCR location where the runtime image is stored. formatted like: gcr.io/{bucketName}/{imageName}"
          readOnly: true
          type: string
        isTrustedTester:
          description: Output only. Is trusted tester program enabled for the project.
          readOnly: true
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        lockConfig:
          $ref: "#/components/schemas/LockConfig"
          description: Optional. Configuration that indicates whether or not the Connection can be edited.
        logConfig:
          $ref: "#/components/schemas/ConnectorsLogConfig"
          description: Optional. Log configuration for the connection.
        name:
          description: "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}"
          readOnly: true
          type: string
        nodeConfig:
          $ref: "#/components/schemas/NodeConfig"
          description: Optional. Node configuration for the connection.
        serviceAccount:
          description: Optional. Service account needed for runtime plane to access Google Cloud resources.
          type: string
        serviceDirectory:
          description: Output only. The name of the Service Directory service name. Used for Private Harpoon to resolve the ILB address. e.g. "projects/cloud-connectors-e2e-testing/locations/us-central1/namespaces/istio-system/services/istio-ingressgateway-connectors"
          readOnly: true
          type: string
        sslConfig:
          $ref: "#/components/schemas/SslConfig"
          description: Optional. Ssl config of a connection
        status:
          $ref: "#/components/schemas/ConnectionStatus"
          description: Output only. Current status of the connection.
          readOnly: true
        subscriptionType:
          description: Output only. This subscription type enum states the subscription type of the project.
          enum:
            - SUBSCRIPTION_TYPE_UNSPECIFIED
            - PAY_G
            - PAID
          readOnly: true
          type: string
        suspended:
          description: Optional. Suspended indicates if a user has suspended a connection or not.
          type: boolean
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ConnectionSchemaMetadata:
      description: ConnectionSchemaMetadata is the singleton resource of each connection. It includes the entity and action names of runtime resources exposed by a connection backend.
      properties:
        actions:
          description: Output only. List of actions.
          items:
            type: string
          readOnly: true
          type: array
        entities:
          description: Output only. List of entity names.
          items:
            type: string
          readOnly: true
          type: array
        errorMessage:
          description: Error message for users.
          type: string
        name:
          description: "Output only. Resource name. Format: projects/{project}/locations/{location}/connections/{connection}/connectionSchemaMetadata"
          readOnly: true
          type: string
        refreshTime:
          description: Output only. Timestamp when the connection runtime schema refresh was triggered.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The current state of runtime schema.
          enum:
            - STATE_UNSPECIFIED
            - REFRESHING
            - UPDATED
            - REFRESHING_SCHEMA_METADATA
            - UPDATED_SCHEMA_METADATA
            - REFRESH_SCHEMA_METADATA_FAILED
            - REFRESHING_FULL_SCHEMA
            - UPDATED_FULL_SCHEMA
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when the connection runtime schema was updated.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ConnectionStatus:
      description: ConnectionStatus indicates the state of the connection.
      properties:
        description:
          description: Description.
          type: string
        state:
          description: State.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - INACTIVE
            - DELETING
            - UPDATING
            - ERROR
            - AUTHORIZATION_REQUIRED
          type: string
        status:
          description: Status provides detailed information for the state.
          type: string
      type: object
    Connector:
      description: Connectors indicates a specific connector type, e.x. Salesforce, SAP etc.
      properties:
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Output only. Description of the resource.
          readOnly: true
          type: string
        displayName:
          description: Output only. Display name.
          readOnly: true
          type: string
        documentationUri:
          description: Output only. Link to documentation page.
          readOnly: true
          type: string
        eventingDetails:
          $ref: "#/components/schemas/EventingDetails"
          description: Output only. Eventing details. Will be null if eventing is not supported.
          readOnly: true
        externalUri:
          description: Output only. Link to external page.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          readOnly: true
          type: object
        launchStage:
          description: Output only. Flag to mark the version indicating the launch stage.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          readOnly: true
          type: string
        name:
          description: "Output only. Resource name of the Connector. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector} Only global location is supported for Connector resource."
          readOnly: true
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
        webAssetsLocation:
          description: Output only. Cloud storage location of icons etc consumed by UI.
          readOnly: true
          type: string
      type: object
    ConnectorInfraConfig:
      description: This cofiguration provides infra configs like rate limit threshold which need to be configurable for every connector version
      properties:
        connectionRatelimitWindowSeconds:
          description: The window used for ratelimiting runtime requests to connections.
          format: int64
          type: string
        deploymentModel:
          description: Indicate whether connector is deployed on GKE/CloudRun
          enum:
            - DEPLOYMENT_MODEL_UNSPECIFIED
            - GKE_MST
            - CLOUD_RUN_MST
          type: string
        hpaConfig:
          $ref: "#/components/schemas/HPAConfig"
          description: HPA autoscaling config.
        internalclientRatelimitThreshold:
          description: Max QPS supported for internal requests originating from Connd.
          format: int64
          type: string
        ratelimitThreshold:
          description: Max QPS supported by the connector version before throttling of requests.
          format: int64
          type: string
        resourceLimits:
          $ref: "#/components/schemas/ResourceLimits"
          description: System resource limits.
        resourceRequests:
          $ref: "#/components/schemas/ResourceRequests"
          description: System resource requests.
        sharedDeployment:
          description: The name of shared connector deployment.
          type: string
      type: object
    ConnectorVersion:
      description: ConnectorVersion indicates a specific version of a connector.
      properties:
        authConfigTemplates:
          description: Output only. List of auth configs supported by the Connector Version.
          items:
            $ref: "#/components/schemas/AuthConfigTemplate"
          readOnly: true
          type: array
        configVariableTemplates:
          description: Output only. List of config variables needed to create a connection.
          items:
            $ref: "#/components/schemas/ConfigVariableTemplate"
          readOnly: true
          type: array
        connectorInfraConfig:
          $ref: "#/components/schemas/ConnectorInfraConfig"
          description: Output only. Infra configs supported by Connector.
          readOnly: true
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        destinationConfigTemplates:
          description: Output only. List of destination configs needed to create a connection.
          items:
            $ref: "#/components/schemas/DestinationConfigTemplate"
          readOnly: true
          type: array
        displayName:
          description: Output only. Display name.
          readOnly: true
          type: string
        egressControlConfig:
          $ref: "#/components/schemas/EgressControlConfig"
          description: Output only. Configuration for Egress Control.
          readOnly: true
        eventingConfigTemplate:
          $ref: "#/components/schemas/EventingConfigTemplate"
          description: Output only. Eventing configuration supported by the Connector.
          readOnly: true
        labels:
          additionalProperties:
            type: string
          description: Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          readOnly: true
          type: object
        launchStage:
          description: Output only. Flag to mark the version indicating the launch stage.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          readOnly: true
          type: string
        name:
          description: "Output only. Resource name of the Version. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version} Only global location is supported for Connector resource."
          readOnly: true
          type: string
        releaseVersion:
          description: 'Output only. ReleaseVersion of the connector, for example: "1.0.1-alpha".'
          readOnly: true
          type: string
        roleGrant:
          $ref: "#/components/schemas/RoleGrant"
          description: Output only. Role grant configuration for this config variable. It will be DEPRECATED soon.
          readOnly: true
        roleGrants:
          description: Output only. Role grant configurations for this connector version.
          items:
            $ref: "#/components/schemas/RoleGrant"
          readOnly: true
          type: array
        sslConfigTemplate:
          $ref: "#/components/schemas/SslConfigTemplate"
          description: Output only. Ssl configuration supported by the Connector.
          readOnly: true
        supportedRuntimeFeatures:
          $ref: "#/components/schemas/SupportedRuntimeFeatures"
          description: Output only. Information about the runtime features supported by the Connector.
          readOnly: true
        unsupportedConnectionTypes:
          description: Output only. Unsupported connection types.
          items:
            enum:
              - CONNECTION_TYPE_UNSPECIFIED
              - CONNECTION_WITH_EVENTING
              - ONLY_CONNECTION
              - ONLY_EVENTING
            type: string
          readOnly: true
          type: array
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ConnectorVersionInfraConfig:
      description: This cofiguration provides infra configs like rate limit threshold which need to be configurable for every connector version
      properties:
        connectionRatelimitWindowSeconds:
          description: Output only. The window used for ratelimiting runtime requests to connections.
          format: int64
          readOnly: true
          type: string
        deploymentModel:
          description: Optional. Indicates whether connector is deployed on GKE/CloudRun
          enum:
            - DEPLOYMENT_MODEL_UNSPECIFIED
            - GKE_MST
            - CLOUD_RUN_MST
          type: string
        hpaConfig:
          $ref: "#/components/schemas/HPAConfig"
          description: Output only. HPA autoscaling config.
          readOnly: true
        internalclientRatelimitThreshold:
          description: Output only. Max QPS supported for internal requests originating from Connd.
          format: int64
          readOnly: true
          type: string
        ratelimitThreshold:
          description: Output only. Max QPS supported by the connector version before throttling of requests.
          format: int64
          readOnly: true
          type: string
        resourceLimits:
          $ref: "#/components/schemas/ResourceLimits"
          description: Output only. System resource limits.
          readOnly: true
        resourceRequests:
          $ref: "#/components/schemas/ResourceRequests"
          description: Output only. System resource requests.
          readOnly: true
        sharedDeployment:
          description: Output only. The name of shared connector deployment.
          readOnly: true
          type: string
      type: object
    ConnectorsLogConfig:
      description: Log configuration for the connection.
      properties:
        enabled:
          description: Enabled represents whether logging is enabled or not for a connection.
          type: boolean
      type: object
    CustomConnector:
      description: CustomConnector represents the custom connector defined by the customer as part of byoc.
      properties:
        activeConnectorVersions:
          description: Optional. Active connector versions.
          items:
            type: string
          type: array
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        customConnectorType:
          description: Required. Type of the custom connector.
          enum:
            - CUSTOM_CONNECTOR_TYPE_UNSPECIFIED
            - OPEN_API
            - PROTO
          type: string
        description:
          description: Optional. Description of the resource.
          type: string
        displayName:
          description: Optional. Display name.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        logo:
          description: Optional. Logo of the resource.
          type: string
        name:
          description: "Identifier. Resource name of the CustomConnector. Format: projects/{project}/locations/{location}/customConnectors/{connector}"
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CustomConnectorVersion:
      description: CustomConnectorVersion indicates a specific version of a connector.
      properties:
        authConfig:
          $ref: "#/components/schemas/AuthConfig"
          description: Optional. Authentication config for accessing connector facade/ proxy. This is used only when enable_backend_destination_config is true.
        backendVariableTemplates:
          description: Optional. Backend variables config templates. This translates to additional variable templates in connection.
          items:
            $ref: "#/components/schemas/ConfigVariableTemplate"
          type: array
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        destinationConfigs:
          description: Optional. Destination config(s) for accessing connector facade/ proxy. This is used only when enable_backend_destination_config is true.
          items:
            $ref: "#/components/schemas/DestinationConfig"
          type: array
        enableBackendDestinationConfig:
          description: Optional. When enabled, the connector will be a facade/ proxy, and connects to the destination provided during connection creation.
          type: boolean
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        name:
          description: "Output only. Identifier. Resource name of the Version. Format: projects/{project}/locations/{location}/customConnectors/{custom_connector}/customConnectorVersions/{custom_connector_version}"
          readOnly: true
          type: string
        serviceAccount:
          description: Optional. Service account used by runtime plane to access auth config secrets.
          type: string
        specLocation:
          description: Optional. Location of the custom connector spec. The location can be either a public url like `https://public-url.com/spec` Or a Google Cloud Storage location like `gs:///`
          type: string
        state:
          description: Output only. State of the custom connector version.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - DEPRECATED
          readOnly: true
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    DailyCycle:
      description: Time window specified for daily operations.
      properties:
        duration:
          description: Output only. Duration of the time window, set by service producer.
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: Time within the day to start the operations.
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DeadLetterConfig:
      description: Dead Letter configuration details provided by the user.
      properties:
        projectId:
          description: Optional. Project which has the topic given.
          type: string
        topic:
          description: Optional. Topic to push events which couldn't be processed.
          type: string
      type: object
    DenyMaintenancePeriod:
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.
      properties:
        endDate:
          $ref: "#/components/schemas/Date"
          description: "Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end."
        startDate:
          $ref: "#/components/schemas/Date"
          description: "Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start."
        time:
          $ref: "#/components/schemas/TimeOfDay"
          description: "Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC"
      type: object
    Destination:
      properties:
        host:
          description: For publicly routable host.
          type: string
        port:
          description: The port is the target port number that is accepted by the destination.
          format: int32
          type: integer
        serviceAttachment:
          deprecated: true
          description: "PSC service attachments. Format: projects/*/regions/*/serviceAttachments/*"
          type: string
      type: object
    DestinationConfig:
      description: Define the Connectors target endpoint.
      properties:
        destinations:
          description: The destinations for the key.
          items:
            $ref: "#/components/schemas/Destination"
          type: array
        key:
          description: The key is the destination identifier that is supported by the Connector.
          type: string
      type: object
    DestinationConfigTemplate:
      description: DestinationConfigTemplate defines required destinations supported by the Connector.
      properties:
        defaultPort:
          description: The default port.
          format: int32
          type: integer
        description:
          description: Description.
          type: string
        displayName:
          description: Display name of the parameter.
          type: string
        isAdvanced:
          description: Whether the current destination tempalate is part of Advanced settings
          type: boolean
        key:
          description: Key of the destination.
          type: string
        max:
          description: The maximum number of destinations supported for this key.
          format: int32
          type: integer
        min:
          description: The minimum number of destinations supported for this key.
          format: int32
          type: integer
        portFieldType:
          description: Whether port number should be provided by customers.
          enum:
            - FIELD_TYPE_UNSPECIFIED
            - REQUIRED
            - OPTIONAL
            - NOT_USED
          type: string
        regexPattern:
          description: Regex pattern for host.
          type: string
      type: object
    EgressControlConfig:
      description: Egress control config for connector runtime. These configurations define the rules to identify which outbound domains/hosts needs to be whitelisted. It may be a static information for a particular connector version or it is derived from the configurations provided by the customer in Connection resource.
      properties:
        backends:
          description: Static Comma separated backends which are common for all Connection resources. Supported formats for each backend are host:port or just host (host can be ip address or domain name).
          type: string
        extractionRules:
          $ref: "#/components/schemas/ExtractionRules"
          description: Extractions Rules to extract the backends from customer provided configuration.
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EncryptionConfig:
      description: Regional encryption config for CMEK details.
      properties:
        encryptionType:
          description: Optional. Encryption type for the region.
          enum:
            - ENCRYPTION_TYPE_UNSPECIFIED
            - GMEK
            - CMEK
          type: string
        kmsKeyName:
          description: Optional. KMS crypto key. This field accepts identifiers of the form `projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/ {crypto_key}`
          type: string
      type: object
    EncryptionKey:
      description: Encryption Key value.
      properties:
        kmsKeyName:
          description: "The [KMS key name] with which the content of the Operation is encrypted. The expected format: `projects/*/locations/*/keyRings/*/cryptoKeys/*`. Will be empty string if google managed."
          type: string
        type:
          description: Type.
          enum:
            - TYPE_UNSPECIFIED
            - GOOGLE_MANAGED
            - CUSTOMER_MANAGED
          type: string
      type: object
    EndPoint:
      description: Endpoint message includes details of the Destination endpoint.
      properties:
        endpointUri:
          description: The URI of the Endpoint.
          type: string
        headers:
          description: List of Header to be added to the Endpoint.
          items:
            $ref: "#/components/schemas/Header"
          type: array
      type: object
    EndpointAttachment:
      description: represents the Connector's Endpoint Attachment resource
      properties:
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the resource.
          type: string
        endpointIp:
          description: Output only. The Private Service Connect connection endpoint ip
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        name:
          description: "Output only. Resource name of the Endpoint Attachment. Format: projects/{project}/locations/{location}/endpointAttachments/{endpoint_attachment}"
          readOnly: true
          type: string
        serviceAttachment:
          description: Required. The path of the service attachment
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    EnumOption:
      description: EnumOption definition
      properties:
        displayName:
          description: Display name of the option.
          type: string
        id:
          description: Id of the option.
          type: string
      type: object
    EventSubscription:
      description: represents the Connector's EventSubscription resource
      properties:
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        destinations:
          $ref: "#/components/schemas/EventSubscriptionDestination"
          description: Optional. The destination to hit when we receive an event
        eventTypeId:
          description: Optional. Event type id of the event of current EventSubscription.
          type: string
        jms:
          $ref: "#/components/schemas/JMS"
          description: Optional. JMS is the source for the event listener.
        name:
          description: "Required. Resource name of the EventSubscription. Format: projects/{project}/locations/{location}/connections/{connection}/eventSubscriptions/{event_subscription}"
          type: string
        status:
          $ref: "#/components/schemas/EventSubscriptionStatus"
          description: Optional. Status indicates the status of the event subscription resource
        subscriber:
          description: Optional. name of the Subscriber for the current EventSubscription.
          type: string
        subscriberLink:
          description: Optional. Link for Subscriber of the current EventSubscription.
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    EventSubscriptionDestination:
      description: Message for EventSubscription Destination to act on receiving an event
      properties:
        endpoint:
          $ref: "#/components/schemas/EndPoint"
          description: "OPTION 1: Hit an endpoint when we receive an event."
        serviceAccount:
          description: Service account needed for runtime plane to trigger IP workflow.
          type: string
        type:
          description: type of the destination
          enum:
            - TYPE_UNSPECIFIED
            - ENDPOINT
          type: string
      type: object
    EventSubscriptionStatus:
      description: EventSubscription Status denotes the status of the EventSubscription resource.
      properties:
        description:
          description: Output only. Description of the state.
          readOnly: true
          type: string
        state:
          description: Output only. State of Event Subscription resource.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - UPDATING
            - ACTIVE
            - SUSPENDED
            - ERROR
          readOnly: true
          type: string
      type: object
    EventType:
      description: EventType includes fields.
      properties:
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        enrichedEventPayloadSchema:
          description: Output only. Schema of the event payload after enriched. Will be null if read before send is not supported.
          readOnly: true
          type: string
        entityType:
          description: Output only. Runtime entity type name. Will be null if entity type map is not available. Used for read before send feature.
          readOnly: true
          type: string
        eventPayloadSchema:
          description: Output only. Schema of webhook event payload.
          readOnly: true
          type: string
        eventTypeId:
          description: "Output only. Event type id. Example: `ticket.created`."
          readOnly: true
          type: string
        idPath:
          description: Output only. Id path denotes the path of id in webhook payload.
          readOnly: true
          type: string
        name:
          description: "Output only. Resource name of the eventtype. Format: projects/{project}/locations/{location}/providers/{provider}/connectors/{connector}/versions/{version}/eventtypes/{eventtype} Only global location is supported for Connector resource."
          readOnly: true
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    EventingConfig:
      description: Eventing Configuration of a connection
      properties:
        additionalVariables:
          description: Additional eventing related field values
          items:
            $ref: "#/components/schemas/ConfigVariable"
          type: array
        authConfig:
          $ref: "#/components/schemas/AuthConfig"
          description: Auth details for the webhook adapter.
        deadLetterConfig:
          $ref: "#/components/schemas/DeadLetterConfig"
          description: Optional. Dead letter configuration for eventing of a connection.
        enrichmentEnabled:
          description: Enrichment Enabled.
          type: boolean
        eventsListenerIngressEndpoint:
          description: Optional. Ingress endpoint of the event listener. This is used only when private connectivity is enabled.
          type: string
        listenerAuthConfig:
          $ref: "#/components/schemas/AuthConfig"
          description: Optional. Auth details for the event listener.
        privateConnectivityEnabled:
          description: Optional. Private Connectivity Enabled.
          type: boolean
        proxyDestinationConfig:
          $ref: "#/components/schemas/DestinationConfig"
          description: Optional. Proxy for Eventing auto-registration.
        registrationDestinationConfig:
          $ref: "#/components/schemas/DestinationConfig"
          description: Registration endpoint for auto registration.
        triggerConfigVariables:
          description: Optional. Additional eventing related field values
          items:
            $ref: "#/components/schemas/ConfigVariable"
          type: array
      type: object
    EventingConfigTemplate:
      description: Eventing Config details of a connector version.
      properties:
        additionalVariables:
          description: Additional fields that need to be rendered.
          items:
            $ref: "#/components/schemas/ConfigVariableTemplate"
          type: array
        authConfigTemplates:
          description: AuthConfigTemplates represents the auth values for the webhook adapter.
          items:
            $ref: "#/components/schemas/AuthConfigTemplate"
          type: array
        autoRefresh:
          description: Auto refresh to extend webhook life.
          type: boolean
        autoRegistrationSupported:
          description: Auto Registration supported.
          type: boolean
        encryptionKeyTemplate:
          $ref: "#/components/schemas/ConfigVariableTemplate"
          description: Encryption key (can be either Google managed or CMEK).
        enrichmentSupported:
          description: Enrichment Supported.
          type: boolean
        eventListenerType:
          description: The type of the event listener for a specific connector.
          enum:
            - EVENT_LISTENER_TYPE_UNSPECIFIED
            - WEBHOOK_LISTENER
            - JMS_LISTENER
          type: string
        isEventingSupported:
          description: Is Eventing Supported.
          type: boolean
        listenerAuthConfigTemplates:
          description: ListenerAuthConfigTemplates represents the auth values for the event listener.
          items:
            $ref: "#/components/schemas/AuthConfigTemplate"
          type: array
        proxyDestinationConfig:
          $ref: "#/components/schemas/DestinationConfigTemplate"
          description: Proxy destination config template.
        registrationDestinationConfig:
          $ref: "#/components/schemas/DestinationConfigTemplate"
          description: Registration host destination config template.
        triggerConfigVariables:
          description: Trigger Config fields that needs to be rendered
          items:
            $ref: "#/components/schemas/ConfigVariableTemplate"
          type: array
      type: object
    EventingDetails:
      description: Eventing Details message.
      properties:
        customEventTypes:
          description: Output only. Custom Event Types.
          readOnly: true
          type: boolean
        description:
          description: Output only. Description.
          readOnly: true
          type: string
        documentationLink:
          description: Output only. Link to public documentation.
          readOnly: true
          type: string
        iconLocation:
          description: Output only. Cloud storage location of the icon.
          readOnly: true
          type: string
        launchStage:
          description: Output only. Eventing Launch Stage.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          readOnly: true
          type: string
        name:
          description: Output only. Name of the Eventing trigger.
          readOnly: true
          type: string
        searchTags:
          description: Output only. Array of search keywords.
          items:
            type: string
          readOnly: true
          type: array
        type:
          description: Output only. The type of the event listener for a specific connector.
          enum:
            - TYPE_UNSPECIFIED
            - WEBHOOK
            - JMS
          readOnly: true
          type: string
      type: object
    EventingRuntimeData:
      description: Eventing runtime data has the details related to eventing managed by the system.
      properties:
        eventsListenerEndpoint:
          description: Output only. Events listener endpoint. The value will populated after provisioning the events listener.
          readOnly: true
          type: string
        eventsListenerPscSa:
          description: Output only. Events listener PSC Service attachment. The value will be populated after provisioning the events listener with private connectivity enabled.
          readOnly: true
          type: string
        status:
          $ref: "#/components/schemas/EventingStatus"
          description: Output only. Current status of eventing.
          readOnly: true
      type: object
    EventingStatus:
      description: EventingStatus indicates the state of eventing.
      properties:
        description:
          description: Output only. Description of error if State is set to "ERROR".
          readOnly: true
          type: string
        state:
          description: Output only. State.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - ERROR
            - INGRESS_ENDPOINT_REQUIRED
          readOnly: true
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    ExtractionRule:
      description: Extraction Rule.
      properties:
        extractionRegex:
          description: Regex used to extract backend details from source. If empty, whole source value will be used.
          type: string
        source:
          $ref: "#/components/schemas/Source"
          description: Source on which the rule is applied.
      type: object
    ExtractionRules:
      description: Extraction Rules to identity the backends from customer provided configuration in Connection resource.
      properties:
        extractionRule:
          description: Collection of Extraction Rule.
          items:
            $ref: "#/components/schemas/ExtractionRule"
          type: array
      type: object
    Field:
      description: Metadata of an entity field.
      properties:
        additionalDetails:
          additionalProperties:
            description: Properties of the object.
          description: The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
          type: object
        dataType:
          description: The data type of the Field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        defaultValue:
          description: The following field specifies the default value of the Field provided by the external system if a value is not provided.
        description:
          description: A brief description of the Field.
          type: string
        field:
          description: Name of the Field.
          type: string
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema representation of this entity's schema
        key:
          description: The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
          type: boolean
        nullable:
          description: Specifies whether a null value is allowed.
          type: boolean
        readonly:
          description: Specifies if the Field is readonly.
          type: boolean
      type: object
    FieldComparison:
      description: Field that needs to be compared.
      properties:
        boolValue:
          description: Boolean value
          type: boolean
        comparator:
          description: Comparator to use for comparing the field value.
          enum:
            - COMPARATOR_UNSPECIFIED
            - EQUALS
            - NOT_EQUALS
          type: string
        intValue:
          description: Integer value
          format: int64
          type: string
        key:
          description: Key of the field.
          type: string
        stringValue:
          description: String value
          type: string
      type: object
    HPAConfig:
      description: Autoscaling config for connector deployment system metrics.
      properties:
        cpuUtilizationThreshold:
          description: Output only. Percent CPU utilization where HPA triggers autoscaling.
          format: int64
          readOnly: true
          type: string
        memoryUtilizationThreshold:
          description: Output only. Percent Memory utilization where HPA triggers autoscaling.
          format: int64
          readOnly: true
          type: string
      type: object
    Header:
      description: Header details for a given header to be added to Endpoint.
      properties:
        key:
          description: Key of Header.
          type: string
        value:
          description: Value of Header.
          type: string
      type: object
    InputParameter:
      description: Metadata of an input parameter.
      properties:
        dataType:
          description: The data type of the Parameter.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        defaultValue:
          description: The following field specifies the default value of the Parameter provided by the external system if a value is not provided.
        description:
          description: A brief description of the Parameter.
          type: string
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema representation of this action's parameter
        nullable:
          description: Specifies whether a null value is allowed.
          type: boolean
        parameter:
          description: Name of the Parameter.
          type: string
      type: object
    Instance:
      description: 'Instance represents the interface for SLM services to actuate the state of control plane resources. Example Instance in JSON, where consumer-project-number=123456, producer-project-id=cloud-sql: ```json Instance: { "name": "projects/123456/locations/us-east1/instances/prod-instance", "create_time": { "seconds": 1526406431, }, "labels": { "env": "prod", "foo": "bar" }, "state": READY, "software_versions": { "software_update": "cloud-sql-09-28-2018", }, "maintenance_policy_names": { "UpdatePolicy": "projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy", } "tenant_project_id": "cloud-sql-test-tenant", "producer_metadata": { "cloud-sql-tier": "basic", "cloud-sql-instance-size": "1G", }, "provisioned_resources": [ { "resource-type": "compute-instance", "resource-url": "https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1", } ], "maintenance_schedules": { "csa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, }, "ncsa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, } }, "consumer_defined_name": "my-sql-instance1", } ``` LINT.IfChange'
      properties:
        consumerDefinedName:
          description: consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).
          type: string
        createTime:
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
          readOnly: true
          type: string
        instanceType:
          description: "Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses 'instance_type' along with 'software_versions' to determine whether instance needs an update or not."
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
          type: object
        maintenancePolicyNames:
          additionalProperties:
            type: string
          description: Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/mr-user-guide. Should not be set if maintenance_settings.maintenance_policies is set.
          type: object
        maintenanceSchedules:
          additionalProperties:
            $ref: "#/components/schemas/MaintenanceSchedule"
          description: The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.
          type: object
        maintenanceSettings:
          $ref: "#/components/schemas/MaintenanceSettings"
          description: Optional. The MaintenanceSettings associated with instance.
        name:
          description: "Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details."
          type: string
        notificationParameters:
          additionalProperties:
            $ref: "#/components/schemas/NotificationParameter"
          description: Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.
          type: object
        producerMetadata:
          additionalProperties:
            type: string
          description: Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          readOnly: true
          type: object
        provisionedResources:
          description: Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.
          items:
            $ref: "#/components/schemas/ProvisionedResource"
          readOnly: true
          type: array
        slmInstanceTemplate:
          description: Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.
          type: string
        sloMetadata:
          $ref: "#/components/schemas/SloMetadata"
          description: Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.
          readOnly: true
        softwareVersions:
          additionalProperties:
            type: string
          description: Software versions that are used to deploy this instance. This can be mutated by rollout services.
          type: object
        state:
          description: Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
            - ERROR
          readOnly: true
          type: string
        tenantProjectId:
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    JMS:
      description: JMS message denotes the source of the event
      properties:
        name:
          description: Optional. Name of the JMS source. i.e. queueName or topicName
          type: string
        type:
          description: Optional. Type of the JMS Source. i.e. Queue or Topic
          enum:
            - TYPE_UNSPECIFIED
            - QUEUE
            - TOPIC
          type: string
      type: object
    JsonSchema:
      description: JsonSchema representation of schema metadata
      properties:
        description:
          description: A description of this schema.
          type: string
        enum:
          description: Possible values for an enumeration. This works in conjunction with `type` to represent types with a fixed set of legal values
          items: {}
          type: array
        format:
          description: Format of the value as per https://json-schema.org/understanding-json-schema/reference/string.html#format
          type: string
        items:
          $ref: "#/components/schemas/JsonSchema"
          description: Schema that applies to array values, applicable only if this is of type `array`.
        jdbcType:
          description: JDBC datatype of the field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        properties:
          additionalProperties:
            $ref: "#/components/schemas/JsonSchema"
          description: The child schemas, applicable only if this is of type `object`. The key is the name of the property and the value is the json schema that describes that property
          type: object
        required:
          description: Whether this property is required.
          items:
            type: string
          type: array
        type:
          description: "JSON Schema Validation: A Vocabulary for Structural Validation of JSON"
          items:
            type: string
          type: array
      type: object
    JwtClaims:
      description: JWT claims used for the jwt-bearer authorization grant.
      properties:
        audience:
          description: Value for the "aud" claim.
          type: string
        issuer:
          description: Value for the "iss" claim.
          type: string
        subject:
          description: Value for the "sub" claim.
          type: string
      type: object
    ListActionsResponse:
      description: Response message for ListActions API
      properties:
        actions:
          description: list of actions
          items:
            $ref: "#/components/schemas/RuntimeActionSchema"
          type: array
        nextPageToken:
          description: token for next page
          type: string
      type: object
    ListConnectionsResponse:
      description: Response message for ConnectorsService.ListConnections
      properties:
        connections:
          description: Connections.
          items:
            $ref: "#/components/schemas/Connection"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListConnectorVersionsResponse:
      description: Response message for Connectors.ListConnectorVersions.
      properties:
        connectorVersions:
          description: A list of connector versions.
          items:
            $ref: "#/components/schemas/ConnectorVersion"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListConnectorsResponse:
      description: Response message for Connectors.ListConnectors.
      properties:
        connectors:
          description: A list of connectors.
          items:
            $ref: "#/components/schemas/Connector"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCustomConnectorVersionsResponse:
      description: Response message for Connectors.ListCustomConnectorVersions.
      properties:
        customConnectorVersions:
          description: A list of connector versions.
          items:
            $ref: "#/components/schemas/CustomConnectorVersion"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListCustomConnectorsResponse:
      description: Response message for Connectors.ListCustomConnectors.
      properties:
        customConnectors:
          description: A list of customConnectors.
          items:
            $ref: "#/components/schemas/CustomConnector"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListEndpointAttachmentsResponse:
      description: Response message for ConnectorsService.ListEndpointAttachments
      properties:
        endpointAttachments:
          description: EndpointAttachments.
          items:
            $ref: "#/components/schemas/EndpointAttachment"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListEntityTypesResponse:
      description: Response message for ListEntityTypes API
      properties:
        entityTypes:
          description: list of entity types
          items:
            $ref: "#/components/schemas/RuntimeEntitySchema"
          type: array
        nextPageToken:
          description: token for next page
          type: string
      type: object
    ListEventSubscriptionsResponse:
      description: Response message for ConnectorsService.ListEventSubscriptions
      properties:
        eventSubscriptions:
          description: Subscriptions.
          items:
            $ref: "#/components/schemas/EventSubscription"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListEventTypesResponse:
      description: Response message for Connectors.ListEventTypes.
      properties:
        eventTypes:
          description: A list of connector versions.
          items:
            $ref: "#/components/schemas/EventType"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
      type: object
    ListLocationsResponse:
      description: The response message for Locations.ListLocations.
      properties:
        locations:
          description: A list of locations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Location"
          type: array
        nextPageToken:
          description: The standard List next-page token.
          type: string
      type: object
    ListManagedZonesResponse:
      description: Response message for ConnectorsService.ListManagedZones
      properties:
        managedZones:
          description: ManagedZones.
          items:
            $ref: "#/components/schemas/ManagedZone"
          type: array
        nextPageToken:
          description: Next page token.
          type: string
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListProvidersResponse:
      description: Response message for Connectors.ListProviders.
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        providers:
          description: A list of providers.
          items:
            $ref: "#/components/schemas/Provider"
          type: array
        unreachable:
          description: Locations that could not be reached.
          items:
            type: string
          type: array
      type: object
    ListRuntimeActionSchemasResponse:
      description: Response message for ConnectorsService.ListRuntimeActionSchemas.
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        runtimeActionSchemas:
          description: Runtime action schemas.
          items:
            $ref: "#/components/schemas/RuntimeActionSchema"
          type: array
      type: object
    ListRuntimeEntitySchemasResponse:
      description: Response message for ConnectorsService.ListRuntimeEntitySchemas.
      properties:
        nextPageToken:
          description: Next page token.
          type: string
        runtimeEntitySchemas:
          description: Runtime entity schemas.
          items:
            $ref: "#/components/schemas/RuntimeEntitySchema"
          type: array
      type: object
    ListenEventRequest:
      description: Expected request for ListenEvent API.
      properties:
        payload:
          additionalProperties:
            description: Properties of the object.
          description: Optional. Request payload.
          type: object
      type: object
    ListenEventResponse:
      description: Expected response for ListenEvent API.
      properties: {}
      type: object
    Location:
      description: A resource that represents a Google Cloud location.
      properties:
        displayName:
          description: The friendly name for this location, typically a nearby city name. For example, "Tokyo".
          type: string
        labels:
          additionalProperties:
            type: string
          description: 'Cross-service attributes for the location. For example {"cloud.googleapis.com/region": "us-east1"}'
          type: object
        locationId:
          description: 'The canonical id for this location. For example: `"us-east1"`.'
          type: string
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata. For example the available capacity at the given location.
          type: object
        name:
          description: 'Resource name for the location, which may vary between implementations. For example: `"projects/example-project/locations/us-east1"`'
          type: string
      type: object
    LockConfig:
      description: Determines whether or no a connection is locked. If locked, a reason must be specified.
      properties:
        locked:
          description: Indicates whether or not the connection is locked.
          type: boolean
        reason:
          description: Describes why a connection is locked.
          type: string
      type: object
    LogicalExpression:
      description: Struct for representing boolean expressions.
      properties:
        fieldComparisons:
          description: A list of fields to be compared.
          items:
            $ref: "#/components/schemas/FieldComparison"
          type: array
        logicalExpressions:
          description: A list of nested conditions to be compared.
          items:
            $ref: "#/components/schemas/LogicalExpression"
          type: array
        logicalOperator:
          description: The logical operator to use between the fields and conditions.
          enum:
            - OPERATOR_UNSPECIFIED
            - AND
            - OR
          type: string
      type: object
    MaintenancePolicy:
      description: LINT.IfChange Defines policies to service maintenance events.
      properties:
        createTime:
          description: Output only. The time when the resource was created.
          format: google-datetime
          type: string
        description:
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
          type: object
        name:
          description: "Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`."
          type: string
        state:
          description: Optional. The state of the policy.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - DELETING
          type: string
        updatePolicy:
          $ref: "#/components/schemas/UpdatePolicy"
          description: Maintenance policy applicable to instance update.
        updateTime:
          description: Output only. The time when the resource was updated.
          format: google-datetime
          type: string
      type: object
    MaintenanceSchedule:
      description: Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule
      properties:
        canReschedule:
          deprecated: true
          description: This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.
          type: boolean
        endTime:
          description: The scheduled end time for the maintenance.
          format: google-datetime
          type: string
        rolloutManagementPolicy:
          description: The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy.
          type: string
        scheduleDeadlineTime:
          description: schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It's normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.
          format: google-datetime
          type: string
        startTime:
          description: The scheduled start time for the maintenance.
          format: google-datetime
          type: string
      type: object
    MaintenanceSettings:
      description: Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.
      properties:
        exclude:
          description: Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted.
          type: boolean
        isRollback:
          description: Optional. If the update call is triggered from rollback, set the value as true.
          type: boolean
        maintenancePolicies:
          additionalProperties:
            $ref: "#/components/schemas/MaintenancePolicy"
          description: Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For details, please refer to go/mr-user-guide. Should not be set if maintenance_policy_names is set. If only the name is needed, then only populate MaintenancePolicy.name.
          type: object
      type: object
    MaintenanceWindow:
      description: MaintenanceWindow definition.
      properties:
        dailyCycle:
          $ref: "#/components/schemas/DailyCycle"
          description: Daily cycle.
        weeklyCycle:
          $ref: "#/components/schemas/WeeklyCycle"
          description: Weekly cycle.
      type: object
    ManagedZone:
      description: represents the Connector's Managed Zone resource
      properties:
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Optional. Description of the resource.
          type: string
        dns:
          description: Required. DNS Name of the resource
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          type: object
        name:
          description: "Output only. Resource name of the Managed Zone. Format: projects/{project}/locations/global/managedZones/{managed_zone}"
          readOnly: true
          type: string
        targetProject:
          description: Required. The name of the Target Project
          type: string
        targetVpc:
          description: Required. The name of the Target Project VPC Network
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    NetworkConfig:
      description: Regional Network Config.
      properties:
        egressIps:
          description: Output only. Egress IPs
          items:
            type: string
          readOnly: true
          type: array
        egressMode:
          description: Optional. Egress mode for the network.
          enum:
            - NETWORK_EGRESS_MODE_UNSPECIFIED
            - AUTO_IP
            - STATIC_IP
          type: string
      type: object
    NodeConfig:
      description: Node configuration for the connection.
      properties:
        maxNodeCount:
          description: Maximum number of nodes in the runtime nodes.
          format: int32
          type: integer
        minNodeCount:
          description: Minimum number of nodes in the runtime nodes.
          format: int32
          type: integer
      type: object
    NodeSloMetadata:
      description: Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.
      properties:
        location:
          description: The location of the node, if different from instance location.
          type: string
        nodeId:
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
          type: string
        perSliEligibility:
          $ref: "#/components/schemas/PerSliSloEligibility"
          description: If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.
      type: object
    NotificationParameter:
      description: Contains notification related data.
      properties:
        values:
          description: Optional. Array of string values. e.g. instance's replica information.
          items:
            type: string
          type: array
      type: object
    Oauth2AuthCodeFlow:
      description: Parameters to support Oauth 2.0 Auth Code Grant Authentication. See https://www.rfc-editor.org/rfc/rfc6749#section-1.3.1 for more details.
      properties:
        authCode:
          description: Authorization code to be exchanged for access and refresh tokens.
          type: string
        authUri:
          description: Auth URL for Authorization Code Flow
          type: string
        clientId:
          description: Client ID for user-provided OAuth app.
          type: string
        clientSecret:
          $ref: "#/components/schemas/Secret"
          description: Client secret for user-provided OAuth app.
        enablePkce:
          description: Whether to enable PKCE when the user performs the auth code flow.
          type: boolean
        pkceVerifier:
          description: PKCE verifier to be used during the auth code exchange.
          type: string
        redirectUri:
          description: Redirect URI to be provided during the auth code exchange.
          type: string
        scopes:
          description: Scopes the connection will request when the user performs the auth code flow.
          items:
            type: string
          type: array
      type: object
    Oauth2ClientCredentials:
      description: Parameters to support Oauth 2.0 Client Credentials Grant Authentication. See https://tools.ietf.org/html/rfc6749#section-1.3.4 for more details.
      properties:
        clientId:
          description: The client identifier.
          type: string
        clientSecret:
          $ref: "#/components/schemas/Secret"
          description: Secret version reference containing the client secret.
      type: object
    Oauth2JwtBearer:
      description: Parameters to support JSON Web Token (JWT) Profile for Oauth 2.0 Authorization Grant based authentication. See https://tools.ietf.org/html/rfc7523 for more details.
      properties:
        clientKey:
          $ref: "#/components/schemas/Secret"
          description: "Secret version reference containing a PKCS#8 PEM-encoded private key associated with the Client Certificate. This private key will be used to sign JWTs used for the jwt-bearer authorization grant. Specified in the form as: `projects/*/secrets/*/versions/*`."
        jwtClaims:
          $ref: "#/components/schemas/JwtClaims"
          description: JwtClaims providers fields to generate the token.
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    OperationMetadata:
      description: Represents the metadata of the long-running operation.
      properties:
        apiVersion:
          description: Output only. API version used to start the operation.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        endTime:
          description: Output only. The time the operation finished running.
          format: google-datetime
          readOnly: true
          type: string
        requestedCancellation:
          description: Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.
          readOnly: true
          type: boolean
        statusMessage:
          description: Output only. Human-readable status of the operation, if any.
          readOnly: true
          type: string
        target:
          description: Output only. Server-defined resource path for the target of the operation.
          readOnly: true
          type: string
        verb:
          description: Output only. Name of the verb executed by the operation.
          readOnly: true
          type: string
      type: object
    PerSliSloEligibility:
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
      properties:
        eligibilities:
          additionalProperties:
            $ref: "#/components/schemas/SloEligibility"
          description: An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.
          type: object
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** ``` { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } ``` **YAML example:** ``` bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 ``` For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        auditConfigs:
          description: Specifies cloud audit logging configuration for this policy.
          items:
            $ref: "#/components/schemas/AuditConfig"
          type: array
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    Provider:
      description: Provider indicates the owner who provides the connectors.
      properties:
        createTime:
          description: Output only. Created time.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Output only. Description of the resource.
          readOnly: true
          type: string
        displayName:
          description: Output only. Display name.
          readOnly: true
          type: string
        documentationUri:
          description: Output only. Link to documentation page.
          readOnly: true
          type: string
        externalUri:
          description: Output only. Link to external page.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Output only. Resource labels to represent user-provided metadata. Refer to cloud documentation on labels for more details. https://cloud.google.com/compute/docs/labeling-resources
          readOnly: true
          type: object
        launchStage:
          description: Output only. Flag to mark the version indicating the launch stage.
          enum:
            - LAUNCH_STAGE_UNSPECIFIED
            - PREVIEW
            - GA
            - DEPRECATED
            - PRIVATE_PREVIEW
          readOnly: true
          type: string
        name:
          description: "Output only. Resource name of the Provider. Format: projects/{project}/locations/{location}/providers/{provider} Only global location is supported for Provider resource."
          readOnly: true
          type: string
        updateTime:
          description: Output only. Updated time.
          format: google-datetime
          readOnly: true
          type: string
        webAssetsLocation:
          description: Output only. Cloud storage location of icons etc consumed by UI.
          readOnly: true
          type: string
      type: object
    ProvisionedResource:
      description: Describes provisioned dataplane resources.
      properties:
        resourceType:
          description: "Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider's VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with 'compute-', for example: 'compute-instance', 'compute-disk', 'compute-autoscaler'."
          type: string
        resourceUrl:
          description: URL identifying the resource, e.g. "https://www.googleapis.com/compute/v1/projects/...)".
          type: string
      type: object
    RefreshConnectionSchemaMetadataRequest:
      description: Request message for ConnectorsService.RefreshConnectionSchemaMetadata.
      properties: {}
      type: object
    RegionalSettings:
      description: Regional Settings details.
      properties:
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
          description: Optional. Regional encryption config to hold CMEK details.
        name:
          description: "Output only. Resource name of the Connection. Format: projects/{project}/locations/{location}/regionalSettings"
          readOnly: true
          type: string
        networkConfig:
          $ref: "#/components/schemas/NetworkConfig"
          description: Optional. Regional network config.
        provisioned:
          description: Output only. Specifies whether the region is provisioned.
          readOnly: true
          type: boolean
      type: object
    RepairEventingRequest:
      description: Request message for ConnectorsService.RepairEventing
      properties: {}
      type: object
    Resource:
      description: Resource definition
      properties:
        pathTemplate:
          description: Template to uniquely represent a Google Cloud resource in a format IAM expects This is a template that can have references to other values provided in the config variable template.
          type: string
        type:
          description: Different types of resource supported.
          enum:
            - TYPE_UNSPECIFIED
            - GCP_PROJECT
            - GCP_RESOURCE
            - GCP_SECRETMANAGER_SECRET
            - GCP_SECRETMANAGER_SECRET_VERSION
          type: string
      type: object
    ResourceLimits:
      description: Resource limits defined for connection pods of a given connector type.
      properties:
        cpu:
          description: Output only. CPU limit.
          readOnly: true
          type: string
        memory:
          description: Output only. Memory limit.
          readOnly: true
          type: string
      type: object
    ResourceRequests:
      description: Resource requests defined for connection pods of a given connector type.
      properties:
        cpu:
          description: Output only. CPU request.
          readOnly: true
          type: string
        memory:
          description: Output only. Memory request.
          readOnly: true
          type: string
      type: object
    ResultMetadata:
      description: Metadata of result field.
      properties:
        dataType:
          description: The data type of the field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - DATA_TYPE_INT
            - DATA_TYPE_SMALLINT
            - DATA_TYPE_DOUBLE
            - DATA_TYPE_DATE
            - DATA_TYPE_DATETIME
            - DATA_TYPE_TIME
            - DATA_TYPE_STRING
            - DATA_TYPE_LONG
            - DATA_TYPE_BOOLEAN
            - DATA_TYPE_DECIMAL
            - DATA_TYPE_UUID
            - DATA_TYPE_BLOB
            - DATA_TYPE_BIT
            - DATA_TYPE_TINYINT
            - DATA_TYPE_INTEGER
            - DATA_TYPE_BIGINT
            - DATA_TYPE_FLOAT
            - DATA_TYPE_REAL
            - DATA_TYPE_NUMERIC
            - DATA_TYPE_CHAR
            - DATA_TYPE_VARCHAR
            - DATA_TYPE_LONGVARCHAR
            - DATA_TYPE_TIMESTAMP
            - DATA_TYPE_NCHAR
            - DATA_TYPE_NVARCHAR
            - DATA_TYPE_LONGNVARCHAR
            - DATA_TYPE_NULL
            - DATA_TYPE_OTHER
            - DATA_TYPE_JAVA_OBJECT
            - DATA_TYPE_DISTINCT
            - DATA_TYPE_STRUCT
            - DATA_TYPE_ARRAY
            - DATA_TYPE_CLOB
            - DATA_TYPE_REF
            - DATA_TYPE_DATALINK
            - DATA_TYPE_ROWID
            - DATA_TYPE_BINARY
            - DATA_TYPE_VARBINARY
            - DATA_TYPE_LONGVARBINARY
            - DATA_TYPE_NCLOB
            - DATA_TYPE_SQLXML
            - DATA_TYPE_REF_CURSOR
            - DATA_TYPE_TIME_WITH_TIMEZONE
            - DATA_TYPE_TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        description:
          description: A brief description of the field.
          type: string
        field:
          description: Name of the result field.
          type: string
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema representation of this action's result
      type: object
    RetryEventSubscriptionRequest:
      description: Request message for ConnectorsService.RefreshEventSubscription
      properties: {}
      type: object
    RoleGrant:
      description: This configuration defines all the Cloud IAM roles that needs to be granted to a particular Google Cloud resource for the selected principal like service account. These configurations will let UI display to customers what IAM roles need to be granted by them. Or these configurations can be used by the UI to render a 'grant' button to do the same on behalf of the user.
      properties:
        helperTextTemplate:
          description: Template that UI can use to provide helper text to customers.
          type: string
        principal:
          description: Prinicipal/Identity for whom the role need to assigned.
          enum:
            - PRINCIPAL_UNSPECIFIED
            - CONNECTOR_SA
          type: string
        resource:
          $ref: "#/components/schemas/Resource"
          description: Resource on which the roles needs to be granted for the principal.
        roles:
          description: List of roles that need to be granted.
          items:
            type: string
          type: array
      type: object
    RuntimeActionSchema:
      description: Schema of a runtime action.
      properties:
        action:
          description: Output only. Name of the action.
          readOnly: true
          type: string
        description:
          description: Output only. Brief Description of action
          readOnly: true
          type: string
        displayName:
          description: Output only. Display Name of action to be shown on client side
          readOnly: true
          type: string
        inputJsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: Output only. JsonSchema representation of this action's input metadata
          readOnly: true
        inputParameters:
          description: Output only. List of input parameter metadata for the action.
          items:
            $ref: "#/components/schemas/InputParameter"
          readOnly: true
          type: array
        resultJsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: Output only. JsonSchema representation of this action's result metadata
          readOnly: true
        resultMetadata:
          description: Output only. List of result field metadata.
          items:
            $ref: "#/components/schemas/ResultMetadata"
          readOnly: true
          type: array
      type: object
    RuntimeConfig:
      description: "RuntimeConfig is the singleton resource of each location. It includes generic resource configs consumed by control plane and runtime plane like: pub/sub topic/subscription resource name, Cloud Storage location storing schema etc."
      properties:
        conndSubscription:
          description: Output only. Pub/Sub subscription for connd to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}
          readOnly: true
          type: string
        conndTopic:
          description: Output only. Pub/Sub topic for connd to send message. E.g. projects/{project-id}/topics/{topic-id}
          readOnly: true
          type: string
        controlPlaneSubscription:
          description: Output only. Pub/Sub subscription for control plane to receive message. E.g. projects/{project-id}/subscriptions/{topic-id}
          readOnly: true
          type: string
        controlPlaneTopic:
          description: Output only. Pub/Sub topic for control plne to send message. communication. E.g. projects/{project-id}/topics/{topic-id}
          readOnly: true
          type: string
        locationId:
          description: Output only. location_id of the runtime location. E.g. "us-west1".
          readOnly: true
          type: string
        name:
          description: "Output only. Name of the runtimeConfig resource. Format: projects/{project}/locations/{location}/runtimeConfig"
          readOnly: true
          type: string
        runtimeEndpoint:
          description: Output only. The endpoint of the connectors runtime ingress.
          readOnly: true
          type: string
        schemaGcsBucket:
          description: Output only. The Cloud Storage bucket that stores connector's schema reports.
          readOnly: true
          type: string
        serviceDirectory:
          description: Output only. The name of the Service Directory service name.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the location.
          enum:
            - STATE_UNSPECIFIED
            - INACTIVE
            - ACTIVATING
            - ACTIVE
            - CREATING
            - DELETING
            - UPDATING
          readOnly: true
          type: string
          x-enumDeprecated:
            - false
            - true
            - true
            - false
            - false
            - false
            - false
      type: object
    RuntimeEntitySchema:
      description: Schema of a runtime entity.
      properties:
        entity:
          description: Output only. Name of the entity.
          readOnly: true
          type: string
        fields:
          description: Output only. List of fields in the entity.
          items:
            $ref: "#/components/schemas/Field"
          readOnly: true
          type: array
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: Output only. JsonSchema representation of this entity's metadata
          readOnly: true
      type: object
    Schedule:
      description: Configure the schedule.
      properties:
        day:
          description: Allows to define schedule that runs specified day of the week.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        duration:
          description: Output only. Duration of the time window, set by service producer.
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: Time within the window to start the operations.
      type: object
    Secret:
      description: Secret provides a reference to entries in Secret Manager.
      properties:
        secretVersion:
          description: "The resource name of the secret version in the format, format as: `projects/*/secrets/*/versions/*`."
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
        updateMask:
          description: 'OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: "bindings, etag"`'
          format: google-fieldmask
          type: string
      type: object
    Settings:
      description: Global Settings details.
      properties:
        name:
          description: "Output only. Resource name of the Connection. Format: projects/{project}/locations/global/settings}"
          readOnly: true
          type: string
        payg:
          description: Output only. Flag indicates if user is in PayG model
          readOnly: true
          type: boolean
        tenantProjectId:
          description: Output only. Tenant project id of the consumer project.
          readOnly: true
          type: string
        vpcsc:
          description: Optional. Flag indicates whether vpc-sc is enabled.
          type: boolean
      type: object
    SloEligibility:
      description: "SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason."
      properties:
        eligible:
          description: Whether an instance is eligible or ineligible.
          type: boolean
        reason:
          description: User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.
          type: string
      type: object
    SloMetadata:
      description: SloMetadata contains resources required for proper SLO classification of the instance.
      properties:
        nodes:
          description: Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch.
          items:
            $ref: "#/components/schemas/NodeSloMetadata"
          type: array
        perSliEligibility:
          $ref: "#/components/schemas/PerSliSloEligibility"
          description: Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.
          type: string
      type: object
    Source:
      description: Source to extract the backend from.
      properties:
        fieldId:
          description: Field identifier. For example config vaiable name.
          type: string
        sourceType:
          description: Type of the source.
          enum:
            - SOURCE_TYPE_UNSPECIFIED
            - CONFIG_VARIABLE
          type: string
      type: object
    SshPublicKey:
      description: Parameters to support Ssh public key Authentication.
      properties:
        certType:
          description: Format of SSH Client cert.
          type: string
        sshClientCert:
          $ref: "#/components/schemas/Secret"
          description: SSH Client Cert. It should contain both public and private key.
        sshClientCertPass:
          $ref: "#/components/schemas/Secret"
          description: Password (passphrase) for ssh client certificate if it has one.
        username:
          description: The user account used to authenticate.
          type: string
      type: object
    SslConfig:
      description: SSL Configuration of a connection
      properties:
        additionalVariables:
          description: Additional SSL related field values
          items:
            $ref: "#/components/schemas/ConfigVariable"
          type: array
        clientCertType:
          description: Type of Client Cert (PEM/JKS/.. etc.)
          enum:
            - CERT_TYPE_UNSPECIFIED
            - PEM
          type: string
        clientCertificate:
          $ref: "#/components/schemas/Secret"
          description: Client Certificate
        clientPrivateKey:
          $ref: "#/components/schemas/Secret"
          description: Client Private Key
        clientPrivateKeyPass:
          $ref: "#/components/schemas/Secret"
          description: Secret containing the passphrase protecting the Client Private Key
        privateServerCertificate:
          $ref: "#/components/schemas/Secret"
          description: Private Server Certificate. Needs to be specified if trust model is `PRIVATE`.
        serverCertType:
          description: Type of Server Cert (PEM/JKS/.. etc.)
          enum:
            - CERT_TYPE_UNSPECIFIED
            - PEM
          type: string
        trustModel:
          description: Trust Model of the SSL connection
          enum:
            - PUBLIC
            - PRIVATE
            - INSECURE
          type: string
        type:
          description: Controls the ssl type for the given connector version.
          enum:
            - SSL_TYPE_UNSPECIFIED
            - TLS
            - MTLS
          type: string
        useSsl:
          description: Bool for enabling SSL
          type: boolean
      type: object
    SslConfigTemplate:
      description: Ssl config details of a connector version
      properties:
        additionalVariables:
          description: Any additional fields that need to be rendered
          items:
            $ref: "#/components/schemas/ConfigVariableTemplate"
          type: array
        clientCertType:
          description: List of supported Client Cert Types
          items:
            enum:
              - CERT_TYPE_UNSPECIFIED
              - PEM
            type: string
          type: array
        isTlsMandatory:
          description: Boolean for determining if the connector version mandates TLS.
          type: boolean
        serverCertType:
          description: List of supported Server Cert Types
          items:
            enum:
              - CERT_TYPE_UNSPECIFIED
              - PEM
            type: string
          type: array
        sslType:
          description: Controls the ssl type for the given connector version
          enum:
            - SSL_TYPE_UNSPECIFIED
            - TLS
            - MTLS
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    SupportedRuntimeFeatures:
      description: Supported runtime features of a connector version.
      properties:
        actionApis:
          description: Specifies if the connector supports action apis like 'executeAction'.
          type: boolean
        entityApis:
          description: Specifies if the connector supports entity apis like 'createEntity'.
          type: boolean
        sqlQuery:
          description: Specifies if the connector supports 'ExecuteSqlQuery' operation.
          type: boolean
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    TimeOfDay:
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
    UpdatePolicy:
      description: Maintenance policy applicable to instance updates.
      properties:
        channel:
          description: Optional. Relative scheduling channel applied to resource.
          enum:
            - UPDATE_CHANNEL_UNSPECIFIED
            - EARLIER
            - LATER
            - WEEK1
            - WEEK2
            - WEEK5
          type: string
        denyMaintenancePeriods:
          description: Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. The protocol supports zero-to-many such periods, but the current SLM Rollout implementation only supports zero-to-one.
          items:
            $ref: "#/components/schemas/DenyMaintenancePeriod"
          type: array
        window:
          $ref: "#/components/schemas/MaintenanceWindow"
          description: Optional. Maintenance window that is applied to resources covered by this policy.
      type: object
    UserPassword:
      description: Parameters to support Username and Password Authentication.
      properties:
        password:
          $ref: "#/components/schemas/Secret"
          description: Secret version reference containing the password.
        username:
          description: Username.
          type: string
      type: object
    WeeklyCycle:
      description: Time window specified for weekly operations.
      properties:
        schedule:
          description: User can specify multiple windows in a week. Minimum of 1 window.
          items:
            $ref: "#/components/schemas/Schedule"
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
