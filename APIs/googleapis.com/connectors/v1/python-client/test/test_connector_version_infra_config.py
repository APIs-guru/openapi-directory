# coding: utf-8

"""
    Connectors API

    Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.connector_version_infra_config import ConnectorVersionInfraConfig

class TestConnectorVersionInfraConfig(unittest.TestCase):
    """ConnectorVersionInfraConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectorVersionInfraConfig:
        """Test ConnectorVersionInfraConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectorVersionInfraConfig`
        """
        model = ConnectorVersionInfraConfig()
        if include_optional:
            return ConnectorVersionInfraConfig(
                connection_ratelimit_window_seconds = '',
                deployment_model = 'DEPLOYMENT_MODEL_UNSPECIFIED',
                hpa_config = openapi_client.models.hpa_config.HPAConfig(
                    cpu_utilization_threshold = '', 
                    memory_utilization_threshold = '', ),
                internalclient_ratelimit_threshold = '',
                ratelimit_threshold = '',
                resource_limits = openapi_client.models.resource_limits.ResourceLimits(
                    cpu = '', 
                    memory = '', ),
                resource_requests = openapi_client.models.resource_requests.ResourceRequests(
                    cpu = '', 
                    memory = '', ),
                shared_deployment = ''
            )
        else:
            return ConnectorVersionInfraConfig(
        )
        """

    def testConnectorVersionInfraConfig(self):
        """Test ConnectorVersionInfraConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
