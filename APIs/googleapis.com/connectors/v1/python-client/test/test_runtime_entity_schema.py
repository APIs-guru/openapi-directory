# coding: utf-8

"""
    Connectors API

    Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.runtime_entity_schema import RuntimeEntitySchema

class TestRuntimeEntitySchema(unittest.TestCase):
    """RuntimeEntitySchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuntimeEntitySchema:
        """Test RuntimeEntitySchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuntimeEntitySchema`
        """
        model = RuntimeEntitySchema()
        if include_optional:
            return RuntimeEntitySchema(
                entity = '',
                fields = [
                    openapi_client.models.field.Field(
                        additional_details = {
                            'key' : null
                            }, 
                        data_type = 'DATA_TYPE_UNSPECIFIED', 
                        default_value = null, 
                        description = '', 
                        field = '', 
                        json_schema = openapi_client.models.json_schema.JsonSchema(
                            description = '', 
                            enum = [
                                null
                                ], 
                            format = '', 
                            items = openapi_client.models.json_schema.JsonSchema(
                                description = '', 
                                format = '', 
                                jdbc_type = 'DATA_TYPE_UNSPECIFIED', 
                                properties = {
                                    'key' : 
                                    }, 
                                required = [
                                    ''
                                    ], 
                                type = [
                                    ''
                                    ], ), 
                            jdbc_type = 'DATA_TYPE_UNSPECIFIED', 
                            properties = {
                                'key' : 
                                }, 
                            required = [
                                ''
                                ], 
                            type = [
                                ''
                                ], ), 
                        key = True, 
                        nullable = True, 
                        readonly = True, )
                    ],
                json_schema = openapi_client.models.json_schema.JsonSchema(
                    description = '', 
                    enum = [
                        null
                        ], 
                    format = '', 
                    items = openapi_client.models.json_schema.JsonSchema(
                        description = '', 
                        format = '', 
                        jdbc_type = 'DATA_TYPE_UNSPECIFIED', 
                        properties = {
                            'key' : 
                            }, 
                        required = [
                            ''
                            ], 
                        type = [
                            ''
                            ], ), 
                    jdbc_type = 'DATA_TYPE_UNSPECIFIED', 
                    properties = {
                        'key' : 
                        }, 
                    required = [
                        ''
                        ], 
                    type = [
                        ''
                        ], )
            )
        else:
            return RuntimeEntitySchema(
        )
        """

    def testRuntimeEntitySchema(self):
        """Test RuntimeEntitySchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
