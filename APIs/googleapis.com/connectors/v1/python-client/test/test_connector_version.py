# coding: utf-8

"""
    Connectors API

    Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.connector_version import ConnectorVersion

class TestConnectorVersion(unittest.TestCase):
    """ConnectorVersion unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectorVersion:
        """Test ConnectorVersion
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectorVersion`
        """
        model = ConnectorVersion()
        if include_optional:
            return ConnectorVersion(
                auth_config_templates = [
                    openapi_client.models.auth_config_template.AuthConfigTemplate(
                        auth_key = '', 
                        auth_type = 'AUTH_TYPE_UNSPECIFIED', 
                        config_variable_templates = [
                            openapi_client.models.config_variable_template.ConfigVariableTemplate(
                                authorization_code_link = openapi_client.models.authorization_code_link.AuthorizationCodeLink(
                                    client_id = '', 
                                    enable_pkce = True, 
                                    scopes = [
                                        ''
                                        ], 
                                    uri = '', ), 
                                description = '', 
                                display_name = '', 
                                enum_options = [
                                    openapi_client.models.enum_option.EnumOption(
                                        display_name = '', 
                                        id = '', )
                                    ], 
                                is_advanced = True, 
                                key = '', 
                                location_type = 'LOCATION_TYPE_UNSPECIFIED', 
                                required = True, 
                                required_condition = openapi_client.models.logical_expression.LogicalExpression(
                                    field_comparisons = [
                                        openapi_client.models.field_comparison.FieldComparison(
                                            bool_value = True, 
                                            comparator = 'COMPARATOR_UNSPECIFIED', 
                                            int_value = '', 
                                            key = '', 
                                            string_value = '', )
                                        ], 
                                    logical_expressions = [
                                        openapi_client.models.logical_expression.LogicalExpression(
                                            logical_operator = 'OPERATOR_UNSPECIFIED', )
                                        ], 
                                    logical_operator = 'OPERATOR_UNSPECIFIED', ), 
                                role_grant = openapi_client.models.role_grant.RoleGrant(
                                    helper_text_template = '', 
                                    principal = 'PRINCIPAL_UNSPECIFIED', 
                                    resource = openapi_client.models.resource.Resource(
                                        path_template = '', 
                                        type = 'TYPE_UNSPECIFIED', ), 
                                    roles = [
                                        ''
                                        ], ), 
                                state = 'STATE_UNSPECIFIED', 
                                validation_regex = '', 
                                value_type = 'VALUE_TYPE_UNSPECIFIED', )
                            ], 
                        description = '', 
                        display_name = '', )
                    ],
                config_variable_templates = [
                    openapi_client.models.config_variable_template.ConfigVariableTemplate(
                        authorization_code_link = openapi_client.models.authorization_code_link.AuthorizationCodeLink(
                            client_id = '', 
                            enable_pkce = True, 
                            scopes = [
                                ''
                                ], 
                            uri = '', ), 
                        description = '', 
                        display_name = '', 
                        enum_options = [
                            openapi_client.models.enum_option.EnumOption(
                                display_name = '', 
                                id = '', )
                            ], 
                        is_advanced = True, 
                        key = '', 
                        location_type = 'LOCATION_TYPE_UNSPECIFIED', 
                        required = True, 
                        required_condition = openapi_client.models.logical_expression.LogicalExpression(
                            field_comparisons = [
                                openapi_client.models.field_comparison.FieldComparison(
                                    bool_value = True, 
                                    comparator = 'COMPARATOR_UNSPECIFIED', 
                                    int_value = '', 
                                    key = '', 
                                    string_value = '', )
                                ], 
                            logical_expressions = [
                                openapi_client.models.logical_expression.LogicalExpression(
                                    logical_operator = 'OPERATOR_UNSPECIFIED', )
                                ], 
                            logical_operator = 'OPERATOR_UNSPECIFIED', ), 
                        role_grant = openapi_client.models.role_grant.RoleGrant(
                            helper_text_template = '', 
                            principal = 'PRINCIPAL_UNSPECIFIED', 
                            resource = openapi_client.models.resource.Resource(
                                path_template = '', 
                                type = 'TYPE_UNSPECIFIED', ), 
                            roles = [
                                ''
                                ], ), 
                        state = 'STATE_UNSPECIFIED', 
                        validation_regex = '', 
                        value_type = 'VALUE_TYPE_UNSPECIFIED', )
                    ],
                connector_infra_config = openapi_client.models.connector_infra_config.ConnectorInfraConfig(
                    connection_ratelimit_window_seconds = '', 
                    deployment_model = 'DEPLOYMENT_MODEL_UNSPECIFIED', 
                    hpa_config = openapi_client.models.hpa_config.HPAConfig(
                        cpu_utilization_threshold = '', 
                        memory_utilization_threshold = '', ), 
                    internalclient_ratelimit_threshold = '', 
                    ratelimit_threshold = '', 
                    resource_limits = openapi_client.models.resource_limits.ResourceLimits(
                        cpu = '', 
                        memory = '', ), 
                    resource_requests = openapi_client.models.resource_requests.ResourceRequests(
                        cpu = '', 
                        memory = '', ), 
                    shared_deployment = '', ),
                create_time = '',
                destination_config_templates = [
                    openapi_client.models.destination_config_template.DestinationConfigTemplate(
                        default_port = 56, 
                        description = '', 
                        display_name = '', 
                        is_advanced = True, 
                        key = '', 
                        max = 56, 
                        min = 56, 
                        port_field_type = 'FIELD_TYPE_UNSPECIFIED', 
                        regex_pattern = '', )
                    ],
                display_name = '',
                egress_control_config = openapi_client.models.egress_control_config.EgressControlConfig(
                    backends = '', 
                    extraction_rules = openapi_client.models.extraction_rules.ExtractionRules(
                        extraction_rule = [
                            openapi_client.models.extraction_rule.ExtractionRule(
                                extraction_regex = '', 
                                source = openapi_client.models.source.Source(
                                    field_id = '', 
                                    source_type = 'SOURCE_TYPE_UNSPECIFIED', ), )
                            ], ), ),
                eventing_config_template = openapi_client.models.eventing_config_template.EventingConfigTemplate(
                    additional_variables = [
                        openapi_client.models.config_variable_template.ConfigVariableTemplate(
                            authorization_code_link = openapi_client.models.authorization_code_link.AuthorizationCodeLink(
                                client_id = '', 
                                enable_pkce = True, 
                                scopes = [
                                    ''
                                    ], 
                                uri = '', ), 
                            description = '', 
                            display_name = '', 
                            enum_options = [
                                openapi_client.models.enum_option.EnumOption(
                                    display_name = '', 
                                    id = '', )
                                ], 
                            is_advanced = True, 
                            key = '', 
                            location_type = 'LOCATION_TYPE_UNSPECIFIED', 
                            required = True, 
                            required_condition = openapi_client.models.logical_expression.LogicalExpression(
                                field_comparisons = [
                                    openapi_client.models.field_comparison.FieldComparison(
                                        bool_value = True, 
                                        comparator = 'COMPARATOR_UNSPECIFIED', 
                                        int_value = '', 
                                        key = '', 
                                        string_value = '', )
                                    ], 
                                logical_expressions = [
                                    openapi_client.models.logical_expression.LogicalExpression(
                                        logical_operator = 'OPERATOR_UNSPECIFIED', )
                                    ], 
                                logical_operator = 'OPERATOR_UNSPECIFIED', ), 
                            role_grant = openapi_client.models.role_grant.RoleGrant(
                                helper_text_template = '', 
                                principal = 'PRINCIPAL_UNSPECIFIED', 
                                resource = openapi_client.models.resource.Resource(
                                    path_template = '', 
                                    type = 'TYPE_UNSPECIFIED', ), 
                                roles = [
                                    ''
                                    ], ), 
                            state = 'STATE_UNSPECIFIED', 
                            validation_regex = '', 
                            value_type = 'VALUE_TYPE_UNSPECIFIED', )
                        ], 
                    auth_config_templates = [
                        openapi_client.models.auth_config_template.AuthConfigTemplate(
                            auth_key = '', 
                            auth_type = 'AUTH_TYPE_UNSPECIFIED', 
                            config_variable_templates = [
                                openapi_client.models.config_variable_template.ConfigVariableTemplate(
                                    description = '', 
                                    display_name = '', 
                                    is_advanced = True, 
                                    key = '', 
                                    location_type = 'LOCATION_TYPE_UNSPECIFIED', 
                                    required = True, 
                                    state = 'STATE_UNSPECIFIED', 
                                    validation_regex = '', 
                                    value_type = 'VALUE_TYPE_UNSPECIFIED', )
                                ], 
                            description = '', 
                            display_name = '', )
                        ], 
                    auto_refresh = True, 
                    auto_registration_supported = True, 
                    encryption_key_template = , 
                    enrichment_supported = True, 
                    event_listener_type = 'EVENT_LISTENER_TYPE_UNSPECIFIED', 
                    is_eventing_supported = True, 
                    listener_auth_config_templates = [
                        openapi_client.models.auth_config_template.AuthConfigTemplate(
                            auth_key = '', 
                            auth_type = 'AUTH_TYPE_UNSPECIFIED', 
                            description = '', 
                            display_name = '', )
                        ], 
                    proxy_destination_config = openapi_client.models.destination_config_template.DestinationConfigTemplate(
                        default_port = 56, 
                        description = '', 
                        display_name = '', 
                        is_advanced = True, 
                        key = '', 
                        max = 56, 
                        min = 56, 
                        port_field_type = 'FIELD_TYPE_UNSPECIFIED', 
                        regex_pattern = '', ), 
                    registration_destination_config = openapi_client.models.destination_config_template.DestinationConfigTemplate(
                        default_port = 56, 
                        description = '', 
                        display_name = '', 
                        is_advanced = True, 
                        key = '', 
                        max = 56, 
                        min = 56, 
                        port_field_type = 'FIELD_TYPE_UNSPECIFIED', 
                        regex_pattern = '', ), 
                    trigger_config_variables = [
                        
                        ], ),
                labels = {
                    'key' : ''
                    },
                launch_stage = 'LAUNCH_STAGE_UNSPECIFIED',
                name = '',
                release_version = '',
                role_grant = openapi_client.models.role_grant.RoleGrant(
                    helper_text_template = '', 
                    principal = 'PRINCIPAL_UNSPECIFIED', 
                    resource = openapi_client.models.resource.Resource(
                        path_template = '', 
                        type = 'TYPE_UNSPECIFIED', ), 
                    roles = [
                        ''
                        ], ),
                role_grants = [
                    openapi_client.models.role_grant.RoleGrant(
                        helper_text_template = '', 
                        principal = 'PRINCIPAL_UNSPECIFIED', 
                        resource = openapi_client.models.resource.Resource(
                            path_template = '', 
                            type = 'TYPE_UNSPECIFIED', ), 
                        roles = [
                            ''
                            ], )
                    ],
                ssl_config_template = openapi_client.models.ssl_config_template.SslConfigTemplate(
                    additional_variables = [
                        openapi_client.models.config_variable_template.ConfigVariableTemplate(
                            authorization_code_link = openapi_client.models.authorization_code_link.AuthorizationCodeLink(
                                client_id = '', 
                                enable_pkce = True, 
                                scopes = [
                                    ''
                                    ], 
                                uri = '', ), 
                            description = '', 
                            display_name = '', 
                            enum_options = [
                                openapi_client.models.enum_option.EnumOption(
                                    display_name = '', 
                                    id = '', )
                                ], 
                            is_advanced = True, 
                            key = '', 
                            location_type = 'LOCATION_TYPE_UNSPECIFIED', 
                            required = True, 
                            required_condition = openapi_client.models.logical_expression.LogicalExpression(
                                field_comparisons = [
                                    openapi_client.models.field_comparison.FieldComparison(
                                        bool_value = True, 
                                        comparator = 'COMPARATOR_UNSPECIFIED', 
                                        int_value = '', 
                                        key = '', 
                                        string_value = '', )
                                    ], 
                                logical_expressions = [
                                    openapi_client.models.logical_expression.LogicalExpression(
                                        logical_operator = 'OPERATOR_UNSPECIFIED', )
                                    ], 
                                logical_operator = 'OPERATOR_UNSPECIFIED', ), 
                            role_grant = openapi_client.models.role_grant.RoleGrant(
                                helper_text_template = '', 
                                principal = 'PRINCIPAL_UNSPECIFIED', 
                                resource = openapi_client.models.resource.Resource(
                                    path_template = '', 
                                    type = 'TYPE_UNSPECIFIED', ), 
                                roles = [
                                    ''
                                    ], ), 
                            state = 'STATE_UNSPECIFIED', 
                            validation_regex = '', 
                            value_type = 'VALUE_TYPE_UNSPECIFIED', )
                        ], 
                    client_cert_type = [
                        'CERT_TYPE_UNSPECIFIED'
                        ], 
                    is_tls_mandatory = True, 
                    server_cert_type = [
                        'CERT_TYPE_UNSPECIFIED'
                        ], 
                    ssl_type = 'SSL_TYPE_UNSPECIFIED', ),
                supported_runtime_features = openapi_client.models.supported_runtime_features.SupportedRuntimeFeatures(
                    action_apis = True, 
                    entity_apis = True, 
                    sql_query = True, ),
                unsupported_connection_types = [
                    'CONNECTION_TYPE_UNSPECIFIED'
                    ],
                update_time = ''
            )
        else:
            return ConnectorVersion(
        )
        """

    def testConnectorVersion(self):
        """Test ConnectorVersion"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
