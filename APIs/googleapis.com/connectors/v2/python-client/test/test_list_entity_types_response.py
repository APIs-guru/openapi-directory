# coding: utf-8

"""
    Connectors API

    Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_entity_types_response import ListEntityTypesResponse

class TestListEntityTypesResponse(unittest.TestCase):
    """ListEntityTypesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEntityTypesResponse:
        """Test ListEntityTypesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEntityTypesResponse`
        """
        model = ListEntityTypesResponse()
        if include_optional:
            return ListEntityTypesResponse(
                next_page_token = '',
                types = [
                    openapi_client.models.entity_type.EntityType(
                        fields = [
                            openapi_client.models.field.Field(
                                additional_details = {
                                    'key' : null
                                    }, 
                                data_type = 'DATA_TYPE_UNSPECIFIED', 
                                default_value = null, 
                                description = '', 
                                json_schema = openapi_client.models.json_schema.JsonSchema(
                                    description = '', 
                                    enum = [
                                        null
                                        ], 
                                    format = '', 
                                    items = openapi_client.models.json_schema.JsonSchema(
                                        description = '', 
                                        format = '', 
                                        jdbc_type = 'DATA_TYPE_UNSPECIFIED', 
                                        properties = {
                                            'key' : 
                                            }, 
                                        required = [
                                            ''
                                            ], 
                                        type = [
                                            ''
                                            ], ), 
                                    jdbc_type = 'DATA_TYPE_UNSPECIFIED', 
                                    properties = {
                                        'key' : 
                                        }, 
                                    required = [
                                        ''
                                        ], 
                                    type = [
                                        ''
                                        ], ), 
                                key = True, 
                                name = '', 
                                nullable = True, 
                                reference = openapi_client.models.reference.Reference(
                                    name = '', ), )
                            ], 
                        json_schema = , 
                        name = '', )
                    ],
                unsupported_type_names = [
                    ''
                    ]
            )
        else:
            return ListEntityTypesResponse(
        )
        """

    def testListEntityTypesResponse(self):
        """Test ListEntityTypesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
