openapi: 3.0.0
servers:
  - url: https://connectors.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Enables users to create and manage connections to Google Cloud services and third-party business applications using the Connectors interface.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Connectors API
  version: v2
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://connectors.googleapis.com/$discovery/rest?version=v2
      version: v1
  x-preferred: true
  x-providerName: googleapis.com
  x-serviceName: connectors
externalDocs:
  url: https://cloud.google.com/apigee/docs/api-platform/connectors/about-connectors
tags:
  - name: projects
paths:
  /v2/{connection}:executeSqlQuery:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Executes a SQL statement specified in the body of the request. An example of this SQL statement in the case of Salesforce connector would be 'select * from Account a, Order o where a.Id = o.AccountId'.
      operationId: connectors.projects.locations.connections.executeSqlQuery
      parameters:
        - description: "Required. Resource name of the Connection. Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: connection
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteSqlQueryRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteSqlQueryResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{entityType}/entities:deleteEntitiesWithConditions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deletes entities based on conditions specified in the request and not on entity id.
      operationId: connectors.projects.locations.connections.entityTypes.entities.deleteEntitiesWithConditions
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}"
          in: path
          name: entityType
          required: true
          schema:
            type: string
        - description: "Required. Conditions to be used when deleting entities. From a proto standpoint, There are no restrictions on what can be passed using this field. The connector documentation should have information about what format of filters/conditions are supported. Note: If this conditions field is left empty, an exception is thrown. We don't want to consider 'empty conditions' to be a match-all case. Connector developers can determine and document what a match-all case constraint would be."
          in: query
          name: conditions
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{entityType}/entities:updateEntitiesWithConditions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates entities based on conditions specified in the request and not on entity id.
      operationId: connectors.projects.locations.connections.entityTypes.entities.updateEntitiesWithConditions
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}"
          in: path
          name: entityType
          required: true
          schema:
            type: string
        - description: "Required. Conditions to be used when updating entities. From a proto standpoint, There are no restrictions on what can be passed using this field. The connector documentation should have information about what format of filters/conditions are supported. Note: If this conditions field is left empty, an exception is thrown. We don't want to consider 'empty conditions' to be a match-all case. Connector developers can determine and document what a match-all case constraint would be."
          in: query
          name: conditions
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Entity"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateEntitiesWithConditionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{name}:
    delete:
      description: Deletes an existing entity row matching the entity type and entity id specified in the request.
      operationId: connectors.projects.locations.connections.entityTypes.entities.delete
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets a single entity row matching the entity type and entity id specified in the request.
      operationId: connectors.projects.locations.connections.entityTypes.entities.get
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}"
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing entity row matching the entity type and entity id specified in the request. The fields in the entity row that need to be modified are contained in the body of the request. All unspecified fields are left unchanged. The response message contains a `Entity` message object returned as a response by the external system.
      operationId: connectors.projects.locations.connections.entityTypes.entities.patch
      parameters:
        - description: "Output only. Resource name of the Entity. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Entity"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{name}:checkReadiness:
    get:
      description: Reports readiness status of the connector. Similar logic to GetStatus but modified for kubernetes health check to understand.
      operationId: connectors.projects.locations.connections.checkReadiness
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckReadinessResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{name}:checkStatus:
    get:
      description: Reports the status of the connection. Note that when the connection is in a state that is not ACTIVE, the implementation of this RPC method must return a Status with the corresponding State instead of returning a gRPC status code that is not "OK", which indicates that ConnectionStatus itself, not the connection, failed.
      operationId: connectors.projects.locations.connections.checkStatus
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckStatusResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{name}:exchangeAuthCode:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: ExchangeAuthCode exchanges the OAuth authorization code (and other necessary data) for an access token (and associated credentials).
      operationId: connectors.projects.locations.connections.exchangeAuthCode
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExchangeAuthCodeRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExchangeAuthCodeResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{name}:execute:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Executes an action with the name specified in the request. The input parameters for executing the action are passed through the body of the ExecuteAction request.
      operationId: connectors.projects.locations.connections.actions.execute
      parameters:
        - description: "Required. Resource name of the Action. Format: projects/{project}/locations/{location}/connections/{connection}/actions/{action}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteActionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteActionResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{name}:refreshAccessToken:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: RefreshAccessToken exchanges the OAuth refresh token (and other necessary data) for a new access token (and new associated credentials).
      operationId: connectors.projects.locations.connections.refreshAccessToken
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshAccessTokenRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RefreshAccessTokenResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{parent}/actions:
    get:
      description: Gets the schema of all the actions supported by the connector.
      operationId: connectors.projects.locations.connections.actions.list
      parameters:
        - description: "Required. Parent resource name of the Action. Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Number of Actions to return. Defaults to 25.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token, return from a previous ListActions call, that can be used retrieve the next page of content. If unspecified, the request returns the first page of actions.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which fields of the Action are returned in the response.
          in: query
          name: view
          schema:
            enum:
              - ACTION_VIEW_UNSPECIFIED
              - ACTION_VIEW_BASIC
              - ACTION_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListActionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v2/{parent}/entities:
    get:
      description: "Lists entity rows of a particular entity type contained in the request. Note: 1. Currently, only max of one 'sort_by' column is supported. 2. If no 'sort_by' column is provided, the primary key of the table is used. If zero or more than one primary key is available, we default to the unpaginated list entities logic which only returns the first page. 3. The values of the 'sort_by' columns must uniquely identify an entity row, otherwise undefined behaviors may be observed during pagination. 4. Since transactions are not supported, any updates, inserts or deletes during pagination can lead to stale data being returned or other unexpected behaviors."
      operationId: connectors.projects.locations.connections.entityTypes.entities.list
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Conditions to be used when listing entities. From a proto standpoint, There are no restrictions on what can be passed using this field. The connector documentation should have information about what format of filters/conditions are supported.
          in: query
          name: conditions
          schema:
            type: string
        - description: Number of entity rows to return. Defaults page size = 25. Max page size = 200.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token value if available from a previous request.
          in: query
          name: pageToken
          schema:
            type: string
        - description: List of 'sort_by' columns to use when returning the results.
          explode: true
          in: query
          name: sortBy
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntitiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new entity row of the specified entity type in the external system. The field values for creating the row are contained in the body of the request. The response message contains a `Entity` message object returned as a response by the external system.
      operationId: connectors.projects.locations.connections.entityTypes.entities.create
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Entity"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Entity"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v2/{parent}/entityTypes:
    get:
      description: Lists metadata related to all entity types present in the external system.
      operationId: connectors.projects.locations.connections.entityTypes.list
      parameters:
        - description: "Required. Resource name of the Entity Type. Format: projects/{project}/locations/{location}/connections/{connection}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Number of entity types to return. Defaults to 25.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Page token, return from a previous ListEntityTypes call, that can be used retrieve the next page of content. If unspecified, the request returns the first page of entity types.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Specifies which fields of the Entity Type are returned in the response.
          in: query
          name: view
          schema:
            enum:
              - ENTITY_TYPE_VIEW_UNSPECIFIED
              - ENTITY_TYPE_VIEW_BASIC
              - ENTITY_TYPE_VIEW_FULL
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListEntityTypesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AccessCredentials:
      description: AccessCredentials includes the OAuth access token, and the other fields returned along with it.
      properties:
        accessToken:
          description: OAuth access token.
          type: string
        expiresIn:
          description: Duration till the access token expires.
          format: google-duration
          type: string
        refreshToken:
          description: OAuth refresh token.
          type: string
      type: object
    Action:
      description: Action message contains metadata information about a single action present in the external system.
      properties:
        description:
          description: Brief Description of action
          type: string
        displayName:
          description: Display Name of action to be shown on client side
          type: string
        inputJsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema representation of this actions's input schema
        inputParameters:
          description: List containing input parameter metadata.
          items:
            $ref: "#/components/schemas/InputParameter"
          type: array
        name:
          description: Name of the action.
          type: string
        resultJsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema representation of this actions's result schema
        resultMetadata:
          description: List containing the metadata of result fields.
          items:
            $ref: "#/components/schemas/ResultMetadata"
          type: array
      type: object
    CheckReadinessResponse:
      description: Response containing status of the connector for readiness prober.
      properties:
        status:
          type: string
      type: object
    CheckStatusResponse:
      description: The status of the connector.
      properties:
        description:
          description: When the connector is not in ACTIVE state, the description must be populated to specify the reason why it's not in ACTIVE state.
          type: string
        state:
          description: State of the connector.
          enum:
            - STATE_UNSPECIFIED
            - ACTIVE
            - ERROR
            - AUTH_ERROR
          type: string
      type: object
    DailyCycle:
      description: Time window specified for daily operations.
      properties:
        duration:
          description: Output only. Duration of the time window, set by service producer.
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: Time within the day to start the operations.
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DenyMaintenancePeriod:
      description: DenyMaintenancePeriod definition. Maintenance is forbidden within the deny period. The start_date must be less than the end_date.
      properties:
        endDate:
          $ref: "#/components/schemas/Date"
          description: "Deny period end date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be before the end."
        startDate:
          $ref: "#/components/schemas/Date"
          description: "Deny period start date. This can be: * A full date, with non-zero year, month and day values. * A month and day value, with a zero year. Allows recurring deny periods each year. Date matching this period will have to be the same or after the start."
        time:
          $ref: "#/components/schemas/TimeOfDay"
          description: "Time in UTC when the Blackout period starts on start_date and ends on end_date. This can be: * Full time. * All zeros for 00:00:00 UTC"
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Entity:
      description: "'Entity row'/ 'Entity' refers to a single row of an entity type."
      properties:
        fields:
          additionalProperties: {}
          description: Fields of the entity. The key is name of the field and the value contains the applicable `google.protobuf.Value` entry for this field.
          type: object
        name:
          description: "Output only. Resource name of the Entity. Format: projects/{project}/locations/{location}/connections/{connection}/entityTypes/{type}/entities/{id}"
          readOnly: true
          type: string
      type: object
    EntityType:
      description: EntityType message contains metadata information about a single entity type present in the external system.
      properties:
        fields:
          description: List containing metadata information about each field of the entity type.
          items:
            $ref: "#/components/schemas/Field"
          type: array
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema representation of this entity's schema
        name:
          description: The name of the entity type.
          type: string
      type: object
    ExchangeAuthCodeRequest:
      description: ExchangeAuthCodeRequest currently includes no fields.
      properties: {}
      type: object
    ExchangeAuthCodeResponse:
      description: ExchangeAuthCodeResponse includes the returned access token and its associated credentials.
      properties:
        accessCredentials:
          $ref: "#/components/schemas/AccessCredentials"
      type: object
    ExecuteActionRequest:
      description: Request message for ActionService.ExecuteAction
      properties:
        parameters:
          additionalProperties:
            description: Properties of the object.
          description: Parameters for executing the action. The parameters can be key/value pairs or nested structs.
          type: object
      type: object
    ExecuteActionResponse:
      description: Response message for ActionService.ExecuteAction
      properties:
        results:
          description: "In the case of successful invocation of the specified action, the results Struct contains values based on the response of the action invoked. 1. If the action execution produces any entities as a result, they are returned as an array of Structs with the 'key' being the field name and the 'value' being the value of that field in each result row. { 'results': [{'key': 'value'}, ...] }"
          items:
            additionalProperties:
              description: Properties of the object.
            type: object
          type: array
      type: object
    ExecuteSqlQueryRequest:
      description: An execute sql query request containing the query and the connection to execute it on.
      properties:
        query:
          $ref: "#/components/schemas/Query"
          description: Required. SQL statement passed by clients like Integration Platform, the query is passed as-is to the driver used for interfacing with external systems.
      type: object
    ExecuteSqlQueryResponse:
      description: A response returned by the connection after executing the sql query.
      properties:
        results:
          description: "In the case of successful execution of the query the response contains results returned by the external system. For example, the result rows of the query are contained in the 'results' Struct list - \"results\": [ { \"field1\": \"val1\", \"field2\": \"val2\",.. },.. ] Each Struct row can contain fields any type of like nested Structs or lists."
          items:
            additionalProperties:
              description: Properties of the object.
            type: object
          type: array
      type: object
    Field:
      description: Message contains EntityType's Field metadata.
      properties:
        additionalDetails:
          additionalProperties:
            description: Properties of the object.
          description: The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
          type: object
        dataType:
          description: The data type of the Field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - "NULL"
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        defaultValue:
          description: The following field specifies the default value of the Field provided by the external system if a value is not provided.
        description:
          description: A brief description of the Field.
          type: string
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema of the field, applicable only if field is of type `STRUCT`
        key:
          description: The following boolean field specifies if the current Field acts as a primary key or id if the parent is of type entity.
          type: boolean
        name:
          description: Name of the Field.
          type: string
        nullable:
          description: Specifies whether a null value is allowed.
          type: boolean
        reference:
          $ref: "#/components/schemas/Reference"
          description: Reference captures the association between two different entity types. Value links to the reference of another entity type.
      type: object
    InputParameter:
      description: Input Parameter message contains metadata about the parameters required for executing an Action.
      properties:
        additionalDetails:
          additionalProperties:
            description: Properties of the object.
          description: The following map contains fields that are not explicitly mentioned above,this give connectors the flexibility to add new metadata fields.
          type: object
        dataType:
          description: The data type of the Parameter
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - "NULL"
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        defaultValue:
          description: The following field specifies the default value of the Parameter provided by the external system if a value is not provided.
        description:
          description: A brief description of the Parameter.
          type: string
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema of the parameter, applicable only if parameter is of type `STRUCT`
        name:
          description: Name of the Parameter.
          type: string
        nullable:
          description: Specifies whether a null value is allowed.
          type: boolean
      type: object
    Instance:
      description: 'Instance represents the interface for SLM services to actuate the state of control plane resources. Example Instance in JSON, where consumer-project-number=123456, producer-project-id=cloud-sql: ```json Instance: { "name": "projects/123456/locations/us-east1/instances/prod-instance", "create_time": { "seconds": 1526406431, }, "labels": { "env": "prod", "foo": "bar" }, "state": READY, "software_versions": { "software_update": "cloud-sql-09-28-2018", }, "maintenance_policy_names": { "UpdatePolicy": "projects/123456/locations/us-east1/maintenancePolicies/prod-update-policy", } "tenant_project_id": "cloud-sql-test-tenant", "producer_metadata": { "cloud-sql-tier": "basic", "cloud-sql-instance-size": "1G", }, "provisioned_resources": [ { "resource-type": "compute-instance", "resource-url": "https://www.googleapis.com/compute/v1/projects/cloud-sql/zones/us-east1-b/instances/vm-1", } ], "maintenance_schedules": { "csa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, }, "ncsa_rollout": { "start_time": { "seconds": 1526406431, }, "end_time": { "seconds": 1535406431, }, } }, "consumer_defined_name": "my-sql-instance1", } ``` LINT.IfChange'
      properties:
        consumerDefinedName:
          description: consumer_defined_name is the name of the instance set by the service consumers. Generally this is different from the `name` field which reperesents the system-assigned id of the instance which the service consumers do not recognize. This is a required field for tenants onboarding to Maintenance Window notifications (go/slm-rollout-maintenance-policies#prerequisites).
          type: string
        createTime:
          description: Output only. Timestamp when the resource was created.
          format: google-datetime
          readOnly: true
          type: string
        instanceType:
          description: "Optional. The instance_type of this instance of format: projects/{project_number}/locations/{location_id}/instanceTypes/{instance_type_id}. Instance Type represents a high-level tier or SKU of the service that this instance belong to. When enabled(eg: Maintenance Rollout), Rollout uses 'instance_type' along with 'software_versions' to determine whether instance needs an update or not."
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
          type: object
        maintenancePolicyNames:
          additionalProperties:
            type: string
          description: Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the referenced policy must define the same policy type. For details, please refer to go/mr-user-guide. Should not be set if maintenance_settings.maintenance_policies is set.
          type: object
        maintenanceSchedules:
          additionalProperties:
            $ref: "#/components/schemas/MaintenanceSchedule"
          description: The MaintenanceSchedule contains the scheduling information of published maintenance schedule with same key as software_versions.
          type: object
        maintenanceSettings:
          $ref: "#/components/schemas/MaintenanceSettings"
          description: Optional. The MaintenanceSettings associated with instance.
        name:
          description: "Unique name of the resource. It uses the form: `projects/{project_number}/locations/{location_id}/instances/{instance_id}` Note: This name is passed, stored and logged across the rollout system. So use of consumer project_id or any other consumer PII in the name is strongly discouraged for wipeout (go/wipeout) compliance. See go/elysium/project_ids#storage-guidance for more details."
          type: string
        notificationParameters:
          additionalProperties:
            $ref: "#/components/schemas/NotificationParameter"
          description: Optional. notification_parameter are information that service producers may like to include that is not relevant to Rollout. This parameter will only be passed to Gamma and Cloud Logging for notification/logging purpose.
          type: object
        producerMetadata:
          additionalProperties:
            type: string
          description: Output only. Custom string attributes used primarily to expose producer-specific information in monitoring dashboards. See go/get-instance-metadata.
          readOnly: true
          type: object
        provisionedResources:
          description: Output only. The list of data plane resources provisioned for this instance, e.g. compute VMs. See go/get-instance-metadata.
          items:
            $ref: "#/components/schemas/ProvisionedResource"
          readOnly: true
          type: array
        slmInstanceTemplate:
          description: Link to the SLM instance template. Only populated when updating SLM instances via SSA's Actuation service adaptor. Service producers with custom control plane (e.g. Cloud SQL) doesn't need to populate this field. Instead they should use software_versions.
          type: string
        sloMetadata:
          $ref: "#/components/schemas/SloMetadata"
          description: Output only. SLO metadata for instance classification in the Standardized dataplane SLO platform. See go/cloud-ssa-standard-slo for feature description.
          readOnly: true
        softwareVersions:
          additionalProperties:
            type: string
          description: Software versions that are used to deploy this instance. This can be mutated by rollout services.
          type: object
        state:
          description: Output only. Current lifecycle state of the resource (e.g. if it's being created or ready to use).
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - READY
            - UPDATING
            - REPAIRING
            - DELETING
            - ERROR
          readOnly: true
          type: string
        tenantProjectId:
          description: Output only. ID of the associated GCP tenant project. See go/get-instance-metadata.
          readOnly: true
          type: string
        updateTime:
          description: Output only. Timestamp when the resource was last modified.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    JsonSchema:
      description: JsonSchema representation of schema metadata
      properties:
        additionalDetails:
          additionalProperties:
            description: Properties of the object.
          description: Additional details apart from standard json schema fields, this gives flexibility to store metadata about the schema
          type: object
        description:
          description: A description of this schema.
          type: string
        enum:
          description: Possible values for an enumeration. This works in conjunction with `type` to represent types with a fixed set of legal values
          items: {}
          type: array
        format:
          description: Format of the value as per https://json-schema.org/understanding-json-schema/reference/string.html#format
          type: string
        items:
          $ref: "#/components/schemas/JsonSchema"
          description: Schema that applies to array values, applicable only if this is of type `array`.
        jdbcType:
          description: JDBC datatype of the field.
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - "NULL"
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        properties:
          additionalProperties:
            $ref: "#/components/schemas/JsonSchema"
          description: The child schemas, applicable only if this is of type `object`. The key is the name of the property and the value is the json schema that describes that property
          type: object
        required:
          description: Whether this property is required.
          items:
            type: string
          type: array
        type:
          description: "JSON Schema Validation: A Vocabulary for Structural Validation of JSON"
          items:
            type: string
          type: array
      type: object
    ListActionsResponse:
      description: Response message for ActionService.ListActions
      properties:
        actions:
          description: List of action metadata.
          items:
            $ref: "#/components/schemas/Action"
          type: array
        nextPageToken:
          description: Next page token if more actions available.
          type: string
        unsupportedActionNames:
          description: List of actions which contain unsupported Datatypes. Check datatype.proto for more information.
          items:
            type: string
          type: array
      type: object
    ListEntitiesResponse:
      description: Response message for EntityService.ListEntities
      properties:
        entities:
          description: List containing entity rows.
          items:
            $ref: "#/components/schemas/Entity"
          type: array
        nextPageToken:
          description: Next page token if more records are available.
          type: string
      type: object
    ListEntityTypesResponse:
      description: Response message for EntityService.ListEntityTypes
      properties:
        nextPageToken:
          description: Next page token if more entity types available.
          type: string
        types:
          description: List of metadata related to all entity types.
          items:
            $ref: "#/components/schemas/EntityType"
          type: array
        unsupportedTypeNames:
          description: List of entity type names which contain unsupported Datatypes. Check datatype.proto for more information.
          items:
            type: string
          type: array
      type: object
    MaintenancePolicy:
      description: LINT.IfChange Defines policies to service maintenance events.
      properties:
        createTime:
          description: Output only. The time when the resource was created.
          format: google-datetime
          type: string
        description:
          description: Optional. Description of what this policy is for. Create/Update methods return INVALID_ARGUMENT if the length is greater than 512.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. Resource labels to represent user provided metadata. Each label is a key-value pair, where both the key and the value are arbitrary strings provided by the user.
          type: object
        name:
          description: "Required. MaintenancePolicy name using the form: `projects/{project_id}/locations/{location_id}/maintenancePolicies/{maintenance_policy_id}` where {project_id} refers to a GCP consumer project ID, {location_id} refers to a GCP region/zone, {maintenance_policy_id} must be 1-63 characters long and match the regular expression `[a-z0-9]([-a-z0-9]*[a-z0-9])?`."
          type: string
        state:
          description: Optional. The state of the policy.
          enum:
            - STATE_UNSPECIFIED
            - READY
            - DELETING
          type: string
        updatePolicy:
          $ref: "#/components/schemas/UpdatePolicy"
          description: Maintenance policy applicable to instance update.
        updateTime:
          description: Output only. The time when the resource was updated.
          format: google-datetime
          type: string
      type: object
    MaintenanceSchedule:
      description: Maintenance schedule which is exposed to customer and potentially end user, indicating published upcoming future maintenance schedule
      properties:
        canReschedule:
          deprecated: true
          description: This field is deprecated, and will be always set to true since reschedule can happen multiple times now. This field should not be removed until all service producers remove this for their customers.
          type: boolean
        endTime:
          description: The scheduled end time for the maintenance.
          format: google-datetime
          type: string
        rolloutManagementPolicy:
          description: The rollout management policy this maintenance schedule is associated with. When doing reschedule update request, the reschedule should be against this given policy.
          type: string
        scheduleDeadlineTime:
          description: schedule_deadline_time is the time deadline any schedule start time cannot go beyond, including reschedule. It's normally the initial schedule start time plus maintenance window length (1 day or 1 week). Maintenance cannot be scheduled to start beyond this deadline.
          format: google-datetime
          type: string
        startTime:
          description: The scheduled start time for the maintenance.
          format: google-datetime
          type: string
      type: object
    MaintenanceSettings:
      description: Maintenance settings associated with instance. Allows service producers and end users to assign settings that controls maintenance on this instance.
      properties:
        exclude:
          description: Optional. Exclude instance from maintenance. When true, rollout service will not attempt maintenance on the instance. Rollout service will include the instance in reported rollout progress as not attempted.
          type: boolean
        isRollback:
          description: Optional. If the update call is triggered from rollback, set the value as true.
          type: boolean
        maintenancePolicies:
          additionalProperties:
            $ref: "#/components/schemas/MaintenancePolicy"
          description: Optional. The MaintenancePolicies that have been attached to the instance. The key must be of the type name of the oneof policy name defined in MaintenancePolicy, and the embedded policy must define the same policy type. For details, please refer to go/mr-user-guide. Should not be set if maintenance_policy_names is set. If only the name is needed, then only populate MaintenancePolicy.name.
          type: object
      type: object
    MaintenanceWindow:
      description: MaintenanceWindow definition.
      properties:
        dailyCycle:
          $ref: "#/components/schemas/DailyCycle"
          description: Daily cycle.
        weeklyCycle:
          $ref: "#/components/schemas/WeeklyCycle"
          description: Weekly cycle.
      type: object
    NodeSloMetadata:
      description: Node information for custom per-node SLO implementations. SSA does not support per-node SLO, but producers can populate per-node information in SloMetadata for custom precomputations. SSA Eligibility Exporter will emit per-node metric based on this information.
      properties:
        location:
          description: The location of the node, if different from instance location.
          type: string
        nodeId:
          description: The id of the node. This should be equal to SaasInstanceNode.node_id.
          type: string
        perSliEligibility:
          $ref: "#/components/schemas/PerSliSloEligibility"
          description: If present, this will override eligibility for the node coming from instance or exclusions for specified SLIs.
      type: object
    NotificationParameter:
      description: Contains notification related data.
      properties:
        values:
          description: Optional. Array of string values. e.g. instance's replica information.
          items:
            type: string
          type: array
      type: object
    PerSliSloEligibility:
      description: PerSliSloEligibility is a mapping from an SLI name to eligibility.
      properties:
        eligibilities:
          additionalProperties:
            $ref: "#/components/schemas/SloEligibility"
          description: An entry in the eligibilities map specifies an eligibility for a particular SLI for the given instance. The SLI key in the name must be a valid SLI name specified in the Eligibility Exporter binary flags otherwise an error will be emitted by Eligibility Exporter and the oncaller will be alerted. If an SLI has been defined in the binary flags but the eligibilities map does not contain it, the corresponding SLI time series will not be emitted by the Eligibility Exporter. This ensures a smooth rollout and compatibility between the data produced by different versions of the Eligibility Exporters. If eligibilities map contains a key for an SLI which has not been declared in the binary flags, there will be an error message emitted in the Eligibility Exporter log and the metric for the SLI in question will not be emitted.
          type: object
      type: object
    ProvisionedResource:
      description: Describes provisioned dataplane resources.
      properties:
        resourceType:
          description: "Type of the resource. This can be either a GCP resource or a custom one (e.g. another cloud provider's VM). For GCP compute resources use singular form of the names listed in GCP compute API documentation (https://cloud.google.com/compute/docs/reference/rest/v1/), prefixed with 'compute-', for example: 'compute-instance', 'compute-disk', 'compute-autoscaler'."
          type: string
        resourceUrl:
          description: URL identifying the resource, e.g. "https://www.googleapis.com/compute/v1/projects/...)".
          type: string
      type: object
    Query:
      description: 'A wrapper around the SQL query statement. This is needed so that the JSON representation of ExecuteSqlQueryRequest has the following format: `{"query":"select *"}`.'
      properties:
        maxRows:
          description: Sets the limit for the maximum number of rows returned after the query execution.
          format: int64
          type: string
        query:
          description: Required. Sql query to execute.
          type: string
        queryParameters:
          description: In the struct, the value corresponds to the value of query parameter and date type corresponds to the date type of the query parameter.
          items:
            $ref: "#/components/schemas/QueryParameter"
          type: array
        timeout:
          description: Sets the number of seconds the driver will wait for a query to execute.
          format: int64
          type: string
      type: object
    QueryParameter:
      description: Query parameter definition
      properties:
        dataType:
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - "NULL"
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        value: {}
      type: object
    Reference:
      properties:
        name:
          description: Name of the reference field.
          type: string
        type:
          description: Name of reference entity type.
          type: string
      type: object
    RefreshAccessTokenRequest:
      description: RefreshAccessTokenRequest currently includes no fields.
      properties: {}
      type: object
    RefreshAccessTokenResponse:
      description: RefreshAccessTokenResponse includes the returned access token and its associated credentials.
      properties:
        accessCredentials:
          $ref: "#/components/schemas/AccessCredentials"
      type: object
    ResultMetadata:
      description: Result Metadata message contains metadata about the result returned after executing an Action.
      properties:
        dataType:
          description: The data type of the metadata field
          enum:
            - DATA_TYPE_UNSPECIFIED
            - INT
            - SMALLINT
            - DOUBLE
            - DATE
            - DATETIME
            - TIME
            - STRING
            - LONG
            - BOOLEAN
            - DECIMAL
            - UUID
            - BLOB
            - BIT
            - TINYINT
            - INTEGER
            - BIGINT
            - FLOAT
            - REAL
            - NUMERIC
            - CHAR
            - VARCHAR
            - LONGVARCHAR
            - TIMESTAMP
            - NCHAR
            - NVARCHAR
            - LONGNVARCHAR
            - "NULL"
            - OTHER
            - JAVA_OBJECT
            - DISTINCT
            - STRUCT
            - ARRAY
            - CLOB
            - REF
            - DATALINK
            - ROWID
            - BINARY
            - VARBINARY
            - LONGVARBINARY
            - NCLOB
            - SQLXML
            - REF_CURSOR
            - TIME_WITH_TIMEZONE
            - TIMESTAMP_WITH_TIMEZONE
          type: string
          x-enumDeprecated:
            - false
            - true
            - false
            - false
            - false
            - true
            - false
            - true
            - true
            - false
            - false
            - true
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
            - false
        description:
          description: A brief description of the metadata field.
          type: string
        jsonSchema:
          $ref: "#/components/schemas/JsonSchema"
          description: JsonSchema of the result, applicable only if parameter is of type `STRUCT`
        name:
          description: Name of the metadata field.
          type: string
      type: object
    Schedule:
      description: Configure the schedule.
      properties:
        day:
          description: Allows to define schedule that runs specified day of the week.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        duration:
          description: Output only. Duration of the time window, set by service producer.
          format: google-duration
          type: string
        startTime:
          $ref: "#/components/schemas/TimeOfDay"
          description: Time within the window to start the operations.
      type: object
    SloEligibility:
      description: "SloEligibility is a tuple containing eligibility value: true if an instance is eligible for SLO calculation or false if it should be excluded from all SLO-related calculations along with a user-defined reason."
      properties:
        eligible:
          description: Whether an instance is eligible or ineligible.
          type: boolean
        reason:
          description: User-defined reason for the current value of instance eligibility. Usually, this can be directly mapped to the internal state. An empty reason is allowed.
          type: string
      type: object
    SloMetadata:
      description: SloMetadata contains resources required for proper SLO classification of the instance.
      properties:
        nodes:
          description: Optional. List of nodes. Some producers need to use per-node metadata to calculate SLO. This field allows such producers to publish per-node SLO meta data, which will be consumed by SSA Eligibility Exporter and published in the form of per node metric to Monarch.
          items:
            $ref: "#/components/schemas/NodeSloMetadata"
          type: array
        perSliEligibility:
          $ref: "#/components/schemas/PerSliSloEligibility"
          description: Optional. Multiple per-instance SLI eligibilities which apply for individual SLIs.
        tier:
          description: Name of the SLO tier the Instance belongs to. This name will be expected to match the tiers specified in the service SLO configuration. Field is mandatory and must not be empty.
          type: string
      type: object
    TimeOfDay:
      description: Represents a time of day. The date and time zone are either not significant or are specified elsewhere. An API may choose to allow leap seconds. Related types are google.type.Date and `google.protobuf.Timestamp`.
      properties:
        hours:
          description: Hours of day in 24 hour format. Should be from 0 to 23. An API may choose to allow the value "24:00:00" for scenarios like business closing time.
          format: int32
          type: integer
        minutes:
          description: Minutes of hour of day. Must be from 0 to 59.
          format: int32
          type: integer
        nanos:
          description: Fractions of seconds in nanoseconds. Must be from 0 to 999,999,999.
          format: int32
          type: integer
        seconds:
          description: Seconds of minutes of the time. Must normally be from 0 to 59. An API may allow the value 60 if it allows leap-seconds.
          format: int32
          type: integer
      type: object
    UpdateEntitiesWithConditionsResponse:
      description: Response message for EntityService.UpdateEntitiesWithConditions
      properties:
        response:
          additionalProperties:
            description: Properties of the object.
          description: Response returned by the external system.
          type: object
      type: object
    UpdatePolicy:
      description: Maintenance policy applicable to instance updates.
      properties:
        channel:
          description: Optional. Relative scheduling channel applied to resource.
          enum:
            - UPDATE_CHANNEL_UNSPECIFIED
            - EARLIER
            - LATER
            - WEEK1
            - WEEK2
            - WEEK5
          type: string
        denyMaintenancePeriods:
          description: Deny Maintenance Period that is applied to resource to indicate when maintenance is forbidden. The protocol supports zero-to-many such periods, but the current SLM Rollout implementation only supports zero-to-one.
          items:
            $ref: "#/components/schemas/DenyMaintenancePeriod"
          type: array
        window:
          $ref: "#/components/schemas/MaintenanceWindow"
          description: Optional. Maintenance window that is applied to resources covered by this policy.
      type: object
    WeeklyCycle:
      description: Time window specified for weekly operations.
      properties:
        schedule:
          description: User can specify multiple windows in a week. Minimum of 1 window.
          items:
            $ref: "#/components/schemas/Schedule"
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
