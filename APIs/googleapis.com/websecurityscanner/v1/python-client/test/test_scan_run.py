# coding: utf-8

"""
    Web Security Scanner API

    Scans your Compute and App Engine apps for common web vulnerabilities.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.scan_run import ScanRun

class TestScanRun(unittest.TestCase):
    """ScanRun unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScanRun:
        """Test ScanRun
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScanRun`
        """
        model = ScanRun()
        if include_optional:
            return ScanRun(
                end_time = '',
                error_trace = openapi_client.models.scan_run_error_trace.ScanRunErrorTrace(
                    code = 'CODE_UNSPECIFIED', 
                    most_common_http_error_code = 56, 
                    scan_config_error = openapi_client.models.scan_config_error.ScanConfigError(
                        code = 'CODE_UNSPECIFIED', 
                        field_name = '', ), ),
                execution_state = 'EXECUTION_STATE_UNSPECIFIED',
                has_vulnerabilities = True,
                name = '',
                progress_percent = 56,
                result_state = 'RESULT_STATE_UNSPECIFIED',
                start_time = '',
                urls_crawled_count = '',
                urls_tested_count = '',
                warning_traces = [
                    openapi_client.models.scan_run_warning_trace.ScanRunWarningTrace(
                        code = 'CODE_UNSPECIFIED', )
                    ]
            )
        else:
            return ScanRun(
        )
        """

    def testScanRun(self):
        """Test ScanRun"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
