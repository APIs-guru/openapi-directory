# coding: utf-8

"""
    Google Cloud Memorystore for Redis API

    Creates and manages Redis instances on the Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_clusters_response import ListClustersResponse

class TestListClustersResponse(unittest.TestCase):
    """ListClustersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListClustersResponse:
        """Test ListClustersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListClustersResponse`
        """
        model = ListClustersResponse()
        if include_optional:
            return ListClustersResponse(
                clusters = [
                    openapi_client.models.cluster.Cluster(
                        authorization_mode = 'AUTH_MODE_UNSPECIFIED', 
                        create_time = '', 
                        discovery_endpoints = [
                            openapi_client.models.discovery_endpoint.DiscoveryEndpoint(
                                address = '', 
                                port = 56, 
                                psc_config = openapi_client.models.psc_config.PscConfig(
                                    network = '', ), )
                            ], 
                        name = '', 
                        psc_configs = [
                            openapi_client.models.psc_config.PscConfig(
                                network = '', )
                            ], 
                        psc_connections = [
                            openapi_client.models.psc_connection.PscConnection(
                                address = '', 
                                forwarding_rule = '', 
                                network = '', 
                                project_id = '', 
                                psc_connection_id = '', )
                            ], 
                        replica_count = 56, 
                        shard_count = 56, 
                        size_gb = 56, 
                        state = 'STATE_UNSPECIFIED', 
                        state_info = openapi_client.models.state_info.StateInfo(
                            update_info = openapi_client.models.update_info.UpdateInfo(
                                target_replica_count = 56, 
                                target_shard_count = 56, ), ), 
                        transit_encryption_mode = 'TRANSIT_ENCRYPTION_MODE_UNSPECIFIED', 
                        uid = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListClustersResponse(
        )
        """

    def testListClustersResponse(self):
        """Test ListClustersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
