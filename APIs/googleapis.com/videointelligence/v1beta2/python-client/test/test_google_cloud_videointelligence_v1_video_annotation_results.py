# coding: utf-8

"""
    Cloud Video Intelligence API

    Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_videointelligence_v1_video_annotation_results import GoogleCloudVideointelligenceV1VideoAnnotationResults

class TestGoogleCloudVideointelligenceV1VideoAnnotationResults(unittest.TestCase):
    """GoogleCloudVideointelligenceV1VideoAnnotationResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVideointelligenceV1VideoAnnotationResults:
        """Test GoogleCloudVideointelligenceV1VideoAnnotationResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVideointelligenceV1VideoAnnotationResults`
        """
        model = GoogleCloudVideointelligenceV1VideoAnnotationResults()
        if include_optional:
            return GoogleCloudVideointelligenceV1VideoAnnotationResults(
                error = openapi_client.models.google_rpc_status.GoogleRpc_Status(
                    code = 56, 
                    details = [
                        {
                            'key' : null
                            }
                        ], 
                    message = '', ),
                explicit_annotation = openapi_client.models.google_cloud_videointelligence_v1_explicit_content_annotation.GoogleCloudVideointelligenceV1_ExplicitContentAnnotation(
                    frames = [
                        openapi_client.models.google_cloud_videointelligence_v1_explicit_content_frame.GoogleCloudVideointelligenceV1_ExplicitContentFrame(
                            pornography_likelihood = 'LIKELIHOOD_UNSPECIFIED', 
                            time_offset = '', )
                        ], 
                    version = '', ),
                face_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_face_annotation.GoogleCloudVideointelligenceV1_FaceAnnotation(
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_face_frame.GoogleCloudVideointelligenceV1_FaceFrame(
                                normalized_bounding_boxes = [
                                    openapi_client.models.google_cloud_videointelligence_v1_normalized_bounding_box.GoogleCloudVideointelligenceV1_NormalizedBoundingBox(
                                        bottom = 1.337, 
                                        left = 1.337, 
                                        right = 1.337, 
                                        top = 1.337, )
                                    ], 
                                time_offset = '', )
                            ], 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_face_segment.GoogleCloudVideointelligenceV1_FaceSegment(
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        thumbnail = 'YQ==', )
                    ],
                face_detection_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_face_detection_annotation.GoogleCloudVideointelligenceV1_FaceDetectionAnnotation(
                        thumbnail = 'YQ==', 
                        tracks = [
                            openapi_client.models.google_cloud_videointelligence_v1_track.GoogleCloudVideointelligenceV1_Track(
                                attributes = [
                                    openapi_client.models.google_cloud_videointelligence_v1_detected_attribute.GoogleCloudVideointelligenceV1_DetectedAttribute(
                                        confidence = 1.337, 
                                        name = '', 
                                        value = '', )
                                    ], 
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), 
                                timestamped_objects = [
                                    openapi_client.models.google_cloud_videointelligence_v1_timestamped_object.GoogleCloudVideointelligenceV1_TimestampedObject(
                                        landmarks = [
                                            openapi_client.models.google_cloud_videointelligence_v1_detected_landmark.GoogleCloudVideointelligenceV1_DetectedLandmark(
                                                confidence = 1.337, 
                                                name = '', 
                                                point = openapi_client.models.google_cloud_videointelligence_v1_normalized_vertex.GoogleCloudVideointelligenceV1_NormalizedVertex(
                                                    x = 1.337, 
                                                    y = 1.337, ), )
                                            ], 
                                        normalized_bounding_box = openapi_client.models.google_cloud_videointelligence_v1_normalized_bounding_box.GoogleCloudVideointelligenceV1_NormalizedBoundingBox(
                                            bottom = 1.337, 
                                            left = 1.337, 
                                            right = 1.337, 
                                            top = 1.337, ), 
                                        time_offset = '', )
                                    ], )
                            ], 
                        version = '', )
                    ],
                frame_label_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_label_annotation.GoogleCloudVideointelligenceV1_LabelAnnotation(
                        category_entities = [
                            openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                                description = '', 
                                entity_id = '', 
                                language_code = '', )
                            ], 
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_frame.GoogleCloudVideointelligenceV1_LabelFrame(
                                confidence = 1.337, 
                                time_offset = '', )
                            ], 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_segment.GoogleCloudVideointelligenceV1_LabelSegment(
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        version = '', )
                    ],
                input_uri = '',
                logo_recognition_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_logo_recognition_annotation.GoogleCloudVideointelligenceV1_LogoRecognitionAnnotation(
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                end_time_offset = '', 
                                start_time_offset = '', )
                            ], 
                        tracks = [
                            openapi_client.models.google_cloud_videointelligence_v1_track.GoogleCloudVideointelligenceV1_Track(
                                attributes = [
                                    openapi_client.models.google_cloud_videointelligence_v1_detected_attribute.GoogleCloudVideointelligenceV1_DetectedAttribute(
                                        confidence = 1.337, 
                                        name = '', 
                                        value = '', )
                                    ], 
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), 
                                timestamped_objects = [
                                    openapi_client.models.google_cloud_videointelligence_v1_timestamped_object.GoogleCloudVideointelligenceV1_TimestampedObject(
                                        landmarks = [
                                            openapi_client.models.google_cloud_videointelligence_v1_detected_landmark.GoogleCloudVideointelligenceV1_DetectedLandmark(
                                                confidence = 1.337, 
                                                name = '', 
                                                point = openapi_client.models.google_cloud_videointelligence_v1_normalized_vertex.GoogleCloudVideointelligenceV1_NormalizedVertex(
                                                    x = 1.337, 
                                                    y = 1.337, ), )
                                            ], 
                                        normalized_bounding_box = openapi_client.models.google_cloud_videointelligence_v1_normalized_bounding_box.GoogleCloudVideointelligenceV1_NormalizedBoundingBox(
                                            bottom = 1.337, 
                                            left = 1.337, 
                                            right = 1.337, 
                                            top = 1.337, ), 
                                        time_offset = '', )
                                    ], )
                            ], )
                    ],
                object_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_object_tracking_annotation.GoogleCloudVideointelligenceV1_ObjectTrackingAnnotation(
                        confidence = 1.337, 
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_object_tracking_frame.GoogleCloudVideointelligenceV1_ObjectTrackingFrame(
                                normalized_bounding_box = openapi_client.models.google_cloud_videointelligence_v1_normalized_bounding_box.GoogleCloudVideointelligenceV1_NormalizedBoundingBox(
                                    bottom = 1.337, 
                                    left = 1.337, 
                                    right = 1.337, 
                                    top = 1.337, ), 
                                time_offset = '', )
                            ], 
                        segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                            end_time_offset = '', 
                            start_time_offset = '', ), 
                        track_id = '', 
                        version = '', )
                    ],
                person_detection_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_person_detection_annotation.GoogleCloudVideointelligenceV1_PersonDetectionAnnotation(
                        tracks = [
                            openapi_client.models.google_cloud_videointelligence_v1_track.GoogleCloudVideointelligenceV1_Track(
                                attributes = [
                                    openapi_client.models.google_cloud_videointelligence_v1_detected_attribute.GoogleCloudVideointelligenceV1_DetectedAttribute(
                                        confidence = 1.337, 
                                        name = '', 
                                        value = '', )
                                    ], 
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), 
                                timestamped_objects = [
                                    openapi_client.models.google_cloud_videointelligence_v1_timestamped_object.GoogleCloudVideointelligenceV1_TimestampedObject(
                                        landmarks = [
                                            openapi_client.models.google_cloud_videointelligence_v1_detected_landmark.GoogleCloudVideointelligenceV1_DetectedLandmark(
                                                confidence = 1.337, 
                                                name = '', 
                                                point = openapi_client.models.google_cloud_videointelligence_v1_normalized_vertex.GoogleCloudVideointelligenceV1_NormalizedVertex(
                                                    x = 1.337, 
                                                    y = 1.337, ), )
                                            ], 
                                        normalized_bounding_box = openapi_client.models.google_cloud_videointelligence_v1_normalized_bounding_box.GoogleCloudVideointelligenceV1_NormalizedBoundingBox(
                                            bottom = 1.337, 
                                            left = 1.337, 
                                            right = 1.337, 
                                            top = 1.337, ), 
                                        time_offset = '', )
                                    ], )
                            ], 
                        version = '', )
                    ],
                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                    end_time_offset = '', 
                    start_time_offset = '', ),
                segment_label_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_label_annotation.GoogleCloudVideointelligenceV1_LabelAnnotation(
                        category_entities = [
                            openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                                description = '', 
                                entity_id = '', 
                                language_code = '', )
                            ], 
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_frame.GoogleCloudVideointelligenceV1_LabelFrame(
                                confidence = 1.337, 
                                time_offset = '', )
                            ], 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_segment.GoogleCloudVideointelligenceV1_LabelSegment(
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        version = '', )
                    ],
                segment_presence_label_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_label_annotation.GoogleCloudVideointelligenceV1_LabelAnnotation(
                        category_entities = [
                            openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                                description = '', 
                                entity_id = '', 
                                language_code = '', )
                            ], 
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_frame.GoogleCloudVideointelligenceV1_LabelFrame(
                                confidence = 1.337, 
                                time_offset = '', )
                            ], 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_segment.GoogleCloudVideointelligenceV1_LabelSegment(
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        version = '', )
                    ],
                shot_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                        end_time_offset = '', 
                        start_time_offset = '', )
                    ],
                shot_label_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_label_annotation.GoogleCloudVideointelligenceV1_LabelAnnotation(
                        category_entities = [
                            openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                                description = '', 
                                entity_id = '', 
                                language_code = '', )
                            ], 
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_frame.GoogleCloudVideointelligenceV1_LabelFrame(
                                confidence = 1.337, 
                                time_offset = '', )
                            ], 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_segment.GoogleCloudVideointelligenceV1_LabelSegment(
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        version = '', )
                    ],
                shot_presence_label_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_label_annotation.GoogleCloudVideointelligenceV1_LabelAnnotation(
                        category_entities = [
                            openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                                description = '', 
                                entity_id = '', 
                                language_code = '', )
                            ], 
                        entity = openapi_client.models.google_cloud_videointelligence_v1_entity.GoogleCloudVideointelligenceV1_Entity(
                            description = '', 
                            entity_id = '', 
                            language_code = '', ), 
                        frames = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_frame.GoogleCloudVideointelligenceV1_LabelFrame(
                                confidence = 1.337, 
                                time_offset = '', )
                            ], 
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_label_segment.GoogleCloudVideointelligenceV1_LabelSegment(
                                confidence = 1.337, 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        version = '', )
                    ],
                speech_transcriptions = [
                    openapi_client.models.google_cloud_videointelligence_v1_speech_transcription.GoogleCloudVideointelligenceV1_SpeechTranscription(
                        alternatives = [
                            openapi_client.models.google_cloud_videointelligence_v1_speech_recognition_alternative.GoogleCloudVideointelligenceV1_SpeechRecognitionAlternative(
                                confidence = 1.337, 
                                transcript = '', 
                                words = [
                                    openapi_client.models.google_cloud_videointelligence_v1_word_info.GoogleCloudVideointelligenceV1_WordInfo(
                                        confidence = 1.337, 
                                        end_time = '', 
                                        speaker_tag = 56, 
                                        start_time = '', 
                                        word = '', )
                                    ], )
                            ], 
                        language_code = '', )
                    ],
                text_annotations = [
                    openapi_client.models.google_cloud_videointelligence_v1_text_annotation.GoogleCloudVideointelligenceV1_TextAnnotation(
                        segments = [
                            openapi_client.models.google_cloud_videointelligence_v1_text_segment.GoogleCloudVideointelligenceV1_TextSegment(
                                confidence = 1.337, 
                                frames = [
                                    openapi_client.models.google_cloud_videointelligence_v1_text_frame.GoogleCloudVideointelligenceV1_TextFrame(
                                        rotated_bounding_box = openapi_client.models.google_cloud_videointelligence_v1_normalized_bounding_poly.GoogleCloudVideointelligenceV1_NormalizedBoundingPoly(
                                            vertices = [
                                                openapi_client.models.google_cloud_videointelligence_v1_normalized_vertex.GoogleCloudVideointelligenceV1_NormalizedVertex(
                                                    x = 1.337, 
                                                    y = 1.337, )
                                                ], ), 
                                        time_offset = '', )
                                    ], 
                                segment = openapi_client.models.google_cloud_videointelligence_v1_video_segment.GoogleCloudVideointelligenceV1_VideoSegment(
                                    end_time_offset = '', 
                                    start_time_offset = '', ), )
                            ], 
                        text = '', 
                        version = '', )
                    ]
            )
        else:
            return GoogleCloudVideointelligenceV1VideoAnnotationResults(
        )
        """

    def testGoogleCloudVideointelligenceV1VideoAnnotationResults(self):
        """Test GoogleCloudVideointelligenceV1VideoAnnotationResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
