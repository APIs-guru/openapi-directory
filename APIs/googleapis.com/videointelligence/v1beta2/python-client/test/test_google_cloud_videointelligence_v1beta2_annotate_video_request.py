# coding: utf-8

"""
    Cloud Video Intelligence API

    Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.

    The version of the OpenAPI document: v1beta2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_videointelligence_v1beta2_annotate_video_request import GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest

class TestGoogleCloudVideointelligenceV1beta2AnnotateVideoRequest(unittest.TestCase):
    """GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest:
        """Test GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest`
        """
        model = GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest()
        if include_optional:
            return GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest(
                features = [
                    'FEATURE_UNSPECIFIED'
                    ],
                input_content = 'YQ==',
                input_uri = '',
                location_id = '',
                output_uri = '',
                video_context = openapi_client.models.google_cloud_videointelligence_v1beta2_video_context.GoogleCloudVideointelligenceV1beta2_VideoContext(
                    explicit_content_detection_config = openapi_client.models.google_cloud_videointelligence_v1beta2_explicit_content_detection_config.GoogleCloudVideointelligenceV1beta2_ExplicitContentDetectionConfig(
                        model = '', ), 
                    face_detection_config = openapi_client.models.google_cloud_videointelligence_v1beta2_face_detection_config.GoogleCloudVideointelligenceV1beta2_FaceDetectionConfig(
                        include_attributes = True, 
                        include_bounding_boxes = True, 
                        model = '', ), 
                    label_detection_config = openapi_client.models.google_cloud_videointelligence_v1beta2_label_detection_config.GoogleCloudVideointelligenceV1beta2_LabelDetectionConfig(
                        frame_confidence_threshold = 1.337, 
                        label_detection_mode = 'LABEL_DETECTION_MODE_UNSPECIFIED', 
                        model = '', 
                        stationary_camera = True, 
                        video_confidence_threshold = 1.337, ), 
                    object_tracking_config = openapi_client.models.google_cloud_videointelligence_v1beta2_object_tracking_config.GoogleCloudVideointelligenceV1beta2_ObjectTrackingConfig(
                        model = '', ), 
                    person_detection_config = openapi_client.models.google_cloud_videointelligence_v1beta2_person_detection_config.GoogleCloudVideointelligenceV1beta2_PersonDetectionConfig(
                        include_attributes = True, 
                        include_bounding_boxes = True, 
                        include_pose_landmarks = True, ), 
                    segments = [
                        openapi_client.models.google_cloud_videointelligence_v1beta2_video_segment.GoogleCloudVideointelligenceV1beta2_VideoSegment(
                            end_time_offset = '', 
                            start_time_offset = '', )
                        ], 
                    shot_change_detection_config = openapi_client.models.google_cloud_videointelligence_v1beta2_shot_change_detection_config.GoogleCloudVideointelligenceV1beta2_ShotChangeDetectionConfig(
                        model = '', ), 
                    speech_transcription_config = openapi_client.models.google_cloud_videointelligence_v1beta2_speech_transcription_config.GoogleCloudVideointelligenceV1beta2_SpeechTranscriptionConfig(
                        audio_tracks = [
                            56
                            ], 
                        diarization_speaker_count = 56, 
                        enable_automatic_punctuation = True, 
                        enable_speaker_diarization = True, 
                        enable_word_confidence = True, 
                        filter_profanity = True, 
                        language_code = '', 
                        max_alternatives = 56, 
                        speech_contexts = [
                            openapi_client.models.google_cloud_videointelligence_v1beta2_speech_context.GoogleCloudVideointelligenceV1beta2_SpeechContext(
                                phrases = [
                                    ''
                                    ], )
                            ], ), 
                    text_detection_config = openapi_client.models.google_cloud_videointelligence_v1beta2_text_detection_config.GoogleCloudVideointelligenceV1beta2_TextDetectionConfig(
                        language_hints = [
                            ''
                            ], 
                        model = '', ), )
            )
        else:
            return GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest(
        )
        """

    def testGoogleCloudVideointelligenceV1beta2AnnotateVideoRequest(self):
        """Test GoogleCloudVideointelligenceV1beta2AnnotateVideoRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
