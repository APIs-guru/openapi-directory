# coding: utf-8

"""
    Cloud Video Intelligence API

    Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.

    The version of the OpenAPI document: v1p3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_videointelligence_v1p3beta1_speech_transcription_config import GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig

class TestGoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig(unittest.TestCase):
    """GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig:
        """Test GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig`
        """
        model = GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig()
        if include_optional:
            return GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig(
                audio_tracks = [
                    56
                    ],
                diarization_speaker_count = 56,
                enable_automatic_punctuation = True,
                enable_speaker_diarization = True,
                enable_word_confidence = True,
                filter_profanity = True,
                language_code = '',
                max_alternatives = 56,
                speech_contexts = [
                    openapi_client.models.google_cloud_videointelligence_v1p3beta1_speech_context.GoogleCloudVideointelligenceV1p3beta1_SpeechContext(
                        phrases = [
                            ''
                            ], )
                    ]
            )
        else:
            return GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig(
        )
        """

    def testGoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig(self):
        """Test GoogleCloudVideointelligenceV1p3beta1SpeechTranscriptionConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
