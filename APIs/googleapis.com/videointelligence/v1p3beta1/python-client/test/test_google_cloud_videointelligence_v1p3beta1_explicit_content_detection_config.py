# coding: utf-8

"""
    Cloud Video Intelligence API

    Detects objects, explicit content, and scene changes in videos. It also specifies the region for annotation and transcribes speech to text. Supports both asynchronous API and streaming API.

    The version of the OpenAPI document: v1p3beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_videointelligence_v1p3beta1_explicit_content_detection_config import GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig

class TestGoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig(unittest.TestCase):
    """GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig:
        """Test GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig`
        """
        model = GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig()
        if include_optional:
            return GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig(
                model = ''
            )
        else:
            return GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig(
        )
        """

    def testGoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig(self):
        """Test GoogleCloudVideointelligenceV1p3beta1ExplicitContentDetectionConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
