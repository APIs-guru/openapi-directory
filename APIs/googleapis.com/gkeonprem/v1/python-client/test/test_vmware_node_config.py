# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vmware_node_config import VmwareNodeConfig

class TestVmwareNodeConfig(unittest.TestCase):
    """VmwareNodeConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VmwareNodeConfig:
        """Test VmwareNodeConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VmwareNodeConfig`
        """
        model = VmwareNodeConfig()
        if include_optional:
            return VmwareNodeConfig(
                boot_disk_size_gb = '',
                cpus = '',
                enable_load_balancer = True,
                image = '',
                image_type = '',
                labels = {
                    'key' : ''
                    },
                memory_mb = '',
                replicas = '',
                taints = [
                    openapi_client.models.node_taint.NodeTaint(
                        effect = 'EFFECT_UNSPECIFIED', 
                        key = '', 
                        value = '', )
                    ],
                vsphere_config = openapi_client.models.vmware_vsphere_config.VmwareVsphereConfig(
                    datastore = '', 
                    host_groups = [
                        ''
                        ], 
                    tags = [
                        openapi_client.models.vmware_vsphere_tag.VmwareVsphereTag(
                            category = '', 
                            tag = '', )
                        ], )
            )
        else:
            return VmwareNodeConfig(
        )
        """

    def testVmwareNodeConfig(self):
        """Test VmwareNodeConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
