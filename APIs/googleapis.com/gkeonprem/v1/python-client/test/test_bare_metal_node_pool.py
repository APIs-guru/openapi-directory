# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bare_metal_node_pool import BareMetalNodePool

class TestBareMetalNodePool(unittest.TestCase):
    """BareMetalNodePool unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BareMetalNodePool:
        """Test BareMetalNodePool
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BareMetalNodePool`
        """
        model = BareMetalNodePool()
        if include_optional:
            return BareMetalNodePool(
                annotations = {
                    'key' : ''
                    },
                create_time = '',
                delete_time = '',
                display_name = '',
                etag = '',
                name = '',
                node_pool_config = openapi_client.models.bare_metal_node_pool_config.BareMetalNodePoolConfig(
                    kubelet_config = openapi_client.models.bare_metal_kubelet_config.BareMetalKubeletConfig(
                        registry_burst = 56, 
                        registry_pull_qps = 56, 
                        serialize_image_pulls_disabled = True, ), 
                    labels = {
                        'key' : ''
                        }, 
                    node_configs = [
                        openapi_client.models.bare_metal_node_config.BareMetalNodeConfig(
                            node_ip = '', )
                        ], 
                    operating_system = 'OPERATING_SYSTEM_UNSPECIFIED', 
                    taints = [
                        openapi_client.models.node_taint.NodeTaint(
                            effect = 'EFFECT_UNSPECIFIED', 
                            key = '', 
                            value = '', )
                        ], ),
                reconciling = True,
                state = 'STATE_UNSPECIFIED',
                status = openapi_client.models.resource_status.ResourceStatus(
                    conditions = [
                        openapi_client.models.resource_condition.ResourceCondition(
                            last_transition_time = '', 
                            message = '', 
                            reason = '', 
                            state = 'STATE_UNSPECIFIED', 
                            type = '', )
                        ], 
                    error_message = '', ),
                uid = '',
                update_time = '',
                upgrade_policy = openapi_client.models.bare_metal_node_pool_upgrade_policy.BareMetalNodePoolUpgradePolicy(
                    parallel_upgrade_config = openapi_client.models.bare_metal_parallel_upgrade_config.BareMetalParallelUpgradeConfig(
                        concurrent_nodes = 56, 
                        minimum_available_nodes = 56, ), )
            )
        else:
            return BareMetalNodePool(
        )
        """

    def testBareMetalNodePool(self):
        """Test BareMetalNodePool"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
