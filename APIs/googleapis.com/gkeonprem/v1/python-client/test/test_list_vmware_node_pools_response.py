# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_vmware_node_pools_response import ListVmwareNodePoolsResponse

class TestListVmwareNodePoolsResponse(unittest.TestCase):
    """ListVmwareNodePoolsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListVmwareNodePoolsResponse:
        """Test ListVmwareNodePoolsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListVmwareNodePoolsResponse`
        """
        model = ListVmwareNodePoolsResponse()
        if include_optional:
            return ListVmwareNodePoolsResponse(
                next_page_token = '',
                unreachable = [
                    ''
                    ],
                vmware_node_pools = [
                    openapi_client.models.vmware_node_pool.VmwareNodePool(
                        annotations = {
                            'key' : ''
                            }, 
                        config = openapi_client.models.vmware_node_config.VmwareNodeConfig(
                            boot_disk_size_gb = '', 
                            cpus = '', 
                            enable_load_balancer = True, 
                            image = '', 
                            image_type = '', 
                            labels = {
                                'key' : ''
                                }, 
                            memory_mb = '', 
                            replicas = '', 
                            taints = [
                                openapi_client.models.node_taint.NodeTaint(
                                    effect = 'EFFECT_UNSPECIFIED', 
                                    key = '', 
                                    value = '', )
                                ], 
                            vsphere_config = openapi_client.models.vmware_vsphere_config.VmwareVsphereConfig(
                                datastore = '', 
                                host_groups = [
                                    ''
                                    ], 
                                tags = [
                                    openapi_client.models.vmware_vsphere_tag.VmwareVsphereTag(
                                        category = '', 
                                        tag = '', )
                                    ], ), ), 
                        create_time = '', 
                        delete_time = '', 
                        display_name = '', 
                        etag = '', 
                        name = '', 
                        node_pool_autoscaling = openapi_client.models.vmware_node_pool_autoscaling_config.VmwareNodePoolAutoscalingConfig(
                            max_replicas = 56, 
                            min_replicas = 56, ), 
                        on_prem_version = '', 
                        reconciling = True, 
                        state = 'STATE_UNSPECIFIED', 
                        status = openapi_client.models.resource_status.ResourceStatus(
                            conditions = [
                                openapi_client.models.resource_condition.ResourceCondition(
                                    last_transition_time = '', 
                                    message = '', 
                                    reason = '', 
                                    state = 'STATE_UNSPECIFIED', 
                                    type = '', )
                                ], 
                            error_message = '', ), 
                        uid = '', 
                        update_time = '', )
                    ]
            )
        else:
            return ListVmwareNodePoolsResponse(
        )
        """

    def testListVmwareNodePoolsResponse(self):
        """Test ListVmwareNodePoolsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
