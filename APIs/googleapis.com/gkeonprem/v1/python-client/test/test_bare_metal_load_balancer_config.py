# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bare_metal_load_balancer_config import BareMetalLoadBalancerConfig

class TestBareMetalLoadBalancerConfig(unittest.TestCase):
    """BareMetalLoadBalancerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BareMetalLoadBalancerConfig:
        """Test BareMetalLoadBalancerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BareMetalLoadBalancerConfig`
        """
        model = BareMetalLoadBalancerConfig()
        if include_optional:
            return BareMetalLoadBalancerConfig(
                bgp_lb_config = openapi_client.models.bare_metal_bgp_lb_config.BareMetalBgpLbConfig(
                    address_pools = [
                        openapi_client.models.bare_metal_load_balancer_address_pool.BareMetalLoadBalancerAddressPool(
                            addresses = [
                                ''
                                ], 
                            avoid_buggy_ips = True, 
                            manual_assign = True, 
                            pool = '', )
                        ], 
                    asn = '', 
                    bgp_peer_configs = [
                        openapi_client.models.bare_metal_bgp_peer_config.BareMetalBgpPeerConfig(
                            asn = '', 
                            control_plane_nodes = [
                                ''
                                ], 
                            ip_address = '', )
                        ], 
                    load_balancer_node_pool_config = openapi_client.models.bare_metal_load_balancer_node_pool_config.BareMetalLoadBalancerNodePoolConfig(
                        node_pool_config = openapi_client.models.bare_metal_node_pool_config.BareMetalNodePoolConfig(
                            kubelet_config = openapi_client.models.bare_metal_kubelet_config.BareMetalKubeletConfig(
                                registry_burst = 56, 
                                registry_pull_qps = 56, 
                                serialize_image_pulls_disabled = True, ), 
                            labels = {
                                'key' : ''
                                }, 
                            node_configs = [
                                openapi_client.models.bare_metal_node_config.BareMetalNodeConfig(
                                    node_ip = '', )
                                ], 
                            operating_system = 'OPERATING_SYSTEM_UNSPECIFIED', 
                            taints = [
                                openapi_client.models.node_taint.NodeTaint(
                                    effect = 'EFFECT_UNSPECIFIED', 
                                    key = '', 
                                    value = '', )
                                ], ), ), ),
                manual_lb_config = openapi_client.models.bare_metal_manual_lb_config.BareMetalManualLbConfig(
                    enabled = True, ),
                metal_lb_config = openapi_client.models.bare_metal_metal_lb_config.BareMetalMetalLbConfig(
                    address_pools = [
                        openapi_client.models.bare_metal_load_balancer_address_pool.BareMetalLoadBalancerAddressPool(
                            addresses = [
                                ''
                                ], 
                            avoid_buggy_ips = True, 
                            manual_assign = True, 
                            pool = '', )
                        ], 
                    load_balancer_node_pool_config = openapi_client.models.bare_metal_load_balancer_node_pool_config.BareMetalLoadBalancerNodePoolConfig(
                        node_pool_config = openapi_client.models.bare_metal_node_pool_config.BareMetalNodePoolConfig(
                            kubelet_config = openapi_client.models.bare_metal_kubelet_config.BareMetalKubeletConfig(
                                registry_burst = 56, 
                                registry_pull_qps = 56, 
                                serialize_image_pulls_disabled = True, ), 
                            labels = {
                                'key' : ''
                                }, 
                            node_configs = [
                                openapi_client.models.bare_metal_node_config.BareMetalNodeConfig(
                                    node_ip = '', )
                                ], 
                            operating_system = 'OPERATING_SYSTEM_UNSPECIFIED', 
                            taints = [
                                openapi_client.models.node_taint.NodeTaint(
                                    effect = 'EFFECT_UNSPECIFIED', 
                                    key = '', 
                                    value = '', )
                                ], ), ), ),
                port_config = openapi_client.models.bare_metal_port_config.BareMetalPortConfig(
                    control_plane_load_balancer_port = 56, ),
                vip_config = openapi_client.models.bare_metal_vip_config.BareMetalVipConfig(
                    control_plane_vip = '', 
                    ingress_vip = '', )
            )
        else:
            return BareMetalLoadBalancerConfig(
        )
        """

    def testBareMetalLoadBalancerConfig(self):
        """Test BareMetalLoadBalancerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
