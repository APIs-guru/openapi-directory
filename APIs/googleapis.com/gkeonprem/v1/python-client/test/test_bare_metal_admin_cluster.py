# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bare_metal_admin_cluster import BareMetalAdminCluster

class TestBareMetalAdminCluster(unittest.TestCase):
    """BareMetalAdminCluster unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BareMetalAdminCluster:
        """Test BareMetalAdminCluster
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BareMetalAdminCluster`
        """
        model = BareMetalAdminCluster()
        if include_optional:
            return BareMetalAdminCluster(
                annotations = {
                    'key' : ''
                    },
                bare_metal_version = '',
                binary_authorization = openapi_client.models.binary_authorization.BinaryAuthorization(
                    evaluation_mode = 'EVALUATION_MODE_UNSPECIFIED', ),
                cluster_operations = openapi_client.models.bare_metal_admin_cluster_operations_config.BareMetalAdminClusterOperationsConfig(
                    enable_application_logs = True, ),
                control_plane = openapi_client.models.bare_metal_admin_control_plane_config.BareMetalAdminControlPlaneConfig(
                    api_server_args = [
                        openapi_client.models.bare_metal_admin_api_server_argument.BareMetalAdminApiServerArgument(
                            argument = '', 
                            value = '', )
                        ], 
                    control_plane_node_pool_config = openapi_client.models.bare_metal_admin_control_plane_node_pool_config.BareMetalAdminControlPlaneNodePoolConfig(
                        node_pool_config = openapi_client.models.bare_metal_node_pool_config.BareMetalNodePoolConfig(
                            kubelet_config = openapi_client.models.bare_metal_kubelet_config.BareMetalKubeletConfig(
                                registry_burst = 56, 
                                registry_pull_qps = 56, 
                                serialize_image_pulls_disabled = True, ), 
                            labels = {
                                'key' : ''
                                }, 
                            node_configs = [
                                openapi_client.models.bare_metal_node_config.BareMetalNodeConfig(
                                    node_ip = '', )
                                ], 
                            operating_system = 'OPERATING_SYSTEM_UNSPECIFIED', 
                            taints = [
                                openapi_client.models.node_taint.NodeTaint(
                                    effect = 'EFFECT_UNSPECIFIED', 
                                    key = '', 
                                    value = '', )
                                ], ), ), ),
                create_time = '',
                delete_time = '',
                description = '',
                endpoint = '',
                etag = '',
                fleet = openapi_client.models.fleet.Fleet(
                    membership = '', ),
                load_balancer = openapi_client.models.bare_metal_admin_load_balancer_config.BareMetalAdminLoadBalancerConfig(
                    manual_lb_config = openapi_client.models.bare_metal_admin_manual_lb_config.BareMetalAdminManualLbConfig(
                        enabled = True, ), 
                    port_config = openapi_client.models.bare_metal_admin_port_config.BareMetalAdminPortConfig(
                        control_plane_load_balancer_port = 56, ), 
                    vip_config = openapi_client.models.bare_metal_admin_vip_config.BareMetalAdminVipConfig(
                        control_plane_vip = '', ), ),
                local_name = '',
                maintenance_config = openapi_client.models.bare_metal_admin_maintenance_config.BareMetalAdminMaintenanceConfig(
                    maintenance_address_cidr_blocks = [
                        ''
                        ], ),
                maintenance_status = openapi_client.models.bare_metal_admin_maintenance_status.BareMetalAdminMaintenanceStatus(
                    machine_drain_status = openapi_client.models.bare_metal_admin_machine_drain_status.BareMetalAdminMachineDrainStatus(
                        drained_machines = [
                            openapi_client.models.bare_metal_admin_drained_machine.BareMetalAdminDrainedMachine(
                                node_ip = '', )
                            ], 
                        draining_machines = [
                            openapi_client.models.bare_metal_admin_draining_machine.BareMetalAdminDrainingMachine(
                                node_ip = '', 
                                pod_count = 56, )
                            ], ), ),
                name = '',
                network_config = openapi_client.models.bare_metal_admin_network_config.BareMetalAdminNetworkConfig(
                    island_mode_cidr = openapi_client.models.bare_metal_admin_island_mode_cidr_config.BareMetalAdminIslandModeCidrConfig(
                        pod_address_cidr_blocks = [
                            ''
                            ], 
                        service_address_cidr_blocks = [
                            ''
                            ], ), ),
                node_access_config = openapi_client.models.bare_metal_admin_node_access_config.BareMetalAdminNodeAccessConfig(
                    login_user = '', ),
                node_config = openapi_client.models.bare_metal_admin_workload_node_config.BareMetalAdminWorkloadNodeConfig(
                    max_pods_per_node = '', ),
                os_environment_config = openapi_client.models.bare_metal_admin_os_environment_config.BareMetalAdminOsEnvironmentConfig(
                    package_repo_excluded = True, ),
                proxy = openapi_client.models.bare_metal_admin_proxy_config.BareMetalAdminProxyConfig(
                    no_proxy = [
                        ''
                        ], 
                    uri = '', ),
                reconciling = True,
                security_config = openapi_client.models.bare_metal_admin_security_config.BareMetalAdminSecurityConfig(
                    authorization = openapi_client.models.authorization.Authorization(
                        admin_users = [
                            openapi_client.models.cluster_user.ClusterUser(
                                username = '', )
                            ], ), ),
                state = 'STATE_UNSPECIFIED',
                status = openapi_client.models.resource_status.ResourceStatus(
                    conditions = [
                        openapi_client.models.resource_condition.ResourceCondition(
                            last_transition_time = '', 
                            message = '', 
                            reason = '', 
                            state = 'STATE_UNSPECIFIED', 
                            type = '', )
                        ], 
                    error_message = '', ),
                storage = openapi_client.models.bare_metal_admin_storage_config.BareMetalAdminStorageConfig(
                    lvp_node_mounts_config = openapi_client.models.bare_metal_lvp_config.BareMetalLvpConfig(
                        path = '', 
                        storage_class = '', ), 
                    lvp_share_config = openapi_client.models.bare_metal_lvp_share_config.BareMetalLvpShareConfig(
                        lvp_config = openapi_client.models.bare_metal_lvp_config.BareMetalLvpConfig(
                            path = '', 
                            storage_class = '', ), 
                        shared_path_pv_count = 56, ), ),
                uid = '',
                update_time = '',
                validation_check = openapi_client.models.validation_check.ValidationCheck(
                    option = 'OPTIONS_UNSPECIFIED', 
                    scenario = 'SCENARIO_UNSPECIFIED', 
                    status = openapi_client.models.validation_check_status.ValidationCheckStatus(
                        result = [
                            openapi_client.models.validation_check_result.ValidationCheckResult(
                                category = '', 
                                description = '', 
                                details = '', 
                                reason = '', 
                                state = 'STATE_UNKNOWN', )
                            ], ), )
            )
        else:
            return BareMetalAdminCluster(
        )
        """

    def testBareMetalAdminCluster(self):
        """Test BareMetalAdminCluster"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
