# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.vmware_network_config import VmwareNetworkConfig

class TestVmwareNetworkConfig(unittest.TestCase):
    """VmwareNetworkConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VmwareNetworkConfig:
        """Test VmwareNetworkConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VmwareNetworkConfig`
        """
        model = VmwareNetworkConfig()
        if include_optional:
            return VmwareNetworkConfig(
                control_plane_v2_config = openapi_client.models.vmware_control_plane_v2_config.VmwareControlPlaneV2Config(
                    control_plane_ip_block = openapi_client.models.vmware_ip_block.VmwareIpBlock(
                        gateway = '', 
                        ips = [
                            openapi_client.models.vmware_host_ip.VmwareHostIp(
                                hostname = '', 
                                ip = '', )
                            ], 
                        netmask = '', ), ),
                dhcp_ip_config = openapi_client.models.vmware_dhcp_ip_config.VmwareDhcpIpConfig(
                    enabled = True, ),
                host_config = openapi_client.models.vmware_host_config.VmwareHostConfig(
                    dns_search_domains = [
                        ''
                        ], 
                    dns_servers = [
                        ''
                        ], 
                    ntp_servers = [
                        ''
                        ], ),
                pod_address_cidr_blocks = [
                    ''
                    ],
                service_address_cidr_blocks = [
                    ''
                    ],
                static_ip_config = openapi_client.models.vmware_static_ip_config.VmwareStaticIpConfig(
                    ip_blocks = [
                        openapi_client.models.vmware_ip_block.VmwareIpBlock(
                            gateway = '', 
                            ips = [
                                openapi_client.models.vmware_host_ip.VmwareHostIp(
                                    hostname = '', 
                                    ip = '', )
                                ], 
                            netmask = '', )
                        ], ),
                vcenter_network = ''
            )
        else:
            return VmwareNetworkConfig(
        )
        """

    def testVmwareNetworkConfig(self):
        """Test VmwareNetworkConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
