# coding: utf-8

"""
    Anthos On-Prem API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_bare_metal_clusters_response import ListBareMetalClustersResponse

class TestListBareMetalClustersResponse(unittest.TestCase):
    """ListBareMetalClustersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListBareMetalClustersResponse:
        """Test ListBareMetalClustersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListBareMetalClustersResponse`
        """
        model = ListBareMetalClustersResponse()
        if include_optional:
            return ListBareMetalClustersResponse(
                bare_metal_clusters = [
                    openapi_client.models.bare_metal_cluster.BareMetalCluster(
                        admin_cluster_membership = '', 
                        admin_cluster_name = '', 
                        annotations = {
                            'key' : ''
                            }, 
                        bare_metal_version = '', 
                        binary_authorization = openapi_client.models.binary_authorization.BinaryAuthorization(
                            evaluation_mode = 'EVALUATION_MODE_UNSPECIFIED', ), 
                        cluster_operations = openapi_client.models.bare_metal_cluster_operations_config.BareMetalClusterOperationsConfig(
                            enable_application_logs = True, ), 
                        control_plane = openapi_client.models.bare_metal_control_plane_config.BareMetalControlPlaneConfig(
                            api_server_args = [
                                openapi_client.models.bare_metal_api_server_argument.BareMetalApiServerArgument(
                                    argument = '', 
                                    value = '', )
                                ], 
                            control_plane_node_pool_config = openapi_client.models.bare_metal_control_plane_node_pool_config.BareMetalControlPlaneNodePoolConfig(
                                node_pool_config = openapi_client.models.bare_metal_node_pool_config.BareMetalNodePoolConfig(
                                    kubelet_config = openapi_client.models.bare_metal_kubelet_config.BareMetalKubeletConfig(
                                        registry_burst = 56, 
                                        registry_pull_qps = 56, 
                                        serialize_image_pulls_disabled = True, ), 
                                    labels = {
                                        'key' : ''
                                        }, 
                                    node_configs = [
                                        openapi_client.models.bare_metal_node_config.BareMetalNodeConfig(
                                            node_ip = '', )
                                        ], 
                                    operating_system = 'OPERATING_SYSTEM_UNSPECIFIED', 
                                    taints = [
                                        openapi_client.models.node_taint.NodeTaint(
                                            effect = 'EFFECT_UNSPECIFIED', 
                                            key = '', 
                                            value = '', )
                                        ], ), ), ), 
                        create_time = '', 
                        delete_time = '', 
                        description = '', 
                        endpoint = '', 
                        etag = '', 
                        fleet = openapi_client.models.fleet.Fleet(
                            membership = '', ), 
                        load_balancer = openapi_client.models.bare_metal_load_balancer_config.BareMetalLoadBalancerConfig(
                            bgp_lb_config = openapi_client.models.bare_metal_bgp_lb_config.BareMetalBgpLbConfig(
                                address_pools = [
                                    openapi_client.models.bare_metal_load_balancer_address_pool.BareMetalLoadBalancerAddressPool(
                                        addresses = [
                                            ''
                                            ], 
                                        avoid_buggy_ips = True, 
                                        manual_assign = True, 
                                        pool = '', )
                                    ], 
                                asn = '', 
                                bgp_peer_configs = [
                                    openapi_client.models.bare_metal_bgp_peer_config.BareMetalBgpPeerConfig(
                                        asn = '', 
                                        control_plane_nodes = [
                                            ''
                                            ], 
                                        ip_address = '', )
                                    ], 
                                load_balancer_node_pool_config = openapi_client.models.bare_metal_load_balancer_node_pool_config.BareMetalLoadBalancerNodePoolConfig(), ), 
                            manual_lb_config = openapi_client.models.bare_metal_manual_lb_config.BareMetalManualLbConfig(
                                enabled = True, ), 
                            metal_lb_config = openapi_client.models.bare_metal_metal_lb_config.BareMetalMetalLbConfig(), 
                            port_config = openapi_client.models.bare_metal_port_config.BareMetalPortConfig(
                                control_plane_load_balancer_port = 56, ), 
                            vip_config = openapi_client.models.bare_metal_vip_config.BareMetalVipConfig(
                                control_plane_vip = '', 
                                ingress_vip = '', ), ), 
                        local_name = '', 
                        maintenance_config = openapi_client.models.bare_metal_maintenance_config.BareMetalMaintenanceConfig(
                            maintenance_address_cidr_blocks = [
                                ''
                                ], ), 
                        maintenance_status = openapi_client.models.bare_metal_maintenance_status.BareMetalMaintenanceStatus(
                            machine_drain_status = openapi_client.models.bare_metal_machine_drain_status.BareMetalMachineDrainStatus(
                                drained_machines = [
                                    openapi_client.models.bare_metal_drained_machine.BareMetalDrainedMachine(
                                        node_ip = '', )
                                    ], 
                                draining_machines = [
                                    openapi_client.models.bare_metal_draining_machine.BareMetalDrainingMachine(
                                        node_ip = '', 
                                        pod_count = 56, )
                                    ], ), ), 
                        name = '', 
                        network_config = openapi_client.models.bare_metal_network_config.BareMetalNetworkConfig(
                            advanced_networking = True, 
                            island_mode_cidr = openapi_client.models.bare_metal_island_mode_cidr_config.BareMetalIslandModeCidrConfig(
                                pod_address_cidr_blocks = [
                                    ''
                                    ], 
                                service_address_cidr_blocks = [
                                    ''
                                    ], ), 
                            multiple_network_interfaces_config = openapi_client.models.bare_metal_multiple_network_interfaces_config.BareMetalMultipleNetworkInterfacesConfig(
                                enabled = True, ), 
                            sr_iov_config = openapi_client.models.bare_metal_sr_iov_config.BareMetalSrIovConfig(
                                enabled = True, ), ), 
                        node_access_config = openapi_client.models.bare_metal_node_access_config.BareMetalNodeAccessConfig(
                            login_user = '', ), 
                        node_config = openapi_client.models.bare_metal_workload_node_config.BareMetalWorkloadNodeConfig(
                            container_runtime = 'CONTAINER_RUNTIME_UNSPECIFIED', 
                            max_pods_per_node = '', ), 
                        os_environment_config = openapi_client.models.bare_metal_os_environment_config.BareMetalOsEnvironmentConfig(
                            package_repo_excluded = True, ), 
                        proxy = openapi_client.models.bare_metal_proxy_config.BareMetalProxyConfig(
                            no_proxy = [
                                ''
                                ], 
                            uri = '', ), 
                        reconciling = True, 
                        security_config = openapi_client.models.bare_metal_security_config.BareMetalSecurityConfig(
                            authorization = openapi_client.models.authorization.Authorization(
                                admin_users = [
                                    openapi_client.models.cluster_user.ClusterUser(
                                        username = '', )
                                    ], ), ), 
                        state = 'STATE_UNSPECIFIED', 
                        status = openapi_client.models.resource_status.ResourceStatus(
                            conditions = [
                                openapi_client.models.resource_condition.ResourceCondition(
                                    last_transition_time = '', 
                                    message = '', 
                                    reason = '', 
                                    state = 'STATE_UNSPECIFIED', 
                                    type = '', )
                                ], 
                            error_message = '', ), 
                        storage = openapi_client.models.bare_metal_storage_config.BareMetalStorageConfig(
                            lvp_node_mounts_config = openapi_client.models.bare_metal_lvp_config.BareMetalLvpConfig(
                                path = '', 
                                storage_class = '', ), 
                            lvp_share_config = openapi_client.models.bare_metal_lvp_share_config.BareMetalLvpShareConfig(
                                lvp_config = openapi_client.models.bare_metal_lvp_config.BareMetalLvpConfig(
                                    path = '', 
                                    storage_class = '', ), 
                                shared_path_pv_count = 56, ), ), 
                        uid = '', 
                        update_time = '', 
                        upgrade_policy = openapi_client.models.bare_metal_cluster_upgrade_policy.BareMetalClusterUpgradePolicy(
                            policy = 'NODE_POOL_POLICY_UNSPECIFIED', ), 
                        validation_check = openapi_client.models.validation_check.ValidationCheck(
                            option = 'OPTIONS_UNSPECIFIED', 
                            scenario = 'SCENARIO_UNSPECIFIED', ), )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListBareMetalClustersResponse(
        )
        """

    def testListBareMetalClustersResponse(self):
        """Test ListBareMetalClustersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
