# coding: utf-8

"""
    Google Play Developer Reporting API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_play_developer_reporting_v1beta1_device_model_summary import GooglePlayDeveloperReportingV1beta1DeviceModelSummary

class TestGooglePlayDeveloperReportingV1beta1DeviceModelSummary(unittest.TestCase):
    """GooglePlayDeveloperReportingV1beta1DeviceModelSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GooglePlayDeveloperReportingV1beta1DeviceModelSummary:
        """Test GooglePlayDeveloperReportingV1beta1DeviceModelSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GooglePlayDeveloperReportingV1beta1DeviceModelSummary`
        """
        model = GooglePlayDeveloperReportingV1beta1DeviceModelSummary()
        if include_optional:
            return GooglePlayDeveloperReportingV1beta1DeviceModelSummary(
                device_id = openapi_client.models.google_play_developer_reporting_v1beta1_device_id.GooglePlayDeveloperReportingV1beta1DeviceId(
                    build_brand = '', 
                    build_device = '', ),
                device_uri = '',
                marketing_name = ''
            )
        else:
            return GooglePlayDeveloperReportingV1beta1DeviceModelSummary(
        )
        """

    def testGooglePlayDeveloperReportingV1beta1DeviceModelSummary(self):
        """Test GooglePlayDeveloperReportingV1beta1DeviceModelSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
