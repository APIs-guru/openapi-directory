# coding: utf-8

"""
    Cloud Filestore API

    The Cloud Filestore API is used for creating and managing cloud file servers.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.instance import Instance

class TestInstance(unittest.TestCase):
    """Instance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Instance:
        """Test Instance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Instance`
        """
        model = Instance()
        if include_optional:
            return Instance(
                capacity_gb = '',
                capacity_step_size_gb = '',
                create_time = '',
                description = '',
                directory_services = openapi_client.models.directory_services_config.DirectoryServicesConfig(
                    managed_active_directory = openapi_client.models.managed_active_directory_config.ManagedActiveDirectoryConfig(
                        computer = '', 
                        domain = '', ), ),
                etag = '',
                file_shares = [
                    openapi_client.models.file_share_config.FileShareConfig(
                        capacity_gb = '', 
                        name = '', 
                        nfs_export_options = [
                            openapi_client.models.nfs_export_options.NfsExportOptions(
                                access_mode = 'ACCESS_MODE_UNSPECIFIED', 
                                anon_gid = '', 
                                anon_uid = '', 
                                ip_ranges = [
                                    ''
                                    ], 
                                security_flavors = [
                                    'SECURITY_FLAVOR_UNSPECIFIED'
                                    ], 
                                squash_mode = 'SQUASH_MODE_UNSPECIFIED', )
                            ], 
                        source_backup = '', )
                    ],
                kms_key_name = '',
                labels = {
                    'key' : ''
                    },
                max_capacity_gb = '',
                max_share_count = '',
                multi_share_enabled = True,
                name = '',
                networks = [
                    openapi_client.models.network_config.NetworkConfig(
                        connect_mode = 'CONNECT_MODE_UNSPECIFIED', 
                        ip_addresses = [
                            ''
                            ], 
                        modes = [
                            'ADDRESS_MODE_UNSPECIFIED'
                            ], 
                        network = '', 
                        reserved_ip_range = '', )
                    ],
                protocol = 'FILE_PROTOCOL_UNSPECIFIED',
                satisfies_pzi = True,
                satisfies_pzs = True,
                state = 'STATE_UNSPECIFIED',
                status_message = '',
                suspension_reasons = [
                    'SUSPENSION_REASON_UNSPECIFIED'
                    ],
                tier = 'TIER_UNSPECIFIED'
            )
        else:
            return Instance(
        )
        """

    def testInstance(self):
        """Test Instance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
