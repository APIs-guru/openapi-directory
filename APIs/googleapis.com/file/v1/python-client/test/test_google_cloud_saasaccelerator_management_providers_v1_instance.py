# coding: utf-8

"""
    Cloud Filestore API

    The Cloud Filestore API is used for creating and managing cloud file servers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_instance import GoogleCloudSaasacceleratorManagementProvidersV1Instance

class TestGoogleCloudSaasacceleratorManagementProvidersV1Instance(unittest.TestCase):
    """GoogleCloudSaasacceleratorManagementProvidersV1Instance unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudSaasacceleratorManagementProvidersV1Instance:
        """Test GoogleCloudSaasacceleratorManagementProvidersV1Instance
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudSaasacceleratorManagementProvidersV1Instance`
        """
        model = GoogleCloudSaasacceleratorManagementProvidersV1Instance()
        if include_optional:
            return GoogleCloudSaasacceleratorManagementProvidersV1Instance(
                consumer_defined_name = '',
                create_time = '',
                instance_type = '',
                labels = {
                    'key' : ''
                    },
                maintenance_policy_names = {
                    'key' : ''
                    },
                maintenance_schedules = {
                    'key' : openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_maintenance_schedule.GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSchedule(
                        can_reschedule = True, 
                        end_time = '', 
                        rollout_management_policy = '', 
                        schedule_deadline_time = '', 
                        start_time = '', )
                    },
                maintenance_settings = openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_maintenance_settings.GoogleCloudSaasacceleratorManagementProvidersV1MaintenanceSettings(
                    exclude = True, 
                    is_rollback = True, 
                    maintenance_policies = {
                        'key' : openapi_client.models.maintenance_policy.MaintenancePolicy(
                            create_time = '', 
                            description = '', 
                            labels = {
                                'key' : ''
                                }, 
                            name = '', 
                            state = 'STATE_UNSPECIFIED', 
                            update_policy = openapi_client.models.update_policy.UpdatePolicy(
                                channel = 'UPDATE_CHANNEL_UNSPECIFIED', 
                                deny_maintenance_periods = [
                                    openapi_client.models.deny_maintenance_period.DenyMaintenancePeriod(
                                        end_date = openapi_client.models.date.Date(
                                            day = 56, 
                                            month = 56, 
                                            year = 56, ), 
                                        start_date = openapi_client.models.date.Date(
                                            day = 56, 
                                            month = 56, 
                                            year = 56, ), 
                                        time = openapi_client.models.time_of_day.TimeOfDay(
                                            hours = 56, 
                                            minutes = 56, 
                                            nanos = 56, 
                                            seconds = 56, ), )
                                    ], 
                                window = openapi_client.models.maintenance_window.MaintenanceWindow(
                                    daily_cycle = openapi_client.models.daily_cycle.DailyCycle(
                                        duration = '', 
                                        start_time = openapi_client.models.time_of_day.TimeOfDay(
                                            hours = 56, 
                                            minutes = 56, 
                                            nanos = 56, 
                                            seconds = 56, ), ), 
                                    weekly_cycle = openapi_client.models.weekly_cycle.WeeklyCycle(
                                        schedule = [
                                            openapi_client.models.schedule.Schedule(
                                                day = 'DAY_OF_WEEK_UNSPECIFIED', 
                                                duration = '', )
                                            ], ), ), ), 
                            update_time = '', )
                        }, ),
                name = '',
                notification_parameters = {
                    'key' : openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_notification_parameter.GoogleCloudSaasacceleratorManagementProvidersV1NotificationParameter(
                        values = [
                            ''
                            ], )
                    },
                producer_metadata = {
                    'key' : ''
                    },
                provisioned_resources = [
                    openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_provisioned_resource.GoogleCloudSaasacceleratorManagementProvidersV1ProvisionedResource(
                        resource_type = '', 
                        resource_url = '', )
                    ],
                slm_instance_template = '',
                slo_metadata = openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_slo_metadata.GoogleCloudSaasacceleratorManagementProvidersV1SloMetadata(
                    nodes = [
                        openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_node_slo_metadata.GoogleCloudSaasacceleratorManagementProvidersV1NodeSloMetadata(
                            location = '', 
                            node_id = '', 
                            per_sli_eligibility = openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_per_sli_slo_eligibility.GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility(
                                eligibilities = {
                                    'key' : openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_slo_eligibility.GoogleCloudSaasacceleratorManagementProvidersV1SloEligibility(
                                        eligible = True, 
                                        reason = '', )
                                    }, ), )
                        ], 
                    per_sli_eligibility = openapi_client.models.google_cloud_saasaccelerator_management_providers_v1_per_sli_slo_eligibility.GoogleCloudSaasacceleratorManagementProvidersV1PerSliSloEligibility(), 
                    tier = '', ),
                software_versions = {
                    'key' : ''
                    },
                state = 'STATE_UNSPECIFIED',
                tenant_project_id = '',
                update_time = ''
            )
        else:
            return GoogleCloudSaasacceleratorManagementProvidersV1Instance(
        )
        """

    def testGoogleCloudSaasacceleratorManagementProvidersV1Instance(self):
        """Test GoogleCloudSaasacceleratorManagementProvidersV1Instance"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
