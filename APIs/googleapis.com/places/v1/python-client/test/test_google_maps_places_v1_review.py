# coding: utf-8

"""
    Places API (New)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_maps_places_v1_review import GoogleMapsPlacesV1Review

class TestGoogleMapsPlacesV1Review(unittest.TestCase):
    """GoogleMapsPlacesV1Review unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleMapsPlacesV1Review:
        """Test GoogleMapsPlacesV1Review
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleMapsPlacesV1Review`
        """
        model = GoogleMapsPlacesV1Review()
        if include_optional:
            return GoogleMapsPlacesV1Review(
                author_attribution = openapi_client.models.google_maps_places_v1_author_attribution.GoogleMapsPlacesV1AuthorAttribution(
                    display_name = '', 
                    photo_uri = '', 
                    uri = '', ),
                name = '',
                original_text = openapi_client.models.google_type_localized_text.GoogleTypeLocalizedText(
                    language_code = '', 
                    text = '', ),
                publish_time = '',
                rating = 1.337,
                relative_publish_time_description = '',
                text = openapi_client.models.google_type_localized_text.GoogleTypeLocalizedText(
                    language_code = '', )
            )
        else:
            return GoogleMapsPlacesV1Review(
        )
        """

    def testGoogleMapsPlacesV1Review(self):
        """Test GoogleMapsPlacesV1Review"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
