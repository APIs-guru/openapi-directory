# coding: utf-8

"""
    Vertex AI Search for Retail API

    Vertex AI Search for Retail API is made up of Retail Search, Browse and Recommendations. These discovery AI solutions help you implement personalized search, browse and recommendations, based on machine learning models, across your websites and mobile applications.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_retail_v2_complete_query_response_completion_result import GoogleCloudRetailV2CompleteQueryResponseCompletionResult

class TestGoogleCloudRetailV2CompleteQueryResponseCompletionResult(unittest.TestCase):
    """GoogleCloudRetailV2CompleteQueryResponseCompletionResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudRetailV2CompleteQueryResponseCompletionResult:
        """Test GoogleCloudRetailV2CompleteQueryResponseCompletionResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudRetailV2CompleteQueryResponseCompletionResult`
        """
        model = GoogleCloudRetailV2CompleteQueryResponseCompletionResult()
        if include_optional:
            return GoogleCloudRetailV2CompleteQueryResponseCompletionResult(
                attributes = {
                    'key' : openapi_client.models.google_cloud_retail_v2_custom_attribute.GoogleCloudRetailV2CustomAttribute(
                        indexable = True, 
                        numbers = [
                            1.337
                            ], 
                        searchable = True, 
                        text = [
                            ''
                            ], )
                    },
                suggestion = ''
            )
        else:
            return GoogleCloudRetailV2CompleteQueryResponseCompletionResult(
        )
        """

    def testGoogleCloudRetailV2CompleteQueryResponseCompletionResult(self):
        """Test GoogleCloudRetailV2CompleteQueryResponseCompletionResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
