# coding: utf-8

"""
    Blogger API

    The Blogger API provides access to posts, comments and pages of a Blogger blog.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.page_list import PageList

class TestPageList(unittest.TestCase):
    """PageList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PageList:
        """Test PageList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PageList`
        """
        model = PageList()
        if include_optional:
            return PageList(
                etag = '',
                items = [
                    openapi_client.models.page.Page(
                        author = openapi_client.models.page_author.Page_author(
                            display_name = '', 
                            id = '', 
                            image = openapi_client.models.comment_author_image.Comment_author_image(
                                url = '', ), 
                            url = '', ), 
                        blog = openapi_client.models.page_blog.Page_blog(
                            id = '', ), 
                        content = '', 
                        etag = '', 
                        id = '', 
                        kind = '', 
                        published = '', 
                        self_link = '', 
                        status = 'LIVE', 
                        title = '', 
                        trashed = '', 
                        updated = '', 
                        url = '', )
                    ],
                kind = '',
                next_page_token = ''
            )
        else:
            return PageList(
        )
        """

    def testPageList(self):
        """Test PageList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
