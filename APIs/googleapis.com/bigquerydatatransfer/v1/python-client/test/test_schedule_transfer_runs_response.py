# coding: utf-8

"""
    BigQuery Data Transfer API

    Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.schedule_transfer_runs_response import ScheduleTransferRunsResponse

class TestScheduleTransferRunsResponse(unittest.TestCase):
    """ScheduleTransferRunsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ScheduleTransferRunsResponse:
        """Test ScheduleTransferRunsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ScheduleTransferRunsResponse`
        """
        model = ScheduleTransferRunsResponse()
        if include_optional:
            return ScheduleTransferRunsResponse(
                runs = [
                    openapi_client.models.transfer_run.TransferRun(
                        data_source_id = '', 
                        destination_dataset_id = '', 
                        email_preferences = openapi_client.models.email_preferences.EmailPreferences(
                            enable_failure_email = True, ), 
                        end_time = '', 
                        error_status = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        name = '', 
                        notification_pubsub_topic = '', 
                        params = {
                            'key' : null
                            }, 
                        run_time = '', 
                        schedule = '', 
                        schedule_time = '', 
                        start_time = '', 
                        state = 'TRANSFER_STATE_UNSPECIFIED', 
                        update_time = '', 
                        user_id = '', )
                    ]
            )
        else:
            return ScheduleTransferRunsResponse(
        )
        """

    def testScheduleTransferRunsResponse(self):
        """Test ScheduleTransferRunsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
