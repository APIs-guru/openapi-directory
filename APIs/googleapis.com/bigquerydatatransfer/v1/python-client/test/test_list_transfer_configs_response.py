# coding: utf-8

"""
    BigQuery Data Transfer API

    Schedule queries or transfer external data from SaaS applications to Google BigQuery on a regular basis.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_transfer_configs_response import ListTransferConfigsResponse

class TestListTransferConfigsResponse(unittest.TestCase):
    """ListTransferConfigsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListTransferConfigsResponse:
        """Test ListTransferConfigsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListTransferConfigsResponse`
        """
        model = ListTransferConfigsResponse()
        if include_optional:
            return ListTransferConfigsResponse(
                next_page_token = '',
                transfer_configs = [
                    openapi_client.models.transfer_config.TransferConfig(
                        data_refresh_window_days = 56, 
                        data_source_id = '', 
                        dataset_region = '', 
                        destination_dataset_id = '', 
                        disabled = True, 
                        display_name = '', 
                        email_preferences = openapi_client.models.email_preferences.EmailPreferences(
                            enable_failure_email = True, ), 
                        encryption_configuration = openapi_client.models.encryption_configuration.EncryptionConfiguration(
                            kms_key_name = '', ), 
                        name = '', 
                        next_run_time = '', 
                        notification_pubsub_topic = '', 
                        owner_info = openapi_client.models.user_info.UserInfo(
                            email = '', ), 
                        params = {
                            'key' : null
                            }, 
                        schedule = '', 
                        schedule_options = openapi_client.models.schedule_options.ScheduleOptions(
                            disable_auto_scheduling = True, 
                            end_time = '', 
                            start_time = '', ), 
                        state = 'TRANSFER_STATE_UNSPECIFIED', 
                        update_time = '', 
                        user_id = '', )
                    ]
            )
        else:
            return ListTransferConfigsResponse(
        )
        """

    def testListTransferConfigsResponse(self):
        """Test ListTransferConfigsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
