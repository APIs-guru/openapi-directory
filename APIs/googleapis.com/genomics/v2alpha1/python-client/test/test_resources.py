# coding: utf-8

"""
    Genomics API

    Uploads, processes, queries, and searches Genomics data in the cloud.

    The version of the OpenAPI document: v2alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resources import Resources

class TestResources(unittest.TestCase):
    """Resources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Resources:
        """Test Resources
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Resources`
        """
        model = Resources()
        if include_optional:
            return Resources(
                project_id = '',
                regions = [
                    ''
                    ],
                virtual_machine = openapi_client.models.virtual_machine.VirtualMachine(
                    accelerators = [
                        openapi_client.models.accelerator.Accelerator(
                            count = '', 
                            type = '', )
                        ], 
                    boot_disk_size_gb = 56, 
                    boot_image = '', 
                    cpu_platform = '', 
                    disks = [
                        openapi_client.models.disk.Disk(
                            name = '', 
                            size_gb = 56, 
                            source_image = '', 
                            type = '', )
                        ], 
                    docker_cache_images = [
                        ''
                        ], 
                    enable_stackdriver_monitoring = True, 
                    labels = {
                        'key' : ''
                        }, 
                    machine_type = '', 
                    network = openapi_client.models.network.Network(
                        name = '', 
                        subnetwork = '', 
                        use_private_address = True, ), 
                    nvidia_driver_version = '', 
                    preemptible = True, 
                    reservation = '', 
                    service_account = openapi_client.models.service_account.ServiceAccount(
                        email = '', 
                        scopes = [
                            ''
                            ], ), 
                    volumes = [
                        openapi_client.models.volume.Volume(
                            existing_disk = openapi_client.models.existing_disk.ExistingDisk(
                                disk = '', ), 
                            nfs_mount = openapi_client.models.nfs_mount.NFSMount(
                                target = '', ), 
                            persistent_disk = openapi_client.models.persistent_disk.PersistentDisk(
                                size_gb = 56, 
                                source_image = '', 
                                type = '', ), 
                            volume = '', )
                        ], ),
                zones = [
                    ''
                    ]
            )
        else:
            return Resources(
        )
        """

    def testResources(self):
        """Test Resources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
