# coding: utf-8

"""
    Genomics API

    Uploads, processes, queries, and searches Genomics data in the cloud.

    The version of the OpenAPI document: v2alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.action import Action

class TestAction(unittest.TestCase):
    """Action unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Action:
        """Test Action
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Action`
        """
        model = Action()
        if include_optional:
            return Action(
                commands = [
                    ''
                    ],
                credentials = openapi_client.models.secret.Secret(
                    cipher_text = '', 
                    key_name = '', ),
                encrypted_environment = openapi_client.models.secret.Secret(
                    cipher_text = '', 
                    key_name = '', ),
                entrypoint = '',
                environment = {
                    'key' : ''
                    },
                flags = [
                    'FLAG_UNSPECIFIED'
                    ],
                image_uri = '',
                labels = {
                    'key' : ''
                    },
                mounts = [
                    openapi_client.models.mount.Mount(
                        disk = '', 
                        path = '', 
                        read_only = True, )
                    ],
                name = '',
                pid_namespace = '',
                port_mappings = {
                    'key' : 56
                    },
                timeout = ''
            )
        else:
            return Action(
        )
        """

    def testAction(self):
        """Test Action"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
