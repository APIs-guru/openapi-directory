# coding: utf-8

"""
    Apigee API

    Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, Field, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class GoogleCloudApigeeV1DeploymentConfig(BaseModel):
    """
    NEXT ID: 11
    """ # noqa: E501
    attributes: Optional[Dict[str, StrictStr]] = Field(default=None, description="Additional key-value metadata for the deployment.")
    base_path: Optional[StrictStr] = Field(default=None, description="Base path where the application will be hosted. Defaults to \"/\".", alias="basePath")
    deployment_groups: Optional[List[StrictStr]] = Field(default=None, description="The list of deployment groups in which this proxy should be deployed. Not currently populated for shared flows.", alias="deploymentGroups")
    endpoints: Optional[Dict[str, StrictStr]] = Field(default=None, description="A mapping from basepaths to proxy endpoint names in this proxy. Not populated for shared flows.")
    location: Optional[StrictStr] = Field(default=None, description="Location of the API proxy bundle as a URI.")
    name: Optional[StrictStr] = Field(default=None, description="Name of the API or shared flow revision to be deployed in the following format: `organizations/{org}/apis/{api}/revisions/{rev}` or `organizations/{org}/sharedflows/{sharedflow}/revisions/{rev}`")
    proxy_uid: Optional[StrictStr] = Field(default=None, description="Unique ID of the API proxy revision.", alias="proxyUid")
    service_account: Optional[StrictStr] = Field(default=None, description="The service account identity associated with this deployment. If non-empty, will be in the following format: `projects/-/serviceAccounts/{account_email}`", alias="serviceAccount")
    uid: Optional[StrictStr] = Field(default=None, description="Unique ID. The ID will only change if the deployment is deleted and recreated.")
    __properties: ClassVar[List[str]] = ["attributes", "basePath", "deploymentGroups", "endpoints", "location", "name", "proxyUid", "serviceAccount", "uid"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of GoogleCloudApigeeV1DeploymentConfig from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of GoogleCloudApigeeV1DeploymentConfig from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "attributes": obj.get("attributes"),
            "basePath": obj.get("basePath"),
            "deploymentGroups": obj.get("deploymentGroups"),
            "endpoints": obj.get("endpoints"),
            "location": obj.get("location"),
            "name": obj.get("name"),
            "proxyUid": obj.get("proxyUid"),
            "serviceAccount": obj.get("serviceAccount"),
            "uid": obj.get("uid")
        })
        return _obj


