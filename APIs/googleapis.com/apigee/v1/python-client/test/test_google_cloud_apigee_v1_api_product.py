# coding: utf-8

"""
    Apigee API

    Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_apigee_v1_api_product import GoogleCloudApigeeV1ApiProduct

class TestGoogleCloudApigeeV1ApiProduct(unittest.TestCase):
    """GoogleCloudApigeeV1ApiProduct unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudApigeeV1ApiProduct:
        """Test GoogleCloudApigeeV1ApiProduct
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudApigeeV1ApiProduct`
        """
        model = GoogleCloudApigeeV1ApiProduct()
        if include_optional:
            return GoogleCloudApigeeV1ApiProduct(
                api_resources = [
                    ''
                    ],
                approval_type = '',
                attributes = [
                    openapi_client.models.google_cloud_apigee_v1_attribute.GoogleCloudApigeeV1Attribute(
                        name = '', 
                        value = '', )
                    ],
                created_at = '',
                description = '',
                display_name = '',
                environments = [
                    ''
                    ],
                graphql_operation_group = openapi_client.models.google_cloud_apigee_v1_graph_ql_operation_group.GoogleCloudApigeeV1GraphQLOperationGroup(
                    operation_config_type = '', 
                    operation_configs = [
                        openapi_client.models.google_cloud_apigee_v1_graph_ql_operation_config.GoogleCloudApigeeV1GraphQLOperationConfig(
                            api_source = '', 
                            attributes = [
                                openapi_client.models.google_cloud_apigee_v1_attribute.GoogleCloudApigeeV1Attribute(
                                    name = '', 
                                    value = '', )
                                ], 
                            operations = [
                                openapi_client.models.google_cloud_apigee_v1_graph_ql_operation.GoogleCloudApigeeV1GraphQLOperation(
                                    operation = '', 
                                    operation_types = [
                                        ''
                                        ], )
                                ], 
                            quota = openapi_client.models.google_cloud_apigee_v1_quota.GoogleCloudApigeeV1Quota(
                                interval = '', 
                                limit = '', 
                                time_unit = '', ), )
                        ], ),
                grpc_operation_group = openapi_client.models.google_cloud_apigee_v1_grpc_operation_group.GoogleCloudApigeeV1GrpcOperationGroup(
                    operation_configs = [
                        openapi_client.models.google_cloud_apigee_v1_grpc_operation_config.GoogleCloudApigeeV1GrpcOperationConfig(
                            api_source = '', 
                            attributes = [
                                openapi_client.models.google_cloud_apigee_v1_attribute.GoogleCloudApigeeV1Attribute(
                                    name = '', 
                                    value = '', )
                                ], 
                            methods = [
                                ''
                                ], 
                            quota = openapi_client.models.google_cloud_apigee_v1_quota.GoogleCloudApigeeV1Quota(
                                interval = '', 
                                limit = '', 
                                time_unit = '', ), 
                            service = '', )
                        ], ),
                last_modified_at = '',
                name = '',
                operation_group = openapi_client.models.google_cloud_apigee_v1_operation_group.GoogleCloudApigeeV1OperationGroup(
                    operation_config_type = '', 
                    operation_configs = [
                        openapi_client.models.google_cloud_apigee_v1_operation_config.GoogleCloudApigeeV1OperationConfig(
                            api_source = '', 
                            attributes = [
                                openapi_client.models.google_cloud_apigee_v1_attribute.GoogleCloudApigeeV1Attribute(
                                    name = '', 
                                    value = '', )
                                ], 
                            operations = [
                                openapi_client.models.google_cloud_apigee_v1_operation.GoogleCloudApigeeV1Operation(
                                    methods = [
                                        ''
                                        ], 
                                    resource = '', )
                                ], 
                            quota = openapi_client.models.google_cloud_apigee_v1_quota.GoogleCloudApigeeV1Quota(
                                interval = '', 
                                limit = '', 
                                time_unit = '', ), )
                        ], ),
                proxies = [
                    ''
                    ],
                quota = '',
                quota_counter_scope = 'QUOTA_COUNTER_SCOPE_UNSPECIFIED',
                quota_interval = '',
                quota_time_unit = '',
                scopes = [
                    ''
                    ]
            )
        else:
            return GoogleCloudApigeeV1ApiProduct(
        )
        """

    def testGoogleCloudApigeeV1ApiProduct(self):
        """Test GoogleCloudApigeeV1ApiProduct"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
