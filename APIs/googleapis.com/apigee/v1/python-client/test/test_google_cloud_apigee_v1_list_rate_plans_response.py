# coding: utf-8

"""
    Apigee API

    Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_apigee_v1_list_rate_plans_response import GoogleCloudApigeeV1ListRatePlansResponse

class TestGoogleCloudApigeeV1ListRatePlansResponse(unittest.TestCase):
    """GoogleCloudApigeeV1ListRatePlansResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudApigeeV1ListRatePlansResponse:
        """Test GoogleCloudApigeeV1ListRatePlansResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudApigeeV1ListRatePlansResponse`
        """
        model = GoogleCloudApigeeV1ListRatePlansResponse()
        if include_optional:
            return GoogleCloudApigeeV1ListRatePlansResponse(
                next_start_key = '',
                rate_plans = [
                    openapi_client.models.google_cloud_apigee_v1_rate_plan.GoogleCloudApigeeV1RatePlan(
                        apiproduct = '', 
                        billing_period = 'BILLING_PERIOD_UNSPECIFIED', 
                        consumption_pricing_rates = [
                            openapi_client.models.google_cloud_apigee_v1_rate_range.GoogleCloudApigeeV1RateRange(
                                end = '', 
                                fee = openapi_client.models.google_type_money.GoogleTypeMoney(
                                    currency_code = '', 
                                    nanos = 56, 
                                    units = '', ), 
                                start = '', )
                            ], 
                        consumption_pricing_type = 'CONSUMPTION_PRICING_TYPE_UNSPECIFIED', 
                        created_at = '', 
                        currency_code = '', 
                        description = '', 
                        display_name = '', 
                        end_time = '', 
                        fixed_fee_frequency = 56, 
                        fixed_recurring_fee = openapi_client.models.google_type_money.GoogleTypeMoney(
                            currency_code = '', 
                            nanos = 56, 
                            units = '', ), 
                        last_modified_at = '', 
                        name = '', 
                        payment_funding_model = 'PAYMENT_FUNDING_MODEL_UNSPECIFIED', 
                        revenue_share_rates = [
                            openapi_client.models.google_cloud_apigee_v1_revenue_share_range.GoogleCloudApigeeV1RevenueShareRange(
                                end = '', 
                                share_percentage = 1.337, 
                                start = '', )
                            ], 
                        revenue_share_type = 'REVENUE_SHARE_TYPE_UNSPECIFIED', 
                        setup_fee = , 
                        start_time = '', 
                        state = 'STATE_UNSPECIFIED', )
                    ]
            )
        else:
            return GoogleCloudApigeeV1ListRatePlansResponse(
        )
        """

    def testGoogleCloudApigeeV1ListRatePlansResponse(self):
        """Test GoogleCloudApigeeV1ListRatePlansResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
