# coding: utf-8

"""
    Apigee API

    Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_apigee_v1_target_server import GoogleCloudApigeeV1TargetServer

class TestGoogleCloudApigeeV1TargetServer(unittest.TestCase):
    """GoogleCloudApigeeV1TargetServer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudApigeeV1TargetServer:
        """Test GoogleCloudApigeeV1TargetServer
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudApigeeV1TargetServer`
        """
        model = GoogleCloudApigeeV1TargetServer()
        if include_optional:
            return GoogleCloudApigeeV1TargetServer(
                description = '',
                host = '',
                is_enabled = True,
                name = '',
                port = 56,
                protocol = 'PROTOCOL_UNSPECIFIED',
                s_sl_info = openapi_client.models.google_cloud_apigee_v1_tls_info.GoogleCloudApigeeV1TlsInfo(
                    ciphers = [
                        ''
                        ], 
                    client_auth_enabled = True, 
                    common_name = openapi_client.models.google_cloud_apigee_v1_tls_info_common_name.GoogleCloudApigeeV1TlsInfoCommonName(
                        value = '', 
                        wildcard_match = True, ), 
                    enabled = True, 
                    ignore_validation_errors = True, 
                    key_alias = '', 
                    key_store = '', 
                    protocols = [
                        ''
                        ], 
                    trust_store = '', )
            )
        else:
            return GoogleCloudApigeeV1TargetServer(
        )
        """

    def testGoogleCloudApigeeV1TargetServer(self):
        """Test GoogleCloudApigeeV1TargetServer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
