# coding: utf-8

"""
    Apigee API

    Use the Apigee API to programmatically develop and manage APIs with a set of RESTful operations. Develop and secure API proxies, deploy and undeploy API proxy revisions, monitor APIs, configure environments, manage users, and more. Note: This product is available as a free trial for a time period of 60 days.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_apigee_v1_organization import GoogleCloudApigeeV1Organization

class TestGoogleCloudApigeeV1Organization(unittest.TestCase):
    """GoogleCloudApigeeV1Organization unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudApigeeV1Organization:
        """Test GoogleCloudApigeeV1Organization
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudApigeeV1Organization`
        """
        model = GoogleCloudApigeeV1Organization()
        if include_optional:
            return GoogleCloudApigeeV1Organization(
                addons_config = openapi_client.models.google_cloud_apigee_v1_addons_config.GoogleCloudApigeeV1AddonsConfig(
                    advanced_api_ops_config = openapi_client.models.google_cloud_apigee_v1_advanced_api_ops_config.GoogleCloudApigeeV1AdvancedApiOpsConfig(
                        enabled = True, ), 
                    analytics_config = openapi_client.models.google_cloud_apigee_v1_analytics_config.GoogleCloudApigeeV1AnalyticsConfig(
                        enabled = True, 
                        expire_time_millis = '', 
                        state = 'ADDON_STATE_UNSPECIFIED', 
                        update_time = '', ), 
                    api_security_config = openapi_client.models.google_cloud_apigee_v1_api_security_config.GoogleCloudApigeeV1ApiSecurityConfig(
                        enabled = True, 
                        expires_at = '', ), 
                    connectors_platform_config = openapi_client.models.google_cloud_apigee_v1_connectors_platform_config.GoogleCloudApigeeV1ConnectorsPlatformConfig(
                        enabled = True, 
                        expires_at = '', ), 
                    integration_config = openapi_client.models.google_cloud_apigee_v1_integration_config.GoogleCloudApigeeV1IntegrationConfig(
                        enabled = True, ), 
                    monetization_config = openapi_client.models.google_cloud_apigee_v1_monetization_config.GoogleCloudApigeeV1MonetizationConfig(
                        enabled = True, ), ),
                analytics_region = '',
                api_consumer_data_encryption_key_name = '',
                api_consumer_data_location = '',
                apigee_project_id = '',
                attributes = [
                    ''
                    ],
                authorized_network = '',
                billing_type = 'BILLING_TYPE_UNSPECIFIED',
                ca_certificate = 'YQ==',
                control_plane_encryption_key_name = '',
                created_at = '',
                customer_name = '',
                description = '',
                disable_vpc_peering = True,
                display_name = '',
                environments = [
                    ''
                    ],
                expires_at = '',
                last_modified_at = '',
                name = '',
                portal_disabled = True,
                project_id = '',
                properties = openapi_client.models.google_cloud_apigee_v1_properties.GoogleCloudApigeeV1Properties(
                    property = [
                        openapi_client.models.google_cloud_apigee_v1_property.GoogleCloudApigeeV1Property(
                            name = '', 
                            value = '', )
                        ], ),
                runtime_database_encryption_key_name = '',
                runtime_type = 'RUNTIME_TYPE_UNSPECIFIED',
                state = 'STATE_UNSPECIFIED',
                subscription_plan = 'SUBSCRIPTION_PLAN_UNSPECIFIED',
                subscription_type = 'SUBSCRIPTION_TYPE_UNSPECIFIED',
                type = 'TYPE_UNSPECIFIED'
            )
        else:
            return GoogleCloudApigeeV1Organization(
        )
        """

    def testGoogleCloudApigeeV1Organization(self):
        """Test GoogleCloudApigeeV1Organization"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
