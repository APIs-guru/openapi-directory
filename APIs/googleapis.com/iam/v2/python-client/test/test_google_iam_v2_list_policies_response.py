# coding: utf-8

"""
    Identity and Access Management (IAM) API

    Manages identity and access control for Google Cloud Platform resources, including the creation of service accounts, which you can use to authenticate to Google and make API calls. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_iam_v2_list_policies_response import GoogleIamV2ListPoliciesResponse

class TestGoogleIamV2ListPoliciesResponse(unittest.TestCase):
    """GoogleIamV2ListPoliciesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleIamV2ListPoliciesResponse:
        """Test GoogleIamV2ListPoliciesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleIamV2ListPoliciesResponse`
        """
        model = GoogleIamV2ListPoliciesResponse()
        if include_optional:
            return GoogleIamV2ListPoliciesResponse(
                next_page_token = '',
                policies = [
                    openapi_client.models.google_iam_v2_policy.GoogleIamV2Policy(
                        annotations = {
                            'key' : ''
                            }, 
                        create_time = '', 
                        delete_time = '', 
                        display_name = '', 
                        etag = '', 
                        kind = '', 
                        name = '', 
                        rules = [
                            openapi_client.models.google_iam_v2_policy_rule.GoogleIamV2PolicyRule(
                                deny_rule = openapi_client.models.google_iam_v2_deny_rule.GoogleIamV2DenyRule(
                                    denial_condition = openapi_client.models.google_type_expr.GoogleTypeExpr(
                                        description = '', 
                                        expression = '', 
                                        location = '', 
                                        title = '', ), 
                                    denied_permissions = [
                                        ''
                                        ], 
                                    denied_principals = [
                                        ''
                                        ], 
                                    exception_permissions = [
                                        ''
                                        ], 
                                    exception_principals = [
                                        ''
                                        ], ), 
                                description = '', )
                            ], 
                        uid = '', 
                        update_time = '', )
                    ]
            )
        else:
            return GoogleIamV2ListPoliciesResponse(
        )
        """

    def testGoogleIamV2ListPoliciesResponse(self):
        """Test GoogleIamV2ListPoliciesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
