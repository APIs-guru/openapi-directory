# coding: utf-8

"""
    Dataform API

    Service to develop, version control, and operationalize SQL pipelines in BigQuery.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_workflow_invocations_response import ListWorkflowInvocationsResponse

class TestListWorkflowInvocationsResponse(unittest.TestCase):
    """ListWorkflowInvocationsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListWorkflowInvocationsResponse:
        """Test ListWorkflowInvocationsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListWorkflowInvocationsResponse`
        """
        model = ListWorkflowInvocationsResponse()
        if include_optional:
            return ListWorkflowInvocationsResponse(
                next_page_token = '',
                unreachable = [
                    ''
                    ],
                workflow_invocations = [
                    openapi_client.models.workflow_invocation.WorkflowInvocation(
                        compilation_result = '', 
                        invocation_config = openapi_client.models.invocation_config.InvocationConfig(
                            fully_refresh_incremental_tables_enabled = True, 
                            included_tags = [
                                ''
                                ], 
                            included_targets = [
                                openapi_client.models.target.Target(
                                    database = '', 
                                    name = '', 
                                    schema = '', )
                                ], 
                            service_account = '', 
                            transitive_dependencies_included = True, 
                            transitive_dependents_included = True, ), 
                        invocation_timing = openapi_client.models.interval.Interval(
                            end_time = '', 
                            start_time = '', ), 
                        name = '', 
                        resolved_compilation_result = '', 
                        state = 'STATE_UNSPECIFIED', 
                        workflow_config = '', )
                    ]
            )
        else:
            return ListWorkflowInvocationsResponse(
        )
        """

    def testListWorkflowInvocationsResponse(self):
        """Test ListWorkflowInvocationsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
