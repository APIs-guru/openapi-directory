# coding: utf-8

"""
    Dataform API

    Service to develop, version control, and operationalize SQL pipelines in BigQuery.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_workflow_configs_response import ListWorkflowConfigsResponse

class TestListWorkflowConfigsResponse(unittest.TestCase):
    """ListWorkflowConfigsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListWorkflowConfigsResponse:
        """Test ListWorkflowConfigsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListWorkflowConfigsResponse`
        """
        model = ListWorkflowConfigsResponse()
        if include_optional:
            return ListWorkflowConfigsResponse(
                next_page_token = '',
                unreachable = [
                    ''
                    ],
                workflow_configs = [
                    openapi_client.models.workflow_config.WorkflowConfig(
                        cron_schedule = '', 
                        invocation_config = openapi_client.models.invocation_config.InvocationConfig(
                            fully_refresh_incremental_tables_enabled = True, 
                            included_tags = [
                                ''
                                ], 
                            included_targets = [
                                openapi_client.models.target.Target(
                                    database = '', 
                                    name = '', 
                                    schema = '', )
                                ], 
                            service_account = '', 
                            transitive_dependencies_included = True, 
                            transitive_dependents_included = True, ), 
                        name = '', 
                        recent_scheduled_execution_records = [
                            openapi_client.models.scheduled_execution_record.ScheduledExecutionRecord(
                                error_status = openapi_client.models.status.Status(
                                    code = 56, 
                                    details = [
                                        {
                                            'key' : null
                                            }
                                        ], 
                                    message = '', ), 
                                execution_time = '', 
                                workflow_invocation = '', )
                            ], 
                        release_config = '', 
                        time_zone = '', )
                    ]
            )
        else:
            return ListWorkflowConfigsResponse(
        )
        """

    def testListWorkflowConfigsResponse(self):
        """Test ListWorkflowConfigsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
