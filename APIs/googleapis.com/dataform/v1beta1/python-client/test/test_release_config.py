# coding: utf-8

"""
    Dataform API

    Service to develop, version control, and operationalize SQL pipelines in BigQuery.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.release_config import ReleaseConfig

class TestReleaseConfig(unittest.TestCase):
    """ReleaseConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReleaseConfig:
        """Test ReleaseConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReleaseConfig`
        """
        model = ReleaseConfig()
        if include_optional:
            return ReleaseConfig(
                code_compilation_config = openapi_client.models.code_compilation_config.CodeCompilationConfig(
                    assertion_schema = '', 
                    database_suffix = '', 
                    default_database = '', 
                    default_location = '', 
                    default_schema = '', 
                    schema_suffix = '', 
                    table_prefix = '', 
                    vars = {
                        'key' : ''
                        }, ),
                cron_schedule = '',
                disabled = True,
                git_commitish = '',
                name = '',
                recent_scheduled_release_records = [
                    openapi_client.models.scheduled_release_record.ScheduledReleaseRecord(
                        compilation_result = '', 
                        error_status = openapi_client.models.status.Status(
                            code = 56, 
                            details = [
                                {
                                    'key' : null
                                    }
                                ], 
                            message = '', ), 
                        release_time = '', )
                    ],
                release_compilation_result = '',
                time_zone = ''
            )
        else:
            return ReleaseConfig(
        )
        """

    def testReleaseConfig(self):
        """Test ReleaseConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
