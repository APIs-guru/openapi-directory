# coding: utf-8

"""
    Dataform API

    Service to develop, version control, and operationalize SQL pipelines in BigQuery.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.declaration import Declaration

class TestDeclaration(unittest.TestCase):
    """Declaration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Declaration:
        """Test Declaration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Declaration`
        """
        model = Declaration()
        if include_optional:
            return Declaration(
                relation_descriptor = openapi_client.models.relation_descriptor.RelationDescriptor(
                    bigquery_labels = {
                        'key' : ''
                        }, 
                    columns = [
                        openapi_client.models.column_descriptor.ColumnDescriptor(
                            bigquery_policy_tags = [
                                ''
                                ], 
                            description = '', 
                            path = [
                                ''
                                ], )
                        ], 
                    description = '', )
            )
        else:
            return Declaration(
        )
        """

    def testDeclaration(self):
        """Test Declaration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
