# coding: utf-8

"""
    API Keys API

    Manages the API keys associated with developer projects.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.v2_key import V2Key

class TestV2Key(unittest.TestCase):
    """V2Key unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2Key:
        """Test V2Key
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2Key`
        """
        model = V2Key()
        if include_optional:
            return V2Key(
                annotations = {
                    'key' : ''
                    },
                create_time = '',
                delete_time = '',
                display_name = '',
                etag = '',
                key_string = '',
                name = '',
                restrictions = openapi_client.models.v2_restrictions.V2Restrictions(
                    android_key_restrictions = openapi_client.models.v2_android_key_restrictions.V2AndroidKeyRestrictions(
                        allowed_applications = [
                            openapi_client.models.v2_android_application.V2AndroidApplication(
                                package_name = '', 
                                sha1_fingerprint = '', )
                            ], ), 
                    api_targets = [
                        openapi_client.models.v2_api_target.V2ApiTarget(
                            methods = [
                                ''
                                ], 
                            service = '', )
                        ], 
                    browser_key_restrictions = openapi_client.models.v2_browser_key_restrictions.V2BrowserKeyRestrictions(
                        allowed_referrers = [
                            ''
                            ], ), 
                    ios_key_restrictions = openapi_client.models.v2_ios_key_restrictions.V2IosKeyRestrictions(
                        allowed_bundle_ids = [
                            ''
                            ], ), 
                    server_key_restrictions = openapi_client.models.v2_server_key_restrictions.V2ServerKeyRestrictions(
                        allowed_ips = [
                            ''
                            ], ), ),
                uid = '',
                update_time = ''
            )
        else:
            return V2Key(
        )
        """

    def testV2Key(self):
        """Test V2Key"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
