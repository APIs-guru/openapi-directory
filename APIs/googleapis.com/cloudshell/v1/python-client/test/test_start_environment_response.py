# coding: utf-8

"""
    Cloud Shell API

    Allows users to start, configure, and connect to interactive shell sessions running in the cloud. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.start_environment_response import StartEnvironmentResponse

class TestStartEnvironmentResponse(unittest.TestCase):
    """StartEnvironmentResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StartEnvironmentResponse:
        """Test StartEnvironmentResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StartEnvironmentResponse`
        """
        model = StartEnvironmentResponse()
        if include_optional:
            return StartEnvironmentResponse(
                environment = openapi_client.models.environment.Environment(
                    docker_image = '', 
                    id = '', 
                    name = '', 
                    public_keys = [
                        ''
                        ], 
                    ssh_host = '', 
                    ssh_port = 56, 
                    ssh_username = '', 
                    state = 'STATE_UNSPECIFIED', 
                    web_host = '', )
            )
        else:
            return StartEnvironmentResponse(
        )
        """

    def testStartEnvironmentResponse(self):
        """Test StartEnvironmentResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
