openapi: 3.0.0
servers:
  - url: https://tasks.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google Tasks API lets you manage your tasks and task lists.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Tasks API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://tasks.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: tasks
externalDocs:
  url: https://developers.google.com/tasks/
tags:
  - name: tasklists
  - name: tasks
paths:
  /tasks/v1/lists/{tasklist}/clear:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Clears all completed tasks from the specified task list. The affected tasks will be marked as 'hidden' and no longer be returned by default when retrieving all tasks for a task list.
      operationId: tasks.tasks.clear
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasks
  /tasks/v1/lists/{tasklist}/tasks:
    get:
      description: Returns all tasks in the specified task list.
      operationId: tasks.tasks.list
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Upper bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.
          in: query
          name: completedMax
          schema:
            type: string
        - description: Lower bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.
          in: query
          name: completedMin
          schema:
            type: string
        - description: Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.
          in: query
          name: dueMax
          schema:
            type: string
        - description: Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.
          in: query
          name: dueMin
          schema:
            type: string
        - description: "Maximum number of tasks returned on one page. Optional. The default is 20 (max allowed: 100)."
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Token specifying the result page to return. Optional.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Flag indicating whether completed tasks are returned in the result. Optional. The default is True. Note that showHidden must also be True to show tasks completed in first party clients, such as the web UI and Google's mobile apps.
          in: query
          name: showCompleted
          schema:
            type: boolean
        - description: Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.
          in: query
          name: showDeleted
          schema:
            type: boolean
        - description: Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.
          in: query
          name: showHidden
          schema:
            type: boolean
        - description: Lower bound for a task's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.
          in: query
          name: updatedMin
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Tasks"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      tags:
        - tasks
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new task on the specified task list.
      operationId: tasks.tasks.insert
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Parent task identifier. If the task is created at the top level, this parameter is omitted. Optional.
          in: query
          name: parent
          schema:
            type: string
        - description: Previous sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.
          in: query
          name: previous
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasks
  /tasks/v1/lists/{tasklist}/tasks/{task}:
    delete:
      description: Deletes the specified task from the task list.
      operationId: tasks.tasks.delete
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Task identifier.
          in: path
          name: task
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasks
    get:
      description: Returns the specified task.
      operationId: tasks.tasks.get
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Task identifier.
          in: path
          name: task
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      tags:
        - tasks
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the specified task. This method supports patch semantics.
      operationId: tasks.tasks.patch
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Task identifier.
          in: path
          name: task
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasks
    put:
      description: Updates the specified task.
      operationId: tasks.tasks.update
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Task identifier.
          in: path
          name: task
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasks
  /tasks/v1/lists/{tasklist}/tasks/{task}/move:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.
      operationId: tasks.tasks.move
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
        - description: Task identifier.
          in: path
          name: task
          required: true
          schema:
            type: string
        - description: New parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional.
          in: query
          name: parent
          schema:
            type: string
        - description: New previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.
          in: query
          name: previous
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasks
  /tasks/v1/users/@me/lists:
    get:
      description: Returns all the authenticated user's task lists.
      operationId: tasks.tasklists.list
      parameters:
        - description: "Maximum number of task lists returned on one page. Optional. The default is 20 (max allowed: 100)."
          in: query
          name: maxResults
          schema:
            type: integer
        - description: Token specifying the result page to return. Optional.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskLists"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      tags:
        - tasklists
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new task list and adds it to the authenticated user's task lists.
      operationId: tasks.tasklists.insert
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasklists
  /tasks/v1/users/@me/lists/{tasklist}:
    delete:
      description: Deletes the authenticated user's specified task list.
      operationId: tasks.tasklists.delete
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasklists
    get:
      description: Returns the authenticated user's specified task list.
      operationId: tasks.tasklists.get
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
        - Oauth2:
            - https://www.googleapis.com/auth/tasks.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/tasks.readonly
      tags:
        - tasklists
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the authenticated user's specified task list. This method supports patch semantics.
      operationId: tasks.tasklists.patch
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasklists
    put:
      description: Updates the authenticated user's specified task list.
      operationId: tasks.tasklists.update
      parameters:
        - description: Task list identifier.
          in: path
          name: tasklist
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TaskList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TaskList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/tasks
          Oauth2c:
            - https://www.googleapis.com/auth/tasks
      tags:
        - tasklists
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Task:
      properties:
        completed:
          description: Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.
          type: string
        deleted:
          description: Flag indicating whether the task has been deleted. The default is False.
          type: boolean
        due:
          description: Due date of the task (as a RFC 3339 timestamp). Optional. The due date only records date information; the time portion of the timestamp is discarded when setting the due date. It isn't possible to read or write the time that a task is due via the API.
          type: string
        etag:
          description: ETag of the resource.
          type: string
        hidden:
          description: Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only.
          type: boolean
        id:
          description: Task identifier.
          type: string
        kind:
          description: Type of the resource. This is always "tasks#task".
          type: string
        links:
          description: Collection of links. This collection is read-only.
          items:
            properties:
              description:
                description: "The description. In HTML speak: Everything between <a> and </a>."
                type: string
              link:
                description: The URL.
                type: string
              type:
                description: Type of the link, e.g. "email".
                type: string
            type: object
          type: array
        notes:
          description: Notes describing the task. Optional.
          type: string
        parent:
          description: Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the "move" method to move the task under a different parent or to the top level.
          type: string
        position:
          description: String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the "move" method to move the task to another position.
          type: string
        selfLink:
          description: URL pointing to this task. Used to retrieve, update, or delete this task.
          type: string
        status:
          description: Status of the task. This is either "needsAction" or "completed".
          type: string
        title:
          description: Title of the task.
          type: string
        updated:
          description: Last modification time of the task (as a RFC 3339 timestamp).
          type: string
      type: object
    TaskList:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        id:
          description: Task list identifier.
          type: string
        kind:
          description: Type of the resource. This is always "tasks#taskList".
          type: string
        selfLink:
          description: URL pointing to this task list. Used to retrieve, update, or delete this task list.
          type: string
        title:
          description: Title of the task list.
          type: string
        updated:
          description: Last modification time of the task list (as a RFC 3339 timestamp).
          type: string
      type: object
    TaskLists:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: Collection of task lists.
          items:
            $ref: "#/components/schemas/TaskList"
          type: array
        kind:
          description: Type of the resource. This is always "tasks#taskLists".
          type: string
        nextPageToken:
          description: Token that can be used to request the next page of this result.
          type: string
      type: object
    Tasks:
      properties:
        etag:
          description: ETag of the resource.
          type: string
        items:
          description: Collection of tasks.
          items:
            $ref: "#/components/schemas/Task"
          type: array
        kind:
          description: Type of the resource. This is always "tasks#tasks".
          type: string
        nextPageToken:
          description: Token used to access the next page of this result.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/tasks: Create, edit, organize, and delete all your tasks
            https://www.googleapis.com/auth/tasks.readonly: View your tasks
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/tasks: Create, edit, organize, and delete all your tasks
            https://www.googleapis.com/auth/tasks.readonly: View your tasks
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
