# coding: utf-8

"""
    Cloud Trace API

    Sends application trace data to Cloud Trace for viewing. Trace data is collected for all App Engine applications by default. Trace data from other applications can be provided using this API. This library is used to interact with the Cloud Trace API directly. If you are looking to instrument your application for Cloud Trace, we recommend using OpenTelemetry. 

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.annotation import Annotation

class TestAnnotation(unittest.TestCase):
    """Annotation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Annotation:
        """Test Annotation
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Annotation`
        """
        model = Annotation()
        if include_optional:
            return Annotation(
                attributes = openapi_client.models.attributes.Attributes(
                    attribute_map = {
                        'key' : openapi_client.models.attribute_value.AttributeValue(
                            bool_value = True, 
                            int_value = '', 
                            string_value = openapi_client.models.truncatable_string.TruncatableString(
                                truncated_byte_count = 56, 
                                value = '', ), )
                        }, 
                    dropped_attributes_count = 56, ),
                description = openapi_client.models.truncatable_string.TruncatableString(
                    truncated_byte_count = 56, 
                    value = '', )
            )
        else:
            return Annotation(
        )
        """

    def testAnnotation(self):
        """Test Annotation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
