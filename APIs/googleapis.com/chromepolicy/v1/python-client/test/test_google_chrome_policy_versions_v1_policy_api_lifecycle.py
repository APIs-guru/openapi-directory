# coding: utf-8

"""
    Chrome Policy API

    The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_policy_versions_v1_policy_api_lifecycle import GoogleChromePolicyVersionsV1PolicyApiLifecycle

class TestGoogleChromePolicyVersionsV1PolicyApiLifecycle(unittest.TestCase):
    """GoogleChromePolicyVersionsV1PolicyApiLifecycle unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromePolicyVersionsV1PolicyApiLifecycle:
        """Test GoogleChromePolicyVersionsV1PolicyApiLifecycle
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromePolicyVersionsV1PolicyApiLifecycle`
        """
        model = GoogleChromePolicyVersionsV1PolicyApiLifecycle()
        if include_optional:
            return GoogleChromePolicyVersionsV1PolicyApiLifecycle(
                deprecated_in_favor_of = [
                    ''
                    ],
                description = '',
                end_support = openapi_client.models.google_type_date.GoogleTypeDate(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                policy_api_lifecycle_stage = 'API_UNSPECIFIED',
                scheduled_to_deprecate_policies = [
                    ''
                    ]
            )
        else:
            return GoogleChromePolicyVersionsV1PolicyApiLifecycle(
        )
        """

    def testGoogleChromePolicyVersionsV1PolicyApiLifecycle(self):
        """Test GoogleChromePolicyVersionsV1PolicyApiLifecycle"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
