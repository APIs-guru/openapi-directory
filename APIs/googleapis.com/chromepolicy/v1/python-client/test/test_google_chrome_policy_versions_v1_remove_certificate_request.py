# coding: utf-8

"""
    Chrome Policy API

    The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_chrome_policy_versions_v1_remove_certificate_request import GoogleChromePolicyVersionsV1RemoveCertificateRequest

class TestGoogleChromePolicyVersionsV1RemoveCertificateRequest(unittest.TestCase):
    """GoogleChromePolicyVersionsV1RemoveCertificateRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleChromePolicyVersionsV1RemoveCertificateRequest:
        """Test GoogleChromePolicyVersionsV1RemoveCertificateRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleChromePolicyVersionsV1RemoveCertificateRequest`
        """
        model = GoogleChromePolicyVersionsV1RemoveCertificateRequest()
        if include_optional:
            return GoogleChromePolicyVersionsV1RemoveCertificateRequest(
                network_id = '',
                target_resource = ''
            )
        else:
            return GoogleChromePolicyVersionsV1RemoveCertificateRequest(
        )
        """

    def testGoogleChromePolicyVersionsV1RemoveCertificateRequest(self):
        """Test GoogleChromePolicyVersionsV1RemoveCertificateRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
