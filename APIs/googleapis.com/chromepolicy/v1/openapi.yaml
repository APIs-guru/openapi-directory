openapi: 3.0.0
servers:
  - url: https://chromepolicy.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Chrome Policy API is a suite of services that allows Chrome administrators to control the policies applied to their managed Chrome OS devices and Chrome browsers.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Chrome Policy API
  version: v1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://chromepolicy.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: chromepolicy
externalDocs:
  url: http://developers.google.com/chrome/policy
tags:
  - name: customers
  - name: media
paths:
  "/v1/{customer}/policies/files:uploadPolicyFile":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an enterprise file from the content provided by user. Returns a public download url for end user.
      operationId: chromepolicy.media.upload
      parameters:
        - description: Required. The customer for which the file upload will apply.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1UploadPolicyFileRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1UploadPolicyFileResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - media
  "/v1/{customer}/policies/groups:batchDelete":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Delete multiple policy values that are applied to a specific group. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.batchDelete
      parameters:
        - description: ID of the Google Workspace account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/groups:batchModify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Modify multiple policy values that are applied to a specific group. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.batchModify
      parameters:
        - description: ID of the Google Workspace account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/groups:listGroupPriorityOrdering":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Retrieve a group priority ordering for an app. The target app must be supplied in `additionalTargetKeyNames` in the PolicyTargetKey. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.listGroupPriorityOrdering
      parameters:
        - description: Required. ID of the Google Workspace account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      tags:
        - customers
  "/v1/{customer}/policies/groups:updateGroupPriorityOrdering":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Update a group priority ordering for an app. The target app must be supplied in `additionalTargetKeyNames` in the PolicyTargetKey. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.groups.updateGroupPriorityOrdering
      parameters:
        - description: Required. ID of the Google Workspace account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/networks:defineCertificate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a certificate at a specified OU for a customer.
      operationId: chromepolicy.customers.policies.networks.defineCertificate
      parameters:
        - description: Required. The customer for which the certificate will apply.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1DefineCertificateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1DefineCertificateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/networks:defineNetwork":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Define a new network.
      operationId: chromepolicy.customers.policies.networks.defineNetwork
      parameters:
        - description: Required. The customer who will own this new network.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1DefineNetworkRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1DefineNetworkResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/networks:removeCertificate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Remove an existing certificate by guid.
      operationId: chromepolicy.customers.policies.networks.removeCertificate
      parameters:
        - description: Required. The customer whose certificate will be removed.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1RemoveCertificateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1RemoveCertificateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/networks:removeNetwork":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Remove an existing network by guid.
      operationId: chromepolicy.customers.policies.networks.removeNetwork
      parameters:
        - description: Required. The customer whose network will be removed.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1RemoveNetworkRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1RemoveNetworkResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/orgunits:batchInherit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Modify multiple policy values that are applied to a specific org unit so that they now inherit the value from a parent (if applicable). All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.orgunits.batchInherit
      parameters:
        - description: ID of the G Suite account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies/orgunits:batchModify":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Modify multiple policy values that are applied to a specific org unit. All targets must have the same target format. That is to say that they must point to the same target resource and must have the same keys specified in `additionalTargetKeyNames`, though the values for those keys may be different. On failure the request will return the error details as part of the google.rpc.Status.
      operationId: chromepolicy.customers.policies.orgunits.batchModify
      parameters:
        - description: ID of the G Suite account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleProtobufEmpty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
      tags:
        - customers
  "/v1/{customer}/policies:resolve":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets the resolved policy values for a list of policies that match a search query.
      operationId: chromepolicy.customers.policies.resolve
      parameters:
        - description: ID of the G Suite account or literal "my_customer" for the customer associated to the request.
          in: path
          name: customer
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ResolveRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ResolveResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      tags:
        - customers
  "/v1/{name}":
    get:
      description: Get a specific policy schema for a customer by its resource name.
      operationId: chromepolicy.customers.policySchemas.get
      parameters:
        - description: Required. The policy schema resource name to query.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchema"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/{parent}/policySchemas":
    get:
      description: Gets a list of policy schemas that match a specified filter value for a given customer.
      operationId: chromepolicy.customers.policySchemas.list
      parameters:
        - description: Required. The customer for which the listing request will apply.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The schema filter used to find a particular schema based on fields like its resource name, description and `additionalTargetKeyNames`.
          in: query
          name: filter
          schema:
            type: string
        - description: The maximum number of policy schemas to return, defaults to 100 and has a maximum of 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The page token used to retrieve a specific page of the listing request.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ListPolicySchemasResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy
        - Oauth2:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
          Oauth2c:
            - https://www.googleapis.com/auth/chrome.management.policy.readonly
      tags:
        - customers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle:
      properties:
        description:
          description: Description about current life cycle.
          type: string
        endSupport:
          $ref: "#/components/schemas/GoogleTypeDate"
          description: End supporting date for current policy.
        policyApiLifecycleStage:
          description: Indicate current life cycle stage of the policy API.
          enum:
            - API_UNSPECIFIED
            - API_PREVIEW
            - API_DEVELOPMENT
            - API_CURRENT
            - API_DEPRECATED
          type: string
      type: object
    GoogleChromePolicyVersionsV1AdditionalTargetKeyName:
      description: Additional key names that will be used to identify the target of the policy value.
      properties:
        key:
          description: Key name.
          type: string
        keyDescription:
          description: Key description.
          type: string
      type: object
    GoogleChromePolicyVersionsV1BatchDeleteGroupPoliciesRequest:
      description: Request message for specifying that multiple policy values will be deleted.
      properties:
        requests:
          description: "List of policies that will be deleted as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to a group resource. 3. All `policyTargetKey` values must have the same `app_id` key name in the `additionalTargetKeys`. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest"
          type: array
      type: object
    GoogleChromePolicyVersionsV1BatchInheritOrgUnitPoliciesRequest:
      description: Request message for specifying that multiple policy values inherit their value from their parents.
      properties:
        requests:
          description: "List of policies that have to inherit their values as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest"
          type: array
      type: object
    GoogleChromePolicyVersionsV1BatchModifyGroupPoliciesRequest:
      description: Request message for modifying multiple policy values for a specific group-based target.
      properties:
        requests:
          description: "List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to a group resource. 3. All `policyTargetKey` values must have the same `app_id` key name in the `additionalTargetKeys`. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest"
          type: array
      type: object
    GoogleChromePolicyVersionsV1BatchModifyOrgUnitPoliciesRequest:
      description: Request message for modifying multiple policy values for a specific target.
      properties:
        requests:
          description: "List of policies to modify as defined by the `requests`. All requests in the list must follow these restrictions: 1. All schemas in the list must have the same root namespace. 2. All `policyTargetKey.targetResource` values must point to an org unit resource. 3. All `policyTargetKey` values must have the same key names in the ` additionalTargetKeys`. This also means if one of the targets has an empty `additionalTargetKeys` map, all of the targets must have an empty `additionalTargetKeys` map. 4. No two modification requests can reference the same `policySchema` + ` policyTargetKey` pair. "
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest"
          type: array
      type: object
    GoogleChromePolicyVersionsV1CertificateReference:
      description: Error information for removing of a specific certificate on a specific target. A reference to a certificate.
      properties:
        network:
          description: Output only. The name of the referencing network.
          readOnly: true
          type: string
        orgUnitId:
          description: Output only. The obfuscated id of the org unit the referencing network is in.
          readOnly: true
          type: string
      type: object
    GoogleChromePolicyVersionsV1DefineCertificateRequest:
      description: Request object for creating a certificate.
      properties:
        ceritificateName:
          description: Optional. The optional name of the certificate. If not specified, the certificate issuer will be used as the name.
          type: string
        certificate:
          description: Required. The raw contents of the .PEM, .CRT, or .CER file.
          type: string
        settings:
          description: Optional. Certificate settings within the chrome.networks.certificates namespace.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting"
          type: array
        targetResource:
          description: 'Required. The target resource on which this certificate is applied. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
      type: object
    GoogleChromePolicyVersionsV1DefineCertificateResponse:
      description: Response object for creating a certificate.
      properties:
        networkId:
          description: The guid of the certificate created by the action.
          type: string
        settings:
          description: the affiliated settings of the certificate (NOT IMPLEMENTED)
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting"
          type: array
        targetResource:
          description: the resource at which the certificate is defined.
          type: string
      type: object
    GoogleChromePolicyVersionsV1DefineNetworkRequest:
      description: Request object for creating a new network.
      properties:
        name:
          description: Required. Name of the new created network.
          type: string
        settings:
          description: Required. Detailed network settings.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting"
          type: array
        targetResource:
          description: 'Required. The target resource on which this new network will be defined. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
      type: object
    GoogleChromePolicyVersionsV1DefineNetworkResponse:
      description: Response object for creating a network.
      properties:
        networkId:
          description: Network ID of the new created network.
          type: string
        settings:
          description: Detailed network settings of the new created network
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1NetworkSetting"
          type: array
        targetResource:
          description: 'The target resource on which this new network will be defined. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
      type: object
    GoogleChromePolicyVersionsV1DeleteGroupPolicyRequest:
      description: Request parameters for deleting the policy value of a specific group target.
      properties:
        policySchema:
          description: The fully qualified name of the policy schema that is being inherited.
          type: string
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to a Group.
      type: object
    GoogleChromePolicyVersionsV1InheritOrgUnitPolicyRequest:
      description: Request parameters for inheriting policy value of a specific org unit target from the policy value of its parent org unit.
      properties:
        policySchema:
          description: The fully qualified name of the policy schema that is being inherited.
          type: string
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit.
      type: object
    GoogleChromePolicyVersionsV1ListGroupPriorityOrderingRequest:
      description: Request message for listing the group priority ordering of an app.
      properties:
        policyNamespace:
          description: Required. The namespace of the policy type for the request.
          type: string
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target for which we want to retrieve the group priority ordering. The target resource must point to an app.
      type: object
    GoogleChromePolicyVersionsV1ListGroupPriorityOrderingResponse:
      description: Response message for listing the group priority ordering of an app.
      properties:
        groupIds:
          description: Output only. The group IDs, in priority ordering.
          items:
            type: string
          readOnly: true
          type: array
        policyNamespace:
          description: Output only. The namespace of the policy type of the group IDs.
          readOnly: true
          type: string
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Output only. The target resource for which the group priority ordering has been retrieved.
          readOnly: true
      type: object
    GoogleChromePolicyVersionsV1ListPolicySchemasResponse:
      description: Response message for listing policy schemas that match a filter.
      properties:
        nextPageToken:
          description: The page token used to get the next page of policy schemas.
          type: string
        policySchemas:
          description: The list of policy schemas that match the query.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchema"
          type: array
      type: object
    GoogleChromePolicyVersionsV1ModifyGroupPolicyRequest:
      description: Request parameters for modifying a policy value for a specific group target.
      properties:
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to a Group.
        policyValue:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyValue"
          description: The new value for the policy.
        updateMask:
          description: Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'.
          format: google-fieldmask
          type: string
      type: object
    GoogleChromePolicyVersionsV1ModifyOrgUnitPolicyRequest:
      description: Request parameters for modifying a policy value for a specific org unit target.
      properties:
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target for which we want to modify a policy. The target resource must point to an Org Unit.
        policyValue:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyValue"
          description: The new value for the policy.
        updateMask:
          description: Required. Policy fields to update. Only fields in this mask will be updated; other fields in `policy_value` will be ignored (even if they have values). If a field is in this list it must have a value in 'policy_value'.
          format: google-fieldmask
          type: string
      type: object
    GoogleChromePolicyVersionsV1NetworkSetting:
      description: A network setting contains network configurations.
      properties:
        policySchema:
          description: The fully qualified name of the network setting.
          type: string
        value:
          additionalProperties:
            description: Properties of the object.
          description: The value of the network setting.
          type: object
      type: object
    GoogleChromePolicyVersionsV1PolicyModificationFieldError:
      description: Error information for a modification request of a specific field on a specific policy.
      properties:
        error:
          description: Output only. The error message related to the field.
          readOnly: true
          type: string
        field:
          description: Output only. The name of the field with the error.
          readOnly: true
          type: string
      type: object
    GoogleChromePolicyVersionsV1PolicySchema:
      description: Resource representing a policy schema.
      properties:
        accessRestrictions:
          description: Output only. Specific access restrictions related to this policy.
          items:
            type: string
          readOnly: true
          type: array
        additionalTargetKeyNames:
          description: Output only. Additional key names that will be used to identify the target of the policy value. When specifying a `policyTargetKey`, each of the additional keys specified here will have to be included in the `additionalTargetKeys` map.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1AdditionalTargetKeyName"
          readOnly: true
          type: array
        categoryTitle:
          description: Title of the category in which a setting belongs.
          type: string
        definition:
          $ref: "#/components/schemas/Proto2FileDescriptorProto"
          description: Schema definition using proto descriptor.
        fieldDescriptions:
          description: Output only. Detailed description of each field that is part of the schema.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription"
          readOnly: true
          type: array
        name:
          description: "Format: name=customers/{customer}/policySchemas/{schema_namespace}"
          type: string
        notices:
          description: Output only. Special notice messages related to setting certain values in certain fields in the schema.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription"
          readOnly: true
          type: array
        policyApiLifecycle:
          $ref: "#/components/schemas/ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle"
          description: Output only. Current lifecycle information.
          readOnly: true
        policyApiLifeycle:
          $ref: "#/components/schemas/ChromeCrosDpanelAutosettingsProtoPolicyApiLifecycle"
          description: Deprecated field because of typo.
        policyDescription:
          description: Output only. Description about the policy schema for user consumption.
          readOnly: true
          type: string
        schemaName:
          description: Output only. The fully qualified name of the policy schema. This value is used to fill the field `policy_schema` in PolicyValue when calling BatchInheritOrgUnitPolicies BatchModifyOrgUnitPolicies BatchModifyGroupPolicies or BatchDeleteGroupPolicies.
          readOnly: true
          type: string
        supportUri:
          description: Output only. URI to related support article for this schema.
          readOnly: true
          type: string
        validTargetResources:
          description: Output only. Information about applicable target resources for the policy.
          items:
            enum:
              - TARGET_RESOURCE_UNSPECIFIED
              - ORG_UNIT
              - GROUP
            type: string
          readOnly: true
          type: array
      type: object
    GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies:
      description: The field and the value it must have for another field to be allowed to be set.
      properties:
        sourceField:
          description: The source field which this field depends on.
          type: string
        sourceFieldValue:
          description: The value which the source field must have for this field to be allowed to be set.
          type: string
      type: object
    GoogleChromePolicyVersionsV1PolicySchemaFieldDescription:
      description: Provides detailed information for a particular field that is part of a PolicySchema.
      properties:
        defaultValue:
          description: Output only. Client default if the policy is unset.
          readOnly: true
        description:
          description: Deprecated. Use name and field_description instead. The description for the field.
          type: string
        field:
          description: Output only. The name of the field for associated with this description.
          readOnly: true
          type: string
        fieldDependencies:
          description: Output only. Provides a list of fields and values. At least one of the fields must have the corresponding value in order for this field to be allowed to be set.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldDependencies"
          readOnly: true
          type: array
        fieldDescription:
          description: Output only. The description of the field.
          readOnly: true
          type: string
        inputConstraint:
          description: Output only. Any input constraints associated on the values for the field.
          readOnly: true
          type: string
        knownValueDescriptions:
          description: Output only. If the field has a set of known values, this field will provide a description for these values.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription"
          readOnly: true
          type: array
        name:
          description: Output only. The name of the field.
          readOnly: true
          type: string
        nestedFieldDescriptions:
          description: Output only. Provides the description of the fields nested in this field, if the field is a message type that defines multiple fields.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaFieldDescription"
          readOnly: true
          type: array
        requiredItems:
          description: Output only. Provides a list of fields that are required to be set if this field has a certain value.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicySchemaRequiredItems"
          readOnly: true
          type: array
      type: object
    GoogleChromePolicyVersionsV1PolicySchemaFieldKnownValueDescription:
      description: Provides detailed information about a known value that is allowed for a particular field in a PolicySchema.
      properties:
        description:
          description: Output only. Additional description for this value.
          readOnly: true
          type: string
        value:
          description: Output only. The string represenstation of the value that can be set for the field.
          readOnly: true
          type: string
      type: object
    GoogleChromePolicyVersionsV1PolicySchemaNoticeDescription:
      description: Provides special notice messages related to a particular value in a field that is part of a PolicySchema.
      properties:
        acknowledgementRequired:
          description: Output only. Whether the user needs to acknowledge the notice message before the value can be set.
          readOnly: true
          type: boolean
        field:
          description: Output only. The field name associated with the notice.
          readOnly: true
          type: string
        noticeMessage:
          description: Output only. The notice message associate with the value of the field.
          readOnly: true
          type: string
        noticeValue:
          description: Output only. The value of the field that has a notice. When setting the field to this value, the user may be required to acknowledge the notice message in order for the value to be set.
          readOnly: true
          type: string
      type: object
    GoogleChromePolicyVersionsV1PolicySchemaRequiredItems:
      description: The fields that will become required based on the value of this field.
      properties:
        fieldConditions:
          description: The value(s) of the field that provoke required field enforcement. An empty field_conditions implies that any value assigned to this field will provoke required field enforcement.
          items:
            type: string
          type: array
        requiredFields:
          description: The fields that are required as a consequence of the field conditions.
          items:
            type: string
          type: array
      type: object
    GoogleChromePolicyVersionsV1PolicyTargetKey:
      description: The key used to identify the target on which the policy will be applied.
      properties:
        additionalTargetKeys:
          additionalProperties:
            type: string
          description: Map containing the additional target key name and value pairs used to further identify the target of the policy.
          type: object
        targetResource:
          description: 'The target resource on which this policy is applied. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}") * Group ("groups/{group_id}")'
          type: string
      type: object
    GoogleChromePolicyVersionsV1PolicyValue:
      description: A particular value for a policy managed by the service.
      properties:
        policySchema:
          description: The fully qualified name of the policy schema associated with this policy.
          type: string
        value:
          additionalProperties:
            description: Properties of the object.
          description: The value of the policy that is compatible with the schema that it is associated with.
          type: object
      type: object
    GoogleChromePolicyVersionsV1RemoveCertificateErrorDetails:
      description: Details of the errors encountered during a remove certificate request. This message will be returned as part of the details of a google.rpc.Status returned to the user when there is an error in their request.
      properties:
        certificateReferences:
          description: Output only. If the certificate was not removed, a list of references to the certificate that prevented it from being removed. Only unreferenced certificates can be removed.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1CertificateReference"
          readOnly: true
          type: array
      type: object
    GoogleChromePolicyVersionsV1RemoveCertificateRequest:
      description: Request object for removing a certificate.
      properties:
        networkId:
          description: Required. The GUID of the certificate to remove.
          type: string
        targetResource:
          description: 'Required. The target resource on which this certificate will be removed. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
      type: object
    GoogleChromePolicyVersionsV1RemoveCertificateResponse:
      description: Response object for removing a certificate.
      properties: {}
      type: object
    GoogleChromePolicyVersionsV1RemoveNetworkRequest:
      description: Request object for removing a network
      properties:
        networkId:
          description: Required. The GUID of the network to remove.
          type: string
        targetResource:
          description: 'Required. The target resource on which this network will be removed. The following resources are supported: * Organizational Unit ("orgunits/{orgunit_id}")'
          type: string
      type: object
    GoogleChromePolicyVersionsV1RemoveNetworkResponse:
      description: Response object for removing a network.
      properties: {}
      type: object
    GoogleChromePolicyVersionsV1ResolveRequest:
      description: Request message for getting the resolved policy value for a specific target.
      properties:
        pageSize:
          description: The maximum number of policies to return, defaults to 100 and has a maximum of 1000.
          format: int32
          type: integer
        pageToken:
          description: The page token used to retrieve a specific page of the request.
          type: string
        policySchemaFilter:
          description: 'The schema filter to apply to the resolve request. Specify a schema name to view a particular schema, for example: chrome.users.ShowLogoutButton Wildcards are supported, but only in the leaf portion of the schema name. Wildcards cannot be used in namespace directly. Please read https://developers.google.com/chrome/policy/guides/policy-schemas for details on schema namespaces. For example: Valid: "chrome.users.*", "chrome.users.apps.*", "chrome.printers.*" Invalid: "*", "*.users", "chrome.*", "chrome.*.apps.*"'
          type: string
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target resource on which the policies should be resolved. The target resource must point to an Org Unit.
      type: object
    GoogleChromePolicyVersionsV1ResolveResponse:
      description: Response message for getting the resolved policy value for a specific target.
      properties:
        nextPageToken:
          description: The page token used to get the next set of resolved policies found by the request.
          type: string
        resolvedPolicies:
          description: The list of resolved policies found by the resolve request.
          items:
            $ref: "#/components/schemas/GoogleChromePolicyVersionsV1ResolvedPolicy"
          type: array
      type: object
    GoogleChromePolicyVersionsV1ResolvedPolicy:
      description: The resolved value of a policy for a given target.
      properties:
        addedSourceKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: "Output only. The added source key establishes at which level an entity was explicitly added for management. This is useful for certain type of policies that are only applied if they are explicitly added for management. For example: apps and networks. An entity can only be deleted from management in an Organizational Unit that it was explicitly added to. If this is not present it means that the policy is managed without the need to explicitly add an entity, for example: standard user or device policies."
          readOnly: true
        sourceKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Output only. The source resource from which this policy value is obtained. May be the same as `targetKey` if the policy is directly modified on the target, otherwise it would be another resource from which the policy gets its value (if applicable). If not present, the source is the default value for the customer.
          readOnly: true
        targetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Output only. The target resource for which the resolved policy value applies.
          readOnly: true
        value:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyValue"
          description: Output only. The resolved value of the policy.
          readOnly: true
      type: object
    GoogleChromePolicyVersionsV1UpdateGroupPriorityOrderingRequest:
      description: Request message for updating the group priority ordering of an app.
      properties:
        groupIds:
          description: Required. The group IDs, in desired priority ordering.
          items:
            type: string
          type: array
        policyNamespace:
          description: Required. The namespace of the policy type for the request.
          type: string
        policyTargetKey:
          $ref: "#/components/schemas/GoogleChromePolicyVersionsV1PolicyTargetKey"
          description: Required. The key of the target for which we want to update the group priority ordering. The target resource must point to an app.
      type: object
    GoogleChromePolicyVersionsV1UploadPolicyFileRequest:
      description: Request message for uploading a file for a policy.
      properties:
        policyField:
          description: Required. The fully qualified policy schema and field name this file is uploaded for. This information will be used to validate the content type of the file.
          type: string
      type: object
    GoogleChromePolicyVersionsV1UploadPolicyFileResponse:
      description: Response message for downloading an uploaded file.
      properties:
        downloadUri:
          description: The uri for end user to download the file.
          type: string
      type: object
    GoogleProtobufEmpty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    GoogleTypeDate:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    Proto2DescriptorProto:
      description: Describes a message type.
      properties:
        enumType:
          items:
            $ref: "#/components/schemas/Proto2EnumDescriptorProto"
          type: array
        field:
          items:
            $ref: "#/components/schemas/Proto2FieldDescriptorProto"
          type: array
        name:
          type: string
        nestedType:
          items:
            $ref: "#/components/schemas/Proto2DescriptorProto"
          type: array
        oneofDecl:
          items:
            $ref: "#/components/schemas/Proto2OneofDescriptorProto"
          type: array
      type: object
    Proto2EnumDescriptorProto:
      description: Describes an enum type.
      properties:
        name:
          type: string
        value:
          items:
            $ref: "#/components/schemas/Proto2EnumValueDescriptorProto"
          type: array
      type: object
    Proto2EnumValueDescriptorProto:
      description: Describes a value within an enum.
      properties:
        name:
          type: string
        number:
          format: int32
          type: integer
      type: object
    Proto2FieldDescriptorProto:
      description: Describes a field within a message.
      properties:
        defaultValue:
          description: For numeric types, contains the original text representation of the value. For booleans, "true" or "false". For strings, contains the default text contents (not escaped in any way). For bytes, contains the C escaped value. All bytes >= 128 are escaped.
          type: string
        jsonName:
          description: JSON name of this field. The value is set by protocol compiler. If the user has set a "json_name" option on this field, that option's value will be used. Otherwise, it's deduced from the field's name by converting it to camelCase.
          type: string
        label:
          enum:
            - LABEL_OPTIONAL
            - LABEL_REQUIRED
            - LABEL_REPEATED
          type: string
        name:
          type: string
        number:
          format: int32
          type: integer
        oneofIndex:
          description: If set, gives the index of a oneof in the containing type's oneof_decl list. This field is a member of that oneof.
          format: int32
          type: integer
        proto3Optional:
          description: If true, this is a proto3 "optional". When a proto3 field is optional, it tracks presence regardless of field type. When proto3_optional is true, this field must be belong to a oneof to signal to old proto3 clients that presence is tracked for this field. This oneof is known as a "synthetic" oneof, and this field must be its sole member (each proto3 optional field gets its own synthetic oneof). Synthetic oneofs exist in the descriptor only, and do not generate any API. Synthetic oneofs must be ordered after all "real" oneofs. For message fields, proto3_optional doesn't create any semantic change, since non-repeated message fields always track presence. However it still indicates the semantic detail of whether the user wrote "optional" or not. This can be useful for round-tripping the .proto file. For consistency we give message fields a synthetic oneof also, even though it is not required to track presence. This is especially important because the parser can't tell if a field is a message or an enum, so it must always create a synthetic oneof. Proto2 optional fields do not set this flag, because they already indicate optional with `LABEL_OPTIONAL`.
          type: boolean
        type:
          description: If type_name is set, this need not be set. If both this and type_name are set, this must be one of TYPE_ENUM, TYPE_MESSAGE or TYPE_GROUP.
          enum:
            - TYPE_DOUBLE
            - TYPE_FLOAT
            - TYPE_INT64
            - TYPE_UINT64
            - TYPE_INT32
            - TYPE_FIXED64
            - TYPE_FIXED32
            - TYPE_BOOL
            - TYPE_STRING
            - TYPE_GROUP
            - TYPE_MESSAGE
            - TYPE_BYTES
            - TYPE_UINT32
            - TYPE_ENUM
            - TYPE_SFIXED32
            - TYPE_SFIXED64
            - TYPE_SINT32
            - TYPE_SINT64
          type: string
        typeName:
          description: For message and enum types, this is the name of the type. If the name starts with a '.', it is fully-qualified. Otherwise, C++-like scoping rules are used to find the type (i.e. first the nested types within this message are searched, then within the parent, on up to the root namespace).
          type: string
      type: object
    Proto2FileDescriptorProto:
      description: Describes a complete .proto file.
      properties:
        enumType:
          items:
            $ref: "#/components/schemas/Proto2EnumDescriptorProto"
          type: array
        messageType:
          description: All top-level definitions in this file.
          items:
            $ref: "#/components/schemas/Proto2DescriptorProto"
          type: array
        name:
          description: file name, relative to root of source tree
          type: string
        package:
          description: e.g. "foo", "foo.bar", etc.
          type: string
        syntax:
          description: The syntax of the proto file. The supported values are "proto2", "proto3", and "editions". If `edition` is present, this value must be "editions".
          type: string
      type: object
    Proto2OneofDescriptorProto:
      description: Describes a oneof.
      properties:
        name:
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/chrome.management.policy: See, edit, create or delete policies applied to Chrome OS and Chrome Browsers managed within your organization
            https://www.googleapis.com/auth/chrome.management.policy.readonly: See policies applied to Chrome OS and Chrome Browsers managed within your organization
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/chrome.management.policy: See, edit, create or delete policies applied to Chrome OS and Chrome Browsers managed within your organization
            https://www.googleapis.com/auth/chrome.management.policy.readonly: See policies applied to Chrome OS and Chrome Browsers managed within your organization
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
