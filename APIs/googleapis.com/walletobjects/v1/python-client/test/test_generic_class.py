# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.generic_class import GenericClass

class TestGenericClass(unittest.TestCase):
    """GenericClass unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenericClass:
        """Test GenericClass
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenericClass`
        """
        model = GenericClass()
        if include_optional:
            return GenericClass(
                callback_options = openapi_client.models.callback_options.CallbackOptions(
                    update_request_url = '', 
                    url = '', ),
                class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                    card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                        first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                            field_selector = openapi_client.models.field_selector.FieldSelector(
                                fields = [
                                    openapi_client.models.field_reference.FieldReference(
                                        date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                        field_path = '', )
                                    ], ), ), 
                        first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                        second_top_detail = , ), 
                    card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                        card_row_template_infos = [
                            openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                    item = openapi_client.models.template_item.TemplateItem(
                                        first_value = openapi_client.models.field_selector.FieldSelector(), 
                                        predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                        second_value = , ), ), 
                                three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                    end_item = openapi_client.models.template_item.TemplateItem(
                                        predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                    middle_item = , 
                                    start_item = , ), 
                                two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                            ], ), 
                    details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                        details_item_infos = [
                            openapi_client.models.details_item_info.DetailsItemInfo()
                            ], ), 
                    list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                        first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                            field_option = , 
                            transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                        second_row_option = , 
                        third_row_option = , ), ),
                enable_smart_tap = True,
                id = '',
                image_modules_data = [
                    openapi_client.models.image_module_data.ImageModuleData(
                        id = '', 
                        main_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                uri = '', ), ), )
                    ],
                links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                    uris = [
                        openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            uri = '', )
                        ], ),
                messages = [
                    openapi_client.models.message.Message(
                        body = '', 
                        display_interval = openapi_client.models.time_interval.TimeInterval(
                            end = openapi_client.models.date_time.DateTime(
                                date = '', ), 
                            kind = '', 
                            start = openapi_client.models.date_time.DateTime(
                                date = '', ), ), 
                        header = '', 
                        id = '', 
                        kind = '', 
                        localized_body = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        localized_header = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                    ],
                multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED',
                redemption_issuers = [
                    ''
                    ],
                security_animation = openapi_client.models.security_animation.SecurityAnimation(
                    animation_type = 'ANIMATION_UNSPECIFIED', ),
                text_modules_data = [
                    openapi_client.models.text_module_data.TextModuleData(
                        body = '', 
                        header = '', 
                        id = '', 
                        localized_body = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        localized_header = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), )
                    ],
                view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED'
            )
        else:
            return GenericClass(
        )
        """

    def testGenericClass(self):
        """Test GenericClass"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
