# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ticket_leg import TicketLeg

class TestTicketLeg(unittest.TestCase):
    """TicketLeg unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TicketLeg:
        """Test TicketLeg
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TicketLeg`
        """
        model = TicketLeg()
        if include_optional:
            return TicketLeg(
                arrival_date_time = '',
                carriage = '',
                departure_date_time = '',
                destination_name = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                destination_station_code = '',
                fare_name = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                origin_name = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                origin_station_code = '',
                platform = '',
                ticket_seat = openapi_client.models.ticket_seat.TicketSeat(
                    coach = '', 
                    custom_fare_class = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    fare_class = 'FARE_CLASS_UNSPECIFIED', 
                    seat = '', 
                    seat_assignment = openapi_client.models.localized_string.LocalizedString(
                        kind = '', ), ),
                ticket_seats = [
                    openapi_client.models.ticket_seat.TicketSeat(
                        coach = '', 
                        custom_fare_class = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        fare_class = 'FARE_CLASS_UNSPECIFIED', 
                        seat = '', 
                        seat_assignment = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), )
                    ],
                transit_operator_name = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                transit_terminus_name = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                zone = ''
            )
        else:
            return TicketLeg(
        )
        """

    def testTicketLeg(self):
        """Test TicketLeg"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
