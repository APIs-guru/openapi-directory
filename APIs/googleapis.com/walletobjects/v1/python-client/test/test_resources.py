# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.resources import Resources

class TestResources(unittest.TestCase):
    """Resources unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Resources:
        """Test Resources
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Resources`
        """
        model = Resources()
        if include_optional:
            return Resources(
                event_ticket_classes = [
                    openapi_client.models.event_ticket_class.EventTicketClass(
                        allow_multiple_users_per_object = True, 
                        callback_options = openapi_client.models.callback_options.CallbackOptions(
                            update_request_url = '', 
                            url = '', ), 
                        class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                            card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                    field_selector = openapi_client.models.field_selector.FieldSelector(
                                        fields = [
                                            openapi_client.models.field_reference.FieldReference(
                                                date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                field_path = '', )
                                            ], ), ), 
                                first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                second_top_detail = , ), 
                            card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                card_row_template_infos = [
                                    openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                        one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                            item = openapi_client.models.template_item.TemplateItem(
                                                first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                second_value = , ), ), 
                                        three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                            end_item = openapi_client.models.template_item.TemplateItem(
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                            middle_item = , 
                                            start_item = , ), 
                                        two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                    ], ), 
                            details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                details_item_infos = [
                                    openapi_client.models.details_item_info.DetailsItemInfo()
                                    ], ), 
                            list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                    field_option = , 
                                    transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                second_row_option = , 
                                third_row_option = , ), ), 
                        confirmation_code_label = 'CONFIRMATION_CODE_LABEL_UNSPECIFIED', 
                        country_code = '', 
                        custom_confirmation_code_label = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        custom_gate_label = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        custom_row_label = , 
                        custom_seat_label = , 
                        custom_section_label = , 
                        date_time = openapi_client.models.event_date_time.EventDateTime(
                            custom_doors_open_label = , 
                            doors_open = '', 
                            doors_open_label = 'DOORS_OPEN_LABEL_UNSPECIFIED', 
                            end = '', 
                            kind = '', 
                            start = '', ), 
                        enable_smart_tap = True, 
                        event_id = '', 
                        event_name = , 
                        fine_print = , 
                        gate_label = 'GATE_LABEL_UNSPECIFIED', 
                        hero_image = openapi_client.models.image.Image(
                            content_description = , 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = , 
                                uri = '', ), ), 
                        hex_background_color = '', 
                        homepage_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', 
                                main_image = openapi_client.models.image.Image(
                                    kind = '', ), )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            label_value_rows = [
                                openapi_client.models.label_value_row.LabelValueRow(
                                    columns = [
                                        openapi_client.models.label_value.LabelValue(
                                            label = '', 
                                            localized_label = , 
                                            localized_value = , 
                                            value = '', )
                                        ], )
                                ], 
                            show_last_update_time = True, ), 
                        issuer_name = '', 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                            uris = [
                                openapi_client.models.uri.Uri(
                                    description = '', 
                                    id = '', 
                                    kind = '', 
                                    uri = '', )
                                ], ), 
                        localized_issuer_name = , 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        logo = , 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                display_interval = openapi_client.models.time_interval.TimeInterval(
                                    end = openapi_client.models.date_time.DateTime(
                                        date = '', ), 
                                    kind = '', 
                                    start = openapi_client.models.date_time.DateTime(
                                        date = '', ), ), 
                                header = '', 
                                id = '', 
                                kind = '', 
                                localized_body = , 
                                localized_header = , 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                        redemption_issuers = [
                            ''
                            ], 
                        review = openapi_client.models.review.Review(
                            comments = '', ), 
                        review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                        row_label = 'ROW_LABEL_UNSPECIFIED', 
                        seat_label = 'SEAT_LABEL_UNSPECIFIED', 
                        section_label = 'SECTION_LABEL_UNSPECIFIED', 
                        security_animation = openapi_client.models.security_animation.SecurityAnimation(
                            animation_type = 'ANIMATION_UNSPECIFIED', ), 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        venue = openapi_client.models.event_venue.EventVenue(
                            address = , 
                            kind = '', 
                            name = , ), 
                        version = '', 
                        view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                        wide_logo = , 
                        word_mark = , )
                    ],
                event_ticket_objects = [
                    openapi_client.models.event_ticket_object.EventTicketObject(
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        class_id = '', 
                        class_reference = openapi_client.models.event_ticket_class.EventTicketClass(
                            allow_multiple_users_per_object = True, 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            confirmation_code_label = 'CONFIRMATION_CODE_LABEL_UNSPECIFIED', 
                            country_code = '', 
                            custom_confirmation_code_label = , 
                            custom_gate_label = , 
                            custom_row_label = , 
                            custom_seat_label = , 
                            custom_section_label = , 
                            date_time = openapi_client.models.event_date_time.EventDateTime(
                                custom_doors_open_label = , 
                                doors_open = '', 
                                doors_open_label = 'DOORS_OPEN_LABEL_UNSPECIFIED', 
                                end = '', 
                                kind = '', 
                                start = '', ), 
                            enable_smart_tap = True, 
                            event_id = '', 
                            event_name = , 
                            fine_print = , 
                            gate_label = 'GATE_LABEL_UNSPECIFIED', 
                            hero_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            hex_background_color = '', 
                            homepage_uri = openapi_client.models.uri.Uri(
                                id = '', 
                                kind = '', 
                                uri = '', ), 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            kind = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            localized_issuer_name = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            logo = , 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = openapi_client.models.date_time.DateTime(
                                            date = '', ), ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            row_label = 'ROW_LABEL_UNSPECIFIED', 
                            seat_label = 'SEAT_LABEL_UNSPECIFIED', 
                            section_label = 'SECTION_LABEL_UNSPECIFIED', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            venue = openapi_client.models.event_venue.EventVenue(
                                address = , 
                                kind = '', 
                                name = , ), 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            wide_logo = , 
                            word_mark = , ), 
                        disable_expiration_notification = True, 
                        face_value = openapi_client.models.money.Money(
                            currency_code = '', 
                            kind = '', 
                            micros = '', ), 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        hex_background_color = '', 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        kind = '', 
                        linked_offer_ids = [
                            ''
                            ], 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        reservation_info = openapi_client.models.event_reservation_info.EventReservationInfo(
                            confirmation_code = '', 
                            kind = '', ), 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        seat_info = openapi_client.models.event_seat.EventSeat(
                            gate = , 
                            kind = '', 
                            row = , 
                            seat = , 
                            section = , ), 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        ticket_holder_name = '', 
                        ticket_number = '', 
                        ticket_type = , 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ],
                flight_classes = [
                    openapi_client.models.flight_class.FlightClass(
                        allow_multiple_users_per_object = True, 
                        boarding_and_seating_policy = openapi_client.models.boarding_and_seating_policy.BoardingAndSeatingPolicy(
                            boarding_policy = 'BOARDING_POLICY_UNSPECIFIED', 
                            kind = '', 
                            seat_class_policy = 'SEAT_CLASS_POLICY_UNSPECIFIED', ), 
                        callback_options = openapi_client.models.callback_options.CallbackOptions(
                            update_request_url = '', 
                            url = '', ), 
                        class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                            card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                    field_selector = openapi_client.models.field_selector.FieldSelector(
                                        fields = [
                                            openapi_client.models.field_reference.FieldReference(
                                                date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                field_path = '', )
                                            ], ), ), 
                                first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                second_top_detail = , ), 
                            card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                card_row_template_infos = [
                                    openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                        one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                            item = openapi_client.models.template_item.TemplateItem(
                                                first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                second_value = , ), ), 
                                        three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                            end_item = openapi_client.models.template_item.TemplateItem(
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                            middle_item = , 
                                            start_item = , ), 
                                        two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                    ], ), 
                            details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                details_item_infos = [
                                    openapi_client.models.details_item_info.DetailsItemInfo()
                                    ], ), 
                            list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                    field_option = , 
                                    transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                second_row_option = , 
                                third_row_option = , ), ), 
                        country_code = '', 
                        destination = openapi_client.models.airport_info.AirportInfo(
                            airport_iata_code = '', 
                            airport_name_override = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            gate = '', 
                            kind = '', 
                            terminal = '', ), 
                        enable_smart_tap = True, 
                        flight_header = openapi_client.models.flight_header.FlightHeader(
                            carrier = openapi_client.models.flight_carrier.FlightCarrier(
                                airline_alliance_logo = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        kind = '', ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = , 
                                        uri = '', ), ), 
                                airline_logo = openapi_client.models.image.Image(
                                    kind = '', ), 
                                airline_name = , 
                                carrier_iata_code = '', 
                                carrier_icao_code = '', 
                                kind = '', 
                                wide_airline_logo = , ), 
                            flight_number = '', 
                            flight_number_display_override = '', 
                            kind = '', 
                            operating_carrier = openapi_client.models.flight_carrier.FlightCarrier(
                                carrier_iata_code = '', 
                                carrier_icao_code = '', 
                                kind = '', ), 
                            operating_flight_number = '', ), 
                        flight_status = 'FLIGHT_STATUS_UNSPECIFIED', 
                        hero_image = , 
                        hex_background_color = '', 
                        homepage_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', 
                                main_image = , )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            label_value_rows = [
                                openapi_client.models.label_value_row.LabelValueRow(
                                    columns = [
                                        openapi_client.models.label_value.LabelValue(
                                            label = '', 
                                            localized_label = , 
                                            localized_value = , 
                                            value = '', )
                                        ], )
                                ], 
                            show_last_update_time = True, ), 
                        issuer_name = '', 
                        kind = '', 
                        language_override = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                            uris = [
                                openapi_client.models.uri.Uri(
                                    description = '', 
                                    id = '', 
                                    kind = '', 
                                    uri = '', )
                                ], ), 
                        local_boarding_date_time = '', 
                        local_estimated_or_actual_arrival_date_time = '', 
                        local_estimated_or_actual_departure_date_time = '', 
                        local_gate_closing_date_time = '', 
                        local_scheduled_arrival_date_time = '', 
                        local_scheduled_departure_date_time = '', 
                        localized_issuer_name = , 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                display_interval = openapi_client.models.time_interval.TimeInterval(
                                    end = openapi_client.models.date_time.DateTime(
                                        date = '', ), 
                                    kind = '', 
                                    start = openapi_client.models.date_time.DateTime(
                                        date = '', ), ), 
                                header = '', 
                                id = '', 
                                kind = '', 
                                localized_body = , 
                                localized_header = , 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                        origin = openapi_client.models.airport_info.AirportInfo(
                            airport_iata_code = '', 
                            gate = '', 
                            kind = '', 
                            terminal = '', ), 
                        redemption_issuers = [
                            ''
                            ], 
                        review = openapi_client.models.review.Review(
                            comments = '', ), 
                        review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                        security_animation = openapi_client.models.security_animation.SecurityAnimation(
                            animation_type = 'ANIMATION_UNSPECIFIED', ), 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        version = '', 
                        view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                        word_mark = , )
                    ],
                flight_objects = [
                    openapi_client.models.flight_object.FlightObject(
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        boarding_and_seating_info = openapi_client.models.boarding_and_seating_info.BoardingAndSeatingInfo(
                            boarding_door = 'BOARDING_DOOR_UNSPECIFIED', 
                            boarding_group = '', 
                            boarding_position = '', 
                            boarding_privilege_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            kind = '', 
                            seat_assignment = , 
                            seat_class = '', 
                            seat_number = '', 
                            sequence_number = '', ), 
                        class_id = '', 
                        class_reference = openapi_client.models.flight_class.FlightClass(
                            allow_multiple_users_per_object = True, 
                            boarding_and_seating_policy = openapi_client.models.boarding_and_seating_policy.BoardingAndSeatingPolicy(
                                boarding_policy = 'BOARDING_POLICY_UNSPECIFIED', 
                                kind = '', 
                                seat_class_policy = 'SEAT_CLASS_POLICY_UNSPECIFIED', ), 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            country_code = '', 
                            destination = openapi_client.models.airport_info.AirportInfo(
                                airport_iata_code = '', 
                                airport_name_override = , 
                                gate = '', 
                                kind = '', 
                                terminal = '', ), 
                            enable_smart_tap = True, 
                            flight_header = openapi_client.models.flight_header.FlightHeader(
                                carrier = openapi_client.models.flight_carrier.FlightCarrier(
                                    airline_alliance_logo = , 
                                    airline_logo = , 
                                    airline_name = , 
                                    carrier_iata_code = '', 
                                    carrier_icao_code = '', 
                                    kind = '', 
                                    wide_airline_logo = , ), 
                                flight_number = '', 
                                flight_number_display_override = '', 
                                kind = '', 
                                operating_carrier = openapi_client.models.flight_carrier.FlightCarrier(
                                    carrier_iata_code = '', 
                                    carrier_icao_code = '', 
                                    kind = '', ), 
                                operating_flight_number = '', ), 
                            flight_status = 'FLIGHT_STATUS_UNSPECIFIED', 
                            hero_image = , 
                            hex_background_color = '', 
                            homepage_uri = openapi_client.models.uri.Uri(
                                id = '', 
                                kind = '', 
                                uri = '', ), 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            kind = '', 
                            language_override = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            local_boarding_date_time = '', 
                            local_estimated_or_actual_arrival_date_time = '', 
                            local_estimated_or_actual_departure_date_time = '', 
                            local_gate_closing_date_time = '', 
                            local_scheduled_arrival_date_time = '', 
                            local_scheduled_departure_date_time = '', 
                            localized_issuer_name = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = openapi_client.models.date_time.DateTime(
                                            date = '', ), ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            origin = openapi_client.models.airport_info.AirportInfo(
                                airport_iata_code = '', 
                                gate = '', 
                                kind = '', 
                                terminal = '', ), 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            word_mark = , ), 
                        disable_expiration_notification = True, 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        hex_background_color = '', 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        passenger_name = '', 
                        reservation_info = openapi_client.models.reservation_info.ReservationInfo(
                            confirmation_code = '', 
                            eticket_number = '', 
                            frequent_flyer_info = openapi_client.models.frequent_flyer_info.FrequentFlyerInfo(
                                frequent_flyer_number = '', 
                                frequent_flyer_program_name = , 
                                kind = '', ), 
                            kind = '', ), 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        security_program_logo = , 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ],
                gift_card_classes = [
                    openapi_client.models.gift_card_class.GiftCardClass(
                        allow_barcode_redemption = True, 
                        allow_multiple_users_per_object = True, 
                        callback_options = openapi_client.models.callback_options.CallbackOptions(
                            update_request_url = '', 
                            url = '', ), 
                        card_number_label = '', 
                        class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                            card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                    field_selector = openapi_client.models.field_selector.FieldSelector(
                                        fields = [
                                            openapi_client.models.field_reference.FieldReference(
                                                date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                field_path = '', )
                                            ], ), ), 
                                first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                second_top_detail = , ), 
                            card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                card_row_template_infos = [
                                    openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                        one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                            item = openapi_client.models.template_item.TemplateItem(
                                                first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                second_value = , ), ), 
                                        three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                            end_item = openapi_client.models.template_item.TemplateItem(
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                            middle_item = , 
                                            start_item = , ), 
                                        two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                    ], ), 
                            details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                details_item_infos = [
                                    openapi_client.models.details_item_info.DetailsItemInfo()
                                    ], ), 
                            list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                    field_option = , 
                                    transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                second_row_option = , 
                                third_row_option = , ), ), 
                        country_code = '', 
                        enable_smart_tap = True, 
                        event_number_label = '', 
                        hero_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                uri = '', ), ), 
                        hex_background_color = '', 
                        homepage_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', 
                                main_image = openapi_client.models.image.Image(
                                    kind = '', ), )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            label_value_rows = [
                                openapi_client.models.label_value_row.LabelValueRow(
                                    columns = [
                                        openapi_client.models.label_value.LabelValue(
                                            label = '', 
                                            localized_label = , 
                                            localized_value = , 
                                            value = '', )
                                        ], )
                                ], 
                            show_last_update_time = True, ), 
                        issuer_name = '', 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                            uris = [
                                openapi_client.models.uri.Uri(
                                    description = '', 
                                    id = '', 
                                    kind = '', 
                                    uri = '', )
                                ], ), 
                        localized_card_number_label = , 
                        localized_event_number_label = , 
                        localized_issuer_name = , 
                        localized_merchant_name = , 
                        localized_pin_label = , 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        merchant_name = '', 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                display_interval = openapi_client.models.time_interval.TimeInterval(
                                    end = openapi_client.models.date_time.DateTime(
                                        date = '', ), 
                                    kind = '', 
                                    start = openapi_client.models.date_time.DateTime(
                                        date = '', ), ), 
                                header = '', 
                                id = '', 
                                kind = '', 
                                localized_body = , 
                                localized_header = , 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                        pin_label = '', 
                        program_logo = , 
                        redemption_issuers = [
                            ''
                            ], 
                        review = openapi_client.models.review.Review(
                            comments = '', ), 
                        review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                        security_animation = openapi_client.models.security_animation.SecurityAnimation(
                            animation_type = 'ANIMATION_UNSPECIFIED', ), 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        version = '', 
                        view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                        wide_program_logo = , 
                        word_mark = , )
                    ],
                gift_card_objects = [
                    openapi_client.models.gift_card_object.GiftCardObject(
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        balance = openapi_client.models.money.Money(
                            currency_code = '', 
                            kind = '', 
                            micros = '', ), 
                        balance_update_time = openapi_client.models.date_time.DateTime(
                            date = '', ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        card_number = '', 
                        class_id = '', 
                        class_reference = openapi_client.models.gift_card_class.GiftCardClass(
                            allow_barcode_redemption = True, 
                            allow_multiple_users_per_object = True, 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            card_number_label = '', 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            country_code = '', 
                            enable_smart_tap = True, 
                            event_number_label = '', 
                            hero_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            hex_background_color = '', 
                            homepage_uri = openapi_client.models.uri.Uri(
                                id = '', 
                                kind = '', 
                                uri = '', ), 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            kind = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            localized_card_number_label = , 
                            localized_event_number_label = , 
                            localized_issuer_name = , 
                            localized_merchant_name = , 
                            localized_pin_label = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            merchant_name = '', 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = , ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            pin_label = '', 
                            program_logo = , 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            wide_program_logo = , 
                            word_mark = , ), 
                        disable_expiration_notification = True, 
                        event_number = '', 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        pin = '', 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ],
                loyalty_classes = [
                    openapi_client.models.loyalty_class.LoyaltyClass(
                        account_id_label = '', 
                        account_name_label = '', 
                        allow_multiple_users_per_object = True, 
                        callback_options = openapi_client.models.callback_options.CallbackOptions(
                            update_request_url = '', 
                            url = '', ), 
                        class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                            card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                    field_selector = openapi_client.models.field_selector.FieldSelector(
                                        fields = [
                                            openapi_client.models.field_reference.FieldReference(
                                                date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                field_path = '', )
                                            ], ), ), 
                                first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                second_top_detail = , ), 
                            card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                card_row_template_infos = [
                                    openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                        one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                            item = openapi_client.models.template_item.TemplateItem(
                                                first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                second_value = , ), ), 
                                        three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                            end_item = openapi_client.models.template_item.TemplateItem(
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                            middle_item = , 
                                            start_item = , ), 
                                        two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                    ], ), 
                            details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                details_item_infos = [
                                    openapi_client.models.details_item_info.DetailsItemInfo()
                                    ], ), 
                            list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                    field_option = , 
                                    transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                second_row_option = , 
                                third_row_option = , ), ), 
                        country_code = '', 
                        discoverable_program = openapi_client.models.discoverable_program.DiscoverableProgram(
                            merchant_signin_info = openapi_client.models.discoverable_program_merchant_signin_info.DiscoverableProgramMerchantSigninInfo(
                                signin_website = openapi_client.models.uri.Uri(
                                    description = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    uri = '', ), ), 
                            merchant_signup_info = openapi_client.models.discoverable_program_merchant_signup_info.DiscoverableProgramMerchantSignupInfo(
                                signup_shared_datas = [
                                    'SHARED_DATA_TYPE_UNSPECIFIED'
                                    ], 
                                signup_website = openapi_client.models.uri.Uri(
                                    description = '', 
                                    id = '', 
                                    kind = '', 
                                    uri = '', ), ), 
                            state = 'STATE_UNSPECIFIED', ), 
                        enable_smart_tap = True, 
                        hero_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                kind = '', ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                uri = '', ), ), 
                        hex_background_color = '', 
                        homepage_uri = , 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', 
                                main_image = openapi_client.models.image.Image(
                                    kind = '', ), )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            label_value_rows = [
                                openapi_client.models.label_value_row.LabelValueRow(
                                    columns = [
                                        openapi_client.models.label_value.LabelValue(
                                            label = '', 
                                            localized_label = , 
                                            localized_value = , 
                                            value = '', )
                                        ], )
                                ], 
                            show_last_update_time = True, ), 
                        issuer_name = '', 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                            uris = [
                                
                                ], ), 
                        localized_account_id_label = , 
                        localized_account_name_label = , 
                        localized_issuer_name = , 
                        localized_program_name = , 
                        localized_rewards_tier = , 
                        localized_rewards_tier_label = , 
                        localized_secondary_rewards_tier = , 
                        localized_secondary_rewards_tier_label = , 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                display_interval = openapi_client.models.time_interval.TimeInterval(
                                    end = openapi_client.models.date_time.DateTime(
                                        date = '', ), 
                                    kind = '', 
                                    start = openapi_client.models.date_time.DateTime(
                                        date = '', ), ), 
                                header = '', 
                                id = '', 
                                kind = '', 
                                localized_body = , 
                                localized_header = , 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                        program_logo = , 
                        program_name = '', 
                        redemption_issuers = [
                            ''
                            ], 
                        review = openapi_client.models.review.Review(
                            comments = '', ), 
                        review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                        rewards_tier = '', 
                        rewards_tier_label = '', 
                        secondary_rewards_tier = '', 
                        secondary_rewards_tier_label = '', 
                        security_animation = openapi_client.models.security_animation.SecurityAnimation(
                            animation_type = 'ANIMATION_UNSPECIFIED', ), 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        version = '', 
                        view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                        wide_program_logo = , 
                        word_mark = , )
                    ],
                loyalty_objects = [
                    openapi_client.models.loyalty_object.LoyaltyObject(
                        account_id = '', 
                        account_name = '', 
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        class_id = '', 
                        class_reference = openapi_client.models.loyalty_class.LoyaltyClass(
                            account_id_label = '', 
                            account_name_label = '', 
                            allow_multiple_users_per_object = True, 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            country_code = '', 
                            discoverable_program = openapi_client.models.discoverable_program.DiscoverableProgram(
                                merchant_signin_info = openapi_client.models.discoverable_program_merchant_signin_info.DiscoverableProgramMerchantSigninInfo(
                                    signin_website = openapi_client.models.uri.Uri(
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                merchant_signup_info = openapi_client.models.discoverable_program_merchant_signup_info.DiscoverableProgramMerchantSignupInfo(
                                    signup_shared_datas = [
                                        'SHARED_DATA_TYPE_UNSPECIFIED'
                                        ], 
                                    signup_website = , ), 
                                state = 'STATE_UNSPECIFIED', ), 
                            enable_smart_tap = True, 
                            hero_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            hex_background_color = '', 
                            homepage_uri = , 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            kind = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            localized_account_id_label = , 
                            localized_account_name_label = , 
                            localized_issuer_name = , 
                            localized_program_name = , 
                            localized_rewards_tier = , 
                            localized_rewards_tier_label = , 
                            localized_secondary_rewards_tier = , 
                            localized_secondary_rewards_tier_label = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = openapi_client.models.date_time.DateTime(
                                            date = '', ), ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            program_logo = , 
                            program_name = '', 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            rewards_tier = '', 
                            rewards_tier_label = '', 
                            secondary_rewards_tier = '', 
                            secondary_rewards_tier_label = '', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            wide_program_logo = , 
                            word_mark = , ), 
                        disable_expiration_notification = True, 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        kind = '', 
                        linked_offer_ids = [
                            ''
                            ], 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        loyalty_points = openapi_client.models.loyalty_points.LoyaltyPoints(
                            balance = openapi_client.models.loyalty_points_balance.LoyaltyPointsBalance(
                                double = 1.337, 
                                int = 56, 
                                money = openapi_client.models.money.Money(
                                    currency_code = '', 
                                    kind = '', 
                                    micros = '', ), 
                                string = '', ), 
                            label = '', ), 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        secondary_loyalty_points = openapi_client.models.loyalty_points.LoyaltyPoints(
                            label = '', ), 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ],
                offer_classes = [
                    openapi_client.models.offer_class.OfferClass(
                        allow_multiple_users_per_object = True, 
                        callback_options = openapi_client.models.callback_options.CallbackOptions(
                            update_request_url = '', 
                            url = '', ), 
                        class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                            card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                    field_selector = openapi_client.models.field_selector.FieldSelector(
                                        fields = [
                                            openapi_client.models.field_reference.FieldReference(
                                                date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                field_path = '', )
                                            ], ), ), 
                                first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                second_top_detail = , ), 
                            card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                card_row_template_infos = [
                                    openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                        one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                            item = openapi_client.models.template_item.TemplateItem(
                                                first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                second_value = , ), ), 
                                        three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                            end_item = openapi_client.models.template_item.TemplateItem(
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                            middle_item = , 
                                            start_item = , ), 
                                        two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                    ], ), 
                            details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                details_item_infos = [
                                    openapi_client.models.details_item_info.DetailsItemInfo()
                                    ], ), 
                            list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                    field_option = , 
                                    transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                second_row_option = , 
                                third_row_option = , ), ), 
                        country_code = '', 
                        details = '', 
                        enable_smart_tap = True, 
                        fine_print = '', 
                        help_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            uri = '', ), 
                        hero_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                kind = '', ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                uri = '', ), ), 
                        hex_background_color = '', 
                        homepage_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', 
                                main_image = openapi_client.models.image.Image(
                                    kind = '', ), )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            label_value_rows = [
                                openapi_client.models.label_value_row.LabelValueRow(
                                    columns = [
                                        openapi_client.models.label_value.LabelValue(
                                            label = '', 
                                            localized_label = , 
                                            localized_value = , 
                                            value = '', )
                                        ], )
                                ], 
                            show_last_update_time = True, ), 
                        issuer_name = '', 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                            uris = [
                                
                                ], ), 
                        localized_details = , 
                        localized_fine_print = , 
                        localized_issuer_name = , 
                        localized_provider = , 
                        localized_short_title = , 
                        localized_title = , 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                display_interval = openapi_client.models.time_interval.TimeInterval(
                                    end = openapi_client.models.date_time.DateTime(
                                        date = '', ), 
                                    kind = '', 
                                    start = openapi_client.models.date_time.DateTime(
                                        date = '', ), ), 
                                header = '', 
                                id = '', 
                                kind = '', 
                                localized_body = , 
                                localized_header = , 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                        provider = '', 
                        redemption_channel = 'REDEMPTION_CHANNEL_UNSPECIFIED', 
                        redemption_issuers = [
                            ''
                            ], 
                        review = openapi_client.models.review.Review(
                            comments = '', ), 
                        review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                        security_animation = openapi_client.models.security_animation.SecurityAnimation(
                            animation_type = 'ANIMATION_UNSPECIFIED', ), 
                        short_title = '', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        title = '', 
                        title_image = , 
                        version = '', 
                        view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                        wide_title_image = , 
                        word_mark = , )
                    ],
                offer_objects = [
                    openapi_client.models.offer_object.OfferObject(
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        class_id = '', 
                        class_reference = openapi_client.models.offer_class.OfferClass(
                            allow_multiple_users_per_object = True, 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            country_code = '', 
                            details = '', 
                            enable_smart_tap = True, 
                            fine_print = '', 
                            help_uri = openapi_client.models.uri.Uri(
                                id = '', 
                                kind = '', 
                                uri = '', ), 
                            hero_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            hex_background_color = '', 
                            homepage_uri = , 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            kind = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            localized_details = , 
                            localized_fine_print = , 
                            localized_issuer_name = , 
                            localized_provider = , 
                            localized_short_title = , 
                            localized_title = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = openapi_client.models.date_time.DateTime(
                                            date = '', ), ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            provider = '', 
                            redemption_channel = 'REDEMPTION_CHANNEL_UNSPECIFIED', 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            short_title = '', 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            title_image = , 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            wide_title_image = , 
                            word_mark = , ), 
                        disable_expiration_notification = True, 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        kind = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ],
                transit_classes = [
                    openapi_client.models.transit_class.TransitClass(
                        activation_options = openapi_client.models.activation_options.ActivationOptions(
                            activation_url = '', 
                            allow_reactivation = True, ), 
                        allow_multiple_users_per_object = True, 
                        callback_options = openapi_client.models.callback_options.CallbackOptions(
                            update_request_url = '', 
                            url = '', ), 
                        class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                            card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                    field_selector = openapi_client.models.field_selector.FieldSelector(
                                        fields = [
                                            openapi_client.models.field_reference.FieldReference(
                                                date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                field_path = '', )
                                            ], ), ), 
                                first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                second_top_detail = , ), 
                            card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                card_row_template_infos = [
                                    openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                        one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                            item = openapi_client.models.template_item.TemplateItem(
                                                first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                second_value = , ), ), 
                                        three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                            end_item = openapi_client.models.template_item.TemplateItem(
                                                predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                            middle_item = , 
                                            start_item = , ), 
                                        two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                    ], ), 
                            details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                details_item_infos = [
                                    openapi_client.models.details_item_info.DetailsItemInfo()
                                    ], ), 
                            list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                    field_option = , 
                                    transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                second_row_option = , 
                                third_row_option = , ), ), 
                        country_code = '', 
                        custom_carriage_label = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        custom_coach_label = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        custom_concession_category_label = , 
                        custom_confirmation_code_label = , 
                        custom_discount_message_label = , 
                        custom_fare_class_label = , 
                        custom_fare_name_label = , 
                        custom_other_restrictions_label = , 
                        custom_platform_label = , 
                        custom_purchase_face_value_label = , 
                        custom_purchase_price_label = , 
                        custom_purchase_receipt_number_label = , 
                        custom_route_restrictions_details_label = , 
                        custom_route_restrictions_label = , 
                        custom_seat_label = , 
                        custom_ticket_number_label = , 
                        custom_time_restrictions_label = , 
                        custom_transit_terminus_name_label = , 
                        custom_zone_label = , 
                        enable_single_leg_itinerary = True, 
                        enable_smart_tap = True, 
                        hero_image = openapi_client.models.image.Image(
                            content_description = , 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = , 
                                uri = '', ), ), 
                        hex_background_color = '', 
                        homepage_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', 
                                main_image = openapi_client.models.image.Image(
                                    kind = '', ), )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            label_value_rows = [
                                openapi_client.models.label_value_row.LabelValueRow(
                                    columns = [
                                        openapi_client.models.label_value.LabelValue(
                                            label = '', 
                                            localized_label = , 
                                            localized_value = , 
                                            value = '', )
                                        ], )
                                ], 
                            show_last_update_time = True, ), 
                        issuer_name = '', 
                        language_override = '', 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                            uris = [
                                openapi_client.models.uri.Uri(
                                    description = '', 
                                    id = '', 
                                    kind = '', 
                                    uri = '', )
                                ], ), 
                        localized_issuer_name = , 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        logo = , 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                display_interval = openapi_client.models.time_interval.TimeInterval(
                                    end = openapi_client.models.date_time.DateTime(
                                        date = '', ), 
                                    kind = '', 
                                    start = openapi_client.models.date_time.DateTime(
                                        date = '', ), ), 
                                header = '', 
                                id = '', 
                                kind = '', 
                                localized_body = , 
                                localized_header = , 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                        redemption_issuers = [
                            ''
                            ], 
                        review = openapi_client.models.review.Review(
                            comments = '', ), 
                        review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                        security_animation = openapi_client.models.security_animation.SecurityAnimation(
                            animation_type = 'ANIMATION_UNSPECIFIED', ), 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        transit_operator_name = , 
                        transit_type = 'TRANSIT_TYPE_UNSPECIFIED', 
                        version = '', 
                        view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                        watermark = , 
                        wide_logo = , 
                        word_mark = , )
                    ],
                transit_objects = [
                    openapi_client.models.transit_object.TransitObject(
                        activation_status = openapi_client.models.activation_status.ActivationStatus(
                            state = 'UNKNOWN_STATE', ), 
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        class_id = '', 
                        class_reference = openapi_client.models.transit_class.TransitClass(
                            activation_options = openapi_client.models.activation_options.ActivationOptions(
                                activation_url = '', 
                                allow_reactivation = True, ), 
                            allow_multiple_users_per_object = True, 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            country_code = '', 
                            custom_carriage_label = , 
                            custom_coach_label = , 
                            custom_concession_category_label = , 
                            custom_confirmation_code_label = , 
                            custom_discount_message_label = , 
                            custom_fare_class_label = , 
                            custom_fare_name_label = , 
                            custom_other_restrictions_label = , 
                            custom_platform_label = , 
                            custom_purchase_face_value_label = , 
                            custom_purchase_price_label = , 
                            custom_purchase_receipt_number_label = , 
                            custom_route_restrictions_details_label = , 
                            custom_route_restrictions_label = , 
                            custom_seat_label = , 
                            custom_ticket_number_label = , 
                            custom_time_restrictions_label = , 
                            custom_transit_terminus_name_label = , 
                            custom_zone_label = , 
                            enable_single_leg_itinerary = True, 
                            enable_smart_tap = True, 
                            hero_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            hex_background_color = '', 
                            homepage_uri = openapi_client.models.uri.Uri(
                                id = '', 
                                kind = '', 
                                uri = '', ), 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            language_override = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            localized_issuer_name = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            logo = , 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = openapi_client.models.date_time.DateTime(
                                            date = '', ), ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            transit_operator_name = , 
                            transit_type = 'TRANSIT_TYPE_UNSPECIFIED', 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            watermark = , 
                            wide_logo = , 
                            word_mark = , ), 
                        concession_category = 'CONCESSION_CATEGORY_UNSPECIFIED', 
                        custom_concession_category = , 
                        custom_ticket_status = , 
                        device_context = openapi_client.models.device_context.DeviceContext(
                            device_token = '', ), 
                        disable_expiration_notification = True, 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        hex_background_color = '', 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        passenger_names = '', 
                        passenger_type = 'PASSENGER_TYPE_UNSPECIFIED', 
                        purchase_details = openapi_client.models.purchase_details.PurchaseDetails(
                            account_id = '', 
                            confirmation_code = '', 
                            purchase_date_time = '', 
                            purchase_receipt_number = '', 
                            ticket_cost = openapi_client.models.ticket_cost.TicketCost(
                                discount_message = , 
                                face_value = openapi_client.models.money.Money(
                                    currency_code = '', 
                                    kind = '', 
                                    micros = '', ), 
                                purchase_price = openapi_client.models.money.Money(
                                    currency_code = '', 
                                    kind = '', 
                                    micros = '', ), ), ), 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        ticket_leg = openapi_client.models.ticket_leg.TicketLeg(
                            arrival_date_time = '', 
                            carriage = '', 
                            departure_date_time = '', 
                            destination_name = , 
                            destination_station_code = '', 
                            fare_name = , 
                            origin_name = , 
                            origin_station_code = '', 
                            platform = '', 
                            ticket_seat = openapi_client.models.ticket_seat.TicketSeat(
                                coach = '', 
                                custom_fare_class = , 
                                fare_class = 'FARE_CLASS_UNSPECIFIED', 
                                seat = '', 
                                seat_assignment = , ), 
                            ticket_seats = [
                                openapi_client.models.ticket_seat.TicketSeat(
                                    coach = '', 
                                    fare_class = 'FARE_CLASS_UNSPECIFIED', 
                                    seat = '', )
                                ], 
                            transit_terminus_name = , 
                            zone = '', ), 
                        ticket_legs = [
                            openapi_client.models.ticket_leg.TicketLeg(
                                arrival_date_time = '', 
                                carriage = '', 
                                departure_date_time = '', 
                                destination_station_code = '', 
                                origin_station_code = '', 
                                platform = '', 
                                zone = '', )
                            ], 
                        ticket_number = '', 
                        ticket_restrictions = openapi_client.models.ticket_restrictions.TicketRestrictions(
                            other_restrictions = , 
                            route_restrictions = , 
                            route_restrictions_details = , 
                            time_restrictions = , ), 
                        ticket_status = 'TICKET_STATUS_UNSPECIFIED', 
                        trip_id = '', 
                        trip_type = 'TRIP_TYPE_UNSPECIFIED', 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ]
            )
        else:
            return Resources(
        )
        """

    def testResources(self):
        """Test Resources"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
