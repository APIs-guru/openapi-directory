# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event_ticket_object_list_response import EventTicketObjectListResponse

class TestEventTicketObjectListResponse(unittest.TestCase):
    """EventTicketObjectListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EventTicketObjectListResponse:
        """Test EventTicketObjectListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EventTicketObjectListResponse`
        """
        model = EventTicketObjectListResponse()
        if include_optional:
            return EventTicketObjectListResponse(
                pagination = openapi_client.models.pagination.Pagination(
                    kind = '', 
                    next_page_token = '', 
                    results_per_page = 56, ),
                resources = [
                    openapi_client.models.event_ticket_object.EventTicketObject(
                        app_link_data = openapi_client.models.app_link_data.AppLinkData(
                            android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                                app_logo_image = openapi_client.models.image.Image(
                                    content_description = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    kind = '', 
                                    source_uri = openapi_client.models.image_uri.ImageUri(
                                        description = '', 
                                        localized_description = openapi_client.models.localized_string.LocalizedString(
                                            kind = '', ), 
                                        uri = '', ), ), 
                                app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                                    package_name = '', 
                                    target_uri = openapi_client.models.uri.Uri(
                                        description = '', 
                                        id = '', 
                                        kind = '', 
                                        uri = '', ), ), 
                                description = , 
                                title = , ), 
                            ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                            web_app_link_info = , ), 
                        barcode = openapi_client.models.barcode.Barcode(
                            alternate_text = '', 
                            kind = '', 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            show_code_text = , 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value = '', ), 
                        class_id = '', 
                        class_reference = openapi_client.models.event_ticket_class.EventTicketClass(
                            allow_multiple_users_per_object = True, 
                            callback_options = openapi_client.models.callback_options.CallbackOptions(
                                update_request_url = '', 
                                url = '', ), 
                            class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                                card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                                    first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                        field_selector = openapi_client.models.field_selector.FieldSelector(
                                            fields = [
                                                openapi_client.models.field_reference.FieldReference(
                                                    date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                                    field_path = '', )
                                                ], ), ), 
                                    first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                                    second_top_detail = , ), 
                                card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                                    card_row_template_infos = [
                                        openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                            one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                                item = openapi_client.models.template_item.TemplateItem(
                                                    first_value = openapi_client.models.field_selector.FieldSelector(), 
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                                    second_value = , ), ), 
                                            three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                                end_item = openapi_client.models.template_item.TemplateItem(
                                                    predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                                middle_item = , 
                                                start_item = , ), 
                                            two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                        ], ), 
                                details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                                    details_item_infos = [
                                        openapi_client.models.details_item_info.DetailsItemInfo()
                                        ], ), 
                                list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                                    first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                        field_option = , 
                                        transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                                    second_row_option = , 
                                    third_row_option = , ), ), 
                            confirmation_code_label = 'CONFIRMATION_CODE_LABEL_UNSPECIFIED', 
                            country_code = '', 
                            custom_confirmation_code_label = , 
                            custom_gate_label = , 
                            custom_row_label = , 
                            custom_seat_label = , 
                            custom_section_label = , 
                            date_time = openapi_client.models.event_date_time.EventDateTime(
                                custom_doors_open_label = , 
                                doors_open = '', 
                                doors_open_label = 'DOORS_OPEN_LABEL_UNSPECIFIED', 
                                end = '', 
                                kind = '', 
                                start = '', ), 
                            enable_smart_tap = True, 
                            event_id = '', 
                            event_name = , 
                            fine_print = , 
                            gate_label = 'GATE_LABEL_UNSPECIFIED', 
                            hero_image = openapi_client.models.image.Image(
                                kind = '', ), 
                            hex_background_color = '', 
                            homepage_uri = openapi_client.models.uri.Uri(
                                id = '', 
                                kind = '', 
                                uri = '', ), 
                            id = '', 
                            image_modules_data = [
                                openapi_client.models.image_module_data.ImageModuleData(
                                    id = '', 
                                    main_image = , )
                                ], 
                            info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                                label_value_rows = [
                                    openapi_client.models.label_value_row.LabelValueRow(
                                        columns = [
                                            openapi_client.models.label_value.LabelValue(
                                                label = '', 
                                                localized_label = , 
                                                localized_value = , 
                                                value = '', )
                                            ], )
                                    ], 
                                show_last_update_time = True, ), 
                            issuer_name = '', 
                            kind = '', 
                            links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                                uris = [
                                    
                                    ], ), 
                            localized_issuer_name = , 
                            locations = [
                                openapi_client.models.lat_long_point.LatLongPoint(
                                    kind = '', 
                                    latitude = 1.337, 
                                    longitude = 1.337, )
                                ], 
                            logo = , 
                            messages = [
                                openapi_client.models.message.Message(
                                    body = '', 
                                    display_interval = openapi_client.models.time_interval.TimeInterval(
                                        end = openapi_client.models.date_time.DateTime(
                                            date = '', ), 
                                        kind = '', 
                                        start = openapi_client.models.date_time.DateTime(
                                            date = '', ), ), 
                                    header = '', 
                                    id = '', 
                                    kind = '', 
                                    localized_body = , 
                                    localized_header = , 
                                    message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                                ], 
                            multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                            redemption_issuers = [
                                ''
                                ], 
                            review = openapi_client.models.review.Review(
                                comments = '', ), 
                            review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                            row_label = 'ROW_LABEL_UNSPECIFIED', 
                            seat_label = 'SEAT_LABEL_UNSPECIFIED', 
                            section_label = 'SECTION_LABEL_UNSPECIFIED', 
                            security_animation = openapi_client.models.security_animation.SecurityAnimation(
                                animation_type = 'ANIMATION_UNSPECIFIED', ), 
                            text_modules_data = [
                                openapi_client.models.text_module_data.TextModuleData(
                                    body = '', 
                                    header = '', 
                                    id = '', )
                                ], 
                            venue = openapi_client.models.event_venue.EventVenue(
                                address = , 
                                kind = '', 
                                name = , ), 
                            version = '', 
                            view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                            wide_logo = , 
                            word_mark = , ), 
                        disable_expiration_notification = True, 
                        face_value = openapi_client.models.money.Money(
                            currency_code = '', 
                            kind = '', 
                            micros = '', ), 
                        grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                            grouping_id = '', 
                            sort_index = 56, ), 
                        has_linked_device = True, 
                        has_users = True, 
                        hero_image = , 
                        hex_background_color = '', 
                        id = '', 
                        image_modules_data = [
                            openapi_client.models.image_module_data.ImageModuleData(
                                id = '', )
                            ], 
                        info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                            show_last_update_time = True, ), 
                        kind = '', 
                        linked_offer_ids = [
                            ''
                            ], 
                        links_module_data = openapi_client.models.links_module_data.LinksModuleData(), 
                        locations = [
                            openapi_client.models.lat_long_point.LatLongPoint(
                                kind = '', 
                                latitude = 1.337, 
                                longitude = 1.337, )
                            ], 
                        messages = [
                            openapi_client.models.message.Message(
                                body = '', 
                                header = '', 
                                id = '', 
                                kind = '', 
                                message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                            ], 
                        pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                            nfc_constraint = [
                                'NFC_CONSTRAINT_UNSPECIFIED'
                                ], 
                            screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ), 
                        reservation_info = openapi_client.models.event_reservation_info.EventReservationInfo(
                            confirmation_code = '', 
                            kind = '', ), 
                        rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                            alternate_text = '', 
                            initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                                period_millis = '', 
                                start_date_time = '', 
                                values = [
                                    ''
                                    ], ), 
                            render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                            totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                                algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                                parameters = [
                                    openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                        key = '', 
                                        value_length = 56, )
                                    ], 
                                period_millis = '', ), 
                            type = 'BARCODE_TYPE_UNSPECIFIED', 
                            value_pattern = '', ), 
                        seat_info = openapi_client.models.event_seat.EventSeat(
                            gate = , 
                            kind = '', 
                            row = , 
                            seat = , 
                            section = , ), 
                        smart_tap_redemption_value = '', 
                        state = 'STATE_UNSPECIFIED', 
                        text_modules_data = [
                            openapi_client.models.text_module_data.TextModuleData(
                                body = '', 
                                header = '', 
                                id = '', )
                            ], 
                        ticket_holder_name = '', 
                        ticket_number = '', 
                        ticket_type = , 
                        valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                            kind = '', ), 
                        version = '', )
                    ]
            )
        else:
            return EventTicketObjectListResponse(
        )
        """

    def testEventTicketObjectListResponse(self):
        """Test EventTicketObjectListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
