# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.generic_object import GenericObject

class TestGenericObject(unittest.TestCase):
    """GenericObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GenericObject:
        """Test GenericObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GenericObject`
        """
        model = GenericObject()
        if include_optional:
            return GenericObject(
                app_link_data = openapi_client.models.app_link_data.AppLinkData(
                    android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                        app_logo_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                uri = '', ), ), 
                        app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                            package_name = '', 
                            target_uri = openapi_client.models.uri.Uri(
                                description = '', 
                                id = '', 
                                kind = '', 
                                uri = '', ), ), 
                        description = , 
                        title = , ), 
                    ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                    web_app_link_info = , ),
                barcode = openapi_client.models.barcode.Barcode(
                    alternate_text = '', 
                    kind = '', 
                    render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                    show_code_text = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    type = 'BARCODE_TYPE_UNSPECIFIED', 
                    value = '', ),
                card_title = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                class_id = '',
                generic_type = 'GENERIC_TYPE_UNSPECIFIED',
                grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                    grouping_id = '', 
                    sort_index = 56, ),
                has_users = True,
                header = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                hero_image = openapi_client.models.image.Image(
                    content_description = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    kind = '', 
                    source_uri = openapi_client.models.image_uri.ImageUri(
                        description = '', 
                        localized_description = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        uri = '', ), ),
                hex_background_color = '',
                id = '',
                image_modules_data = [
                    openapi_client.models.image_module_data.ImageModuleData(
                        id = '', 
                        main_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                uri = '', ), ), )
                    ],
                links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                    uris = [
                        openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            uri = '', )
                        ], ),
                logo = openapi_client.models.image.Image(
                    content_description = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    kind = '', 
                    source_uri = openapi_client.models.image_uri.ImageUri(
                        description = '', 
                        localized_description = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        uri = '', ), ),
                notifications = openapi_client.models.notifications.Notifications(
                    expiry_notification = openapi_client.models.expiry_notification.ExpiryNotification(
                        enable_notification = True, ), 
                    upcoming_notification = openapi_client.models.upcoming_notification.UpcomingNotification(
                        enable_notification = True, ), ),
                pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                    nfc_constraint = [
                        'NFC_CONSTRAINT_UNSPECIFIED'
                        ], 
                    screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ),
                rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                    alternate_text = '', 
                    initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                        period_millis = '', 
                        start_date_time = '', 
                        values = [
                            ''
                            ], ), 
                    render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                    show_code_text = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                        algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                        parameters = [
                            openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                key = '', 
                                value_length = 56, )
                            ], 
                        period_millis = '', ), 
                    type = 'BARCODE_TYPE_UNSPECIFIED', 
                    value_pattern = '', ),
                smart_tap_redemption_value = '',
                state = 'STATE_UNSPECIFIED',
                subheader = openapi_client.models.localized_string.LocalizedString(
                    default_value = openapi_client.models.translated_string.TranslatedString(
                        kind = '', 
                        language = '', 
                        value = '', ), 
                    kind = '', 
                    translated_values = [
                        openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', )
                        ], ),
                text_modules_data = [
                    openapi_client.models.text_module_data.TextModuleData(
                        body = '', 
                        header = '', 
                        id = '', 
                        localized_body = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        localized_header = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), )
                    ],
                valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                    end = openapi_client.models.date_time.DateTime(
                        date = '', ), 
                    kind = '', 
                    start = openapi_client.models.date_time.DateTime(
                        date = '', ), ),
                wide_logo = openapi_client.models.image.Image(
                    content_description = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    kind = '', 
                    source_uri = openapi_client.models.image_uri.ImageUri(
                        description = '', 
                        localized_description = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        uri = '', ), )
            )
        else:
            return GenericObject(
        )
        """

    def testGenericObject(self):
        """Test GenericObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
