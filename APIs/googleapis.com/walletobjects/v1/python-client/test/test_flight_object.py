# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.flight_object import FlightObject

class TestFlightObject(unittest.TestCase):
    """FlightObject unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FlightObject:
        """Test FlightObject
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FlightObject`
        """
        model = FlightObject()
        if include_optional:
            return FlightObject(
                app_link_data = openapi_client.models.app_link_data.AppLinkData(
                    android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                        app_logo_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                uri = '', ), ), 
                        app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                            package_name = '', 
                            target_uri = openapi_client.models.uri.Uri(
                                description = '', 
                                id = '', 
                                kind = '', 
                                uri = '', ), ), 
                        description = , 
                        title = , ), 
                    ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(), 
                    web_app_link_info = , ),
                barcode = openapi_client.models.barcode.Barcode(
                    alternate_text = '', 
                    kind = '', 
                    render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                    show_code_text = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    type = 'BARCODE_TYPE_UNSPECIFIED', 
                    value = '', ),
                boarding_and_seating_info = openapi_client.models.boarding_and_seating_info.BoardingAndSeatingInfo(
                    boarding_door = 'BOARDING_DOOR_UNSPECIFIED', 
                    boarding_group = '', 
                    boarding_position = '', 
                    boarding_privilege_image = openapi_client.models.image.Image(
                        content_description = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        kind = '', 
                        source_uri = openapi_client.models.image_uri.ImageUri(
                            description = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                kind = '', ), 
                            uri = '', ), ), 
                    kind = '', 
                    seat_assignment = , 
                    seat_class = '', 
                    seat_number = '', 
                    sequence_number = '', ),
                class_id = '',
                class_reference = openapi_client.models.flight_class.FlightClass(
                    allow_multiple_users_per_object = True, 
                    boarding_and_seating_policy = openapi_client.models.boarding_and_seating_policy.BoardingAndSeatingPolicy(
                        boarding_policy = 'BOARDING_POLICY_UNSPECIFIED', 
                        kind = '', 
                        seat_class_policy = 'SEAT_CLASS_POLICY_UNSPECIFIED', ), 
                    callback_options = openapi_client.models.callback_options.CallbackOptions(
                        update_request_url = '', 
                        url = '', ), 
                    class_template_info = openapi_client.models.class_template_info.ClassTemplateInfo(
                        card_barcode_section_details = openapi_client.models.card_barcode_section_details.CardBarcodeSectionDetails(
                            first_bottom_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(
                                field_selector = openapi_client.models.field_selector.FieldSelector(
                                    fields = [
                                        openapi_client.models.field_reference.FieldReference(
                                            date_format = 'DATE_FORMAT_UNSPECIFIED', 
                                            field_path = '', )
                                        ], ), ), 
                            first_top_detail = openapi_client.models.barcode_section_detail.BarcodeSectionDetail(), 
                            second_top_detail = , ), 
                        card_template_override = openapi_client.models.card_template_override.CardTemplateOverride(
                            card_row_template_infos = [
                                openapi_client.models.card_row_template_info.CardRowTemplateInfo(
                                    one_item = openapi_client.models.card_row_one_item.CardRowOneItem(
                                        item = openapi_client.models.template_item.TemplateItem(
                                            first_value = openapi_client.models.field_selector.FieldSelector(), 
                                            predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', 
                                            second_value = , ), ), 
                                    three_items = openapi_client.models.card_row_three_items.CardRowThreeItems(
                                        end_item = openapi_client.models.template_item.TemplateItem(
                                            predefined_item = 'PREDEFINED_ITEM_UNSPECIFIED', ), 
                                        middle_item = , 
                                        start_item = , ), 
                                    two_items = openapi_client.models.card_row_two_items.CardRowTwoItems(), )
                                ], ), 
                        details_template_override = openapi_client.models.details_template_override.DetailsTemplateOverride(
                            details_item_infos = [
                                openapi_client.models.details_item_info.DetailsItemInfo()
                                ], ), 
                        list_template_override = openapi_client.models.list_template_override.ListTemplateOverride(
                            first_row_option = openapi_client.models.first_row_option.FirstRowOption(
                                field_option = , 
                                transit_option = 'TRANSIT_OPTION_UNSPECIFIED', ), 
                            second_row_option = , 
                            third_row_option = , ), ), 
                    country_code = '', 
                    destination = openapi_client.models.airport_info.AirportInfo(
                        airport_iata_code = '', 
                        airport_name_override = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        gate = '', 
                        kind = '', 
                        terminal = '', ), 
                    enable_smart_tap = True, 
                    flight_header = openapi_client.models.flight_header.FlightHeader(
                        carrier = openapi_client.models.flight_carrier.FlightCarrier(
                            airline_alliance_logo = openapi_client.models.image.Image(
                                content_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                kind = '', 
                                source_uri = openapi_client.models.image_uri.ImageUri(
                                    description = '', 
                                    localized_description = , 
                                    uri = '', ), ), 
                            airline_logo = openapi_client.models.image.Image(
                                kind = '', ), 
                            airline_name = , 
                            carrier_iata_code = '', 
                            carrier_icao_code = '', 
                            kind = '', 
                            wide_airline_logo = , ), 
                        flight_number = '', 
                        flight_number_display_override = '', 
                        kind = '', 
                        operating_carrier = openapi_client.models.flight_carrier.FlightCarrier(
                            carrier_iata_code = '', 
                            carrier_icao_code = '', 
                            kind = '', ), 
                        operating_flight_number = '', ), 
                    flight_status = 'FLIGHT_STATUS_UNSPECIFIED', 
                    hero_image = , 
                    hex_background_color = '', 
                    homepage_uri = openapi_client.models.uri.Uri(
                        description = '', 
                        id = '', 
                        kind = '', 
                        uri = '', ), 
                    id = '', 
                    image_modules_data = [
                        openapi_client.models.image_module_data.ImageModuleData(
                            id = '', 
                            main_image = , )
                        ], 
                    info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                        label_value_rows = [
                            openapi_client.models.label_value_row.LabelValueRow(
                                columns = [
                                    openapi_client.models.label_value.LabelValue(
                                        label = '', 
                                        localized_label = , 
                                        localized_value = , 
                                        value = '', )
                                    ], )
                            ], 
                        show_last_update_time = True, ), 
                    issuer_name = '', 
                    kind = '', 
                    language_override = '', 
                    links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                        uris = [
                            openapi_client.models.uri.Uri(
                                description = '', 
                                id = '', 
                                kind = '', 
                                uri = '', )
                            ], ), 
                    local_boarding_date_time = '', 
                    local_estimated_or_actual_arrival_date_time = '', 
                    local_estimated_or_actual_departure_date_time = '', 
                    local_gate_closing_date_time = '', 
                    local_scheduled_arrival_date_time = '', 
                    local_scheduled_departure_date_time = '', 
                    localized_issuer_name = , 
                    locations = [
                        openapi_client.models.lat_long_point.LatLongPoint(
                            kind = '', 
                            latitude = 1.337, 
                            longitude = 1.337, )
                        ], 
                    messages = [
                        openapi_client.models.message.Message(
                            body = '', 
                            display_interval = openapi_client.models.time_interval.TimeInterval(
                                end = openapi_client.models.date_time.DateTime(
                                    date = '', ), 
                                kind = '', 
                                start = openapi_client.models.date_time.DateTime(
                                    date = '', ), ), 
                            header = '', 
                            id = '', 
                            kind = '', 
                            localized_body = , 
                            localized_header = , 
                            message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                        ], 
                    multiple_devices_and_holders_allowed_status = 'STATUS_UNSPECIFIED', 
                    origin = openapi_client.models.airport_info.AirportInfo(
                        airport_iata_code = '', 
                        gate = '', 
                        kind = '', 
                        terminal = '', ), 
                    redemption_issuers = [
                        ''
                        ], 
                    review = openapi_client.models.review.Review(
                        comments = '', ), 
                    review_status = 'REVIEW_STATUS_UNSPECIFIED', 
                    security_animation = openapi_client.models.security_animation.SecurityAnimation(
                        animation_type = 'ANIMATION_UNSPECIFIED', ), 
                    text_modules_data = [
                        openapi_client.models.text_module_data.TextModuleData(
                            body = '', 
                            header = '', 
                            id = '', )
                        ], 
                    version = '', 
                    view_unlock_requirement = 'VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED', 
                    word_mark = , ),
                disable_expiration_notification = True,
                grouping_info = openapi_client.models.grouping_info.GroupingInfo(
                    grouping_id = '', 
                    sort_index = 56, ),
                has_linked_device = True,
                has_users = True,
                hero_image = openapi_client.models.image.Image(
                    content_description = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    kind = '', 
                    source_uri = openapi_client.models.image_uri.ImageUri(
                        description = '', 
                        localized_description = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        uri = '', ), ),
                hex_background_color = '',
                id = '',
                image_modules_data = [
                    openapi_client.models.image_module_data.ImageModuleData(
                        id = '', 
                        main_image = openapi_client.models.image.Image(
                            content_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            kind = '', 
                            source_uri = openapi_client.models.image_uri.ImageUri(
                                description = '', 
                                localized_description = openapi_client.models.localized_string.LocalizedString(
                                    kind = '', ), 
                                uri = '', ), ), )
                    ],
                info_module_data = openapi_client.models.info_module_data.InfoModuleData(
                    label_value_rows = [
                        openapi_client.models.label_value_row.LabelValueRow(
                            columns = [
                                openapi_client.models.label_value.LabelValue(
                                    label = '', 
                                    localized_label = openapi_client.models.localized_string.LocalizedString(
                                        default_value = openapi_client.models.translated_string.TranslatedString(
                                            kind = '', 
                                            language = '', 
                                            value = '', ), 
                                        kind = '', 
                                        translated_values = [
                                            openapi_client.models.translated_string.TranslatedString(
                                                kind = '', 
                                                language = '', 
                                                value = '', )
                                            ], ), 
                                    localized_value = openapi_client.models.localized_string.LocalizedString(
                                        kind = '', ), 
                                    value = '', )
                                ], )
                        ], 
                    show_last_update_time = True, ),
                kind = '',
                links_module_data = openapi_client.models.links_module_data.LinksModuleData(
                    uris = [
                        openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                default_value = openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', ), 
                                kind = '', 
                                translated_values = [
                                    openapi_client.models.translated_string.TranslatedString(
                                        kind = '', 
                                        language = '', 
                                        value = '', )
                                    ], ), 
                            uri = '', )
                        ], ),
                locations = [
                    openapi_client.models.lat_long_point.LatLongPoint(
                        kind = '', 
                        latitude = 1.337, 
                        longitude = 1.337, )
                    ],
                messages = [
                    openapi_client.models.message.Message(
                        body = '', 
                        display_interval = openapi_client.models.time_interval.TimeInterval(
                            end = openapi_client.models.date_time.DateTime(
                                date = '', ), 
                            kind = '', 
                            start = openapi_client.models.date_time.DateTime(
                                date = '', ), ), 
                        header = '', 
                        id = '', 
                        kind = '', 
                        localized_body = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        localized_header = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        message_type = 'MESSAGE_TYPE_UNSPECIFIED', )
                    ],
                pass_constraints = openapi_client.models.pass_constraints.PassConstraints(
                    nfc_constraint = [
                        'NFC_CONSTRAINT_UNSPECIFIED'
                        ], 
                    screenshot_eligibility = 'SCREENSHOT_ELIGIBILITY_UNSPECIFIED', ),
                passenger_name = '',
                reservation_info = openapi_client.models.reservation_info.ReservationInfo(
                    confirmation_code = '', 
                    eticket_number = '', 
                    frequent_flyer_info = openapi_client.models.frequent_flyer_info.FrequentFlyerInfo(
                        frequent_flyer_number = '', 
                        frequent_flyer_program_name = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        kind = '', ), 
                    kind = '', ),
                rotating_barcode = openapi_client.models.rotating_barcode.RotatingBarcode(
                    alternate_text = '', 
                    initial_rotating_barcode_values = openapi_client.models.rotating_barcode_values.RotatingBarcodeValues(
                        period_millis = '', 
                        start_date_time = '', 
                        values = [
                            ''
                            ], ), 
                    render_encoding = 'RENDER_ENCODING_UNSPECIFIED', 
                    show_code_text = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    totp_details = openapi_client.models.rotating_barcode_totp_details.RotatingBarcodeTotpDetails(
                        algorithm = 'TOTP_ALGORITHM_UNSPECIFIED', 
                        parameters = [
                            openapi_client.models.rotating_barcode_totp_details_totp_parameters.RotatingBarcodeTotpDetailsTotpParameters(
                                key = '', 
                                value_length = 56, )
                            ], 
                        period_millis = '', ), 
                    type = 'BARCODE_TYPE_UNSPECIFIED', 
                    value_pattern = '', ),
                security_program_logo = openapi_client.models.image.Image(
                    content_description = openapi_client.models.localized_string.LocalizedString(
                        default_value = openapi_client.models.translated_string.TranslatedString(
                            kind = '', 
                            language = '', 
                            value = '', ), 
                        kind = '', 
                        translated_values = [
                            openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', )
                            ], ), 
                    kind = '', 
                    source_uri = openapi_client.models.image_uri.ImageUri(
                        description = '', 
                        localized_description = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), 
                        uri = '', ), ),
                smart_tap_redemption_value = '',
                state = 'STATE_UNSPECIFIED',
                text_modules_data = [
                    openapi_client.models.text_module_data.TextModuleData(
                        body = '', 
                        header = '', 
                        id = '', 
                        localized_body = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        localized_header = openapi_client.models.localized_string.LocalizedString(
                            kind = '', ), )
                    ],
                valid_time_interval = openapi_client.models.time_interval.TimeInterval(
                    end = openapi_client.models.date_time.DateTime(
                        date = '', ), 
                    kind = '', 
                    start = openapi_client.models.date_time.DateTime(
                        date = '', ), ),
                version = ''
            )
        else:
            return FlightObject(
        )
        """

    def testFlightObject(self):
        """Test FlightObject"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
