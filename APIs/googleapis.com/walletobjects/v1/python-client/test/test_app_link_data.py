# coding: utf-8

"""
    Google Wallet API

    API for issuers to save and manage Google Wallet Objects.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.app_link_data import AppLinkData

class TestAppLinkData(unittest.TestCase):
    """AppLinkData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppLinkData:
        """Test AppLinkData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppLinkData`
        """
        model = AppLinkData()
        if include_optional:
            return AppLinkData(
                android_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                    app_logo_image = openapi_client.models.image.Image(
                        content_description = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        kind = '', 
                        source_uri = openapi_client.models.image_uri.ImageUri(
                            description = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                kind = '', ), 
                            uri = '', ), ), 
                    app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                        package_name = '', 
                        target_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), ), 
                    description = , 
                    title = , ),
                ios_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                    app_logo_image = openapi_client.models.image.Image(
                        content_description = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        kind = '', 
                        source_uri = openapi_client.models.image_uri.ImageUri(
                            description = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                kind = '', ), 
                            uri = '', ), ), 
                    app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                        package_name = '', 
                        target_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), ), 
                    description = , 
                    title = , ),
                web_app_link_info = openapi_client.models.app_link_data_app_link_info.AppLinkDataAppLinkInfo(
                    app_logo_image = openapi_client.models.image.Image(
                        content_description = openapi_client.models.localized_string.LocalizedString(
                            default_value = openapi_client.models.translated_string.TranslatedString(
                                kind = '', 
                                language = '', 
                                value = '', ), 
                            kind = '', 
                            translated_values = [
                                openapi_client.models.translated_string.TranslatedString(
                                    kind = '', 
                                    language = '', 
                                    value = '', )
                                ], ), 
                        kind = '', 
                        source_uri = openapi_client.models.image_uri.ImageUri(
                            description = '', 
                            localized_description = openapi_client.models.localized_string.LocalizedString(
                                kind = '', ), 
                            uri = '', ), ), 
                    app_target = openapi_client.models.app_link_data_app_link_info_app_target.AppLinkDataAppLinkInfoAppTarget(
                        package_name = '', 
                        target_uri = openapi_client.models.uri.Uri(
                            description = '', 
                            id = '', 
                            kind = '', 
                            uri = '', ), ), 
                    description = , 
                    title = , )
            )
        else:
            return AppLinkData(
        )
        """

    def testAppLinkData(self):
        """Test AppLinkData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
