# coding: utf-8

"""
    Binary Authorization API

    The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.validate_attestation_occurrence_request import ValidateAttestationOccurrenceRequest

class TestValidateAttestationOccurrenceRequest(unittest.TestCase):
    """ValidateAttestationOccurrenceRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ValidateAttestationOccurrenceRequest:
        """Test ValidateAttestationOccurrenceRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ValidateAttestationOccurrenceRequest`
        """
        model = ValidateAttestationOccurrenceRequest()
        if include_optional:
            return ValidateAttestationOccurrenceRequest(
                attestation = openapi_client.models.attestation_occurrence.AttestationOccurrence(
                    jwts = [
                        openapi_client.models.jwt.Jwt(
                            compact_jwt = '', )
                        ], 
                    serialized_payload = 'YQ==', 
                    signatures = [
                        openapi_client.models.signature.Signature(
                            public_key_id = '', 
                            signature = 'YQ==', )
                        ], ),
                occurrence_note = '',
                occurrence_resource_uri = ''
            )
        else:
            return ValidateAttestationOccurrenceRequest(
        )
        """

    def testValidateAttestationOccurrenceRequest(self):
        """Test ValidateAttestationOccurrenceRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
