# coding: utf-8

"""
    Binary Authorization API

    The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_binaryauthorization_projects_attestors_create(self) -> None:
        """Test case for binaryauthorization_projects_attestors_create

        """
        pass

    def test_binaryauthorization_projects_attestors_delete(self) -> None:
        """Test case for binaryauthorization_projects_attestors_delete

        """
        pass

    def test_binaryauthorization_projects_attestors_list(self) -> None:
        """Test case for binaryauthorization_projects_attestors_list

        """
        pass

    def test_binaryauthorization_projects_attestors_update(self) -> None:
        """Test case for binaryauthorization_projects_attestors_update

        """
        pass

    def test_binaryauthorization_projects_attestors_validate_attestation_occurrence(self) -> None:
        """Test case for binaryauthorization_projects_attestors_validate_attestation_occurrence

        """
        pass

    def test_binaryauthorization_projects_policy_get_iam_policy(self) -> None:
        """Test case for binaryauthorization_projects_policy_get_iam_policy

        """
        pass

    def test_binaryauthorization_projects_policy_set_iam_policy(self) -> None:
        """Test case for binaryauthorization_projects_policy_set_iam_policy

        """
        pass

    def test_binaryauthorization_projects_policy_test_iam_permissions(self) -> None:
        """Test case for binaryauthorization_projects_policy_test_iam_permissions

        """
        pass


if __name__ == '__main__':
    unittest.main()
