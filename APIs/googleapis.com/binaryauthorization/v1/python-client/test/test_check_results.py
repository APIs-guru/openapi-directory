# coding: utf-8

"""
    Binary Authorization API

    The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.check_results import CheckResults

class TestCheckResults(unittest.TestCase):
    """CheckResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CheckResults:
        """Test CheckResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CheckResults`
        """
        model = CheckResults()
        if include_optional:
            return CheckResults(
                results = [
                    openapi_client.models.check_result.CheckResult(
                        allowlist_result = openapi_client.models.allowlist_result.AllowlistResult(
                            matched_pattern = '', ), 
                        display_name = '', 
                        evaluation_result = openapi_client.models.evaluation_result.EvaluationResult(
                            verdict = 'CHECK_VERDICT_UNSPECIFIED', ), 
                        explanation = '', 
                        index = '', 
                        type = '', )
                    ]
            )
        else:
            return CheckResults(
        )
        """

    def testCheckResults(self):
        """Test CheckResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
