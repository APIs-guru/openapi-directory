# coding: utf-8

"""
    Binary Authorization API

    The management interface for Binary Authorization, a service that provides policy-based deployment validation and control for images deployed to Google Kubernetes Engine (GKE), Anthos Service Mesh, Anthos Clusters, and Cloud Run. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.pod_result import PodResult

class TestPodResult(unittest.TestCase):
    """PodResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PodResult:
        """Test PodResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PodResult`
        """
        model = PodResult()
        if include_optional:
            return PodResult(
                image_results = [
                    openapi_client.models.image_result.ImageResult(
                        allowlist_result = openapi_client.models.allowlist_result.AllowlistResult(
                            matched_pattern = '', ), 
                        check_set_result = openapi_client.models.check_set_result.CheckSetResult(
                            check_results = openapi_client.models.check_results.CheckResults(
                                results = [
                                    openapi_client.models.check_result.CheckResult(
                                        display_name = '', 
                                        evaluation_result = openapi_client.models.evaluation_result.EvaluationResult(
                                            verdict = 'CHECK_VERDICT_UNSPECIFIED', ), 
                                        explanation = '', 
                                        index = '', 
                                        type = '', )
                                    ], ), 
                            display_name = '', 
                            explanation = '', 
                            index = '', 
                            scope = openapi_client.models.scope.Scope(
                                kubernetes_namespace = '', 
                                kubernetes_service_account = '', ), ), 
                        explanation = '', 
                        image_uri = '', 
                        verdict = 'IMAGE_VERDICT_UNSPECIFIED', )
                    ],
                kubernetes_namespace = '',
                kubernetes_service_account = '',
                pod_name = '',
                verdict = 'POD_VERDICT_UNSPECIFIED'
            )
        else:
            return PodResult(
        )
        """

    def testPodResult(self):
        """Test PodResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
