# coding: utf-8

"""
    Google Cloud Data Catalog API

    A fully managed and highly scalable data discovery and metadata management service. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datacatalog_v1_column_schema import GoogleCloudDatacatalogV1ColumnSchema

class TestGoogleCloudDatacatalogV1ColumnSchema(unittest.TestCase):
    """GoogleCloudDatacatalogV1ColumnSchema unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatacatalogV1ColumnSchema:
        """Test GoogleCloudDatacatalogV1ColumnSchema
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatacatalogV1ColumnSchema`
        """
        model = GoogleCloudDatacatalogV1ColumnSchema()
        if include_optional:
            return GoogleCloudDatacatalogV1ColumnSchema(
                column = '',
                default_value = '',
                description = '',
                gc_rule = '',
                highest_indexing_type = 'INDEXING_TYPE_UNSPECIFIED',
                looker_column_spec = openapi_client.models.google_cloud_datacatalog_v1_column_schema_looker_column_spec.GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec(
                    type = 'LOOKER_COLUMN_TYPE_UNSPECIFIED', ),
                mode = '',
                ordinal_position = 56,
                range_element_type = openapi_client.models.google_cloud_datacatalog_v1_column_schema_field_element_type.GoogleCloudDatacatalogV1ColumnSchemaFieldElementType(
                    type = '', ),
                subcolumns = [
                    openapi_client.models.google_cloud_datacatalog_v1_column_schema.GoogleCloudDatacatalogV1ColumnSchema(
                        column = '', 
                        default_value = '', 
                        description = '', 
                        gc_rule = '', 
                        highest_indexing_type = 'INDEXING_TYPE_UNSPECIFIED', 
                        looker_column_spec = openapi_client.models.google_cloud_datacatalog_v1_column_schema_looker_column_spec.GoogleCloudDatacatalogV1ColumnSchemaLookerColumnSpec(
                            type = 'LOOKER_COLUMN_TYPE_UNSPECIFIED', ), 
                        mode = '', 
                        ordinal_position = 56, 
                        range_element_type = openapi_client.models.google_cloud_datacatalog_v1_column_schema_field_element_type.GoogleCloudDatacatalogV1ColumnSchemaFieldElementType(
                            type = '', ), 
                        subcolumns = [
                            openapi_client.models.google_cloud_datacatalog_v1_column_schema.GoogleCloudDatacatalogV1ColumnSchema(
                                column = '', 
                                default_value = '', 
                                description = '', 
                                gc_rule = '', 
                                highest_indexing_type = 'INDEXING_TYPE_UNSPECIFIED', 
                                mode = '', 
                                ordinal_position = 56, 
                                type = '', )
                            ], 
                        type = '', )
                    ],
                type = ''
            )
        else:
            return GoogleCloudDatacatalogV1ColumnSchema(
        )
        """

    def testGoogleCloudDatacatalogV1ColumnSchema(self):
        """Test GoogleCloudDatacatalogV1ColumnSchema"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
