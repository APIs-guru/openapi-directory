openapi: 3.0.0
servers:
  - url: https://datacatalog.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: "A fully managed and highly scalable data discovery and metadata management service. "
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Google Cloud Data Catalog API
  version: v1beta1
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://upload.wikimedia.org/wikipedia/commons/e/e1/YouTube_play_buttom_icon_%282013-2017%29.svg
  x-origin:
    - format: google
      url: https://datacatalog.googleapis.com/$discovery/rest?version=v1beta1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: datacatalog
externalDocs:
  url: https://cloud.google.com/data-catalog/docs/
tags:
  - name: catalog
  - name: entries
  - name: projects
paths:
  /v1beta1/catalog:search:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Searches Data Catalog for multiple resources like entries, tags that match a query. This is a custom method (https://cloud.google.com/apis/design/custom_methods) and does not return the complete resource, only the resource identifier and high level fields. Clients can subsequently call `Get` methods. Note that Data Catalog search queries do not guarantee full recall. Query results that match your query may not be returned, even in subsequent result pages. Also note that results returned (and not returned) can vary across repeated search queries. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.
      operationId: datacatalog.catalog.search
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - catalog
  /v1beta1/entries:lookup:
    get:
      description: Get an entry by target resource name. This method allows clients to use the resource name from the source Google Cloud Platform service to get the Data Catalog Entry.
      operationId: datacatalog.entries.lookup
      parameters:
        - description: "The full name of the Google Cloud Platform resource the Data Catalog entry represents. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Full names are case-sensitive. Examples: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId * //pubsub.googleapis.com/projects/projectId/topics/topicId"
          in: query
          name: linkedResource
          schema:
            type: string
        - description: "The SQL name of the entry. SQL names are case-sensitive. Examples: * `pubsub.project_id.topic_id` * ``pubsub.project_id.`topic.id.with.dots` `` * `bigquery.table.project_id.dataset_id.table_id` * `bigquery.dataset.project_id.dataset_id` * `datacatalog.entry.project_id.location_id.entry_group_id.entry_id` `*_id`s should satisfy the standard SQL rules for identifiers. https://cloud.google.com/bigquery/docs/reference/standard-sql/lexical."
          in: query
          name: sqlResource
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Entry"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - entries
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1beta1/{name}":
    delete:
      description: Deletes a policy tag. Also deletes all of its descendant policy tags.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.delete
      parameters:
        - description: Required. Resource name of the policy tag to be deleted. All of its descendant policy tags will also be deleted.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Required. Currently, this field must always be set to `true`. This confirms the deletion of this field from any tags using this field. `force = false` will be supported in the future.
          in: query
          name: force
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.get
      parameters:
        - description: Required. Resource name of the requested policy tag.
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The fields to return. If not set or empty, all fields are returned.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.patch
      parameters:
        - description: 'Output only. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".'
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: The update mask applies to the resource. Only display_name, description and parent_policy_tag can be updated and thus can be listed in the mask. If update_mask is not provided, all allowed fields (i.e. display_name, description and parent) will be updated. For more information including the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask If not set, defaults to all of the fields that are allowed to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{name}:rename":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Renames an enum value in a tag template. The enum values have to be unique within one enum field. Thus, an enum value cannot be renamed with a name used in any other enum value within the same enum field.
      operationId: datacatalog.projects.locations.tagTemplates.fields.enumValues.rename
      parameters:
        - description: "Required. The name of the enum field value. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id}/fields/{tag_template_field_id}/enumValues/{enum_value_display_name}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/entries":
    get:
      description: Lists entries.
      operationId: datacatalog.projects.locations.entryGroups.entries.list
      parameters:
        - description: "Required. The name of the entry group that contains the entries, which can be provided in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size > 1000`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token that specifies which page is requested. If empty, the first page is returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The fields to return for each Entry. If not set or empty, all fields are returned. For example, setting read_mask to contain only one path "name" will cause ListEntries to return a list of Entries with only "name" field.
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ListEntriesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an entry. Only entries of 'FILESET' type or user-specified type can be created. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information). A maximum of 100,000 entries may be created per entry group.
      operationId: datacatalog.projects.locations.entryGroups.entries.create
      parameters:
        - description: "Required. The name of the entry group this entry is in. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this Entry and its child resources may not actually be stored in the location in this name."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The id of the entry to create.
          in: query
          name: entryId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Entry"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Entry"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/entryGroups":
    get:
      description: Lists entry groups.
      operationId: datacatalog.projects.locations.entryGroups.list
      parameters:
        - description: "Required. The name of the location that contains the entry groups, which can be provided in URL format. Example: * projects/{project_id}/locations/{location}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of items to return. Default is 10. Max limit is 1000. Throws an invalid argument for `page_size > 1000`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. Token that specifies which page is requested. If empty, the first page is returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: A maximum of 10,000 entry groups may be created per organization across all locations. Users should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project] (https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
      operationId: datacatalog.projects.locations.entryGroups.create
      parameters:
        - description: "Required. The name of the project this entry group is in. Example: * projects/{project_id}/locations/{location} Note that this EntryGroup and its child resources may not actually be stored in the location in this name."
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The id of the entry group to create. The id must begin with a letter or underscore, contain only English letters, numbers and underscores, and be at most 64 characters.
          in: query
          name: entryGroupId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/fields":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a field in a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
      operationId: datacatalog.projects.locations.tagTemplates.fields.create
      parameters:
        - description: "Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions). Example: * projects/{project_id}/locations/us-central1/tagTemplates/{tag_template_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The ID of the tag template field to create. Field ids can contain letters (both uppercase and lowercase), numbers (0-9), underscores (_) and dashes (-). Field IDs must be at least 1 character long and at most 128 characters long. Field IDs must also be unique within their template.
          in: query
          name: tagTemplateFieldId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/policyTags":
    get:
      description: Lists all policy tags in a taxonomy.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.list
      parameters:
        - description: Required. Resource name of the taxonomy to list the policy tags of.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous List request, if any. If not set, defaults to an empty string.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a policy tag in the specified taxonomy.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.create
      parameters:
        - description: Required. Resource name of the taxonomy that the policy tag will belong to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/tagTemplates":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a tag template. The user should enable the Data Catalog API in the project identified by the `parent` parameter (see [Data Catalog Resource Project](https://cloud.google.com/data-catalog/docs/concepts/resource-project) for more information).
      operationId: datacatalog.projects.locations.tagTemplates.create
      parameters:
        - description: "Required. The name of the project and the template location [region](https://cloud.google.com/data-catalog/docs/concepts/regions. Example: * projects/{project_id}/locations/us-central1"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Required. The id of the tag template to create.
          in: query
          name: tagTemplateId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/tags":
    get:
      description: Lists tags assigned to an Entry. The columns in the response are lowercased.
      operationId: datacatalog.projects.locations.entryGroups.tags.list
      parameters:
        - description: "Required. The name of the Data Catalog resource to list the tags of. The resource could be an Entry or an EntryGroup. Examples: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of tags to return. Default is 10. Max limit is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Token that specifies which page is requested. If empty, the first page is returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ListTagsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a tag on an Entry. Note: The project identified by the `parent` parameter for the [tag](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.entryGroups.entries.tags/create#path-parameters) and the [tag template](https://cloud.google.com/data-catalog/docs/reference/rest/v1beta1/projects.locations.tagTemplates/create#path-parameters) used to create the tag must be from the same organization."
      operationId: datacatalog.projects.locations.entryGroups.tags.create
      parameters:
        - description: "Required. The name of the resource to attach this tag to. Tags can be attached to Entries. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Tag and its child resources may not actually be stored in the location in this name."
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Tag"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Tag"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/taxonomies":
    get:
      description: Lists all taxonomies in a project in a particular location that the caller has permission to view.
      operationId: datacatalog.projects.locations.taxonomies.list
      parameters:
        - description: Required. Resource name of the project to list the taxonomies of.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: The maximum number of items to return. Must be a value between 1 and 1000. If not set, defaults to 50.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The next_page_token value returned from a previous list request, if any. If not set, defaults to an empty string.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a taxonomy in the specified project.
      operationId: datacatalog.projects.locations.taxonomies.create
      parameters:
        - description: Required. Resource name of the project that the taxonomy will belong to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{parent}/taxonomies:export":
    get:
      description: Exports all taxonomies and their policy tags in a project. This method generates SerializedTaxonomy protos with nested policy tags that can be used as an input for future ImportTaxonomies calls.
      operationId: datacatalog.projects.locations.taxonomies.export
      parameters:
        - description: Required. Resource name of the project that taxonomies to be exported will share.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Export taxonomies as serialized taxonomies.
          in: query
          name: serializedTaxonomies
          schema:
            type: boolean
        - description: Required. Resource names of the taxonomies to be exported.
          explode: true
          in: query
          name: taxonomies
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1beta1/{parent}/taxonomies:import":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Imports all taxonomies and their policy tags to a project as new taxonomies. This method provides a bulk taxonomy / policy tag creation using nested proto structure.
      operationId: datacatalog.projects.locations.taxonomies.import
      parameters:
        - description: Required. Resource name of project that the imported taxonomies will belong to.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{resource}:getIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets the IAM policy for a taxonomy or a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{resource}:setIamPolicy":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the IAM policy for a taxonomy or a policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  "/v1beta1/{resource}:testIamPermissions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Returns the permissions that a caller has on the specified taxonomy or policy tag.
      operationId: datacatalog.projects.locations.taxonomies.policyTags.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See [Resource names](https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Binding:
      description: Associates `members`, or principals, with a `role`.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a Google service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]`: An identifier for a [Kubernetes service account](https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, `my-project.svc.id.goog[my-namespace/my-kubernetes-sa]`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of `members`, or principals. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for `GetIamPolicy` method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
          description: "OPTIONAL: A `GetPolicyOptions` object for specifying options to `GetIamPolicy`."
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: Optional. The maximum policy version that will be used to format the policy. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset. The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
      type: object
    GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec:
      description: "Spec for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding"
      properties:
        dataset:
          description: Output only. The Data Catalog resource name of the dataset entry the current table belongs to, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`.
          readOnly: true
          type: string
        shardCount:
          description: Output only. Total number of shards.
          format: int64
          readOnly: true
          type: string
        tablePrefix:
          description: Output only. The table name prefix of the shards. The name of any given shard is `[table_prefix]YYYYMMDD`, for example, for shard `MyTable20180101`, the `table_prefix` is `MyTable`.
          readOnly: true
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1BigQueryTableSpec:
      description: Describes a BigQuery table.
      properties:
        tableSourceType:
          description: Output only. The table source type.
          enum:
            - TABLE_SOURCE_TYPE_UNSPECIFIED
            - BIGQUERY_VIEW
            - BIGQUERY_TABLE
            - BIGQUERY_MATERIALIZED_VIEW
          readOnly: true
          type: string
        tableSpec:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TableSpec"
          description: Spec of a BigQuery table. This field should only be populated if `table_source_type` is `BIGQUERY_TABLE`.
        viewSpec:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ViewSpec"
          description: Table view specification. This field should only be populated if `table_source_type` is `BIGQUERY_VIEW`.
      type: object
    GoogleCloudDatacatalogV1beta1ColumnSchema:
      description: Representation of a column within a schema. Columns could be nested inside other columns.
      properties:
        column:
          description: Required. Name of the column.
          type: string
        description:
          description: Optional. Description of the column. Default value is an empty string.
          type: string
        mode:
          description: Optional. A column's mode indicates whether the values in this column are required, nullable, etc. Only `NULLABLE`, `REQUIRED` and `REPEATED` are supported. Default mode is `NULLABLE`.
          type: string
        subcolumns:
          description: Optional. Schema of sub-columns. A column can have zero or more sub-columns.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ColumnSchema"
          type: array
        type:
          description: Required. Type of the column.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1Entry:
      description: Entry Metadata. A Data Catalog Entry resource represents another resource in Google Cloud Platform (such as a BigQuery dataset or a Pub/Sub topic), or outside of Google Cloud Platform. Clients can use the `linked_resource` field in the Entry resource to refer to the original resource ID of the source system. An Entry resource contains resource details, such as its schema. An Entry can also be used to attach flexible metadata, such as a Tag.
      properties:
        bigqueryDateShardedSpec:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1BigQueryDateShardedSpec"
          description: "Specification for a group of BigQuery tables with name pattern `[prefix]YYYYMMDD`. Context: https://cloud.google.com/bigquery/docs/partitioned-tables#partitioning_versus_sharding."
        bigqueryTableSpec:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1BigQueryTableSpec"
          description: Specification that applies to a BigQuery table. This is only valid on entries of type `TABLE`.
        description:
          description: Entry description, which can consist of several sentences or paragraphs that describe entry contents. Default value is an empty string.
          type: string
        displayName:
          description: Display information such as title and description. A short name to identify the entry, for example, "Analytics Data - Jan 2011". Default value is an empty string.
          type: string
        gcsFilesetSpec:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1GcsFilesetSpec"
          description: Specification that applies to a Cloud Storage fileset. This is only valid on entries of type FILESET.
        integratedSystem:
          description: Output only. This field indicates the entry's source system that Data Catalog integrates with, such as BigQuery or Pub/Sub.
          enum:
            - INTEGRATED_SYSTEM_UNSPECIFIED
            - BIGQUERY
            - CLOUD_PUBSUB
          readOnly: true
          type: string
        linkedResource:
          description: "The resource this metadata entry refers to. For Google Cloud Platform resources, `linked_resource` is the [full name of the resource](https://cloud.google.com/apis/design/resource_names#full_resource_name). For example, the `linked_resource` for a table resource from BigQuery is: * //bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty string."
          type: string
        name:
          description: "Output only. The Data Catalog resource name of the entry in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id}/entries/{entry_id} Note that this Entry and its child resources may not actually be stored in the location in this name."
          readOnly: true
          type: string
        schema:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Schema"
          description: Schema of the entry. An entry might not have any schema attached to it.
        sourceSystemTimestamps:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps"
          description: Output only. Timestamps about the underlying resource, not about this Data Catalog entry. Output only when Entry is of type in the EntryType enum. For entries with user_specified_type, this field is optional and defaults to an empty timestamp.
          readOnly: true
        type:
          description: The type of the entry. Only used for Entries with types in the EntryType enum.
          enum:
            - ENTRY_TYPE_UNSPECIFIED
            - TABLE
            - MODEL
            - DATA_STREAM
            - FILESET
          type: string
        usageSignal:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1UsageSignal"
          description: Output only. Statistics on the usage level of the resource.
          readOnly: true
        userSpecifiedSystem:
          description: This field indicates the entry's source system that Data Catalog does not integrate with. `user_specified_system` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long.
          type: string
        userSpecifiedType:
          description: Entry type if it does not fit any of the input-allowed values listed in `EntryType` enum above. When creating an entry, users should check the enum values first, if nothing matches the entry to be created, then provide a custom value, for example "my_special_type". `user_specified_type` strings must begin with a letter or underscore and can only contain letters, numbers, and underscores; are case insensitive; must be at least 1 character and at most 64 characters long. Currently, only FILESET enum value is allowed. All other entries created through Data Catalog must use `user_specified_type`.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1EntryGroup:
      description: EntryGroup Metadata. An EntryGroup resource represents a logical grouping of zero or more Data Catalog Entry resources.
      properties:
        dataCatalogTimestamps:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps"
          description: Output only. Timestamps about this EntryGroup. Default value is empty timestamps.
          readOnly: true
        description:
          description: Entry group description, which can consist of several sentences or paragraphs that describe entry group contents. Default value is an empty string.
          type: string
        displayName:
          description: A short name to identify the entry group, for example, "analytics data - jan 2011". Default value is an empty string.
          type: string
        name:
          description: "The resource name of the entry group in URL format. Example: * projects/{project_id}/locations/{location}/entryGroups/{entry_group_id} Note that this EntryGroup and its child resources may not actually be stored in the location in this name."
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1ExportTaxonomiesResponse:
      description: Response message for ExportTaxonomies.
      properties:
        taxonomies:
          description: List of taxonomies and policy tags in a tree structure.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SerializedTaxonomy"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1FieldType:
      properties:
        enumType:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1FieldTypeEnumType"
          description: Represents an enum type.
        primitiveType:
          description: Represents primitive types - string, bool etc.
          enum:
            - PRIMITIVE_TYPE_UNSPECIFIED
            - DOUBLE
            - STRING
            - BOOL
            - TIMESTAMP
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1FieldTypeEnumType:
      properties:
        allowedValues:
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1FieldTypeEnumTypeEnumValue:
      properties:
        displayName:
          description: Required. The display name of the enum value. Must not be an empty string.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1GcsFileSpec:
      description: Specifications of a single file in Cloud Storage.
      properties:
        filePath:
          description: "Required. The full file path. Example: `gs://bucket_name/a/b.txt`."
          type: string
        gcsTimestamps:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps"
          description: Output only. Timestamps about the Cloud Storage file.
          readOnly: true
        sizeBytes:
          description: Output only. The size of the file, in bytes.
          format: int64
          readOnly: true
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1GcsFilesetSpec:
      description: Describes a Cloud Storage fileset entry.
      properties:
        filePatterns:
          description: "Required. Patterns to identify a set of files in Google Cloud Storage. See [Cloud Storage documentation](https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames) for more information. Note that bucket wildcards are currently not supported. Examples of valid file_patterns: * `gs://bucket_name/dir/*`: matches all files within `bucket_name/dir` directory. * `gs://bucket_name/dir/**`: matches all files in `bucket_name/dir` spanning all subdirectories. * `gs://bucket_name/file*`: matches files prefixed by `file` in `bucket_name` * `gs://bucket_name/??.txt`: matches files with two characters followed by `.txt` in `bucket_name` * `gs://bucket_name/[aeiou].txt`: matches files that contain a single vowel character followed by `.txt` in `bucket_name` * `gs://bucket_name/[a-m].txt`: matches files that contain `a`, `b`, ... or `m` followed by `.txt` in `bucket_name` * `gs://bucket_name/a/*/b`: matches all files in `bucket_name` that match `a/*/b` pattern, such as `a/c/b`, `a/d/b` * `gs://another_bucket/a.txt`: matches `gs://another_bucket/a.txt` You can combine wildcards to provide more powerful matches, for example: * `gs://bucket_name/[a-m]??.j*g`"
          items:
            type: string
          type: array
        sampleGcsFileSpecs:
          description: Output only. Sample files contained in this fileset, not all files contained in this fileset are represented here.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1GcsFileSpec"
          readOnly: true
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1ImportTaxonomiesRequest:
      description: Request message for ImportTaxonomies.
      properties:
        inlineSource:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1InlineSource"
          description: Inline source used for taxonomies to be imported.
      type: object
    GoogleCloudDatacatalogV1beta1ImportTaxonomiesResponse:
      description: Response message for ImportTaxonomies.
      properties:
        taxonomies:
          description: Taxonomies that were imported.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1InlineSource:
      description: Inline source used for taxonomies import.
      properties:
        taxonomies:
          description: Required. Taxonomies to be imported.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SerializedTaxonomy"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1ListEntriesResponse:
      description: Response message for ListEntries.
      properties:
        entries:
          description: Entry details.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Entry"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no items remain in results.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1ListEntryGroupsResponse:
      description: Response message for ListEntryGroups.
      properties:
        entryGroups:
          description: EntryGroup details.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1EntryGroup"
          type: array
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no items remain in results.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1ListPolicyTagsResponse:
      description: Response message for ListPolicyTags.
      properties:
        nextPageToken:
          description: Token used to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        policyTags:
          description: The policy tags that are in the requested taxonomy.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1PolicyTag"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1ListTagsResponse:
      description: Response message for ListTags.
      properties:
        nextPageToken:
          description: Token to retrieve the next page of results. It is set to empty if no items remain in results.
          type: string
        tags:
          description: Tag details.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Tag"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1ListTaxonomiesResponse:
      description: Response message for ListTaxonomies.
      properties:
        nextPageToken:
          description: Token used to retrieve the next page of results, or empty if there are no more results in the list.
          type: string
        taxonomies:
          description: Taxonomies that the project contains.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1Taxonomy"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1PolicyTag:
      description: 'Denotes one policy tag in a taxonomy (e.g. ssn). Policy Tags can be defined in a hierarchy. For example, consider the following hierarchy: Geolocation -> (LatLong, City, ZipCode). PolicyTag "Geolocation" contains three child policy tags: "LatLong", "City", and "ZipCode".'
      properties:
        childPolicyTags:
          description: Output only. Resource names of child policy tags of this policy tag.
          items:
            type: string
          readOnly: true
          type: array
        description:
          description: "Description of this policy tag. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description. If not set, defaults to an empty description."
          type: string
        displayName:
          description: "Required. User defined name of this policy tag. It must: be unique within the parent taxonomy; contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8."
          type: string
        name:
          description: 'Output only. Resource name of this policy tag, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{taxonomy_id}/policyTags/{id}".'
          readOnly: true
          type: string
        parentPolicyTag:
          description: Resource name of this policy tag's parent policy tag (e.g. for the "LatLong" policy tag in the example above, this field contains the resource name of the "Geolocation" policy tag). If empty, it means this policy tag is a top level policy tag (e.g. this field is empty for the "Geolocation" policy tag in the example above). If not set, defaults to an empty string.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldEnumValueRequest:
      description: Request message for RenameTagTemplateFieldEnumValue.
      properties:
        newEnumValueDisplayName:
          description: Required. The new display name of the enum value. For example, `my_new_enum_value`.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1RenameTagTemplateFieldRequest:
      description: Request message for RenameTagTemplateField.
      properties:
        newTagTemplateFieldId:
          description: Required. The new ID of this tag template field. For example, `my_new_field`.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1Schema:
      description: Represents a schema (e.g. BigQuery, GoogleSQL, Avro schema).
      properties:
        columns:
          description: Required. Schema of columns. A maximum of 10,000 columns and sub-columns can be specified.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1ColumnSchema"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1SearchCatalogRequest:
      description: Request message for SearchCatalog.
      properties:
        orderBy:
          description: "Specifies the ordering of results, currently supported case-sensitive choices are: * `relevance`, only supports descending * `last_modified_timestamp [asc|desc]`, defaults to descending if not specified * `default` that can only be descending If not specified, defaults to `relevance` descending."
          type: string
        pageSize:
          description: Number of results in the search page. If <=0 then defaults to 10. Max limit for page_size is 1000. Throws an invalid argument for page_size > 1000.
          format: int32
          type: integer
        pageToken:
          description: Optional. Pagination token returned in an earlier SearchCatalogResponse.next_page_token, which indicates that this is a continuation of a prior SearchCatalogRequest call, and that the system should return the next page of data. If empty, the first page is returned.
          type: string
        query:
          description: 'Optional. The query string in search query syntax. An empty query string will result in all data assets (in the specified scope) that the user has access to. Query strings can be simple as "x" or more qualified as: * name:x * column:x * description:y Note: Query tokens need to have a minimum of 3 characters for substring matching to work correctly. See [Data Catalog Search Syntax](https://cloud.google.com/data-catalog/docs/how-to/search-reference) for more information.'
          type: string
        scope:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope"
          description: Required. The scope of this search request. A `scope` that has empty `include_org_ids`, `include_project_ids` AND false `include_gcp_public_datasets` is considered invalid. Data Catalog will return an error in such a case.
      type: object
    GoogleCloudDatacatalogV1beta1SearchCatalogRequestScope:
      description: The criteria that select the subspace used for query matching.
      properties:
        includeGcpPublicDatasets:
          description: If `true`, include Google Cloud Platform (GCP) public datasets in the search results. Info on GCP public datasets is available at https://cloud.google.com/public-datasets/. By default, GCP public datasets are excluded.
          type: boolean
        includeOrgIds:
          description: The list of organization IDs to search within. To find your organization ID, follow instructions in https://cloud.google.com/resource-manager/docs/creating-managing-organization.
          items:
            type: string
          type: array
        includeProjectIds:
          description: The list of project IDs to search within. To learn more about the distinction between project names/IDs/numbers, go to https://cloud.google.com/docs/overview/#projects.
          items:
            type: string
          type: array
        restrictedLocations:
          description: "Optional. The list of locations to search within. 1. If empty, search will be performed in all locations; 2. If any of the locations are NOT in the valid locations list, error will be returned; 3. Otherwise, search only the given locations for matching results. Typical usage is to leave this field empty. When a location is unreachable as returned in the `SearchCatalogResponse.unreachable` field, users can repeat the search request with this parameter set to get additional information on the error. Valid locations: * asia-east1 * asia-east2 * asia-northeast1 * asia-northeast2 * asia-northeast3 * asia-south1 * asia-southeast1 * australia-southeast1 * eu * europe-north1 * europe-west1 * europe-west2 * europe-west3 * europe-west4 * europe-west6 * global * northamerica-northeast1 * southamerica-east1 * us * us-central1 * us-east1 * us-east4 * us-west1 * us-west2"
          items:
            type: string
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1SearchCatalogResponse:
      description: Response message for SearchCatalog.
      properties:
        nextPageToken:
          description: The token that can be used to retrieve the next page of results.
          type: string
        results:
          description: Search results.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SearchCatalogResult"
          type: array
        unreachable:
          description: Unreachable locations. Search result does not include data from those locations. Users can get additional information on the error by repeating the search request with a more restrictive parameter -- setting the value for `SearchDataCatalogRequest.scope.restricted_locations`.
          items:
            type: string
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1SearchCatalogResult:
      description: A result that appears in the response of a search request. Each result captures details of one entry that matches the search.
      properties:
        linkedResource:
          description: "The full name of the cloud resource the entry belongs to. See: https://cloud.google.com/apis/design/resource_names#full_resource_name. Example: * `//bigquery.googleapis.com/projects/projectId/datasets/datasetId/tables/tableId`"
          type: string
        modifyTime:
          description: Last-modified timestamp of the entry from the managing system.
          format: google-datetime
          type: string
        relativeResourceName:
          description: "The relative resource name of the resource in URL format. Examples: * `projects/{project_id}/locations/{location_id}/entryGroups/{entry_group_id}/entries/{entry_id}` * `projects/{project_id}/tagTemplates/{tag_template_id}`"
          type: string
        searchResultSubtype:
          description: "Sub-type of the search result. This is a dot-delimited description of the resource's full type, and is the same as the value callers would provide in the \"type\" search facet. Examples: `entry.table`, `entry.dataStream`, `tagTemplate`."
          type: string
        searchResultType:
          description: Type of the search result. This field can be used to determine which Get method to call to fetch the full resource.
          enum:
            - SEARCH_RESULT_TYPE_UNSPECIFIED
            - ENTRY
            - TAG_TEMPLATE
            - ENTRY_GROUP
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1SerializedPolicyTag:
      description: Message representing one policy tag when exported as a nested proto.
      properties:
        childPolicyTags:
          description: Children of the policy tag if any.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SerializedPolicyTag"
          type: array
        description:
          description: Description of the serialized policy tag. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
          type: string
        displayName:
          description: Required. Display name of the policy tag. Max 200 bytes when encoded in UTF-8.
          type: string
        policyTag:
          description: Resource name of the policy tag. This field will be ignored when calling ImportTaxonomies.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1SerializedTaxonomy:
      description: Message capturing a taxonomy and its policy tag hierarchy as a nested proto. Used for taxonomy import/export and mutation.
      properties:
        activatedPolicyTypes:
          description: A list of policy types that are activated for a taxonomy.
          items:
            enum:
              - POLICY_TYPE_UNSPECIFIED
              - FINE_GRAINED_ACCESS_CONTROL
            type: string
          type: array
        description:
          description: Description of the serialized taxonomy. The length of the description is limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an empty description.
          type: string
        displayName:
          description: Required. Display name of the taxonomy. Max 200 bytes when encoded in UTF-8.
          type: string
        policyTags:
          description: Top level policy tags associated with the taxonomy if any.
          items:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SerializedPolicyTag"
          type: array
      type: object
    GoogleCloudDatacatalogV1beta1SystemTimestamps:
      description: Timestamps about this resource according to a particular system.
      properties:
        createTime:
          description: The creation time of the resource within the given system.
          format: google-datetime
          type: string
        expireTime:
          description: Output only. The expiration time of the resource within the given system. Currently only apllicable to BigQuery resources.
          format: google-datetime
          readOnly: true
          type: string
        updateTime:
          description: The last-modified time of the resource within the given system.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1TableSpec:
      description: Normal BigQuery table spec.
      properties:
        groupedEntry:
          description: Output only. If the table is a dated shard, i.e., with name pattern `[prefix]YYYYMMDD`, `grouped_entry` is the Data Catalog resource name of the date sharded grouped entry, for example, `projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}`. Otherwise, `grouped_entry` is empty.
          readOnly: true
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1Tag:
      description: Tags are used to attach custom metadata to Data Catalog resources. Tags conform to the specifications within their tag template. See [Data Catalog IAM](https://cloud.google.com/data-catalog/docs/concepts/iam) for information on the permissions needed to create or view tags.
      properties:
        column:
          description: "Resources like Entry can have schemas associated with them. This scope allows users to attach tags to an individual column based on that schema. For attaching a tag to a nested column, use `.` to separate the column names. Example: * `outer_column.inner_column`"
          type: string
        fields:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagField"
          description: Required. This maps the ID of a tag field to the value of and additional information about that field. Valid field IDs are defined by the tag's template. A tag must have at least 1 field and at most 500 fields.
          type: object
        name:
          description: "The resource name of the tag in URL format. Example: * projects/{project_id}/locations/{location}/entrygroups/{entry_group_id}/entries/{entry_id}/tags/{tag_id} where `tag_id` is a system-generated identifier. Note that this Tag may not actually be stored in the location in this name."
          type: string
        template:
          description: "Required. The resource name of the tag template that this tag uses. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} This field cannot be modified after creation."
          type: string
        templateDisplayName:
          description: Output only. The display name of the tag template.
          readOnly: true
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1TagField:
      description: Contains the value and supporting information for a field within a Tag.
      properties:
        boolValue:
          description: Holds the value for a tag field with boolean type.
          type: boolean
        displayName:
          description: Output only. The display name of this field.
          readOnly: true
          type: string
        doubleValue:
          description: Holds the value for a tag field with double type.
          format: double
          type: number
        enumValue:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagFieldEnumValue"
          description: Holds the value for a tag field with enum type. This value must be one of the allowed values in the definition of this enum.
        order:
          description: Output only. The order of this field with respect to other fields in this tag. It can be set in Tag. For example, a higher value can indicate a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
          format: int32
          readOnly: true
          type: integer
        stringValue:
          description: Holds the value for a tag field with string type.
          type: string
        timestampValue:
          description: Holds the value for a tag field with timestamp type.
          format: google-datetime
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1TagFieldEnumValue:
      description: Holds an enum value.
      properties:
        displayName:
          description: The display name of the enum value.
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1TagTemplate:
      description: A tag template defines a tag, which can have one or more typed fields. The template is used to create and attach the tag to GCP resources. [Tag template roles](https://cloud.google.com/iam/docs/understanding-roles#data-catalog-roles) provide permissions to create, edit, and use the template. See, for example, the [TagTemplate User](https://cloud.google.com/data-catalog/docs/how-to/template-user) role, which includes permission to use the tag template to tag resources.
      properties:
        displayName:
          description: The display name for this template. Defaults to an empty string.
          type: string
        fields:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1TagTemplateField"
          description: Required. Map of tag template field IDs to the settings for the field. This map is an exhaustive list of the allowed fields. This map must contain at least one field and at most 500 fields. The keys to this map are tag template field IDs. Field IDs can contain letters (both uppercase and lowercase), numbers (0-9) and underscores (_). Field IDs must be at least 1 character long and at most 64 characters long. Field IDs must start with a letter or underscore.
          type: object
        name:
          description: "The resource name of the tag template in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template_id} Note that this TagTemplate and its child resources may not actually be stored in the location in this name."
          type: string
      type: object
    GoogleCloudDatacatalogV1beta1TagTemplateField:
      description: The template for an individual field within a tag template.
      properties:
        description:
          description: The description for this field. Defaults to an empty string.
          type: string
        displayName:
          description: The display name for this field. Defaults to an empty string.
          type: string
        isRequired:
          description: Whether this is a required field. Defaults to false.
          type: boolean
        name:
          description: "Output only. The resource name of the tag template field in URL format. Example: * projects/{project_id}/locations/{location}/tagTemplates/{tag_template}/fields/{field} Note that this TagTemplateField may not actually be stored in the location in this name."
          readOnly: true
          type: string
        order:
          description: The order of this field with respect to other fields in this tag template. A higher value indicates a more important field. The value can be negative. Multiple fields can have the same order, and field orders within a tag do not have to be sequential.
          format: int32
          type: integer
        type:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1FieldType"
          description: Required. The type of value this tag field can contain.
      type: object
    GoogleCloudDatacatalogV1beta1Taxonomy:
      description: A taxonomy is a collection of policy tags that classify data along a common axis. For instance a data *sensitivity* taxonomy could contain policy tags denoting PII such as age, zipcode, and SSN. A data *origin* taxonomy could contain policy tags to distinguish user data, employee data, partner data, public data.
      properties:
        activatedPolicyTypes:
          description: Optional. A list of policy types that are activated for this taxonomy. If not set, defaults to an empty list.
          items:
            enum:
              - POLICY_TYPE_UNSPECIFIED
              - FINE_GRAINED_ACCESS_CONTROL
            type: string
          type: array
        description:
          description: "Optional. Description of this taxonomy. It must: contain only unicode characters, tabs, newlines, carriage returns and page breaks; and be at most 2000 bytes long when encoded in UTF-8. If not set, defaults to an empty description."
          type: string
        displayName:
          description: "Required. User defined name of this taxonomy. It must: contain only unicode letters, numbers, underscores, dashes and spaces; not start or end with spaces; and be at most 200 bytes long when encoded in UTF-8. The taxonomy display name must be unique within an organization."
          type: string
        name:
          description: 'Output only. Resource name of this taxonomy, whose format is: "projects/{project_number}/locations/{location_id}/taxonomies/{id}".'
          readOnly: true
          type: string
        policyTagCount:
          description: Output only. Number of policy tags contained in this taxonomy.
          format: int32
          readOnly: true
          type: integer
        taxonomyTimestamps:
          $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1SystemTimestamps"
          description: Output only. Timestamps about this taxonomy. Only create_time and update_time are used.
          readOnly: true
      type: object
    GoogleCloudDatacatalogV1beta1UsageSignal:
      description: The set of all usage signals that we store in Data Catalog.
      properties:
        updateTime:
          description: The timestamp of the end of the usage statistics duration.
          format: google-datetime
          type: string
        usageWithinTimeRange:
          additionalProperties:
            $ref: "#/components/schemas/GoogleCloudDatacatalogV1beta1UsageStats"
          description: Usage statistics over each of the pre-defined time ranges, supported strings for time ranges are {"24H", "7D", "30D"}.
          type: object
      type: object
    GoogleCloudDatacatalogV1beta1UsageStats:
      description: "Detailed counts on the entry's usage. Caveats: - Only BigQuery tables have usage stats - The usage stats only include BigQuery query jobs - The usage stats might be underestimated, e.g. wildcard table references are not yet counted in usage computation https://cloud.google.com/bigquery/docs/querying-wildcard-tables"
      properties:
        totalCancellations:
          description: The number of times that the underlying entry was attempted to be used but was cancelled by the user.
          format: float
          type: number
        totalCompletions:
          description: The number of times that the underlying entry was successfully used.
          format: float
          type: number
        totalExecutionTimeForCompletionsMillis:
          description: Total time spent (in milliseconds) during uses the resulted in completions.
          format: float
          type: number
        totalFailures:
          description: The number of times that the underlying entry was attempted to be used but failed.
          format: float
          type: number
      type: object
    GoogleCloudDatacatalogV1beta1ViewSpec:
      description: Table view specification.
      properties:
        viewQuery:
          description: Output only. The query that defines the table view.
          readOnly: true
          type: string
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
      properties:
        bindings:
          description: Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    SetIamPolicyRequest:
      description: Request message for `SetIamPolicy` method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
      type: object
    TestIamPermissionsRequest:
      description: Request message for `TestIamPermissions` method.
      properties:
        permissions:
          description: The set of permissions to check for the `resource`. Permissions with wildcards (such as `*` or `storage.*`) are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for `TestIamPermissions` method.
      properties:
        permissions:
          description: A subset of `TestPermissionsRequest.permissions` that the caller is allowed.
          items:
            type: string
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
