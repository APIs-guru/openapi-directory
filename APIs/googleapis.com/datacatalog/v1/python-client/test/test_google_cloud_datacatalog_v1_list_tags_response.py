# coding: utf-8

"""
    Google Cloud Data Catalog API

    A fully managed and highly scalable data discovery and metadata management service. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datacatalog_v1_list_tags_response import GoogleCloudDatacatalogV1ListTagsResponse

class TestGoogleCloudDatacatalogV1ListTagsResponse(unittest.TestCase):
    """GoogleCloudDatacatalogV1ListTagsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatacatalogV1ListTagsResponse:
        """Test GoogleCloudDatacatalogV1ListTagsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatacatalogV1ListTagsResponse`
        """
        model = GoogleCloudDatacatalogV1ListTagsResponse()
        if include_optional:
            return GoogleCloudDatacatalogV1ListTagsResponse(
                next_page_token = '',
                tags = [
                    openapi_client.models.google_cloud_datacatalog_v1_tag.GoogleCloudDatacatalogV1Tag(
                        column = '', 
                        fields = {
                            'key' : openapi_client.models.google_cloud_datacatalog_v1_tag_field.GoogleCloudDatacatalogV1TagField(
                                bool_value = True, 
                                display_name = '', 
                                double_value = 1.337, 
                                enum_value = openapi_client.models.google_cloud_datacatalog_v1_tag_field_enum_value.GoogleCloudDatacatalogV1TagFieldEnumValue(
                                    display_name = '', ), 
                                order = 56, 
                                richtext_value = '', 
                                string_value = '', 
                                timestamp_value = '', )
                            }, 
                        name = '', 
                        template = '', 
                        template_display_name = '', )
                    ]
            )
        else:
            return GoogleCloudDatacatalogV1ListTagsResponse(
        )
        """

    def testGoogleCloudDatacatalogV1ListTagsResponse(self):
        """Test GoogleCloudDatacatalogV1ListTagsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
