# coding: utf-8

"""
    Google Cloud Data Catalog API

    A fully managed and highly scalable data discovery and metadata management service. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_datacatalog_v1_tag_template import GoogleCloudDatacatalogV1TagTemplate

class TestGoogleCloudDatacatalogV1TagTemplate(unittest.TestCase):
    """GoogleCloudDatacatalogV1TagTemplate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudDatacatalogV1TagTemplate:
        """Test GoogleCloudDatacatalogV1TagTemplate
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudDatacatalogV1TagTemplate`
        """
        model = GoogleCloudDatacatalogV1TagTemplate()
        if include_optional:
            return GoogleCloudDatacatalogV1TagTemplate(
                display_name = '',
                fields = {
                    'key' : openapi_client.models.google_cloud_datacatalog_v1_tag_template_field.GoogleCloudDatacatalogV1TagTemplateField(
                        description = '', 
                        display_name = '', 
                        is_required = True, 
                        name = '', 
                        order = 56, 
                        type = openapi_client.models.google_cloud_datacatalog_v1_field_type.GoogleCloudDatacatalogV1FieldType(
                            enum_type = openapi_client.models.google_cloud_datacatalog_v1_field_type_enum_type.GoogleCloudDatacatalogV1FieldTypeEnumType(
                                allowed_values = [
                                    openapi_client.models.google_cloud_datacatalog_v1_field_type_enum_type_enum_value.GoogleCloudDatacatalogV1FieldTypeEnumTypeEnumValue(
                                        display_name = '', )
                                    ], ), 
                            primitive_type = 'PRIMITIVE_TYPE_UNSPECIFIED', ), )
                    },
                is_publicly_readable = True,
                name = ''
            )
        else:
            return GoogleCloudDatacatalogV1TagTemplate(
        )
        """

    def testGoogleCloudDatacatalogV1TagTemplate(self):
        """Test GoogleCloudDatacatalogV1TagTemplate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
