# coding: utf-8

"""
    Google Cloud Data Catalog API

    A fully managed and highly scalable data discovery and metadata management service. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.projects_api import ProjectsApi


class TestProjectsApi(unittest.TestCase):
    """ProjectsApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectsApi()

    def tearDown(self) -> None:
        pass

    def test_datacatalog_projects_locations_entry_groups_create(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_create

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_create(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_create

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_import(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_import

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_list(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_list

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_modify_entry_contacts(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_modify_entry_contacts

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_modify_entry_overview(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_modify_entry_overview

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_star(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_star

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_tags_reconcile(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_tags_reconcile

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_entries_unstar(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_entries_unstar

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_list(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_list

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_tags_create(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_tags_create

        """
        pass

    def test_datacatalog_projects_locations_entry_groups_tags_list(self) -> None:
        """Test case for datacatalog_projects_locations_entry_groups_tags_list

        """
        pass

    def test_datacatalog_projects_locations_operations_cancel(self) -> None:
        """Test case for datacatalog_projects_locations_operations_cancel

        """
        pass

    def test_datacatalog_projects_locations_operations_list(self) -> None:
        """Test case for datacatalog_projects_locations_operations_list

        """
        pass

    def test_datacatalog_projects_locations_tag_templates_create(self) -> None:
        """Test case for datacatalog_projects_locations_tag_templates_create

        """
        pass

    def test_datacatalog_projects_locations_tag_templates_fields_create(self) -> None:
        """Test case for datacatalog_projects_locations_tag_templates_fields_create

        """
        pass

    def test_datacatalog_projects_locations_tag_templates_fields_enum_values_rename(self) -> None:
        """Test case for datacatalog_projects_locations_tag_templates_fields_enum_values_rename

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_create(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_create

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_export(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_export

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_import(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_import

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_list(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_list

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_create(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_create

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_delete(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_delete

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_get(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_get

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_get_iam_policy(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_get_iam_policy

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_list(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_list

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_patch(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_patch

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_set_iam_policy(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_set_iam_policy

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_policy_tags_test_iam_permissions(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_policy_tags_test_iam_permissions

        """
        pass

    def test_datacatalog_projects_locations_taxonomies_replace(self) -> None:
        """Test case for datacatalog_projects_locations_taxonomies_replace

        """
        pass


if __name__ == '__main__':
    unittest.main()
