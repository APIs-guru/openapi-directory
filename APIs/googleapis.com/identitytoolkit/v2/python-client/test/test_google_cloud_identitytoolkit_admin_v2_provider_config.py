# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_admin_v2_provider_config import GoogleCloudIdentitytoolkitAdminV2ProviderConfig

class TestGoogleCloudIdentitytoolkitAdminV2ProviderConfig(unittest.TestCase):
    """GoogleCloudIdentitytoolkitAdminV2ProviderConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitAdminV2ProviderConfig:
        """Test GoogleCloudIdentitytoolkitAdminV2ProviderConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitAdminV2ProviderConfig`
        """
        model = GoogleCloudIdentitytoolkitAdminV2ProviderConfig()
        if include_optional:
            return GoogleCloudIdentitytoolkitAdminV2ProviderConfig(
                state = 'MFA_STATE_UNSPECIFIED',
                totp_provider_config = openapi_client.models.google_cloud_identitytoolkit_admin_v2_totp_mfa_provider_config.GoogleCloudIdentitytoolkitAdminV2TotpMfaProviderConfig(
                    adjacent_intervals = 56, )
            )
        else:
            return GoogleCloudIdentitytoolkitAdminV2ProviderConfig(
        )
        """

    def testGoogleCloudIdentitytoolkitAdminV2ProviderConfig(self):
        """Test GoogleCloudIdentitytoolkitAdminV2ProviderConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
