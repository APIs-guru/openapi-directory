# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_v2_password_policy import GoogleCloudIdentitytoolkitV2PasswordPolicy

class TestGoogleCloudIdentitytoolkitV2PasswordPolicy(unittest.TestCase):
    """GoogleCloudIdentitytoolkitV2PasswordPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitV2PasswordPolicy:
        """Test GoogleCloudIdentitytoolkitV2PasswordPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitV2PasswordPolicy`
        """
        model = GoogleCloudIdentitytoolkitV2PasswordPolicy()
        if include_optional:
            return GoogleCloudIdentitytoolkitV2PasswordPolicy(
                allowed_non_alphanumeric_characters = [
                    ''
                    ],
                custom_strength_options = openapi_client.models.google_cloud_identitytoolkit_v2_custom_strength_options.GoogleCloudIdentitytoolkitV2CustomStrengthOptions(
                    contains_lowercase_character = True, 
                    contains_non_alphanumeric_character = True, 
                    contains_numeric_character = True, 
                    contains_uppercase_character = True, 
                    max_password_length = 56, 
                    min_password_length = 56, ),
                enforcement_state = 'ENFORCEMENT_STATE_UNSPECIFIED',
                force_upgrade_on_signin = True,
                schema_version = 56
            )
        else:
            return GoogleCloudIdentitytoolkitV2PasswordPolicy(
        )
        """

    def testGoogleCloudIdentitytoolkitV2PasswordPolicy(self):
        """Test GoogleCloudIdentitytoolkitV2PasswordPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
