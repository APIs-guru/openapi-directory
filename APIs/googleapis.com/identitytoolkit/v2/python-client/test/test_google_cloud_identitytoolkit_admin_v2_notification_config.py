# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_admin_v2_notification_config import GoogleCloudIdentitytoolkitAdminV2NotificationConfig

class TestGoogleCloudIdentitytoolkitAdminV2NotificationConfig(unittest.TestCase):
    """GoogleCloudIdentitytoolkitAdminV2NotificationConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitAdminV2NotificationConfig:
        """Test GoogleCloudIdentitytoolkitAdminV2NotificationConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitAdminV2NotificationConfig`
        """
        model = GoogleCloudIdentitytoolkitAdminV2NotificationConfig()
        if include_optional:
            return GoogleCloudIdentitytoolkitAdminV2NotificationConfig(
                default_locale = '',
                send_email = openapi_client.models.google_cloud_identitytoolkit_admin_v2_send_email.GoogleCloudIdentitytoolkitAdminV2SendEmail(
                    callback_uri = '', 
                    change_email_template = openapi_client.models.google_cloud_identitytoolkit_admin_v2_email_template.GoogleCloudIdentitytoolkitAdminV2EmailTemplate(
                        body = '', 
                        body_format = 'BODY_FORMAT_UNSPECIFIED', 
                        customized = True, 
                        reply_to = '', 
                        sender_display_name = '', 
                        sender_local_part = '', 
                        subject = '', ), 
                    dns_info = openapi_client.models.google_cloud_identitytoolkit_admin_v2_dns_info.GoogleCloudIdentitytoolkitAdminV2DnsInfo(
                        custom_domain = '', 
                        custom_domain_state = 'VERIFICATION_STATE_UNSPECIFIED', 
                        domain_verification_request_time = '', 
                        pending_custom_domain = '', 
                        use_custom_domain = True, ), 
                    legacy_reset_password_template = openapi_client.models.google_cloud_identitytoolkit_admin_v2_email_template.GoogleCloudIdentitytoolkitAdminV2EmailTemplate(
                        body = '', 
                        body_format = 'BODY_FORMAT_UNSPECIFIED', 
                        customized = True, 
                        reply_to = '', 
                        sender_display_name = '', 
                        sender_local_part = '', 
                        subject = '', ), 
                    method = 'METHOD_UNSPECIFIED', 
                    reset_password_template = , 
                    revert_second_factor_addition_template = , 
                    smtp = openapi_client.models.google_cloud_identitytoolkit_admin_v2_smtp.GoogleCloudIdentitytoolkitAdminV2Smtp(
                        host = '', 
                        password = '', 
                        port = 56, 
                        security_mode = 'SECURITY_MODE_UNSPECIFIED', 
                        sender_email = '', 
                        username = '', ), 
                    verify_email_template = , ),
                send_sms = openapi_client.models.google_cloud_identitytoolkit_admin_v2_send_sms.GoogleCloudIdentitytoolkitAdminV2SendSms(
                    sms_template = openapi_client.models.google_cloud_identitytoolkit_admin_v2_sms_template.GoogleCloudIdentitytoolkitAdminV2SmsTemplate(
                        content = '', ), 
                    use_device_locale = True, )
            )
        else:
            return GoogleCloudIdentitytoolkitAdminV2NotificationConfig(
        )
        """

    def testGoogleCloudIdentitytoolkitAdminV2NotificationConfig(self):
        """Test GoogleCloudIdentitytoolkitAdminV2NotificationConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
