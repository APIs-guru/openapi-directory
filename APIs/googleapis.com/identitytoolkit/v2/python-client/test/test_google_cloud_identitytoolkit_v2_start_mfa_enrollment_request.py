# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_v2_start_mfa_enrollment_request import GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest

class TestGoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest(unittest.TestCase):
    """GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest:
        """Test GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest`
        """
        model = GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest()
        if include_optional:
            return GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest(
                id_token = '',
                phone_enrollment_info = openapi_client.models.google_cloud_identitytoolkit_v2_start_mfa_phone_request_info.GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo(
                    auto_retrieval_info = openapi_client.models.google_cloud_identitytoolkit_v2_auto_retrieval_info.GoogleCloudIdentitytoolkitV2AutoRetrievalInfo(
                        app_signature_hash = '', ), 
                    ios_receipt = '', 
                    ios_secret = '', 
                    phone_number = '', 
                    play_integrity_token = '', 
                    recaptcha_token = '', 
                    safety_net_token = '', ),
                tenant_id = '',
                totp_enrollment_info = None
            )
        else:
            return GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest(
        )
        """

    def testGoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest(self):
        """Test GoogleCloudIdentitytoolkitV2StartMfaEnrollmentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
