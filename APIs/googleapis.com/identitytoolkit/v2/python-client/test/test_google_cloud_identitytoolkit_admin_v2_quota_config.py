# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_admin_v2_quota_config import GoogleCloudIdentitytoolkitAdminV2QuotaConfig

class TestGoogleCloudIdentitytoolkitAdminV2QuotaConfig(unittest.TestCase):
    """GoogleCloudIdentitytoolkitAdminV2QuotaConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitAdminV2QuotaConfig:
        """Test GoogleCloudIdentitytoolkitAdminV2QuotaConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitAdminV2QuotaConfig`
        """
        model = GoogleCloudIdentitytoolkitAdminV2QuotaConfig()
        if include_optional:
            return GoogleCloudIdentitytoolkitAdminV2QuotaConfig(
                sign_up_quota_config = openapi_client.models.google_cloud_identitytoolkit_admin_v2_temporary_quota.GoogleCloudIdentitytoolkitAdminV2TemporaryQuota(
                    quota = '', 
                    quota_duration = '', 
                    start_time = '', )
            )
        else:
            return GoogleCloudIdentitytoolkitAdminV2QuotaConfig(
        )
        """

    def testGoogleCloudIdentitytoolkitAdminV2QuotaConfig(self):
        """Test GoogleCloudIdentitytoolkitAdminV2QuotaConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
