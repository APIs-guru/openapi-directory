# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_admin_v2_sign_in_config import GoogleCloudIdentitytoolkitAdminV2SignInConfig

class TestGoogleCloudIdentitytoolkitAdminV2SignInConfig(unittest.TestCase):
    """GoogleCloudIdentitytoolkitAdminV2SignInConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitAdminV2SignInConfig:
        """Test GoogleCloudIdentitytoolkitAdminV2SignInConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitAdminV2SignInConfig`
        """
        model = GoogleCloudIdentitytoolkitAdminV2SignInConfig()
        if include_optional:
            return GoogleCloudIdentitytoolkitAdminV2SignInConfig(
                allow_duplicate_emails = True,
                anonymous = openapi_client.models.google_cloud_identitytoolkit_admin_v2_anonymous.GoogleCloudIdentitytoolkitAdminV2Anonymous(
                    enabled = True, ),
                email = openapi_client.models.google_cloud_identitytoolkit_admin_v2_email.GoogleCloudIdentitytoolkitAdminV2Email(
                    enabled = True, 
                    password_required = True, ),
                hash_config = openapi_client.models.google_cloud_identitytoolkit_admin_v2_hash_config.GoogleCloudIdentitytoolkitAdminV2HashConfig(
                    algorithm = 'HASH_ALGORITHM_UNSPECIFIED', 
                    memory_cost = 56, 
                    rounds = 56, 
                    salt_separator = '', 
                    signer_key = '', ),
                phone_number = openapi_client.models.google_cloud_identitytoolkit_admin_v2_phone_number.GoogleCloudIdentitytoolkitAdminV2PhoneNumber(
                    enabled = True, 
                    test_phone_numbers = {
                        'key' : ''
                        }, )
            )
        else:
            return GoogleCloudIdentitytoolkitAdminV2SignInConfig(
        )
        """

    def testGoogleCloudIdentitytoolkitAdminV2SignInConfig(self):
        """Test GoogleCloudIdentitytoolkitAdminV2SignInConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
