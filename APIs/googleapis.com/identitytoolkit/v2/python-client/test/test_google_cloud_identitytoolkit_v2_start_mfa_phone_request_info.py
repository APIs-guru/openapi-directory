# coding: utf-8

"""
    Identity Toolkit API

    The Google Identity Toolkit API lets you use open standards to verify a user's identity.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_identitytoolkit_v2_start_mfa_phone_request_info import GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo

class TestGoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo(unittest.TestCase):
    """GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo:
        """Test GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo`
        """
        model = GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo()
        if include_optional:
            return GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo(
                auto_retrieval_info = openapi_client.models.google_cloud_identitytoolkit_v2_auto_retrieval_info.GoogleCloudIdentitytoolkitV2AutoRetrievalInfo(
                    app_signature_hash = '', ),
                ios_receipt = '',
                ios_secret = '',
                phone_number = '',
                play_integrity_token = '',
                recaptcha_token = '',
                safety_net_token = ''
            )
        else:
            return GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo(
        )
        """

    def testGoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo(self):
        """Test GoogleCloudIdentitytoolkitV2StartMfaPhoneRequestInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
