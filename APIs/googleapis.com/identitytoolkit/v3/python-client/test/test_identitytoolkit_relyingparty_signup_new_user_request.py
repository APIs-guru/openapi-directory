# coding: utf-8

"""
    Google Identity Toolkit API

    Help the third party sites to implement federated login.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.identitytoolkit_relyingparty_signup_new_user_request import IdentitytoolkitRelyingpartySignupNewUserRequest

class TestIdentitytoolkitRelyingpartySignupNewUserRequest(unittest.TestCase):
    """IdentitytoolkitRelyingpartySignupNewUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IdentitytoolkitRelyingpartySignupNewUserRequest:
        """Test IdentitytoolkitRelyingpartySignupNewUserRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IdentitytoolkitRelyingpartySignupNewUserRequest`
        """
        model = IdentitytoolkitRelyingpartySignupNewUserRequest()
        if include_optional:
            return IdentitytoolkitRelyingpartySignupNewUserRequest(
                captcha_challenge = '',
                captcha_response = '',
                disabled = True,
                display_name = '',
                email = '',
                email_verified = True,
                id_token = '',
                instance_id = '',
                local_id = '',
                password = '',
                phone_number = '',
                photo_url = '',
                tenant_id = '',
                tenant_project_number = ''
            )
        else:
            return IdentitytoolkitRelyingpartySignupNewUserRequest(
        )
        """

    def testIdentitytoolkitRelyingpartySignupNewUserRequest(self):
        """Test IdentitytoolkitRelyingpartySignupNewUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
