# coding: utf-8

"""
    Google Identity Toolkit API

    Help the third party sites to implement federated login.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.verify_assertion_response import VerifyAssertionResponse

class TestVerifyAssertionResponse(unittest.TestCase):
    """VerifyAssertionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VerifyAssertionResponse:
        """Test VerifyAssertionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VerifyAssertionResponse`
        """
        model = VerifyAssertionResponse()
        if include_optional:
            return VerifyAssertionResponse(
                action = '',
                app_installation_url = '',
                app_scheme = '',
                context = '',
                date_of_birth = '',
                display_name = '',
                email = '',
                email_recycled = True,
                email_verified = True,
                error_message = '',
                expires_in = '',
                federated_id = '',
                first_name = '',
                full_name = '',
                id_token = '',
                input_email = '',
                is_new_user = True,
                kind = 'identitytoolkit#VerifyAssertionResponse',
                language = '',
                last_name = '',
                local_id = '',
                need_confirmation = True,
                need_email = True,
                nick_name = '',
                oauth_access_token = '',
                oauth_authorization_code = '',
                oauth_expire_in = 56,
                oauth_id_token = '',
                oauth_request_token = '',
                oauth_scope = '',
                oauth_token_secret = '',
                original_email = '',
                photo_url = '',
                provider_id = '',
                raw_user_info = '',
                refresh_token = '',
                screen_name = '',
                time_zone = '',
                verified_provider = [
                    ''
                    ]
            )
        else:
            return VerifyAssertionResponse(
        )
        """

    def testVerifyAssertionResponse(self):
        """Test VerifyAssertionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
