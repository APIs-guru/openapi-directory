# coding: utf-8

"""
    Google Identity Toolkit API

    Help the third party sites to implement federated login.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_auth_uri_response import CreateAuthUriResponse

class TestCreateAuthUriResponse(unittest.TestCase):
    """CreateAuthUriResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateAuthUriResponse:
        """Test CreateAuthUriResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateAuthUriResponse`
        """
        model = CreateAuthUriResponse()
        if include_optional:
            return CreateAuthUriResponse(
                all_providers = [
                    ''
                    ],
                auth_uri = '',
                captcha_required = True,
                for_existing_provider = True,
                kind = 'identitytoolkit#CreateAuthUriResponse',
                provider_id = '',
                registered = True,
                session_id = '',
                signin_methods = [
                    ''
                    ]
            )
        else:
            return CreateAuthUriResponse(
        )
        """

    def testCreateAuthUriResponse(self):
        """Test CreateAuthUriResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
