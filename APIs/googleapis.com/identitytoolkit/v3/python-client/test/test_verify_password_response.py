# coding: utf-8

"""
    Google Identity Toolkit API

    Help the third party sites to implement federated login.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.verify_password_response import VerifyPasswordResponse

class TestVerifyPasswordResponse(unittest.TestCase):
    """VerifyPasswordResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VerifyPasswordResponse:
        """Test VerifyPasswordResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VerifyPasswordResponse`
        """
        model = VerifyPasswordResponse()
        if include_optional:
            return VerifyPasswordResponse(
                display_name = '',
                email = '',
                expires_in = '',
                id_token = '',
                kind = 'identitytoolkit#VerifyPasswordResponse',
                local_id = '',
                oauth_access_token = '',
                oauth_authorization_code = '',
                oauth_expire_in = 56,
                photo_url = '',
                refresh_token = '',
                registered = True
            )
        else:
            return VerifyPasswordResponse(
        )
        """

    def testVerifyPasswordResponse(self):
        """Test VerifyPasswordResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
