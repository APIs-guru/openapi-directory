# coding: utf-8

"""
    Google Identity Toolkit API

    Help the third party sites to implement federated login.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.user_info import UserInfo

class TestUserInfo(unittest.TestCase):
    """UserInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UserInfo:
        """Test UserInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UserInfo`
        """
        model = UserInfo()
        if include_optional:
            return UserInfo(
                created_at = '',
                custom_attributes = '',
                custom_auth = True,
                disabled = True,
                display_name = '',
                email = '',
                email_verified = True,
                last_login_at = '',
                local_id = '',
                password_hash = 'YQ==',
                password_updated_at = 1.337,
                phone_number = '',
                photo_url = '',
                provider_user_info = [
                    openapi_client.models.user_info_provider_user_info_inner.UserInfo_providerUserInfo_inner(
                        display_name = '', 
                        email = '', 
                        federated_id = '', 
                        phone_number = '', 
                        photo_url = '', 
                        provider_id = '', 
                        raw_id = '', 
                        screen_name = '', )
                    ],
                raw_password = '',
                salt = 'YQ==',
                screen_name = '',
                valid_since = '',
                version = 56
            )
        else:
            return UserInfo(
        )
        """

    def testUserInfo(self):
        """Test UserInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
