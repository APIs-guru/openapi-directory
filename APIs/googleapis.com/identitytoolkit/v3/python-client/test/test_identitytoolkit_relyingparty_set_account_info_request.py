# coding: utf-8

"""
    Google Identity Toolkit API

    Help the third party sites to implement federated login.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.identitytoolkit_relyingparty_set_account_info_request import IdentitytoolkitRelyingpartySetAccountInfoRequest

class TestIdentitytoolkitRelyingpartySetAccountInfoRequest(unittest.TestCase):
    """IdentitytoolkitRelyingpartySetAccountInfoRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IdentitytoolkitRelyingpartySetAccountInfoRequest:
        """Test IdentitytoolkitRelyingpartySetAccountInfoRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IdentitytoolkitRelyingpartySetAccountInfoRequest`
        """
        model = IdentitytoolkitRelyingpartySetAccountInfoRequest()
        if include_optional:
            return IdentitytoolkitRelyingpartySetAccountInfoRequest(
                captcha_challenge = '',
                captcha_response = '',
                created_at = '',
                custom_attributes = '',
                delegated_project_number = '',
                delete_attribute = [
                    ''
                    ],
                delete_provider = [
                    ''
                    ],
                disable_user = True,
                display_name = '',
                email = '',
                email_verified = True,
                id_token = '',
                instance_id = '',
                last_login_at = '',
                local_id = '',
                oob_code = '',
                password = '',
                phone_number = '',
                photo_url = '',
                provider = [
                    ''
                    ],
                return_secure_token = True,
                upgrade_to_federated_login = True,
                valid_since = ''
            )
        else:
            return IdentitytoolkitRelyingpartySetAccountInfoRequest(
        )
        """

    def testIdentitytoolkitRelyingpartySetAccountInfoRequest(self):
        """Test IdentitytoolkitRelyingpartySetAccountInfoRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
