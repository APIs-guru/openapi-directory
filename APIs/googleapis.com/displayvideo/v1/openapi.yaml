openapi: 3.0.0
servers:
  - url: https://displayvideo.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Display & Video 360 API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://displayvideo.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-preferred: false
  x-providerName: googleapis.com
  x-serviceName: displayvideo
externalDocs:
  url: https://developers.google.com/display-video/
tags:
  - name: advertisers
  - name: combinedAudiences
  - name: customBiddingAlgorithms
  - name: customLists
  - name: firstAndThirdPartyAudiences
  - name: floodlightGroups
  - name: googleAudiences
  - name: guaranteedOrders
  - name: inventorySourceGroups
  - name: inventorySources
  - name: media
  - name: partners
  - name: sdfdownloadtasks
  - name: targetingTypes
  - name: users
paths:
  "/download/{resourceName}":
    get:
      description: "Downloads media. Download is supported on the URI `/download/{resource_name=**}?alt=media.` **Note**: Download requests will not be successful without including `alt=media` query string."
      operationId: displayvideo.media.download
      parameters:
        - description: Name of the media that is being downloaded. See ReadRequest.resource_name.
          in: path
          name: resourceName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleBytestreamMedia"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      tags:
        - media
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/media/{resourceName}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Uploads media. Upload is supported on the URI `/upload/media/{resource_name=**}?upload_type=media.` **Note**: Upload requests will not be successful without including `upload_type=media` query string."
      operationId: displayvideo.media.upload
      parameters:
        - description: Name of the media that is being downloaded. See ReadRequest.resource_name.
          in: path
          name: resourceName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/GoogleBytestreamMedia"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleBytestreamMedia"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      tags:
        - media
  /v1/advertisers:
    get:
      description: Lists advertisers that are accessible to the current user. The order is defined by the order_by parameter. A single partner_id is required. Cross-partner listing is not supported.
      operationId: displayvideo.advertisers.list
      parameters:
        - description: 'Allows filtering by advertiser properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (>=)` or `LESS THAN OR EQUAL TO (<=)`. * The operator must be `EQUALS (=)`. * Supported fields: - `advertiserId` - `displayName` - `entityStatus` - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) Examples: * All active advertisers under a partner: `entityStatus="ENTITY_STATUS_ACTIVE"` * All advertisers with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime<="2020-11-04T18:54:47Z"` * All advertisers with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime>="2020-11-04T18:54:47Z"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` * `updateTime` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAdvertisers` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Required. The ID of the partner that the fetched advertisers should all belong to. The system only supports listing advertisers for one partner at a time.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAdvertisersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new advertiser. Returns the newly created advertiser if successful. This method can take up to 180 seconds to complete.
      operationId: displayvideo.advertisers.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Advertiser"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Advertiser"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}":
    delete:
      description: Deletes an advertiser. Deleting an advertiser will delete all of its child resources, for example, campaigns, insertion orders and line items. A deleted advertiser cannot be recovered.
      operationId: displayvideo.advertisers.delete
      parameters:
        - description: The ID of the advertiser we need to delete.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    get:
      description: Gets an advertiser.
      operationId: displayvideo.advertisers.get
      parameters:
        - description: Required. The ID of the advertiser to fetch.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Advertiser"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing advertiser. Returns the updated advertiser if successful.
      operationId: displayvideo.advertisers.patch
      parameters:
        - description: Output only. The unique ID of the advertiser. Assigned by the system.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Advertiser"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Advertiser"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/assets":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Uploads an asset. Returns the ID of the newly uploaded asset if successful. The asset file size should be no more than 10 MB for images, 200 MB for ZIP files, and 1 GB for videos. Must be used within the [multipart media upload process](/display-video/api/guides/how-tos/upload#multipart). Examples using provided client libraries can be found in our [Creating Creatives guide](/display-video/api/guides/creating-creatives/overview#upload_an_asset).
      operationId: displayvideo.advertisers.assets.upload
      parameters:
        - description: Required. The ID of the advertiser this asset belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: "#/components/schemas/CreateAssetRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateAssetResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/campaigns":
    get:
      description: Lists campaigns in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, campaigns with `ENTITY_STATUS_ARCHIVED` will not be included in the results.
      operationId: displayvideo.advertisers.campaigns.list
      parameters:
        - description: The ID of the advertiser to list campaigns for.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by campaign properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (>=)` or `LESS THAN OR EQUAL TO (<=)`. * The operator must be `EQUALS (=)`. * Supported fields: - `campaignId` - `displayName` - `entityStatus` - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) Examples: * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` campaigns under an advertiser: `(entityStatus="ENTITY_STATUS_ACTIVE" OR entityStatus="ENTITY_STATUS_PAUSED")` * All campaigns with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime<="2020-11-04T18:54:47Z"` * All campaigns with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime>="2020-11-04T18:54:47Z"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` * `updateTime` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCampaigns` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCampaignsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new campaign. Returns the newly created campaign if successful.
      operationId: displayvideo.advertisers.campaigns.create
      parameters:
        - description: Output only. The unique ID of the advertiser the campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Campaign"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/campaigns/{campaignId}":
    delete:
      description: Permanently deletes a campaign. A deleted campaign cannot be recovered. The campaign should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.
      operationId: displayvideo.advertisers.campaigns.delete
      parameters:
        - description: The ID of the advertiser this campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: The ID of the campaign we need to delete.
          in: path
          name: campaignId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
    get:
      description: Gets a campaign.
      operationId: displayvideo.advertisers.campaigns.get
      parameters:
        - description: Required. The ID of the advertiser this campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the campaign to fetch.
          in: path
          name: campaignId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing campaign. Returns the updated campaign if successful.
      operationId: displayvideo.advertisers.campaigns.patch
      parameters:
        - description: Output only. The unique ID of the advertiser the campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the campaign. Assigned by the system.
          in: path
          name: campaignId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Campaign"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Campaign"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/campaigns/{campaignId}/targetingTypes/{targetingType}/assignedTargetingOptions":
    get:
      description: Lists the targeting options assigned to a campaign for a specified targeting type.
      operationId: displayvideo.advertisers.campaigns.targetingTypes.assignedTargetingOptions.list
      parameters:
        - description: Required. The ID of the advertiser the campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the campaign to list assigned targeting options for.
          in: path
          name: campaignId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of assigned targeting options to list. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_INVENTORY_SOURCE` * `TARGETING_TYPE_INVENTORY_SOURCE_GROUP` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_THIRD_PARTY_VERIFIER` * `TARGETING_TYPE_VIEWABILITY`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId="1" OR assignedTargetingOptionId="2"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `assignedTargetingOptionId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCampaignAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCampaignAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/campaigns/{campaignId}/targetingTypes/{targetingType}/assignedTargetingOptions/{assignedTargetingOptionId}":
    get:
      description: Gets a single targeting option assigned to a campaign.
      operationId: displayvideo.advertisers.campaigns.targetingTypes.assignedTargetingOptions.get
      parameters:
        - description: Required. The ID of the advertiser the campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the campaign the assigned targeting option belongs to.
          in: path
          name: campaignId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_INVENTORY_SOURCE` * `TARGETING_TYPE_INVENTORY_SOURCE_GROUP` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_THIRD_PARTY_VERIFIER` * `TARGETING_TYPE_VIEWABILITY`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. An identifier unique to the targeting type in this campaign that identifies the assigned targeting option being requested.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/campaigns/{campaignId}:bulkListCampaignAssignedTargetingOptions":
    get:
      description: Lists assigned targeting options of a campaign across targeting types.
      operationId: displayvideo.advertisers.campaigns.bulkListCampaignAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the advertiser the campaign belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the campaign to list assigned targeting options for.
          in: path
          name: campaignId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_LANGUAGE or TARGETING_TYPE_GENDER `targetingType="TARGETING_TYPE_LANGUAGE" OR targetingType="TARGETING_TYPE_GENDER"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `targetingType desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is `5000`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListCampaignAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkListCampaignAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/channels":
    get:
      description: Lists channels for a partner or advertiser.
      operationId: displayvideo.advertisers.channels.list
      parameters:
        - description: The ID of the advertiser that owns the channels.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains "google": `displayName : "google"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that owns the channels.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChannelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new channel. Returns the newly created channel if successful.
      operationId: displayvideo.advertisers.channels.create
      parameters:
        - description: The ID of the advertiser that owns the created channel.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: The ID of the partner that owns the created channel.
          in: query
          name: partnerId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/channels/{channelId}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a channel. Returns the updated channel if successful.
      operationId: displayvideo.advertisers.channels.patch
      parameters:
        - description: The ID of the advertiser that owns the created channel.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the channel. Assigned by the system.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The ID of the partner that owns the created channel.
          in: query
          name: partnerId
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/channels/{channelId}/sites":
    get:
      description: Lists sites in a channel.
      operationId: displayvideo.advertisers.channels.sites.list
      parameters:
        - description: The ID of the advertiser that owns the parent channel.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel to which the requested sites belong.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by site fields. Supported syntax: * Filter expressions for site currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `urlOrAppId` Examples: * All sites for which the URL or app ID contains "google": `urlOrAppId : "google"`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `urlOrAppId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `urlOrAppId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `10000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListSites` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that owns the parent channel.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/channels/{channelId}/sites/{urlOrAppId}":
    delete:
      description: Deletes a site from a channel.
      operationId: displayvideo.advertisers.channels.sites.delete
      parameters:
        - description: The ID of the advertiser that owns the parent channel.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel to which the site belongs.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Required. The URL or app ID of the site to delete.
          in: path
          name: urlOrAppId
          required: true
          schema:
            type: string
        - description: The ID of the partner that owns the parent channel.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/channels/{channelId}/sites:bulkEdit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits sites under a single channel. The operation will delete the sites provided in BulkEditSitesRequest.deleted_sites and then create the sites provided in BulkEditSitesRequest.created_sites.
      operationId: displayvideo.advertisers.channels.sites.bulkEdit
      parameters:
        - description: The ID of the advertiser that owns the parent channel.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel to which the sites belong.
          in: path
          name: channelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditSitesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/channels/{channelId}/sites:replace":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Replaces all of the sites under a single channel. The operation will replace the sites under a channel with the sites provided in ReplaceSitesRequest.new_sites.
      operationId: displayvideo.advertisers.channels.sites.replace
      parameters:
        - description: The ID of the advertiser that owns the parent channel.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel whose sites will be replaced.
          in: path
          name: channelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplaceSitesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/creatives":
    get:
      description: Lists creatives in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, creatives with `ENTITY_STATUS_ARCHIVED` will not be included in the results.
      operationId: displayvideo.advertisers.creatives.list
      parameters:
        - description: Required. The ID of the advertiser to list creatives for.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Allows filtering by creative properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restriction for the same field must be combined by `OR`. * Restriction for different fields must be combined by `AND`. * Between `(` and `)` there can only be restrictions combined by `OR` for the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)` for the following fields: - `entityStatus` - `creativeType`. - `dimensions` - `minDuration` - `maxDuration` - `approvalStatus` - `exchangeReviewStatus` - `dynamic` - `creativeId` * The operator must be `HAS (:)` for the following fields: - `lineItemIds` * The operator must be `GREATER THAN OR EQUAL TO (>=)` or `LESS THAN OR EQUAL TO (<=)` for the following fields: - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) * For `entityStatus`, `minDuration`, `maxDuration`, `updateTime`, and `dynamic`, there may be at most one restriction. * For `dimensions`, the value is in the form of `\"{width}x{height}\"`. * For `exchangeReviewStatus`, the value is in the form of `{exchange}-{reviewStatus}`. * For `minDuration` and `maxDuration`, the value is in the form of `\"{duration}s\"`. Only seconds are supported with millisecond granularity. * For `updateTime`, a creative resource's field value reflects the last time that a creative has been updated, which includes updates made by the system (e.g. creative review updates). * There may be multiple `lineItemIds` restrictions in order to search against multiple possible line item IDs. * There may be multiple `creativeId` restrictions in order to search against multiple possible creative IDs. Examples: * All native creatives: `creativeType=\"CREATIVE_TYPE_NATIVE\"` * All active creatives with 300x400 or 50x100 dimensions: `entityStatus=\"ENTITY_STATUS_ACTIVE\" AND (dimensions=\"300x400\" OR dimensions=\"50x100\")` * All dynamic creatives that are approved by AdX or AppNexus, with a minimum duration of 5 seconds and 200ms. `dynamic=\"true\" AND minDuration=\"5.2s\" AND (exchangeReviewStatus=\"EXCHANGE_GOOGLE_AD_MANAGER-REVIEW_STATUS_APPROVED\" OR exchangeReviewStatus=\"EXCHANGE_APPNEXUS-REVIEW_STATUS_APPROVED\")` * All video creatives that are associated with line item ID 1 or 2: `creativeType=\"CREATIVE_TYPE_VIDEO\" AND (lineItemIds:1 OR lineItemIds:2)` * Find creatives by multiple creative IDs: `creativeId=1 OR creativeId=2` * All creatives with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime>=\"2020-11-04T18:54:47Z\"` The length of this field should be no more than 500 characters."
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `creativeId` (default) * `createTime` * `mediaDuration` * `dimensions` (sorts by width first, then by height) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `createTime desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCreatives` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCreativesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new creative. Returns the newly created creative if successful.
      operationId: displayvideo.advertisers.creatives.create
      parameters:
        - description: Output only. The unique ID of the advertiser the creative belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Creative"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Creative"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/creatives/{creativeId}":
    delete:
      description: Deletes a creative. Returns error code `NOT_FOUND` if the creative does not exist. The creative should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, before it can be deleted.
      operationId: displayvideo.advertisers.creatives.delete
      parameters:
        - description: The ID of the advertiser this creative belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: The ID of the creative to be deleted.
          in: path
          name: creativeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    get:
      description: Gets a creative.
      operationId: displayvideo.advertisers.creatives.get
      parameters:
        - description: Required. The ID of the advertiser this creative belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the creative to fetch.
          in: path
          name: creativeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Creative"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing creative. Returns the updated creative if successful.
      operationId: displayvideo.advertisers.creatives.patch
      parameters:
        - description: Output only. The unique ID of the advertiser the creative belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the creative. Assigned by the system.
          in: path
          name: creativeId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Creative"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Creative"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/insertionOrders":
    get:
      description: Lists insertion orders in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, insertion orders with `ENTITY_STATUS_ARCHIVED` will not be included in the results.
      operationId: displayvideo.advertisers.insertionOrders.list
      parameters:
        - description: Required. The ID of the advertiser to list insertion orders for.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Allows filtering by insertion order properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `budget.budget_segments.date_range.end_date` must be LESS THAN (<). * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (>=)` or `LESS THAN OR EQUAL TO (<=)`. * The operators used on all other fields must be `EQUALS (=)`. * Supported fields: - `campaignId` - `displayName` - `entityStatus` - `budget.budget_segments.date_range.end_date` (input as YYYY-MM-DD) - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) Examples: * All insertion orders under a campaign: `campaignId=\"1234\"` * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` insertion orders under an advertiser: `(entityStatus=\"ENTITY_STATUS_ACTIVE\" OR entityStatus=\"ENTITY_STATUS_PAUSED\")` * All insertion orders whose budget segments' dates end before March 28, 2019: `budget.budget_segments.date_range.end_date<\"2019-03-28\"` * All insertion orders with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime<=\"2020-11-04T18:54:47Z\"` * All insertion orders with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime>=\"2020-11-04T18:54:47Z\"` The length of this field should be no more than 500 characters."
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * "displayName" (default) * "entityStatus" * "updateTime" The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInsertionOrders` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInsertionOrdersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new insertion order. Returns the newly created insertion order if successful.
      operationId: displayvideo.advertisers.insertionOrders.create
      parameters:
        - description: Output only. The unique ID of the advertiser the insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsertionOrder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertionOrder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/insertionOrders/{insertionOrderId}":
    delete:
      description: Deletes an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist. The insertion order should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.
      operationId: displayvideo.advertisers.insertionOrders.delete
      parameters:
        - description: The ID of the advertiser this insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: The ID of the insertion order to delete.
          in: path
          name: insertionOrderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    get:
      description: Gets an insertion order. Returns error code `NOT_FOUND` if the insertion order does not exist.
      operationId: displayvideo.advertisers.insertionOrders.get
      parameters:
        - description: Required. The ID of the advertiser this insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the insertion order to fetch.
          in: path
          name: insertionOrderId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertionOrder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing insertion order. Returns the updated insertion order if successful.
      operationId: displayvideo.advertisers.insertionOrders.patch
      parameters:
        - description: Output only. The unique ID of the advertiser the insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the insertion order. Assigned by the system.
          in: path
          name: insertionOrderId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InsertionOrder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertionOrder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/insertionOrders/{insertionOrderId}/targetingTypes/{targetingType}/assignedTargetingOptions":
    get:
      description: Lists the targeting options assigned to an insertion order.
      operationId: displayvideo.advertisers.insertionOrders.targetingTypes.assignedTargetingOptions.list
      parameters:
        - description: Required. The ID of the advertiser the insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the insertion order to list assigned targeting options for.
          in: path
          name: insertionOrderId
          required: true
          schema:
            type: string
        - description: Required. Identifies the type of assigned targeting options to list.
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId="1" OR assignedTargetingOptionId="2"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `assignedTargetingOptionId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInsertionOrderAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInsertionOrderAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/insertionOrders/{insertionOrderId}/targetingTypes/{targetingType}/assignedTargetingOptions/{assignedTargetingOptionId}":
    get:
      description: Gets a single targeting option assigned to an insertion order.
      operationId: displayvideo.advertisers.insertionOrders.targetingTypes.assignedTargetingOptions.get
      parameters:
        - description: Required. The ID of the advertiser the insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the insertion order the assigned targeting option belongs to.
          in: path
          name: insertionOrderId
          required: true
          schema:
            type: string
        - description: Required. Identifies the type of this assigned targeting option.
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. An identifier unique to the targeting type in this insertion order that identifies the assigned targeting option being requested.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/insertionOrders/{insertionOrderId}:bulkListInsertionOrderAssignedTargetingOptions":
    get:
      description: Lists assigned targeting options of an insertion order across targeting types.
      operationId: displayvideo.advertisers.insertionOrders.bulkListInsertionOrderAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the advertiser the insertion order belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the insertion order to list assigned targeting options for.
          in: path
          name: insertionOrderId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_PROXIMITY_LOCATION_LIST or TARGETING_TYPE_CHANNEL `targetingType="TARGETING_TYPE_PROXIMITY_LOCATION_LIST" OR targetingType="TARGETING_TYPE_CHANNEL"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `targetingType desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is `5000`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListInsertionOrderAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkListInsertionOrderAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/invoices":
    get:
      description: Lists invoices posted for an advertiser in a given month. Invoices generated by billing profiles with a "Partner" invoice level are not retrievable through this method.
      operationId: displayvideo.advertisers.invoices.list
      parameters:
        - description: Required. The ID of the advertiser to list invoices for.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: The month to list the invoices for. If not set, the request will retrieve invoices for the previous month. Must be in the format YYYYMM.
          in: query
          name: issueMonth
          schema:
            type: string
        - description: Select type of invoice to retrieve for Loi Sapin advertisers. Only applicable to Loi Sapin advertisers. Will be ignored otherwise.
          in: query
          name: loiSapinInvoiceType
          schema:
            enum:
              - LOI_SAPIN_INVOICE_TYPE_UNSPECIFIED
              - LOI_SAPIN_INVOICE_TYPE_MEDIA
              - LOI_SAPIN_INVOICE_TYPE_PLATFORM
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInvoices` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInvoicesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/invoices:lookupInvoiceCurrency":
    get:
      description: Retrieves the invoice currency used by an advertiser in a given month.
      operationId: displayvideo.advertisers.invoices.lookupInvoiceCurrency
      parameters:
        - description: Required. The ID of the advertiser to lookup currency for.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Month for which the currency is needed. If not set, the request will return existing currency settings for the advertiser. Must be in the format YYYYMM.
          in: query
          name: invoiceMonth
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LookupInvoiceCurrencyResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-mediaplanning
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-mediaplanning
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/lineItems":
    get:
      description: Lists line items in an advertiser. The order is defined by the order_by parameter. If a filter by entity_status is not specified, line items with `ENTITY_STATUS_ARCHIVED` will not be included in the results.
      operationId: displayvideo.advertisers.lineItems.list
      parameters:
        - description: Required. The ID of the advertiser to list line items for.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by line item properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator used on `flight.dateRange.endDate` must be LESS THAN (<). * The operator used on `updateTime` must be `GREATER THAN OR EQUAL TO (>=)` or `LESS THAN OR EQUAL TO (<=)`. * The operator used on `warningMessages` must be `HAS (:)`. * The operators used on all other fields must be `EQUALS (=)`. * Supported properties: - `campaignId` - `displayName` - `insertionOrderId` - `entityStatus` - `lineItemId` - `lineItemType` - `flight.dateRange.endDate` (input formatted as YYYY-MM-DD) - `warningMessages` - `flight.triggerId` - `updateTime` (input in ISO 8601 format, or YYYY-MM-DDTHH:MM:SSZ) - `targetedChannelId` - `targetedNegativeKeywordListId` Examples: * All line items under an insertion order: `insertionOrderId="1234"` * All `ENTITY_STATUS_ACTIVE` or `ENTITY_STATUS_PAUSED` and `LINE_ITEM_TYPE_DISPLAY_DEFAULT` line items under an advertiser: `(entityStatus="ENTITY_STATUS_ACTIVE" OR entityStatus="ENTITY_STATUS_PAUSED") AND lineItemType="LINE_ITEM_TYPE_DISPLAY_DEFAULT"` * All line items whose flight dates end before March 28, 2019: `flight.dateRange.endDate<"2019-03-28"` * All line items that have `NO_VALID_CREATIVE` in `warningMessages`: `warningMessages:"NO_VALID_CREATIVE"` * All line items with an update time less than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime<="2020-11-04T18:54:47Z"` * All line items with an update time greater than or equal to `2020-11-04T18:54:47Z (format of ISO 8601)`: `updateTime>="2020-11-04T18:54:47Z"` * All line items that are using both the specified channel and specified negative keyword list in their targeting: `targetedNegativeKeywordListId=789 AND targetedChannelId=12345` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `entityStatus` * `flight.dateRange.endDate` * `updateTime` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLineItems` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLineItemsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new line item. Returns the newly created line item if successful.
      operationId: displayvideo.advertisers.lineItems.create
      parameters:
        - description: Output only. The unique ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LineItem"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LineItem"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/lineItems/{lineItemId}":
    delete:
      description: Deletes a line item. Returns error code `NOT_FOUND` if the line item does not exist. The line item should be archived first, i.e. set entity_status to `ENTITY_STATUS_ARCHIVED`, to be able to delete it.
      operationId: displayvideo.advertisers.lineItems.delete
      parameters:
        - description: The ID of the advertiser this line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: The ID of the line item to delete.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    get:
      description: Gets a line item.
      operationId: displayvideo.advertisers.lineItems.get
      parameters:
        - description: Required. The ID of the advertiser this line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item to fetch.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LineItem"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: "Updates an existing line item. Returns the updated line item if successful. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * BulkEditAssignedTargetingOptions * BulkUpdateLineItems * CreateLineItemAssignedTargetingOption * DeleteLineItemAssignedTargetingOption"
      operationId: displayvideo.advertisers.lineItems.patch
      parameters:
        - description: Output only. The unique ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the line item. Assigned by the system.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LineItem"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LineItem"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/lineItems/{lineItemId}/targetingTypes/{targetingType}/assignedTargetingOptions":
    get:
      description: Lists the targeting options assigned to a line item.
      operationId: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.list
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item to list assigned targeting options for.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
        - description: Required. Identifies the type of assigned targeting options to list.
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` - `inheritance` Examples: * AssignedTargetingOptions with ID 1 or 2 `assignedTargetingOptionId="1" OR assignedTargetingOptionId="2"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `assignedTargetingOptionId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLineItemAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLineItemAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Assigns a targeting option to a line item. Returns the assigned targeting option if successful. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * BulkEditAssignedTargetingOptions * BulkUpdate * UpdateLineItem * DeleteLineItemAssignedTargetingOption"
      operationId: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.create
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item the assigned targeting option will belong to.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
        - description: Required. Identifies the type of this assigned targeting option.
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedTargetingOption"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/lineItems/{lineItemId}/targetingTypes/{targetingType}/assignedTargetingOptions/{assignedTargetingOptionId}":
    delete:
      description: "Deletes an assigned targeting option from a line item. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * BulkEditAssignedTargetingOptions * BulkUpdate * UpdateLineItem * CreateLineItemAssignedTargetingOption"
      operationId: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.delete
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item the assigned targeting option belongs to.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
        - description: Required. Identifies the type of this assigned targeting option.
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. The ID of the assigned targeting option to delete.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    get:
      description: Gets a single targeting option assigned to a line item.
      operationId: displayvideo.advertisers.lineItems.targetingTypes.assignedTargetingOptions.get
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item the assigned targeting option belongs to.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
        - description: Required. Identifies the type of this assigned targeting option.
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. An identifier unique to the targeting type in this line item that identifies the assigned targeting option being requested.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/lineItems/{lineItemId}:bulkEditLineItemAssignedTargetingOptions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Bulk edits targeting options under a single line item. The operation will delete the assigned targeting options provided in BulkEditLineItemAssignedTargetingOptionsRequest.delete_requests and then create the assigned targeting options provided in BulkEditLineItemAssignedTargetingOptionsRequest.create_requests. Requests to this endpoint cannot be made concurrently with the following requests updating the same line item: * UpdateLineItem * CreateLineItemAssignedTargetingOption * DeleteLineItemAssignedTargetingOption"
      operationId: displayvideo.advertisers.lineItems.bulkEditLineItemAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item the assigned targeting option will belong to.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditLineItemAssignedTargetingOptionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditLineItemAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/lineItems/{lineItemId}:bulkListLineItemAssignedTargetingOptions":
    get:
      description: Lists assigned targeting options of a line item across targeting types.
      operationId: displayvideo.advertisers.lineItems.bulkListLineItemAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the line item to list assigned targeting options for.
          in: path
          name: lineItemId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR` on the same field. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` - `inheritance` Examples: * AssignedTargetingOptions of targeting type TARGETING_TYPE_PROXIMITY_LOCATION_LIST or TARGETING_TYPE_CHANNEL `targetingType="TARGETING_TYPE_PROXIMITY_LOCATION_LIST" OR targetingType="TARGETING_TYPE_CHANNEL"` * AssignedTargetingOptions with inheritance status of NOT_INHERITED or INHERITED_FROM_PARTNER `inheritance="NOT_INHERITED" OR inheritance="INHERITED_FROM_PARTNER"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `targetingType desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListLineItemAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkListLineItemAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/lineItems:generateDefault":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a new line item with settings (including targeting) inherited from the insertion order and an `ENTITY_STATUS_DRAFT` entity_status. Returns the newly created line item if successful. There are default values based on the three fields: * The insertion order's insertion_order_type * The insertion order's automation_type * The given line_item_type"
      operationId: displayvideo.advertisers.lineItems.generateDefault
      parameters:
        - description: Required. The ID of the advertiser this line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateDefaultLineItemRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LineItem"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/locationLists":
    get:
      description: Lists location lists based on a given advertiser id.
      operationId: displayvideo.advertisers.locationLists.list
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the fetched location lists belong.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by location list fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `locationType` Examples: * All regional location list: `locationType="TARGETING_LOCATION_TYPE_REGIONAL"` * All proximity location list: `locationType="TARGETING_LOCATION_TYPE_PROXIMITY"`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `locationListId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListLocationLists` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListLocationListsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new location list. Returns the newly created location list if successful.
      operationId: displayvideo.advertisers.locationLists.create
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the location list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/locationLists/{locationListId}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a location list. Returns the updated location list if successful.
      operationId: displayvideo.advertisers.locationLists.patch
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the location lists belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the location list. Assigned by the system.
          in: path
          name: locationListId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LocationList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations":
    get:
      description: Lists locations assigned to a location list.
      operationId: displayvideo.advertisers.locationLists.assignedLocations.list
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the location list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the location list to which these assignments are assigned.
          in: path
          name: locationListId
          required: true
          schema:
            type: string
        - description: "Allows filtering by location list assignment fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedLocationId` The length of this field should be no more than 500 characters."
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedLocationId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `assignedLocationId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedLocations` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssignedLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an assignment between a location and a location list.
      operationId: displayvideo.advertisers.locationLists.assignedLocations.create
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the location list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the location list for which the assignment will be created.
          in: path
          name: locationListId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedLocation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedLocation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations/{assignedLocationId}":
    delete:
      description: Deletes the assignment between a location and a location list.
      operationId: displayvideo.advertisers.locationLists.assignedLocations.delete
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the location list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the location list to which this assignment is assigned.
          in: path
          name: locationListId
          required: true
          schema:
            type: string
        - description: Required. The ID of the assigned location to delete.
          in: path
          name: assignedLocationId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/locationLists/{locationListId}/assignedLocations:bulkEdit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits multiple assignments between locations and a single location list. The operation will delete the assigned locations provided in BulkEditAssignedLocationsRequest.deleted_assigned_locations and then create the assigned locations provided in BulkEditAssignedLocationsRequest.created_assigned_locations.
      operationId: displayvideo.advertisers.locationLists.assignedLocations.bulkEdit
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the location list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the location list to which these assignments are assigned.
          in: path
          name: locationListId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditAssignedLocationsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditAssignedLocationsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/manualTriggers":
    get:
      description: Lists manual triggers that are accessible to the current user for a given advertiser ID. The order is defined by the order_by parameter. A single advertiser_id is required.
      operationId: displayvideo.advertisers.manualTriggers.list
      parameters:
        - description: Required. The ID of the advertiser that the fetched manual triggers belong to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by manual trigger properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `displayName` - `state` Examples: * All active manual triggers under an advertiser: `state="ACTIVE"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `state` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListManualTriggers` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListManualTriggersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new manual trigger. Returns the newly created manual trigger if successful.
      operationId: displayvideo.advertisers.manualTriggers.create
      parameters:
        - description: Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManualTrigger"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualTrigger"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/manualTriggers/{triggerId}":
    get:
      description: Gets a manual trigger.
      operationId: displayvideo.advertisers.manualTriggers.get
      parameters:
        - description: Required. The ID of the advertiser this manual trigger belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the manual trigger to fetch.
          in: path
          name: triggerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualTrigger"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a manual trigger. Returns the updated manual trigger if successful.
      operationId: displayvideo.advertisers.manualTriggers.patch
      parameters:
        - description: Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the manual trigger.
          in: path
          name: triggerId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ManualTrigger"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualTrigger"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/manualTriggers/{triggerId}:activate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Activates a manual trigger. Each activation of the manual trigger must be at least 5 minutes apart, otherwise an error will be returned.
      operationId: displayvideo.advertisers.manualTriggers.activate
      parameters:
        - description: Required. The ID of the advertiser that the manual trigger belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the manual trigger to activate.
          in: path
          name: triggerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ActivateManualTriggerRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualTrigger"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/manualTriggers/{triggerId}:deactivate":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Deactivates a manual trigger.
      operationId: displayvideo.advertisers.manualTriggers.deactivate
      parameters:
        - description: Required. The ID of the advertiser that the manual trigger belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the manual trigger to deactivate.
          in: path
          name: triggerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DeactivateManualTriggerRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ManualTrigger"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/negativeKeywordLists":
    get:
      description: Lists negative keyword lists based on a given advertiser id.
      operationId: displayvideo.advertisers.negativeKeywordLists.list
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the fetched negative keyword lists belong.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. Defaults to `100` if not set. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListNegativeKeywordLists` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNegativeKeywordListsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new negative keyword list. Returns the newly created negative keyword list if successful.
      operationId: displayvideo.advertisers.negativeKeywordLists.create
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the negative keyword list will belong.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NegativeKeywordList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NegativeKeywordList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListId}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a negative keyword list. Returns the updated negative keyword list if successful.
      operationId: displayvideo.advertisers.negativeKeywordLists.patch
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the negative keyword list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the negative keyword list. Assigned by the system.
          in: path
          name: negativeKeywordListId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NegativeKeywordList"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NegativeKeywordList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListId}/negativeKeywords":
    get:
      description: Lists negative keywords in a negative keyword list.
      operationId: displayvideo.advertisers.negativeKeywordLists.negativeKeywords.list
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent negative keyword list to which the requested negative keywords belong.
          in: path
          name: negativeKeywordListId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by negative keyword fields. Supported syntax: * Filter expressions for negative keyword currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `keywordValue` Examples: * All negative keywords for which the keyword value contains "google": `keywordValue : "google"`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `keywordValue` (default) The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `keywordValue desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `1000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListNegativeKeywords` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListNegativeKeywordsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListId}/negativeKeywords/{keywordValue}":
    delete:
      description: Deletes a negative keyword from a negative keyword list.
      operationId: displayvideo.advertisers.negativeKeywordLists.negativeKeywords.delete
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent negative keyword list to which the negative keyword belongs.
          in: path
          name: negativeKeywordListId
          required: true
          schema:
            type: string
        - description: Required. The keyword value of the negative keyword to delete.
          in: path
          name: keywordValue
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListId}/negativeKeywords:bulkEdit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits negative keywords in a single negative keyword list. The operation will delete the negative keywords provided in BulkEditNegativeKeywordsRequest.deleted_negative_keywords and then create the negative keywords provided in BulkEditNegativeKeywordsRequest.created_negative_keywords. This operation is guaranteed to be atomic and will never result in a partial success or partial failure.
      operationId: displayvideo.advertisers.negativeKeywordLists.negativeKeywords.bulkEdit
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent negative keyword list to which the negative keywords belong.
          in: path
          name: negativeKeywordListId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditNegativeKeywordsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditNegativeKeywordsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/negativeKeywordLists/{negativeKeywordListId}/negativeKeywords:replace":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Replaces all negative keywords in a single negative keyword list. The operation will replace the keywords in a negative keyword list with keywords provided in ReplaceNegativeKeywordsRequest.new_negative_keywords.
      operationId: displayvideo.advertisers.negativeKeywordLists.negativeKeywords.replace
      parameters:
        - description: Required. The ID of the DV360 advertiser to which the parent negative keyword list belongs.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent negative keyword list to which the negative keywords belong.
          in: path
          name: negativeKeywordListId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplaceNegativeKeywordsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceNegativeKeywordsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/targetingTypes/{targetingType}/assignedTargetingOptions":
    get:
      description: Lists the targeting options assigned to an advertiser.
      operationId: displayvideo.advertisers.targetingTypes.assignedTargetingOptions.list
      parameters:
        - description: Required. The ID of the advertiser.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of assigned targeting options to list. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` Examples: * AssignedTargetingOption with ID 123456 `assignedTargetingOptionId="123456"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `assignedTargetingOptionId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `5000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAdvertiserAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAdvertiserAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Assigns a targeting option to an advertiser. Returns the assigned targeting option if successful.
      operationId: displayvideo.advertisers.targetingTypes.assignedTargetingOptions.create
      parameters:
        - description: Required. The ID of the advertiser.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedTargetingOption"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}/targetingTypes/{targetingType}/assignedTargetingOptions/{assignedTargetingOptionId}":
    delete:
      description: Deletes an assigned targeting option from an advertiser.
      operationId: displayvideo.advertisers.targetingTypes.assignedTargetingOptions.delete
      parameters:
        - description: Required. The ID of the advertiser.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. The ID of the assigned targeting option to delete.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    get:
      description: Gets a single targeting option assigned to an advertiser.
      operationId: displayvideo.advertisers.targetingTypes.assignedTargetingOptions.get
      parameters:
        - description: Required. The ID of the advertiser.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. An identifier unique to the targeting type in this advertiser that identifies the assigned targeting option being requested.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}:audit":
    get:
      description: Audits an advertiser. Returns the counts of used entities per resource type under the advertiser provided. Used entities count towards their respective resource limit. See https://support.google.com/displayvideo/answer/6071450.
      operationId: displayvideo.advertisers.audit
      parameters:
        - description: Required. The ID of the advertiser to audit.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: "Optional. The specific fields to return. If no mask is specified, all fields in the response proto will be filled. Valid values are: * usedLineItemsCount * usedInsertionOrdersCount * usedCampaignsCount * channelsCount * negativelyTargetedChannelsCount * negativeKeywordListsCount * adGroupCriteriaCount * campaignCriteriaCount"
          in: query
          name: readMask
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditAdvertiserResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/advertisers/{advertiserId}:bulkEditAdvertiserAssignedTargetingOptions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits targeting options under a single advertiser. The operation will delete the assigned targeting options provided in BulkEditAdvertiserAssignedTargetingOptionsRequest.delete_requests and then create the assigned targeting options provided in BulkEditAdvertiserAssignedTargetingOptionsRequest.create_requests .
      operationId: displayvideo.advertisers.bulkEditAdvertiserAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the advertiser.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditAdvertiserAssignedTargetingOptionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditAdvertiserAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
  "/v1/advertisers/{advertiserId}:bulkListAdvertiserAssignedTargetingOptions":
    get:
      description: Lists assigned targeting options of an advertiser across targeting types.
      operationId: displayvideo.advertisers.bulkListAdvertiserAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the advertiser the line item belongs to.
          in: path
          name: advertiserId
          required: true
          schema:
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`.. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `targetingType` Examples: * targetingType with value TARGETING_TYPE_CHANNEL `targetingType="TARGETING_TYPE_CHANNEL"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `targetingType` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `targetingType desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. The size must be an integer between `1` and `5000`. If unspecified, the default is '5000'. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token that lets the client fetch the next page of results. Typically, this is the value of next_page_token returned from the previous call to `BulkListAdvertiserAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkListAdvertiserAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - advertisers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/combinedAudiences:
    get:
      description: Lists combined audiences. The order is defined by the order_by parameter.
      operationId: displayvideo.combinedAudiences.list
      parameters:
        - description: The ID of the advertiser that has access to the fetched combined audiences.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by combined audience fields. Supported syntax: * Filter expressions for combined audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All combined audiences for which the display name contains "Google": `displayName : "Google"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `combinedAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCombinedAudiences` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the fetched combined audiences.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCombinedAudiencesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - combinedAudiences
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/combinedAudiences/{combinedAudienceId}":
    get:
      description: Gets a combined audience.
      operationId: displayvideo.combinedAudiences.get
      parameters:
        - description: Required. The ID of the combined audience to fetch.
          in: path
          name: combinedAudienceId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that has access to the fetched combined audience.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that has access to the fetched combined audience.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CombinedAudience"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - combinedAudiences
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/customBiddingAlgorithms:
    get:
      description: Lists custom bidding algorithms that are accessible to the current user and can be used in bidding stratgies. The order is defined by the order_by parameter.
      operationId: displayvideo.customBiddingAlgorithms.list
      parameters:
        - description: The ID of the DV360 advertiser that has access to the custom bidding algorithm.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by custom bidding algorithm fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND`. A sequence of restrictions * implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)` or `EQUALS (=)`. * The operator must be `CONTAINS (:)` for the following field: - `displayName` * The operator must be `EQUALS (=)` for the following field: - `customBiddingAlgorithmType` * For `displayName`, the value is a string. We return all custom bidding algorithms whose display_name contains such string. * For `customBiddingAlgorithmType`, the value is a string. We return all algorithms whose custom_bidding_algorithm_type is equal to the given type. Examples: * All custom bidding algorithms for which the display name contains "politics": `displayName:politics`. * All custom bidding algorithms for which the type is "SCRIPT_BASED": `customBiddingAlgorithmType=SCRIPT_BASED` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomBiddingAlgorithms` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the DV360 partner that has access to the custom bidding algorithm.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomBiddingAlgorithmsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new custom bidding algorithm. Returns the newly created custom bidding algorithm if successful.
      operationId: displayvideo.customBiddingAlgorithms.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomBiddingAlgorithm"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomBiddingAlgorithm"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
  "/v1/customBiddingAlgorithms/{customBiddingAlgorithmId}":
    get:
      description: Gets a custom bidding algorithm.
      operationId: displayvideo.customBiddingAlgorithms.get
      parameters:
        - description: Required. The ID of the custom bidding algorithm to fetch.
          in: path
          name: customBiddingAlgorithmId
          required: true
          schema:
            type: string
        - description: The ID of the DV360 partner that has access to the custom bidding algorithm.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the DV360 partner that has access to the custom bidding algorithm.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomBiddingAlgorithm"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing custom bidding algorithm. Returns the updated custom bidding algorithm if successful.
      operationId: displayvideo.customBiddingAlgorithms.patch
      parameters:
        - description: Output only. The unique ID of the custom bidding algorithm. Assigned by the system.
          in: path
          name: customBiddingAlgorithmId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomBiddingAlgorithm"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomBiddingAlgorithm"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
  "/v1/customBiddingAlgorithms/{customBiddingAlgorithmId}/scripts":
    get:
      description: Lists custom bidding scripts that belong to the given algorithm. The order is defined by the order_by parameter.
      operationId: displayvideo.customBiddingAlgorithms.scripts.list
      parameters:
        - description: Required. The ID of the custom bidding algorithm owns the script.
          in: path
          name: customBiddingAlgorithmId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent custom bidding algorithm.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `createTime desc` (default) The default sorting order is descending. To specify ascending order for a field, the suffix "desc" should be removed. Example: `createTime`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomBiddingScripts` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomBiddingScriptsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new custom bidding script. Returns the newly created script if successful.
      operationId: displayvideo.customBiddingAlgorithms.scripts.create
      parameters:
        - description: Required. The ID of the custom bidding algorithm that owns the script.
          in: path
          name: customBiddingAlgorithmId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent custom bidding algorithm.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
          in: query
          name: partnerId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomBiddingScript"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomBiddingScript"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
  "/v1/customBiddingAlgorithms/{customBiddingAlgorithmId}/scripts/{customBiddingScriptId}":
    get:
      description: Gets a custom bidding script.
      operationId: displayvideo.customBiddingAlgorithms.scripts.get
      parameters:
        - description: Required. The ID of the custom bidding algorithm owns the script.
          in: path
          name: customBiddingAlgorithmId
          required: true
          schema:
            type: string
        - description: Required. The ID of the custom bidding script to fetch.
          in: path
          name: customBiddingScriptId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent custom bidding algorithm.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomBiddingScript"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/customBiddingAlgorithms/{customBiddingAlgorithmId}:uploadScript":
    get:
      description: Creates a custom bidding script reference object for a script file. The resulting reference object provides a resource path to which the script file should be uploaded. This reference object should be included in when creating a new custom bidding script object.
      operationId: displayvideo.customBiddingAlgorithms.uploadScript
      parameters:
        - description: Required. The ID of the custom bidding algorithm owns the script.
          in: path
          name: customBiddingAlgorithmId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent custom bidding algorithm.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the parent custom bidding algorithm. Only this partner will have write access to this custom bidding script.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomBiddingScriptRef"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customBiddingAlgorithms
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/customLists:
    get:
      description: Lists custom lists. The order is defined by the order_by parameter.
      operationId: displayvideo.customLists.list
      parameters:
        - description: The ID of the DV360 advertiser that has access to the fetched custom lists.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by custom list fields. Supported syntax: * Filter expressions for custom lists currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All custom lists for which the display name contains "Google": `displayName : "Google"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `customListId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListCustomLists` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListCustomListsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customLists
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/customLists/{customListId}":
    get:
      description: Gets a custom list.
      operationId: displayvideo.customLists.get
      parameters:
        - description: Required. The ID of the custom list to fetch.
          in: path
          name: customListId
          required: true
          schema:
            type: string
        - description: The ID of the DV360 advertiser that has access to the fetched custom lists.
          in: query
          name: advertiserId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CustomList"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - customLists
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/firstAndThirdPartyAudiences:
    get:
      description: Lists first and third party audiences. The order is defined by the order_by parameter.
      operationId: displayvideo.firstAndThirdPartyAudiences.list
      parameters:
        - description: The ID of the advertiser that has access to the fetched first and third party audiences.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by first and third party audience fields. Supported syntax: * Filter expressions for first and third party audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All first and third party audiences for which the display name contains "Google": `displayName : "Google"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `firstAndThirdPartyAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListFirstAndThirdPartyAudiences` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the fetched first and third party audiences.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListFirstAndThirdPartyAudiencesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - firstAndThirdPartyAudiences
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Creates a FirstAndThirdPartyAudience. Only supported for the following audience_type: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`"
      operationId: displayvideo.firstAndThirdPartyAudiences.create
      parameters:
        - description: Required. The ID of the advertiser under whom the FirstAndThirdPartyAudience will be created.
          in: query
          name: advertiserId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirstAndThirdPartyAudience"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstAndThirdPartyAudience"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - firstAndThirdPartyAudiences
  "/v1/firstAndThirdPartyAudiences/{firstAndThirdPartyAudienceId}":
    get:
      description: Gets a first and third party audience.
      operationId: displayvideo.firstAndThirdPartyAudiences.get
      parameters:
        - description: Required. The ID of the first and third party audience to fetch.
          in: path
          name: firstAndThirdPartyAudienceId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that has access to the fetched first and third party audience.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that has access to the fetched first and third party audience.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstAndThirdPartyAudience"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - firstAndThirdPartyAudiences
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: "Updates an existing FirstAndThirdPartyAudience. Only supported for the following audience_type: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`"
      operationId: displayvideo.firstAndThirdPartyAudiences.patch
      parameters:
        - description: Output only. The unique ID of the first and third party audience. Assigned by the system.
          in: path
          name: firstAndThirdPartyAudienceId
          required: true
          schema:
            type: string
        - description: Required. The ID of the owner advertiser of the updated FirstAndThirdPartyAudience.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: "Required. The mask to control which fields to update. Updates are only supported for the following fields: * `displayName` * `description` * `membershipDurationDays`"
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FirstAndThirdPartyAudience"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FirstAndThirdPartyAudience"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - firstAndThirdPartyAudiences
  "/v1/firstAndThirdPartyAudiences/{firstAndThirdPartyAudienceId}:editCustomerMatchMembers":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: "Updates the member list of a Customer Match audience. Only supported for the following audience_type: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`"
      operationId: displayvideo.firstAndThirdPartyAudiences.editCustomerMatchMembers
      parameters:
        - description: Required. The ID of the Customer Match FirstAndThirdPartyAudience whose members will be edited.
          in: path
          name: firstAndThirdPartyAudienceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditCustomerMatchMembersRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditCustomerMatchMembersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - firstAndThirdPartyAudiences
  "/v1/floodlightGroups/{floodlightGroupId}":
    get:
      description: Gets a Floodlight group.
      operationId: displayvideo.floodlightGroups.get
      parameters:
        - description: Required. The ID of the Floodlight group to fetch.
          in: path
          name: floodlightGroupId
          required: true
          schema:
            type: string
        - description: Required. The partner context by which the Floodlight group is being accessed.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FloodlightGroup"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - floodlightGroups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/googleAudiences:
    get:
      description: Lists Google audiences. The order is defined by the order_by parameter.
      operationId: displayvideo.googleAudiences.list
      parameters:
        - description: The ID of the advertiser that has access to the fetched Google audiences.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by Google audience fields. Supported syntax: * Filter expressions for Google audiences currently can only contain at most one restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All Google audiences for which the display name contains "Google": `displayName : "Google"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `googleAudienceId` (default) * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListGoogleAudiences` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the fetched Google audiences.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGoogleAudiencesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - googleAudiences
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/googleAudiences/{googleAudienceId}":
    get:
      description: Gets a Google audience.
      operationId: displayvideo.googleAudiences.get
      parameters:
        - description: Required. The ID of the Google audience to fetch.
          in: path
          name: googleAudienceId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that has access to the fetched Google audience.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that has access to the fetched Google audience.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GoogleAudience"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - googleAudiences
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/guaranteedOrders:
    get:
      description: Lists guaranteed orders that are accessible to the current user. The order is defined by the order_by parameter. If a filter by entity_status is not specified, guaranteed orders with entity status `ENTITY_STATUS_ARCHIVED` will not be included in the results.
      operationId: displayvideo.guaranteedOrders.list
      parameters:
        - description: The ID of the advertiser that has access to the guaranteed order.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by guaranteed order properties. * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `guaranteed_order_id` - `exchange` - `display_name` - `status.entityStatus` Examples: * All active guaranteed orders: `status.entityStatus="ENTITY_STATUS_ACTIVE"` * Guaranteed orders belonging to Google Ad Manager or Rubicon exchanges: `exchange="EXCHANGE_GOOGLE_AD_MANAGER" OR exchange="EXCHANGE_RUBICON"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListGuaranteedOrders` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the guaranteed order.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListGuaranteedOrdersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - guaranteedOrders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new guaranteed order. Returns the newly created guaranteed order if successful.
      operationId: displayvideo.guaranteedOrders.create
      parameters:
        - description: The ID of the advertiser that the request is being made within.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that the request is being made within.
          in: query
          name: partnerId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GuaranteedOrder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuaranteedOrder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - guaranteedOrders
  "/v1/guaranteedOrders/{guaranteedOrderId}":
    get:
      description: Gets a guaranteed order.
      operationId: displayvideo.guaranteedOrders.get
      parameters:
        - description: Required. The ID of the guaranteed order to fetch. The ID is of the format `{exchange}-{legacy_guaranteed_order_id}`
          in: path
          name: guaranteedOrderId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that has access to the guaranteed order.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that has access to the guaranteed order.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuaranteedOrder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - guaranteedOrders
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing guaranteed order. Returns the updated guaranteed order if successful.
      operationId: displayvideo.guaranteedOrders.patch
      parameters:
        - description: Output only. The unique identifier of the guaranteed order. The guaranteed order IDs have the format `{exchange}-{legacy_guaranteed_order_id}`.
          in: path
          name: guaranteedOrderId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that the request is being made within.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that the request is being made within.
          in: query
          name: partnerId
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GuaranteedOrder"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GuaranteedOrder"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - guaranteedOrders
  "/v1/guaranteedOrders/{guaranteedOrderId}:editGuaranteedOrderReadAccessors":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Edits read advertisers of a guaranteed order.
      operationId: displayvideo.guaranteedOrders.editGuaranteedOrderReadAccessors
      parameters:
        - description: Required. The ID of the guaranteed order to edit. The ID is of the format `{exchange}-{legacy_guaranteed_order_id}`
          in: path
          name: guaranteedOrderId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditGuaranteedOrderReadAccessorsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EditGuaranteedOrderReadAccessorsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - guaranteedOrders
  /v1/inventorySourceGroups:
    get:
      description: Lists inventory source groups that are accessible to the current user. The order is defined by the order_by parameter.
      operationId: displayvideo.inventorySourceGroups.list
      parameters:
        - description: The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: "Allows filtering by inventory source group properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `inventorySourceGroupId` The length of this field should be no more than 500 characters."
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `inventorySourceGroupId` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the inventory source group. A partner cannot access advertiser-owned inventory source groups.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInventorySourceGroupsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new inventory source group. Returns the newly created inventory source group if successful.
      operationId: displayvideo.inventorySourceGroups.create
      parameters:
        - description: The ID of the advertiser that owns the inventory source group. The parent partner will not have access to this group.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the inventory source group. Only this partner will have write access to this group. Only advertisers to which this group is explicitly shared will have read access to this group.
          in: query
          name: partnerId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventorySourceGroup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySourceGroup"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
  "/v1/inventorySourceGroups/{inventorySourceGroupId}":
    delete:
      description: Deletes an inventory source group.
      operationId: displayvideo.inventorySourceGroups.delete
      parameters:
        - description: Required. The ID of the inventory source group to delete.
          in: path
          name: inventorySourceGroupId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the inventory source group. The parent partner does not have access to this group.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the inventory source group. Only this partner has write access to this group.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
    get:
      description: Gets an inventory source group.
      operationId: displayvideo.inventorySourceGroups.get
      parameters:
        - description: Required. The ID of the inventory source group to fetch.
          in: path
          name: inventorySourceGroupId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that has access to the inventory source group. If an inventory source group is partner-owned, only advertisers to which the group is explicitly shared can access the group.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that has access to the inventory source group. A partner cannot access an advertiser-owned inventory source group.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySourceGroup"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources":
    get:
      description: Lists inventory sources assigned to an inventory source group.
      operationId: displayvideo.inventorySourceGroups.assignedInventorySources.list
      parameters:
        - description: Required. The ID of the inventory source group to which these assignments are assigned.
          in: path
          name: inventorySourceGroupId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that has access to the assignment. If the parent inventory source group is partner-owned, only advertisers to which the parent group is explicitly shared can access the assigned inventory source.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: "Allows filtering by assigned inventory source fields. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedInventorySourceId` The length of this field should be no more than 500 characters."
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedInventorySourceId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `assignedInventorySourceId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `100`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListAssignedInventorySources` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the assignment. If the parent inventory source group is advertiser-owned, the assignment cannot be accessed via a partner.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAssignedInventorySourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an assignment between an inventory source and an inventory source group.
      operationId: displayvideo.inventorySourceGroups.assignedInventorySources.create
      parameters:
        - description: Required. The ID of the inventory source group to which the assignment will be assigned.
          in: path
          name: inventorySourceGroupId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent inventory source group. The parent partner will not have access to this assigned inventory source.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the parent inventory source group. Only this partner will have write access to this assigned inventory source.
          in: query
          name: partnerId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedInventorySource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedInventorySource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
  "/v1/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources/{assignedInventorySourceId}":
    delete:
      description: Deletes the assignment between an inventory source and an inventory source group.
      operationId: displayvideo.inventorySourceGroups.assignedInventorySources.delete
      parameters:
        - description: Required. The ID of the inventory source group to which this assignment is assigned.
          in: path
          name: inventorySourceGroupId
          required: true
          schema:
            type: string
        - description: Required. The ID of the assigned inventory source to delete.
          in: path
          name: assignedInventorySourceId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to this assigned inventory source.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that owns the parent inventory source group. Only this partner has write access to this assigned inventory source.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/inventorySourceGroups/{inventorySourceGroupId}/assignedInventorySources:bulkEdit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits multiple assignments between inventory sources and a single inventory source group. The operation will delete the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.deleted_assigned_inventory_sources and then create the assigned inventory sources provided in BulkEditAssignedInventorySourcesRequest.created_assigned_inventory_sources.
      operationId: displayvideo.inventorySourceGroups.assignedInventorySources.bulkEdit
      parameters:
        - description: Required. The ID of the inventory source group to which the assignments are assigned.
          in: path
          name: inventorySourceGroupId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditAssignedInventorySourcesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditAssignedInventorySourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySourceGroups
  /v1/inventorySources:
    get:
      description: Lists inventory sources that are accessible to the current user. The order is defined by the order_by parameter. If a filter by entity_status is not specified, inventory sources with entity status `ENTITY_STATUS_ARCHIVED` will not be included in the results.
      operationId: displayvideo.inventorySources.list
      parameters:
        - description: The ID of the advertiser that has access to the inventory source.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by inventory source properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `status.entityStatus` - `commitment` - `deliveryMethod` - `rateDetails.rateType` - `exchange` Examples: * All active inventory sources: `status.entityStatus="ENTITY_STATUS_ACTIVE"` * Inventory sources belonging to Google Ad Manager or Rubicon exchanges: `exchange="EXCHANGE_GOOGLE_AD_MANAGER" OR exchange="EXCHANGE_RUBICON"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListInventorySources` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The ID of the partner that has access to the inventory source.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListInventorySourcesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new inventory source. Returns the newly created inventory source if successful.
      operationId: displayvideo.inventorySources.create
      parameters:
        - description: The ID of the advertiser that the request is being made within.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that the request is being made within.
          in: query
          name: partnerId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventorySource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySources
  "/v1/inventorySources/{inventorySourceId}":
    get:
      description: Gets an inventory source.
      operationId: displayvideo.inventorySources.get
      parameters:
        - description: Required. The ID of the inventory source to fetch.
          in: path
          name: inventorySourceId
          required: true
          schema:
            type: string
        - description: Required. The ID of the DV360 partner to which the fetched inventory source is permissioned.
          in: query
          name: partnerId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySources
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing inventory source. Returns the updated inventory source if successful.
      operationId: displayvideo.inventorySources.patch
      parameters:
        - description: Output only. The unique ID of the inventory source. Assigned by the system.
          in: path
          name: inventorySourceId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that the request is being made within.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: The ID of the partner that the request is being made within.
          in: query
          name: partnerId
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InventorySource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySources
  "/v1/inventorySources/{inventorySourceId}:editInventorySourceReadWriteAccessors":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Edits read/write accessors of an inventory source. Returns the updated read_write_accessors for the inventory source.
      operationId: displayvideo.inventorySources.editInventorySourceReadWriteAccessors
      parameters:
        - description: Required. The ID of inventory source to update.
          in: path
          name: inventorySourceId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditInventorySourceReadWriteAccessorsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InventorySourceAccessors"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - inventorySources
  /v1/partners:
    get:
      description: Lists partners that are accessible to the current user. The order is defined by the order_by parameter.
      operationId: displayvideo.partners.list
      parameters:
        - description: 'Allows filtering by partner properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `AND` or `OR` logical operators. A sequence of restrictions implicitly uses `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `entityStatus` Examples: * All active partners: `entityStatus="ENTITY_STATUS_ACTIVE"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListPartners` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartnersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/partners/{partnerId}":
    get:
      description: Gets a partner.
      operationId: displayvideo.partners.get
      parameters:
        - description: Required. The ID of the partner to fetch.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Partner"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/partners/{partnerId}/channels":
    get:
      description: Lists channels for a partner or advertiser.
      operationId: displayvideo.partners.channels.list
      parameters:
        - description: The ID of the partner that owns the channels.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the channels.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by channel fields. Supported syntax: * Filter expressions for channel currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `displayName` Examples: * All channels for which the display name contains "google": `displayName : "google"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) * `channelId` The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListChannels` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListChannelsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new channel. Returns the newly created channel if successful.
      operationId: displayvideo.partners.channels.create
      parameters:
        - description: The ID of the partner that owns the created channel.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the created channel.
          in: query
          name: advertiserId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
  "/v1/partners/{partnerId}/channels/{channelId}":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a channel. Returns the updated channel if successful.
      operationId: displayvideo.partners.channels.patch
      parameters:
        - description: The ID of the partner that owns the created channel.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: Output only. The unique ID of the channel. Assigned by the system.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the created channel.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Channel"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Channel"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
  "/v1/partners/{partnerId}/channels/{channelId}/sites":
    get:
      description: Lists sites in a channel.
      operationId: displayvideo.partners.channels.sites.list
      parameters:
        - description: The ID of the partner that owns the parent channel.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel to which the requested sites belong.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent channel.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by site fields. Supported syntax: * Filter expressions for site currently can only contain at most one * restriction. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)`. * Supported fields: - `urlOrAppId` Examples: * All sites for which the URL or app ID contains "google": `urlOrAppId : "google"`'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `urlOrAppId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix " desc" should be added to the field name. Example: `urlOrAppId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `10000`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListSites` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/partners/{partnerId}/channels/{channelId}/sites/{urlOrAppId}":
    delete:
      description: Deletes a site from a channel.
      operationId: displayvideo.partners.channels.sites.delete
      parameters:
        - description: The ID of the partner that owns the parent channel.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel to which the site belongs.
          in: path
          name: channelId
          required: true
          schema:
            type: string
        - description: Required. The URL or app ID of the site to delete.
          in: path
          name: urlOrAppId
          required: true
          schema:
            type: string
        - description: The ID of the advertiser that owns the parent channel.
          in: query
          name: advertiserId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/partners/{partnerId}/channels/{channelId}/sites:bulkEdit":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits sites under a single channel. The operation will delete the sites provided in BulkEditSitesRequest.deleted_sites and then create the sites provided in BulkEditSitesRequest.created_sites.
      operationId: displayvideo.partners.channels.sites.bulkEdit
      parameters:
        - description: The ID of the partner that owns the parent channel.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel to which the sites belong.
          in: path
          name: channelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditSitesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
  "/v1/partners/{partnerId}/channels/{channelId}/sites:replace":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Replaces all of the sites under a single channel. The operation will replace the sites under a channel with the sites provided in ReplaceSitesRequest.new_sites.
      operationId: displayvideo.partners.channels.sites.replace
      parameters:
        - description: The ID of the partner that owns the parent channel.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: Required. The ID of the parent channel whose sites will be replaced.
          in: path
          name: channelId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ReplaceSitesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReplaceSitesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
  "/v1/partners/{partnerId}/targetingTypes/{targetingType}/assignedTargetingOptions":
    get:
      description: Lists the targeting options assigned to a partner.
      operationId: displayvideo.partners.targetingTypes.assignedTargetingOptions.list
      parameters:
        - description: Required. The ID of the partner.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of assigned targeting options to list. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: 'Allows filtering by assigned targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `OR`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `EQUALS (=)`. * Supported fields: - `assignedTargetingOptionId` Examples: * AssignedTargetingOption with ID 123456 `assignedTargetingOptionId="123456"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `assignedTargetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `assignedTargetingOptionId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListPartnerAssignedTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListPartnerAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Assigns a targeting option to a partner. Returns the assigned targeting option if successful.
      operationId: displayvideo.partners.targetingTypes.assignedTargetingOptions.create
      parameters:
        - description: Required. The ID of the partner.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignedTargetingOption"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
  "/v1/partners/{partnerId}/targetingTypes/{targetingType}/assignedTargetingOptions/{assignedTargetingOptionId}":
    delete:
      description: Deletes an assigned targeting option from a partner.
      operationId: displayvideo.partners.targetingTypes.assignedTargetingOptions.delete
      parameters:
        - description: Required. The ID of the partner.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. The ID of the assigned targeting option to delete.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    get:
      description: Gets a single targeting option assigned to a partner.
      operationId: displayvideo.partners.targetingTypes.assignedTargetingOptions.get
      parameters:
        - description: Required. The ID of the partner.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
        - description: "Required. Identifies the type of this assigned targeting option. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. An identifier unique to the targeting type in this partner that identifies the assigned targeting option being requested.
          in: path
          name: assignedTargetingOptionId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AssignedTargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/partners/{partnerId}:bulkEditPartnerAssignedTargetingOptions":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits targeting options under a single partner. The operation will delete the assigned targeting options provided in BulkEditPartnerAssignedTargetingOptionsRequest.deleteRequests and then create the assigned targeting options provided in BulkEditPartnerAssignedTargetingOptionsRequest.createRequests .
      operationId: displayvideo.partners.bulkEditPartnerAssignedTargetingOptions
      parameters:
        - description: Required. The ID of the partner.
          in: path
          name: partnerId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditPartnerAssignedTargetingOptionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditPartnerAssignedTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - partners
  /v1/sdfdownloadtasks:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates an SDF Download Task. Returns an Operation. An SDF Download Task is a long-running, asynchronous operation. The metadata type of this operation is SdfDownloadTaskMetadata. If the request is successful, the response type of the operation is SdfDownloadTask. The response will not include the download files, which must be retrieved with media.download. The state of operation can be retrieved with sdfdownloadtask.operations.get. Any errors can be found in the error.message. Note that error.details is expected to be empty.
      operationId: displayvideo.sdfdownloadtasks.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSdfDownloadTaskRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - sdfdownloadtasks
  "/v1/targetingTypes/{targetingType}/targetingOptions":
    get:
      description: Lists targeting options of a given type.
      operationId: displayvideo.targetingTypes.targetingOptions.list
      parameters:
        - description: "Required. The type of targeting option to be listed. Accepted values are: * `TARGETING_TYPE_APP_CATEGORY` * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_VIDEO_PLAYER_SIZE` * `TARGETING_TYPE_USER_REWARDED_CONTENT` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DEVICE_TYPE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_CARRIER_AND_ISP` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_VIEWABILITY` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_NATIVE_CONTENT_POSITION` * `TARGETING_TYPE_OMID`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. The Advertiser this request is being made in the context of.
          in: query
          name: advertiserId
          schema:
            type: string
        - description: 'Allows filtering by targeting option properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by `OR` logical operators. * A restriction has the form of `{field} {operator} {value}`. * The operator must be "=" (equal sign). * Supported fields: - `carrierAndIspDetails.type` - `geoRegionDetails.geoRegionType` - `targetingOptionId` Examples: * All `GEO REGION` targeting options that belong to sub type `GEO_REGION_TYPE_COUNTRY` or `GEO_REGION_TYPE_STATE`: `geoRegionDetails.geoRegionType="GEO_REGION_TYPE_COUNTRY" OR geoRegionDetails.geoRegionType="GEO_REGION_TYPE_STATE"` * All `CARRIER AND ISP` targeting options that belong to sub type `CARRIER_AND_ISP_TYPE_CARRIER`: `carrierAndIspDetails.type="CARRIER_AND_ISP_TYPE_CARRIER"`. The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `targetingOptionId` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. Example: `targetingOptionId desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListTargetingOptions` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - targetingTypes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/targetingTypes/{targetingType}/targetingOptions/{targetingOptionId}":
    get:
      description: Gets a single targeting option.
      operationId: displayvideo.targetingTypes.targetingOptions.get
      parameters:
        - description: "Required. The type of targeting option to retrieve. Accepted values are: * `TARGETING_TYPE_APP_CATEGORY` * `TARGETING_TYPE_AGE_RANGE` * `TARGETING_TYPE_GENDER` * `TARGETING_TYPE_VIDEO_PLAYER_SIZE` * `TARGETING_TYPE_USER_REWARDED_CONTENT` * `TARGETING_TYPE_PARENTAL_STATUS` * `TARGETING_TYPE_CONTENT_INSTREAM_POSITION` * `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION` * `TARGETING_TYPE_DEVICE_TYPE` * `TARGETING_TYPE_BROWSER` * `TARGETING_TYPE_HOUSEHOLD_INCOME` * `TARGETING_TYPE_ON_SCREEN_POSITION` * `TARGETING_TYPE_CARRIER_AND_ISP` * `TARGETING_TYPE_OPERATING_SYSTEM` * `TARGETING_TYPE_DEVICE_MAKE_MODEL` * `TARGETING_TYPE_ENVIRONMENT` * `TARGETING_TYPE_CATEGORY` * `TARGETING_TYPE_VIEWABILITY` * `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS` * `TARGETING_TYPE_LANGUAGE` * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION` * `TARGETING_TYPE_EXCHANGE` * `TARGETING_TYPE_SUB_EXCHANGE` * `TARGETING_TYPE_NATIVE_CONTENT_POSITION` * `TARGETING_TYPE_OMID`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
        - description: Required. The ID of the of targeting option to retrieve.
          in: path
          name: targetingOptionId
          required: true
          schema:
            type: string
        - description: Required. The Advertiser this request is being made in the context of.
          in: query
          name: advertiserId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TargetingOption"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - targetingTypes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  "/v1/targetingTypes/{targetingType}/targetingOptions:search":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Searches for targeting options of a given type based on the given search terms.
      operationId: displayvideo.targetingTypes.targetingOptions.search
      parameters:
        - description: "Required. The type of targeting options to retrieve. Accepted values are: * `TARGETING_TYPE_GEO_REGION` * `TARGETING_TYPE_POI` * `TARGETING_TYPE_BUSINESS_CHAIN`"
          in: path
          name: targetingType
          required: true
          schema:
            enum:
              - TARGETING_TYPE_UNSPECIFIED
              - TARGETING_TYPE_CHANNEL
              - TARGETING_TYPE_APP_CATEGORY
              - TARGETING_TYPE_APP
              - TARGETING_TYPE_URL
              - TARGETING_TYPE_DAY_AND_TIME
              - TARGETING_TYPE_AGE_RANGE
              - TARGETING_TYPE_REGIONAL_LOCATION_LIST
              - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
              - TARGETING_TYPE_GENDER
              - TARGETING_TYPE_VIDEO_PLAYER_SIZE
              - TARGETING_TYPE_USER_REWARDED_CONTENT
              - TARGETING_TYPE_PARENTAL_STATUS
              - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
              - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
              - TARGETING_TYPE_DEVICE_TYPE
              - TARGETING_TYPE_AUDIENCE_GROUP
              - TARGETING_TYPE_BROWSER
              - TARGETING_TYPE_HOUSEHOLD_INCOME
              - TARGETING_TYPE_ON_SCREEN_POSITION
              - TARGETING_TYPE_THIRD_PARTY_VERIFIER
              - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
              - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
              - TARGETING_TYPE_ENVIRONMENT
              - TARGETING_TYPE_CARRIER_AND_ISP
              - TARGETING_TYPE_OPERATING_SYSTEM
              - TARGETING_TYPE_DEVICE_MAKE_MODEL
              - TARGETING_TYPE_KEYWORD
              - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
              - TARGETING_TYPE_VIEWABILITY
              - TARGETING_TYPE_CATEGORY
              - TARGETING_TYPE_INVENTORY_SOURCE
              - TARGETING_TYPE_LANGUAGE
              - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
              - TARGETING_TYPE_GEO_REGION
              - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
              - TARGETING_TYPE_EXCHANGE
              - TARGETING_TYPE_SUB_EXCHANGE
              - TARGETING_TYPE_POI
              - TARGETING_TYPE_BUSINESS_CHAIN
              - TARGETING_TYPE_CONTENT_DURATION
              - TARGETING_TYPE_CONTENT_STREAM_TYPE
              - TARGETING_TYPE_NATIVE_CONTENT_POSITION
              - TARGETING_TYPE_OMID
              - TARGETING_TYPE_AUDIO_CONTENT_TYPE
              - TARGETING_TYPE_CONTENT_GENRE
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SearchTargetingOptionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchTargetingOptionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
      tags:
        - targetingTypes
  /v1/users:
    get:
      description: Lists users that are accessible to the current user. If two users have user roles on the same partner or advertiser, they can access each other.
      operationId: displayvideo.users.list
      parameters:
        - description: 'Allows filtering by user properties. Supported syntax: * Filter expressions are made up of one or more restrictions. * Restrictions can be combined by the logical operator `AND`. * A restriction has the form of `{field} {operator} {value}`. * The operator must be `CONTAINS (:)` or `EQUALS (=)`. * The operator must be `CONTAINS (:)` for the following fields: - `displayName` - `email` * The operator must be `EQUALS (=)` for the following fields: - `assignedUserRole.userRole` - `assignedUserRole.partnerId` - `assignedUserRole.advertiserId` - `assignedUserRole.entityType`: A synthetic field of AssignedUserRole used for filtering. Identifies the type of entity to which the user role is assigned. Valid values are `Partner` and `Advertiser`. - `assignedUserRole.parentPartnerId`: A synthetic field of AssignedUserRole used for filtering. Identifies the parent partner of the entity to which the user role is assigned." Examples: * The user with displayName containing `foo`: `displayName:"foo"` * The user with email containing `bar`: `email:"bar"` * All users with standard user roles: `assignedUserRole.userRole="STANDARD"` * All users with user roles for partner 123: `assignedUserRole.partnerId="123"` * All users with user roles for advertiser 123: `assignedUserRole.advertiserId="123"` * All users with partner level user roles: `entityType="PARTNER"` * All users with user roles for partner 123 and advertisers under partner 123: `parentPartnerId="123"` The length of this field should be no more than 500 characters.'
          in: query
          name: filter
          schema:
            type: string
        - description: 'Field by which to sort the list. Acceptable values are: * `displayName` (default) The default sorting order is ascending. To specify descending order for a field, a suffix "desc" should be added to the field name. For example, `displayName desc`.'
          in: query
          name: orderBy
          schema:
            type: string
        - description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `ListUsers` method. If not specified, the first page of results will be returned.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListUsersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-user-management
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-user-management
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a new user. Returns the newly created user if successful.
      operationId: displayvideo.users.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-user-management
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-user-management
      tags:
        - users
  "/v1/users/{userId}":
    delete:
      description: Deletes a user.
      operationId: displayvideo.users.delete
      parameters:
        - description: Required. The ID of the user to delete.
          in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-user-management
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-user-management
      tags:
        - users
    get:
      description: Gets a user.
      operationId: displayvideo.users.get
      parameters:
        - description: Required. The ID of the user to fetch.
          in: path
          name: userId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-user-management
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-user-management
      tags:
        - users
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates an existing user. Returns the updated user if successful.
      operationId: displayvideo.users.patch
      parameters:
        - description: Output only. The unique ID of the user. Assigned by the system.
          in: path
          name: userId
          required: true
          schema:
            type: string
        - description: Required. The mask to control which fields to update.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-user-management
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-user-management
      tags:
        - users
  "/v1/users/{userId}:bulkEditAssignedUserRoles":
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Bulk edits user roles for a user. The operation will delete the assigned user roles provided in BulkEditAssignedUserRolesRequest.deletedAssignedUserRoles and then assign the user roles provided in BulkEditAssignedUserRolesRequest.createdAssignedUserRoles.
      operationId: displayvideo.users.bulkEditAssignedUserRoles
      parameters:
        - description: Required. The ID of the user to which the assigned user roles belong.
          in: path
          name: userId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BulkEditAssignedUserRolesRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BulkEditAssignedUserRolesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video-user-management
          Oauth2c:
            - https://www.googleapis.com/auth/display-video-user-management
      tags:
        - users
  "/v1/{name}":
    get:
      description: Gets the latest state of an asynchronous SDF download task operation. Clients should poll this method at intervals of 30 seconds.
      operationId: displayvideo.sdfdownloadtasks.operations.get
      parameters:
        - description: The name of the operation resource.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/display-video
          Oauth2c:
            - https://www.googleapis.com/auth/display-video
        - Oauth2:
            - https://www.googleapis.com/auth/doubleclickbidmanager
          Oauth2c:
            - https://www.googleapis.com/auth/doubleclickbidmanager
      tags:
        - sdfdownloadtasks
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    ActivateManualTriggerRequest:
      description: Request message for ManualTriggerService.ActivateManualTrigger.
      properties: {}
      type: object
    ActiveViewVideoViewabilityMetricConfig:
      description: Configuration for custom Active View video viewability metrics.
      properties:
        displayName:
          description: Required. The display name of the custom metric.
          type: string
        minimumDuration:
          description: The minimum visible video duration required (in seconds) in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).
          enum:
            - VIDEO_DURATION_UNSPECIFIED
            - VIDEO_DURATION_SECONDS_NONE
            - VIDEO_DURATION_SECONDS_0
            - VIDEO_DURATION_SECONDS_1
            - VIDEO_DURATION_SECONDS_2
            - VIDEO_DURATION_SECONDS_3
            - VIDEO_DURATION_SECONDS_4
            - VIDEO_DURATION_SECONDS_5
            - VIDEO_DURATION_SECONDS_6
            - VIDEO_DURATION_SECONDS_7
            - VIDEO_DURATION_SECONDS_8
            - VIDEO_DURATION_SECONDS_9
            - VIDEO_DURATION_SECONDS_10
            - VIDEO_DURATION_SECONDS_11
            - VIDEO_DURATION_SECONDS_12
            - VIDEO_DURATION_SECONDS_13
            - VIDEO_DURATION_SECONDS_14
            - VIDEO_DURATION_SECONDS_15
            - VIDEO_DURATION_SECONDS_30
            - VIDEO_DURATION_SECONDS_45
            - VIDEO_DURATION_SECONDS_60
          type: string
        minimumQuartile:
          description: The minimum visible video duration required, based on the video quartiles, in order for an impression to be recorded. You must specify minimum_duration, minimum_quartile or both. If both are specified, an impression meets the metric criteria if either requirement is met (whichever happens first).
          enum:
            - VIDEO_DURATION_QUARTILE_UNSPECIFIED
            - VIDEO_DURATION_QUARTILE_NONE
            - VIDEO_DURATION_QUARTILE_FIRST
            - VIDEO_DURATION_QUARTILE_SECOND
            - VIDEO_DURATION_QUARTILE_THIRD
            - VIDEO_DURATION_QUARTILE_FOURTH
          type: string
        minimumViewability:
          description: Required. The minimum percentage of the video ad's pixels visible on the screen in order for an impression to be recorded.
          enum:
            - VIEWABILITY_PERCENT_UNSPECIFIED
            - VIEWABILITY_PERCENT_0
            - VIEWABILITY_PERCENT_25
            - VIEWABILITY_PERCENT_50
            - VIEWABILITY_PERCENT_75
            - VIEWABILITY_PERCENT_100
          type: string
        minimumVolume:
          description: Required. The minimum percentage of the video ad's volume required in order for an impression to be recorded.
          enum:
            - VIDEO_VOLUME_PERCENT_UNSPECIFIED
            - VIDEO_VOLUME_PERCENT_0
            - VIDEO_VOLUME_PERCENT_10
          type: string
      type: object
    Adloox:
      description: Details of Adloox settings.
      properties:
        excludedAdlooxCategories:
          description: Adloox's brand safety settings.
          items:
            enum:
              - ADLOOX_UNSPECIFIED
              - ADULT_CONTENT_HARD
              - ADULT_CONTENT_SOFT
              - ILLEGAL_CONTENT
              - BORDERLINE_CONTENT
              - DISCRIMINATORY_CONTENT
              - VIOLENT_CONTENT_WEAPONS
              - LOW_VIEWABILITY_DOMAINS
              - FRAUD
            type: string
          type: array
      type: object
    Advertiser:
      description: A single advertiser in Display & Video 360 (DV360).
      properties:
        adServerConfig:
          $ref: "#/components/schemas/AdvertiserAdServerConfig"
          description: Required. Immutable. Ad server related settings of the advertiser.
        advertiserId:
          description: Output only. The unique ID of the advertiser. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        creativeConfig:
          $ref: "#/components/schemas/AdvertiserCreativeConfig"
          description: Required. Creative related settings of the advertiser.
        dataAccessConfig:
          $ref: "#/components/schemas/AdvertiserDataAccessConfig"
          description: Settings that control how advertiser data may be accessed.
        displayName:
          description: Required. The display name of the advertiser. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        entityStatus:
          description: Required. Controls whether or not insertion orders and line items of the advertiser can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_PAUSED` and `ENTITY_STATUS_SCHEDULED_FOR_DELETION`. * If set to `ENTITY_STATUS_SCHEDULED_FOR_DELETION`, the advertiser will be deleted 30 days from when it was first scheduled for deletion.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        generalConfig:
          $ref: "#/components/schemas/AdvertiserGeneralConfig"
          description: Required. General settings of the advertiser.
        integrationDetails:
          $ref: "#/components/schemas/IntegrationDetails"
          description: Integration details of the advertiser. Only integrationCode is currently applicable to advertiser. Other fields of IntegrationDetails are not supported and will be ignored if provided.
        name:
          description: Output only. The resource name of the advertiser.
          readOnly: true
          type: string
        partnerId:
          description: Required. Immutable. The unique ID of the partner that the advertiser belongs to.
          format: int64
          type: string
        prismaEnabled:
          description: "Whether integration with Mediaocean (Prisma) is enabled. By enabling this, you agree to the following: On behalf of my company, I authorize Mediaocean (Prisma) to send budget segment plans to Google, and I authorize Google to send corresponding reporting and invoices from DV360 to Mediaocean for the purposes of budget planning, billing, and reconciliation for this advertiser."
          type: boolean
        servingConfig:
          $ref: "#/components/schemas/AdvertiserTargetingConfig"
          description: Targeting settings related to ad serving of the advertiser.
        updateTime:
          description: Output only. The timestamp when the advertiser was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    AdvertiserAdServerConfig:
      description: Ad server related settings of an advertiser.
      properties:
        cmHybridConfig:
          $ref: "#/components/schemas/CmHybridConfig"
          description: The configuration for advertisers that use both Campaign Manager 360 (CM360) and third-party ad servers.
        thirdPartyOnlyConfig:
          $ref: "#/components/schemas/ThirdPartyOnlyConfig"
          description: The configuration for advertisers that use third-party ad servers only.
      type: object
    AdvertiserCreativeConfig:
      description: Creatives related settings of an advertiser.
      properties:
        dynamicCreativeEnabled:
          description: Whether or not the advertiser is enabled for dynamic creatives.
          type: boolean
        iasClientId:
          description: An ID for configuring campaign monitoring provided by Integral Ad Service (IAS). The DV360 system will append an IAS "Campaign Monitor" tag containing this ID to the creative tag.
          format: int64
          type: string
        obaComplianceDisabled:
          description: "Whether or not to use DV360's Online Behavioral Advertising (OBA) compliance. Warning: Changing OBA settings may cause the audit status of your creatives to be reset by some ad exchanges, making them ineligible to serve until they are re-approved."
          type: boolean
        videoCreativeDataSharingAuthorized:
          description: By setting this field to `true`, you, on behalf of your company, authorize Google to use video creatives associated with this Display & Video 360 advertiser to provide reporting and features related to the advertiser's television campaigns. Applicable only when the advertiser has a CM360 hybrid ad server configuration.
          type: boolean
      type: object
    AdvertiserDataAccessConfig:
      description: Settings that control how advertiser related data may be accessed.
      properties:
        sdfConfig:
          $ref: "#/components/schemas/AdvertiserSdfConfig"
          description: Structured Data Files (SDF) settings for the advertiser. If not specified, the SDF settings of the parent partner are used.
      type: object
    AdvertiserGeneralConfig:
      description: General settings of an advertiser.
      properties:
        currencyCode:
          description: "Required. Immutable. Advertiser's currency in ISO 4217 format. Accepted codes and the currencies they represent are: Currency Code : Currency Name * `ARS` : Argentine Peso * `AUD` : Australian Dollar * `BRL` : Brazilian Real * `CAD` : Canadian Dollar * `CHF` : Swiss Franc * `CLP` : Chilean Peso * `CNY` : Chinese Yuan * `COP` : Colombian Peso * `CZK` : Czech Koruna * `DKK` : Danish Krone * `EGP` : Egyption Pound * `EUR` : Euro * `GBP` : British Pound * `HKD` : Hong Kong Dollar * `HUF` : Hungarian Forint * `IDR` : Indonesian Rupiah * `ILS` : Israeli Shekel * `INR` : Indian Rupee * `JPY` : Japanese Yen * `KRW` : South Korean Won * `MXN` : Mexican Pesos * `MYR` : Malaysian Ringgit * `NGN` : Nigerian Naira * `NOK` : Norwegian Krone * `NZD` : New Zealand Dollar * `PEN` : Peruvian Nuevo Sol * `PLN` : Polish Zloty * `RON` : New Romanian Leu * `RUB` : Russian Ruble * `SEK` : Swedish Krona * `TRY` : Turkish Lira * `TWD` : New Taiwan Dollar * `USD` : US Dollar * `ZAR` : South African Rand"
          type: string
        domainUrl:
          description: Required. The domain URL of the advertiser's primary website. The system will send this information to publishers that require website URL to associate a campaign with an advertiser. Provide a URL with no path or query string, beginning with `http:` or `https:`. For example, http://www.example.com
          type: string
        timeZone:
          description: "Output only. The standard TZ database name of the advertiser's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones For CM360 hybrid advertisers, the time zone is the same as that of the associated CM360 account; for third-party only advertisers, the time zone is the same as that of the parent partner."
          readOnly: true
          type: string
      type: object
    AdvertiserSdfConfig:
      description: Structured Data Files (SDF) settings of an advertiser.
      properties:
        overridePartnerSdfConfig:
          description: Whether or not this advertiser overrides the SDF configuration of its parent partner. By default, an advertiser inherits the SDF configuration from the parent partner. To override the partner configuration, set this field to `true` and provide the new configuration in sdfConfig.
          type: boolean
        sdfConfig:
          $ref: "#/components/schemas/SdfConfig"
          description: The SDF configuration for the advertiser. * Required when overridePartnerSdfConfig is `true`. * Output only when overridePartnerSdfConfig is `false`.
      type: object
    AdvertiserTargetingConfig:
      description: Targeting settings related to ad serving of an advertiser.
      properties:
        exemptTvFromViewabilityTargeting:
          description: Whether or not connected TV devices are exempt from viewability targeting for all video line items under the advertiser.
          type: boolean
      type: object
    AgeRangeAssignedTargetingOptionDetails:
      description: Represents a targetable age range. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AGE_RANGE`.
      properties:
        ageRange:
          description: The age range of an audience. We only support targeting a continuous age range of an audience. Thus, the age range represented in this field can be 1) targeted solely, or, 2) part of a larger continuous age range. The reach of a continuous age range targeting can be expanded by also targeting an audience of an unknown age. Output only in v1. Required in v2.
          enum:
            - AGE_RANGE_UNSPECIFIED
            - AGE_RANGE_18_24
            - AGE_RANGE_25_34
            - AGE_RANGE_35_44
            - AGE_RANGE_45_54
            - AGE_RANGE_55_64
            - AGE_RANGE_65_PLUS
            - AGE_RANGE_UNKNOWN
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AGE_RANGE`.
          type: string
      type: object
    AgeRangeTargetingOptionDetails:
      description: Represents a targetable age range. This will be populated in the age_range_details field when targeting_type is `TARGETING_TYPE_AGE_RANGE`.
      properties:
        ageRange:
          description: Output only. The age range of an audience.
          enum:
            - AGE_RANGE_UNSPECIFIED
            - AGE_RANGE_18_24
            - AGE_RANGE_25_34
            - AGE_RANGE_35_44
            - AGE_RANGE_45_54
            - AGE_RANGE_55_64
            - AGE_RANGE_65_PLUS
            - AGE_RANGE_UNKNOWN
          readOnly: true
          type: string
      type: object
    AppAssignedTargetingOptionDetails:
      description: Details for assigned app targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_APP`.
      properties:
        appId:
          description: Required. The ID of the app. Android's Play store app uses bundle ID, for example `com.google.android.gm`. Apple's App store app ID uses 9 digit string, for example `422689480`.
          type: string
        appPlatform:
          description: Indicates the platform of the targeted app. If this field is not specified, the app platform will be assumed to be mobile (i.e., Android or iOS), and we will derive the appropriate mobile platform from the app ID.
          enum:
            - APP_PLATFORM_UNSPECIFIED
            - APP_PLATFORM_IOS
            - APP_PLATFORM_ANDROID
            - APP_PLATFORM_ROKU
            - APP_PLATFORM_AMAZON_FIRETV
            - APP_PLATFORM_PLAYSTATION
            - APP_PLATFORM_APPLE_TV
            - APP_PLATFORM_XBOX
            - APP_PLATFORM_SAMSUNG_TV
            - APP_PLATFORM_ANDROID_TV
            - APP_PLATFORM_GENERIC_CTV
          type: string
        displayName:
          description: Output only. The display name of the app.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
      type: object
    AppCategoryAssignedTargetingOptionDetails:
      description: Details for assigned app category targeting option. This will be populated in the app_category_details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.
      properties:
        displayName:
          description: Output only. The display name of the app category.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.
          type: string
      type: object
    AppCategoryTargetingOptionDetails:
      description: Represents a targetable collection of apps. A collection lets you target dynamic groups of related apps that are maintained by the platform, for example `All Apps/Google Play/Games`. This will be populated in the app_category_details field when targeting_type is `TARGETING_TYPE_APP_CATEGORY`.
      properties:
        displayName:
          description: Output only. The name of the app collection.
          readOnly: true
          type: string
      type: object
    Asset:
      description: A single asset.
      properties:
        content:
          description: The asset content. For uploaded assets, the content is the serving path.
          type: string
        mediaId:
          description: Media ID of the uploaded asset. This is a unique identifier for the asset. This ID can be passed to other API calls, e.g. CreateCreative to associate the asset with a creative.
          format: int64
          type: string
      type: object
    AssetAssociation:
      description: Asset association for the creative.
      properties:
        asset:
          $ref: "#/components/schemas/Asset"
          description: The associated asset.
        role:
          description: The role of this asset for the creative.
          enum:
            - ASSET_ROLE_UNSPECIFIED
            - ASSET_ROLE_MAIN
            - ASSET_ROLE_BACKUP
            - ASSET_ROLE_POLITE_LOAD
            - ASSET_ROLE_HEADLINE
            - ASSET_ROLE_LONG_HEADLINE
            - ASSET_ROLE_BODY
            - ASSET_ROLE_LONG_BODY
            - ASSET_ROLE_CAPTION_URL
            - ASSET_ROLE_CALL_TO_ACTION
            - ASSET_ROLE_ADVERTISER_NAME
            - ASSET_ROLE_PRICE
            - ASSET_ROLE_ANDROID_APP_ID
            - ASSET_ROLE_IOS_APP_ID
            - ASSET_ROLE_RATING
            - ASSET_ROLE_ICON
            - ASSET_ROLE_COVER_IMAGE
          type: string
      type: object
    AssignedInventorySource:
      description: An assignment between a targetable inventory source and an inventory source group.
      properties:
        assignedInventorySourceId:
          description: Output only. The unique ID of the assigned inventory source. The ID is only unique within a given inventory source group. It may be reused in other contexts.
          format: int64
          readOnly: true
          type: string
        inventorySourceId:
          description: Required. The ID of the inventory source entity being targeted.
          type: string
        name:
          description: Output only. The resource name of the assigned inventory source.
          readOnly: true
          type: string
      type: object
    AssignedLocation:
      description: An assignment between a location list and a relevant targeting option. Currently, geo region targeting options are the only supported option for assignment.
      properties:
        assignedLocationId:
          description: Output only. The unique ID of the assigned location. The ID is only unique within a location list. It may be reused in other contexts.
          format: int64
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the assigned location.
          readOnly: true
          type: string
        targetingOptionId:
          description: Required. The ID of the targeting option assigned to the location list. Must be of type TARGETING_TYPE_GEO_REGION.
          type: string
      type: object
    AssignedTargetingOption:
      description: A single assigned targeting option, which defines the state of a targeting option for an entity with targeting settings.
      properties:
        ageRangeDetails:
          $ref: "#/components/schemas/AgeRangeAssignedTargetingOptionDetails"
          description: Age range details. This field will be populated when the targeting_type is `TARGETING_TYPE_AGE_RANGE`.
        appCategoryDetails:
          $ref: "#/components/schemas/AppCategoryAssignedTargetingOptionDetails"
          description: App category details. This field will be populated when the targeting_type is `TARGETING_TYPE_APP_CATEGORY`.
        appDetails:
          $ref: "#/components/schemas/AppAssignedTargetingOptionDetails"
          description: App details. This field will be populated when the targeting_type is `TARGETING_TYPE_APP`.
        assignedTargetingOptionId:
          description: Output only. The unique ID of the assigned targeting option. The ID is only unique within a given resource and targeting type. It may be reused in other contexts.
          readOnly: true
          type: string
        audienceGroupDetails:
          $ref: "#/components/schemas/AudienceGroupAssignedTargetingOptionDetails"
          description: Audience targeting details. This field will be populated when the targeting_type is `TARGETING_TYPE_AUDIENCE_GROUP`. You can only target one audience group option per resource.
        audioContentTypeDetails:
          $ref: "#/components/schemas/AudioContentTypeAssignedTargetingOptionDetails"
          description: Audio content type details. This field will be populated when the targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.
        authorizedSellerStatusDetails:
          $ref: "#/components/schemas/AuthorizedSellerStatusAssignedTargetingOptionDetails"
          description: Authorized seller status details. This field will be populated when the targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`. You can only target one authorized seller status option per resource. If a resource doesn't have an authorized seller status option, all authorized sellers indicated as DIRECT or RESELLER in the ads.txt file are targeted by default.
        browserDetails:
          $ref: "#/components/schemas/BrowserAssignedTargetingOptionDetails"
          description: Browser details. This field will be populated when the targeting_type is `TARGETING_TYPE_BROWSER`.
        businessChainDetails:
          $ref: "#/components/schemas/BusinessChainAssignedTargetingOptionDetails"
          description: Business chain details. This field will be populated when the targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.
        carrierAndIspDetails:
          $ref: "#/components/schemas/CarrierAndIspAssignedTargetingOptionDetails"
          description: Carrier and ISP details. This field will be populated when the targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.
        categoryDetails:
          $ref: "#/components/schemas/CategoryAssignedTargetingOptionDetails"
          description: Category details. This field will be populated when the targeting_type is `TARGETING_TYPE_CATEGORY`. Targeting a category will also target its subcategories. If a category is excluded from targeting and a subcategory is included, the exclusion will take precedence.
        channelDetails:
          $ref: "#/components/schemas/ChannelAssignedTargetingOptionDetails"
          description: Channel details. This field will be populated when the targeting_type is `TARGETING_TYPE_CHANNEL`.
        contentDurationDetails:
          $ref: "#/components/schemas/ContentDurationAssignedTargetingOptionDetails"
          description: Content duration details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_DURATION`.
        contentGenreDetails:
          $ref: "#/components/schemas/ContentGenreAssignedTargetingOptionDetails"
          description: Content genre details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_GENRE`.
        contentInstreamPositionDetails:
          $ref: "#/components/schemas/ContentInstreamPositionAssignedTargetingOptionDetails"
          description: Content instream position details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
        contentOutstreamPositionDetails:
          $ref: "#/components/schemas/ContentOutstreamPositionAssignedTargetingOptionDetails"
          description: Content outstream position details. This field will be populated when the targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
        contentStreamTypeDetails:
          $ref: "#/components/schemas/ContentStreamTypeAssignedTargetingOptionDetails"
          description: Content duration details. This field will be populated when the TargetingType is `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
        dayAndTimeDetails:
          $ref: "#/components/schemas/DayAndTimeAssignedTargetingOptionDetails"
          description: Day and time details. This field will be populated when the targeting_type is `TARGETING_TYPE_DAY_AND_TIME`.
        deviceMakeModelDetails:
          $ref: "#/components/schemas/DeviceMakeModelAssignedTargetingOptionDetails"
          description: Device make and model details. This field will be populated when the targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
        deviceTypeDetails:
          $ref: "#/components/schemas/DeviceTypeAssignedTargetingOptionDetails"
          description: Device Type details. This field will be populated when the targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.
        digitalContentLabelExclusionDetails:
          $ref: "#/components/schemas/DigitalContentLabelAssignedTargetingOptionDetails"
          description: Digital content label details. This field will be populated when the targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`. Digital content labels are targeting exclusions. Advertiser level digital content label exclusions, if set, are always applied in serving (even though they aren't visible in resource settings). Resource settings can exclude content labels in addition to advertiser exclusions, but can't override them. A line item won't serve if all the digital content labels are excluded.
        environmentDetails:
          $ref: "#/components/schemas/EnvironmentAssignedTargetingOptionDetails"
          description: Environment details. This field will be populated when the targeting_type is `TARGETING_TYPE_ENVIRONMENT`.
        exchangeDetails:
          $ref: "#/components/schemas/ExchangeAssignedTargetingOptionDetails"
          description: Exchange details. This field will be populated when the targeting_type is `TARGETING_TYPE_EXCHANGE`.
        genderDetails:
          $ref: "#/components/schemas/GenderAssignedTargetingOptionDetails"
          description: Gender details. This field will be populated when the targeting_type is `TARGETING_TYPE_GENDER`.
        geoRegionDetails:
          $ref: "#/components/schemas/GeoRegionAssignedTargetingOptionDetails"
          description: Geographic region details. This field will be populated when the targeting_type is `TARGETING_TYPE_GEO_REGION`.
        householdIncomeDetails:
          $ref: "#/components/schemas/HouseholdIncomeAssignedTargetingOptionDetails"
          description: Household income details. This field will be populated when the targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.
        inheritance:
          description: Output only. The inheritance status of the assigned targeting option.
          enum:
            - INHERITANCE_UNSPECIFIED
            - NOT_INHERITED
            - INHERITED_FROM_PARTNER
            - INHERITED_FROM_ADVERTISER
          readOnly: true
          type: string
        inventorySourceDetails:
          $ref: "#/components/schemas/InventorySourceAssignedTargetingOptionDetails"
          description: Inventory source details. This field will be populated when the targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE`.
        inventorySourceGroupDetails:
          $ref: "#/components/schemas/InventorySourceGroupAssignedTargetingOptionDetails"
          description: Inventory source group details. This field will be populated when the targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.
        keywordDetails:
          $ref: "#/components/schemas/KeywordAssignedTargetingOptionDetails"
          description: Keyword details. This field will be populated when the targeting_type is `TARGETING_TYPE_KEYWORD`. A maximum of 5000 direct negative keywords can be assigned to a resource. No limit on number of positive keywords that can be assigned.
        languageDetails:
          $ref: "#/components/schemas/LanguageAssignedTargetingOptionDetails"
          description: Language details. This field will be populated when the targeting_type is `TARGETING_TYPE_LANGUAGE`.
        name:
          description: Output only. The resource name for this assigned targeting option.
          readOnly: true
          type: string
        nativeContentPositionDetails:
          $ref: "#/components/schemas/NativeContentPositionAssignedTargetingOptionDetails"
          description: Native content position details. This field will be populated when the targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.
        negativeKeywordListDetails:
          $ref: "#/components/schemas/NegativeKeywordListAssignedTargetingOptionDetails"
          description: Keyword details. This field will be populated when the targeting_type is `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`. A maximum of 4 negative keyword lists can be assigned to a resource.
        omidDetails:
          $ref: "#/components/schemas/OmidAssignedTargetingOptionDetails"
          description: Open Measurement enabled inventory details. This field will be populated when the targeting_type is `TARGETING_TYPE_OMID`.
        onScreenPositionDetails:
          $ref: "#/components/schemas/OnScreenPositionAssignedTargetingOptionDetails"
          description: On screen position details. This field will be populated when the targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
        operatingSystemDetails:
          $ref: "#/components/schemas/OperatingSystemAssignedTargetingOptionDetails"
          description: Operating system details. This field will be populated when the targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.
        parentalStatusDetails:
          $ref: "#/components/schemas/ParentalStatusAssignedTargetingOptionDetails"
          description: Parental status details. This field will be populated when the targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.
        poiDetails:
          $ref: "#/components/schemas/PoiAssignedTargetingOptionDetails"
          description: POI details. This field will be populated when the targeting_type is `TARGETING_TYPE_POI`.
        proximityLocationListDetails:
          $ref: "#/components/schemas/ProximityLocationListAssignedTargetingOptionDetails"
          description: Proximity location list details. This field will be populated when the targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.
        regionalLocationListDetails:
          $ref: "#/components/schemas/RegionalLocationListAssignedTargetingOptionDetails"
          description: Regional location list details. This field will be populated when the targeting_type is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.
        sensitiveCategoryExclusionDetails:
          $ref: "#/components/schemas/SensitiveCategoryAssignedTargetingOptionDetails"
          description: Sensitive category details. This field will be populated when the targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`. Sensitive categories are targeting exclusions. Advertiser level sensitive category exclusions, if set, are always applied in serving (even though they aren't visible in resource settings). Resource settings can exclude sensitive categories in addition to advertiser exclusions, but can't override them.
        subExchangeDetails:
          $ref: "#/components/schemas/SubExchangeAssignedTargetingOptionDetails"
          description: Sub-exchange details. This field will be populated when the targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`.
        targetingType:
          description: Output only. Identifies the type of this assigned targeting option.
          enum:
            - TARGETING_TYPE_UNSPECIFIED
            - TARGETING_TYPE_CHANNEL
            - TARGETING_TYPE_APP_CATEGORY
            - TARGETING_TYPE_APP
            - TARGETING_TYPE_URL
            - TARGETING_TYPE_DAY_AND_TIME
            - TARGETING_TYPE_AGE_RANGE
            - TARGETING_TYPE_REGIONAL_LOCATION_LIST
            - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
            - TARGETING_TYPE_GENDER
            - TARGETING_TYPE_VIDEO_PLAYER_SIZE
            - TARGETING_TYPE_USER_REWARDED_CONTENT
            - TARGETING_TYPE_PARENTAL_STATUS
            - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
            - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
            - TARGETING_TYPE_DEVICE_TYPE
            - TARGETING_TYPE_AUDIENCE_GROUP
            - TARGETING_TYPE_BROWSER
            - TARGETING_TYPE_HOUSEHOLD_INCOME
            - TARGETING_TYPE_ON_SCREEN_POSITION
            - TARGETING_TYPE_THIRD_PARTY_VERIFIER
            - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
            - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
            - TARGETING_TYPE_ENVIRONMENT
            - TARGETING_TYPE_CARRIER_AND_ISP
            - TARGETING_TYPE_OPERATING_SYSTEM
            - TARGETING_TYPE_DEVICE_MAKE_MODEL
            - TARGETING_TYPE_KEYWORD
            - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
            - TARGETING_TYPE_VIEWABILITY
            - TARGETING_TYPE_CATEGORY
            - TARGETING_TYPE_INVENTORY_SOURCE
            - TARGETING_TYPE_LANGUAGE
            - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
            - TARGETING_TYPE_GEO_REGION
            - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
            - TARGETING_TYPE_EXCHANGE
            - TARGETING_TYPE_SUB_EXCHANGE
            - TARGETING_TYPE_POI
            - TARGETING_TYPE_BUSINESS_CHAIN
            - TARGETING_TYPE_CONTENT_DURATION
            - TARGETING_TYPE_CONTENT_STREAM_TYPE
            - TARGETING_TYPE_NATIVE_CONTENT_POSITION
            - TARGETING_TYPE_OMID
            - TARGETING_TYPE_AUDIO_CONTENT_TYPE
            - TARGETING_TYPE_CONTENT_GENRE
          readOnly: true
          type: string
        thirdPartyVerifierDetails:
          $ref: "#/components/schemas/ThirdPartyVerifierAssignedTargetingOptionDetails"
          description: Third party verification details. This field will be populated when the targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`.
        urlDetails:
          $ref: "#/components/schemas/UrlAssignedTargetingOptionDetails"
          description: URL details. This field will be populated when the targeting_type is `TARGETING_TYPE_URL`.
        userRewardedContentDetails:
          $ref: "#/components/schemas/UserRewardedContentAssignedTargetingOptionDetails"
          description: User rewarded content details. This field will be populated when the targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.
        videoPlayerSizeDetails:
          $ref: "#/components/schemas/VideoPlayerSizeAssignedTargetingOptionDetails"
          description: Video player size details. This field will be populated when the targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.
        viewabilityDetails:
          $ref: "#/components/schemas/ViewabilityAssignedTargetingOptionDetails"
          description: Viewability details. This field will be populated when the targeting_type is `TARGETING_TYPE_VIEWABILITY`. You can only target one viewability option per resource.
      type: object
    AssignedUserRole:
      description: A single assigned user role, which defines a user's authorized interaction with a specified partner or advertiser.
      properties:
        advertiserId:
          description: The ID of the advertiser that the assigend user role applies to.
          format: int64
          type: string
        assignedUserRoleId:
          description: Output only. The ID of the assigned user role.
          readOnly: true
          type: string
        partnerId:
          description: The ID of the partner that the assigned user role applies to.
          format: int64
          type: string
        userRole:
          description: Required. The user role to assign to a user for the entity.
          enum:
            - USER_ROLE_UNSPECIFIED
            - ADMIN
            - ADMIN_PARTNER_CLIENT
            - STANDARD
            - STANDARD_PLANNER
            - STANDARD_PLANNER_LIMITED
            - STANDARD_PARTNER_CLIENT
            - READ_ONLY
            - REPORTING_ONLY
            - LIMITED_REPORTING_ONLY
            - CREATIVE
            - CREATIVE_ADMIN
          type: string
      type: object
    AudienceGroupAssignedTargetingOptionDetails:
      description: Assigned audience group targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AUDIENCE_GROUP`. The relation between each group is UNION, except for excluded_first_and_third_party_audience_group and excluded_google_audience_group, of which COMPLEMENT is used as an INTERSECTION with other groups.
      properties:
        excludedFirstAndThirdPartyAudienceGroup:
          $ref: "#/components/schemas/FirstAndThirdPartyAudienceGroup"
          description: The first and third party audience ids and recencies of the excluded first and third party audience group. Used for negative targeting. The COMPLEMENT of the UNION of this group and other excluded audience groups is used as an INTERSECTION to any positive audience targeting. All items are logically ‘OR’ of each other.
        excludedGoogleAudienceGroup:
          $ref: "#/components/schemas/GoogleAudienceGroup"
          description: The Google audience ids of the excluded Google audience group. Used for negative targeting. The COMPLEMENT of the UNION of this group and other excluded audience groups is used as an INTERSECTION to any positive audience targeting. Only contains Affinity, In-market and Installed-apps type Google audiences. All items are logically ‘OR’ of each other.
        includedCombinedAudienceGroup:
          $ref: "#/components/schemas/CombinedAudienceGroup"
          description: The combined audience ids of the included combined audience group. Contains combined audience ids only.
        includedCustomListGroup:
          $ref: "#/components/schemas/CustomListGroup"
          description: The custom list ids of the included custom list group. Contains custom list ids only.
        includedFirstAndThirdPartyAudienceGroups:
          description: The first and third party audience ids and recencies of included first and third party audience groups. Each first and third party audience group contains first and third party audience ids only. The relation between each first and third party audience group is INTERSECTION, and the result is UNION'ed with other audience groups. Repeated groups with same settings will be ignored.
          items:
            $ref: "#/components/schemas/FirstAndThirdPartyAudienceGroup"
          type: array
        includedGoogleAudienceGroup:
          $ref: "#/components/schemas/GoogleAudienceGroup"
          description: The Google audience ids of the included Google audience group. Contains Google audience ids only.
      type: object
    AudioContentTypeAssignedTargetingOptionDetails:
      description: Details for audio content type assigned targeting option. This will be populated in the audio_content_type_details field when targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`. Explicitly targeting all options is not supported. Remove all audio content type targeting options to achieve this effect.
      properties:
        audioContentType:
          description: The audio content type. Output only in v1. Required in v2.
          enum:
            - AUDIO_CONTENT_TYPE_UNSPECIFIED
            - AUDIO_CONTENT_TYPE_UNKNOWN
            - AUDIO_CONTENT_TYPE_MUSIC
            - AUDIO_CONTENT_TYPE_BROADCAST
            - AUDIO_CONTENT_TYPE_PODCAST
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.
          type: string
      type: object
    AudioContentTypeTargetingOptionDetails:
      description: Represents a targetable audio content type. This will be populated in the audio_content_type_details field when targeting_type is `TARGETING_TYPE_AUDIO_CONTENT_TYPE`.
      properties:
        audioContentType:
          description: Output only. The audio content type.
          enum:
            - AUDIO_CONTENT_TYPE_UNSPECIFIED
            - AUDIO_CONTENT_TYPE_UNKNOWN
            - AUDIO_CONTENT_TYPE_MUSIC
            - AUDIO_CONTENT_TYPE_BROADCAST
            - AUDIO_CONTENT_TYPE_PODCAST
          readOnly: true
          type: string
      type: object
    AudioVideoOffset:
      description: The length an audio or a video has been played.
      properties:
        percentage:
          description: The offset in percentage of the audio or video duration.
          format: int64
          type: string
        seconds:
          description: The offset in seconds from the start of the audio or video.
          format: int64
          type: string
      type: object
    AuditAdvertiserResponse:
      description: Response message for AdvertiserService.AuditAdvertiser.
      properties:
        adGroupCriteriaCount:
          description: "The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 4500000 ad group targeting options per advertiser. Qualifying Targeting types: * Channels, URLs, apps, and collections * Demographic * Google Audiences, including Affinity, Custom Affinity, and In-market audiences * Inventory source * Keyword * Mobile app category * User lists * Video targeting * Viewability"
          format: int64
          type: string
        campaignCriteriaCount:
          description: "The number of individual targeting options from the following targeting types that are assigned to a line item under this advertiser. These individual targeting options count towards the limit of 900000 campaign targeting options per advertiser. Qualifying Targeting types: * Position * Browser * Connection speed * Day and time * Device and operating system * Digital content label * Sensitive categories * Environment * Geography, including business chains and proximity * ISP * Language * Third-party verification"
          format: int64
          type: string
        channelsCount:
          description: The number of channels created under this advertiser. These channels count towards the limit of 1000 channels per advertiser.
          format: int64
          type: string
        negativeKeywordListsCount:
          description: The number of negative keyword lists created under this advertiser. These negative keyword lists count towards the limit of 20 negative keyword lists per advertiser.
          format: int64
          type: string
        negativelyTargetedChannelsCount:
          description: The number of negatively targeted channels created under this advertiser. These negatively targeted channels count towards the limit of 5 negatively targeted channels per advertiser.
          format: int64
          type: string
        usedCampaignsCount:
          description: The number of ACTIVE and PAUSED campaigns under this advertiser. These campaigns count towards the limit of 9999 campaigns per advertiser.
          format: int64
          type: string
        usedInsertionOrdersCount:
          description: The number of ACTIVE, PAUSED and DRAFT insertion orders under this advertiser. These insertion orders count towards the limit of 9999 insertion orders per advertiser.
          format: int64
          type: string
        usedLineItemsCount:
          description: The number of ACTIVE, PAUSED, and DRAFT line items under this advertiser. These line items count towards the limit of 9999 line items per advertiser.
          format: int64
          type: string
      type: object
    AuthorizedSellerStatusAssignedTargetingOptionDetails:
      description: Represents an assigned authorized seller status. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.
      properties:
        authorizedSellerStatus:
          description: Output only. The authorized seller status to target.
          enum:
            - AUTHORIZED_SELLER_STATUS_UNSPECIFIED
            - AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY
            - AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS
          readOnly: true
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.
          type: string
      type: object
    AuthorizedSellerStatusTargetingOptionDetails:
      description: Represents a targetable authorized seller status. This will be populated in the authorized_seller_status_details field when targeting_type is `TARGETING_TYPE_AUTHORIZED_SELLER_STATUS`.
      properties:
        authorizedSellerStatus:
          description: Output only. The authorized seller status.
          enum:
            - AUTHORIZED_SELLER_STATUS_UNSPECIFIED
            - AUTHORIZED_SELLER_STATUS_AUTHORIZED_DIRECT_SELLERS_ONLY
            - AUTHORIZED_SELLER_STATUS_AUTHORIZED_AND_NON_PARTICIPATING_PUBLISHERS
          readOnly: true
          type: string
      type: object
    BiddingStrategy:
      description: Settings that control the bid strategy. Bid strategy determines the bid price.
      properties:
        fixedBid:
          $ref: "#/components/schemas/FixedBidStrategy"
          description: A strategy that uses a fixed bid price.
        maximizeSpendAutoBid:
          $ref: "#/components/schemas/MaximizeSpendBidStrategy"
          description: "A strategy that automatically adjusts the bid to optimize to your performance goal while spending the full budget. At insertion order level, the markup_type of line items cannot be set to `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`. In addition, when performance_goal_type is one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED` , the line_item_type of the insertion order line items must be either: * `LINE_ITEM_TYPE_DISPLAY_DEFAULT` * `LINE_ITEM_TYPE_VIDEO_DEFAULT` , and when performance_goal_type is either: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN` the line_item_type of the insertion order line items must be `LINE_ITEM_TYPE_VIDEO_DEFAULT`."
        performanceGoalAutoBid:
          $ref: "#/components/schemas/PerformanceGoalBidStrategy"
          description: A strategy that automatically adjusts the bid to meet or beat a specified performance goal. It is to be used only for a line item entity.
      type: object
    BrowserAssignedTargetingOptionDetails:
      description: Details for assigned browser targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_BROWSER`.
      properties:
        displayName:
          description: Output only. The display name of the browser.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted. All assigned browser targeting options on the same resource must have the same value for this field.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BROWSER`.
          type: string
      type: object
    BrowserTargetingOptionDetails:
      description: Represents a targetable browser. This will be populated in the browser_details field when targeting_type is `TARGETING_TYPE_BROWSER`.
      properties:
        displayName:
          description: Output only. The display name of the browser.
          readOnly: true
          type: string
      type: object
    BudgetSummary:
      description: Summarized information of an individual campaign budget.
      properties:
        externalBudgetId:
          description: Corresponds to the external_budget_id of a campaign budget. If the value is not set in the campaign budget, this field will be empty.
          type: string
        preTaxAmountMicros:
          description: The sum of charges made under this budget before taxes, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
        prismaCpeCode:
          $ref: "#/components/schemas/PrismaCpeCode"
          description: Relevant client, product, and estimate codes from the Mediaocean Prisma tool. Only applicable for campaign budgets with an external_budget_source of EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN.
        taxAmountMicros:
          description: The amount of tax applied to charges under this budget, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
        totalAmountMicros:
          description: The total sum of charges made under this budget, including tax, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
      type: object
    BulkEditAdvertiserAssignedTargetingOptionsRequest:
      description: Request message for BulkEditAdvertiserAssignedTargetingOptions.
      properties:
        createRequests:
          description: "The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
          items:
            $ref: "#/components/schemas/CreateAssignedTargetingOptionsRequest"
          type: array
        deleteRequests:
          description: "The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL` * `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION` * `TARGETING_TYPE_OMID` * `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`"
          items:
            $ref: "#/components/schemas/DeleteAssignedTargetingOptionsRequest"
          type: array
      type: object
    BulkEditAdvertiserAssignedTargetingOptionsResponse:
      properties:
        createdAssignedTargetingOptions:
          description: The list of assigned targeting options that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
      type: object
    BulkEditAssignedInventorySourcesRequest:
      description: Request message for AssignedInventorySourceService.BulkEdit.
      properties:
        advertiserId:
          description: The ID of the advertiser that owns the parent inventory source group. The parent partner does not have access to these assigned inventory sources.
          format: int64
          type: string
        createdAssignedInventorySources:
          description: The assigned inventory sources to create in bulk, specified as a list of AssignedInventorySources.
          items:
            $ref: "#/components/schemas/AssignedInventorySource"
          type: array
        deletedAssignedInventorySources:
          description: The IDs of the assigned inventory sources to delete in bulk, specified as a list of assigned_inventory_source_ids.
          items:
            format: int64
            type: string
          type: array
        partnerId:
          description: The ID of the partner that owns the inventory source group. Only this partner has write access to these assigned inventory sources.
          format: int64
          type: string
      type: object
    BulkEditAssignedInventorySourcesResponse:
      description: Response message for AssignedInventorySourceService.BulkEdit.
      properties:
        assignedInventorySources:
          description: The list of assigned inventory sources that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedInventorySource"
          type: array
      type: object
    BulkEditAssignedLocationsRequest:
      description: Request message for AssignedLocationService.BulkEditAssignedLocations.
      properties:
        createdAssignedLocations:
          description: The assigned locations to create in bulk, specified as a list of AssignedLocations.
          items:
            $ref: "#/components/schemas/AssignedLocation"
          type: array
        deletedAssignedLocations:
          description: The IDs of the assigned locations to delete in bulk, specified as a list of assigned_location_ids.
          items:
            format: int64
            type: string
          type: array
      type: object
    BulkEditAssignedLocationsResponse:
      description: Response message for AssignedLocationService.BulkEditAssignedLocations.
      properties:
        assignedLocations:
          description: The list of assigned locations that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedLocation"
          type: array
      type: object
    BulkEditAssignedUserRolesRequest:
      description: Request message for BulkEditAssignedUserRoles.
      properties:
        createdAssignedUserRoles:
          description: The assigned user roles to create in batch, specified as a list of AssignedUserRoles.
          items:
            $ref: "#/components/schemas/AssignedUserRole"
          type: array
        deletedAssignedUserRoles:
          description: The assigned user roles to delete in batch, specified as a list of assigned_user_role_ids. The format of assigned_user_role_id is `entityType-entityid`, for example `partner-123`.
          items:
            type: string
          type: array
      type: object
    BulkEditAssignedUserRolesResponse:
      properties:
        createdAssignedUserRoles:
          description: The list of assigned user roles that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedUserRole"
          type: array
      type: object
    BulkEditLineItemAssignedTargetingOptionsRequest:
      description: Request message for BulkEditLineItemAssignedTargetingOptions.
      properties:
        createRequests:
          description: The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`.
          items:
            $ref: "#/components/schemas/CreateAssignedTargetingOptionsRequest"
          type: array
        deleteRequests:
          description: The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`.
          items:
            $ref: "#/components/schemas/DeleteAssignedTargetingOptionsRequest"
          type: array
      type: object
    BulkEditLineItemAssignedTargetingOptionsResponse:
      properties:
        createdAssignedTargetingOptions:
          description: The list of assigned targeting options that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
      type: object
    BulkEditNegativeKeywordsRequest:
      description: Request message for NegativeKeywordService.BulkEditNegativeKeywords.
      properties:
        createdNegativeKeywords:
          description: The negative keywords to create in batch, specified as a list of NegativeKeywords.
          items:
            $ref: "#/components/schemas/NegativeKeyword"
          type: array
        deletedNegativeKeywords:
          description: The negative keywords to delete in batch, specified as a list of keyword_values.
          items:
            type: string
          type: array
      type: object
    BulkEditNegativeKeywordsResponse:
      description: Response message for NegativeKeywordService.BulkEditNegativeKeywords.
      properties:
        negativeKeywords:
          description: The list of negative keywords that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/NegativeKeyword"
          type: array
      type: object
    BulkEditPartnerAssignedTargetingOptionsRequest:
      description: Request message for BulkEditPartnerAssignedTargetingOptions.
      properties:
        createRequests:
          description: "The assigned targeting options to create in batch, specified as a list of `CreateAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
          items:
            $ref: "#/components/schemas/CreateAssignedTargetingOptionsRequest"
          type: array
        deleteRequests:
          description: "The assigned targeting options to delete in batch, specified as a list of `DeleteAssignedTargetingOptionsRequest`. Supported targeting types: * `TARGETING_TYPE_CHANNEL`"
          items:
            $ref: "#/components/schemas/DeleteAssignedTargetingOptionsRequest"
          type: array
      type: object
    BulkEditPartnerAssignedTargetingOptionsResponse:
      properties:
        createdAssignedTargetingOptions:
          description: The list of assigned targeting options that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
      type: object
    BulkEditSitesRequest:
      description: Request message for SiteService.BulkEditSites.
      properties:
        advertiserId:
          description: The ID of the advertiser that owns the parent channel.
          format: int64
          type: string
        createdSites:
          description: The sites to create in batch, specified as a list of Sites.
          items:
            $ref: "#/components/schemas/Site"
          type: array
        deletedSites:
          description: The sites to delete in batch, specified as a list of site url_or_app_ids.
          items:
            type: string
          type: array
        partnerId:
          description: The ID of the partner that owns the parent channel.
          format: int64
          type: string
      type: object
    BulkEditSitesResponse:
      description: Response message for SiteService.BulkEditSites.
      properties:
        sites:
          description: The list of sites that have been successfully created. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Site"
          type: array
      type: object
    BulkListAdvertiserAssignedTargetingOptionsResponse:
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    BulkListCampaignAssignedTargetingOptionsResponse:
      description: Response message for BulkListCampaignAssignedTargetingOptions.
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListCampaignAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    BulkListInsertionOrderAssignedTargetingOptionsResponse:
      description: Response message for BulkListInsertionOrderAssignedTargetingOptions.
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    BulkListLineItemAssignedTargetingOptionsResponse:
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent BulkListLineItemAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    BusinessChainAssignedTargetingOptionDetails:
      description: Details for assigned Business chain targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.
      properties:
        displayName:
          description: Output only. The display name of a business chain, e.g. "KFC", "Chase Bank".
          readOnly: true
          type: string
        proximityRadiusAmount:
          description: Required. The radius of the area around the business chain that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`. The minimum increment for both cases is 0.1. Inputs will be rounded to the nearest acceptable value if it is too granular, e.g. 15.57 will become 15.6.
          format: double
          type: number
        proximityRadiusUnit:
          description: Required. The unit of distance by which the targeting radius is measured.
          enum:
            - DISTANCE_UNIT_UNSPECIFIED
            - DISTANCE_UNIT_MILES
            - DISTANCE_UNIT_KILOMETERS
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_BUSINESS_CHAIN`. Accepted business chain targeting option IDs can be retrieved using SearchTargetingOptions.
          type: string
      type: object
    BusinessChainSearchTerms:
      description: Search terms for Business Chain targeting options. At least one of the field should be populated.
      properties:
        businessChainQuery:
          description: The search query for the desired business chain. The query must be the full name of the business, e.g. "KFC", "mercedes-benz".
          type: string
        regionQuery:
          description: The search query for the desired geo region, e.g. "Seattle", "United State".
          type: string
      type: object
    BusinessChainTargetingOptionDetails:
      description: Represents a targetable business chain within a geo region. This will be populated in the business_chain_details field when targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.
      properties:
        businessChain:
          description: Output only. The display name of the business chain, e.g. "KFC", "Chase Bank".
          readOnly: true
          type: string
        geoRegion:
          description: Output only. The display name of the geographic region, e.g. "Ontario, Canada".
          readOnly: true
          type: string
        geoRegionType:
          description: Output only. The type of the geographic region.
          enum:
            - GEO_REGION_TYPE_UNKNOWN
            - GEO_REGION_TYPE_OTHER
            - GEO_REGION_TYPE_COUNTRY
            - GEO_REGION_TYPE_REGION
            - GEO_REGION_TYPE_TERRITORY
            - GEO_REGION_TYPE_PROVINCE
            - GEO_REGION_TYPE_STATE
            - GEO_REGION_TYPE_PREFECTURE
            - GEO_REGION_TYPE_GOVERNORATE
            - GEO_REGION_TYPE_CANTON
            - GEO_REGION_TYPE_UNION_TERRITORY
            - GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY
            - GEO_REGION_TYPE_DMA_REGION
            - GEO_REGION_TYPE_METRO
            - GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT
            - GEO_REGION_TYPE_COUNTY
            - GEO_REGION_TYPE_MUNICIPALITY
            - GEO_REGION_TYPE_CITY
            - GEO_REGION_TYPE_POSTAL_CODE
            - GEO_REGION_TYPE_DEPARTMENT
            - GEO_REGION_TYPE_AIRPORT
            - GEO_REGION_TYPE_TV_REGION
            - GEO_REGION_TYPE_OKRUG
            - GEO_REGION_TYPE_BOROUGH
            - GEO_REGION_TYPE_CITY_REGION
            - GEO_REGION_TYPE_ARRONDISSEMENT
            - GEO_REGION_TYPE_NEIGHBORHOOD
            - GEO_REGION_TYPE_UNIVERSITY
            - GEO_REGION_TYPE_DISTRICT
          readOnly: true
          type: string
      type: object
    Campaign:
      description: A single campaign.
      properties:
        advertiserId:
          description: Output only. The unique ID of the advertiser the campaign belongs to.
          format: int64
          readOnly: true
          type: string
        campaignBudgets:
          description: The list of budgets available to this campaign. If this field is not set, the campaign uses an unlimited budget.
          items:
            $ref: "#/components/schemas/CampaignBudget"
          type: array
        campaignFlight:
          $ref: "#/components/schemas/CampaignFlight"
          description: Required. The planned spend and duration of the campaign.
        campaignGoal:
          $ref: "#/components/schemas/CampaignGoal"
          description: Required. The goal of the campaign.
        campaignId:
          description: Output only. The unique ID of the campaign. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the campaign. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        entityStatus:
          description: Required. Controls whether or not the insertion orders under this campaign can spend their budgets and bid on inventory. * Accepted values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. * For CreateCampaign method, `ENTITY_STATUS_ARCHIVED` is not allowed.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        frequencyCap:
          $ref: "#/components/schemas/FrequencyCap"
          description: Required. The frequency cap setting of the campaign.
        name:
          description: Output only. The resource name of the campaign.
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the campaign was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    CampaignBudget:
      description: Settings that control how the campaign budget is allocated.
      properties:
        budgetAmountMicros:
          description: Required. The total amount the linked insertion order segments can budget. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.
          format: int64
          type: string
        budgetId:
          description: The unique ID of the campaign budget. Assigned by the system. Do not set for new budgets. Must be included when updating or adding budgets to campaign_budgets. Otherwise, a new ID will be generated and assigned.
          format: int64
          type: string
        budgetUnit:
          description: Required. Immutable. Specifies whether the budget is measured in currency or impressions.
          enum:
            - BUDGET_UNIT_UNSPECIFIED
            - BUDGET_UNIT_CURRENCY
            - BUDGET_UNIT_IMPRESSIONS
          type: string
        dateRange:
          $ref: "#/components/schemas/DateRange"
          description: Required. The date range for the campaign budget. Linked budget segments may have a different date range. They are resolved relative to the parent advertiser's time zone. Both `start_date` and `end_date` must be before the year 2037.
        displayName:
          description: Required. The display name of the budget. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        externalBudgetId:
          description: Immutable. The ID identifying this budget to the external source. If this field is set and the invoice detail level of the corresponding billing profile is set to "Budget level PO", all impressions served against this budget will include this ID on the invoice. Must be unique under the campaign.
          type: string
        externalBudgetSource:
          description: Required. The external source of the budget.
          enum:
            - EXTERNAL_BUDGET_SOURCE_UNSPECIFIED
            - EXTERNAL_BUDGET_SOURCE_NONE
            - EXTERNAL_BUDGET_SOURCE_MEDIA_OCEAN
          type: string
        invoiceGroupingId:
          description: Immutable. The ID used to group budgets to be included the same invoice. If this field is set and the invoice level of the corresponding billing profile is set to "Budget invoice grouping ID", all external_budget_id sharing the same invoice_grouping_id will be grouped in the same invoice.
          type: string
        prismaConfig:
          $ref: "#/components/schemas/PrismaConfig"
          description: Additional metadata for use by the Mediaocean Prisma tool. Required for Mediaocean budgets. Only applicable to prisma_enabled advertisers.
      type: object
    CampaignFlight:
      description: Settings that track the planned spend and duration of a campaign.
      properties:
        plannedDates:
          $ref: "#/components/schemas/DateRange"
          description: Required. The dates that the campaign is expected to run. They are resolved relative to the parent advertiser's time zone. * The dates specified here will not affect serving. They are used to generate alerts and warnings. For example, if the flight date of any child insertion order is outside the range of these dates, the user interface will show a warning. * `start_date` is required and must be the current date or later. * `end_date` is optional. If specified, it must be the `start_date` or later. * Any specified date must be before the year 2037.
        plannedSpendAmountMicros:
          description: The amount the campaign is expected to spend for its given planned_dates. This will not limit serving, but will be used for tracking spend in the DV360 UI. The amount is in micros. Must be greater than or equal to 0. For example, 500000000 represents 500 standard units of the currency.
          format: int64
          type: string
      type: object
    CampaignGoal:
      description: Settings that control the goal of a campaign.
      properties:
        campaignGoalType:
          description: Required. The type of the campaign goal.
          enum:
            - CAMPAIGN_GOAL_TYPE_UNSPECIFIED
            - CAMPAIGN_GOAL_TYPE_APP_INSTALL
            - CAMPAIGN_GOAL_TYPE_BRAND_AWARENESS
            - CAMPAIGN_GOAL_TYPE_OFFLINE_ACTION
            - CAMPAIGN_GOAL_TYPE_ONLINE_ACTION
          type: string
        performanceGoal:
          $ref: "#/components/schemas/PerformanceGoal"
          description: "Required. The performance goal of the campaign. Acceptable values for performance_goal_type are: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_OTHER`"
      type: object
    CarrierAndIspAssignedTargetingOptionDetails:
      description: Details for assigned carrier and ISP targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.
      properties:
        displayName:
          description: Output only. The display name of the carrier or ISP.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted. All assigned carrier and ISP targeting options on the same resource must have the same value for this field.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_CARRIER_AND_ISP`.
          type: string
      type: object
    CarrierAndIspTargetingOptionDetails:
      description: Represents a targetable carrier or ISP. This will be populated in the carrier_and_isp_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CARRIER_AND_ISP`.
      properties:
        displayName:
          description: Output only. The display name of the carrier or ISP.
          readOnly: true
          type: string
        type:
          description: Output only. The type indicating if it's carrier or ISP.
          enum:
            - CARRIER_AND_ISP_TYPE_UNSPECIFIED
            - CARRIER_AND_ISP_TYPE_ISP
            - CARRIER_AND_ISP_TYPE_CARRIER
          readOnly: true
          type: string
      type: object
    CategoryAssignedTargetingOptionDetails:
      description: Assigned category targeting option details. This will be populated in the category_details field when targeting_type is `TARGETING_TYPE_CATEGORY`.
      properties:
        displayName:
          description: Output only. The display name of the category.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CATEGORY`.
          type: string
      type: object
    CategoryTargetingOptionDetails:
      description: Represents a targetable category. This will be populated in the category_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_CATEGORY`.
      properties:
        displayName:
          description: Output only. The display name of the category.
          readOnly: true
          type: string
      type: object
    Channel:
      description: A single channel. Channels are custom groups of related websites and apps.
      properties:
        advertiserId:
          description: The ID of the advertiser that owns the channel.
          format: int64
          type: string
        channelId:
          description: Output only. The unique ID of the channel. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the channel. Must be UTF-8 encoded with a maximum length of 240 bytes.
          type: string
        name:
          description: Output only. The resource name of the channel.
          readOnly: true
          type: string
        negativelyTargetedLineItemCount:
          description: Output only. Number of line items that are directly targeting this channel negatively.
          format: int64
          readOnly: true
          type: string
        partnerId:
          description: The ID of the partner that owns the channel.
          format: int64
          type: string
        positivelyTargetedLineItemCount:
          description: Output only. Number of line items that are directly targeting this channel positively.
          format: int64
          readOnly: true
          type: string
      type: object
    ChannelAssignedTargetingOptionDetails:
      description: Details for assigned channel targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_CHANNEL`.
      properties:
        channelId:
          description: Required. ID of the channel. Should refer to the channel ID field on a [Partner-owned channel](partners.channels#Channel.FIELDS.channel_id) or [advertiser-owned channel](advertisers.channels#Channel.FIELDS.channel_id) resource.
          format: int64
          type: string
        negative:
          description: Indicates if this option is being negatively targeted. For advertiser level assigned targeting option, this field must be true.
          type: boolean
      type: object
    CmHybridConfig:
      description: Settings for advertisers that use both Campaign Manager 360 (CM360) and third-party ad servers.
      properties:
        cmAccountId:
          description: Required. Immutable. Account ID of the CM360 Floodlight configuration linked with the DV360 advertiser.
          format: int64
          type: string
        cmFloodlightConfigId:
          description: Required. Immutable. ID of the CM360 Floodlight configuration linked with the DV360 advertiser.
          format: int64
          type: string
        cmFloodlightLinkingAuthorized:
          description: Required. Immutable. By setting this field to `true`, you, on behalf of your company, authorize the sharing of information from the given Floodlight configuration to this Display & Video 360 advertiser.
          type: boolean
        cmSyncableSiteIds:
          description: A list of CM360 sites whose placements will be synced to DV360 as creatives. If absent or empty in CreateAdvertiser method, the system will automatically create a CM360 site. Removing sites from this list may cause DV360 creatives synced from CM360 to be deleted. At least one site must be specified.
          items:
            format: int64
            type: string
          type: array
        dv360ToCmCostReportingEnabled:
          description: Whether or not to report DV360 cost to CM360.
          type: boolean
        dv360ToCmDataSharingEnabled:
          description: Whether or not to include DV360 data in CM360 data transfer reports.
          type: boolean
      type: object
    CmTrackingAd:
      description: A Campaign Manager 360 tracking ad.
      properties:
        cmAdId:
          description: The ad ID of the campaign manager 360 tracking Ad.
          format: int64
          type: string
        cmCreativeId:
          description: The creative ID of the campaign manager 360 tracking Ad.
          format: int64
          type: string
        cmPlacementId:
          description: The placement ID of the campaign manager 360 tracking Ad.
          format: int64
          type: string
      type: object
    CombinedAudience:
      description: Describes a combined audience resource.
      properties:
        combinedAudienceId:
          description: Output only. The unique ID of the combined audience. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: Output only. The display name of the combined audience. .
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the combined audience.
          readOnly: true
          type: string
      type: object
    CombinedAudienceGroup:
      description: Details of combined audience group. All combined audience targeting settings are logically ‘OR’ of each other.
      properties:
        settings:
          description: Required. All combined audience targeting settings in combined audience group. Repeated settings with same id will be ignored. The number of combined audience settings should be no more than five, error will be thrown otherwise.
          items:
            $ref: "#/components/schemas/CombinedAudienceTargetingSetting"
          type: array
      type: object
    CombinedAudienceTargetingSetting:
      description: Details of combined audience targeting setting.
      properties:
        combinedAudienceId:
          description: Required. Combined audience id of combined audience targeting setting. This id is combined_audience_id.
          format: int64
          type: string
      type: object
    ContactInfo:
      description: Contact information defining a Customer Match audience member.
      properties:
        countryCode:
          description: "Country code of the member. Must also be set with the following fields: * hashed_first_name * hashed_last_name * zip_codes"
          type: string
        hashedEmails:
          description: A list of SHA256 hashed email of the member. Before hashing, remove all whitespace and make sure the string is all lowercase.
          items:
            type: string
          type: array
        hashedFirstName:
          description: "SHA256 hashed first name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_last_name * zip_codes"
          type: string
        hashedLastName:
          description: "SHA256 hashed last name of the member. Before hashing, remove all whitespace and make sure the string is all lowercase. Must also be set with the following fields: * country_code * hashed_first_name * zip_codes"
          type: string
        hashedPhoneNumbers:
          description: A list of SHA256 hashed phone numbers of the member. Before hashing, all phone numbers must be formatted using the [E.164 format](//en.wikipedia.org/wiki/E.164) and include the country calling code.
          items:
            type: string
          type: array
        zipCodes:
          description: "A list of zip codes of the member. Must also be set with the following fields: * country_code * hashed_first_name * hashed_last_name"
          items:
            type: string
          type: array
      type: object
    ContactInfoList:
      description: Wrapper message for a list of contact information defining Customer Match audience members.
      properties:
        contactInfos:
          description: A list of ContactInfo objects defining Customer Match audience members. The size of members after splitting the contact_infos mustn't be greater than 500,000.
          items:
            $ref: "#/components/schemas/ContactInfo"
          type: array
      type: object
    ContentDurationAssignedTargetingOptionDetails:
      description: Details for content duration assigned targeting option. This will be populated in the content_duration_details field when targeting_type is `TARGETING_TYPE_CONTENT_DURATION`. Explicitly targeting all options is not supported. Remove all content duration targeting options to achieve this effect.
      properties:
        contentDuration:
          description: Output only. The content duration.
          enum:
            - CONTENT_DURATION_UNSPECIFIED
            - CONTENT_DURATION_UNKNOWN
            - CONTENT_DURATION_0_TO_1_MIN
            - CONTENT_DURATION_1_TO_5_MIN
            - CONTENT_DURATION_5_TO_15_MIN
            - CONTENT_DURATION_15_TO_30_MIN
            - CONTENT_DURATION_30_TO_60_MIN
            - CONTENT_DURATION_OVER_60_MIN
          readOnly: true
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_DURATION`.
          type: string
      type: object
    ContentDurationTargetingOptionDetails:
      description: Represents a targetable content duration. This will be populated in the content_duration_details field when targeting_type is `TARGETING_TYPE_CONTENT_DURATION`.
      properties:
        contentDuration:
          description: Output only. The content duration.
          enum:
            - CONTENT_DURATION_UNSPECIFIED
            - CONTENT_DURATION_UNKNOWN
            - CONTENT_DURATION_0_TO_1_MIN
            - CONTENT_DURATION_1_TO_5_MIN
            - CONTENT_DURATION_5_TO_15_MIN
            - CONTENT_DURATION_15_TO_30_MIN
            - CONTENT_DURATION_30_TO_60_MIN
            - CONTENT_DURATION_OVER_60_MIN
          readOnly: true
          type: string
      type: object
    ContentGenreAssignedTargetingOptionDetails:
      description: Details for content genre assigned targeting option. This will be populated in the content_genre_details field when targeting_type is `TARGETING_TYPE_CONTENT_GENRE`. Explicitly targeting all options is not supported. Remove all content genre targeting options to achieve this effect.
      properties:
        displayName:
          description: Output only. The display name of the content genre.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_GENRE`.
          type: string
      type: object
    ContentGenreTargetingOptionDetails:
      description: Represents a targetable content genre. This will be populated in the content_genre_details field when targeting_type is `TARGETING_TYPE_CONTENT_GENRE`.
      properties:
        displayName:
          description: Output only. The display name of the content genre
          readOnly: true
          type: string
      type: object
    ContentInstreamPositionAssignedTargetingOptionDetails:
      description: Assigned content instream position targeting option details. This will be populated in the content_instream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
      properties:
        adType:
          description: "Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`. * `AD_TYPE_AUDIO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_AUDIO_DEFAULT`."
          enum:
            - AD_TYPE_UNSPECIFIED
            - AD_TYPE_DISPLAY
            - AD_TYPE_VIDEO
            - AD_TYPE_AUDIO
          readOnly: true
          type: string
        contentInstreamPosition:
          description: The content instream position for video or audio ads. Output only in v1. Required in v2.
          enum:
            - CONTENT_INSTREAM_POSITION_UNSPECIFIED
            - CONTENT_INSTREAM_POSITION_PRE_ROLL
            - CONTENT_INSTREAM_POSITION_MID_ROLL
            - CONTENT_INSTREAM_POSITION_POST_ROLL
            - CONTENT_INSTREAM_POSITION_UNKNOWN
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
          type: string
      type: object
    ContentInstreamPositionTargetingOptionDetails:
      description: Represents a targetable content instream position, which could be used by video and audio ads. This will be populated in the content_instream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_INSTREAM_POSITION`.
      properties:
        contentInstreamPosition:
          description: Output only. The content instream position.
          enum:
            - CONTENT_INSTREAM_POSITION_UNSPECIFIED
            - CONTENT_INSTREAM_POSITION_PRE_ROLL
            - CONTENT_INSTREAM_POSITION_MID_ROLL
            - CONTENT_INSTREAM_POSITION_POST_ROLL
            - CONTENT_INSTREAM_POSITION_UNKNOWN
          readOnly: true
          type: string
      type: object
    ContentOutstreamPositionAssignedTargetingOptionDetails:
      description: Assigned content outstream position targeting option details. This will be populated in the content_outstream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
      properties:
        adType:
          description: "Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`."
          enum:
            - AD_TYPE_UNSPECIFIED
            - AD_TYPE_DISPLAY
            - AD_TYPE_VIDEO
            - AD_TYPE_AUDIO
          readOnly: true
          type: string
        contentOutstreamPosition:
          description: The content outstream position. Output only in v1. Required in v2.
          enum:
            - CONTENT_OUTSTREAM_POSITION_UNSPECIFIED
            - CONTENT_OUTSTREAM_POSITION_UNKNOWN
            - CONTENT_OUTSTREAM_POSITION_IN_ARTICLE
            - CONTENT_OUTSTREAM_POSITION_IN_BANNER
            - CONTENT_OUTSTREAM_POSITION_IN_FEED
            - CONTENT_OUTSTREAM_POSITION_INTERSTITIAL
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
          type: string
      type: object
    ContentOutstreamPositionTargetingOptionDetails:
      description: Represents a targetable content outstream position, which could be used by display and video ads. This will be populated in the content_outstream_position_details field when targeting_type is `TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION`.
      properties:
        contentOutstreamPosition:
          description: Output only. The content outstream position.
          enum:
            - CONTENT_OUTSTREAM_POSITION_UNSPECIFIED
            - CONTENT_OUTSTREAM_POSITION_UNKNOWN
            - CONTENT_OUTSTREAM_POSITION_IN_ARTICLE
            - CONTENT_OUTSTREAM_POSITION_IN_BANNER
            - CONTENT_OUTSTREAM_POSITION_IN_FEED
            - CONTENT_OUTSTREAM_POSITION_INTERSTITIAL
          readOnly: true
          type: string
      type: object
    ContentStreamTypeAssignedTargetingOptionDetails:
      description: Details for content stream type assigned targeting option. This will be populated in the content_stream_type_details field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`. Explicitly targeting all options is not supported. Remove all content stream type targeting options to achieve this effect.
      properties:
        contentStreamType:
          description: Output only. The content stream type.
          enum:
            - CONTENT_STREAM_TYPE_UNSPECIFIED
            - CONTENT_LIVE_STREAM
            - CONTENT_ON_DEMAND
          readOnly: true
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
          type: string
      type: object
    ContentStreamTypeTargetingOptionDetails:
      description: Represents a targetable content stream type. This will be populated in the content_stream_type_details field when targeting_type is `TARGETING_TYPE_CONTENT_STREAM_TYPE`.
      properties:
        contentStreamType:
          description: Output only. The content stream type.
          enum:
            - CONTENT_STREAM_TYPE_UNSPECIFIED
            - CONTENT_LIVE_STREAM
            - CONTENT_ON_DEMAND
          readOnly: true
          type: string
      type: object
    ConversionCountingConfig:
      description: Settings that control how conversions are counted. All post-click conversions will be counted. A percentage value can be set for post-view conversions counting.
      properties:
        floodlightActivityConfigs:
          description: The Floodlight activity configs used to track conversions. The number of conversions counted is the sum of all of the conversions counted by all of the Floodlight activity IDs specified in this field.
          items:
            $ref: "#/components/schemas/TrackingFloodlightActivityConfig"
          type: array
        postViewCountPercentageMillis:
          description: The percentage of post-view conversions to count, in millis (1/1000 of a percent). Must be between 0 and 100000 inclusive. For example, to track 50% of the post-click conversions, set a value of 50000.
          format: int64
          type: string
      type: object
    CounterEvent:
      description: Counter event of the creative.
      properties:
        name:
          description: Required. The name of the counter event.
          type: string
        reportingName:
          description: Required. The name used to identify this counter event in reports.
          type: string
      type: object
    CreateAssetRequest:
      description: A request message for CreateAsset.
      properties:
        filename:
          description: Required. The filename of the asset, including the file extension. The filename must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
      type: object
    CreateAssetResponse:
      description: A response message for CreateAsset.
      properties:
        asset:
          $ref: "#/components/schemas/Asset"
          description: The uploaded asset, if successful.
      type: object
    CreateAssignedTargetingOptionsRequest:
      description: A request listing which assigned targeting options of a given targeting type should be created and added.
      properties:
        assignedTargetingOptions:
          description: Required. The assigned targeting options to create and add.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        targetingType:
          description: Required. Identifies the type of this assigned targeting option.
          enum:
            - TARGETING_TYPE_UNSPECIFIED
            - TARGETING_TYPE_CHANNEL
            - TARGETING_TYPE_APP_CATEGORY
            - TARGETING_TYPE_APP
            - TARGETING_TYPE_URL
            - TARGETING_TYPE_DAY_AND_TIME
            - TARGETING_TYPE_AGE_RANGE
            - TARGETING_TYPE_REGIONAL_LOCATION_LIST
            - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
            - TARGETING_TYPE_GENDER
            - TARGETING_TYPE_VIDEO_PLAYER_SIZE
            - TARGETING_TYPE_USER_REWARDED_CONTENT
            - TARGETING_TYPE_PARENTAL_STATUS
            - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
            - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
            - TARGETING_TYPE_DEVICE_TYPE
            - TARGETING_TYPE_AUDIENCE_GROUP
            - TARGETING_TYPE_BROWSER
            - TARGETING_TYPE_HOUSEHOLD_INCOME
            - TARGETING_TYPE_ON_SCREEN_POSITION
            - TARGETING_TYPE_THIRD_PARTY_VERIFIER
            - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
            - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
            - TARGETING_TYPE_ENVIRONMENT
            - TARGETING_TYPE_CARRIER_AND_ISP
            - TARGETING_TYPE_OPERATING_SYSTEM
            - TARGETING_TYPE_DEVICE_MAKE_MODEL
            - TARGETING_TYPE_KEYWORD
            - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
            - TARGETING_TYPE_VIEWABILITY
            - TARGETING_TYPE_CATEGORY
            - TARGETING_TYPE_INVENTORY_SOURCE
            - TARGETING_TYPE_LANGUAGE
            - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
            - TARGETING_TYPE_GEO_REGION
            - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
            - TARGETING_TYPE_EXCHANGE
            - TARGETING_TYPE_SUB_EXCHANGE
            - TARGETING_TYPE_POI
            - TARGETING_TYPE_BUSINESS_CHAIN
            - TARGETING_TYPE_CONTENT_DURATION
            - TARGETING_TYPE_CONTENT_STREAM_TYPE
            - TARGETING_TYPE_NATIVE_CONTENT_POSITION
            - TARGETING_TYPE_OMID
            - TARGETING_TYPE_AUDIO_CONTENT_TYPE
            - TARGETING_TYPE_CONTENT_GENRE
          type: string
      type: object
    CreateSdfDownloadTaskRequest:
      description: Request message for [SdfDownloadTaskService.CreateSdfDownloadTask].
      properties:
        advertiserId:
          description: The ID of the advertiser to download SDF for.
          format: int64
          type: string
        idFilter:
          $ref: "#/components/schemas/IdFilter"
          description: Filters on entities by their entity IDs.
        inventorySourceFilter:
          $ref: "#/components/schemas/InventorySourceFilter"
          description: Filters on Inventory Sources by their IDs.
        parentEntityFilter:
          $ref: "#/components/schemas/ParentEntityFilter"
          description: Filters on selected file types. The entities in each file are filtered by a chosen set of filter entities. The filter entities must be the same type as, or a parent type of, the selected file types.
        partnerId:
          description: The ID of the partner to download SDF for.
          format: int64
          type: string
        version:
          description: Required. The SDF version of the downloaded file. If set to `SDF_VERSION_UNSPECIFIED`, this will default to the version specified by the advertiser or partner identified by `root_id`. An advertiser inherits its SDF version from its partner unless configured otherwise.
          enum:
            - SDF_VERSION_UNSPECIFIED
            - SDF_VERSION_3_1
            - SDF_VERSION_4
            - SDF_VERSION_4_1
            - SDF_VERSION_4_2
            - SDF_VERSION_5
            - SDF_VERSION_5_1
            - SDF_VERSION_5_2
            - SDF_VERSION_5_3
            - SDF_VERSION_5_4
            - SDF_VERSION_5_5
          type: string
      type: object
    Creative:
      description: A single Creative.
      properties:
        additionalDimensions:
          description: "Additional dimensions. Applicable when creative_type is one of: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_LIGHTBOX` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_PUBLISHER_HOSTED` If this field is specified, width_pixels and height_pixels are both required and must be greater than or equal to 0."
          items:
            $ref: "#/components/schemas/Dimensions"
          type: array
        advertiserId:
          description: Output only. The unique ID of the advertiser the creative belongs to.
          format: int64
          readOnly: true
          type: string
        appendedTag:
          description: Third-party HTML tracking tag to be appended to the creative tag.
          type: string
        assets:
          description: "Required. Assets associated to this creative. Assets can be associated to the creative in one of following roles: * `ASSET_ROLE_UNSPECIFIED` * `ASSET_ROLE_MAIN` * `ASSET_ROLE_BACKUP` * `ASSET_ROLE_POLITE_LOAD`"
          items:
            $ref: "#/components/schemas/AssetAssociation"
          type: array
        cmPlacementId:
          description: Output only. The unique ID of the Campaign Manager 360 placement associated with the creative. This field is only applicable for creatives that are synced from Campaign Manager.
          format: int64
          readOnly: true
          type: string
        cmTrackingAd:
          $ref: "#/components/schemas/CmTrackingAd"
          description: "The Campaign Manager 360 tracking ad associated with the creative. Optional for the following creative_type when created by an advertiser that uses both Campaign Manager 360 and third-party ad serving: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` Output only for other cases."
        companionCreativeIds:
          description: "The IDs of companion creatives for a video creative. You can assign existing display creatives (with image or HTML5 assets) to serve surrounding the publisher's video player. Companions display around the video player while the video is playing and remain after the video has completed. Creatives contain additional dimensions can not be companion creatives. This field is only supported for following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`"
          items:
            format: int64
            type: string
          type: array
        counterEvents:
          description: Counter events for a rich media creative. Counters track the number of times that a user interacts with any part of a rich media creative in a specified way (mouse-overs, mouse-outs, clicks, taps, data loading, keyboard entries, etc.). Any event that can be captured in the creative can be recorded as a counter. Leave it empty or unset for creatives containing image assets only.
          items:
            $ref: "#/components/schemas/CounterEvent"
          type: array
        createTime:
          description: Output only. The timestamp when the creative was created. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
        creativeAttributes:
          description: Output only. A list of attributes of the creative that is generated by the system.
          items:
            enum:
              - CREATIVE_ATTRIBUTE_UNSPECIFIED
              - CREATIVE_ATTRIBUTE_VAST
              - CREATIVE_ATTRIBUTE_VPAID_LINEAR
              - CREATIVE_ATTRIBUTE_VPAID_NON_LINEAR
            type: string
          readOnly: true
          type: array
        creativeId:
          description: Output only. The unique ID of the creative. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        creativeType:
          description: Required. Immutable. The type of the creative.
          enum:
            - CREATIVE_TYPE_UNSPECIFIED
            - CREATIVE_TYPE_STANDARD
            - CREATIVE_TYPE_EXPANDABLE
            - CREATIVE_TYPE_VIDEO
            - CREATIVE_TYPE_NATIVE
            - CREATIVE_TYPE_TEMPLATED_APP_INSTALL
            - CREATIVE_TYPE_NATIVE_SITE_SQUARE
            - CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL
            - CREATIVE_TYPE_LIGHTBOX
            - CREATIVE_TYPE_NATIVE_APP_INSTALL
            - CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE
            - CREATIVE_TYPE_AUDIO
            - CREATIVE_TYPE_PUBLISHER_HOSTED
            - CREATIVE_TYPE_NATIVE_VIDEO
            - CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO
          type: string
        dimensions:
          $ref: "#/components/schemas/Dimensions"
          description: "Required. Primary dimensions of the creative. Applicable to all creative types. The value of width_pixels and height_pixels defaults to `0` when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO`"
        displayName:
          description: Required. The display name of the creative. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        dynamic:
          description: Output only. Indicates whether the creative is dynamic.
          readOnly: true
          type: boolean
        entityStatus:
          description: "Required. Controls whether or not the creative can serve. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED` * `ENTITY_STATUS_PAUSED`"
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        exitEvents:
          description: "Required. Exit events for this creative. An exit (also known as a click tag) is any area in your creative that someone can click or tap to open an advertiser's landing page. Every creative must include at least one exit. You can add an exit to your creative in any of the following ways: * Use Google Web Designer's tap area. * Define a JavaScript variable called \"clickTag\". * Use the Enabler (Enabler.exit()) to track exits in rich media formats."
          items:
            $ref: "#/components/schemas/ExitEvent"
          type: array
        expandOnHover:
          description: "Optional. Indicates the creative will automatically expand on hover. Optional and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`"
          type: boolean
        expandingDirection:
          description: "Optional. Specifies the expanding direction of the creative. Required and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`"
          enum:
            - EXPANDING_DIRECTION_UNSPECIFIED
            - EXPANDING_DIRECTION_NONE
            - EXPANDING_DIRECTION_UP
            - EXPANDING_DIRECTION_DOWN
            - EXPANDING_DIRECTION_LEFT
            - EXPANDING_DIRECTION_RIGHT
            - EXPANDING_DIRECTION_UP_AND_LEFT
            - EXPANDING_DIRECTION_UP_AND_RIGHT
            - EXPANDING_DIRECTION_DOWN_AND_LEFT
            - EXPANDING_DIRECTION_DOWN_AND_RIGHT
            - EXPANDING_DIRECTION_UP_OR_DOWN
            - EXPANDING_DIRECTION_LEFT_OR_RIGHT
            - EXPANDING_DIRECTION_ANY_DIAGONAL
          type: string
        hostingSource:
          description: Required. Indicates where the creative is hosted.
          enum:
            - HOSTING_SOURCE_UNSPECIFIED
            - HOSTING_SOURCE_CM
            - HOSTING_SOURCE_THIRD_PARTY
            - HOSTING_SOURCE_HOSTED
            - HOSTING_SOURCE_RICH_MEDIA
          type: string
        html5Video:
          description: "Output only. Indicates the third-party VAST tag creative requires HTML5 Video support. Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`"
          readOnly: true
          type: boolean
        iasCampaignMonitoring:
          description: Indicates whether Integral Ad Science (IAS) campaign monitoring is enabled. To enable this for the creative, make sure the Advertiser.creative_config.ias_client_id has been set to your IAS client ID.
          type: boolean
        integrationCode:
          description: ID information used to link this creative to an external system. Must be UTF-8 encoded with a length of no more than 10,000 characters.
          type: string
        jsTrackerUrl:
          description: "JavaScript measurement URL from supported third-party verification providers (ComScore, DoubleVerify, IAS, Moat). HTML script tags are not supported. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`"
          type: string
        lineItemIds:
          description: Output only. The IDs of the line items this creative is associated with. To associate a creative to a line item, use LineItem.creative_ids instead.
          items:
            format: int64
            type: string
          readOnly: true
          type: array
        mediaDuration:
          description: "Output only. Media duration of the creative. Applicable when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_PUBLISHER_HOSTED`"
          format: google-duration
          readOnly: true
          type: string
        mp3Audio:
          description: "Output only. Indicates the third-party audio creative supports MP3. Output only and only valid for third-party audio creatives. Third-party audio creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO`"
          readOnly: true
          type: boolean
        name:
          description: Output only. The resource name of the creative.
          readOnly: true
          type: string
        notes:
          description: User notes for this creative. Must be UTF-8 encoded with a length of no more than 20,000 characters.
          type: string
        obaIcon:
          $ref: "#/components/schemas/ObaIcon"
          description: "Specifies the OBA icon for a video creative. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO`"
        oggAudio:
          description: "Output only. Indicates the third-party audio creative supports OGG. Output only and only valid for third-party audio creatives. Third-party audio creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO`"
          readOnly: true
          type: boolean
        progressOffset:
          $ref: "#/components/schemas/AudioVideoOffset"
          description: "Amount of time to play the video before counting a view. This field is required when skippable is true. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        requireHtml5:
          description: "Optional. Indicates that the creative relies on HTML5 to render properly. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
          type: boolean
        requireMraid:
          description: "Optional. Indicates that the creative requires MRAID (Mobile Rich Media Ad Interface Definitions system). Set this if the creative relies on mobile gestures for interactivity, such as swiping or tapping. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
          type: boolean
        requirePingForAttribution:
          description: "Optional. Indicates that the creative will wait for a return ping for attribution. Only valid when using a Campaign Manager 360 tracking ad with a third-party ad server parameter and the ${DC_DBM_TOKEN} macro. Optional and only valid for third-party tag creatives or third-party VAST tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`"
          type: boolean
        reviewStatus:
          $ref: "#/components/schemas/ReviewStatusInfo"
          description: Output only. The current status of the creative review process.
          readOnly: true
        skipOffset:
          $ref: "#/components/schemas/AudioVideoOffset"
          description: "Amount of time to play the video before the skip button appears. This field is required when skippable is true. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        skippable:
          description: "Whether the user can choose to skip a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
          type: boolean
        thirdPartyTag:
          description: "Optional. The original third-party tag used for the creative. Required and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`"
          type: string
        thirdPartyUrls:
          description: "Tracking URLs from third parties to track interactions with a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO`"
          items:
            $ref: "#/components/schemas/ThirdPartyUrl"
          type: array
        timerEvents:
          description: Timer custom events for a rich media creative. Timers track the time during which a user views and interacts with a specified part of a rich media creative. A creative can have multiple timer events, each timed independently. Leave it empty or unset for creatives containing image assets only.
          items:
            $ref: "#/components/schemas/TimerEvent"
          type: array
        trackerUrls:
          description: "Tracking URLs for analytics providers or third-party ad technology vendors. The URLs must start with https (except on inventory that doesn't require SSL compliance). If using macros in your URL, use only macros supported by Display & Video 360. Standard URLs only, no IMG or SCRIPT tags. This field is only supported in following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`"
          items:
            type: string
          type: array
        transcodes:
          description: "Output only. Audio/Video transcodes. Display & Video 360 transcodes the main asset into a number of alternative versions that use different file formats or have different properties (resolution, audio bit rate, and video bit rate), each designed for specific video players or bandwidths. These transcodes give a publisher's system more options to choose from for each impression on your video and ensures that the appropriate file serves based on the viewer’s connection and screen size. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_AUDIO`"
          items:
            $ref: "#/components/schemas/Transcode"
          readOnly: true
          type: array
        universalAdId:
          $ref: "#/components/schemas/UniversalAdId"
          description: "Optional. An optional creative identifier provided by a registry that is unique across all platforms. Universal Ad ID is part of the VAST 4.0 standard. It can be modified after the creative is created. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`"
        updateTime:
          description: Output only. The timestamp when the creative was last updated, either by the user or system (e.g. creative review). Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
        vastTagUrl:
          description: "Optional. The URL of the VAST tag for a third-party VAST tag creative. Required and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`"
          type: string
        vpaid:
          description: "Output only. Indicates the third-party VAST tag creative requires VPAID (Digital Video Player-Ad Interface). Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`"
          readOnly: true
          type: boolean
      type: object
    CreativeConfig:
      description: Creative requirements configuration for the inventory source.
      properties:
        creativeType:
          description: "The type of creative that can be assigned to the inventory source. Only the following types are supported: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_VIDEO`"
          enum:
            - CREATIVE_TYPE_UNSPECIFIED
            - CREATIVE_TYPE_STANDARD
            - CREATIVE_TYPE_EXPANDABLE
            - CREATIVE_TYPE_VIDEO
            - CREATIVE_TYPE_NATIVE
            - CREATIVE_TYPE_TEMPLATED_APP_INSTALL
            - CREATIVE_TYPE_NATIVE_SITE_SQUARE
            - CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL
            - CREATIVE_TYPE_LIGHTBOX
            - CREATIVE_TYPE_NATIVE_APP_INSTALL
            - CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE
            - CREATIVE_TYPE_AUDIO
            - CREATIVE_TYPE_PUBLISHER_HOSTED
            - CREATIVE_TYPE_NATIVE_VIDEO
            - CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO
          type: string
        displayCreativeConfig:
          $ref: "#/components/schemas/InventorySourceDisplayCreativeConfig"
          description: The configuration for display creatives. Applicable when creative_type is `CREATIVE_TYPE_STANDARD`.
        videoCreativeConfig:
          $ref: "#/components/schemas/InventorySourceVideoCreativeConfig"
          description: The configuration for video creatives. Applicable when creative_type is `CREATIVE_TYPE_VIDEO`.
      type: object
    CustomBiddingAlgorithm:
      description: A single custom bidding algorithm.
      properties:
        advertiserId:
          description: Immutable. The unique ID of the advertiser that owns the custom bidding algorithm.
          format: int64
          type: string
        customBiddingAlgorithmId:
          description: Output only. The unique ID of the custom bidding algorithm. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        customBiddingAlgorithmState:
          description: Output only. The status of custom bidding algorithm.
          enum:
            - STATE_UNSPECIFIED
            - ENABLED
            - DORMANT
            - SUSPENDED
          readOnly: true
          type: string
        customBiddingAlgorithmType:
          description: Required. Immutable. The type of custom bidding algorithm.
          enum:
            - CUSTOM_BIDDING_ALGORITHM_TYPE_UNSPECIFIED
            - SCRIPT_BASED
            - ADS_DATA_HUB_BASED
            - GOAL_BUILDER_BASED
          type: string
        displayName:
          description: Required. The display name of the custom bidding algorithm. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        entityStatus:
          description: "Controls whether or not the custom bidding algorithm can be used as a bidding strategy. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED`"
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        modelReadiness:
          description: Output only. The state of custom bidding model readiness for each advertiser who has access. This field may only include the state of the queried advertiser if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
          items:
            $ref: "#/components/schemas/CustomBiddingModelReadinessState"
          readOnly: true
          type: array
        name:
          description: Output only. The resource name of the custom bidding algorithm.
          readOnly: true
          type: string
        partnerId:
          description: Immutable. The unique ID of the partner that owns the custom bidding algorithm.
          format: int64
          type: string
        sharedAdvertiserIds:
          description: The IDs of the advertisers who have access to this algorithm. If advertiser_id is set, this field will only consist of that value. This field will not be set if the algorithm [`owner`](/display-video/api/reference/rest/v1/customBiddingAlgorithms#CustomBiddingAlgorithm.FIELDS.oneof_owner) is a partner and is being retrieved using an advertiser [`accessor`](/display-video/api/reference/rest/v1/customBiddingAlgorithms/list#body.QUERY_PARAMETERS.oneof_accessor).
          items:
            format: int64
            type: string
          type: array
      type: object
    CustomBiddingModelReadinessState:
      description: The custom bidding algorithm model readiness state for a single shared advertiser.
      properties:
        advertiserId:
          description: The unique ID of the relevant advertiser.
          format: int64
          type: string
        readinessState:
          description: The readiness state of custom bidding model.
          enum:
            - READINESS_STATE_UNSPECIFIED
            - READINESS_STATE_ACTIVE
            - READINESS_STATE_INSUFFICIENT_DATA
            - READINESS_STATE_TRAINING
            - READINESS_STATE_NO_VALID_SCRIPT
          type: string
      type: object
    CustomBiddingScript:
      description: A single custom bidding script.
      properties:
        active:
          description: Output only. Whether the script is currently being used for scoring by the parent algorithm.
          readOnly: true
          type: boolean
        createTime:
          description: Output only. The time when the script was created.
          format: google-datetime
          readOnly: true
          type: string
        customBiddingAlgorithmId:
          description: Output only. The unique ID of the custom bidding algorithm the script belongs to.
          format: int64
          readOnly: true
          type: string
        customBiddingScriptId:
          description: Output only. The unique ID of the custom bidding script.
          format: int64
          readOnly: true
          type: string
        errors:
          description: Output only. Error details of a rejected custom bidding script. This field will only be populated when Script.state is REJECTED.
          items:
            $ref: "#/components/schemas/ScriptError"
          readOnly: true
          type: array
        name:
          description: Output only. The resource name of the custom bidding script.
          readOnly: true
          type: string
        script:
          $ref: "#/components/schemas/CustomBiddingScriptRef"
          description: The reference to the uploaded script file.
        state:
          description: Output only. The state of the custom bidding script.
          enum:
            - STATE_UNSPECIFIED
            - ACCEPTED
            - REJECTED
            - PENDING
          readOnly: true
          type: string
      type: object
    CustomBiddingScriptRef:
      description: The reference to the uploaded custom bidding script file.
      properties:
        resourceName:
          description: A resource name to be used in media.download to Download the script files. Or media.upload to Upload the script files. Resource names have the format `customBiddingAlgorithms/{custom_bidding_algorithm_id}/scriptRef/{ref_id}`.
          type: string
      type: object
    CustomList:
      description: Describes a custom list entity, such as a custom affinity or custom intent audience list.
      properties:
        customListId:
          description: Output only. The unique ID of the custom list. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: Output only. The display name of the custom list. .
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the custom list.
          readOnly: true
          type: string
      type: object
    CustomListGroup:
      description: Details of custom list group. All custom list targeting settings are logically ‘OR’ of each other.
      properties:
        settings:
          description: Required. All custom list targeting settings in custom list group. Repeated settings with same id will be ignored.
          items:
            $ref: "#/components/schemas/CustomListTargetingSetting"
          type: array
      type: object
    CustomListTargetingSetting:
      description: Details of custom list targeting setting.
      properties:
        customListId:
          description: Required. Custom id of custom list targeting setting. This id is custom_list_id.
          format: int64
          type: string
      type: object
    Date:
      description: "Represents a whole or partial calendar date, such as a birthday. The time of day and time zone are either specified elsewhere or are insignificant. The date is relative to the Gregorian Calendar. This can represent one of the following: * A full date, with non-zero year, month, and day values. * A month and day, with a zero year (for example, an anniversary). * A year on its own, with a zero month and a zero day. * A year and month, with a zero day (for example, a credit card expiration date). Related types: * google.type.TimeOfDay * google.type.DateTime * google.protobuf.Timestamp"
      properties:
        day:
          description: Day of a month. Must be from 1 to 31 and valid for the year and month, or 0 to specify a year by itself or a year and month where the day isn't significant.
          format: int32
          type: integer
        month:
          description: Month of a year. Must be from 1 to 12, or 0 to specify a year without a month and day.
          format: int32
          type: integer
        year:
          description: Year of the date. Must be from 1 to 9999, or 0 to specify a date without a year.
          format: int32
          type: integer
      type: object
    DateRange:
      description: A date range.
      properties:
        endDate:
          $ref: "#/components/schemas/Date"
          description: The upper bound of the date range, inclusive. Must specify a positive value for `year`, `month`, and `day`.
        startDate:
          $ref: "#/components/schemas/Date"
          description: The lower bound of the date range, inclusive. Must specify a positive value for `year`, `month`, and `day`.
      type: object
    DayAndTimeAssignedTargetingOptionDetails:
      description: Representation of a segment of time defined on a specific day of the week and with a start and end time. The time represented by `start_hour` must be before the time represented by `end_hour`.
      properties:
        dayOfWeek:
          description: Required. The day of the week for this day and time targeting setting.
          enum:
            - DAY_OF_WEEK_UNSPECIFIED
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
          type: string
        endHour:
          description: Required. The end hour for day and time targeting. Must be between 1 (1 hour after start of day) and 24 (end of day).
          format: int32
          type: integer
        startHour:
          description: Required. The start hour for day and time targeting. Must be between 0 (start of day) and 23 (1 hour before end of day).
          format: int32
          type: integer
        timeZoneResolution:
          description: Required. The mechanism used to determine which timezone to use for this day and time targeting setting.
          enum:
            - TIME_ZONE_RESOLUTION_UNSPECIFIED
            - TIME_ZONE_RESOLUTION_END_USER
            - TIME_ZONE_RESOLUTION_ADVERTISER
          type: string
      type: object
    DeactivateManualTriggerRequest:
      description: Request message for ManualTriggerService.DeactivateManualTrigger.
      properties: {}
      type: object
    DeleteAssignedTargetingOptionsRequest:
      description: A request listing which assigned targeting options of a given targeting type should be deleted.
      properties:
        assignedTargetingOptionIds:
          description: Required. The assigned targeting option IDs to delete.
          items:
            type: string
          type: array
        targetingType:
          description: Required. Identifies the type of this assigned targeting option.
          enum:
            - TARGETING_TYPE_UNSPECIFIED
            - TARGETING_TYPE_CHANNEL
            - TARGETING_TYPE_APP_CATEGORY
            - TARGETING_TYPE_APP
            - TARGETING_TYPE_URL
            - TARGETING_TYPE_DAY_AND_TIME
            - TARGETING_TYPE_AGE_RANGE
            - TARGETING_TYPE_REGIONAL_LOCATION_LIST
            - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
            - TARGETING_TYPE_GENDER
            - TARGETING_TYPE_VIDEO_PLAYER_SIZE
            - TARGETING_TYPE_USER_REWARDED_CONTENT
            - TARGETING_TYPE_PARENTAL_STATUS
            - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
            - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
            - TARGETING_TYPE_DEVICE_TYPE
            - TARGETING_TYPE_AUDIENCE_GROUP
            - TARGETING_TYPE_BROWSER
            - TARGETING_TYPE_HOUSEHOLD_INCOME
            - TARGETING_TYPE_ON_SCREEN_POSITION
            - TARGETING_TYPE_THIRD_PARTY_VERIFIER
            - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
            - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
            - TARGETING_TYPE_ENVIRONMENT
            - TARGETING_TYPE_CARRIER_AND_ISP
            - TARGETING_TYPE_OPERATING_SYSTEM
            - TARGETING_TYPE_DEVICE_MAKE_MODEL
            - TARGETING_TYPE_KEYWORD
            - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
            - TARGETING_TYPE_VIEWABILITY
            - TARGETING_TYPE_CATEGORY
            - TARGETING_TYPE_INVENTORY_SOURCE
            - TARGETING_TYPE_LANGUAGE
            - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
            - TARGETING_TYPE_GEO_REGION
            - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
            - TARGETING_TYPE_EXCHANGE
            - TARGETING_TYPE_SUB_EXCHANGE
            - TARGETING_TYPE_POI
            - TARGETING_TYPE_BUSINESS_CHAIN
            - TARGETING_TYPE_CONTENT_DURATION
            - TARGETING_TYPE_CONTENT_STREAM_TYPE
            - TARGETING_TYPE_NATIVE_CONTENT_POSITION
            - TARGETING_TYPE_OMID
            - TARGETING_TYPE_AUDIO_CONTENT_TYPE
            - TARGETING_TYPE_CONTENT_GENRE
          type: string
      type: object
    DeviceMakeModelAssignedTargetingOptionDetails:
      description: Assigned device make and model targeting option details. This will be populated in the device_make_model_details field when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
      properties:
        displayName:
          description: Output only. The display name of the device make and model.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
          type: string
      type: object
    DeviceMakeModelTargetingOptionDetails:
      description: Represents a targetable device make and model. This will be populated in the device_make_model_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_MAKE_MODEL`.
      properties:
        displayName:
          description: Output only. The display name of the device make and model.
          readOnly: true
          type: string
      type: object
    DeviceTypeAssignedTargetingOptionDetails:
      description: Targeting details for device type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.
      properties:
        deviceType:
          description: The display name of the device type. Output only in v1. Required in v2.
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - DEVICE_TYPE_COMPUTER
            - DEVICE_TYPE_CONNECTED_TV
            - DEVICE_TYPE_SMART_PHONE
            - DEVICE_TYPE_TABLET
          type: string
        targetingOptionId:
          description: Required. ID of the device type.
          type: string
      type: object
    DeviceTypeTargetingOptionDetails:
      description: Represents a targetable device type. This will be populated in the device_type_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_DEVICE_TYPE`.
      properties:
        deviceType:
          description: Output only. The device type that is used to be targeted.
          enum:
            - DEVICE_TYPE_UNSPECIFIED
            - DEVICE_TYPE_COMPUTER
            - DEVICE_TYPE_CONNECTED_TV
            - DEVICE_TYPE_SMART_PHONE
            - DEVICE_TYPE_TABLET
          readOnly: true
          type: string
      type: object
    DigitalContentLabelAssignedTargetingOptionDetails:
      description: Targeting details for digital content label. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.
      properties:
        contentRatingTier:
          description: Output only. The display name of the digital content label rating tier.
          enum:
            - CONTENT_RATING_TIER_UNSPECIFIED
            - CONTENT_RATING_TIER_UNRATED
            - CONTENT_RATING_TIER_GENERAL
            - CONTENT_RATING_TIER_PARENTAL_GUIDANCE
            - CONTENT_RATING_TIER_TEENS
            - CONTENT_RATING_TIER_MATURE
          readOnly: true
          type: string
        excludedTargetingOptionId:
          description: Required. ID of the digital content label to be EXCLUDED.
          type: string
      type: object
    DigitalContentLabelTargetingOptionDetails:
      description: Represents a targetable digital content label rating tier. This will be populated in the digital_content_label_details field of the TargetingOption when targeting_type is `TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION`.
      properties:
        contentRatingTier:
          description: Output only. An enum for the content label brand safety tiers.
          enum:
            - CONTENT_RATING_TIER_UNSPECIFIED
            - CONTENT_RATING_TIER_UNRATED
            - CONTENT_RATING_TIER_GENERAL
            - CONTENT_RATING_TIER_PARENTAL_GUIDANCE
            - CONTENT_RATING_TIER_TEENS
            - CONTENT_RATING_TIER_MATURE
          readOnly: true
          type: string
      type: object
    Dimensions:
      description: Dimensions.
      properties:
        heightPixels:
          description: The height in pixels.
          format: int32
          type: integer
        widthPixels:
          description: The width in pixels.
          format: int32
          type: integer
      type: object
    DoubleVerify:
      description: Details of DoubleVerify settings.
      properties:
        appStarRating:
          $ref: "#/components/schemas/DoubleVerifyAppStarRating"
          description: Avoid bidding on apps with the star ratings.
        avoidedAgeRatings:
          description: Avoid bidding on apps with the age rating.
          items:
            enum:
              - AGE_RATING_UNSPECIFIED
              - APP_AGE_RATE_UNKNOWN
              - APP_AGE_RATE_4_PLUS
              - APP_AGE_RATE_9_PLUS
              - APP_AGE_RATE_12_PLUS
              - APP_AGE_RATE_17_PLUS
              - APP_AGE_RATE_18_PLUS
            type: string
          type: array
        brandSafetyCategories:
          $ref: "#/components/schemas/DoubleVerifyBrandSafetyCategories"
          description: DV Brand Safety Controls.
        customSegmentId:
          description: 'The custom segment ID provided by DoubleVerify. The ID must start with "51" and consist of eight digits. Custom segment ID cannot be specified along with any of the following fields: * brand_safety_categories * avoided_age_ratings * app_star_rating * fraud_invalid_traffic'
          format: int64
          type: string
        displayViewability:
          $ref: "#/components/schemas/DoubleVerifyDisplayViewability"
          description: Display viewability settings (applicable to display line items only).
        fraudInvalidTraffic:
          $ref: "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
          description: Avoid Sites and Apps with historical Fraud & IVT Rates.
        videoViewability:
          $ref: "#/components/schemas/DoubleVerifyVideoViewability"
          description: Video viewability settings (applicable to video line items only).
      type: object
    DoubleVerifyAppStarRating:
      description: Details of DoubleVerify star ratings settings.
      properties:
        avoidInsufficientStarRating:
          description: Avoid bidding on apps with insufficient star ratings.
          type: boolean
        avoidedStarRating:
          description: Avoid bidding on apps with the star ratings.
          enum:
            - APP_STAR_RATE_UNSPECIFIED
            - APP_STAR_RATE_1_POINT_5_LESS
            - APP_STAR_RATE_2_LESS
            - APP_STAR_RATE_2_POINT_5_LESS
            - APP_STAR_RATE_3_LESS
            - APP_STAR_RATE_3_POINT_5_LESS
            - APP_STAR_RATE_4_LESS
            - APP_STAR_RATE_4_POINT_5_LESS
          type: string
      type: object
    DoubleVerifyBrandSafetyCategories:
      description: Settings for brand safety controls.
      properties:
        avoidUnknownBrandSafetyCategory:
          description: Unknown or unrateable.
          type: boolean
        avoidedHighSeverityCategories:
          description: Brand safety high severity avoidance categories.
          items:
            enum:
              - HIGHER_SEVERITY_UNSPECIFIED
              - ADULT_CONTENT_PORNOGRAPHY
              - COPYRIGHT_INFRINGEMENT
              - SUBSTANCE_ABUSE
              - GRAPHIC_VIOLENCE_WEAPONS
              - HATE_PROFANITY
              - CRIMINAL_SKILLS
              - NUISANCE_INCENTIVIZED_MALWARE_CLUTTER
            type: string
          type: array
        avoidedMediumSeverityCategories:
          description: Brand safety medium severity avoidance categories.
          items:
            enum:
              - MEDIUM_SEVERITY_UNSPECIFIED
              - AD_SERVERS
              - ADULT_CONTENT_SWIMSUIT
              - ALTERNATIVE_LIFESTYLES
              - CELEBRITY_GOSSIP
              - GAMBLING
              - OCCULT
              - SEX_EDUCATION
              - DISASTER_AVIATION
              - DISASTER_MAN_MADE
              - DISASTER_NATURAL
              - DISASTER_TERRORIST_EVENTS
              - DISASTER_VEHICLE
              - ALCOHOL
              - SMOKING
              - NEGATIVE_NEWS_FINANCIAL
              - NON_ENGLISH
              - PARKING_PAGE
              - UNMODERATED_UGC
              - INFLAMMATORY_POLITICS_AND_NEWS
              - NEGATIVE_NEWS_PHARMACEUTICAL
            type: string
          type: array
      type: object
    DoubleVerifyDisplayViewability:
      description: Details of DoubleVerify display viewability settings.
      properties:
        iab:
          description: Target web and app inventory to maximize IAB viewable rate.
          enum:
            - IAB_VIEWED_RATE_UNSPECIFIED
            - IAB_VIEWED_RATE_80_PERCENT_HIGHER
            - IAB_VIEWED_RATE_75_PERCENT_HIGHER
            - IAB_VIEWED_RATE_70_PERCENT_HIGHER
            - IAB_VIEWED_RATE_65_PERCENT_HIGHER
            - IAB_VIEWED_RATE_60_PERCENT_HIGHER
            - IAB_VIEWED_RATE_55_PERCENT_HIGHER
            - IAB_VIEWED_RATE_50_PERCENT_HIGHER
            - IAB_VIEWED_RATE_40_PERCENT_HIGHER
            - IAB_VIEWED_RATE_30_PERCENT_HIGHER
          type: string
        viewableDuring:
          description: Target web and app inventory to maximize 100% viewable duration.
          enum:
            - AVERAGE_VIEW_DURATION_UNSPECIFIED
            - AVERAGE_VIEW_DURATION_5_SEC
            - AVERAGE_VIEW_DURATION_10_SEC
            - AVERAGE_VIEW_DURATION_15_SEC
          type: string
      type: object
    DoubleVerifyFraudInvalidTraffic:
      description: DoubleVerify Fraud & Invalid Traffic settings.
      properties:
        avoidInsufficientOption:
          description: Insufficient Historical Fraud & IVT Stats.
          type: boolean
        avoidedFraudOption:
          description: Avoid Sites and Apps with historical Fraud & IVT.
          enum:
            - FRAUD_UNSPECIFIED
            - AD_IMPRESSION_FRAUD_100
            - AD_IMPRESSION_FRAUD_50
            - AD_IMPRESSION_FRAUD_25
            - AD_IMPRESSION_FRAUD_10
            - AD_IMPRESSION_FRAUD_8
            - AD_IMPRESSION_FRAUD_6
            - AD_IMPRESSION_FRAUD_4
            - AD_IMPRESSION_FRAUD_2
          type: string
      type: object
    DoubleVerifyVideoViewability:
      description: Details of DoubleVerify video viewability settings.
      properties:
        playerImpressionRate:
          description: Target inventory to maximize impressions with 400x300 or greater player size.
          enum:
            - PLAYER_SIZE_400X300_UNSPECIFIED
            - PLAYER_SIZE_400X300_95
            - PLAYER_SIZE_400X300_70
            - PLAYER_SIZE_400X300_25
            - PLAYER_SIZE_400X300_5
          type: string
        videoIab:
          description: Target web inventory to maximize IAB viewable rate.
          enum:
            - VIDEO_IAB_UNSPECIFIED
            - IAB_VIEWABILITY_80_PERCENT_HIGHER
            - IAB_VIEWABILITY_75_PERCENT_HIGHER
            - IAB_VIEWABILITY_70_PERCENT_HIGHER
            - IAB_VIEWABILITY_65_PERCENT_HIHGER
            - IAB_VIEWABILITY_60_PERCENT_HIGHER
            - IAB_VIEWABILITY_55_PERCENT_HIHGER
            - IAB_VIEWABILITY_50_PERCENT_HIGHER
            - IAB_VIEWABILITY_40_PERCENT_HIHGER
            - IAB_VIEWABILITY_30_PERCENT_HIHGER
          type: string
        videoViewableRate:
          description: Target web inventory to maximize fully viewable rate.
          enum:
            - VIDEO_VIEWABLE_RATE_UNSPECIFIED
            - VIEWED_PERFORMANCE_40_PERCENT_HIGHER
            - VIEWED_PERFORMANCE_35_PERCENT_HIGHER
            - VIEWED_PERFORMANCE_30_PERCENT_HIGHER
            - VIEWED_PERFORMANCE_25_PERCENT_HIGHER
            - VIEWED_PERFORMANCE_20_PERCENT_HIGHER
            - VIEWED_PERFORMANCE_10_PERCENT_HIGHER
          type: string
      type: object
    EditCustomerMatchMembersRequest:
      description: Request message for FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.
      properties:
        addedContactInfoList:
          $ref: "#/components/schemas/ContactInfoList"
          description: Input only. A list of contact information to define the members to be added.
        addedMobileDeviceIdList:
          $ref: "#/components/schemas/MobileDeviceIdList"
          description: Input only. A list of mobile device IDs to define the members to be added.
        advertiserId:
          description: Required. The ID of the owner advertiser of the updated Customer Match FirstAndThirdPartyAudience.
          format: int64
          type: string
      type: object
    EditCustomerMatchMembersResponse:
      description: The response of FirstAndThirdPartyAudienceService.EditCustomerMatchMembers.
      properties:
        firstAndThirdPartyAudienceId:
          description: Required. The ID of the updated Customer Match FirstAndThirdPartyAudience.
          format: int64
          type: string
      type: object
    EditGuaranteedOrderReadAccessorsRequest:
      description: Request message for GuaranteedOrderService.EditGuaranteedOrderReadAccessors.
      properties:
        addedAdvertisers:
          description: The advertisers to add as read accessors to the guaranteed order.
          items:
            format: int64
            type: string
          type: array
        partnerId:
          description: Required. The partner context in which the change is being made.
          format: int64
          type: string
        readAccessInherited:
          description: Whether to give all advertisers of the read/write accessor partner read access to the guaranteed order. Only applicable if read_write_partner_id is set in the guaranteed order.
          type: boolean
        removedAdvertisers:
          description: The advertisers to remove as read accessors to the guaranteed order.
          items:
            format: int64
            type: string
          type: array
      type: object
    EditGuaranteedOrderReadAccessorsResponse:
      properties:
        readAccessInherited:
          description: Whether all advertisers of read_write_partner_id have read access to the guaranteed order.
          type: boolean
        readAdvertiserIds:
          description: The IDs of advertisers with read access to the guaranteed order.
          items:
            format: int64
            type: string
          type: array
      type: object
    EditInventorySourceReadWriteAccessorsRequest:
      description: Request message for InventorySourceService.EditInventorySourceReadWriteAccessors.
      properties:
        advertisersUpdate:
          $ref: "#/components/schemas/EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate"
          description: The advertisers to add or remove from the list of advertisers that have read/write access to the inventory source. This change will remove an existing partner read/write accessor.
        assignPartner:
          description: Set the partner context as read/write accessor of the inventory source. This will remove all other current read/write advertiser accessors.
          type: boolean
        partnerId:
          description: Required. The partner context by which the accessors change is being made.
          format: int64
          type: string
      type: object
    EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate:
      description: Update to the list of advertisers with read/write access to the inventory source.
      properties:
        addedAdvertisers:
          description: The advertisers to add.
          items:
            format: int64
            type: string
          type: array
        removedAdvertisers:
          description: The advertisers to remove.
          items:
            format: int64
            type: string
          type: array
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    EnvironmentAssignedTargetingOptionDetails:
      description: Assigned environment targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_ENVIRONMENT`.
      properties:
        environment:
          description: The serving environment. Output only in v1. Required in v2.
          enum:
            - ENVIRONMENT_UNSPECIFIED
            - ENVIRONMENT_WEB_OPTIMIZED
            - ENVIRONMENT_WEB_NOT_OPTIMIZED
            - ENVIRONMENT_APP
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_ENVIRONMENT` (e.g., "508010" for targeting the `ENVIRONMENT_WEB_OPTIMIZED` option).
          type: string
      type: object
    EnvironmentTargetingOptionDetails:
      description: Represents a targetable environment. This will be populated in the environment_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_ENVIRONMENT`.
      properties:
        environment:
          description: Output only. The serving environment.
          enum:
            - ENVIRONMENT_UNSPECIFIED
            - ENVIRONMENT_WEB_OPTIMIZED
            - ENVIRONMENT_WEB_NOT_OPTIMIZED
            - ENVIRONMENT_APP
          readOnly: true
          type: string
      type: object
    ExchangeAssignedTargetingOptionDetails:
      description: Details for assigned exchange targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_EXCHANGE`.
      properties:
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_EXCHANGE`.
          type: string
      type: object
    ExchangeConfig:
      description: Settings that control which exchanges are enabled for a partner.
      properties:
        enabledExchanges:
          description: All enabled exchanges in the partner. Duplicate enabled exchanges will be ignored.
          items:
            $ref: "#/components/schemas/ExchangeConfigEnabledExchange"
          type: array
      type: object
    ExchangeConfigEnabledExchange:
      description: An enabled exchange in the partner.
      properties:
        exchange:
          description: The enabled exchange.
          enum:
            - EXCHANGE_UNSPECIFIED
            - EXCHANGE_GOOGLE_AD_MANAGER
            - EXCHANGE_APPNEXUS
            - EXCHANGE_BRIGHTROLL
            - EXCHANGE_ADFORM
            - EXCHANGE_ADMETA
            - EXCHANGE_ADMIXER
            - EXCHANGE_ADSMOGO
            - EXCHANGE_ADSWIZZ
            - EXCHANGE_BIDSWITCH
            - EXCHANGE_BRIGHTROLL_DISPLAY
            - EXCHANGE_CADREON
            - EXCHANGE_DAILYMOTION
            - EXCHANGE_FIVE
            - EXCHANGE_FLUCT
            - EXCHANGE_FREEWHEEL
            - EXCHANGE_GENIEE
            - EXCHANGE_GUMGUM
            - EXCHANGE_IMOBILE
            - EXCHANGE_IBILLBOARD
            - EXCHANGE_IMPROVE_DIGITAL
            - EXCHANGE_INDEX
            - EXCHANGE_KARGO
            - EXCHANGE_MICROAD
            - EXCHANGE_MOPUB
            - EXCHANGE_NEND
            - EXCHANGE_ONE_BY_AOL_DISPLAY
            - EXCHANGE_ONE_BY_AOL_MOBILE
            - EXCHANGE_ONE_BY_AOL_VIDEO
            - EXCHANGE_OOYALA
            - EXCHANGE_OPENX
            - EXCHANGE_PERMODO
            - EXCHANGE_PLATFORMONE
            - EXCHANGE_PLATFORMID
            - EXCHANGE_PUBMATIC
            - EXCHANGE_PULSEPOINT
            - EXCHANGE_REVENUEMAX
            - EXCHANGE_RUBICON
            - EXCHANGE_SMARTCLIP
            - EXCHANGE_SMARTRTB
            - EXCHANGE_SMARTSTREAMTV
            - EXCHANGE_SOVRN
            - EXCHANGE_SPOTXCHANGE
            - EXCHANGE_STROER
            - EXCHANGE_TEADSTV
            - EXCHANGE_TELARIA
            - EXCHANGE_TVN
            - EXCHANGE_UNITED
            - EXCHANGE_YIELDLAB
            - EXCHANGE_YIELDMO
            - EXCHANGE_UNRULYX
            - EXCHANGE_OPEN8
            - EXCHANGE_TRITON
            - EXCHANGE_TRIPLELIFT
            - EXCHANGE_TABOOLA
            - EXCHANGE_INMOBI
            - EXCHANGE_SMAATO
            - EXCHANGE_AJA
            - EXCHANGE_SUPERSHIP
            - EXCHANGE_NEXSTAR_DIGITAL
            - EXCHANGE_WAZE
            - EXCHANGE_SOUNDCAST
            - EXCHANGE_SHARETHROUGH
            - EXCHANGE_FYBER
            - EXCHANGE_RED_FOR_PUBLISHERS
            - EXCHANGE_MEDIANET
            - EXCHANGE_TAPJOY
            - EXCHANGE_VISTAR
            - EXCHANGE_DAX
          type: string
        googleAdManagerAgencyId:
          description: Output only. Agency ID of Google Ad Manager. The field is only relevant when Google Ad Manager is the enabled exchange.
          readOnly: true
          type: string
        googleAdManagerBuyerNetworkId:
          description: Output only. Network ID of Google Ad Manager. The field is only relevant when Google Ad Manager is the enabled exchange.
          readOnly: true
          type: string
        seatId:
          description: Output only. Seat ID of the enabled exchange.
          readOnly: true
          type: string
      type: object
    ExchangeReviewStatus:
      description: Exchange review status for the creative.
      properties:
        exchange:
          description: The exchange reviewing the creative.
          enum:
            - EXCHANGE_UNSPECIFIED
            - EXCHANGE_GOOGLE_AD_MANAGER
            - EXCHANGE_APPNEXUS
            - EXCHANGE_BRIGHTROLL
            - EXCHANGE_ADFORM
            - EXCHANGE_ADMETA
            - EXCHANGE_ADMIXER
            - EXCHANGE_ADSMOGO
            - EXCHANGE_ADSWIZZ
            - EXCHANGE_BIDSWITCH
            - EXCHANGE_BRIGHTROLL_DISPLAY
            - EXCHANGE_CADREON
            - EXCHANGE_DAILYMOTION
            - EXCHANGE_FIVE
            - EXCHANGE_FLUCT
            - EXCHANGE_FREEWHEEL
            - EXCHANGE_GENIEE
            - EXCHANGE_GUMGUM
            - EXCHANGE_IMOBILE
            - EXCHANGE_IBILLBOARD
            - EXCHANGE_IMPROVE_DIGITAL
            - EXCHANGE_INDEX
            - EXCHANGE_KARGO
            - EXCHANGE_MICROAD
            - EXCHANGE_MOPUB
            - EXCHANGE_NEND
            - EXCHANGE_ONE_BY_AOL_DISPLAY
            - EXCHANGE_ONE_BY_AOL_MOBILE
            - EXCHANGE_ONE_BY_AOL_VIDEO
            - EXCHANGE_OOYALA
            - EXCHANGE_OPENX
            - EXCHANGE_PERMODO
            - EXCHANGE_PLATFORMONE
            - EXCHANGE_PLATFORMID
            - EXCHANGE_PUBMATIC
            - EXCHANGE_PULSEPOINT
            - EXCHANGE_REVENUEMAX
            - EXCHANGE_RUBICON
            - EXCHANGE_SMARTCLIP
            - EXCHANGE_SMARTRTB
            - EXCHANGE_SMARTSTREAMTV
            - EXCHANGE_SOVRN
            - EXCHANGE_SPOTXCHANGE
            - EXCHANGE_STROER
            - EXCHANGE_TEADSTV
            - EXCHANGE_TELARIA
            - EXCHANGE_TVN
            - EXCHANGE_UNITED
            - EXCHANGE_YIELDLAB
            - EXCHANGE_YIELDMO
            - EXCHANGE_UNRULYX
            - EXCHANGE_OPEN8
            - EXCHANGE_TRITON
            - EXCHANGE_TRIPLELIFT
            - EXCHANGE_TABOOLA
            - EXCHANGE_INMOBI
            - EXCHANGE_SMAATO
            - EXCHANGE_AJA
            - EXCHANGE_SUPERSHIP
            - EXCHANGE_NEXSTAR_DIGITAL
            - EXCHANGE_WAZE
            - EXCHANGE_SOUNDCAST
            - EXCHANGE_SHARETHROUGH
            - EXCHANGE_FYBER
            - EXCHANGE_RED_FOR_PUBLISHERS
            - EXCHANGE_MEDIANET
            - EXCHANGE_TAPJOY
            - EXCHANGE_VISTAR
            - EXCHANGE_DAX
          type: string
        status:
          description: Status of the exchange review.
          enum:
            - REVIEW_STATUS_UNSPECIFIED
            - REVIEW_STATUS_APPROVED
            - REVIEW_STATUS_REJECTED
            - REVIEW_STATUS_PENDING
          type: string
      type: object
    ExchangeTargetingOptionDetails:
      description: Represents a targetable exchange. This will be populated in the exchange_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_EXCHANGE`.
      properties:
        exchange:
          description: Output only. The type of exchange.
          enum:
            - EXCHANGE_UNSPECIFIED
            - EXCHANGE_GOOGLE_AD_MANAGER
            - EXCHANGE_APPNEXUS
            - EXCHANGE_BRIGHTROLL
            - EXCHANGE_ADFORM
            - EXCHANGE_ADMETA
            - EXCHANGE_ADMIXER
            - EXCHANGE_ADSMOGO
            - EXCHANGE_ADSWIZZ
            - EXCHANGE_BIDSWITCH
            - EXCHANGE_BRIGHTROLL_DISPLAY
            - EXCHANGE_CADREON
            - EXCHANGE_DAILYMOTION
            - EXCHANGE_FIVE
            - EXCHANGE_FLUCT
            - EXCHANGE_FREEWHEEL
            - EXCHANGE_GENIEE
            - EXCHANGE_GUMGUM
            - EXCHANGE_IMOBILE
            - EXCHANGE_IBILLBOARD
            - EXCHANGE_IMPROVE_DIGITAL
            - EXCHANGE_INDEX
            - EXCHANGE_KARGO
            - EXCHANGE_MICROAD
            - EXCHANGE_MOPUB
            - EXCHANGE_NEND
            - EXCHANGE_ONE_BY_AOL_DISPLAY
            - EXCHANGE_ONE_BY_AOL_MOBILE
            - EXCHANGE_ONE_BY_AOL_VIDEO
            - EXCHANGE_OOYALA
            - EXCHANGE_OPENX
            - EXCHANGE_PERMODO
            - EXCHANGE_PLATFORMONE
            - EXCHANGE_PLATFORMID
            - EXCHANGE_PUBMATIC
            - EXCHANGE_PULSEPOINT
            - EXCHANGE_REVENUEMAX
            - EXCHANGE_RUBICON
            - EXCHANGE_SMARTCLIP
            - EXCHANGE_SMARTRTB
            - EXCHANGE_SMARTSTREAMTV
            - EXCHANGE_SOVRN
            - EXCHANGE_SPOTXCHANGE
            - EXCHANGE_STROER
            - EXCHANGE_TEADSTV
            - EXCHANGE_TELARIA
            - EXCHANGE_TVN
            - EXCHANGE_UNITED
            - EXCHANGE_YIELDLAB
            - EXCHANGE_YIELDMO
            - EXCHANGE_UNRULYX
            - EXCHANGE_OPEN8
            - EXCHANGE_TRITON
            - EXCHANGE_TRIPLELIFT
            - EXCHANGE_TABOOLA
            - EXCHANGE_INMOBI
            - EXCHANGE_SMAATO
            - EXCHANGE_AJA
            - EXCHANGE_SUPERSHIP
            - EXCHANGE_NEXSTAR_DIGITAL
            - EXCHANGE_WAZE
            - EXCHANGE_SOUNDCAST
            - EXCHANGE_SHARETHROUGH
            - EXCHANGE_FYBER
            - EXCHANGE_RED_FOR_PUBLISHERS
            - EXCHANGE_MEDIANET
            - EXCHANGE_TAPJOY
            - EXCHANGE_VISTAR
            - EXCHANGE_DAX
          readOnly: true
          type: string
      type: object
    ExitEvent:
      description: Exit event of the creative.
      properties:
        name:
          description: The name of the click tag of the exit event. The name must be unique within one creative. Leave it empty or unset for creatives containing image assets only.
          type: string
        reportingName:
          description: The name used to identify this event in reports. Leave it empty or unset for creatives containing image assets only.
          type: string
        type:
          description: Required. The type of the exit event.
          enum:
            - EXIT_EVENT_TYPE_UNSPECIFIED
            - EXIT_EVENT_TYPE_DEFAULT
            - EXIT_EVENT_TYPE_BACKUP
          type: string
        url:
          description: "Required. The click through URL of the exit event. This is required when type is: * `EXIT_EVENT_TYPE_DEFAULT` * `EXIT_EVENT_TYPE_BACKUP`"
          type: string
      type: object
    FirstAndThirdPartyAudience:
      description: Describes a first or third party audience list used for targeting. First party audiences are created via usage of client data. Third party audiences are provided by Third Party data providers and can only be licensed to customers.
      properties:
        activeDisplayAudienceSize:
          description: Output only. The estimated audience size for the Display network in the past month. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
        appId:
          description: The app_id matches with the type of the mobile_device_ids being uploaded. Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`
          type: string
        audienceSource:
          description: Output only. The source of the audience.
          enum:
            - AUDIENCE_SOURCE_UNSPECIFIED
            - DISPLAY_VIDEO_360
            - CAMPAIGN_MANAGER
            - AD_MANAGER
            - SEARCH_ADS_360
            - YOUTUBE
            - ADS_DATA_HUB
          readOnly: true
          type: string
        audienceType:
          description: The type of the audience.
          enum:
            - AUDIENCE_TYPE_UNSPECIFIED
            - CUSTOMER_MATCH_CONTACT_INFO
            - CUSTOMER_MATCH_DEVICE_ID
            - CUSTOMER_MATCH_USER_ID
            - ACTIVITY_BASED
            - FREQUENCY_CAP
            - TAG_BASED
            - YOUTUBE_USERS
            - LICENSED
          type: string
        contactInfoList:
          $ref: "#/components/schemas/ContactInfoList"
          description: Input only. A list of contact information to define the initial audience members. Only applicable to audience_type `CUSTOMER_MATCH_CONTACT_INFO`
        description:
          description: The user-provided description of the audience. Only applicable to first party audiences.
          type: string
        displayAudienceSize:
          description: Output only. The estimated audience size for the Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
        displayDesktopAudienceSize:
          description: Output only. The estimated desktop audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
        displayMobileAppAudienceSize:
          description: Output only. The estimated mobile app audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
        displayMobileWebAudienceSize:
          description: Output only. The estimated mobile web audience size in Display network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: The display name of the first and third party audience.
          type: string
        firstAndThirdPartyAudienceId:
          description: Output only. The unique ID of the first and third party audience. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        firstAndThirdPartyAudienceType:
          description: Whether the audience is a first or third party audience.
          enum:
            - FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_UNSPECIFIED
            - FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_FIRST_PARTY
            - FIRST_AND_THIRD_PARTY_AUDIENCE_TYPE_THIRD_PARTY
          type: string
        gmailAudienceSize:
          description: Output only. The estimated audience size for Gmail network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
        membershipDurationDays:
          description: "The duration in days that an entry remains in the audience after the qualifying event. If the audience has no expiration, set the value of this field to 10000. Otherwise, the set value must be greater than 0 and less than or equal to 540. Only applicable to first party audiences. This field is required if one of the following audience_type is used: * `CUSTOMER_MATCH_CONTACT_INFO` * `CUSTOMER_MATCH_DEVICE_ID`"
          format: int64
          type: string
        mobileDeviceIdList:
          $ref: "#/components/schemas/MobileDeviceIdList"
          description: Input only. A list of mobile device IDs to define the initial audience members. Only applicable to audience_type `CUSTOMER_MATCH_DEVICE_ID`
        name:
          description: Output only. The resource name of the first and third party audience.
          readOnly: true
          type: string
        youtubeAudienceSize:
          description: Output only. The estimated audience size for YouTube network. If the size is less than 1000, the number will be hidden and 0 will be returned due to privacy reasons. Otherwise, the number will be rounded off to two significant digits. Only applicable to first party audiences. Only returned in GET request.
          format: int64
          readOnly: true
          type: string
      type: object
    FirstAndThirdPartyAudienceGroup:
      description: Details of first and third party audience group. All first and third party audience targeting settings are logically ‘OR’ of each other.
      properties:
        settings:
          description: Required. All first and third party audience targeting settings in first and third party audience group. Repeated settings with same id are not allowed.
          items:
            $ref: "#/components/schemas/FirstAndThirdPartyAudienceTargetingSetting"
          type: array
      type: object
    FirstAndThirdPartyAudienceTargetingSetting:
      description: Details of first and third party audience targeting setting.
      properties:
        firstAndThirdPartyAudienceId:
          description: Required. First and third party audience id of the first and third party audience targeting setting. This id is first_and_third_party_audience_id.
          format: int64
          type: string
        recency:
          description: The recency of the first and third party audience targeting setting. Only applicable to first party audiences, otherwise will be ignored. For more info, refer to https://support.google.com/displayvideo/answer/2949947#recency When unspecified, no recency limit will be used.
          enum:
            - RECENCY_NO_LIMIT
            - RECENCY_1_MINUTE
            - RECENCY_5_MINUTES
            - RECENCY_10_MINUTES
            - RECENCY_15_MINUTES
            - RECENCY_30_MINUTES
            - RECENCY_1_HOUR
            - RECENCY_2_HOURS
            - RECENCY_3_HOURS
            - RECENCY_6_HOURS
            - RECENCY_12_HOURS
            - RECENCY_1_DAY
            - RECENCY_2_DAYS
            - RECENCY_3_DAYS
            - RECENCY_5_DAYS
            - RECENCY_7_DAYS
            - RECENCY_10_DAYS
            - RECENCY_14_DAYS
            - RECENCY_15_DAYS
            - RECENCY_21_DAYS
            - RECENCY_28_DAYS
            - RECENCY_30_DAYS
            - RECENCY_40_DAYS
            - RECENCY_45_DAYS
            - RECENCY_60_DAYS
            - RECENCY_90_DAYS
            - RECENCY_120_DAYS
            - RECENCY_180_DAYS
            - RECENCY_270_DAYS
            - RECENCY_365_DAYS
          type: string
      type: object
    FixedBidStrategy:
      description: A strategy that uses a fixed bidding price.
      properties:
        bidAmountMicros:
          description: The fixed bid amount, in micros of the advertiser's currency. For insertion order entity, bid_amount_micros should be set as 0. For line item entity, bid_amount_micros must be greater than or equal to billable unit of the given currency and smaller than or equal to the upper limit 1000000000. For example, 1500000 represents 1.5 standard units of the currency.
          format: int64
          type: string
      type: object
    FloodlightGroup:
      description: A single Floodlight group.
      properties:
        activeViewConfig:
          $ref: "#/components/schemas/ActiveViewVideoViewabilityMetricConfig"
          description: The Active View video viewability metric configuration for the Floodlight group.
        customVariables:
          additionalProperties:
            description: Properties of the object.
          description: 'User-defined custom variables owned by the Floodlight group. Use custom Floodlight variables to create reporting data that is tailored to your unique business needs. Custom Floodlight variables use the keys `U1=`, `U2=`, and so on, and can take any values that you choose to pass to them. You can use them to track virtually any type of data that you collect about your customers, such as the genre of movie that a customer purchases, the country to which the item is shipped, and so on. Custom Floodlight variables may not be used to pass any data that could be used or recognized as personally identifiable information (PII). Example: `custom_variables { fields { "U1": value { number_value: 123.4 }, "U2": value { string_value: "MyVariable2" }, "U3": value { string_value: "MyVariable3" } } }` Acceptable values for keys are "U1" through "U100", inclusive. String values must be less than 64 characters long, and cannot contain the following characters: `"<>`.'
          type: object
        displayName:
          description: Required. The display name of the Floodlight group.
          type: string
        floodlightGroupId:
          description: Output only. The unique ID of the Floodlight group. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        lookbackWindow:
          $ref: "#/components/schemas/LookbackWindow"
          description: Required. The lookback window for the Floodlight group. Both click_days and impression_days are required. Acceptable values for both are `0` to `90`, inclusive.
        name:
          description: Output only. The resource name of the Floodlight group.
          readOnly: true
          type: string
        webTagType:
          description: Required. The web tag type enabled for the Floodlight group.
          enum:
            - WEB_TAG_TYPE_UNSPECIFIED
            - WEB_TAG_TYPE_NONE
            - WEB_TAG_TYPE_IMAGE
            - WEB_TAG_TYPE_DYNAMIC
          type: string
      type: object
    FrequencyCap:
      description: Settings that control the number of times a user may be shown with the same ad during a given time period.
      properties:
        maxImpressions:
          description: The maximum number of times a user may be shown the same ad during this period. Must be greater than 0. Required when unlimited is `false` and max_views is not set.
          format: int32
          type: integer
        timeUnit:
          description: The time unit in which the frequency cap will be applied. Required when unlimited is `false`.
          enum:
            - TIME_UNIT_UNSPECIFIED
            - TIME_UNIT_LIFETIME
            - TIME_UNIT_MONTHS
            - TIME_UNIT_WEEKS
            - TIME_UNIT_DAYS
            - TIME_UNIT_HOURS
            - TIME_UNIT_MINUTES
          type: string
        timeUnitCount:
          description: "The number of time_unit the frequency cap will last. Required when unlimited is `false`. The following restrictions apply based on the value of time_unit: * `TIME_UNIT_LIFETIME` - this field is output only and will default to 1 * `TIME_UNIT_MONTHS` - must be between 1 and 2 * `TIME_UNIT_WEEKS` - must be between 1 and 4 * `TIME_UNIT_DAYS` - must be between 1 and 6 * `TIME_UNIT_HOURS` - must be between 1 and 23 * `TIME_UNIT_MINUTES` - must be between 1 and 59"
          format: int32
          type: integer
        unlimited:
          description: Whether unlimited frequency capping is applied. When this field is set to `true`, the remaining frequency cap fields are not applicable.
          type: boolean
      type: object
    GenderAssignedTargetingOptionDetails:
      description: Details for assigned gender targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_GENDER`.
      properties:
        gender:
          description: The gender of the audience. Output only in v1. Required in v2.
          enum:
            - GENDER_UNSPECIFIED
            - GENDER_MALE
            - GENDER_FEMALE
            - GENDER_UNKNOWN
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_GENDER`.
          type: string
      type: object
    GenderTargetingOptionDetails:
      description: Represents a targetable gender. This will be populated in the gender_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_GENDER`.
      properties:
        gender:
          description: Output only. The gender of an audience.
          enum:
            - GENDER_UNSPECIFIED
            - GENDER_MALE
            - GENDER_FEMALE
            - GENDER_UNKNOWN
          readOnly: true
          type: string
      type: object
    GenerateDefaultLineItemRequest:
      description: Request message for LineItemService.GenerateDefaultLineItem.
      properties:
        displayName:
          description: Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        insertionOrderId:
          description: Required. The unique ID of the insertion order that the line item belongs to.
          format: int64
          type: string
        lineItemType:
          description: Required. The type of the line item.
          enum:
            - LINE_ITEM_TYPE_UNSPECIFIED
            - LINE_ITEM_TYPE_DISPLAY_DEFAULT
            - LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL
            - LINE_ITEM_TYPE_VIDEO_DEFAULT
            - LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL
            - LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY
            - LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY
            - LINE_ITEM_TYPE_AUDIO_DEFAULT
            - LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP
          type: string
        mobileApp:
          $ref: "#/components/schemas/MobileApp"
          description: The mobile app promoted by the line item. This is applicable only when line_item_type is either `LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL` or `LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL`.
      type: object
    GeoRegionAssignedTargetingOptionDetails:
      description: Details for assigned geographic region targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_GEO_REGION`.
      properties:
        displayName:
          description: Output only. The display name of the geographic region (e.g., "Ontario, Canada").
          readOnly: true
          type: string
        geoRegionType:
          description: Output only. The type of geographic region targeting.
          enum:
            - GEO_REGION_TYPE_UNKNOWN
            - GEO_REGION_TYPE_OTHER
            - GEO_REGION_TYPE_COUNTRY
            - GEO_REGION_TYPE_REGION
            - GEO_REGION_TYPE_TERRITORY
            - GEO_REGION_TYPE_PROVINCE
            - GEO_REGION_TYPE_STATE
            - GEO_REGION_TYPE_PREFECTURE
            - GEO_REGION_TYPE_GOVERNORATE
            - GEO_REGION_TYPE_CANTON
            - GEO_REGION_TYPE_UNION_TERRITORY
            - GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY
            - GEO_REGION_TYPE_DMA_REGION
            - GEO_REGION_TYPE_METRO
            - GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT
            - GEO_REGION_TYPE_COUNTY
            - GEO_REGION_TYPE_MUNICIPALITY
            - GEO_REGION_TYPE_CITY
            - GEO_REGION_TYPE_POSTAL_CODE
            - GEO_REGION_TYPE_DEPARTMENT
            - GEO_REGION_TYPE_AIRPORT
            - GEO_REGION_TYPE_TV_REGION
            - GEO_REGION_TYPE_OKRUG
            - GEO_REGION_TYPE_BOROUGH
            - GEO_REGION_TYPE_CITY_REGION
            - GEO_REGION_TYPE_ARRONDISSEMENT
            - GEO_REGION_TYPE_NEIGHBORHOOD
            - GEO_REGION_TYPE_UNIVERSITY
            - GEO_REGION_TYPE_DISTRICT
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_GEO_REGION`.
          type: string
      type: object
    GeoRegionSearchTerms:
      description: Search terms for geo region targeting options.
      properties:
        geoRegionQuery:
          description: The search query for the desired geo region. The query can be a prefix, e.g. "New Yor", "Seattle", "USA", etc.
          type: string
      type: object
    GeoRegionTargetingOptionDetails:
      description: Represents a targetable geographic region. This will be populated in the geo_region_details field when targeting_type is `TARGETING_TYPE_GEO_REGION`.
      properties:
        displayName:
          description: Output only. The display name of the geographic region (e.g., "Ontario, Canada").
          readOnly: true
          type: string
        geoRegionType:
          description: Output only. The type of geographic region targeting.
          enum:
            - GEO_REGION_TYPE_UNKNOWN
            - GEO_REGION_TYPE_OTHER
            - GEO_REGION_TYPE_COUNTRY
            - GEO_REGION_TYPE_REGION
            - GEO_REGION_TYPE_TERRITORY
            - GEO_REGION_TYPE_PROVINCE
            - GEO_REGION_TYPE_STATE
            - GEO_REGION_TYPE_PREFECTURE
            - GEO_REGION_TYPE_GOVERNORATE
            - GEO_REGION_TYPE_CANTON
            - GEO_REGION_TYPE_UNION_TERRITORY
            - GEO_REGION_TYPE_AUTONOMOUS_COMMUNITY
            - GEO_REGION_TYPE_DMA_REGION
            - GEO_REGION_TYPE_METRO
            - GEO_REGION_TYPE_CONGRESSIONAL_DISTRICT
            - GEO_REGION_TYPE_COUNTY
            - GEO_REGION_TYPE_MUNICIPALITY
            - GEO_REGION_TYPE_CITY
            - GEO_REGION_TYPE_POSTAL_CODE
            - GEO_REGION_TYPE_DEPARTMENT
            - GEO_REGION_TYPE_AIRPORT
            - GEO_REGION_TYPE_TV_REGION
            - GEO_REGION_TYPE_OKRUG
            - GEO_REGION_TYPE_BOROUGH
            - GEO_REGION_TYPE_CITY_REGION
            - GEO_REGION_TYPE_ARRONDISSEMENT
            - GEO_REGION_TYPE_NEIGHBORHOOD
            - GEO_REGION_TYPE_UNIVERSITY
            - GEO_REGION_TYPE_DISTRICT
          readOnly: true
          type: string
      type: object
    GoogleAudience:
      description: Describes a Google audience resource. Includes Google audience lists.
      properties:
        displayName:
          description: Output only. The display name of the Google audience. .
          readOnly: true
          type: string
        googleAudienceId:
          description: Output only. The unique ID of the Google audience. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        googleAudienceType:
          description: Output only. The type of Google audience. .
          enum:
            - GOOGLE_AUDIENCE_TYPE_UNSPECIFIED
            - GOOGLE_AUDIENCE_TYPE_AFFINITY
            - GOOGLE_AUDIENCE_TYPE_IN_MARKET
            - GOOGLE_AUDIENCE_TYPE_INSTALLED_APPS
            - GOOGLE_AUDIENCE_TYPE_NEW_MOBILE_DEVICES
            - GOOGLE_AUDIENCE_TYPE_LIFE_EVENT
            - GOOGLE_AUDIENCE_TYPE_EXTENDED_DEMOGRAPHIC
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the google audience.
          readOnly: true
          type: string
      type: object
    GoogleAudienceGroup:
      description: Details of Google audience group. All Google audience targeting settings are logically ‘OR’ of each other.
      properties:
        settings:
          description: Required. All Google audience targeting settings in Google audience group. Repeated settings with same id will be ignored.
          items:
            $ref: "#/components/schemas/GoogleAudienceTargetingSetting"
          type: array
      type: object
    GoogleAudienceTargetingSetting:
      description: Details of Google audience targeting setting.
      properties:
        googleAudienceId:
          description: Required. Google audience id of the Google audience targeting setting. This id is google_audience_id.
          format: int64
          type: string
      type: object
    GoogleBytestreamMedia:
      description: Media resource.
      properties:
        resourceName:
          description: Name of the media resource.
          type: string
      type: object
    GuaranteedOrder:
      description: A guaranteed order. Guaranteed orders are parent entity of guaranteed inventory sources. When creating a guaranteed inventory source, a guaranteed order ID must be assigned to the inventory source.
      properties:
        defaultAdvertiserId:
          description: Output only. The ID of default advertiser of the guaranteed order. The default advertiser is either the read_write_advertiser_id or, if that is not set, the first advertiser listed in read_advertiser_ids. Otherwise, there is no default advertiser.
          format: int64
          readOnly: true
          type: string
        defaultCampaignId:
          description: The ID of the default campaign that is assigned to the guaranteed order. The default campaign must belong to the default advertiser.
          format: int64
          type: string
        displayName:
          description: Required. The display name of the guaranteed order. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        exchange:
          description: Required. Immutable. The exchange where the guaranteed order originated.
          enum:
            - EXCHANGE_UNSPECIFIED
            - EXCHANGE_GOOGLE_AD_MANAGER
            - EXCHANGE_APPNEXUS
            - EXCHANGE_BRIGHTROLL
            - EXCHANGE_ADFORM
            - EXCHANGE_ADMETA
            - EXCHANGE_ADMIXER
            - EXCHANGE_ADSMOGO
            - EXCHANGE_ADSWIZZ
            - EXCHANGE_BIDSWITCH
            - EXCHANGE_BRIGHTROLL_DISPLAY
            - EXCHANGE_CADREON
            - EXCHANGE_DAILYMOTION
            - EXCHANGE_FIVE
            - EXCHANGE_FLUCT
            - EXCHANGE_FREEWHEEL
            - EXCHANGE_GENIEE
            - EXCHANGE_GUMGUM
            - EXCHANGE_IMOBILE
            - EXCHANGE_IBILLBOARD
            - EXCHANGE_IMPROVE_DIGITAL
            - EXCHANGE_INDEX
            - EXCHANGE_KARGO
            - EXCHANGE_MICROAD
            - EXCHANGE_MOPUB
            - EXCHANGE_NEND
            - EXCHANGE_ONE_BY_AOL_DISPLAY
            - EXCHANGE_ONE_BY_AOL_MOBILE
            - EXCHANGE_ONE_BY_AOL_VIDEO
            - EXCHANGE_OOYALA
            - EXCHANGE_OPENX
            - EXCHANGE_PERMODO
            - EXCHANGE_PLATFORMONE
            - EXCHANGE_PLATFORMID
            - EXCHANGE_PUBMATIC
            - EXCHANGE_PULSEPOINT
            - EXCHANGE_REVENUEMAX
            - EXCHANGE_RUBICON
            - EXCHANGE_SMARTCLIP
            - EXCHANGE_SMARTRTB
            - EXCHANGE_SMARTSTREAMTV
            - EXCHANGE_SOVRN
            - EXCHANGE_SPOTXCHANGE
            - EXCHANGE_STROER
            - EXCHANGE_TEADSTV
            - EXCHANGE_TELARIA
            - EXCHANGE_TVN
            - EXCHANGE_UNITED
            - EXCHANGE_YIELDLAB
            - EXCHANGE_YIELDMO
            - EXCHANGE_UNRULYX
            - EXCHANGE_OPEN8
            - EXCHANGE_TRITON
            - EXCHANGE_TRIPLELIFT
            - EXCHANGE_TABOOLA
            - EXCHANGE_INMOBI
            - EXCHANGE_SMAATO
            - EXCHANGE_AJA
            - EXCHANGE_SUPERSHIP
            - EXCHANGE_NEXSTAR_DIGITAL
            - EXCHANGE_WAZE
            - EXCHANGE_SOUNDCAST
            - EXCHANGE_SHARETHROUGH
            - EXCHANGE_FYBER
            - EXCHANGE_RED_FOR_PUBLISHERS
            - EXCHANGE_MEDIANET
            - EXCHANGE_TAPJOY
            - EXCHANGE_VISTAR
            - EXCHANGE_DAX
          type: string
        guaranteedOrderId:
          description: Output only. The unique identifier of the guaranteed order. The guaranteed order IDs have the format `{exchange}-{legacy_guaranteed_order_id}`.
          readOnly: true
          type: string
        legacyGuaranteedOrderId:
          description: Output only. The legacy ID of the guaranteed order. Assigned by the original exchange. The legacy ID is unique within one exchange, but is not guaranteed to be unique across all guaranteed orders. This ID is used in SDF and UI.
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the guaranteed order.
          readOnly: true
          type: string
        publisherName:
          description: Required. The publisher name of the guaranteed order. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        readAccessInherited:
          description: Whether all advertisers of read_write_partner_id have read access to the guaranteed order. Only applicable if read_write_partner_id is set. If True, overrides read_advertiser_ids.
          type: boolean
        readAdvertiserIds:
          description: The IDs of advertisers with read access to the guaranteed order. This field must not include the advertiser assigned to read_write_advertiser_id if it is set. All advertisers in this field must belong to read_write_partner_id or the same partner as read_write_advertiser_id.
          items:
            format: int64
            type: string
          type: array
        readWriteAdvertiserId:
          description: The advertiser with read/write access to the guaranteed order. This is also the default advertiser of the guaranteed order.
          format: int64
          type: string
        readWritePartnerId:
          description: The partner with read/write access to the guaranteed order.
          format: int64
          type: string
        status:
          $ref: "#/components/schemas/GuaranteedOrderStatus"
          description: The status settings of the guaranteed order.
        updateTime:
          description: Output only. The timestamp when the guaranteed order was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    GuaranteedOrderStatus:
      description: The status settings of the guaranteed order.
      properties:
        configStatus:
          description: Output only. The configuration status of the guaranteed order. Acceptable values are `PENDING` and `COMPLETED`. A guaranteed order must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve. Currently the configuration action can only be performed via UI.
          enum:
            - GUARANTEED_ORDER_CONFIG_STATUS_UNSPECIFIED
            - PENDING
            - COMPLETED
          readOnly: true
          type: string
        entityPauseReason:
          description: The user-provided reason for pausing this guaranteed order. Must be UTF-8 encoded with a maximum length of 100 bytes. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.
          type: string
        entityStatus:
          description: Whether or not the guaranteed order is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
      type: object
    HouseholdIncomeAssignedTargetingOptionDetails:
      description: Details for assigned household income targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.
      properties:
        householdIncome:
          description: The household income of the audience. Output only in v1. Required in v2.
          enum:
            - HOUSEHOLD_INCOME_UNSPECIFIED
            - HOUSEHOLD_INCOME_UNKNOWN
            - HOUSEHOLD_INCOME_LOWER_50_PERCENT
            - HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT
            - HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT
            - HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT
            - HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT
            - HOUSEHOLD_INCOME_TOP_10_PERCENT
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_HOUSEHOLD_INCOME`.
          type: string
      type: object
    HouseholdIncomeTargetingOptionDetails:
      description: Represents a targetable household income. This will be populated in the household_income_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_HOUSEHOLD_INCOME`.
      properties:
        householdIncome:
          description: Output only. The household income of an audience.
          enum:
            - HOUSEHOLD_INCOME_UNSPECIFIED
            - HOUSEHOLD_INCOME_UNKNOWN
            - HOUSEHOLD_INCOME_LOWER_50_PERCENT
            - HOUSEHOLD_INCOME_TOP_41_TO_50_PERCENT
            - HOUSEHOLD_INCOME_TOP_31_TO_40_PERCENT
            - HOUSEHOLD_INCOME_TOP_21_TO_30_PERCENT
            - HOUSEHOLD_INCOME_TOP_11_TO_20_PERCENT
            - HOUSEHOLD_INCOME_TOP_10_PERCENT
          readOnly: true
          type: string
      type: object
    IdFilter:
      description: A filtering option that filters entities by their entity IDs.
      properties:
        adGroupAdIds:
          description: YouTube Ads to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
          items:
            format: int64
            type: string
          type: array
        adGroupIds:
          description: YouTube Ad Groups to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
          items:
            format: int64
            type: string
          type: array
        campaignIds:
          description: Campaigns to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
          items:
            format: int64
            type: string
          type: array
        insertionOrderIds:
          description: Insertion Orders to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
          items:
            format: int64
            type: string
          type: array
        lineItemIds:
          description: Line Items to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
          items:
            format: int64
            type: string
          type: array
        mediaProductIds:
          description: Media Products to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest.
          items:
            format: int64
            type: string
          type: array
      type: object
    InsertionOrder:
      description: A single insertion order.
      properties:
        advertiserId:
          description: Output only. The unique ID of the advertiser the insertion order belongs to.
          format: int64
          readOnly: true
          type: string
        bidStrategy:
          $ref: "#/components/schemas/BiddingStrategy"
          description: The bidding strategy of the insertion order. By default, fixed_bid is set.
        billableOutcome:
          description: Immutable. The billable outcome of the insertion order.
          enum:
            - BILLABLE_OUTCOME_UNSPECIFIED
            - BILLABLE_OUTCOME_PAY_PER_IMPRESSION
            - BILLABLE_OUTCOME_PAY_PER_CLICK
            - BILLABLE_OUTCOME_PAY_PER_VIEWABLE_IMPRESSION
          type: string
        budget:
          $ref: "#/components/schemas/InsertionOrderBudget"
          description: Required. The budget allocation settings of the insertion order.
        campaignId:
          description: Required. Immutable. The unique ID of the campaign that the insertion order belongs to.
          format: int64
          type: string
        displayName:
          description: Required. The display name of the insertion order. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        entityStatus:
          description: Required. Controls whether or not the insertion order can spend its budget and bid on inventory. * For CreateInsertionOrder method, only `ENTITY_STATUS_DRAFT` is allowed. To activate an insertion order, use UpdateInsertionOrder method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * An insertion order cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * An insertion order cannot be set to `ENTITY_STATUS_ACTIVE` if its parent campaign is not active.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        frequencyCap:
          $ref: "#/components/schemas/FrequencyCap"
          description: Required. The frequency capping setting of the insertion order.
        insertionOrderId:
          description: Output only. The unique ID of the insertion order. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        insertionOrderType:
          description: The type of insertion order. If this field is unspecified in creation, the value defaults to `RTB`.
          enum:
            - INSERTION_ORDER_TYPE_UNSPECIFIED
            - RTB
            - OVER_THE_TOP
          type: string
        integrationDetails:
          $ref: "#/components/schemas/IntegrationDetails"
          description: Additional integration details of the insertion order.
        name:
          description: Output only. The resource name of the insertion order.
          readOnly: true
          type: string
        pacing:
          $ref: "#/components/schemas/Pacing"
          description: Required. The budget spending speed setting of the insertion order.
        partnerCosts:
          description: The partner costs associated with the insertion order. If absent or empty in CreateInsertionOrder method, the newly created insertion order will inherit partner costs from the partner settings.
          items:
            $ref: "#/components/schemas/PartnerCost"
          type: array
        performanceGoal:
          $ref: "#/components/schemas/PerformanceGoal"
          description: Required. Performance goal of the insertion order.
        reservationType:
          description: Output only. The reservation type of the insertion order.
          enum:
            - RESERVATION_TYPE_UNSPECIFIED
            - RESERVATION_TYPE_NOT_GUARANTEED
            - RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED
            - RESERVATION_TYPE_TAG_GUARANTEED
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the insertion order was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    InsertionOrderBudget:
      description: Settings that control how insertion order budget is allocated.
      properties:
        automationType:
          description: The type of automation used to manage bid and budget for the insertion order. If this field is unspecified in creation, the value defaults to `INSERTION_ORDER_AUTOMATION_TYPE_NONE`.
          enum:
            - INSERTION_ORDER_AUTOMATION_TYPE_UNSPECIFIED
            - INSERTION_ORDER_AUTOMATION_TYPE_BUDGET
            - INSERTION_ORDER_AUTOMATION_TYPE_NONE
            - INSERTION_ORDER_AUTOMATION_TYPE_BID_BUDGET
          type: string
        budgetSegments:
          description: Required. The list of budget segments. Use a budget segment to specify a specific budget for a given period of time an insertion order is running.
          items:
            $ref: "#/components/schemas/InsertionOrderBudgetSegment"
          type: array
        budgetUnit:
          description: Required. Immutable. The budget unit specifies whether the budget is currency based or impression based.
          enum:
            - BUDGET_UNIT_UNSPECIFIED
            - BUDGET_UNIT_CURRENCY
            - BUDGET_UNIT_IMPRESSIONS
          type: string
      type: object
    InsertionOrderBudgetSegment:
      description: Settings that control the budget of a single budget segment.
      properties:
        budgetAmountMicros:
          description: Required. The budget amount the insertion order will spend for the given date_range. The amount is in micros. Must be greater than 0. For example, 500000000 represents 500 standard units of the currency.
          format: int64
          type: string
        campaignBudgetId:
          description: The budget_id of the campaign budget that this insertion order budget segment is a part of.
          format: int64
          type: string
        dateRange:
          $ref: "#/components/schemas/DateRange"
          description: Required. The start and end date settings of the budget segment. They are resolved relative to the parent advertiser's time zone. * When creating a new budget segment, both `start_date` and `end_date` must be in the future. * An existing budget segment with a `start_date` in the past has a mutable `end_date` but an immutable `start_date`. * `end_date` must be the `start_date` or later, both before the year 2037.
        description:
          description: The budget segment description. It can be used to enter Purchase Order information for each budget segment and have that information printed on the invoices. Must be UTF-8 encoded.
          type: string
      type: object
    IntegralAdScience:
      description: Details of Integral Ad Science settings.
      properties:
        customSegmentId:
          description: The custom segment ID provided by Integral Ad Science. The ID must be between `1000001` and `1999999`, inclusive.
          items:
            format: int64
            type: string
          type: array
        displayViewability:
          description: Display Viewability section (applicable to display line items only).
          enum:
            - PERFORMANCE_VIEWABILITY_UNSPECIFIED
            - PERFORMANCE_VIEWABILITY_40
            - PERFORMANCE_VIEWABILITY_50
            - PERFORMANCE_VIEWABILITY_60
            - PERFORMANCE_VIEWABILITY_70
          type: string
        excludeUnrateable:
          description: Brand Safety - **Unrateable**.
          type: boolean
        excludedAdFraudRisk:
          description: Ad Fraud settings.
          enum:
            - SUSPICIOUS_ACTIVITY_UNSPECIFIED
            - SUSPICIOUS_ACTIVITY_HR
            - SUSPICIOUS_ACTIVITY_HMR
          type: string
        excludedAdultRisk:
          description: Brand Safety - **Adult content**.
          enum:
            - ADULT_UNSPECIFIED
            - ADULT_HR
            - ADULT_HMR
          type: string
        excludedAlcoholRisk:
          description: Brand Safety - **Alcohol**.
          enum:
            - ALCOHOL_UNSPECIFIED
            - ALCOHOL_HR
            - ALCOHOL_HMR
          type: string
        excludedDrugsRisk:
          description: Brand Safety - **Drugs**.
          enum:
            - DRUGS_UNSPECIFIED
            - DRUGS_HR
            - DRUGS_HMR
          type: string
        excludedGamblingRisk:
          description: Brand Safety - **Gambling**.
          enum:
            - GAMBLING_UNSPECIFIED
            - GAMBLING_HR
            - GAMBLING_HMR
          type: string
        excludedHateSpeechRisk:
          description: Brand Safety - **Hate speech**.
          enum:
            - HATE_SPEECH_UNSPECIFIED
            - HATE_SPEECH_HR
            - HATE_SPEECH_HMR
          type: string
        excludedIllegalDownloadsRisk:
          description: Brand Safety - **Illegal downloads**.
          enum:
            - ILLEGAL_DOWNLOADS_UNSPECIFIED
            - ILLEGAL_DOWNLOADS_HR
            - ILLEGAL_DOWNLOADS_HMR
          type: string
        excludedOffensiveLanguageRisk:
          description: Brand Safety - **Offensive language**.
          enum:
            - OFFENSIVE_LANGUAGE_UNSPECIFIED
            - OFFENSIVE_LANGUAGE_HR
            - OFFENSIVE_LANGUAGE_HMR
          type: string
        excludedViolenceRisk:
          description: Brand Safety - **Violence**.
          enum:
            - VIOLENCE_UNSPECIFIED
            - VIOLENCE_HR
            - VIOLENCE_HMR
          type: string
        traqScoreOption:
          description: True advertising quality (applicable to Display line items only).
          enum:
            - TRAQ_UNSPECIFIED
            - TRAQ_250
            - TRAQ_500
            - TRAQ_600
            - TRAQ_700
            - TRAQ_750
            - TRAQ_875
            - TRAQ_1000
          type: string
        videoViewability:
          description: Video Viewability Section (applicable to video line items only).
          enum:
            - VIDEO_VIEWABILITY_UNSPECIFIED
            - VIDEO_VIEWABILITY_40
            - VIDEO_VIEWABILITY_50
            - VIDEO_VIEWABILITY_60
            - VIDEO_VIEWABILITY_70
          type: string
      type: object
    IntegrationDetails:
      description: Integration details of an entry.
      properties:
        details:
          description: Additional details of the entry in string format. Must be UTF-8 encoded with a length of no more than 1000 characters.
          type: string
        integrationCode:
          description: An external identifier to be associated with the entry. The integration code will show up together with the entry in many places in the system, for example, reporting. Must be UTF-8 encoded with a length of no more than 500 characters.
          type: string
      type: object
    InventorySource:
      description: An inventory source.
      properties:
        commitment:
          description: Whether the inventory source has a guaranteed or non-guaranteed delivery.
          enum:
            - INVENTORY_SOURCE_COMMITMENT_UNSPECIFIED
            - INVENTORY_SOURCE_COMMITMENT_GUARANTEED
            - INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED
          type: string
        creativeConfigs:
          description: The creative requirements of the inventory source. Not applicable for auction packages.
          items:
            $ref: "#/components/schemas/CreativeConfig"
          type: array
        dealId:
          description: The ID in the exchange space that uniquely identifies the inventory source. Must be unique across buyers within each exchange but not necessarily unique across exchanges.
          type: string
        deliveryMethod:
          description: The delivery method of the inventory source. * For non-guaranteed inventory sources, the only acceptable value is `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`. * For guaranteed inventory sources, acceptable values are `INVENTORY_SOURCE_DELIVERY_METHOD_TAG` and `INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC`.
          enum:
            - INVENTORY_SOURCE_DELIVERY_METHOD_UNSPECIFIED
            - INVENTORY_SOURCE_DELIVERY_METHOD_PROGRAMMATIC
            - INVENTORY_SOURCE_DELIVERY_METHOD_TAG
          type: string
        displayName:
          description: The display name of the inventory source. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        exchange:
          description: The exchange to which the inventory source belongs.
          enum:
            - EXCHANGE_UNSPECIFIED
            - EXCHANGE_GOOGLE_AD_MANAGER
            - EXCHANGE_APPNEXUS
            - EXCHANGE_BRIGHTROLL
            - EXCHANGE_ADFORM
            - EXCHANGE_ADMETA
            - EXCHANGE_ADMIXER
            - EXCHANGE_ADSMOGO
            - EXCHANGE_ADSWIZZ
            - EXCHANGE_BIDSWITCH
            - EXCHANGE_BRIGHTROLL_DISPLAY
            - EXCHANGE_CADREON
            - EXCHANGE_DAILYMOTION
            - EXCHANGE_FIVE
            - EXCHANGE_FLUCT
            - EXCHANGE_FREEWHEEL
            - EXCHANGE_GENIEE
            - EXCHANGE_GUMGUM
            - EXCHANGE_IMOBILE
            - EXCHANGE_IBILLBOARD
            - EXCHANGE_IMPROVE_DIGITAL
            - EXCHANGE_INDEX
            - EXCHANGE_KARGO
            - EXCHANGE_MICROAD
            - EXCHANGE_MOPUB
            - EXCHANGE_NEND
            - EXCHANGE_ONE_BY_AOL_DISPLAY
            - EXCHANGE_ONE_BY_AOL_MOBILE
            - EXCHANGE_ONE_BY_AOL_VIDEO
            - EXCHANGE_OOYALA
            - EXCHANGE_OPENX
            - EXCHANGE_PERMODO
            - EXCHANGE_PLATFORMONE
            - EXCHANGE_PLATFORMID
            - EXCHANGE_PUBMATIC
            - EXCHANGE_PULSEPOINT
            - EXCHANGE_REVENUEMAX
            - EXCHANGE_RUBICON
            - EXCHANGE_SMARTCLIP
            - EXCHANGE_SMARTRTB
            - EXCHANGE_SMARTSTREAMTV
            - EXCHANGE_SOVRN
            - EXCHANGE_SPOTXCHANGE
            - EXCHANGE_STROER
            - EXCHANGE_TEADSTV
            - EXCHANGE_TELARIA
            - EXCHANGE_TVN
            - EXCHANGE_UNITED
            - EXCHANGE_YIELDLAB
            - EXCHANGE_YIELDMO
            - EXCHANGE_UNRULYX
            - EXCHANGE_OPEN8
            - EXCHANGE_TRITON
            - EXCHANGE_TRIPLELIFT
            - EXCHANGE_TABOOLA
            - EXCHANGE_INMOBI
            - EXCHANGE_SMAATO
            - EXCHANGE_AJA
            - EXCHANGE_SUPERSHIP
            - EXCHANGE_NEXSTAR_DIGITAL
            - EXCHANGE_WAZE
            - EXCHANGE_SOUNDCAST
            - EXCHANGE_SHARETHROUGH
            - EXCHANGE_FYBER
            - EXCHANGE_RED_FOR_PUBLISHERS
            - EXCHANGE_MEDIANET
            - EXCHANGE_TAPJOY
            - EXCHANGE_VISTAR
            - EXCHANGE_DAX
          type: string
        guaranteedOrderId:
          description: Immutable. The ID of the guaranteed order that this inventory source belongs to. Only applicable when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`.
          type: string
        inventorySourceId:
          description: Output only. The unique ID of the inventory source. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        inventorySourceProductType:
          description: Output only. The product type of the inventory source, denoting the way through which it sells inventory.
          enum:
            - INVENTORY_SOURCE_PRODUCT_TYPE_UNSPECIFIED
            - PREFERRED_DEAL
            - PRIVATE_AUCTION
            - PROGRAMMATIC_GUARANTEED
            - TAG_GUARANTEED
            - YOUTUBE_RESERVE
            - INSTANT_RESERVE
            - GUARANTEED_PACKAGE
            - PROGRAMMATIC_TV
            - AUCTION_PACKAGE
          readOnly: true
          type: string
        inventorySourceType:
          description: Denotes the type of the inventory source.
          enum:
            - INVENTORY_SOURCE_TYPE_UNSPECIFIED
            - INVENTORY_SOURCE_TYPE_PRIVATE
            - INVENTORY_SOURCE_TYPE_AUCTION_PACKAGE
          type: string
        name:
          description: Output only. The resource name of the inventory source.
          readOnly: true
          type: string
        publisherName:
          description: The publisher/seller name of the inventory source.
          type: string
        rateDetails:
          $ref: "#/components/schemas/RateDetails"
          description: Required. The rate details of the inventory source.
        readAdvertiserIds:
          description: Output only. The IDs of advertisers with read-only access to the inventory source.
          items:
            format: int64
            type: string
          readOnly: true
          type: array
        readPartnerIds:
          description: Output only. The IDs of partners with read-only access to the inventory source. All advertisers of partners in this field inherit read-only access to the inventory source.
          items:
            format: int64
            type: string
          readOnly: true
          type: array
        readWriteAccessors:
          $ref: "#/components/schemas/InventorySourceAccessors"
          description: The partner or advertisers that have read/write access to the inventory source. Output only when commitment is `INVENTORY_SOURCE_COMMITMENT_GUARANTEED`, in which case the read/write accessors are inherited from the parent guaranteed order. Required when commitment is `INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED`. If commitment is `INVENTORY_SOURCE_COMMITMENT_NON_GUARANTEED` and a partner is set in this field, all advertisers under this partner will automatically have read-only access to the inventory source. These advertisers will not be included in read_advertiser_ids.
        status:
          $ref: "#/components/schemas/InventorySourceStatus"
          description: The status settings of the inventory source.
        subSitePropertyId:
          description: Immutable. The unique ID of the sub-site property assigned to this inventory source.
          format: int64
          type: string
        timeRange:
          $ref: "#/components/schemas/TimeRange"
          description: The time range when this inventory source starts and stops serving.
        updateTime:
          description: Output only. The timestamp when the inventory source was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    InventorySourceAccessors:
      description: The partner or advertisers with access to the inventory source.
      properties:
        advertisers:
          $ref: "#/components/schemas/InventorySourceAccessorsAdvertiserAccessors"
          description: The advertisers with access to the inventory source. All advertisers must belong to the same partner.
        partner:
          $ref: "#/components/schemas/InventorySourceAccessorsPartnerAccessor"
          description: The partner with access to the inventory source.
      type: object
    InventorySourceAccessorsAdvertiserAccessors:
      description: The advertisers with access to the inventory source.
      properties:
        advertiserIds:
          description: The IDs of the advertisers.
          items:
            format: int64
            type: string
          type: array
      type: object
    InventorySourceAccessorsPartnerAccessor:
      description: The partner with access to the inventory source.
      properties:
        partnerId:
          description: The ID of the partner.
          format: int64
          type: string
      type: object
    InventorySourceAssignedTargetingOptionDetails:
      description: Targeting details for inventory source. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE`.
      properties:
        inventorySourceId:
          description: Required. ID of the inventory source. Should refer to the inventory_source_id field of an InventorySource resource.
          format: int64
          type: string
      type: object
    InventorySourceDisplayCreativeConfig:
      description: The configuration for display creatives.
      properties:
        creativeSize:
          $ref: "#/components/schemas/Dimensions"
          description: The size requirements for display creatives that can be assigned to the inventory source.
      type: object
    InventorySourceFilter:
      description: A filtering option for filtering on Inventory Source entities.
      properties:
        inventorySourceIds:
          description: Inventory Sources to download by ID. All IDs must belong to the same Advertiser or Partner specified in CreateSdfDownloadTaskRequest. Leave empty to download all Inventory Sources for the selected Advertiser or Partner.
          items:
            format: int64
            type: string
          type: array
      type: object
    InventorySourceGroup:
      description: A collection of targetable inventory sources.
      properties:
        displayName:
          description: Required. The display name of the inventory source group. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        inventorySourceGroupId:
          description: Output only. The unique ID of the inventory source group. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the inventory source group.
          readOnly: true
          type: string
      type: object
    InventorySourceGroupAssignedTargetingOptionDetails:
      description: Targeting details for inventory source group. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_INVENTORY_SOURCE_GROUP`.
      properties:
        inventorySourceGroupId:
          description: Required. ID of the inventory source group. Should refer to the inventory_source_group_id field of an InventorySourceGroup resource.
          format: int64
          type: string
      type: object
    InventorySourceStatus:
      description: The status related settings of the inventory source.
      properties:
        configStatus:
          description: Output only. The configuration status of the inventory source. Only applicable for guaranteed inventory sources. Acceptable values are `INVENTORY_SOURCE_CONFIG_STATUS_PENDING` and `INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED`. An inventory source must be configured (fill in the required fields, choose creatives, and select a default campaign) before it can serve.
          enum:
            - INVENTORY_SOURCE_CONFIG_STATUS_UNSPECIFIED
            - INVENTORY_SOURCE_CONFIG_STATUS_PENDING
            - INVENTORY_SOURCE_CONFIG_STATUS_COMPLETED
          readOnly: true
          type: string
        entityPauseReason:
          description: The user-provided reason for pausing this inventory source. Must not exceed 100 characters. Only applicable when entity_status is set to `ENTITY_STATUS_PAUSED`.
          type: string
        entityStatus:
          description: Whether or not the inventory source is servable. Acceptable values are `ENTITY_STATUS_ACTIVE`, `ENTITY_STATUS_ARCHIVED`, and `ENTITY_STATUS_PAUSED`. Default value is `ENTITY_STATUS_ACTIVE`.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        sellerPauseReason:
          description: Output only. The seller-provided reason for pausing this inventory source. Only applicable for inventory sources synced directly from the publishers and when seller_status is set to `ENTITY_STATUS_PAUSED`.
          readOnly: true
          type: string
        sellerStatus:
          description: Output only. The status set by the seller for the inventory source. Only applicable for inventory sources synced directly from the publishers. Acceptable values are `ENTITY_STATUS_ACTIVE` and `ENTITY_STATUS_PAUSED`.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          readOnly: true
          type: string
      type: object
    InventorySourceVideoCreativeConfig:
      description: The configuration for video creatives.
      properties:
        duration:
          description: The duration requirements for the video creatives that can be assigned to the inventory source.
          format: google-duration
          type: string
      type: object
    Invoice:
      description: A single invoice.
      properties:
        budgetInvoiceGroupingId:
          description: The budget grouping ID for this invoice. This field will only be set if the invoice level of the corresponding billing profile was set to "Budget invoice grouping ID".
          type: string
        budgetSummaries:
          description: The list of summarized information for each budget associated with this invoice. This field will only be set if the invoice detail level of the corresponding billing profile was set to "Budget level PO".
          items:
            $ref: "#/components/schemas/BudgetSummary"
          type: array
        correctedInvoiceId:
          description: The ID of the original invoice being adjusted by this invoice, if applicable. May appear on the invoice PDF as `Reference invoice number`. If replaced_invoice_ids is set, this field will be empty.
          type: string
        currencyCode:
          description: The currency used in the invoice in ISO 4217 format.
          type: string
        displayName:
          description: The display name of the invoice.
          type: string
        dueDate:
          $ref: "#/components/schemas/Date"
          description: The date when the invoice is due.
        invoiceId:
          description: The unique ID of the invoice.
          type: string
        invoiceType:
          description: The type of invoice document.
          enum:
            - INVOICE_TYPE_UNSPECIFIED
            - INVOICE_TYPE_CREDIT
            - INVOICE_TYPE_INVOICE
          type: string
        issueDate:
          $ref: "#/components/schemas/Date"
          description: The date when the invoice was issued.
        name:
          description: The resource name of the invoice.
          type: string
        nonBudgetMicros:
          description: The total amount of costs or adjustments not tied to a particular budget, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
        paymentsAccountId:
          description: The ID of the payments account the invoice belongs to. Appears on the invoice PDF as `Billing Account Number`.
          type: string
        paymentsProfileId:
          description: The ID of the payments profile the invoice belongs to. Appears on the invoice PDF as `Billing ID`.
          type: string
        pdfUrl:
          description: "The URL to download a PDF copy of the invoice. This URL is user specific and requires a valid OAuth 2.0 access token to access. The access token must be provided in an `Authorization: Bearer` HTTP header and be authorized for one of the following scopes: * `https://www.googleapis.com/auth/display-video-mediaplanning` * `https://www.googleapis.com/auth/display-video` The URL will be valid for 7 days after retrieval of this invoice object or until this invoice is retrieved again."
          type: string
        purchaseOrderNumber:
          description: Purchase order number associated with the invoice.
          type: string
        replacedInvoiceIds:
          description: The ID(s) of any originally issued invoice that is being cancelled by this invoice, if applicable. Multiple invoices may be listed if those invoices are being consolidated into a single invoice. May appear on invoice PDF as `Replaced invoice numbers`. If corrected_invoice_id is set, this field will be empty.
          items:
            type: string
          type: array
        serviceDateRange:
          $ref: "#/components/schemas/DateRange"
          description: The service start and end dates which are covered by this invoice.
        subtotalAmountMicros:
          description: The pre-tax subtotal amount, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
        totalAmountMicros:
          description: The invoice total amount, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
        totalTaxAmountMicros:
          description: The sum of all taxes in invoice, in micros of the invoice's currency. For example, if currency_code is `USD`, then 1000000 represents one US dollar.
          format: int64
          type: string
      type: object
    KeywordAssignedTargetingOptionDetails:
      description: Details for assigned keyword targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_KEYWORD`.
      properties:
        keyword:
          description: Required. The keyword, for example `car insurance`. Positive keyword cannot be offensive word. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10.
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
      type: object
    LanguageAssignedTargetingOptionDetails:
      description: Details for assigned language targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_LANGUAGE`.
      properties:
        displayName:
          description: Output only. The display name of the language (e.g., "French").
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted. All assigned language targeting options on the same resource must have the same value for this field.
          type: boolean
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_LANGUAGE`.
          type: string
      type: object
    LanguageTargetingOptionDetails:
      description: Represents a targetable language. This will be populated in the language_details field when targeting_type is `TARGETING_TYPE_LANGUAGE`.
      properties:
        displayName:
          description: Output only. The display name of the language (e.g., "French").
          readOnly: true
          type: string
      type: object
    LineItem:
      description: A single line item.
      properties:
        advertiserId:
          description: Output only. The unique ID of the advertiser the line item belongs to.
          format: int64
          readOnly: true
          type: string
        bidStrategy:
          $ref: "#/components/schemas/BiddingStrategy"
          description: Required. The bidding strategy of the line item.
        budget:
          $ref: "#/components/schemas/LineItemBudget"
          description: Required. The budget allocation setting of the line item.
        campaignId:
          description: Output only. The unique ID of the campaign that the line item belongs to.
          format: int64
          readOnly: true
          type: string
        conversionCounting:
          $ref: "#/components/schemas/ConversionCountingConfig"
          description: The conversion tracking setting of the line item.
        creativeIds:
          description: The IDs of the creatives associated with the line item.
          items:
            format: int64
            type: string
          type: array
        displayName:
          description: Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        entityStatus:
          description: Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          type: string
        excludeNewExchanges:
          description: Whether to exclude new exchanges from automatically being targeted by the line item. This field is false by default.
          type: boolean
        flight:
          $ref: "#/components/schemas/LineItemFlight"
          description: Required. The start and end time of the line item's flight.
        frequencyCap:
          $ref: "#/components/schemas/FrequencyCap"
          description: Required. The impression frequency cap settings of the line item. The max_impressions field in this settings object must be used if assigning a limited cap.
        insertionOrderId:
          description: Required. Immutable. The unique ID of the insertion order that the line item belongs to.
          format: int64
          type: string
        integrationDetails:
          $ref: "#/components/schemas/IntegrationDetails"
          description: Integration details of the line item.
        inventorySourceIds:
          description: The IDs of the private inventory sources assigned to the line item.
          items:
            format: int64
            type: string
          type: array
        lineItemId:
          description: Output only. The unique ID of the line item. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        lineItemType:
          description: Required. Immutable. The type of the line item.
          enum:
            - LINE_ITEM_TYPE_UNSPECIFIED
            - LINE_ITEM_TYPE_DISPLAY_DEFAULT
            - LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL
            - LINE_ITEM_TYPE_VIDEO_DEFAULT
            - LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL
            - LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INVENTORY
            - LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INVENTORY
            - LINE_ITEM_TYPE_AUDIO_DEFAULT
            - LINE_ITEM_TYPE_VIDEO_OVER_THE_TOP
          type: string
        mobileApp:
          $ref: "#/components/schemas/MobileApp"
          description: The mobile app promoted by the line item. This is applicable only when line_item_type is either `LINE_ITEM_TYPE_DISPLAY_MOBILE_APP_INSTALL` or `LINE_ITEM_TYPE_VIDEO_MOBILE_APP_INSTALL`.
        name:
          description: Output only. The resource name of the line item.
          readOnly: true
          type: string
        pacing:
          $ref: "#/components/schemas/Pacing"
          description: Required. The budget spending speed setting of the line item.
        partnerCosts:
          description: The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order.
          items:
            $ref: "#/components/schemas/PartnerCost"
          type: array
        partnerRevenueModel:
          $ref: "#/components/schemas/PartnerRevenueModel"
          description: Required. The partner revenue model setting of the line item.
        reservationType:
          description: Output only. The reservation type of the line item.
          enum:
            - RESERVATION_TYPE_UNSPECIFIED
            - RESERVATION_TYPE_NOT_GUARANTEED
            - RESERVATION_TYPE_PROGRAMMATIC_GUARANTEED
            - RESERVATION_TYPE_TAG_GUARANTEED
          readOnly: true
          type: string
        targetingExpansion:
          $ref: "#/components/schemas/TargetingExpansionConfig"
          description: The [targeting expansion](//support.google.com/displayvideo/answer/10191558) settings of the line item. This config is only applicable when eligible audience list targeting is assigned to the line item. Beginning November 7, 2022, these settings may represent the [optimized targeting feature](//support.google.com/displayvideo/answer/12060859) in place of targeting expansion. This feature will be rolled out to all partners by November 9, 2022.
        updateTime:
          description: Output only. The timestamp when the line item was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
        warningMessages:
          description: Output only. The warning messages generated by the line item. These warnings do not block saving the line item, but some may block the line item from running.
          items:
            enum:
              - LINE_ITEM_WARNING_MESSAGE_UNSPECIFIED
              - INVALID_FLIGHT_DATES
              - EXPIRED
              - PENDING_FLIGHT
              - ALL_PARTNER_ENABLED_EXCHANGES_NEGATIVELY_TARGETED
              - INVALID_INVENTORY_SOURCE
              - APP_INVENTORY_INVALID_SITE_TARGETING
              - APP_INVENTORY_INVALID_AUDIENCE_LISTS
              - NO_VALID_CREATIVE
              - PARENT_INSERTION_ORDER_PAUSED
              - PARENT_INSERTION_ORDER_EXPIRED
              - NO_POSITIVE_AUDIENCE_LIST_TARGETED
              - APP_INSTALL_NO_CONVERSION_PIXEL
              - TARGETING_REVOKED_OR_CLOSED_USER_LIST
              - APP_INSTALL_NO_OPTIMAL_BIDDING_STRATEGY
              - CREATIVE_SIZE_NOT_IN_USE_FOR_TARGETED_DEALS
              - NO_CREATIVE_FOR_TARGETED_DEALS
              - TARGETING_DEPRECATED_GEO_TARGET
            type: string
          readOnly: true
          type: array
      type: object
    LineItemBudget:
      description: Settings that control how budget is allocated.
      properties:
        budgetAllocationType:
          description: Required. The type of the budget allocation. `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC` is only applicable when automatic budget allocation is enabled for the parent insertion order.
          enum:
            - LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNSPECIFIED
            - LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC
            - LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED
            - LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED
          type: string
        budgetUnit:
          description: Output only. The budget unit specifies whether the budget is currency based or impression based. This value is inherited from the parent insertion order.
          enum:
            - BUDGET_UNIT_UNSPECIFIED
            - BUDGET_UNIT_CURRENCY
            - BUDGET_UNIT_IMPRESSIONS
          readOnly: true
          type: string
        maxAmount:
          description: "The maximum budget amount the line item will spend. Must be greater than 0. When budget_allocation_type is: * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_AUTOMATIC`, this field is immutable and is set by the system. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_FIXED`, if budget_unit is: - `BUDGET_UNIT_CURRENCY`, this field represents maximum budget amount to spend, in micros of the advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. - `BUDGET_UNIT_IMPRESSIONS`, this field represents the maximum number of impressions to serve. * `LINE_ITEM_BUDGET_ALLOCATION_TYPE_UNLIMITED`, this field is not applicable and will be ignored by the system."
          format: int64
          type: string
      type: object
    LineItemFlight:
      description: Settings that control the active duration of a line item.
      properties:
        dateRange:
          $ref: "#/components/schemas/DateRange"
          description: The flight start and end dates of the line item. They are resolved relative to the parent advertiser's time zone. * Required when flight_date_type is `LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM`. Output only otherwise. * When creating a new flight, both `start_date` and `end_date` must be in the future. * An existing flight with a `start_date` in the past has a mutable `end_date` but an immutable `start_date`. * `end_date` must be the `start_date` or later, both before the year 2037.
        flightDateType:
          description: Required. The type of the line item's flight dates.
          enum:
            - LINE_ITEM_FLIGHT_DATE_TYPE_UNSPECIFIED
            - LINE_ITEM_FLIGHT_DATE_TYPE_INHERITED
            - LINE_ITEM_FLIGHT_DATE_TYPE_CUSTOM
            - LINE_ITEM_FLIGHT_DATE_TYPE_TRIGGER
          type: string
        triggerId:
          description: The ID of the manual trigger associated with the line item. * Required when flight_date_type is `LINE_ITEM_FLIGHT_DATE_TYPE_TRIGGER`. Must not be set otherwise. * When set, the line item's flight dates are inherited from its parent insertion order. * Active line items will spend when the selected trigger is activated within the parent insertion order's flight dates.
          format: int64
          type: string
      type: object
    ListAdvertiserAssignedTargetingOptionsResponse:
      description: Response message for ListAdvertiserAssignedTargetingOptions.
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListAdvertiserAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    ListAdvertisersResponse:
      properties:
        advertisers:
          description: The list of advertisers. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Advertiser"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAdvertisers` method to retrieve the next page of results.
          type: string
      type: object
    ListAssignedInventorySourcesResponse:
      description: Response message for AssignedInventorySourceService.ListAssignedInventorySources.
      properties:
        assignedInventorySources:
          description: The list of assigned inventory sources. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedInventorySource"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAssignedInventorySources` method to retrieve the next page of results.
          type: string
      type: object
    ListAssignedLocationsResponse:
      description: Response message for AssignedLocationService.ListAssignedLocations.
      properties:
        assignedLocations:
          description: The list of assigned locations. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedLocation"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListAssignedLocations` method to retrieve the next page of results.
          type: string
      type: object
    ListCampaignAssignedTargetingOptionsResponse:
      description: Response message for ListCampaignAssignedTargetingOptions.
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListCampaignAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    ListCampaignsResponse:
      properties:
        campaigns:
          description: The list of campaigns. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Campaign"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCampaigns` method to retrieve the next page of results.
          type: string
      type: object
    ListChannelsResponse:
      properties:
        channels:
          description: The list of channels. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Channel"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListChannels` method to retrieve the next page of results.
          type: string
      type: object
    ListCombinedAudiencesResponse:
      properties:
        combinedAudiences:
          description: The list of combined audiences. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/CombinedAudience"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCombinedAudiences` method to retrieve the next page of results.
          type: string
      type: object
    ListCreativesResponse:
      properties:
        creatives:
          description: The list of creatives. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Creative"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCreativesRequest` method to retrieve the next page of results. If this field is null, it means this is the last page.
          type: string
      type: object
    ListCustomBiddingAlgorithmsResponse:
      properties:
        customBiddingAlgorithms:
          description: The list of custom bidding algorithms. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/CustomBiddingAlgorithm"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomBiddingAlgorithmsRequest` method to retrieve the next page of results. If this field is null, it means this is the last page.
          type: string
      type: object
    ListCustomBiddingScriptsResponse:
      properties:
        customBiddingScripts:
          description: The list of custom bidding scripts. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/CustomBiddingScript"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomBiddingScriptsRequest` method to retrieve the next page of results. If this field is null, it means this is the last page.
          type: string
      type: object
    ListCustomListsResponse:
      properties:
        customLists:
          description: The list of custom lists. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/CustomList"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListCustomLists` method to retrieve the next page of results.
          type: string
      type: object
    ListFirstAndThirdPartyAudiencesResponse:
      properties:
        firstAndThirdPartyAudiences:
          description: The list of first and third party audiences. Audience size properties will not be included. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/FirstAndThirdPartyAudience"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListFirstAndThirdPartyAudiences` method to retrieve the next page of results.
          type: string
      type: object
    ListGoogleAudiencesResponse:
      properties:
        googleAudiences:
          description: The list of Google audiences. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/GoogleAudience"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListGoogleAudiences` method to retrieve the next page of results.
          type: string
      type: object
    ListGuaranteedOrdersResponse:
      properties:
        guaranteedOrders:
          description: The list of guaranteed orders. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/GuaranteedOrder"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListGuaranteedOrders` method to retrieve the next page of results.
          type: string
      type: object
    ListInsertionOrderAssignedTargetingOptionsResponse:
      description: Response message for ListInsertionOrderAssignedTargetingOptions.
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListInsertionOrderAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    ListInsertionOrdersResponse:
      properties:
        insertionOrders:
          description: The list of insertion orders. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/InsertionOrder"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInsertionOrders` method to retrieve the next page of results.
          type: string
      type: object
    ListInventorySourceGroupsResponse:
      description: Response message for InventorySourceGroupService.ListInventorySourceGroups.
      properties:
        inventorySourceGroups:
          description: The list of inventory source groups. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/InventorySourceGroup"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInventorySourceGroups` method to retrieve the next page of results.
          type: string
      type: object
    ListInventorySourcesResponse:
      properties:
        inventorySources:
          description: The list of inventory sources. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/InventorySource"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInventorySources` method to retrieve the next page of results.
          type: string
      type: object
    ListInvoicesResponse:
      properties:
        invoices:
          description: The list of invoices. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Invoice"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListInvoices` method to retrieve the next page of results. This token will be absent if there are no more invoices to return.
          type: string
      type: object
    ListLineItemAssignedTargetingOptionsResponse:
      description: Response message for ListLineItemAssignedTargetingOptions.
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListLineItemAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    ListLineItemsResponse:
      properties:
        lineItems:
          description: The list of line items. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/LineItem"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListLineItems` method to retrieve the next page of results.
          type: string
      type: object
    ListLocationListsResponse:
      properties:
        locationLists:
          description: The list of location lists. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/LocationList"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListLocationLists` method to retrieve the next page of results.
          type: string
      type: object
    ListManualTriggersResponse:
      properties:
        manualTriggers:
          description: The list of manual triggers. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/ManualTrigger"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListManualTriggers` method to retrieve the next page of results.
          type: string
      type: object
    ListNegativeKeywordListsResponse:
      description: Response message for NegativeKeywordListService.ListNegativeKeywordLists.
      properties:
        negativeKeywordLists:
          description: The list of negative keyword lists. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/NegativeKeywordList"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywordLists` method to retrieve the next page of results.
          type: string
      type: object
    ListNegativeKeywordsResponse:
      description: Response message for NegativeKeywordService.ListNegativeKeywords.
      properties:
        negativeKeywords:
          description: The list of negative keywords. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/NegativeKeyword"
          type: array
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListNegativeKeywords` method to retrieve the next page of results.
          type: string
      type: object
    ListPartnerAssignedTargetingOptionsResponse:
      properties:
        assignedTargetingOptions:
          description: The list of assigned targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/AssignedTargetingOption"
          type: array
        nextPageToken:
          description: A token identifying the next page of results. This value should be specified as the pageToken in a subsequent ListPartnerAssignedTargetingOptionsRequest to fetch the next page of results. This token will be absent if there are no more assigned_targeting_options to return.
          type: string
      type: object
    ListPartnersResponse:
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListPartners` method to retrieve the next page of results.
          type: string
        partners:
          description: The list of partners. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Partner"
          type: array
      type: object
    ListSitesResponse:
      description: Response message for SiteService.ListSites.
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListSites` method to retrieve the next page of results.
          type: string
        sites:
          description: The list of sites. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/Site"
          type: array
      type: object
    ListTargetingOptionsResponse:
      description: Response message for ListTargetingOptions.
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListTargetingOptions` method to retrieve the next page of results.
          type: string
        targetingOptions:
          description: The list of targeting options. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/TargetingOption"
          type: array
      type: object
    ListUsersResponse:
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `ListUsers` method to retrieve the next page of results. This token will be absent if there are no more results to return.
          type: string
        users:
          description: The list of users. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/User"
          type: array
      type: object
    LocationList:
      description: A list of locations used for targeting.
      properties:
        advertiserId:
          description: Required. Immutable. The unique ID of the advertiser the location list belongs to.
          format: int64
          type: string
        displayName:
          description: Required. The display name of the location list. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        locationListId:
          description: Output only. The unique ID of the location list. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        locationType:
          description: Required. Immutable. The type of location. All locations in the list will share this type.
          enum:
            - TARGETING_LOCATION_TYPE_UNSPECIFIED
            - TARGETING_LOCATION_TYPE_PROXIMITY
            - TARGETING_LOCATION_TYPE_REGIONAL
          type: string
        name:
          description: Output only. The resource name of the location list.
          readOnly: true
          type: string
      type: object
    LookbackWindow:
      description: Specifies how many days into the past to look when determining whether to record a conversion.
      properties:
        clickDays:
          description: Lookback window, in days, from the last time a given user clicked on one of your ads.
          format: int32
          type: integer
        impressionDays:
          description: Lookback window, in days, from the last time a given user viewed one of your ads.
          format: int32
          type: integer
      type: object
    LookupInvoiceCurrencyResponse:
      properties:
        currencyCode:
          description: Currency used by the advertiser in ISO 4217 format.
          type: string
      type: object
    ManualTrigger:
      description: A single manual trigger in Display & Video 360.
      properties:
        activationDurationMinutes:
          description: Required. The maximum duration of each activation in minutes. Must be between 1 and 360 inclusive. After this duration, the trigger will be automatically deactivated.
          format: int64
          type: string
        advertiserId:
          description: Required. Immutable. The unique ID of the advertiser that the manual trigger belongs to.
          format: int64
          type: string
        displayName:
          description: Required. The display name of the manual trigger. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        latestActivationTime:
          description: Output only. The timestamp of the trigger's latest activation.
          format: google-datetime
          readOnly: true
          type: string
        name:
          description: Output only. The resource name of the manual trigger.
          readOnly: true
          type: string
        state:
          description: Output only. The state of the manual trigger. Will be set to the `INACTIVE` state upon creation.
          enum:
            - STATE_UNSPECIFIED
            - INACTIVE
            - ACTIVE
          readOnly: true
          type: string
        triggerId:
          description: Output only. The unique ID of the manual trigger.
          format: int64
          readOnly: true
          type: string
      type: object
    MaximizeSpendBidStrategy:
      description: A strategy that automatically adjusts the bid to optimize a specified performance goal while spending the full budget.
      properties:
        customBiddingAlgorithmId:
          description: The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
          format: int64
          type: string
        maxAverageCpmBidAmountMicros:
          description: The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. For example, 1500000 represents 1.5 standard units of the currency.
          format: int64
          type: string
        performanceGoalType:
          description: Required. The type of the performance goal that the bidding strategy tries to minimize while spending the full budget. `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` is not supported for this strategy.
          enum:
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED
          type: string
        raiseBidForDeals:
          description: Whether the strategy takes deal floor prices into account.
          type: boolean
      type: object
    MeasurementConfig:
      description: Measurement settings of a partner.
      properties:
        dv360ToCmCostReportingEnabled:
          description: Whether or not to report DV360 cost to CM360.
          type: boolean
        dv360ToCmDataSharingEnabled:
          description: Whether or not to include DV360 data in CM360 data transfer reports.
          type: boolean
      type: object
    MobileApp:
      description: A mobile app promoted by a mobile app install line item.
      properties:
        appId:
          description: Required. The ID of the app provided by the platform store. Android apps are identified by the bundle ID used by Android's Play store, such as `com.google.android.gm`. iOS apps are identified by a nine-digit app ID used by Apple's App store, such as `422689480`.
          type: string
        displayName:
          description: Output only. The app name.
          readOnly: true
          type: string
        platform:
          description: Output only. The app platform.
          enum:
            - PLATFORM_UNSPECIFIED
            - IOS
            - ANDROID
          readOnly: true
          type: string
        publisher:
          description: Output only. The app publisher.
          readOnly: true
          type: string
      type: object
    MobileDeviceIdList:
      description: Wrapper message for a list of mobile device IDs defining Customer Match audience members.
      properties:
        mobileDeviceIds:
          description: A list of mobile device IDs defining Customer Match audience members. The size of mobile_device_ids mustn't be greater than 500,000.
          items:
            type: string
          type: array
      type: object
    Money:
      description: Represents an amount of money with its currency type.
      properties:
        currencyCode:
          description: The three-letter currency code defined in ISO 4217.
          type: string
        nanos:
          description: Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
          format: int32
          type: integer
        units:
          description: The whole units of the amount. For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
          format: int64
          type: string
      type: object
    NativeContentPositionAssignedTargetingOptionDetails:
      description: Details for native content position assigned targeting option. This will be populated in the native_content_position_details field when targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`. Explicitly targeting all options is not supported. Remove all native content position targeting options to achieve this effect.
      properties:
        contentPosition:
          description: The content position. Output only in v1. Required in v2.
          enum:
            - NATIVE_CONTENT_POSITION_UNSPECIFIED
            - NATIVE_CONTENT_POSITION_UNKNOWN
            - NATIVE_CONTENT_POSITION_IN_ARTICLE
            - NATIVE_CONTENT_POSITION_IN_FEED
            - NATIVE_CONTENT_POSITION_PERIPHERAL
            - NATIVE_CONTENT_POSITION_RECOMMENDATION
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.
          type: string
      type: object
    NativeContentPositionTargetingOptionDetails:
      description: Represents a targetable native content position. This will be populated in the native_content_position_details field when targeting_type is `TARGETING_TYPE_NATIVE_CONTENT_POSITION`.
      properties:
        contentPosition:
          description: Output only. The content position.
          enum:
            - NATIVE_CONTENT_POSITION_UNSPECIFIED
            - NATIVE_CONTENT_POSITION_UNKNOWN
            - NATIVE_CONTENT_POSITION_IN_ARTICLE
            - NATIVE_CONTENT_POSITION_IN_FEED
            - NATIVE_CONTENT_POSITION_PERIPHERAL
            - NATIVE_CONTENT_POSITION_RECOMMENDATION
          readOnly: true
          type: string
      type: object
    NegativeKeyword:
      description: A negatively targeted keyword that belongs to a negative keyword list.
      properties:
        keywordValue:
          description: Required. Immutable. The negatively targeted keyword, for example `car insurance`. Must be UTF-8 encoded with a maximum size of 255 bytes. Maximum number of characters is 80. Maximum number of words is 10. Valid characters are restricted to ASCII characters only. The only URL-escaping permitted is for representing whitespace between words. Leading or trailing whitespace is ignored.
          type: string
        name:
          description: Output only. The resource name of the negative keyword.
          readOnly: true
          type: string
      type: object
    NegativeKeywordList:
      description: A list of negative keywords used for targeting.
      properties:
        advertiserId:
          description: Output only. The unique ID of the advertiser the negative keyword list belongs to.
          format: int64
          readOnly: true
          type: string
        displayName:
          description: Required. The display name of the negative keyword list. Must be UTF-8 encoded with a maximum size of 255 bytes.
          type: string
        name:
          description: Output only. The resource name of the negative keyword list.
          readOnly: true
          type: string
        negativeKeywordListId:
          description: Output only. The unique ID of the negative keyword list. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        targetedLineItemCount:
          description: Output only. Number of line items that are directly targeting this negative keyword list.
          format: int64
          readOnly: true
          type: string
      type: object
    NegativeKeywordListAssignedTargetingOptionDetails:
      description: Targeting details for negative keyword list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_NEGATIVE_KEYWORD_LIST`.
      properties:
        negativeKeywordListId:
          description: Required. ID of the negative keyword list. Should refer to the negative_keyword_list_id field of a NegativeKeywordList resource.
          format: int64
          type: string
      type: object
    ObaIcon:
      description: OBA Icon for a Creative
      properties:
        clickTrackingUrl:
          description: "Required. The click tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
          type: string
        dimensions:
          $ref: "#/components/schemas/Dimensions"
          description: The dimensions of the OBA icon.
        landingPageUrl:
          description: "Required. The landing page URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
          type: string
        position:
          description: The position of the OBA icon on the creative.
          enum:
            - OBA_ICON_POSITION_UNSPECIFIED
            - OBA_ICON_POSITION_UPPER_RIGHT
            - OBA_ICON_POSITION_UPPER_LEFT
            - OBA_ICON_POSITION_LOWER_RIGHT
            - OBA_ICON_POSITION_LOWER_LEFT
          type: string
        program:
          description: "The program of the OBA icon. For example: “AdChoices”."
          type: string
        resourceMimeType:
          description: The MIME type of the OBA icon resource.
          type: string
        resourceUrl:
          description: The URL of the OBA icon resource.
          type: string
        viewTrackingUrl:
          description: "Required. The view tracking URL of the OBA icon. Only URLs of the following domains are allowed: * https://info.evidon.com * https://l.betrad.com"
          type: string
      type: object
    OmidAssignedTargetingOptionDetails:
      description: Represents a targetable Open Measurement enabled inventory type. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_OMID`.
      properties:
        omid:
          description: The type of Open Measurement enabled inventory. Output only in v1. Required in v2.
          enum:
            - OMID_UNSPECIFIED
            - OMID_FOR_MOBILE_DISPLAY_ADS
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_OMID`.
          type: string
      type: object
    OmidTargetingOptionDetails:
      description: Represents a targetable Open Measurement enabled inventory type. This will be populated in the omid_details field when targeting_type is `TARGETING_TYPE_OMID`.
      properties:
        omid:
          description: Output only. The type of Open Measurement enabled inventory.
          enum:
            - OMID_UNSPECIFIED
            - OMID_FOR_MOBILE_DISPLAY_ADS
          readOnly: true
          type: string
      type: object
    OnScreenPositionAssignedTargetingOptionDetails:
      description: On screen position targeting option details. This will be populated in the on_screen_position_details field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
      properties:
        adType:
          description: "Output only. The ad type to target. Only applicable to insertion order targeting and new line items supporting the specified ad type will inherit this targeting option by default. Possible values are: * `AD_TYPE_DISPLAY`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_DISPLAY_DEFAULT`. * `AD_TYPE_VIDEO`, the setting will be inherited by new line item when line_item_type is `LINE_ITEM_TYPE_VIDEO_DEFAULT`."
          enum:
            - AD_TYPE_UNSPECIFIED
            - AD_TYPE_DISPLAY
            - AD_TYPE_VIDEO
            - AD_TYPE_AUDIO
          readOnly: true
          type: string
        onScreenPosition:
          description: Output only. The on screen position.
          enum:
            - ON_SCREEN_POSITION_UNSPECIFIED
            - ON_SCREEN_POSITION_UNKNOWN
            - ON_SCREEN_POSITION_ABOVE_THE_FOLD
            - ON_SCREEN_POSITION_BELOW_THE_FOLD
          readOnly: true
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
          type: string
      type: object
    OnScreenPositionTargetingOptionDetails:
      description: Represents a targetable on screen position, which could be used by display and video ads. This will be populated in the on_screen_position_details field when targeting_type is `TARGETING_TYPE_ON_SCREEN_POSITION`.
      properties:
        onScreenPosition:
          description: Output only. The on screen position.
          enum:
            - ON_SCREEN_POSITION_UNSPECIFIED
            - ON_SCREEN_POSITION_UNKNOWN
            - ON_SCREEN_POSITION_ABOVE_THE_FOLD
            - ON_SCREEN_POSITION_BELOW_THE_FOLD
          readOnly: true
          type: string
      type: object
    OperatingSystemAssignedTargetingOptionDetails:
      description: Assigned operating system targeting option details. This will be populated in the operating_system_details field when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.
      properties:
        displayName:
          description: Output only. The display name of the operating system.
          readOnly: true
          type: string
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        targetingOptionId:
          description: Required. The targeting option ID populated in targeting_option_id field when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.
          type: string
      type: object
    OperatingSystemTargetingOptionDetails:
      description: Represents a targetable operating system. This will be populated in the operating_system_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_OPERATING_SYSTEM`.
      properties:
        displayName:
          description: Output only. The display name of the operating system.
          readOnly: true
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.
          type: object
      type: object
    Pacing:
      description: Settings that control the rate at which a budget is spent.
      properties:
        dailyMaxImpressions:
          description: Maximum number of impressions to serve every day. Applicable when the budget is impression based. Must be greater than 0.
          format: int64
          type: string
        dailyMaxMicros:
          description: "Maximum currency amount to spend every day in micros of advertiser's currency. Applicable when the budget is currency based. Must be greater than 0. For example, for 1.5 standard unit of the currency, set this field to 1500000. The value assigned will be rounded to whole billable units for the relevant currency by the following rules: any positive value less than a single billable unit will be rounded up to one billable unit and any value larger than a single billable unit will be rounded down to the nearest billable value. For example, if the currency's billable unit is 0.01, and this field is set to 10257770, it will round down to 10250000, a value of 10.25. If set to 505, it will round up to 10000, a value of 0.01."
          format: int64
          type: string
        pacingPeriod:
          description: Required. The time period in which the pacing budget will be spent. When automatic budget allocation is enabled at the insertion order via auto_budget_allocation, this field is output only and defaults to `PACING_PERIOD_FLIGHT`.
          enum:
            - PACING_PERIOD_UNSPECIFIED
            - PACING_PERIOD_DAILY
            - PACING_PERIOD_FLIGHT
          type: string
        pacingType:
          description: Required. The type of pacing that defines how the budget amount will be spent across the pacing_period.
          enum:
            - PACING_TYPE_UNSPECIFIED
            - PACING_TYPE_AHEAD
            - PACING_TYPE_ASAP
            - PACING_TYPE_EVEN
          type: string
      type: object
    ParentEntityFilter:
      description: A filtering option that filters on selected file types belonging to a chosen set of filter entities.
      properties:
        fileType:
          description: Required. File types that will be returned.
          items:
            enum:
              - FILE_TYPE_UNSPECIFIED
              - FILE_TYPE_CAMPAIGN
              - FILE_TYPE_MEDIA_PRODUCT
              - FILE_TYPE_INSERTION_ORDER
              - FILE_TYPE_LINE_ITEM
              - FILE_TYPE_AD_GROUP
              - FILE_TYPE_AD
            type: string
          type: array
        filterIds:
          description: The IDs of the specified filter type. This is used to filter entities to fetch. If filter type is not `FILTER_TYPE_NONE`, at least one ID must be specified.
          items:
            format: int64
            type: string
          type: array
        filterType:
          description: Required. Filter type used to filter fetched entities.
          enum:
            - FILTER_TYPE_UNSPECIFIED
            - FILTER_TYPE_NONE
            - FILTER_TYPE_ADVERTISER_ID
            - FILTER_TYPE_CAMPAIGN_ID
            - FILTER_TYPE_MEDIA_PRODUCT_ID
            - FILTER_TYPE_INSERTION_ORDER_ID
            - FILTER_TYPE_LINE_ITEM_ID
          type: string
      type: object
    ParentalStatusAssignedTargetingOptionDetails:
      description: Details for assigned parental status targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.
      properties:
        parentalStatus:
          description: The parental status of the audience. Output only in v1. Required in v2.
          enum:
            - PARENTAL_STATUS_UNSPECIFIED
            - PARENTAL_STATUS_PARENT
            - PARENTAL_STATUS_NOT_A_PARENT
            - PARENTAL_STATUS_UNKNOWN
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_PARENTAL_STATUS`.
          type: string
      type: object
    ParentalStatusTargetingOptionDetails:
      description: Represents a targetable parental status. This will be populated in the parental_status_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_PARENTAL_STATUS`.
      properties:
        parentalStatus:
          description: Output only. The parental status of an audience.
          enum:
            - PARENTAL_STATUS_UNSPECIFIED
            - PARENTAL_STATUS_PARENT
            - PARENTAL_STATUS_NOT_A_PARENT
            - PARENTAL_STATUS_UNKNOWN
          readOnly: true
          type: string
      type: object
    Partner:
      description: A single partner in Display & Video 360 (DV360).
      properties:
        adServerConfig:
          $ref: "#/components/schemas/PartnerAdServerConfig"
          description: Ad server related settings of the partner.
        dataAccessConfig:
          $ref: "#/components/schemas/PartnerDataAccessConfig"
          description: Settings that control how partner data may be accessed.
        displayName:
          description: The display name of the partner. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        entityStatus:
          description: Output only. The status of the partner.
          enum:
            - ENTITY_STATUS_UNSPECIFIED
            - ENTITY_STATUS_ACTIVE
            - ENTITY_STATUS_ARCHIVED
            - ENTITY_STATUS_DRAFT
            - ENTITY_STATUS_PAUSED
            - ENTITY_STATUS_SCHEDULED_FOR_DELETION
          readOnly: true
          type: string
        exchangeConfig:
          $ref: "#/components/schemas/ExchangeConfig"
          description: Settings that control which exchanges are enabled for the partner.
        generalConfig:
          $ref: "#/components/schemas/PartnerGeneralConfig"
          description: General settings of the partner.
        name:
          description: Output only. The resource name of the partner.
          readOnly: true
          type: string
        partnerId:
          description: Output only. The unique ID of the partner. Assigned by the system.
          format: int64
          readOnly: true
          type: string
        updateTime:
          description: Output only. The timestamp when the partner was last updated. Assigned by the system.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    PartnerAdServerConfig:
      description: Ad server related settings of a partner.
      properties:
        measurementConfig:
          $ref: "#/components/schemas/MeasurementConfig"
          description: Measurement settings of a partner.
      type: object
    PartnerCost:
      description: Settings that control a partner cost. A partner cost is any type of expense involved in running a campaign, other than the costs of purchasing impressions (which is called the media cost) and using third-party audience segment data (data fee). Some examples of partner costs include the fees for using DV360, a third-party ad server, or a third-party ad serving verification service.
      properties:
        costType:
          description: Required. The type of the partner cost.
          enum:
            - PARTNER_COST_TYPE_UNSPECIFIED
            - PARTNER_COST_TYPE_ADLOOX
            - PARTNER_COST_TYPE_ADLOOX_PREBID
            - PARTNER_COST_TYPE_ADSAFE
            - PARTNER_COST_TYPE_ADXPOSE
            - PARTNER_COST_TYPE_AGGREGATE_KNOWLEDGE
            - PARTNER_COST_TYPE_AGENCY_TRADING_DESK
            - PARTNER_COST_TYPE_DV360_FEE
            - PARTNER_COST_TYPE_COMSCORE_VCE
            - PARTNER_COST_TYPE_DATA_MANAGEMENT_PLATFORM
            - PARTNER_COST_TYPE_DEFAULT
            - PARTNER_COST_TYPE_DOUBLE_VERIFY
            - PARTNER_COST_TYPE_DOUBLE_VERIFY_PREBID
            - PARTNER_COST_TYPE_EVIDON
            - PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_VIDEO
            - PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE_PREBID
            - PARTNER_COST_TYPE_MEDIA_COST_DATA
            - PARTNER_COST_TYPE_MOAT_VIDEO
            - PARTNER_COST_TYPE_NIELSEN_DAR
            - PARTNER_COST_TYPE_SHOP_LOCAL
            - PARTNER_COST_TYPE_TERACENT
            - PARTNER_COST_TYPE_THIRD_PARTY_AD_SERVER
            - PARTNER_COST_TYPE_TRUST_METRICS
            - PARTNER_COST_TYPE_VIZU
            - PARTNER_COST_TYPE_ADLINGO_FEE
            - PARTNER_COST_TYPE_CUSTOM_FEE_1
            - PARTNER_COST_TYPE_CUSTOM_FEE_2
            - PARTNER_COST_TYPE_CUSTOM_FEE_3
            - PARTNER_COST_TYPE_CUSTOM_FEE_4
            - PARTNER_COST_TYPE_CUSTOM_FEE_5
          type: string
        feeAmount:
          description: The CPM fee amount in micros of advertiser's currency. Applicable when the fee_type is `PARTNER_FEE_TYPE_CPM_FEE`. Must be greater than or equal to 0. For example, for 1.5 standard unit of the advertiser's currency, set this field to 1500000.
          format: int64
          type: string
        feePercentageMillis:
          description: "The media fee percentage in millis (1/1000 of a percent). Applicable when the fee_type is `PARTNER_FEE_TYPE_MEDIA_FEE`. Must be greater than or equal to 0. For example: 100 represents 0.1%."
          format: int64
          type: string
        feeType:
          description: Required. The fee type for this partner cost.
          enum:
            - PARTNER_COST_FEE_TYPE_UNSPECIFIED
            - PARTNER_COST_FEE_TYPE_CPM_FEE
            - PARTNER_COST_FEE_TYPE_MEDIA_FEE
          type: string
        invoiceType:
          description: "The invoice type for this partner cost. * Required when cost_type is one of: - `PARTNER_COST_TYPE_ADLOOX` - `PARTNER_COST_TYPE_DOUBLE_VERIFY` - `PARTNER_COST_TYPE_INTEGRAL_AD_SCIENCE`. * Output only for other types."
          enum:
            - PARTNER_COST_INVOICE_TYPE_UNSPECIFIED
            - PARTNER_COST_INVOICE_TYPE_DV360
            - PARTNER_COST_INVOICE_TYPE_PARTNER
          type: string
      type: object
    PartnerDataAccessConfig:
      description: Settings that control how partner related data may be accessed.
      properties:
        sdfConfig:
          $ref: "#/components/schemas/SdfConfig"
          description: Structured Data Files (SDF) settings for the partner. The SDF configuration for the partner.
      type: object
    PartnerGeneralConfig:
      description: General settings of a partner.
      properties:
        currencyCode:
          description: Immutable. Partner's currency in ISO 4217 format.
          type: string
        timeZone:
          description: "Immutable. The standard TZ database name of the partner's time zone. For example, `America/New_York`. See more at: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
          type: string
      type: object
    PartnerRevenueModel:
      description: Settings that control how partner revenue is calculated.
      properties:
        markupAmount:
          description: Required. The markup amount of the partner revenue model. Must be greater than or equal to 0. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM`, this field represents the CPM markup in micros of advertiser's currency. For example, 1500000 represents 1.5 standard units of the currency. * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP`, this field represents the media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001). * When the markup_type is set to be `PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP`, this field represents the total media cost percent markup in millis. For example, 100 represents 0.1% (decimal 0.001).
          format: int64
          type: string
        markupType:
          description: Required. The markup type of the partner revenue model.
          enum:
            - PARTNER_REVENUE_MODEL_MARKUP_TYPE_UNSPECIFIED
            - PARTNER_REVENUE_MODEL_MARKUP_TYPE_CPM
            - PARTNER_REVENUE_MODEL_MARKUP_TYPE_MEDIA_COST_MARKUP
            - PARTNER_REVENUE_MODEL_MARKUP_TYPE_TOTAL_MEDIA_COST_MARKUP
          type: string
      type: object
    PerformanceGoal:
      description: Settings that control the performance goal of a campaign or insertion order.
      properties:
        performanceGoalAmountMicros:
          description: "The goal amount, in micros of the advertiser's currency. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CPM` * `PERFORMANCE_GOAL_TYPE_CPC` * `PERFORMANCE_GOAL_TYPE_CPA` * `PERFORMANCE_GOAL_TYPE_CPIAVC` * `PERFORMANCE_GOAL_TYPE_VCPM` For example 1500000 represents 1.5 standard units of the currency."
          format: int64
          type: string
        performanceGoalPercentageMicros:
          description: "The decimal representation of the goal percentage in micros. Applicable when performance_goal_type is one of: * `PERFORMANCE_GOAL_TYPE_CTR` * `PERFORMANCE_GOAL_TYPE_VIEWABILITY` * `PERFORMANCE_GOAL_TYPE_CLICK_CVR` * `PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR` * `PERFORMANCE_GOAL_TYPE_VTR` * `PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE` * `PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE` For example, 70000 represents 7% (decimal 0.07)."
          format: int64
          type: string
        performanceGoalString:
          description: A key performance indicator (KPI) string, which can be empty. Must be UTF-8 encoded with a length of no more than 100 characters. Applicable when performance_goal_type is set to `PERFORMANCE_GOAL_TYPE_OTHER`.
          type: string
        performanceGoalType:
          description: Required. The type of the performance goal.
          enum:
            - PERFORMANCE_GOAL_TYPE_UNSPECIFIED
            - PERFORMANCE_GOAL_TYPE_CPM
            - PERFORMANCE_GOAL_TYPE_CPC
            - PERFORMANCE_GOAL_TYPE_CPA
            - PERFORMANCE_GOAL_TYPE_CTR
            - PERFORMANCE_GOAL_TYPE_VIEWABILITY
            - PERFORMANCE_GOAL_TYPE_CPIAVC
            - PERFORMANCE_GOAL_TYPE_CPE
            - PERFORMANCE_GOAL_TYPE_CLICK_CVR
            - PERFORMANCE_GOAL_TYPE_IMPRESSION_CVR
            - PERFORMANCE_GOAL_TYPE_VCPM
            - PERFORMANCE_GOAL_TYPE_VTR
            - PERFORMANCE_GOAL_TYPE_AUDIO_COMPLETION_RATE
            - PERFORMANCE_GOAL_TYPE_VIDEO_COMPLETION_RATE
            - PERFORMANCE_GOAL_TYPE_OTHER
          type: string
      type: object
    PerformanceGoalBidStrategy:
      description: A strategy that automatically adjusts the bid to meet or beat a specified performance goal.
      properties:
        customBiddingAlgorithmId:
          description: The ID of the Custom Bidding Algorithm used by this strategy. Only applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`.
          format: int64
          type: string
        maxAverageCpmBidAmountMicros:
          description: The maximum average CPM that may be bid, in micros of the advertiser's currency. Must be greater than or equal to a billable unit of the given currency. Not applicable when performance_goal_type is set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`. For example, 1500000 represents 1.5 standard units of the currency.
          format: int64
          type: string
        performanceGoalAmountMicros:
          description: "Required. The performance goal the bidding strategy will attempt to meet or beat, in micros of the advertiser's currency or in micro of the ROAS (Return On Advertising Spend) value which is also based on advertiser's currency. Must be greater than or equal to a billable unit of the given currency and smaller or equal to upper bounds. Each performance_goal_type has its upper bound: * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA`, upper bound is 10000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, upper bound is 1000.00 USD. * when performance_goal_type is `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`, upper bound is 1000.00 and lower bound is 0.01. Example: If set to `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM`, the bid price will be based on the probability that each available impression will be viewable. For example, if viewable CPM target is $2 and an impression is 40% likely to be viewable, the bid price will be $0.80 CPM (40% of $2). For example, 1500000 represents 1.5 standard units of the currency or ROAS value."
          format: int64
          type: string
        performanceGoalType:
          description: "Required. The type of the performance goal that the bidding strategy will try to meet or beat. For line item level usage, the value must be one of: * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM` * `BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO`."
          enum:
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPA
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CPC
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_VIEWABLE_CPM
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CUSTOM_ALGO
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_CIVA
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_IVO_TEN
            - BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_AV_VIEWED
          type: string
      type: object
    PoiAssignedTargetingOptionDetails:
      description: Details for assigned POI targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_POI`.
      properties:
        displayName:
          description: Output only. The display name of a POI, e.g. "Times Square", "Space Needle", followed by its full address if available.
          readOnly: true
          type: string
        latitude:
          description: Output only. Latitude of the POI rounding to 6th decimal place.
          format: double
          readOnly: true
          type: number
        longitude:
          description: Output only. Longitude of the POI rounding to 6th decimal place.
          format: double
          readOnly: true
          type: number
        proximityRadiusAmount:
          description: Required. The radius of the area around the POI that will be targeted. The units of the radius are specified by proximity_radius_unit. Must be 1 to 800 if unit is `DISTANCE_UNIT_KILOMETERS` and 1 to 500 if unit is `DISTANCE_UNIT_MILES`.
          format: double
          type: number
        proximityRadiusUnit:
          description: Required. The unit of distance by which the targeting radius is measured.
          enum:
            - DISTANCE_UNIT_UNSPECIFIED
            - DISTANCE_UNIT_MILES
            - DISTANCE_UNIT_KILOMETERS
          type: string
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_POI`. Accepted POI targeting option IDs can be retrieved using SearchTargetingOptions. If targeting a specific latitude/longitude coordinate removed from an address or POI name, you can generate the necessary targeting option ID by rounding the desired coordinate values to the 6th decimal place, removing the decimals, and concatenating the string values separated by a semicolon. For example, you can target the latitude/longitude pair of 40.7414691, -74.003387 using the targeting option ID "40741469;-74003387".
          type: string
      type: object
    PoiSearchTerms:
      description: Search terms for POI targeting options.
      properties:
        poiQuery:
          description: The search query for the desired POI name, street address, or coordinate of the desired POI. The query can be a prefix, e.g. "Times squar", "40.7505045,-73.99562", "315 W 44th St", etc.
          type: string
      type: object
    PoiTargetingOptionDetails:
      description: Represents a targetable point of interest(POI). This will be populated in the poi_details field when targeting_type is `TARGETING_TYPE_POI`.
      properties:
        displayName:
          description: Output only. The display name of a POI(e.g. "Times Square", "Space Needle"), followed by its full address if available.
          readOnly: true
          type: string
        latitude:
          description: Output only. Latitude of the POI rounding to 6th decimal place.
          format: double
          readOnly: true
          type: number
        longitude:
          description: Output only. Longitude of the POI rounding to 6th decimal place.
          format: double
          readOnly: true
          type: number
      type: object
    PrismaConfig:
      description: Settings specific to the Mediaocean Prisma tool.
      properties:
        prismaCpeCode:
          $ref: "#/components/schemas/PrismaCpeCode"
          description: Required. Relevant client, product, and estimate codes from the Mediaocean Prisma tool.
        prismaType:
          description: Required. The Prisma type.
          enum:
            - PRISMA_TYPE_UNSPECIFIED
            - PRISMA_TYPE_DISPLAY
            - PRISMA_TYPE_SEARCH
            - PRISMA_TYPE_VIDEO
            - PRISMA_TYPE_AUDIO
            - PRISMA_TYPE_SOCIAL
            - PRISMA_TYPE_FEE
          type: string
        supplier:
          description: Required. The entity allocated this budget (DSP, site, etc.).
          type: string
      type: object
    PrismaCpeCode:
      description: Google Payments Center supports searching and filtering on the component fields of this code.
      properties:
        prismaClientCode:
          description: The Prisma client code.
          type: string
        prismaEstimateCode:
          description: The Prisma estimate code.
          type: string
        prismaProductCode:
          description: The Prisma product code.
          type: string
      type: object
    ProximityLocationListAssignedTargetingOptionDetails:
      description: Targeting details for proximity location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_PROXIMITY_LOCATION_LIST`.
      properties:
        proximityLocationListId:
          description: Required. ID of the proximity location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_PROXIMITY`.
          format: int64
          type: string
        proximityRadiusRange:
          description: Required. Radius range for proximity location list. This represents the size of the area around a chosen location that will be targeted. `All` proximity location targeting under a single resource must have the same radius range value. Set this value to match any existing targeting. If updated, this field will change the radius range for all proximity targeting under the resource.
          enum:
            - PROXIMITY_RADIUS_RANGE_UNSPECIFIED
            - PROXIMITY_RADIUS_RANGE_SMALL
            - PROXIMITY_RADIUS_RANGE_MEDIUM
            - PROXIMITY_RADIUS_RANGE_LARGE
          type: string
      type: object
    PublisherReviewStatus:
      description: Publisher review status for the creative.
      properties:
        publisherName:
          description: The publisher reviewing the creative.
          type: string
        status:
          description: Status of the publisher review.
          enum:
            - REVIEW_STATUS_UNSPECIFIED
            - REVIEW_STATUS_APPROVED
            - REVIEW_STATUS_REJECTED
            - REVIEW_STATUS_PENDING
          type: string
      type: object
    RateDetails:
      description: The rate related settings of the inventory source.
      properties:
        inventorySourceRateType:
          description: The rate type. Acceptable values are `INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED`, `INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR`, and `INVENTORY_SOURCE_RATE_TYPE_CPD`.
          enum:
            - INVENTORY_SOURCE_RATE_TYPE_UNSPECIFIED
            - INVENTORY_SOURCE_RATE_TYPE_CPM_FIXED
            - INVENTORY_SOURCE_RATE_TYPE_CPM_FLOOR
            - INVENTORY_SOURCE_RATE_TYPE_CPD
            - INVENTORY_SOURCE_RATE_TYPE_FLAT
          type: string
        minimumSpend:
          $ref: "#/components/schemas/Money"
          description: Output only. The amount that the buyer has committed to spending on the inventory source up front. Only applicable for guaranteed inventory sources.
          readOnly: true
        rate:
          $ref: "#/components/schemas/Money"
          description: The rate for the inventory source.
        unitsPurchased:
          description: Required for guaranteed inventory sources. The number of impressions guaranteed by the seller.
          format: int64
          type: string
      type: object
    RegionalLocationListAssignedTargetingOptionDetails:
      description: Targeting details for regional location list. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_REGIONAL_LOCATION_LIST`.
      properties:
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        regionalLocationListId:
          description: Required. ID of the regional location list. Should refer to the location_list_id field of a LocationList resource whose type is `TARGETING_LOCATION_TYPE_REGIONAL`.
          format: int64
          type: string
      type: object
    ReplaceNegativeKeywordsRequest:
      description: Request message for NegativeKeywordService.ReplaceNegativeKeywords.
      properties:
        newNegativeKeywords:
          description: The negative keywords that will replace the existing keywords in the negative keyword list, specified as a list of NegativeKeywords.
          items:
            $ref: "#/components/schemas/NegativeKeyword"
          type: array
      type: object
    ReplaceNegativeKeywordsResponse:
      description: Response message for NegativeKeywordService.ReplaceNegativeKeywords.
      properties:
        negativeKeywords:
          description: The full list of negative keywords now present in the negative keyword list.
          items:
            $ref: "#/components/schemas/NegativeKeyword"
          type: array
      type: object
    ReplaceSitesRequest:
      description: Request message for SiteService.ReplaceSites.
      properties:
        advertiserId:
          description: The ID of the advertiser that owns the parent channel.
          format: int64
          type: string
        newSites:
          description: The sites that will replace the existing sites assigned to the channel, specified as a list of Sites.
          items:
            $ref: "#/components/schemas/Site"
          type: array
        partnerId:
          description: The ID of the partner that owns the parent channel.
          format: int64
          type: string
      type: object
    ReplaceSitesResponse:
      description: Response message for SiteService.ReplaceSites.
      properties:
        sites:
          description: The list of sites in the channel after replacing.
          items:
            $ref: "#/components/schemas/Site"
          type: array
      type: object
    ReviewStatusInfo:
      description: Review statuses for the creative.
      properties:
        approvalStatus:
          description: Represents the basic approval needed for a creative to begin serving. Summary of creative_and_landing_page_review_status and content_and_policy_review_status.
          enum:
            - APPROVAL_STATUS_UNSPECIFIED
            - APPROVAL_STATUS_PENDING_NOT_SERVABLE
            - APPROVAL_STATUS_PENDING_SERVABLE
            - APPROVAL_STATUS_APPROVED_SERVABLE
            - APPROVAL_STATUS_REJECTED_NOT_SERVABLE
          type: string
        contentAndPolicyReviewStatus:
          description: Content and policy review status for the creative.
          enum:
            - REVIEW_STATUS_UNSPECIFIED
            - REVIEW_STATUS_APPROVED
            - REVIEW_STATUS_REJECTED
            - REVIEW_STATUS_PENDING
          type: string
        creativeAndLandingPageReviewStatus:
          description: Creative and landing page review status for the creative.
          enum:
            - REVIEW_STATUS_UNSPECIFIED
            - REVIEW_STATUS_APPROVED
            - REVIEW_STATUS_REJECTED
            - REVIEW_STATUS_PENDING
          type: string
        exchangeReviewStatuses:
          description: Exchange review statuses for the creative.
          items:
            $ref: "#/components/schemas/ExchangeReviewStatus"
          type: array
        publisherReviewStatuses:
          description: Publisher review statuses for the creative.
          items:
            $ref: "#/components/schemas/PublisherReviewStatus"
          type: array
      type: object
    ScriptError:
      description: An error message for a custom bidding script.
      properties:
        column:
          description: The column number in the script where the error was thrown.
          format: int64
          type: string
        errorCode:
          description: The type of error.
          enum:
            - ERROR_CODE_UNSPECIFIED
            - SYNTAX_ERROR
            - DEPRECATED_SYNTAX
            - INTERNAL_ERROR
          type: string
        errorMessage:
          description: The detailed error message.
          type: string
        line:
          description: The line number in the script where the error was thrown.
          format: int64
          type: string
      type: object
    SdfConfig:
      description: Structured Data File (SDF) related settings.
      properties:
        adminEmail:
          description: An administrator email address to which the SDF processing status reports will be sent.
          type: string
        version:
          description: Required. The version of SDF being used.
          enum:
            - SDF_VERSION_UNSPECIFIED
            - SDF_VERSION_3_1
            - SDF_VERSION_4
            - SDF_VERSION_4_1
            - SDF_VERSION_4_2
            - SDF_VERSION_5
            - SDF_VERSION_5_1
            - SDF_VERSION_5_2
            - SDF_VERSION_5_3
            - SDF_VERSION_5_4
            - SDF_VERSION_5_5
          type: string
      type: object
    SdfDownloadTask:
      description: Type for the response returned by [SdfDownloadTaskService.CreateSdfDownloadTask].
      properties:
        resourceName:
          description: A resource name to be used in media.download to Download the prepared files. Resource names have the format `download/sdfdownloadtasks/media/{media_id}`. `media_id` will be made available by the long running operation service once the task status is done.
          type: string
      type: object
    SdfDownloadTaskMetadata:
      description: Type for the metadata returned by [SdfDownloadTaskService.CreateSdfDownloadTask].
      properties:
        createTime:
          description: The time when the operation was created.
          format: google-datetime
          type: string
        endTime:
          description: The time when execution was completed.
          format: google-datetime
          type: string
        version:
          description: The SDF version used to execute this download task.
          enum:
            - SDF_VERSION_UNSPECIFIED
            - SDF_VERSION_3_1
            - SDF_VERSION_4
            - SDF_VERSION_4_1
            - SDF_VERSION_4_2
            - SDF_VERSION_5
            - SDF_VERSION_5_1
            - SDF_VERSION_5_2
            - SDF_VERSION_5_3
            - SDF_VERSION_5_4
            - SDF_VERSION_5_5
          type: string
      type: object
    SearchTargetingOptionsRequest:
      description: Request message for SearchTargetingOptions.
      properties:
        advertiserId:
          description: Required. The Advertiser this request is being made in the context of.
          format: int64
          type: string
        businessChainSearchTerms:
          $ref: "#/components/schemas/BusinessChainSearchTerms"
          description: Search terms for Business Chain targeting options. Can only be used when targeting_type is `TARGETING_TYPE_BUSINESS_CHAIN`.
        geoRegionSearchTerms:
          $ref: "#/components/schemas/GeoRegionSearchTerms"
          description: Search terms for geo region targeting options. Can only be used when targeting_type is `TARGETING_TYPE_GEO_REGION`.
        pageSize:
          description: Requested page size. Must be between `1` and `200`. If unspecified will default to `100`. Returns error code `INVALID_ARGUMENT` if an invalid value is specified.
          format: int32
          type: integer
        pageToken:
          description: A token identifying a page of results the server should return. Typically, this is the value of next_page_token returned from the previous call to `SearchTargetingOptions` method. If not specified, the first page of results will be returned.
          type: string
        poiSearchTerms:
          $ref: "#/components/schemas/PoiSearchTerms"
          description: Search terms for POI targeting options. Can only be used when targeting_type is `TARGETING_TYPE_POI`.
      type: object
    SearchTargetingOptionsResponse:
      description: Response message for SearchTargetingOptions.
      properties:
        nextPageToken:
          description: A token to retrieve the next page of results. Pass this value in the page_token field in the subsequent call to `SearchTargetingOptions` method to retrieve the next page of results.
          type: string
        targetingOptions:
          description: The list of targeting options that match the search criteria. This list will be absent if empty.
          items:
            $ref: "#/components/schemas/TargetingOption"
          type: array
      type: object
    SensitiveCategoryAssignedTargetingOptionDetails:
      description: Targeting details for sensitive category. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.
      properties:
        excludedTargetingOptionId:
          description: Required. ID of the sensitive category to be EXCLUDED.
          type: string
        sensitiveCategory:
          description: Output only. An enum for the DV360 Sensitive category content classifier.
          enum:
            - SENSITIVE_CATEGORY_UNSPECIFIED
            - SENSITIVE_CATEGORY_ADULT
            - SENSITIVE_CATEGORY_DEROGATORY
            - SENSITIVE_CATEGORY_DOWNLOADS_SHARING
            - SENSITIVE_CATEGORY_WEAPONS
            - SENSITIVE_CATEGORY_GAMBLING
            - SENSITIVE_CATEGORY_VIOLENCE
            - SENSITIVE_CATEGORY_SUGGESTIVE
            - SENSITIVE_CATEGORY_PROFANITY
            - SENSITIVE_CATEGORY_ALCOHOL
            - SENSITIVE_CATEGORY_DRUGS
            - SENSITIVE_CATEGORY_TOBACCO
            - SENSITIVE_CATEGORY_POLITICS
            - SENSITIVE_CATEGORY_RELIGION
            - SENSITIVE_CATEGORY_TRAGEDY
            - SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS
            - SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES
            - SENSITIVE_CATEGORY_SHOCKING
          readOnly: true
          type: string
      type: object
    SensitiveCategoryTargetingOptionDetails:
      description: Represents a targetable sensitive category. This will be populated in the sensitive_category_details field of the TargetingOption when targeting_type is `TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION`.
      properties:
        sensitiveCategory:
          description: Output only. An enum for the DV360 Sensitive category content classifier.
          enum:
            - SENSITIVE_CATEGORY_UNSPECIFIED
            - SENSITIVE_CATEGORY_ADULT
            - SENSITIVE_CATEGORY_DEROGATORY
            - SENSITIVE_CATEGORY_DOWNLOADS_SHARING
            - SENSITIVE_CATEGORY_WEAPONS
            - SENSITIVE_CATEGORY_GAMBLING
            - SENSITIVE_CATEGORY_VIOLENCE
            - SENSITIVE_CATEGORY_SUGGESTIVE
            - SENSITIVE_CATEGORY_PROFANITY
            - SENSITIVE_CATEGORY_ALCOHOL
            - SENSITIVE_CATEGORY_DRUGS
            - SENSITIVE_CATEGORY_TOBACCO
            - SENSITIVE_CATEGORY_POLITICS
            - SENSITIVE_CATEGORY_RELIGION
            - SENSITIVE_CATEGORY_TRAGEDY
            - SENSITIVE_CATEGORY_TRANSPORTATION_ACCIDENTS
            - SENSITIVE_CATEGORY_SENSITIVE_SOCIAL_ISSUES
            - SENSITIVE_CATEGORY_SHOCKING
          readOnly: true
          type: string
      type: object
    Site:
      description: A single site. Sites are apps or websites belonging to a channel.
      properties:
        name:
          description: Output only. The resource name of the site.
          readOnly: true
          type: string
        urlOrAppId:
          description: Required. The app ID or URL of the site. Must be UTF-8 encoded with a maximum length of 240 bytes.
          type: string
      type: object
    Status:
      description: "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    SubExchangeAssignedTargetingOptionDetails:
      description: Details for assigned sub-exchange targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`.
      properties:
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_SUB_EXCHANGE`.
          type: string
      type: object
    SubExchangeTargetingOptionDetails:
      description: Represents a targetable sub-exchange. This will be populated in the sub_exchange_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_SUB_EXCHANGE`.
      properties:
        displayName:
          description: Output only. The display name of the sub-exchange.
          readOnly: true
          type: string
      type: object
    TargetingExpansionConfig:
      description: Settings that control the targeting expansion of the line item. Targeting expansion allows the line item to reach a larger audience based on the original audience list and the targeting expansion level. Beginning November 7, 2022, these settings may represent the [optimized targeting feature](//support.google.com/displayvideo/answer/12060859) in place of targeting expansion. This feature will be rolled out to all partners by November 9, 2022.
      properties:
        excludeFirstPartyAudience:
          description: Required. Whether to exclude first-party audiences from use in targeting expansion or optimized targeting. Similar audiences of the excluded first-party lists will not be excluded. Only applicable when a first-party audience is positively targeted (directly or included in a combined audience), otherwise this selection will be ignored.
          type: boolean
        targetingExpansionLevel:
          description: "Required. Magnitude of expansion for applicable targeting under this line item. Beginning November 7, 2022, the behavior of this field will change in the following ways with the replacement of targeting expansion with [optimized targeting](//support.google.com/displayvideo/answer/12060859): * This field will represent the optimized targeting checkbox, with a `NO_EXPANSION` value representing optimized targeting turned off and a `LEAST_EXPANSION` value representing optimized targeting turned on. * `NO_EXPANSION` will be the default value for the field and will be automatically assigned if you do not set the field. * If you set the field to any value other than `NO_EXPANSION`, it will automatically be set to `LEAST_EXPANSION`."
          enum:
            - TARGETING_EXPANSION_LEVEL_UNSPECIFIED
            - NO_EXPANSION
            - LEAST_EXPANSION
            - SOME_EXPANSION
            - BALANCED_EXPANSION
            - MORE_EXPANSION
            - MOST_EXPANSION
          type: string
      type: object
    TargetingOption:
      description: Represents a single targeting option, which is a targetable concept in DV360.
      properties:
        ageRangeDetails:
          $ref: "#/components/schemas/AgeRangeTargetingOptionDetails"
          description: Age range details.
        appCategoryDetails:
          $ref: "#/components/schemas/AppCategoryTargetingOptionDetails"
          description: App category details.
        audioContentTypeDetails:
          $ref: "#/components/schemas/AudioContentTypeTargetingOptionDetails"
          description: Audio content type details.
        authorizedSellerStatusDetails:
          $ref: "#/components/schemas/AuthorizedSellerStatusTargetingOptionDetails"
          description: Authorized seller status resource details.
        browserDetails:
          $ref: "#/components/schemas/BrowserTargetingOptionDetails"
          description: Browser details.
        businessChainDetails:
          $ref: "#/components/schemas/BusinessChainTargetingOptionDetails"
          description: Business chain resource details.
        carrierAndIspDetails:
          $ref: "#/components/schemas/CarrierAndIspTargetingOptionDetails"
          description: Carrier and ISP details.
        categoryDetails:
          $ref: "#/components/schemas/CategoryTargetingOptionDetails"
          description: Category resource details.
        contentDurationDetails:
          $ref: "#/components/schemas/ContentDurationTargetingOptionDetails"
          description: Content duration resource details.
        contentGenreDetails:
          $ref: "#/components/schemas/ContentGenreTargetingOptionDetails"
          description: Content genre resource details.
        contentInstreamPositionDetails:
          $ref: "#/components/schemas/ContentInstreamPositionTargetingOptionDetails"
          description: Content instream position details.
        contentOutstreamPositionDetails:
          $ref: "#/components/schemas/ContentOutstreamPositionTargetingOptionDetails"
          description: Content outstream position details.
        contentStreamTypeDetails:
          $ref: "#/components/schemas/ContentStreamTypeTargetingOptionDetails"
          description: Content stream type resource details.
        deviceMakeModelDetails:
          $ref: "#/components/schemas/DeviceMakeModelTargetingOptionDetails"
          description: Device make and model resource details.
        deviceTypeDetails:
          $ref: "#/components/schemas/DeviceTypeTargetingOptionDetails"
          description: Device type details.
        digitalContentLabelDetails:
          $ref: "#/components/schemas/DigitalContentLabelTargetingOptionDetails"
          description: Digital content label details.
        environmentDetails:
          $ref: "#/components/schemas/EnvironmentTargetingOptionDetails"
          description: Environment details.
        exchangeDetails:
          $ref: "#/components/schemas/ExchangeTargetingOptionDetails"
          description: Exchange details.
        genderDetails:
          $ref: "#/components/schemas/GenderTargetingOptionDetails"
          description: Gender details.
        geoRegionDetails:
          $ref: "#/components/schemas/GeoRegionTargetingOptionDetails"
          description: Geographic region resource details.
        householdIncomeDetails:
          $ref: "#/components/schemas/HouseholdIncomeTargetingOptionDetails"
          description: Household income details.
        languageDetails:
          $ref: "#/components/schemas/LanguageTargetingOptionDetails"
          description: Language resource details.
        name:
          description: Output only. The resource name for this targeting option.
          readOnly: true
          type: string
        nativeContentPositionDetails:
          $ref: "#/components/schemas/NativeContentPositionTargetingOptionDetails"
          description: Native content position details.
        omidDetails:
          $ref: "#/components/schemas/OmidTargetingOptionDetails"
          description: Open Measurement enabled inventory details.
        onScreenPositionDetails:
          $ref: "#/components/schemas/OnScreenPositionTargetingOptionDetails"
          description: On screen position details.
        operatingSystemDetails:
          $ref: "#/components/schemas/OperatingSystemTargetingOptionDetails"
          description: Operating system resources details.
        parentalStatusDetails:
          $ref: "#/components/schemas/ParentalStatusTargetingOptionDetails"
          description: Parental status details.
        poiDetails:
          $ref: "#/components/schemas/PoiTargetingOptionDetails"
          description: POI resource details.
        sensitiveCategoryDetails:
          $ref: "#/components/schemas/SensitiveCategoryTargetingOptionDetails"
          description: Sensitive Category details.
        subExchangeDetails:
          $ref: "#/components/schemas/SubExchangeTargetingOptionDetails"
          description: Sub-exchange details.
        targetingOptionId:
          description: Output only. A unique identifier for this targeting option. The tuple {`targeting_type`, `targeting_option_id`} will be unique.
          readOnly: true
          type: string
        targetingType:
          description: Output only. The type of this targeting option.
          enum:
            - TARGETING_TYPE_UNSPECIFIED
            - TARGETING_TYPE_CHANNEL
            - TARGETING_TYPE_APP_CATEGORY
            - TARGETING_TYPE_APP
            - TARGETING_TYPE_URL
            - TARGETING_TYPE_DAY_AND_TIME
            - TARGETING_TYPE_AGE_RANGE
            - TARGETING_TYPE_REGIONAL_LOCATION_LIST
            - TARGETING_TYPE_PROXIMITY_LOCATION_LIST
            - TARGETING_TYPE_GENDER
            - TARGETING_TYPE_VIDEO_PLAYER_SIZE
            - TARGETING_TYPE_USER_REWARDED_CONTENT
            - TARGETING_TYPE_PARENTAL_STATUS
            - TARGETING_TYPE_CONTENT_INSTREAM_POSITION
            - TARGETING_TYPE_CONTENT_OUTSTREAM_POSITION
            - TARGETING_TYPE_DEVICE_TYPE
            - TARGETING_TYPE_AUDIENCE_GROUP
            - TARGETING_TYPE_BROWSER
            - TARGETING_TYPE_HOUSEHOLD_INCOME
            - TARGETING_TYPE_ON_SCREEN_POSITION
            - TARGETING_TYPE_THIRD_PARTY_VERIFIER
            - TARGETING_TYPE_DIGITAL_CONTENT_LABEL_EXCLUSION
            - TARGETING_TYPE_SENSITIVE_CATEGORY_EXCLUSION
            - TARGETING_TYPE_ENVIRONMENT
            - TARGETING_TYPE_CARRIER_AND_ISP
            - TARGETING_TYPE_OPERATING_SYSTEM
            - TARGETING_TYPE_DEVICE_MAKE_MODEL
            - TARGETING_TYPE_KEYWORD
            - TARGETING_TYPE_NEGATIVE_KEYWORD_LIST
            - TARGETING_TYPE_VIEWABILITY
            - TARGETING_TYPE_CATEGORY
            - TARGETING_TYPE_INVENTORY_SOURCE
            - TARGETING_TYPE_LANGUAGE
            - TARGETING_TYPE_AUTHORIZED_SELLER_STATUS
            - TARGETING_TYPE_GEO_REGION
            - TARGETING_TYPE_INVENTORY_SOURCE_GROUP
            - TARGETING_TYPE_EXCHANGE
            - TARGETING_TYPE_SUB_EXCHANGE
            - TARGETING_TYPE_POI
            - TARGETING_TYPE_BUSINESS_CHAIN
            - TARGETING_TYPE_CONTENT_DURATION
            - TARGETING_TYPE_CONTENT_STREAM_TYPE
            - TARGETING_TYPE_NATIVE_CONTENT_POSITION
            - TARGETING_TYPE_OMID
            - TARGETING_TYPE_AUDIO_CONTENT_TYPE
            - TARGETING_TYPE_CONTENT_GENRE
          readOnly: true
          type: string
        userRewardedContentDetails:
          $ref: "#/components/schemas/UserRewardedContentTargetingOptionDetails"
          description: User rewarded content details.
        videoPlayerSizeDetails:
          $ref: "#/components/schemas/VideoPlayerSizeTargetingOptionDetails"
          description: Video player size details.
        viewabilityDetails:
          $ref: "#/components/schemas/ViewabilityTargetingOptionDetails"
          description: Viewability resource details.
      type: object
    ThirdPartyOnlyConfig:
      description: Settings for advertisers that use third-party ad servers only.
      properties:
        pixelOrderIdReportingEnabled:
          description: Whether or not order ID reporting for pixels is enabled. This value cannot be changed once set to `true`.
          type: boolean
      type: object
    ThirdPartyUrl:
      description: Tracking URLs from third parties to track interactions with an audio or a video creative.
      properties:
        type:
          description: The type of interaction needs to be tracked by the tracking URL
          enum:
            - THIRD_PARTY_URL_TYPE_UNSPECIFIED
            - THIRD_PARTY_URL_TYPE_IMPRESSION
            - THIRD_PARTY_URL_TYPE_CLICK_TRACKING
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_START
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FIRST_QUARTILE
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MIDPOINT
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_THIRD_QUARTILE
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_COMPLETE
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_MUTE
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PAUSE
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_REWIND
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_FULLSCREEN
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_STOP
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_CUSTOM
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_SKIP
            - THIRD_PARTY_URL_TYPE_AUDIO_VIDEO_PROGRESS
          type: string
        url:
          description: Tracking URL used to track the interaction. Provide a URL with optional path or query string, beginning with `https:`. For example, https://www.example.com/path
          type: string
      type: object
    ThirdPartyVerifierAssignedTargetingOptionDetails:
      description: Assigned third party verifier targeting option details. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_THIRD_PARTY_VERIFIER`.
      properties:
        adloox:
          $ref: "#/components/schemas/Adloox"
          description: Third party brand verifier -- Adloox.
        doubleVerify:
          $ref: "#/components/schemas/DoubleVerify"
          description: Third party brand verifier -- DoubleVerify.
        integralAdScience:
          $ref: "#/components/schemas/IntegralAdScience"
          description: Third party brand verifier -- Integral Ad Science.
      type: object
    TimeRange:
      description: A time range.
      properties:
        endTime:
          description: Required. The upper bound of a time range, inclusive.
          format: google-datetime
          type: string
        startTime:
          description: Required. The lower bound of a time range, inclusive.
          format: google-datetime
          type: string
      type: object
    TimerEvent:
      description: Timer event of the creative.
      properties:
        name:
          description: Required. The name of the timer event.
          type: string
        reportingName:
          description: Required. The name used to identify this timer event in reports.
          type: string
      type: object
    TrackingFloodlightActivityConfig:
      description: Settings that control the behavior of a single Floodlight activity config.
      properties:
        floodlightActivityId:
          description: Required. The ID of the Floodlight activity.
          format: int64
          type: string
        postClickLookbackWindowDays:
          description: Required. The number of days after an ad has been clicked in which a conversion may be counted. Must be between 0 and 90 inclusive.
          format: int32
          type: integer
        postViewLookbackWindowDays:
          description: Required. The number of days after an ad has been viewed in which a conversion may be counted. Must be between 0 and 90 inclusive.
          format: int32
          type: integer
      type: object
    Transcode:
      description: Represents information about the transcoded audio or video file.
      properties:
        audioBitRateKbps:
          description: The bit rate for the audio stream of the transcoded video, or the bit rate for the transcoded audio, in kilobits per second.
          format: int64
          type: string
        audioSampleRateHz:
          description: The sample rate for the audio stream of the transcoded video, or the sample rate for the transcoded audio, in hertz.
          format: int64
          type: string
        bitRateKbps:
          description: The transcoding bit rate of the transcoded video, in kilobits per second.
          format: int64
          type: string
        dimensions:
          $ref: "#/components/schemas/Dimensions"
          description: The dimensions of the transcoded video.
        fileSizeBytes:
          description: The size of the transcoded file, in bytes.
          format: int64
          type: string
        frameRate:
          description: The frame rate of the transcoded video, in frames per second.
          format: float
          type: number
        mimeType:
          description: The MIME type of the transcoded file.
          type: string
        name:
          description: The name of the transcoded file.
          type: string
        transcoded:
          description: Indicates if the transcoding was successful.
          type: boolean
      type: object
    UniversalAdId:
      description: A creative identifier provided by a registry that is unique across all platforms. This is part of the VAST 4.0 standard.
      properties:
        id:
          description: The unique creative identifier.
          type: string
        registry:
          description: The registry provides unique creative identifiers.
          enum:
            - UNIVERSAL_AD_REGISTRY_UNSPECIFIED
            - UNIVERSAL_AD_REGISTRY_OTHER
            - UNIVERSAL_AD_REGISTRY_AD_ID
            - UNIVERSAL_AD_REGISTRY_CLEARCAST
            - UNIVERSAL_AD_REGISTRY_DV360
            - UNIVERSAL_AD_REGISTRY_CM
          type: string
      type: object
    UrlAssignedTargetingOptionDetails:
      description: Details for assigned URL targeting option. This will be populated in the details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_URL`.
      properties:
        negative:
          description: Indicates if this option is being negatively targeted.
          type: boolean
        url:
          description: Required. The URL, for example `example.com`. DV360 supports two levels of subdirectory targeting, for example `www.example.com/one-subdirectory-level/second-level`, and five levels of subdomain targeting, for example `five.four.three.two.one.example.com`.
          type: string
      type: object
    User:
      description: A single user in Display & Video 360.
      properties:
        assignedUserRoles:
          description: The assigned user roles. Required in CreateUser. Output only in UpdateUser. Can only be updated through BulkEditAssignedUserRoles.
          items:
            $ref: "#/components/schemas/AssignedUserRole"
          type: array
        displayName:
          description: Required. The display name of the user. Must be UTF-8 encoded with a maximum size of 240 bytes.
          type: string
        email:
          description: Required. Immutable. The email address used to identify the user.
          type: string
        name:
          description: Output only. The resource name of the user.
          readOnly: true
          type: string
        userId:
          description: Output only. The unique ID of the user. Assigned by the system.
          format: int64
          readOnly: true
          type: string
      type: object
    UserRewardedContentAssignedTargetingOptionDetails:
      description: User rewarded content targeting option details. This will be populated in the user_rewarded_content_details field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.
      properties:
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.
          type: string
        userRewardedContent:
          description: Output only. User rewarded content status for video ads.
          enum:
            - USER_REWARDED_CONTENT_UNSPECIFIED
            - USER_REWARDED_CONTENT_USER_REWARDED
            - USER_REWARDED_CONTENT_NOT_USER_REWARDED
          readOnly: true
          type: string
      type: object
    UserRewardedContentTargetingOptionDetails:
      description: Represents a targetable user rewarded content status for video ads only. This will be populated in the user_rewarded_content_details field when targeting_type is `TARGETING_TYPE_USER_REWARDED_CONTENT`.
      properties:
        userRewardedContent:
          description: Output only. User rewarded content status for video ads.
          enum:
            - USER_REWARDED_CONTENT_UNSPECIFIED
            - USER_REWARDED_CONTENT_USER_REWARDED
            - USER_REWARDED_CONTENT_NOT_USER_REWARDED
          readOnly: true
          type: string
      type: object
    VideoPlayerSizeAssignedTargetingOptionDetails:
      description: Video player size targeting option details. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`. Explicitly targeting all options is not supported. Remove all video player size targeting options to achieve this effect.
      properties:
        targetingOptionId:
          description: Required. The targeting_option_id field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.
          type: string
        videoPlayerSize:
          description: The video player size. Output only in v1. Required in v2.
          enum:
            - VIDEO_PLAYER_SIZE_UNSPECIFIED
            - VIDEO_PLAYER_SIZE_SMALL
            - VIDEO_PLAYER_SIZE_LARGE
            - VIDEO_PLAYER_SIZE_HD
            - VIDEO_PLAYER_SIZE_UNKNOWN
          type: string
      type: object
    VideoPlayerSizeTargetingOptionDetails:
      description: Represents a targetable video player size. This will be populated in the video_player_size_details field when targeting_type is `TARGETING_TYPE_VIDEO_PLAYER_SIZE`.
      properties:
        videoPlayerSize:
          description: Output only. The video player size.
          enum:
            - VIDEO_PLAYER_SIZE_UNSPECIFIED
            - VIDEO_PLAYER_SIZE_SMALL
            - VIDEO_PLAYER_SIZE_LARGE
            - VIDEO_PLAYER_SIZE_HD
            - VIDEO_PLAYER_SIZE_UNKNOWN
          readOnly: true
          type: string
      type: object
    ViewabilityAssignedTargetingOptionDetails:
      description: Assigned viewability targeting option details. This will be populated in the viewability_details field of an AssignedTargetingOption when targeting_type is `TARGETING_TYPE_VIEWABILITY`.
      properties:
        targetingOptionId:
          description: Required. The targeting_option_id of a TargetingOption of type `TARGETING_TYPE_VIEWABILITY` (e.g., "509010" for targeting the `VIEWABILITY_10_PERCENT_OR_MORE` option).
          type: string
        viewability:
          description: The predicted viewability percentage. Output only in v1. Required in v2.
          enum:
            - VIEWABILITY_UNSPECIFIED
            - VIEWABILITY_10_PERCENT_OR_MORE
            - VIEWABILITY_20_PERCENT_OR_MORE
            - VIEWABILITY_30_PERCENT_OR_MORE
            - VIEWABILITY_40_PERCENT_OR_MORE
            - VIEWABILITY_50_PERCENT_OR_MORE
            - VIEWABILITY_60_PERCENT_OR_MORE
            - VIEWABILITY_70_PERCENT_OR_MORE
            - VIEWABILITY_80_PERCENT_OR_MORE
            - VIEWABILITY_90_PERCENT_OR_MORE
          type: string
      type: object
    ViewabilityTargetingOptionDetails:
      description: Represents a targetable viewability. This will be populated in the viewability_details field of a TargetingOption when targeting_type is `TARGETING_TYPE_VIEWABILITY`.
      properties:
        viewability:
          description: Output only. The predicted viewability percentage.
          enum:
            - VIEWABILITY_UNSPECIFIED
            - VIEWABILITY_10_PERCENT_OR_MORE
            - VIEWABILITY_20_PERCENT_OR_MORE
            - VIEWABILITY_30_PERCENT_OR_MORE
            - VIEWABILITY_40_PERCENT_OR_MORE
            - VIEWABILITY_50_PERCENT_OR_MORE
            - VIEWABILITY_60_PERCENT_OR_MORE
            - VIEWABILITY_70_PERCENT_OR_MORE
            - VIEWABILITY_80_PERCENT_OR_MORE
            - VIEWABILITY_90_PERCENT_OR_MORE
          readOnly: true
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/display-video: Create, see, edit, and permanently delete your Display & Video 360 entities and reports
            https://www.googleapis.com/auth/display-video-mediaplanning: Create, see, and edit Display & Video 360 Campaign entities and see billing invoices
            https://www.googleapis.com/auth/display-video-user-management: "Private Service: https://www.googleapis.com/auth/display-video-user-management"
            https://www.googleapis.com/auth/doubleclickbidmanager: View and manage your reports in DoubleClick Bid Manager
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/display-video: Create, see, edit, and permanently delete your Display & Video 360 entities and reports
            https://www.googleapis.com/auth/display-video-mediaplanning: Create, see, and edit Display & Video 360 Campaign entities and see billing invoices
            https://www.googleapis.com/auth/display-video-user-management: "Private Service: https://www.googleapis.com/auth/display-video-user-management"
            https://www.googleapis.com/auth/doubleclickbidmanager: View and manage your reports in DoubleClick Bid Manager
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
source:
  url: {}
