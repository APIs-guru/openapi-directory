# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.advertiser_ad_server_config import AdvertiserAdServerConfig

class TestAdvertiserAdServerConfig(unittest.TestCase):
    """AdvertiserAdServerConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvertiserAdServerConfig:
        """Test AdvertiserAdServerConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvertiserAdServerConfig`
        """
        model = AdvertiserAdServerConfig()
        if include_optional:
            return AdvertiserAdServerConfig(
                cm_hybrid_config = openapi_client.models.cm_hybrid_config.CmHybridConfig(
                    cm_account_id = '', 
                    cm_advertiser_ids = [
                        ''
                        ], 
                    cm_floodlight_config_id = '', 
                    cm_floodlight_linking_authorized = True, 
                    cm_syncable_site_ids = [
                        ''
                        ], 
                    dv360_to_cm_cost_reporting_enabled = True, 
                    dv360_to_cm_data_sharing_enabled = True, ),
                third_party_only_config = openapi_client.models.third_party_only_config.ThirdPartyOnlyConfig(
                    pixel_order_id_reporting_enabled = True, )
            )
        else:
            return AdvertiserAdServerConfig(
        )
        """

    def testAdvertiserAdServerConfig(self):
        """Test AdvertiserAdServerConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
