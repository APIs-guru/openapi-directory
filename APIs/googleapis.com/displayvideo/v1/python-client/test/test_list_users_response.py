# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_users_response import ListUsersResponse

class TestListUsersResponse(unittest.TestCase):
    """ListUsersResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListUsersResponse:
        """Test ListUsersResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListUsersResponse`
        """
        model = ListUsersResponse()
        if include_optional:
            return ListUsersResponse(
                next_page_token = '',
                users = [
                    openapi_client.models.user.User(
                        assigned_user_roles = [
                            openapi_client.models.assigned_user_role.AssignedUserRole(
                                advertiser_id = '', 
                                assigned_user_role_id = '', 
                                partner_id = '', 
                                user_role = 'USER_ROLE_UNSPECIFIED', )
                            ], 
                        display_name = '', 
                        email = '', 
                        last_login_time = '', 
                        name = '', 
                        user_id = '', )
                    ]
            )
        else:
            return ListUsersResponse(
        )
        """

    def testListUsersResponse(self):
        """Test ListUsersResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
