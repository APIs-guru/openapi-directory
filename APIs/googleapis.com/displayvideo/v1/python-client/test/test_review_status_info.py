# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.review_status_info import ReviewStatusInfo

class TestReviewStatusInfo(unittest.TestCase):
    """ReviewStatusInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReviewStatusInfo:
        """Test ReviewStatusInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReviewStatusInfo`
        """
        model = ReviewStatusInfo()
        if include_optional:
            return ReviewStatusInfo(
                approval_status = 'APPROVAL_STATUS_UNSPECIFIED',
                content_and_policy_review_status = 'REVIEW_STATUS_UNSPECIFIED',
                creative_and_landing_page_review_status = 'REVIEW_STATUS_UNSPECIFIED',
                exchange_review_statuses = [
                    openapi_client.models.exchange_review_status.ExchangeReviewStatus(
                        exchange = 'EXCHANGE_UNSPECIFIED', 
                        status = 'REVIEW_STATUS_UNSPECIFIED', )
                    ],
                publisher_review_statuses = [
                    openapi_client.models.publisher_review_status.PublisherReviewStatus(
                        publisher_name = '', 
                        status = 'REVIEW_STATUS_UNSPECIFIED', )
                    ]
            )
        else:
            return ReviewStatusInfo(
        )
        """

    def testReviewStatusInfo(self):
        """Test ReviewStatusInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
