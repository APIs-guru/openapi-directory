# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_custom_bidding_scripts_response import ListCustomBiddingScriptsResponse

class TestListCustomBiddingScriptsResponse(unittest.TestCase):
    """ListCustomBiddingScriptsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListCustomBiddingScriptsResponse:
        """Test ListCustomBiddingScriptsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListCustomBiddingScriptsResponse`
        """
        model = ListCustomBiddingScriptsResponse()
        if include_optional:
            return ListCustomBiddingScriptsResponse(
                custom_bidding_scripts = [
                    openapi_client.models.custom_bidding_script.CustomBiddingScript(
                        active = True, 
                        create_time = '', 
                        custom_bidding_algorithm_id = '', 
                        custom_bidding_script_id = '', 
                        errors = [
                            openapi_client.models.script_error.ScriptError(
                                column = '', 
                                error_code = 'ERROR_CODE_UNSPECIFIED', 
                                error_message = '', 
                                line = '', )
                            ], 
                        name = '', 
                        script = openapi_client.models.custom_bidding_script_ref.CustomBiddingScriptRef(
                            resource_name = '', ), 
                        state = 'STATE_UNSPECIFIED', )
                    ],
                next_page_token = ''
            )
        else:
            return ListCustomBiddingScriptsResponse(
        )
        """

    def testListCustomBiddingScriptsResponse(self):
        """Test ListCustomBiddingScriptsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
