# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.non_skippable_ad import NonSkippableAd

class TestNonSkippableAd(unittest.TestCase):
    """NonSkippableAd unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NonSkippableAd:
        """Test NonSkippableAd
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NonSkippableAd`
        """
        model = NonSkippableAd()
        if include_optional:
            return NonSkippableAd(
                common_in_stream_attribute = openapi_client.models.common_in_stream_attribute.CommonInStreamAttribute(
                    action_button_label = '', 
                    action_headline = '', 
                    companion_banner = openapi_client.models.image_asset.ImageAsset(
                        file_size = '', 
                        full_size = openapi_client.models.dimensions.Dimensions(
                            height_pixels = 56, 
                            width_pixels = 56, ), 
                        mime_type = '', ), 
                    display_url = '', 
                    final_url = '', 
                    tracking_url = '', 
                    video = openapi_client.models.youtube_video_details.YoutubeVideoDetails(
                        id = '', 
                        unavailable_reason = 'VIDEO_UNAVAILABLE_REASON_UNSPECIFIED', ), ),
                custom_parameters = {
                    'key' : ''
                    }
            )
        else:
            return NonSkippableAd(
        )
        """

    def testNonSkippableAd(self):
        """Test NonSkippableAd"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
