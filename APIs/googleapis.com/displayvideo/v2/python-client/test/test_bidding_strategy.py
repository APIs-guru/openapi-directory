# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bidding_strategy import BiddingStrategy

class TestBiddingStrategy(unittest.TestCase):
    """BiddingStrategy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BiddingStrategy:
        """Test BiddingStrategy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BiddingStrategy`
        """
        model = BiddingStrategy()
        if include_optional:
            return BiddingStrategy(
                fixed_bid = openapi_client.models.fixed_bid_strategy.FixedBidStrategy(
                    bid_amount_micros = '', ),
                maximize_spend_auto_bid = openapi_client.models.maximize_spend_bid_strategy.MaximizeSpendBidStrategy(
                    custom_bidding_algorithm_id = '', 
                    max_average_cpm_bid_amount_micros = '', 
                    performance_goal_type = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED', 
                    raise_bid_for_deals = True, ),
                performance_goal_auto_bid = openapi_client.models.performance_goal_bid_strategy.PerformanceGoalBidStrategy(
                    custom_bidding_algorithm_id = '', 
                    max_average_cpm_bid_amount_micros = '', 
                    performance_goal_amount_micros = '', 
                    performance_goal_type = 'BIDDING_STRATEGY_PERFORMANCE_GOAL_TYPE_UNSPECIFIED', )
            )
        else:
            return BiddingStrategy(
        )
        """

    def testBiddingStrategy(self):
        """Test BiddingStrategy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
