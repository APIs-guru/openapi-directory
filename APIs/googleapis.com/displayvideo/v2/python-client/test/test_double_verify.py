# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.double_verify import DoubleVerify

class TestDoubleVerify(unittest.TestCase):
    """DoubleVerify unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DoubleVerify:
        """Test DoubleVerify
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DoubleVerify`
        """
        model = DoubleVerify()
        if include_optional:
            return DoubleVerify(
                app_star_rating = openapi_client.models.double_verify_app_star_rating.DoubleVerifyAppStarRating(
                    avoid_insufficient_star_rating = True, 
                    avoided_star_rating = 'APP_STAR_RATE_UNSPECIFIED', ),
                avoided_age_ratings = [
                    'AGE_RATING_UNSPECIFIED'
                    ],
                brand_safety_categories = openapi_client.models.double_verify_brand_safety_categories.DoubleVerifyBrandSafetyCategories(
                    avoid_unknown_brand_safety_category = True, 
                    avoided_high_severity_categories = [
                        'HIGHER_SEVERITY_UNSPECIFIED'
                        ], 
                    avoided_medium_severity_categories = [
                        'MEDIUM_SEVERITY_UNSPECIFIED'
                        ], ),
                custom_segment_id = '',
                display_viewability = openapi_client.models.double_verify_display_viewability.DoubleVerifyDisplayViewability(
                    iab = 'IAB_VIEWED_RATE_UNSPECIFIED', 
                    viewable_during = 'AVERAGE_VIEW_DURATION_UNSPECIFIED', ),
                fraud_invalid_traffic = openapi_client.models.double_verify_fraud_invalid_traffic.DoubleVerifyFraudInvalidTraffic(
                    avoid_insufficient_option = True, 
                    avoided_fraud_option = 'FRAUD_UNSPECIFIED', ),
                video_viewability = openapi_client.models.double_verify_video_viewability.DoubleVerifyVideoViewability(
                    player_impression_rate = 'PLAYER_SIZE_400X300_UNSPECIFIED', 
                    video_iab = 'VIDEO_IAB_UNSPECIFIED', 
                    video_viewable_rate = 'VIDEO_VIEWABLE_RATE_UNSPECIFIED', )
            )
        else:
            return DoubleVerify(
        )
        """

    def testDoubleVerify(self):
        """Test DoubleVerify"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
