# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.edit_inventory_source_read_write_accessors_request import EditInventorySourceReadWriteAccessorsRequest

class TestEditInventorySourceReadWriteAccessorsRequest(unittest.TestCase):
    """EditInventorySourceReadWriteAccessorsRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EditInventorySourceReadWriteAccessorsRequest:
        """Test EditInventorySourceReadWriteAccessorsRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EditInventorySourceReadWriteAccessorsRequest`
        """
        model = EditInventorySourceReadWriteAccessorsRequest()
        if include_optional:
            return EditInventorySourceReadWriteAccessorsRequest(
                advertisers_update = openapi_client.models.edit_inventory_source_read_write_accessors_request_advertisers_update.EditInventorySourceReadWriteAccessorsRequestAdvertisersUpdate(
                    added_advertisers = [
                        ''
                        ], 
                    removed_advertisers = [
                        ''
                        ], ),
                assign_partner = True,
                partner_id = ''
            )
        else:
            return EditInventorySourceReadWriteAccessorsRequest(
        )
        """

    def testEditInventorySourceReadWriteAccessorsRequest(self):
        """Test EditInventorySourceReadWriteAccessorsRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
