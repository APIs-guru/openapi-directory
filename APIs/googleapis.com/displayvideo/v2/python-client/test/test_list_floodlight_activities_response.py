# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_floodlight_activities_response import ListFloodlightActivitiesResponse

class TestListFloodlightActivitiesResponse(unittest.TestCase):
    """ListFloodlightActivitiesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListFloodlightActivitiesResponse:
        """Test ListFloodlightActivitiesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListFloodlightActivitiesResponse`
        """
        model = ListFloodlightActivitiesResponse()
        if include_optional:
            return ListFloodlightActivitiesResponse(
                floodlight_activities = [
                    openapi_client.models.floodlight_activity.FloodlightActivity(
                        advertiser_ids = [
                            ''
                            ], 
                        display_name = '', 
                        floodlight_activity_id = '', 
                        floodlight_group_id = '', 
                        name = '', 
                        remarketing_configs = [
                            openapi_client.models.remarketing_config.RemarketingConfig(
                                advertiser_id = '', 
                                remarketing_enabled = True, )
                            ], 
                        serving_status = 'FLOODLIGHT_ACTIVITY_SERVING_STATUS_UNSPECIFIED', 
                        ssl_required = True, )
                    ],
                next_page_token = ''
            )
        else:
            return ListFloodlightActivitiesResponse(
        )
        """

    def testListFloodlightActivitiesResponse(self):
        """Test ListFloodlightActivitiesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
