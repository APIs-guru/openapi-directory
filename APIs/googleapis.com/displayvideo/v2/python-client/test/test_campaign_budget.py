# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.campaign_budget import CampaignBudget

class TestCampaignBudget(unittest.TestCase):
    """CampaignBudget unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CampaignBudget:
        """Test CampaignBudget
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CampaignBudget`
        """
        model = CampaignBudget()
        if include_optional:
            return CampaignBudget(
                budget_amount_micros = '',
                budget_id = '',
                budget_unit = 'BUDGET_UNIT_UNSPECIFIED',
                date_range = openapi_client.models.date_range.DateRange(
                    end_date = openapi_client.models.date.Date(
                        day = 56, 
                        month = 56, 
                        year = 56, ), 
                    start_date = openapi_client.models.date.Date(
                        day = 56, 
                        month = 56, 
                        year = 56, ), ),
                display_name = '',
                external_budget_id = '',
                external_budget_source = 'EXTERNAL_BUDGET_SOURCE_UNSPECIFIED',
                invoice_grouping_id = '',
                prisma_config = openapi_client.models.prisma_config.PrismaConfig(
                    prisma_cpe_code = openapi_client.models.prisma_cpe_code.PrismaCpeCode(
                        prisma_client_code = '', 
                        prisma_estimate_code = '', 
                        prisma_product_code = '', ), 
                    prisma_type = 'PRISMA_TYPE_UNSPECIFIED', 
                    supplier = '', )
            )
        else:
            return CampaignBudget(
        )
        """

    def testCampaignBudget(self):
        """Test CampaignBudget"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
