# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.integral_ad_science import IntegralAdScience

class TestIntegralAdScience(unittest.TestCase):
    """IntegralAdScience unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IntegralAdScience:
        """Test IntegralAdScience
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IntegralAdScience`
        """
        model = IntegralAdScience()
        if include_optional:
            return IntegralAdScience(
                custom_segment_id = [
                    ''
                    ],
                display_viewability = 'PERFORMANCE_VIEWABILITY_UNSPECIFIED',
                exclude_unrateable = True,
                excluded_ad_fraud_risk = 'SUSPICIOUS_ACTIVITY_UNSPECIFIED',
                excluded_adult_risk = 'ADULT_UNSPECIFIED',
                excluded_alcohol_risk = 'ALCOHOL_UNSPECIFIED',
                excluded_drugs_risk = 'DRUGS_UNSPECIFIED',
                excluded_gambling_risk = 'GAMBLING_UNSPECIFIED',
                excluded_hate_speech_risk = 'HATE_SPEECH_UNSPECIFIED',
                excluded_illegal_downloads_risk = 'ILLEGAL_DOWNLOADS_UNSPECIFIED',
                excluded_offensive_language_risk = 'OFFENSIVE_LANGUAGE_UNSPECIFIED',
                excluded_violence_risk = 'VIOLENCE_UNSPECIFIED',
                traq_score_option = 'TRAQ_UNSPECIFIED',
                video_viewability = 'VIDEO_VIEWABILITY_UNSPECIFIED'
            )
        else:
            return IntegralAdScience(
        )
        """

    def testIntegralAdScience(self):
        """Test IntegralAdScience"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
