# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.edit_customer_match_members_request import EditCustomerMatchMembersRequest

class TestEditCustomerMatchMembersRequest(unittest.TestCase):
    """EditCustomerMatchMembersRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EditCustomerMatchMembersRequest:
        """Test EditCustomerMatchMembersRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EditCustomerMatchMembersRequest`
        """
        model = EditCustomerMatchMembersRequest()
        if include_optional:
            return EditCustomerMatchMembersRequest(
                added_contact_info_list = openapi_client.models.contact_info_list.ContactInfoList(
                    consent = openapi_client.models.consent.Consent(
                        ad_personalization = 'CONSENT_STATUS_UNSPECIFIED', 
                        ad_user_data = 'CONSENT_STATUS_UNSPECIFIED', ), 
                    contact_infos = [
                        openapi_client.models.contact_info.ContactInfo(
                            country_code = '', 
                            hashed_emails = [
                                ''
                                ], 
                            hashed_first_name = '', 
                            hashed_last_name = '', 
                            hashed_phone_numbers = [
                                ''
                                ], 
                            zip_codes = [
                                ''
                                ], )
                        ], ),
                added_mobile_device_id_list = openapi_client.models.mobile_device_id_list.MobileDeviceIdList(
                    consent = openapi_client.models.consent.Consent(
                        ad_personalization = 'CONSENT_STATUS_UNSPECIFIED', 
                        ad_user_data = 'CONSENT_STATUS_UNSPECIFIED', ), 
                    mobile_device_ids = [
                        ''
                        ], ),
                advertiser_id = '',
                removed_contact_info_list = openapi_client.models.contact_info_list.ContactInfoList(
                    consent = openapi_client.models.consent.Consent(
                        ad_personalization = 'CONSENT_STATUS_UNSPECIFIED', 
                        ad_user_data = 'CONSENT_STATUS_UNSPECIFIED', ), 
                    contact_infos = [
                        openapi_client.models.contact_info.ContactInfo(
                            country_code = '', 
                            hashed_emails = [
                                ''
                                ], 
                            hashed_first_name = '', 
                            hashed_last_name = '', 
                            hashed_phone_numbers = [
                                ''
                                ], 
                            zip_codes = [
                                ''
                                ], )
                        ], ),
                removed_mobile_device_id_list = openapi_client.models.mobile_device_id_list.MobileDeviceIdList(
                    consent = openapi_client.models.consent.Consent(
                        ad_personalization = 'CONSENT_STATUS_UNSPECIFIED', 
                        ad_user_data = 'CONSENT_STATUS_UNSPECIFIED', ), 
                    mobile_device_ids = [
                        ''
                        ], )
            )
        else:
            return EditCustomerMatchMembersRequest(
        )
        """

    def testEditCustomerMatchMembersRequest(self):
        """Test EditCustomerMatchMembersRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
