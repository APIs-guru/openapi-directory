# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.invoice import Invoice

class TestInvoice(unittest.TestCase):
    """Invoice unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Invoice:
        """Test Invoice
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Invoice`
        """
        model = Invoice()
        if include_optional:
            return Invoice(
                budget_invoice_grouping_id = '',
                budget_summaries = [
                    openapi_client.models.budget_summary.BudgetSummary(
                        external_budget_id = '', 
                        pre_tax_amount_micros = '', 
                        prisma_cpe_code = openapi_client.models.prisma_cpe_code.PrismaCpeCode(
                            prisma_client_code = '', 
                            prisma_estimate_code = '', 
                            prisma_product_code = '', ), 
                        tax_amount_micros = '', 
                        total_amount_micros = '', )
                    ],
                corrected_invoice_id = '',
                currency_code = '',
                display_name = '',
                due_date = openapi_client.models.date.Date(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                invoice_id = '',
                invoice_type = 'INVOICE_TYPE_UNSPECIFIED',
                issue_date = openapi_client.models.date.Date(
                    day = 56, 
                    month = 56, 
                    year = 56, ),
                name = '',
                non_budget_micros = '',
                payments_account_id = '',
                payments_profile_id = '',
                pdf_url = '',
                purchase_order_number = '',
                replaced_invoice_ids = [
                    ''
                    ],
                service_date_range = openapi_client.models.date_range.DateRange(
                    end_date = openapi_client.models.date.Date(
                        day = 56, 
                        month = 56, 
                        year = 56, ), 
                    start_date = openapi_client.models.date.Date(
                        day = 56, 
                        month = 56, 
                        year = 56, ), ),
                subtotal_amount_micros = '',
                total_amount_micros = '',
                total_tax_amount_micros = ''
            )
        else:
            return Invoice(
        )
        """

    def testInvoice(self):
        """Test Invoice"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
