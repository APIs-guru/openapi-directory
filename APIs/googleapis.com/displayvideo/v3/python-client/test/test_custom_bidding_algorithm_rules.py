# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.custom_bidding_algorithm_rules import CustomBiddingAlgorithmRules

class TestCustomBiddingAlgorithmRules(unittest.TestCase):
    """CustomBiddingAlgorithmRules unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CustomBiddingAlgorithmRules:
        """Test CustomBiddingAlgorithmRules
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CustomBiddingAlgorithmRules`
        """
        model = CustomBiddingAlgorithmRules()
        if include_optional:
            return CustomBiddingAlgorithmRules(
                active = True,
                create_time = '',
                custom_bidding_algorithm_id = '',
                custom_bidding_algorithm_rules_id = '',
                error = openapi_client.models.custom_bidding_algorithm_rules_error.CustomBiddingAlgorithmRulesError(
                    error_code = 'ERROR_CODE_UNSPECIFIED', ),
                name = '',
                rules = openapi_client.models.custom_bidding_algorithm_rules_ref.CustomBiddingAlgorithmRulesRef(
                    resource_name = '', ),
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return CustomBiddingAlgorithmRules(
        )
        """

    def testCustomBiddingAlgorithmRules(self):
        """Test CustomBiddingAlgorithmRules"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
