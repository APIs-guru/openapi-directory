# coding: utf-8

"""
    Display & Video 360 API

    Display & Video 360 API allows users to automate complex Display & Video 360 workflows, such as creating insertion orders and setting targeting options for individual line items.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.algorithm_rules_rule_condition import AlgorithmRulesRuleCondition

class TestAlgorithmRulesRuleCondition(unittest.TestCase):
    """AlgorithmRulesRuleCondition unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlgorithmRulesRuleCondition:
        """Test AlgorithmRulesRuleCondition
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlgorithmRulesRuleCondition`
        """
        model = AlgorithmRulesRuleCondition()
        if include_optional:
            return AlgorithmRulesRuleCondition(
                return_value = openapi_client.models.algorithm_rules_signal_value.AlgorithmRulesSignalValue(
                    number = 1.337, ),
                signal_comparisons = [
                    openapi_client.models.algorithm_rules_signal_comparison.AlgorithmRulesSignalComparison(
                        comparison_operator = 'COMPARISON_OPERATOR_UNSPECIFIED', 
                        comparison_value = openapi_client.models.algorithm_rules_comparison_value.AlgorithmRulesComparisonValue(
                            bool_value = True, 
                            creative_dimension_value = openapi_client.models.dimensions.Dimensions(
                                height_pixels = 56, 
                                width_pixels = 56, ), 
                            day_and_time_value = openapi_client.models.day_and_time.DayAndTime(
                                day_of_week = 'DAY_OF_WEEK_UNSPECIFIED', 
                                hour_of_day = 56, 
                                time_zone_resolution = 'TIME_ZONE_RESOLUTION_UNSPECIFIED', ), 
                            device_type_value = 'RULE_DEVICE_TYPE_UNSPECIFIED', 
                            double_value = 1.337, 
                            environment_value = 'ENVIRONMENT_UNSPECIFIED', 
                            exchange_value = 'EXCHANGE_UNSPECIFIED', 
                            int64_value = '', 
                            on_screen_position_value = 'ON_SCREEN_POSITION_UNSPECIFIED', 
                            string_value = '', ), 
                        signal = openapi_client.models.algorithm_rules_signal.AlgorithmRulesSignal(
                            impression_signal = 'IMPRESSION_SIGNAL_UNSPECIFIED', ), )
                    ]
            )
        else:
            return AlgorithmRulesRuleCondition(
        )
        """

    def testAlgorithmRulesRuleCondition(self):
        """Test AlgorithmRulesRuleCondition"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
