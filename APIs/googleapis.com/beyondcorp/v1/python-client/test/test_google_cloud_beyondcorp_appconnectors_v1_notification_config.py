# coding: utf-8

"""
    BeyondCorp API

    Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_beyondcorp_appconnectors_v1_notification_config import GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig

class TestGoogleCloudBeyondcorpAppconnectorsV1NotificationConfig(unittest.TestCase):
    """GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig:
        """Test GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig`
        """
        model = GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig()
        if include_optional:
            return GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig(
                pubsub_notification = openapi_client.models.google_cloud_beyondcorp_appconnectors_v1_notification_config_cloud_pub_sub_notification_config.GoogleCloudBeyondcorpAppconnectorsV1NotificationConfigCloudPubSubNotificationConfig(
                    pubsub_subscription = '', )
            )
        else:
            return GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig(
        )
        """

    def testGoogleCloudBeyondcorpAppconnectorsV1NotificationConfig(self):
        """Test GoogleCloudBeyondcorpAppconnectorsV1NotificationConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
