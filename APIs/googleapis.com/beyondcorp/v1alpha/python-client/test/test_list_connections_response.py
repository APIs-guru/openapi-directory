# coding: utf-8

"""
    BeyondCorp API

    Beyondcorp Enterprise provides identity and context aware access controls for enterprise resources and enables zero-trust access. Using the Beyondcorp Enterprise APIs, enterprises can set up multi-cloud and on-prem connectivity solutions.

    The version of the OpenAPI document: v1alpha
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_connections_response import ListConnectionsResponse

class TestListConnectionsResponse(unittest.TestCase):
    """ListConnectionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListConnectionsResponse:
        """Test ListConnectionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListConnectionsResponse`
        """
        model = ListConnectionsResponse()
        if include_optional:
            return ListConnectionsResponse(
                connections = [
                    openapi_client.models.connection.Connection(
                        application_endpoint = openapi_client.models.application_endpoint.ApplicationEndpoint(
                            host = '', 
                            port = 56, ), 
                        connectors = [
                            ''
                            ], 
                        create_time = '', 
                        display_name = '', 
                        gateway = openapi_client.models.gateway.Gateway(
                            type = 'TYPE_UNSPECIFIED', 
                            uri = '', 
                            user_port = 56, ), 
                        labels = {
                            'key' : ''
                            }, 
                        name = '', 
                        state = 'STATE_UNSPECIFIED', 
                        type = 'TYPE_UNSPECIFIED', 
                        uid = '', 
                        update_time = '', )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListConnectionsResponse(
        )
        """

    def testListConnectionsResponse(self):
        """Test ListConnectionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
