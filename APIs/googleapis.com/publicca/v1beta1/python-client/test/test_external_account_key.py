# coding: utf-8

"""
    Public Certificate Authority API

    The Public Certificate Authority API may be used to create and manage ACME external account binding keys associated with Google Trust Services' publicly trusted certificate authority. 

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.external_account_key import ExternalAccountKey

class TestExternalAccountKey(unittest.TestCase):
    """ExternalAccountKey unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExternalAccountKey:
        """Test ExternalAccountKey
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExternalAccountKey`
        """
        model = ExternalAccountKey()
        if include_optional:
            return ExternalAccountKey(
                b64_mac_key = 'YQ==',
                key_id = '',
                name = ''
            )
        else:
            return ExternalAccountKey(
        )
        """

    def testExternalAccountKey(self):
        """Test ExternalAccountKey"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
