# coding: utf-8

"""
    Cloud Memorystore for Memcached API

    Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_memcache_v1_location_metadata import GoogleCloudMemcacheV1LocationMetadata

class TestGoogleCloudMemcacheV1LocationMetadata(unittest.TestCase):
    """GoogleCloudMemcacheV1LocationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMemcacheV1LocationMetadata:
        """Test GoogleCloudMemcacheV1LocationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMemcacheV1LocationMetadata`
        """
        model = GoogleCloudMemcacheV1LocationMetadata()
        if include_optional:
            return GoogleCloudMemcacheV1LocationMetadata(
                available_zones = {
                    'key' : openapi_client.models.google_cloud_memcache_v1_zone_metadata.GoogleCloudMemcacheV1ZoneMetadata()
                    }
            )
        else:
            return GoogleCloudMemcacheV1LocationMetadata(
        )
        """

    def testGoogleCloudMemcacheV1LocationMetadata(self):
        """Test GoogleCloudMemcacheV1LocationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
