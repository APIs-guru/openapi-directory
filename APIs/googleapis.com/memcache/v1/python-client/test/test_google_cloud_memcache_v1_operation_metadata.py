# coding: utf-8

"""
    Cloud Memorystore for Memcached API

    Google Cloud Memorystore for Memcached API is used for creating and managing Memcached instances in GCP.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_memcache_v1_operation_metadata import GoogleCloudMemcacheV1OperationMetadata

class TestGoogleCloudMemcacheV1OperationMetadata(unittest.TestCase):
    """GoogleCloudMemcacheV1OperationMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudMemcacheV1OperationMetadata:
        """Test GoogleCloudMemcacheV1OperationMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudMemcacheV1OperationMetadata`
        """
        model = GoogleCloudMemcacheV1OperationMetadata()
        if include_optional:
            return GoogleCloudMemcacheV1OperationMetadata(
                api_version = '',
                cancel_requested = True,
                create_time = '',
                end_time = '',
                status_detail = '',
                target = '',
                verb = ''
            )
        else:
            return GoogleCloudMemcacheV1OperationMetadata(
        )
        """

    def testGoogleCloudMemcacheV1OperationMetadata(self):
        """Test GoogleCloudMemcacheV1OperationMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
