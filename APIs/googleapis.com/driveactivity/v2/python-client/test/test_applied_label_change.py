# coding: utf-8

"""
    Drive Activity API

    Provides a historical view of activity in Google Drive.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.applied_label_change import AppliedLabelChange

class TestAppliedLabelChange(unittest.TestCase):
    """AppliedLabelChange unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppliedLabelChange:
        """Test AppliedLabelChange
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppliedLabelChange`
        """
        model = AppliedLabelChange()
        if include_optional:
            return AppliedLabelChange(
                changes = [
                    openapi_client.models.applied_label_change_detail.AppliedLabelChangeDetail(
                        field_changes = [
                            openapi_client.models.field_value_change.FieldValueChange(
                                display_name = '', 
                                field_id = '', 
                                new_value = openapi_client.models.field_value.FieldValue(
                                    date = openapi_client.models.date.Date(
                                        value = '', ), 
                                    integer = openapi_client.models.integer.Integer(
                                        value = '', ), 
                                    selection = openapi_client.models.selection.Selection(
                                        display_name = '', 
                                        value = '', ), 
                                    selection_list = openapi_client.models.selection_list.SelectionList(
                                        values = [
                                            openapi_client.models.selection.Selection(
                                                display_name = '', 
                                                value = '', )
                                            ], ), 
                                    text = openapi_client.models.text.Text(
                                        value = '', ), 
                                    text_list = openapi_client.models.text_list.TextList(), 
                                    user = openapi_client.models.single_user.SingleUser(
                                        value = '', ), 
                                    user_list = openapi_client.models.user_list.UserList(), ), 
                                old_value = openapi_client.models.field_value.FieldValue(), )
                            ], 
                        label = '', 
                        title = '', 
                        types = [
                            'TYPE_UNSPECIFIED'
                            ], )
                    ]
            )
        else:
            return AppliedLabelChange(
        )
        """

    def testAppliedLabelChange(self):
        """Test AppliedLabelChange"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
