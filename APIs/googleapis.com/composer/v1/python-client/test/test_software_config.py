# coding: utf-8

"""
    Cloud Composer API

    Manages Apache Airflow environments on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.software_config import SoftwareConfig

class TestSoftwareConfig(unittest.TestCase):
    """SoftwareConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SoftwareConfig:
        """Test SoftwareConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SoftwareConfig`
        """
        model = SoftwareConfig()
        if include_optional:
            return SoftwareConfig(
                airflow_config_overrides = {
                    'key' : ''
                    },
                cloud_data_lineage_integration = openapi_client.models.cloud_data_lineage_integration.CloudDataLineageIntegration(
                    enabled = True, ),
                env_variables = {
                    'key' : ''
                    },
                image_version = '',
                pypi_packages = {
                    'key' : ''
                    },
                python_version = '',
                scheduler_count = 56,
                web_server_plugins_mode = 'WEB_SERVER_PLUGINS_MODE_UNSPECIFIED'
            )
        else:
            return SoftwareConfig(
        )
        """

    def testSoftwareConfig(self):
        """Test SoftwareConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
