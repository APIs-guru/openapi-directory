# coding: utf-8

"""
    Cloud Composer API

    Manages Apache Airflow environments on Google Cloud Platform.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.ip_allocation_policy import IPAllocationPolicy

class TestIPAllocationPolicy(unittest.TestCase):
    """IPAllocationPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> IPAllocationPolicy:
        """Test IPAllocationPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IPAllocationPolicy`
        """
        model = IPAllocationPolicy()
        if include_optional:
            return IPAllocationPolicy(
                cluster_ipv4_cidr_block = '',
                cluster_secondary_range_name = '',
                services_ipv4_cidr_block = '',
                services_secondary_range_name = '',
                use_ip_aliases = True
            )
        else:
            return IPAllocationPolicy(
        )
        """

    def testIPAllocationPolicy(self):
        """Test IPAllocationPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
