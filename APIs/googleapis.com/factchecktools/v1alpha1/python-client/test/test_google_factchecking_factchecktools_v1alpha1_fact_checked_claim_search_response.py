# coding: utf-8

"""
    Fact Check Tools API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_factchecking_factchecktools_v1alpha1_fact_checked_claim_search_response import GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse

class TestGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse(unittest.TestCase):
    """GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse:
        """Test GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse`
        """
        model = GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse()
        if include_optional:
            return GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse(
                claims = [
                    openapi_client.models.google_factchecking_factchecktools_v1alpha1_claim.GoogleFactcheckingFactchecktoolsV1alpha1Claim(
                        claim_date = '', 
                        claim_review = [
                            openapi_client.models.google_factchecking_factchecktools_v1alpha1_claim_review.GoogleFactcheckingFactchecktoolsV1alpha1ClaimReview(
                                language_code = '', 
                                publisher = openapi_client.models.google_factchecking_factchecktools_v1alpha1_publisher.GoogleFactcheckingFactchecktoolsV1alpha1Publisher(
                                    name = '', 
                                    site = '', ), 
                                review_date = '', 
                                textual_rating = '', 
                                title = '', 
                                url = '', )
                            ], 
                        claimant = '', 
                        text = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse(
        )
        """

    def testGoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse(self):
        """Test GoogleFactcheckingFactchecktoolsV1alpha1FactCheckedClaimSearchResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
