# coding: utf-8

"""
    Real-time Bidding API

    Allows external bidders to manage their RTB integration with Google. This includes managing bidder endpoints, QPS quotas, configuring what ad inventory to receive via pretargeting, submitting creatives for verification, and accessing creative metadata such as approval status.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.batch_reject_publisher_connections_response import BatchRejectPublisherConnectionsResponse

class TestBatchRejectPublisherConnectionsResponse(unittest.TestCase):
    """BatchRejectPublisherConnectionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BatchRejectPublisherConnectionsResponse:
        """Test BatchRejectPublisherConnectionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BatchRejectPublisherConnectionsResponse`
        """
        model = BatchRejectPublisherConnectionsResponse()
        if include_optional:
            return BatchRejectPublisherConnectionsResponse(
                publisher_connections = [
                    openapi_client.models.publisher_connection.PublisherConnection(
                        bidding_state = 'STATE_UNSPECIFIED', 
                        create_time = '', 
                        display_name = '', 
                        name = '', 
                        publisher_platform = 'PUBLISHER_PLATFORM_UNSPECIFIED', )
                    ]
            )
        else:
            return BatchRejectPublisherConnectionsResponse(
        )
        """

    def testBatchRejectPublisherConnectionsResponse(self):
        """Test BatchRejectPublisherConnectionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
