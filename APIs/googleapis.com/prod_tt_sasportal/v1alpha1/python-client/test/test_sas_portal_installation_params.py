# coding: utf-8

"""
    SAS Portal API (Testing)

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1alpha1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.sas_portal_installation_params import SasPortalInstallationParams

class TestSasPortalInstallationParams(unittest.TestCase):
    """SasPortalInstallationParams unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SasPortalInstallationParams:
        """Test SasPortalInstallationParams
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SasPortalInstallationParams`
        """
        model = SasPortalInstallationParams()
        if include_optional:
            return SasPortalInstallationParams(
                antenna_azimuth = 56,
                antenna_beamwidth = 56,
                antenna_downtilt = 56,
                antenna_gain = 56,
                antenna_model = '',
                cpe_cbsd_indication = True,
                eirp_capability = 56,
                height = 1.337,
                height_type = 'HEIGHT_TYPE_UNSPECIFIED',
                horizontal_accuracy = 1.337,
                indoor_deployment = True,
                latitude = 1.337,
                longitude = 1.337,
                vertical_accuracy = 1.337
            )
        else:
            return SasPortalInstallationParams(
        )
        """

    def testSasPortalInstallationParams(self):
        """Test SasPortalInstallationParams"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
