# coding: utf-8

"""
    Firebase App Check API

    Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_firebase_appcheck_v1_exchange_recaptcha_enterprise_token_request import GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest

class TestGoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest(unittest.TestCase):
    """GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest:
        """Test GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest`
        """
        model = GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest()
        if include_optional:
            return GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest(
                limited_use = True,
                recaptcha_enterprise_token = ''
            )
        else:
            return GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest(
        )
        """

    def testGoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest(self):
        """Test GoogleFirebaseAppcheckV1ExchangeRecaptchaEnterpriseTokenRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
