# coding: utf-8

"""
    Firebase App Check API

    Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_firebase_appcheck_v1beta_exchange_recaptcha_enterprise_token_request import GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest

class TestGoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest(unittest.TestCase):
    """GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest:
        """Test GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest`
        """
        model = GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest()
        if include_optional:
            return GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest(
                limited_use = True,
                recaptcha_enterprise_token = ''
            )
        else:
            return GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest(
        )
        """

    def testGoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest(self):
        """Test GoogleFirebaseAppcheckV1betaExchangeRecaptchaEnterpriseTokenRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
