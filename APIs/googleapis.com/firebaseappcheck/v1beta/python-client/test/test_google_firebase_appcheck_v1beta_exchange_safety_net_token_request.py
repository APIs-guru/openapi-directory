# coding: utf-8

"""
    Firebase App Check API

    Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_firebase_appcheck_v1beta_exchange_safety_net_token_request import GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest

class TestGoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest(unittest.TestCase):
    """GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest:
        """Test GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest`
        """
        model = GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest()
        if include_optional:
            return GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest(
                safety_net_token = ''
            )
        else:
            return GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest(
        )
        """

    def testGoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest(self):
        """Test GoogleFirebaseAppcheckV1betaExchangeSafetyNetTokenRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
