# coding: utf-8

"""
    Firebase App Check API

    Firebase App Check works alongside other Firebase services to help protect your backend resources from abuse, such as billing fraud or phishing.

    The version of the OpenAPI document: v1beta
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_firebase_appcheck_v1beta_exchange_app_attest_assertion_request import GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest

class TestGoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest(unittest.TestCase):
    """GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest:
        """Test GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest`
        """
        model = GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest()
        if include_optional:
            return GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest(
                artifact = 'YQ==',
                assertion = 'YQ==',
                challenge = 'YQ==',
                limited_use = True
            )
        else:
            return GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest(
        )
        """

    def testGoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest(self):
        """Test GoogleFirebaseAppcheckV1betaExchangeAppAttestAssertionRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
