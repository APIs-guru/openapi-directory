# coding: utf-8

"""
    My Business Account Management API

    The My Business Account Management API provides an interface for managing access to a location on Google. Note - If you have a quota of 0 after enabling the API, please request for GBP API access.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.account import Account

class TestAccount(unittest.TestCase):
    """Account unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Account:
        """Test Account
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Account`
        """
        model = Account()
        if include_optional:
            return Account(
                account_name = '',
                account_number = '',
                name = '',
                organization_info = openapi_client.models.organization_info.OrganizationInfo(
                    address = openapi_client.models.postal_address.PostalAddress(
                        address_lines = [
                            ''
                            ], 
                        administrative_area = '', 
                        language_code = '', 
                        locality = '', 
                        organization = '', 
                        postal_code = '', 
                        recipients = [
                            ''
                            ], 
                        region_code = '', 
                        revision = 56, 
                        sorting_code = '', 
                        sublocality = '', ), 
                    phone_number = '', 
                    registered_domain = '', ),
                permission_level = 'PERMISSION_LEVEL_UNSPECIFIED',
                primary_owner = '',
                role = 'ACCOUNT_ROLE_UNSPECIFIED',
                type = 'ACCOUNT_TYPE_UNSPECIFIED',
                verification_state = 'VERIFICATION_STATE_UNSPECIFIED',
                vetted_state = 'VETTED_STATE_UNSPECIFIED'
            )
        else:
            return Account(
        )
        """

    def testAccount(self):
        """Test Account"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
