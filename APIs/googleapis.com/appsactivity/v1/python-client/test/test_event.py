# coding: utf-8

"""
    Drive Activity API

    Provides a historical view of activity.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.event import Event

class TestEvent(unittest.TestCase):
    """Event unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Event:
        """Test Event
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Event`
        """
        model = Event()
        if include_optional:
            return Event(
                additional_event_types = [
                    'comment'
                    ],
                event_time_millis = '',
                from_user_deletion = True,
                move = openapi_client.models.move.Move(
                    added_parents = [
                        openapi_client.models.parent.Parent(
                            id = '', 
                            is_root = True, 
                            title = '', )
                        ], 
                    removed_parents = [
                        openapi_client.models.parent.Parent(
                            id = '', 
                            is_root = True, 
                            title = '', )
                        ], ),
                permission_changes = [
                    openapi_client.models.permission_change.PermissionChange(
                        added_permissions = [
                            openapi_client.models.permission.Permission(
                                name = '', 
                                permission_id = '', 
                                role = 'commenter', 
                                type = 'anyone', 
                                user = openapi_client.models.user.User(
                                    is_deleted = True, 
                                    is_me = True, 
                                    name = '', 
                                    permission_id = '', 
                                    photo = openapi_client.models.photo.Photo(
                                        url = '', ), ), 
                                with_link = True, )
                            ], 
                        removed_permissions = [
                            openapi_client.models.permission.Permission(
                                name = '', 
                                permission_id = '', 
                                role = 'commenter', 
                                type = 'anyone', 
                                with_link = True, )
                            ], )
                    ],
                primary_event_type = 'comment',
                rename = openapi_client.models.rename.Rename(
                    new_title = '', 
                    old_title = '', ),
                target = openapi_client.models.target.Target(
                    id = '', 
                    mime_type = '', 
                    name = '', ),
                user = openapi_client.models.user.User(
                    is_deleted = True, 
                    is_me = True, 
                    name = '', 
                    permission_id = '', 
                    photo = openapi_client.models.photo.Photo(
                        url = '', ), )
            )
        else:
            return Event(
        )
        """

    def testEvent(self):
        """Test Event"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
