# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.query_parameter_type import QueryParameterType

class TestQueryParameterType(unittest.TestCase):
    """QueryParameterType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryParameterType:
        """Test QueryParameterType
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryParameterType`
        """
        model = QueryParameterType()
        if include_optional:
            return QueryParameterType(
                array_type = openapi_client.models.query_parameter_type.QueryParameterType(
                    range_element_type = openapi_client.models.query_parameter_type.QueryParameterType(
                        struct_types = [
                            openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                                description = '', 
                                name = '', 
                                type = , )
                            ], 
                        type = '', ), 
                    struct_types = [
                        openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                            description = '', 
                            name = '', )
                        ], 
                    type = '', ),
                range_element_type = openapi_client.models.query_parameter_type.QueryParameterType(
                    array_type = openapi_client.models.query_parameter_type.QueryParameterType(
                        struct_types = [
                            openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                                description = '', 
                                name = '', 
                                type = , )
                            ], 
                        type = '', ), 
                    struct_types = [
                        openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                            description = '', 
                            name = '', )
                        ], 
                    type = '', ),
                struct_types = [
                    openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                        description = '', 
                        name = '', 
                        type = openapi_client.models.query_parameter_type.QueryParameterType(
                            array_type = openapi_client.models.query_parameter_type.QueryParameterType(
                                range_element_type = , ), 
                            range_element_type = , ), )
                    ],
                type = ''
            )
        else:
            return QueryParameterType(
        )
        """

    def testQueryParameterType(self):
        """Test QueryParameterType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
