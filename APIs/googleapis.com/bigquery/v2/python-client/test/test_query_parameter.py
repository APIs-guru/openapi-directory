# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.query_parameter import QueryParameter

class TestQueryParameter(unittest.TestCase):
    """QueryParameter unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryParameter:
        """Test QueryParameter
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryParameter`
        """
        model = QueryParameter()
        if include_optional:
            return QueryParameter(
                name = '',
                parameter_type = openapi_client.models.query_parameter_type.QueryParameterType(
                    array_type = openapi_client.models.query_parameter_type.QueryParameterType(
                        range_element_type = , 
                        struct_types = [
                            openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                                description = '', 
                                name = '', 
                                type = , )
                            ], 
                        type = '', ), 
                    range_element_type = , 
                    struct_types = [
                        openapi_client.models.query_parameter_type_struct_types_inner.QueryParameterType_structTypes_inner(
                            description = '', 
                            name = '', )
                        ], 
                    type = '', ),
                parameter_value = openapi_client.models.query_parameter_value.QueryParameterValue(
                    array_values = [
                        openapi_client.models.query_parameter_value.QueryParameterValue(
                            range_value = openapi_client.models.range_value.RangeValue(
                                end = , 
                                start = , ), 
                            struct_values = {
                                'key' : 
                                }, 
                            value = '', )
                        ], 
                    range_value = openapi_client.models.range_value.RangeValue(), 
                    struct_values = {
                        'key' : 
                        }, 
                    value = '', )
            )
        else:
            return QueryParameter(
        )
        """

    def testQueryParameter(self):
        """Test QueryParameter"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
