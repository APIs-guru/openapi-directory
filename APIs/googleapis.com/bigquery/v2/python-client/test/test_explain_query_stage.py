# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.explain_query_stage import ExplainQueryStage

class TestExplainQueryStage(unittest.TestCase):
    """ExplainQueryStage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExplainQueryStage:
        """Test ExplainQueryStage
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExplainQueryStage`
        """
        model = ExplainQueryStage()
        if include_optional:
            return ExplainQueryStage(
                completed_parallel_inputs = '',
                compute_mode = 'COMPUTE_MODE_UNSPECIFIED',
                compute_ms_avg = '',
                compute_ms_max = '',
                compute_ratio_avg = 1.337,
                compute_ratio_max = 1.337,
                end_ms = '',
                id = '',
                input_stages = [
                    ''
                    ],
                name = '',
                parallel_inputs = '',
                read_ms_avg = '',
                read_ms_max = '',
                read_ratio_avg = 1.337,
                read_ratio_max = 1.337,
                records_read = '',
                records_written = '',
                shuffle_output_bytes = '',
                shuffle_output_bytes_spilled = '',
                slot_ms = '',
                start_ms = '',
                status = '',
                steps = [
                    openapi_client.models.explain_query_step.ExplainQueryStep(
                        kind = '', 
                        substeps = [
                            ''
                            ], )
                    ],
                wait_ms_avg = '',
                wait_ms_max = '',
                wait_ratio_avg = 1.337,
                wait_ratio_max = 1.337,
                write_ms_avg = '',
                write_ms_max = '',
                write_ratio_avg = 1.337,
                write_ratio_max = 1.337
            )
        else:
            return ExplainQueryStage(
        )
        """

    def testExplainQueryStage(self):
        """Test ExplainQueryStage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
