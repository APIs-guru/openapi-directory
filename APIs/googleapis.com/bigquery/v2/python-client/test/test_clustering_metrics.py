# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.clustering_metrics import ClusteringMetrics

class TestClusteringMetrics(unittest.TestCase):
    """ClusteringMetrics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ClusteringMetrics:
        """Test ClusteringMetrics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ClusteringMetrics`
        """
        model = ClusteringMetrics()
        if include_optional:
            return ClusteringMetrics(
                clusters = [
                    openapi_client.models.cluster.Cluster(
                        centroid_id = '', 
                        count = '', 
                        feature_values = [
                            openapi_client.models.feature_value.FeatureValue(
                                categorical_value = openapi_client.models.categorical_value.CategoricalValue(
                                    category_counts = [
                                        openapi_client.models.category_count.CategoryCount(
                                            category = '', 
                                            count = '', )
                                        ], ), 
                                feature_column = '', 
                                numerical_value = 1.337, )
                            ], )
                    ],
                davies_bouldin_index = 1.337,
                mean_squared_distance = 1.337
            )
        else:
            return ClusteringMetrics(
        )
        """

    def testClusteringMetrics(self):
        """Test ClusteringMetrics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
