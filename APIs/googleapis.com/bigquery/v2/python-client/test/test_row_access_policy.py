# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.row_access_policy import RowAccessPolicy

class TestRowAccessPolicy(unittest.TestCase):
    """RowAccessPolicy unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RowAccessPolicy:
        """Test RowAccessPolicy
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RowAccessPolicy`
        """
        model = RowAccessPolicy()
        if include_optional:
            return RowAccessPolicy(
                creation_time = '',
                etag = '',
                filter_predicate = '',
                last_modified_time = '',
                row_access_policy_reference = openapi_client.models.row_access_policy_reference.RowAccessPolicyReference(
                    dataset_id = '', 
                    policy_id = '', 
                    project_id = '', 
                    table_id = '', )
            )
        else:
            return RowAccessPolicy(
        )
        """

    def testRowAccessPolicy(self):
        """Test RowAccessPolicy"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
