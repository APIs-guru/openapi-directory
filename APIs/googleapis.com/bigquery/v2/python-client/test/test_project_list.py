# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.project_list import ProjectList

class TestProjectList(unittest.TestCase):
    """ProjectList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProjectList:
        """Test ProjectList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProjectList`
        """
        model = ProjectList()
        if include_optional:
            return ProjectList(
                etag = '',
                kind = 'bigquery#projectList',
                next_page_token = '',
                projects = [
                    openapi_client.models.project_list_projects_inner.ProjectList_projects_inner(
                        friendly_name = '', 
                        id = '', 
                        kind = '', 
                        numeric_id = '', 
                        project_reference = openapi_client.models.project_reference.ProjectReference(
                            project_id = '', ), )
                    ],
                total_items = 56
            )
        else:
            return ProjectList(
        )
        """

    def testProjectList(self):
        """Test ProjectList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
