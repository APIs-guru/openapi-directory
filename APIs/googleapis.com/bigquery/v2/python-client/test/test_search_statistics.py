# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.search_statistics import SearchStatistics

class TestSearchStatistics(unittest.TestCase):
    """SearchStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchStatistics:
        """Test SearchStatistics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchStatistics`
        """
        model = SearchStatistics()
        if include_optional:
            return SearchStatistics(
                index_unused_reasons = [
                    openapi_client.models.index_unused_reason.IndexUnusedReason(
                        base_table = openapi_client.models.table_reference.TableReference(
                            dataset_id = '', 
                            project_id = '', 
                            table_id = '', ), 
                        code = 'CODE_UNSPECIFIED', 
                        index_name = '', 
                        message = '', )
                    ],
                index_usage_mode = 'INDEX_USAGE_MODE_UNSPECIFIED'
            )
        else:
            return SearchStatistics(
        )
        """

    def testSearchStatistics(self):
        """Test SearchStatistics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
