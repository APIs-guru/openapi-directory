# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bigtable_options import BigtableOptions

class TestBigtableOptions(unittest.TestCase):
    """BigtableOptions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BigtableOptions:
        """Test BigtableOptions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BigtableOptions`
        """
        model = BigtableOptions()
        if include_optional:
            return BigtableOptions(
                column_families = [
                    openapi_client.models.bigtable_column_family.BigtableColumnFamily(
                        columns = [
                            openapi_client.models.bigtable_column.BigtableColumn(
                                encoding = '', 
                                field_name = '', 
                                only_read_latest = True, 
                                qualifier_encoded = 'YQ==', 
                                qualifier_string = '', 
                                type = '', )
                            ], 
                        encoding = '', 
                        family_id = '', 
                        only_read_latest = True, 
                        type = '', )
                    ],
                ignore_unspecified_column_families = True,
                output_column_families_as_json = True,
                read_rowkey_as_string = True
            )
        else:
            return BigtableOptions(
        )
        """

    def testBigtableOptions(self):
        """Test BigtableOptions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
