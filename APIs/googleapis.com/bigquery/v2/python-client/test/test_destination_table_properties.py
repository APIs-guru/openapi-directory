# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.destination_table_properties import DestinationTableProperties

class TestDestinationTableProperties(unittest.TestCase):
    """DestinationTableProperties unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DestinationTableProperties:
        """Test DestinationTableProperties
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DestinationTableProperties`
        """
        model = DestinationTableProperties()
        if include_optional:
            return DestinationTableProperties(
                description = '',
                expiration_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                friendly_name = '',
                labels = {
                    'key' : ''
                    }
            )
        else:
            return DestinationTableProperties(
        )
        """

    def testDestinationTableProperties(self):
        """Test DestinationTableProperties"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
