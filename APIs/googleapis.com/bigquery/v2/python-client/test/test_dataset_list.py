# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.dataset_list import DatasetList

class TestDatasetList(unittest.TestCase):
    """DatasetList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DatasetList:
        """Test DatasetList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DatasetList`
        """
        model = DatasetList()
        if include_optional:
            return DatasetList(
                datasets = [
                    openapi_client.models.dataset_list_datasets_inner.DatasetList_datasets_inner(
                        dataset_reference = openapi_client.models.dataset_reference.DatasetReference(
                            dataset_id = '', 
                            project_id = '', ), 
                        friendly_name = '', 
                        id = '', 
                        kind = '', 
                        labels = {
                            'key' : ''
                            }, 
                        location = '', )
                    ],
                etag = '',
                kind = 'bigquery#datasetList',
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return DatasetList(
        )
        """

    def testDatasetList(self):
        """Test DatasetList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
