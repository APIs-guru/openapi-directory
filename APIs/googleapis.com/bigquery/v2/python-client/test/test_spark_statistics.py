# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.spark_statistics import SparkStatistics

class TestSparkStatistics(unittest.TestCase):
    """SparkStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SparkStatistics:
        """Test SparkStatistics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SparkStatistics`
        """
        model = SparkStatistics()
        if include_optional:
            return SparkStatistics(
                endpoints = {
                    'key' : ''
                    },
                gcs_staging_bucket = '',
                kms_key_name = '',
                logging_info = openapi_client.models.spark_logging_info.SparkLoggingInfo(
                    project_id = '', 
                    resource_type = '', ),
                spark_job_id = '',
                spark_job_location = ''
            )
        else:
            return SparkStatistics(
        )
        """

    def testSparkStatistics(self):
        """Test SparkStatistics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
