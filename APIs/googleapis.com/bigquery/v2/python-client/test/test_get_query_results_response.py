# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.get_query_results_response import GetQueryResultsResponse

class TestGetQueryResultsResponse(unittest.TestCase):
    """GetQueryResultsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetQueryResultsResponse:
        """Test GetQueryResultsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetQueryResultsResponse`
        """
        model = GetQueryResultsResponse()
        if include_optional:
            return GetQueryResultsResponse(
                cache_hit = True,
                errors = [
                    openapi_client.models.error_proto.ErrorProto(
                        debug_info = '', 
                        location = '', 
                        message = '', 
                        reason = '', )
                    ],
                etag = '',
                job_complete = True,
                job_reference = openapi_client.models.job_reference.JobReference(
                    job_id = '', 
                    location = '', 
                    project_id = '', ),
                kind = 'bigquery#getQueryResultsResponse',
                num_dml_affected_rows = '',
                page_token = '',
                rows = [
                    openapi_client.models.table_row.TableRow(
                        f = [
                            openapi_client.models.table_cell.TableCell(
                                v = null, )
                            ], )
                    ],
                var_schema = openapi_client.models.table_schema.TableSchema(
                    fields = [
                        openapi_client.models.table_field_schema.TableFieldSchema(
                            categories = openapi_client.models.table_field_schema_categories.TableFieldSchema_categories(
                                names = [
                                    ''
                                    ], ), 
                            collation = '', 
                            default_value_expression = '', 
                            description = '', 
                            max_length = '', 
                            mode = '', 
                            name = '', 
                            policy_tags = openapi_client.models.table_field_schema_policy_tags.TableFieldSchema_policyTags(), 
                            precision = '', 
                            range_element_type = openapi_client.models.table_field_schema_range_element_type.TableFieldSchema_rangeElementType(
                                type = '', ), 
                            rounding_mode = 'ROUNDING_MODE_UNSPECIFIED', 
                            scale = '', 
                            type = '', )
                        ], ),
                total_bytes_processed = '',
                total_rows = ''
            )
        else:
            return GetQueryResultsResponse(
        )
        """

    def testGetQueryResultsResponse(self):
        """Test GetQueryResultsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
