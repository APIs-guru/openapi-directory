# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.bi_engine_statistics import BiEngineStatistics

class TestBiEngineStatistics(unittest.TestCase):
    """BiEngineStatistics unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BiEngineStatistics:
        """Test BiEngineStatistics
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BiEngineStatistics`
        """
        model = BiEngineStatistics()
        if include_optional:
            return BiEngineStatistics(
                acceleration_mode = 'BI_ENGINE_ACCELERATION_MODE_UNSPECIFIED',
                bi_engine_mode = 'ACCELERATION_MODE_UNSPECIFIED',
                bi_engine_reasons = [
                    openapi_client.models.bi_engine_reason.BiEngineReason(
                        code = 'CODE_UNSPECIFIED', 
                        message = '', )
                    ]
            )
        else:
            return BiEngineStatistics(
        )
        """

    def testBiEngineStatistics(self):
        """Test BiEngineStatistics"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
