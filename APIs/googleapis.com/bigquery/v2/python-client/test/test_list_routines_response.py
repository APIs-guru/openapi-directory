# coding: utf-8

"""
    BigQuery API

    A data platform for customers to create, manage, share and query data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_routines_response import ListRoutinesResponse

class TestListRoutinesResponse(unittest.TestCase):
    """ListRoutinesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListRoutinesResponse:
        """Test ListRoutinesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListRoutinesResponse`
        """
        model = ListRoutinesResponse()
        if include_optional:
            return ListRoutinesResponse(
                next_page_token = '',
                routines = [
                    openapi_client.models.routine.Routine(
                        arguments = [
                            openapi_client.models.argument.Argument(
                                argument_kind = 'ARGUMENT_KIND_UNSPECIFIED', 
                                data_type = openapi_client.models.standard_sql_data_type.StandardSqlDataType(
                                    array_element_type = openapi_client.models.standard_sql_data_type.StandardSqlDataType(
                                        range_element_type = , 
                                        struct_type = openapi_client.models.standard_sql_struct_type.StandardSqlStructType(
                                            fields = [
                                                openapi_client.models.standard_sql_field.StandardSqlField(
                                                    name = '', 
                                                    type = , )
                                                ], ), 
                                        type_kind = 'TYPE_KIND_UNSPECIFIED', ), 
                                    range_element_type = , 
                                    struct_type = openapi_client.models.standard_sql_struct_type.StandardSqlStructType(), 
                                    type_kind = 'TYPE_KIND_UNSPECIFIED', ), 
                                is_aggregate = True, 
                                mode = 'MODE_UNSPECIFIED', 
                                name = '', )
                            ], 
                        creation_time = '', 
                        data_governance_type = 'DATA_GOVERNANCE_TYPE_UNSPECIFIED', 
                        definition_body = '', 
                        description = '', 
                        determinism_level = 'DETERMINISM_LEVEL_UNSPECIFIED', 
                        etag = '', 
                        imported_libraries = [
                            ''
                            ], 
                        language = 'LANGUAGE_UNSPECIFIED', 
                        last_modified_time = '', 
                        remote_function_options = openapi_client.models.remote_function_options.RemoteFunctionOptions(
                            connection = '', 
                            endpoint = '', 
                            max_batching_rows = '', 
                            user_defined_context = {
                                'key' : ''
                                }, ), 
                        return_table_type = openapi_client.models.standard_sql_table_type.StandardSqlTableType(
                            columns = [
                                openapi_client.models.standard_sql_field.StandardSqlField(
                                    name = '', )
                                ], ), 
                        return_type = , 
                        routine_reference = openapi_client.models.routine_reference.RoutineReference(
                            dataset_id = '', 
                            project_id = '', 
                            routine_id = '', ), 
                        routine_type = 'ROUTINE_TYPE_UNSPECIFIED', 
                        security_mode = 'SECURITY_MODE_UNSPECIFIED', 
                        spark_options = openapi_client.models.spark_options.SparkOptions(
                            archive_uris = [
                                ''
                                ], 
                            connection = '', 
                            container_image = '', 
                            file_uris = [
                                ''
                                ], 
                            jar_uris = [
                                ''
                                ], 
                            main_class = '', 
                            main_file_uri = '', 
                            properties = {
                                'key' : ''
                                }, 
                            py_file_uris = [
                                ''
                                ], 
                            runtime_version = '', ), 
                        strict_mode = True, )
                    ]
            )
        else:
            return ListRoutinesResponse(
        )
        """

    def testListRoutinesResponse(self):
        """Test ListRoutinesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
