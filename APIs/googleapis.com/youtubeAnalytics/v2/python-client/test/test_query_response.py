# coding: utf-8

"""
    YouTube Analytics API

    Retrieves your YouTube Analytics data.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.query_response import QueryResponse

class TestQueryResponse(unittest.TestCase):
    """QueryResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> QueryResponse:
        """Test QueryResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `QueryResponse`
        """
        model = QueryResponse()
        if include_optional:
            return QueryResponse(
                column_headers = [
                    openapi_client.models.result_table_column_header.ResultTableColumnHeader(
                        column_type = '', 
                        data_type = '', 
                        name = '', )
                    ],
                errors = openapi_client.models.errors.Errors(
                    code = 'BAD_REQUEST', 
                    error = [
                        openapi_client.models.error_proto.ErrorProto(
                            argument = [
                                ''
                                ], 
                            code = '', 
                            debug_info = '', 
                            domain = '', 
                            external_error_message = '', 
                            location = '', 
                            location_type = 'PATH', )
                        ], 
                    request_id = '', ),
                kind = '',
                rows = [
                    [
                        null
                        ]
                    ]
            )
        else:
            return QueryResponse(
        )
        """

    def testQueryResponse(self):
        """Test QueryResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
