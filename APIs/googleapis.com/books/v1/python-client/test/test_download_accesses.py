# coding: utf-8

"""
    Books API

    The Google Books API allows clients to access the Google Books repository.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.download_accesses import DownloadAccesses

class TestDownloadAccesses(unittest.TestCase):
    """DownloadAccesses unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DownloadAccesses:
        """Test DownloadAccesses
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DownloadAccesses`
        """
        model = DownloadAccesses()
        if include_optional:
            return DownloadAccesses(
                download_access_list = [
                    openapi_client.models.download_access_restriction.DownloadAccessRestriction(
                        device_allowed = True, 
                        downloads_acquired = 56, 
                        just_acquired = True, 
                        kind = '', 
                        max_download_devices = 56, 
                        message = '', 
                        nonce = '', 
                        reason_code = '', 
                        restricted = True, 
                        signature = '', 
                        source = '', 
                        volume_id = '', )
                    ],
                kind = ''
            )
        else:
            return DownloadAccesses(
        )
        """

    def testDownloadAccesses(self):
        """Test DownloadAccesses"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
