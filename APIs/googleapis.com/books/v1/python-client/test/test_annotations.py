# coding: utf-8

"""
    Books API

    The Google Books API allows clients to access the Google Books repository.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.annotations import Annotations

class TestAnnotations(unittest.TestCase):
    """Annotations unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Annotations:
        """Test Annotations
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Annotations`
        """
        model = Annotations()
        if include_optional:
            return Annotations(
                items = [
                    openapi_client.models.annotation.Annotation(
                        after_selected_text = '', 
                        before_selected_text = '', 
                        client_version_ranges = openapi_client.models.annotation_client_version_ranges.Annotation_clientVersionRanges(
                            cfi_range = openapi_client.models.books_annotations_range.BooksAnnotationsRange(
                                end_offset = '', 
                                end_position = '', 
                                start_offset = '', 
                                start_position = '', ), 
                            content_version = '', 
                            gb_image_range = openapi_client.models.books_annotations_range.BooksAnnotationsRange(
                                end_offset = '', 
                                end_position = '', 
                                start_offset = '', 
                                start_position = '', ), 
                            gb_text_range = , 
                            image_cfi_range = , ), 
                        created = '', 
                        current_version_ranges = openapi_client.models.annotation_current_version_ranges.Annotation_currentVersionRanges(
                            content_version = '', ), 
                        data = '', 
                        deleted = True, 
                        highlight_style = '', 
                        id = '', 
                        kind = '', 
                        layer_id = '', 
                        layer_summary = openapi_client.models.annotation_layer_summary.Annotation_layerSummary(
                            allowed_character_count = 56, 
                            limit_type = '', 
                            remaining_character_count = 56, ), 
                        page_ids = [
                            ''
                            ], 
                        selected_text = '', 
                        self_link = '', 
                        updated = '', 
                        volume_id = '', )
                    ],
                kind = '',
                next_page_token = '',
                total_items = 56
            )
        else:
            return Annotations(
        )
        """

    def testAnnotations(self):
        """Test Annotations"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
