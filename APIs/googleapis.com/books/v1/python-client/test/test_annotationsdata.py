# coding: utf-8

"""
    Books API

    The Google Books API allows clients to access the Google Books repository.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.annotationsdata import Annotationsdata

class TestAnnotationsdata(unittest.TestCase):
    """Annotationsdata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Annotationsdata:
        """Test Annotationsdata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Annotationsdata`
        """
        model = Annotationsdata()
        if include_optional:
            return Annotationsdata(
                items = [
                    openapi_client.models.geo_annotationdata.GeoAnnotationdata(
                        annotation_type = '', 
                        data = openapi_client.models.geolayerdata.Geolayerdata(
                            common = openapi_client.models.geolayerdata_common.Geolayerdata_common(
                                lang = '', 
                                preview_image_url = '', 
                                snippet = '', 
                                snippet_url = '', 
                                title = '', ), 
                            geo = openapi_client.models.geolayerdata_geo.Geolayerdata_geo(
                                boundary = [
                                    ''
                                    ], 
                                cache_policy = '', 
                                country_code = '', 
                                latitude = 1.337, 
                                longitude = 1.337, 
                                map_type = '', 
                                viewport = openapi_client.models.geolayerdata_geo_viewport.Geolayerdata_geo_viewport(
                                    hi = openapi_client.models.geolayerdata_geo_viewport_hi.Geolayerdata_geo_viewport_hi(
                                        latitude = 1.337, 
                                        longitude = 1.337, ), 
                                    lo = openapi_client.models.geolayerdata_geo_viewport_hi.Geolayerdata_geo_viewport_hi(
                                        latitude = 1.337, 
                                        longitude = 1.337, ), ), 
                                zoom = 56, ), 
                            kind = '', ), 
                        encoded_data = 'YQ==', 
                        id = '', 
                        kind = '', 
                        layer_id = '', 
                        self_link = '', 
                        updated = '', 
                        volume_id = '', )
                    ],
                kind = '',
                next_page_token = '',
                total_items = 56
            )
        else:
            return Annotationsdata(
        )
        """

    def testAnnotationsdata(self):
        """Test Annotationsdata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
