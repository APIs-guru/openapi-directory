# coding: utf-8

"""
    Books API

    The Google Books API allows clients to access the Google Books repository.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.offers import Offers

class TestOffers(unittest.TestCase):
    """Offers unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Offers:
        """Test Offers
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Offers`
        """
        model = Offers()
        if include_optional:
            return Offers(
                items = [
                    openapi_client.models.offers_items_inner.Offers_items_inner(
                        art_url = '', 
                        gservices_key = '', 
                        id = '', 
                        items = [
                            openapi_client.models.offers_items_inner_items_inner.Offers_items_inner_items_inner(
                                author = '', 
                                canonical_volume_link = '', 
                                cover_url = '', 
                                description = '', 
                                title = '', 
                                volume_id = '', )
                            ], )
                    ],
                kind = ''
            )
        else:
            return Offers(
        )
        """

    def testOffers(self):
        """Test Offers"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
