# coding: utf-8

"""
    Books API

    The Google Books API allows clients to access the Google Books repository.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.series_series_inner_series_subscription_release_info import SeriesSeriesInnerSeriesSubscriptionReleaseInfo

class TestSeriesSeriesInnerSeriesSubscriptionReleaseInfo(unittest.TestCase):
    """SeriesSeriesInnerSeriesSubscriptionReleaseInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SeriesSeriesInnerSeriesSubscriptionReleaseInfo:
        """Test SeriesSeriesInnerSeriesSubscriptionReleaseInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SeriesSeriesInnerSeriesSubscriptionReleaseInfo`
        """
        model = SeriesSeriesInnerSeriesSubscriptionReleaseInfo()
        if include_optional:
            return SeriesSeriesInnerSeriesSubscriptionReleaseInfo(
                cancel_time = '',
                current_release_info = openapi_client.models.series_series_inner_series_subscription_release_info_current_release_info.Series_series_inner_seriesSubscriptionReleaseInfo_currentReleaseInfo(
                    amount_in_micros = 1.337, 
                    currency_code = '', 
                    release_number = '', 
                    release_time = '', ),
                next_release_info = openapi_client.models.series_series_inner_series_subscription_release_info_current_release_info.Series_series_inner_seriesSubscriptionReleaseInfo_currentReleaseInfo(
                    amount_in_micros = 1.337, 
                    currency_code = '', 
                    release_number = '', 
                    release_time = '', ),
                series_subscription_type = ''
            )
        else:
            return SeriesSeriesInnerSeriesSubscriptionReleaseInfo(
        )
        """

    def testSeriesSeriesInnerSeriesSubscriptionReleaseInfo(self):
        """Test SeriesSeriesInnerSeriesSubscriptionReleaseInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
