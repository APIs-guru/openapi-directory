openapi: 3.0.0
servers:
  - url: https://books.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: The Google Books API allows clients to access the Google Books repository.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Books API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - format: google
      url: https://books.googleapis.com/$discovery/rest?version=v1
      version: v1
  x-providerName: googleapis.com
  x-serviceName: books
externalDocs:
  url: https://code.google.com/apis/books/docs/v1/getting_started.html
tags:
  - name: bookshelves
  - name: cloudloading
  - name: dictionary
  - name: familysharing
  - name: layers
  - name: myconfig
  - name: mylibrary
  - name: notification
  - name: onboarding
  - name: personalizedstream
  - name: promooffer
  - name: series
  - name: volumes
paths:
  /books/v1/cloudloading/addBook:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Add a user-upload volume and triggers processing.
      operationId: books.cloudloading.addBook
      parameters:
        - description: A drive document id. The upload_client_token must not be set.
          in: query
          name: drive_document_id
          schema:
            type: string
        - description: The document MIME type. It can be set only if the drive_document_id is set.
          in: query
          name: mime_type
          schema:
            type: string
        - description: The document name. It can be set only if the drive_document_id is set.
          in: query
          name: name
          schema:
            type: string
        - description: Scotty upload token.
          in: query
          name: upload_client_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BooksCloudloadingResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - cloudloading
  /books/v1/cloudloading/deleteBook:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Remove the book and its contents
      operationId: books.cloudloading.deleteBook
      parameters:
        - description: The id of the book to be removed.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - cloudloading
  /books/v1/cloudloading/updateBook:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Updates a user-upload volume.
      operationId: books.cloudloading.updateBook
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BooksCloudloadingResource"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BooksCloudloadingResource"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - cloudloading
  /books/v1/dictionary/listOfflineMetadata:
    get:
      description: Returns a list of offline dictionary metadata available
      operationId: books.dictionary.listOfflineMetadata
      parameters:
        - description: The device/version ID from which to request the data.
          in: query
          name: cpksver
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Metadata"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - dictionary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/familysharing/getFamilyInfo:
    get:
      description: Gets information regarding the family that the user is part of.
      operationId: books.familysharing.getFamilyInfo
      parameters:
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FamilyInfo"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - familysharing
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/familysharing/share:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Initiates sharing of the content with the user's family. Empty response indicates success.
      operationId: books.familysharing.share
      parameters:
        - description: The docid to share.
          in: query
          name: docId
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: The volume to share.
          in: query
          name: volumeId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - familysharing
  /books/v1/familysharing/unshare:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Initiates revoking content that has already been shared with the user's family. Empty response indicates success.
      operationId: books.familysharing.unshare
      parameters:
        - description: The docid to unshare.
          in: query
          name: docId
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: The volume to unshare.
          in: query
          name: volumeId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - familysharing
  /books/v1/myconfig/getUserSettings:
    get:
      description: Gets the current settings for the user.
      operationId: books.myconfig.getUserSettings
      parameters:
        - description: Unused. Added only to workaround TEX mandatory request template requirement
          in: query
          name: country
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usersettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - myconfig
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/myconfig/releaseDownloadAccess:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Release downloaded content access restriction.
      operationId: books.myconfig.releaseDownloadAccess
      parameters:
        - description: The device/version ID from which to release the restriction.
          in: query
          name: cpksver
          required: true
          schema:
            type: string
        - description: The volume(s) to release restrictions for.
          explode: true
          in: query
          name: volumeIds
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
          in: query
          name: locale
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DownloadAccesses"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - myconfig
  /books/v1/myconfig/requestAccess:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Request concurrent and download access restrictions.
      operationId: books.myconfig.requestAccess
      parameters:
        - description: The device/version ID from which to request the restrictions.
          in: query
          name: cpksver
          required: true
          schema:
            type: string
        - description: The client nonce value.
          in: query
          name: nonce
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          required: true
          schema:
            type: string
        - description: The volume to request concurrent/download restrictions for.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
        - description: The type of access license to request. If not specified, the default is BOTH.
          in: query
          name: licenseTypes
          schema:
            enum:
              - LICENSE_TYPES_UNDEFINED
              - BOTH
              - CONCURRENT
              - DOWNLOAD
            type: string
        - description: ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
          in: query
          name: locale
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RequestAccessData"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - myconfig
  /books/v1/myconfig/syncVolumeLicenses:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Request downloaded content access for specified volumes on the My eBooks shelf.
      operationId: books.myconfig.syncVolumeLicenses
      parameters:
        - description: The device/version ID from which to release the restriction.
          in: query
          name: cpksver
          required: true
          schema:
            type: string
        - description: The client nonce value.
          in: query
          name: nonce
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          required: true
          schema:
            type: string
        - description: List of features supported by the client, i.e., 'RENTALS'
          explode: true
          in: query
          name: features
          schema:
            items:
              enum:
                - FEATURES_UNDEFINED
                - RENTALS
              type: string
            type: array
          style: form
        - description: Set to true to include non-comics series. Defaults to false.
          in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
        - description: ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.
          in: query
          name: locale
          schema:
            type: string
        - description: Set to true to show pre-ordered books. Defaults to false.
          in: query
          name: showPreorders
          schema:
            type: boolean
        - description: The volume(s) to request download restrictions for.
          explode: true
          in: query
          name: volumeIds
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - myconfig
  /books/v1/myconfig/updateUserSettings:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.
      operationId: books.myconfig.updateUserSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usersettings"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usersettings"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - myconfig
  /books/v1/mylibrary/annotations:
    get:
      description: Retrieves a list of annotations, possibly filtered.
      operationId: books.mylibrary.annotations.list
      parameters:
        - description: The content version for the requested volume.
          in: query
          name: contentVersion
          schema:
            type: string
        - description: The layer ID to limit annotation by.
          in: query
          name: layerId
          schema:
            type: string
        - description: The layer ID(s) to limit annotation by.
          explode: true
          in: query
          name: layerIds
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            maximum: 40
            minimum: 0
            type: integer
        - description: The value of the nextToken from the previous page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.
          in: query
          name: showDeleted
          schema:
            type: boolean
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).
          in: query
          name: updatedMax
          schema:
            type: string
        - description: RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).
          in: query
          name: updatedMin
          schema:
            type: string
        - description: The volume to restrict annotations to.
          in: query
          name: volumeId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotations"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inserts a new annotation.
      operationId: books.mylibrary.annotations.insert
      parameters:
        - description: The ID for the annotation to insert.
          in: query
          name: annotationId
          schema:
            type: string
        - description: ISO-3166-1 code to override the IP-based location.
          in: query
          name: country
          schema:
            type: string
        - description: Requests that only the summary of the specified layer be provided in the response.
          in: query
          name: showOnlySummaryInResponse
          schema:
            type: boolean
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Annotation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/annotations/summary:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets the summary of specified layers.
      operationId: books.mylibrary.annotations.summary
      parameters:
        - description: Array of layer IDs to get the summary for.
          explode: true
          in: query
          name: layerIds
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
        - description: Volume id to get the summary for.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
        - description: Optional. String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnnotationsSummary"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/annotations/{annotationId}:
    delete:
      description: Deletes an annotation.
      operationId: books.mylibrary.annotations.delete
      parameters:
        - description: The ID for the annotation to delete.
          in: path
          name: annotationId
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    put:
      description: Updates an existing annotation.
      operationId: books.mylibrary.annotations.update
      parameters:
        - description: The ID for the annotation to update.
          in: path
          name: annotationId
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Annotation"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/bookshelves:
    get:
      description: Retrieves a list of bookshelves belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.list
      parameters:
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookshelves"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/mylibrary/bookshelves/{shelf}:
    get:
      description: Retrieves metadata for a specific bookshelf belonging to the authenticated user.
      operationId: books.mylibrary.bookshelves.get
      parameters:
        - description: ID of bookshelf to retrieve.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookshelf"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/mylibrary/bookshelves/{shelf}/addVolume:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Adds a volume to a bookshelf.
      operationId: books.mylibrary.bookshelves.addVolume
      parameters:
        - description: ID of bookshelf to which to add a volume.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: ID of volume to add.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
        - description: The reason for which the book is added to the library.
          in: query
          name: reason
          schema:
            enum:
              - REASON_UNDEFINED
              - IOS_PREX
              - IOS_SEARCH
              - ONBOARDING
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/bookshelves/{shelf}/clearVolumes:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Clears all volumes from a bookshelf.
      operationId: books.mylibrary.bookshelves.clearVolumes
      parameters:
        - description: ID of bookshelf from which to remove a volume.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/bookshelves/{shelf}/moveVolume:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Moves a volume within a bookshelf.
      operationId: books.mylibrary.bookshelves.moveVolume
      parameters:
        - description: ID of bookshelf with the volume.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: ID of volume to move.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
        - description: Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)
          in: query
          name: volumePosition
          required: true
          schema:
            type: integer
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/bookshelves/{shelf}/removeVolume:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Removes a volume from a bookshelf.
      operationId: books.mylibrary.bookshelves.removeVolume
      parameters:
        - description: ID of bookshelf from which to remove a volume.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: ID of volume to remove.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
        - description: The reason for which the book is removed from the library.
          in: query
          name: reason
          schema:
            enum:
              - REASON_UNDEFINED
              - ONBOARDING
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/mylibrary/bookshelves/{shelf}/volumes:
    get:
      description: Gets volume information for volumes on a bookshelf.
      operationId: books.mylibrary.bookshelves.volumes.list
      parameters:
        - description: The bookshelf ID or name retrieve volumes for.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: ISO-3166-1 code to override the IP-based location.
          in: query
          name: country
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - PROJECTION_UNDEFINED
              - FULL
              - LITE
            type: string
        - description: Full-text search query string in this bookshelf.
          in: query
          name: q
          schema:
            type: string
        - description: Set to true to show pre-ordered books. Defaults to false.
          in: query
          name: showPreorders
          schema:
            type: boolean
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: Index of the first element to return (starts at 0)
          in: query
          name: startIndex
          schema:
            minimum: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/mylibrary/readingpositions/{volumeId}:
    get:
      description: Retrieves my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.get
      parameters:
        - description: ID of volume for which to retrieve a reading position.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: Volume content version for which this reading position is requested.
          in: query
          name: contentVersion
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadingPosition"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/mylibrary/readingpositions/{volumeId}/setPosition:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets my reading position information for a volume.
      operationId: books.mylibrary.readingpositions.setPosition
      parameters:
        - description: ID of volume for which to update the reading position.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: Position string for the new volume reading position.
          in: query
          name: position
          required: true
          schema:
            type: string
        - description: RFC 3339 UTC format timestamp associated with this reading position.
          in: query
          name: timestamp
          required: true
          schema:
            type: string
        - description: Action that caused this reading position to be set.
          in: query
          name: action
          schema:
            enum:
              - ACTION_UNDEFINED
              - bookmark
              - chapter
              - next-page
              - prev-page
              - scroll
              - search
            type: string
        - description: Volume content version for which this reading position applies.
          in: query
          name: contentVersion
          schema:
            type: string
        - description: Random persistent device cookie optional on set position.
          in: query
          name: deviceCookie
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - mylibrary
  /books/v1/notification/get:
    get:
      description: Returns notification details for a given notification id.
      operationId: books.notification.get
      parameters:
        - description: String to identify the notification.
          in: query
          name: notification_id
          required: true
          schema:
            type: string
        - description: "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body."
          in: query
          name: locale
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notification"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - notification
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/onboarding/listCategories:
    get:
      description: List categories for onboarding experience.
      operationId: books.onboarding.listCategories
      parameters:
        - description: ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.
          in: query
          name: locale
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - onboarding
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/onboarding/listCategoryVolumes:
    get:
      description: List available volumes under categories for onboarding experience.
      operationId: books.onboarding.listCategoryVolumes
      parameters:
        - description: List of category ids requested.
          explode: true
          in: query
          name: categoryId
          schema:
            items:
              type: string
            type: array
          style: form
        - description: ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.
          in: query
          name: locale
          schema:
            type: string
        - description: The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.
          in: query
          name: maxAllowedMaturityRating
          schema:
            enum:
              - MAX_ALLOWED_MATURITY_RATING_UNDEFINED
              - MATURE
              - not-mature
            type: string
        - description: Number of maximum results per page to be included in the response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The value of the nextToken from the previous page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume2"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - onboarding
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/personalizedstream/get:
    get:
      description: Returns a stream of personalized book clusters
      operationId: books.personalizedstream.get
      parameters:
        - description: "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
          in: query
          name: locale
          schema:
            type: string
        - description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
          in: query
          name: maxAllowedMaturityRating
          schema:
            enum:
              - MAX_ALLOWED_MATURITY_RATING_UNDEFINED
              - MATURE
              - not-mature
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Discoveryclusters"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - personalizedstream
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/promooffer/accept:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Accepts the promo offer.
      operationId: books.promooffer.accept
      parameters:
        - description: device android_id
          in: query
          name: androidId
          schema:
            type: string
        - description: device device
          in: query
          name: device
          schema:
            type: string
        - description: device manufacturer
          in: query
          name: manufacturer
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - in: query
          name: offerId
          schema:
            type: string
        - description: device product
          in: query
          name: product
          schema:
            type: string
        - description: device serial
          in: query
          name: serial
          schema:
            type: string
        - description: Volume id to exercise the offer
          in: query
          name: volumeId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - promooffer
  /books/v1/promooffer/dismiss:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Marks the promo offer as dismissed.
      operationId: books.promooffer.dismiss
      parameters:
        - description: device android_id
          in: query
          name: androidId
          schema:
            type: string
        - description: device device
          in: query
          name: device
          schema:
            type: string
        - description: device manufacturer
          in: query
          name: manufacturer
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: Offer to dimiss
          in: query
          name: offerId
          schema:
            type: string
        - description: device product
          in: query
          name: product
          schema:
            type: string
        - description: device serial
          in: query
          name: serial
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - promooffer
  /books/v1/promooffer/get:
    get:
      description: Returns a list of promo offers available to the user
      operationId: books.promooffer.get
      parameters:
        - description: device android_id
          in: query
          name: androidId
          schema:
            type: string
        - description: device device
          in: query
          name: device
          schema:
            type: string
        - description: device manufacturer
          in: query
          name: manufacturer
          schema:
            type: string
        - description: device model
          in: query
          name: model
          schema:
            type: string
        - description: device product
          in: query
          name: product
          schema:
            type: string
        - description: device serial
          in: query
          name: serial
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Offers"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - promooffer
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/series/get:
    get:
      description: Returns Series metadata for the given series ids.
      operationId: books.series.get
      parameters:
        - description: String that identifies the series
          explode: true
          in: query
          name: series_id
          required: true
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - series
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/series/membership/get:
    get:
      description: Returns Series membership data given the series id.
      operationId: books.series.membership.get
      parameters:
        - description: String that identifies the series
          in: query
          name: series_id
          required: true
          schema:
            type: string
        - description: Number of maximum results per page to be included in the response.
          in: query
          name: page_size
          schema:
            type: integer
        - description: The value of the nextToken from the previous page.
          in: query
          name: page_token
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Seriesmembership"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - series
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/users/{userId}/bookshelves:
    get:
      description: Retrieves a list of public bookshelves for the specified user.
      operationId: books.bookshelves.list
      parameters:
        - description: ID of user for whom to retrieve bookshelves.
          in: path
          name: userId
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookshelves"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - bookshelves
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/users/{userId}/bookshelves/{shelf}:
    get:
      description: Retrieves metadata for a specific bookshelf for the specified user.
      operationId: books.bookshelves.get
      parameters:
        - description: ID of user for whom to retrieve bookshelves.
          in: path
          name: userId
          required: true
          schema:
            type: string
        - description: ID of bookshelf to retrieve.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Bookshelf"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - bookshelves
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/users/{userId}/bookshelves/{shelf}/volumes:
    get:
      description: Retrieves volumes in a specific bookshelf for the specified user.
      operationId: books.bookshelves.volumes.list
      parameters:
        - description: ID of user for whom to retrieve bookshelf volumes.
          in: path
          name: userId
          required: true
          schema:
            type: string
        - description: ID of bookshelf to retrieve volumes.
          in: path
          name: shelf
          required: true
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            minimum: 0
            type: integer
        - description: Set to true to show pre-ordered books. Defaults to false.
          in: query
          name: showPreorders
          schema:
            type: boolean
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: Index of the first element to return (starts at 0)
          in: query
          name: startIndex
          schema:
            minimum: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - bookshelves
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes:
    get:
      description: Performs a book search.
      operationId: books.volumes.list
      parameters:
        - description: Full-text search query string.
          in: query
          name: q
          required: true
          schema:
            type: string
        - description: Restrict to volumes by download availability.
          in: query
          name: download
          schema:
            enum:
              - DOWNLOAD_UNDEFINED
              - EPUB
            type: string
        - description: Filter search results.
          in: query
          name: filter
          schema:
            enum:
              - FILTER_UNDEFINED
              - ebooks
              - free-ebooks
              - full
              - paid-ebooks
              - partial
            type: string
        - description: Restrict results to books with this language code.
          in: query
          name: langRestrict
          schema:
            type: string
        - description: Restrict search to this user's library.
          in: query
          name: libraryRestrict
          schema:
            enum:
              - LIBRARY_RESTRICT_UNDEFINED
              - my-library
              - no-restrict
            type: string
        - description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
          in: query
          name: maxAllowedMaturityRating
          schema:
            enum:
              - MAX_ALLOWED_MATURITY_RATING_UNDEFINED
              - MATURE
              - not-mature
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 40
            minimum: 0
            type: integer
        - description: Sort search results.
          in: query
          name: orderBy
          schema:
            enum:
              - ORDER_BY_UNDEFINED
              - newest
              - relevance
            type: string
        - description: Restrict and brand results for partner ID.
          in: query
          name: partner
          schema:
            type: string
        - description: Restrict to books or magazines.
          in: query
          name: printType
          schema:
            enum:
              - PRINT_TYPE_UNDEFINED
              - ALL
              - BOOKS
              - MAGAZINES
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - PROJECTION_UNDEFINED
              - FULL
              - LITE
            type: string
        - description: Set to true to show books available for preorder. Defaults to false.
          in: query
          name: showPreorders
          schema:
            type: boolean
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: Index of the first result to return (starts at 0)
          in: query
          name: startIndex
          schema:
            minimum: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/mybooks:
    get:
      description: Return a list of books in My Library.
      operationId: books.volumes.mybooks.list
      parameters:
        - description: How the book was acquired
          explode: true
          in: query
          name: acquireMethod
          schema:
            items:
              enum:
                - ACQUIRE_METHOD_UNDEFINED
                - FAMILY_SHARED
                - PREORDERED
                - PREVIOUSLY_RENTED
                - PUBLIC_DOMAIN
                - PURCHASED
                - RENTED
                - SAMPLE
                - UPLOADED
              type: string
            type: array
          style: form
        - description: ISO-3166-1 code to override the IP-based location.
          in: query
          name: country
          schema:
            type: string
        - description: ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.
          in: query
          name: locale
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 100
            minimum: 0
            type: integer
        - description: The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.
          explode: true
          in: query
          name: processingState
          schema:
            items:
              enum:
                - PROCESSING_STATE_UNDEFINED
                - COMPLETED_FAILED
                - COMPLETED_SUCCESS
                - RUNNING
              type: string
            type: array
          style: form
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: Index of the first result to return (starts at 0)
          in: query
          name: startIndex
          schema:
            minimum: 0
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/recommended:
    get:
      description: Return a list of recommended books for the current user.
      operationId: books.volumes.recommended.list
      parameters:
        - description: "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
          in: query
          name: locale
          schema:
            type: string
        - description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
          in: query
          name: maxAllowedMaturityRating
          schema:
            enum:
              - MAX_ALLOWED_MATURITY_RATING_UNDEFINED
              - MATURE
              - not-mature
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/recommended/rate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Rate a recommended book for the current user.
      operationId: books.volumes.recommended.rate
      parameters:
        - description: Rating to be given to the volume.
          in: query
          name: rating
          required: true
          schema:
            enum:
              - RATING_UNDEFINED
              - HAVE_IT
              - NOT_INTERESTED
            type: string
        - description: ID of the source volume.
          in: query
          name: volumeId
          required: true
          schema:
            type: string
        - description: "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
          in: query
          name: locale
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BooksVolumesRecommendedRateResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
  /books/v1/volumes/useruploaded:
    get:
      description: Return a list of books uploaded by the current user.
      operationId: books.volumes.useruploaded.list
      parameters:
        - description: "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
          in: query
          name: locale
          schema:
            type: string
        - description: Maximum number of results to return.
          in: query
          name: maxResults
          schema:
            maximum: 40
            minimum: 0
            type: integer
        - description: The processing state of the user uploaded volumes to be returned.
          explode: true
          in: query
          name: processingState
          schema:
            items:
              enum:
                - PROCESSING_STATE_UNDEFINED
                - COMPLETED_FAILED
                - COMPLETED_SUCCESS
                - RUNNING
              type: string
            type: array
          style: form
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: Index of the first result to return (starts at 0)
          in: query
          name: startIndex
          schema:
            minimum: 0
            type: integer
        - description: The ids of the volumes to be returned. If not specified all that match the processingState are returned.
          explode: true
          in: query
          name: volumeId
          schema:
            items:
              type: string
            type: array
          style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}:
    get:
      description: Gets volume information for a single volume.
      operationId: books.volumes.get
      parameters:
        - description: ID of volume to retrieve.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: ISO-3166-1 code to override the IP-based location.
          in: query
          name: country
          schema:
            type: string
        - description: Set to true to include non-comics series. Defaults to false.
          in: query
          name: includeNonComicsSeries
          schema:
            type: boolean
        - description: Brand results for partner ID.
          in: query
          name: partner
          schema:
            type: string
        - description: Restrict information returned to a set of selected fields.
          in: query
          name: projection
          schema:
            enum:
              - PROJECTION_UNDEFINED
              - FULL
              - LITE
            type: string
        - description: string to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - in: query
          name: user_library_consistent_read
          schema:
            type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volume"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/associated:
    get:
      description: Return a list of associated books.
      operationId: books.volumes.associated.list
      parameters:
        - description: ID of the source volume.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: Association type.
          in: query
          name: association
          schema:
            enum:
              - ASSOCIATION_UNDEFINED
              - end-of-sample
              - end-of-volume
              - related-for-play
            type: string
        - description: "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
          in: query
          name: locale
          schema:
            type: string
        - description: The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.
          in: query
          name: maxAllowedMaturityRating
          schema:
            enum:
              - MAX_ALLOWED_MATURITY_RATING_UNDEFINED
              - MATURE
              - not-mature
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumes"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - volumes
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/layers/{layerId}:
    get:
      description: Gets the volume annotations for a volume and layer.
      operationId: books.layers.volumeAnnotations.list
      parameters:
        - description: The volume to retrieve annotations for.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: The ID for the layer to get the annotations.
          in: path
          name: layerId
          required: true
          schema:
            type: string
        - description: The content version for the requested volume.
          in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - description: The end offset to end retrieving data from.
          in: query
          name: endOffset
          schema:
            type: string
        - description: The end position to end retrieving data from.
          in: query
          name: endPosition
          schema:
            type: string
        - description: "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
          in: query
          name: locale
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            maximum: 200
            minimum: 0
            type: integer
        - description: The value of the nextToken from the previous page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.
          in: query
          name: showDeleted
          schema:
            type: boolean
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: The start offset to start retrieving data from.
          in: query
          name: startOffset
          schema:
            type: string
        - description: The start position to start retrieving data from.
          in: query
          name: startPosition
          schema:
            type: string
        - description: RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).
          in: query
          name: updatedMax
          schema:
            type: string
        - description: RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).
          in: query
          name: updatedMin
          schema:
            type: string
        - description: The version of the volume annotations that you are requesting.
          in: query
          name: volumeAnnotationsVersion
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumeannotations"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - layers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}:
    get:
      description: Gets the volume annotation.
      operationId: books.layers.volumeAnnotations.get
      parameters:
        - description: The volume to retrieve annotations for.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: The ID for the layer to get the annotations.
          in: path
          name: layerId
          required: true
          schema:
            type: string
        - description: The ID of the volume annotation to retrieve.
          in: path
          name: annotationId
          required: true
          schema:
            type: string
        - description: "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
          in: query
          name: locale
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Volumeannotation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - layers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/layers/{layerId}/data:
    get:
      description: Gets the annotation data for a volume and layer.
      operationId: books.layers.annotationData.list
      parameters:
        - description: The volume to retrieve annotation data for.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: The ID for the layer to get the annotation data.
          in: path
          name: layerId
          required: true
          schema:
            type: string
        - description: The content version for the requested volume.
          in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - description: The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.
          explode: true
          in: query
          name: annotationDataId
          schema:
            items:
              type: string
            type: array
          style: form
        - description: The requested pixel height for any images. If height is provided width must also be provided.
          in: query
          name: h
          schema:
            type: integer
        - description: "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
          in: query
          name: locale
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            maximum: 200
            minimum: 0
            type: integer
        - description: The value of the nextToken from the previous page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: The requested scale for the image.
          in: query
          name: scale
          schema:
            minimum: 0
            type: integer
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).
          in: query
          name: updatedMax
          schema:
            type: string
        - description: RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).
          in: query
          name: updatedMin
          schema:
            type: string
        - description: The requested pixel width for any images. If width is provided height must also be provided.
          in: query
          name: w
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Annotationsdata"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - layers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}:
    get:
      description: Gets the annotation data.
      operationId: books.layers.annotationData.get
      parameters:
        - description: The volume to retrieve annotations for.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: The ID for the layer to get the annotations.
          in: path
          name: layerId
          required: true
          schema:
            type: string
        - description: The ID of the annotation data to retrieve.
          in: path
          name: annotationDataId
          required: true
          schema:
            type: string
        - description: The content version for the volume you are trying to retrieve.
          in: query
          name: contentVersion
          required: true
          schema:
            type: string
        - description: For the dictionary layer. Whether or not to allow web definitions.
          in: query
          name: allowWebDefinitions
          schema:
            type: boolean
        - description: The requested pixel height for any images. If height is provided width must also be provided.
          in: query
          name: h
          schema:
            type: integer
        - description: "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
          in: query
          name: locale
          schema:
            type: string
        - description: The requested scale for the image.
          in: query
          name: scale
          schema:
            minimum: 0
            type: integer
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
        - description: The requested pixel width for any images. If width is provided height must also be provided.
          in: query
          name: w
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DictionaryAnnotationdata"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - layers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/layersummary:
    get:
      description: List the layer summaries for a volume.
      operationId: books.layers.list
      parameters:
        - description: The volume to retrieve layers for.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: The content version for the requested volume.
          in: query
          name: contentVersion
          schema:
            type: string
        - description: Maximum number of results to return
          in: query
          name: maxResults
          schema:
            maximum: 200
            minimum: 0
            type: integer
        - description: The value of the nextToken from the previous page.
          in: query
          name: pageToken
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Layersummaries"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - layers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /books/v1/volumes/{volumeId}/layersummary/{summaryId}:
    get:
      description: Gets the layer summary for a volume.
      operationId: books.layers.get
      parameters:
        - description: The volume to retrieve layers for.
          in: path
          name: volumeId
          required: true
          schema:
            type: string
        - description: The ID for the layer to get the summary for.
          in: path
          name: summaryId
          required: true
          schema:
            type: string
        - description: The content version for the requested volume.
          in: query
          name: contentVersion
          schema:
            type: string
        - description: String to identify the originator of this request.
          in: query
          name: source
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Layersummary"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/books
          Oauth2c:
            - https://www.googleapis.com/auth/books
      tags:
        - layers
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    Annotation:
      properties:
        afterSelectedText:
          description: Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
          type: string
        beforeSelectedText:
          description: Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.
          type: string
        clientVersionRanges:
          description: Selection ranges sent from the client.
          properties:
            cfiRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in CFI format for this annotation sent by client.
            contentVersion:
              description: Content version the client sent in.
              type: string
            gbImageRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in GB image format for this annotation sent by client.
            gbTextRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in GB text format for this annotation sent by client.
            imageCfiRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in image CFI format for this annotation sent by client.
          type: object
        created:
          description: Timestamp for the created time of this annotation.
          type: string
        currentVersionRanges:
          description: Selection ranges for the most recent content version.
          properties:
            cfiRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in CFI format for this annotation for version above.
            contentVersion:
              description: Content version applicable to ranges below.
              type: string
            gbImageRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in GB image format for this annotation for version above.
            gbTextRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in GB text format for this annotation for version above.
            imageCfiRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in image CFI format for this annotation for version above.
          type: object
        data:
          description: User-created data for this annotation.
          type: string
        deleted:
          description: Indicates that this annotation is deleted.
          type: boolean
        highlightStyle:
          description: The highlight style for this annotation.
          type: string
        id:
          description: Id of this annotation, in the form of a GUID.
          type: string
        kind:
          description: Resource type.
          type: string
        layerId:
          description: The layer this annotation is for.
          type: string
        layerSummary:
          properties:
            allowedCharacterCount:
              description: Maximum allowed characters on this layer, especially for the "copy" layer.
              format: int32
              type: integer
            limitType:
              description: Type of limitation on this layer. "limited" or "unlimited" for the "copy" layer.
              type: string
            remainingCharacterCount:
              description: Remaining allowed characters on this layer, especially for the "copy" layer.
              format: int32
              type: integer
          type: object
        pageIds:
          description: Pages that this annotation spans.
          items:
            type: string
          type: array
        selectedText:
          description: Excerpt from the volume.
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        updated:
          description: Timestamp for the last time this annotation was modified.
          type: string
        volumeId:
          description: The volume that this annotation belongs to.
          type: string
      type: object
    Annotations:
      properties:
        items:
          description: A list of annotations.
          items:
            $ref: "#/components/schemas/Annotation"
          type: array
        kind:
          description: Resource type.
          type: string
        nextPageToken:
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
          type: string
        totalItems:
          description: Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated.
          format: int32
          type: integer
      type: object
    AnnotationsSummary:
      properties:
        kind:
          type: string
        layers:
          items:
            properties:
              allowedCharacterCount:
                format: int32
                type: integer
              layerId:
                type: string
              limitType:
                type: string
              remainingCharacterCount:
                format: int32
                type: integer
              updated:
                type: string
            type: object
          type: array
      type: object
    Annotationsdata:
      properties:
        items:
          description: A list of Annotation Data.
          items:
            $ref: "#/components/schemas/GeoAnnotationdata"
          type: array
        kind:
          description: Resource type
          type: string
        nextPageToken:
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
          type: string
        totalItems:
          description: The total number of volume annotations found.
          format: int32
          type: integer
      type: object
    BooksAnnotationsRange:
      properties:
        endOffset:
          description: The offset from the ending position.
          type: string
        endPosition:
          description: The ending position for the range.
          type: string
        startOffset:
          description: The offset from the starting position.
          type: string
        startPosition:
          description: The starting position for the range.
          type: string
      type: object
    BooksCloudloadingResource:
      properties:
        author:
          type: string
        processingState:
          type: string
        title:
          type: string
        volumeId:
          type: string
      type: object
    BooksVolumesRecommendedRateResponse:
      properties:
        consistency_token:
          type: string
      type: object
    Bookshelf:
      properties:
        access:
          description: Whether this bookshelf is PUBLIC or PRIVATE.
          type: string
        created:
          description: Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).
          type: string
        description:
          description: Description of this bookshelf.
          type: string
        id:
          description: Id of this bookshelf, only unique by user.
          format: int32
          type: integer
        kind:
          description: Resource type for bookshelf metadata.
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        title:
          description: Title of this bookshelf.
          type: string
        updated:
          description: Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).
          type: string
        volumeCount:
          description: Number of volumes in this bookshelf.
          format: int32
          type: integer
        volumesLastUpdated:
          description: Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).
          type: string
      type: object
    Bookshelves:
      properties:
        items:
          description: A list of bookshelves.
          items:
            $ref: "#/components/schemas/Bookshelf"
          type: array
        kind:
          description: Resource type.
          type: string
      type: object
    Category:
      properties:
        items:
          description: A list of onboarding categories.
          items:
            properties:
              badgeUrl:
                type: string
              categoryId:
                type: string
              name:
                type: string
            type: object
          type: array
        kind:
          description: Resource type.
          type: string
      type: object
    ConcurrentAccessRestriction:
      properties:
        deviceAllowed:
          description: Whether access is granted for this (user, device, volume).
          type: boolean
        kind:
          description: Resource type.
          type: string
        maxConcurrentDevices:
          description: The maximum number of concurrent access licenses for this volume.
          format: int32
          type: integer
        message:
          description: Error/warning message.
          type: string
        nonce:
          description: Client nonce for verification. Download access and client-validation only.
          type: string
        reasonCode:
          description: Error/warning reason code.
          type: string
        restricted:
          description: Whether this volume has any concurrent access restrictions.
          type: boolean
        signature:
          description: Response signature.
          type: string
        source:
          description: Client app identifier for verification. Download access and client-validation only.
          type: string
        timeWindowSeconds:
          description: Time in seconds for license auto-expiration.
          format: int32
          type: integer
        volumeId:
          description: Identifies the volume for which this entry applies.
          type: string
      type: object
    DictionaryAnnotationdata:
      properties:
        annotationType:
          description: The type of annotation this data is for.
          type: string
        data:
          $ref: "#/components/schemas/Dictlayerdata"
          description: JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.
        encodedData:
          description: Base64 encoded data for this annotation data.
          format: byte
          type: string
        id:
          description: Unique id for this annotation data.
          type: string
        kind:
          description: Resource Type
          type: string
        layerId:
          description: The Layer id for this data. *
          type: string
        selfLink:
          description: URL for this resource. *
          type: string
        updated:
          description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
          type: string
        volumeId:
          description: The volume id for this data. *
          type: string
      type: object
    Dictlayerdata:
      properties:
        common:
          properties:
            title:
              description: The display title and localized canonical name to use when searching for this entity on Google search.
              type: string
          type: object
        dict:
          properties:
            source:
              description: The source, url and attribution for this dictionary data.
              properties:
                attribution:
                  type: string
                url:
                  type: string
              type: object
            words:
              items:
                properties:
                  derivatives:
                    items:
                      properties:
                        source:
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                          type: object
                        text:
                          type: string
                      type: object
                    type: array
                  examples:
                    items:
                      properties:
                        source:
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                          type: object
                        text:
                          type: string
                      type: object
                    type: array
                  senses:
                    items:
                      properties:
                        conjugations:
                          items:
                            properties:
                              type:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        definitions:
                          items:
                            properties:
                              definition:
                                type: string
                              examples:
                                items:
                                  properties:
                                    source:
                                      properties:
                                        attribution:
                                          type: string
                                        url:
                                          type: string
                                      type: object
                                    text:
                                      type: string
                                  type: object
                                type: array
                            type: object
                          type: array
                        partOfSpeech:
                          type: string
                        pronunciation:
                          type: string
                        pronunciationUrl:
                          type: string
                        source:
                          properties:
                            attribution:
                              type: string
                            url:
                              type: string
                          type: object
                        syllabification:
                          type: string
                        synonyms:
                          items:
                            properties:
                              source:
                                properties:
                                  attribution:
                                    type: string
                                  url:
                                    type: string
                                type: object
                              text:
                                type: string
                            type: object
                          type: array
                      type: object
                    type: array
                  source:
                    description: The words with different meanings but not related words, e.g. "go" (game) and "go" (verb).
                    properties:
                      attribution:
                        type: string
                      url:
                        type: string
                    type: object
                type: object
              type: array
          type: object
        kind:
          type: string
      type: object
    Discoveryclusters:
      properties:
        clusters:
          items:
            properties:
              banner_with_content_container:
                properties:
                  fillColorArgb:
                    type: string
                  imageUrl:
                    type: string
                  maskColorArgb:
                    type: string
                  moreButtonText:
                    type: string
                  moreButtonUrl:
                    type: string
                  textColorArgb:
                    type: string
                type: object
              subTitle:
                type: string
              title:
                type: string
              totalVolumes:
                format: int32
                type: integer
              uid:
                type: string
              volumes:
                items:
                  $ref: "#/components/schemas/Volume"
                type: array
            type: object
          type: array
        kind:
          description: Resorce type.
          type: string
        totalClusters:
          format: int32
          type: integer
      type: object
    DownloadAccessRestriction:
      properties:
        deviceAllowed:
          description: If restricted, whether access is granted for this (user, device, volume).
          type: boolean
        downloadsAcquired:
          description: If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).
          format: int32
          type: integer
        justAcquired:
          description: If deviceAllowed, whether access was just acquired with this request.
          type: boolean
        kind:
          description: Resource type.
          type: string
        maxDownloadDevices:
          description: If restricted, the maximum number of content download licenses for this volume.
          format: int32
          type: integer
        message:
          description: Error/warning message.
          type: string
        nonce:
          description: Client nonce for verification. Download access and client-validation only.
          type: string
        reasonCode:
          description: Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS
          type: string
        restricted:
          description: Whether this volume has any download access restrictions.
          type: boolean
        signature:
          description: Response signature.
          type: string
        source:
          description: Client app identifier for verification. Download access and client-validation only.
          type: string
        volumeId:
          description: Identifies the volume for which this entry applies.
          type: string
      type: object
    DownloadAccesses:
      properties:
        downloadAccessList:
          description: A list of download access responses.
          items:
            $ref: "#/components/schemas/DownloadAccessRestriction"
          type: array
        kind:
          description: Resource type.
          type: string
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }"
      properties: {}
      type: object
    FamilyInfo:
      properties:
        kind:
          description: Resource type.
          type: string
        membership:
          description: Family membership info of the user that made the request.
          properties:
            acquirePermission:
              description: Restrictions on user buying and acquiring content.
              type: string
            ageGroup:
              description: The age group of the user.
              type: string
            allowedMaturityRating:
              description: The maximum allowed maturity rating for the user.
              type: string
            isInFamily:
              type: boolean
            role:
              description: The role of the user in the family.
              type: string
          type: object
      type: object
    GeoAnnotationdata:
      properties:
        annotationType:
          description: The type of annotation this data is for.
          type: string
        data:
          $ref: "#/components/schemas/Geolayerdata"
          description: JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.
        encodedData:
          description: Base64 encoded data for this annotation data.
          format: byte
          type: string
        id:
          description: Unique id for this annotation data.
          type: string
        kind:
          description: Resource Type
          type: string
        layerId:
          description: The Layer id for this data. *
          type: string
        selfLink:
          description: URL for this resource. *
          type: string
        updated:
          description: Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).
          type: string
        volumeId:
          description: The volume id for this data. *
          type: string
      type: object
    Geolayerdata:
      properties:
        common:
          properties:
            lang:
              description: The language of the information url and description.
              type: string
            previewImageUrl:
              description: The URL for the preview image information.
              type: string
            snippet:
              description: The description for this location.
              type: string
            snippetUrl:
              description: "The URL for information for this location. Ex: wikipedia link."
              type: string
            title:
              description: The display title and localized canonical name to use when searching for this entity on Google search.
              type: string
          type: object
        geo:
          properties:
            boundary:
              description: The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates.
              items:
                type: string
              type: array
            cachePolicy:
              description: "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
              type: string
            countryCode:
              description: The country code of the location.
              type: string
            latitude:
              description: The latitude of the location.
              format: double
              type: number
            longitude:
              description: The longitude of the location.
              format: double
              type: number
            mapType:
              description: "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN"
              type: string
            viewport:
              description: The viewport for showing this location. This is a latitude, longitude rectangle.
              properties:
                hi:
                  properties:
                    latitude:
                      format: double
                      type: number
                    longitude:
                      format: double
                      type: number
                  type: object
                lo:
                  properties:
                    latitude:
                      format: double
                      type: number
                    longitude:
                      format: double
                      type: number
                  type: object
              type: object
            zoom:
              description: "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels"
              format: int32
              type: integer
          type: object
        kind:
          type: string
      type: object
    Layersummaries:
      properties:
        items:
          description: A list of layer summary items.
          items:
            $ref: "#/components/schemas/Layersummary"
          type: array
        kind:
          description: Resource type.
          type: string
        totalItems:
          description: The total number of layer summaries found.
          format: int32
          type: integer
      type: object
    Layersummary:
      properties:
        annotationCount:
          description: The number of annotations for this layer.
          format: int32
          type: integer
        annotationTypes:
          description: The list of annotation types contained for this layer.
          items:
            type: string
          type: array
        annotationsDataLink:
          description: Link to get data for this annotation.
          type: string
        annotationsLink:
          description: The link to get the annotations for this layer.
          type: string
        contentVersion:
          description: The content version this resource is for.
          type: string
        dataCount:
          description: The number of data items for this layer.
          format: int32
          type: integer
        id:
          description: Unique id of this layer summary.
          type: string
        kind:
          description: Resource Type
          type: string
        layerId:
          description: The layer id for this summary.
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        updated:
          description: Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format).
          type: string
        volumeAnnotationsVersion:
          description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
          type: string
        volumeId:
          description: The volume id this resource is for.
          type: string
      type: object
    Metadata:
      properties:
        items:
          description: A list of offline dictionary metadata.
          items:
            properties:
              download_url:
                type: string
              encrypted_key:
                type: string
              language:
                type: string
              size:
                format: int64
                type: string
              version:
                format: int64
                type: string
            type: object
          type: array
        kind:
          description: Resource type.
          type: string
      type: object
    Notification:
      properties:
        body:
          type: string
        crmExperimentIds:
          description: The list of crm experiment ids.
          items:
            format: int64
            type: string
          type: array
        doc_id:
          type: string
        doc_type:
          type: string
        dont_show_notification:
          type: boolean
        iconUrl:
          type: string
        is_document_mature:
          type: boolean
        kind:
          description: Resource type.
          type: string
        notificationGroup:
          type: string
        notification_type:
          type: string
        pcampaign_id:
          type: string
        reason:
          type: string
        show_notification_settings_action:
          type: boolean
        targetUrl:
          type: string
        timeToExpireMs:
          format: int64
          type: string
        title:
          type: string
      type: object
    Offers:
      properties:
        items:
          description: A list of offers.
          items:
            properties:
              artUrl:
                type: string
              gservicesKey:
                type: string
              id:
                type: string
              items:
                items:
                  properties:
                    author:
                      type: string
                    canonicalVolumeLink:
                      type: string
                    coverUrl:
                      type: string
                    description:
                      type: string
                    title:
                      type: string
                    volumeId:
                      type: string
                  type: object
                type: array
            type: object
          type: array
        kind:
          description: Resource type.
          type: string
      type: object
    ReadingPosition:
      properties:
        epubCfiPosition:
          description: Position in an EPUB as a CFI.
          type: string
        gbImagePosition:
          description: Position in a volume for image-based content.
          type: string
        gbTextPosition:
          description: Position in a volume for text-based content.
          type: string
        kind:
          description: Resource type for a reading position.
          type: string
        pdfPosition:
          description: Position in a PDF file.
          type: string
        updated:
          description: Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).
          type: string
        volumeId:
          description: Volume id associated with this reading position.
          type: string
      type: object
    RequestAccessData:
      properties:
        concurrentAccess:
          $ref: "#/components/schemas/ConcurrentAccessRestriction"
          description: A concurrent access response.
        downloadAccess:
          $ref: "#/components/schemas/DownloadAccessRestriction"
          description: A download access response.
        kind:
          description: Resource type.
          type: string
      type: object
    Review:
      properties:
        author:
          description: Author of this review.
          properties:
            displayName:
              description: Name of this person.
              type: string
          type: object
        content:
          description: Review text.
          type: string
        date:
          description: Date of this review.
          type: string
        fullTextUrl:
          description: URL for the full review text, for reviews gathered from the web.
          type: string
        kind:
          description: Resource type for a review.
          type: string
        rating:
          description: Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED.
          type: string
        source:
          description: Information regarding the source of this review, when the review is not from a Google Books user.
          properties:
            description:
              description: Name of the source.
              type: string
            extraDescription:
              description: Extra text about the source of the review.
              type: string
            url:
              description: URL of the source of the review.
              type: string
          type: object
        title:
          description: Title for this review.
          type: string
        type:
          description: Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER.
          type: string
        volumeId:
          description: Volume that this review is for.
          type: string
      type: object
    Series:
      properties:
        kind:
          description: Resource type.
          type: string
        series:
          items:
            properties:
              bannerImageUrl:
                type: string
              eligibleForSubscription:
                type: boolean
              imageUrl:
                type: string
              isComplete:
                type: boolean
              seriesFormatType:
                type: string
              seriesId:
                type: string
              seriesSubscriptionReleaseInfo:
                properties:
                  cancelTime:
                    type: string
                  currentReleaseInfo:
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                      releaseNumber:
                        type: string
                      releaseTime:
                        type: string
                    type: object
                  nextReleaseInfo:
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                      releaseNumber:
                        type: string
                      releaseTime:
                        type: string
                    type: object
                  seriesSubscriptionType:
                    type: string
                type: object
              seriesType:
                type: string
              subscriptionId:
                type: string
              title:
                type: string
            type: object
          type: array
      type: object
    Seriesmembership:
      properties:
        kind:
          description: Resorce type.
          type: string
        member:
          items:
            $ref: "#/components/schemas/Volume"
          type: array
        nextPageToken:
          type: string
      type: object
    Usersettings:
      properties:
        kind:
          description: Resource type.
          type: string
        notesExport:
          description: User settings in sub-objects, each for different purposes.
          properties:
            folderName:
              type: string
            isEnabled:
              type: boolean
          type: object
        notification:
          properties:
            matchMyInterests:
              properties:
                opted_state:
                  type: string
              type: object
            moreFromAuthors:
              properties:
                opted_state:
                  type: string
              type: object
            moreFromSeries:
              properties:
                opted_state:
                  type: string
              type: object
            priceDrop:
              properties:
                opted_state:
                  type: string
              type: object
            rewardExpirations:
              properties:
                opted_state:
                  type: string
              type: object
          type: object
      type: object
    Volume:
      properties:
        accessInfo:
          description: Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).
          properties:
            accessViewStatus:
              description: Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)
              type: string
            country:
              description: The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)
              type: string
            downloadAccess:
              $ref: "#/components/schemas/DownloadAccessRestriction"
              description: Information about a volume's download license access restrictions.
            driveImportedContentLink:
              description: URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.
              type: string
            embeddable:
              description: Whether this volume can be embedded in a viewport using the Embedded Viewer API.
              type: boolean
            epub:
              description: Information about epub content. (In LITE projection.)
              properties:
                acsTokenLink:
                  description: URL to retrieve ACS token for epub download. (In LITE projection.)
                  type: string
                downloadLink:
                  description: URL to download epub. (In LITE projection.)
                  type: string
                isAvailable:
                  description: Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)
                  type: boolean
              type: object
            explicitOfflineLicenseManagement:
              description: Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it.
              type: boolean
            pdf:
              description: Information about pdf content. (In LITE projection.)
              properties:
                acsTokenLink:
                  description: URL to retrieve ACS token for pdf download. (In LITE projection.)
                  type: string
                downloadLink:
                  description: URL to download pdf. (In LITE projection.)
                  type: string
                isAvailable:
                  description: Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)
                  type: boolean
              type: object
            publicDomain:
              description: Whether or not this book is public domain in the country listed above.
              type: boolean
            quoteSharingAllowed:
              description: Whether quote sharing is allowed for this volume.
              type: boolean
            textToSpeechPermission:
              description: Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.
              type: string
            viewOrderUrl:
              description: For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.
              type: string
            viewability:
              description: The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.
              type: string
            webReaderLink:
              description: URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.
              type: string
          type: object
        etag:
          description: Opaque identifier for a specific version of a volume resource. (In LITE projection)
          type: string
        id:
          description: Unique identifier for a volume. (In LITE projection.)
          type: string
        kind:
          description: Resource type for a volume. (In LITE projection.)
          type: string
        layerInfo:
          description: What layers exist in this volume and high level information about them.
          properties:
            layers:
              description: A layer should appear here if and only if the layer exists for this book.
              items:
                properties:
                  layerId:
                    description: The layer id of this layer (e.g. "geo").
                    type: string
                  volumeAnnotationsVersion:
                    description: The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately.
                    type: string
                type: object
              type: array
          type: object
        recommendedInfo:
          description: Recommendation related information for this volume.
          properties:
            explanation:
              description: A text explaining why this volume is recommended.
              type: string
          type: object
        saleInfo:
          description: Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).
          properties:
            buyLink:
              description: URL to purchase this volume on the Google Books site. (In LITE projection)
              type: string
            country:
              description: The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)
              type: string
            isEbook:
              description: Whether or not this volume is an eBook (can be added to the My eBooks shelf).
              type: boolean
            listPrice:
              description: Suggested retail price. (In LITE projection.)
              properties:
                amount:
                  description: Amount in the currency listed below. (In LITE projection.)
                  format: double
                  type: number
                currencyCode:
                  description: An ISO 4217, three-letter currency code. (In LITE projection.)
                  type: string
              type: object
            offers:
              description: Offers available for this volume (sales and rentals).
              items:
                properties:
                  finskyOfferType:
                    description: The finsky offer type (e.g., PURCHASE=0 RENTAL=3)
                    format: int32
                    type: integer
                  giftable:
                    description: Indicates whether the offer is giftable.
                    type: boolean
                  listPrice:
                    description: Offer list (=undiscounted) price in Micros.
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                    type: object
                  rentalDuration:
                    description: The rental duration (for rental offers only).
                    properties:
                      count:
                        format: double
                        type: number
                      unit:
                        type: string
                    type: object
                  retailPrice:
                    description: Offer retail (=discounted) price in Micros
                    properties:
                      amountInMicros:
                        format: double
                        type: number
                      currencyCode:
                        type: string
                    type: object
                type: object
              type: array
            onSaleDate:
              description: The date on which this book is available for sale.
              type: string
            retailPrice:
              description: The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)
              properties:
                amount:
                  description: Amount in the currency listed below. (In LITE projection.)
                  format: double
                  type: number
                currencyCode:
                  description: An ISO 4217, three-letter currency code. (In LITE projection.)
                  type: string
              type: object
            saleability:
              description: Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.
              type: string
          type: object
        searchInfo:
          description: Search result information related to this volume.
          properties:
            textSnippet:
              description: A text snippet containing the search query.
              type: string
          type: object
        selfLink:
          description: URL to this resource. (In LITE projection.)
          type: string
        userInfo:
          description: User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)
          properties:
            acquiredTime:
              description: Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.
              type: string
            acquisitionType:
              description: How this volume was acquired.
              format: int32
              type: integer
            copy:
              description: Copy/Paste accounting information.
              properties:
                allowedCharacterCount:
                  format: int32
                  type: integer
                limitType:
                  type: string
                remainingCharacterCount:
                  format: int32
                  type: integer
                updated:
                  type: string
              type: object
            entitlementType:
              description: Whether this volume is purchased, sample, pd download etc.
              format: int32
              type: integer
            familySharing:
              description: Information on the ability to share with the family.
              properties:
                familyRole:
                  description: The role of the user in the family.
                  type: string
                isSharingAllowed:
                  description: Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.
                  type: boolean
                isSharingDisabledByFop:
                  description: Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet.
                  type: boolean
              type: object
            isFamilySharedFromUser:
              description: Whether or not the user shared this volume with the family.
              type: boolean
            isFamilySharedToUser:
              description: Whether or not the user received this volume through family sharing.
              type: boolean
            isFamilySharingAllowed:
              description: "Deprecated: Replaced by familySharing."
              type: boolean
            isFamilySharingDisabledByFop:
              description: "Deprecated: Replaced by familySharing."
              type: boolean
            isInMyBooks:
              description: Whether or not this volume is currently in "my books."
              type: boolean
            isPreordered:
              description: Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)
              type: boolean
            isPurchased:
              description: Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)
              type: boolean
            isUploaded:
              description: Whether or not this volume was user uploaded.
              type: boolean
            readingPosition:
              $ref: "#/components/schemas/ReadingPosition"
              description: The user's current reading position in the volume, if one is available. (In LITE projection.)
            rentalPeriod:
              description: Period during this book is/was a valid rental.
              properties:
                endUtcSec:
                  format: int64
                  type: string
                startUtcSec:
                  format: int64
                  type: string
              type: object
            rentalState:
              description: Whether this book is an active or an expired rental.
              type: string
            review:
              $ref: "#/components/schemas/Review"
              description: This user's review of this volume, if one exists.
            updated:
              description: Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).
              type: string
            userUploadedVolumeInfo:
              properties:
                processingState:
                  type: string
              type: object
          type: object
        volumeInfo:
          description: General volume information.
          properties:
            allowAnonLogging:
              description: Whether anonymous logging should be allowed.
              type: boolean
            authors:
              description: The names of the authors and/or editors for this volume. (In LITE projection)
              items:
                type: string
              type: array
            averageRating:
              description: The mean review rating for this volume. (min = 1.0, max = 5.0)
              format: double
              type: number
            canonicalVolumeLink:
              description: Canonical URL for a volume. (In LITE projection.)
              type: string
            categories:
              description: A list of subject categories, such as "Fiction", "Suspense", etc.
              items:
                type: string
              type: array
            comicsContent:
              description: Whether the volume has comics content.
              type: boolean
            contentVersion:
              description: An identifier for the version of the volume content (text & images). (In LITE projection)
              type: string
            description:
              description: A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)
              type: string
            dimensions:
              description: Physical dimensions of this volume.
              properties:
                height:
                  description: Height or length of this volume (in cm).
                  type: string
                thickness:
                  description: Thickness of this volume (in cm).
                  type: string
                width:
                  description: Width of this volume (in cm).
                  type: string
              type: object
            imageLinks:
              description: A list of image links for all the sizes that are available. (In LITE projection.)
              properties:
                extraLarge:
                  description: Image link for extra large size (width of ~1280 pixels). (In LITE projection)
                  type: string
                large:
                  description: Image link for large size (width of ~800 pixels). (In LITE projection)
                  type: string
                medium:
                  description: Image link for medium size (width of ~575 pixels). (In LITE projection)
                  type: string
                small:
                  description: Image link for small size (width of ~300 pixels). (In LITE projection)
                  type: string
                smallThumbnail:
                  description: Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)
                  type: string
                thumbnail:
                  description: Image link for thumbnail size (width of ~128 pixels). (In LITE projection)
                  type: string
              type: object
            industryIdentifiers:
              description: Industry standard identifiers for this volume.
              items:
                properties:
                  identifier:
                    description: Industry specific volume identifier.
                    type: string
                  type:
                    description: Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.
                    type: string
                type: object
              type: array
            infoLink:
              description: URL to view information about this volume on the Google Books site. (In LITE projection)
              type: string
            language:
              description: Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc.
              type: string
            mainCategory:
              description: The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.
              type: string
            maturityRating:
              type: string
            pageCount:
              description: Total number of pages as per publisher metadata.
              format: int32
              type: integer
            panelizationSummary:
              description: A top-level summary of the panelization info in this volume.
              properties:
                containsEpubBubbles:
                  type: boolean
                containsImageBubbles:
                  type: boolean
                epubBubbleVersion:
                  type: string
                imageBubbleVersion:
                  type: string
              type: object
            previewLink:
              description: URL to preview this volume on the Google Books site.
              type: string
            printType:
              description: Type of publication of this volume. Possible values are BOOK or MAGAZINE.
              type: string
            printedPageCount:
              description: Total number of printed pages in generated pdf representation.
              format: int32
              type: integer
            publishedDate:
              description: Date of publication. (In LITE projection.)
              type: string
            publisher:
              description: Publisher of this volume. (In LITE projection.)
              type: string
            ratingsCount:
              description: The number of review ratings for this volume.
              format: int32
              type: integer
            readingModes:
              description: The reading modes available for this volume.
              properties:
                image:
                  type: boolean
                text:
                  type: boolean
              type: object
            samplePageCount:
              description: Total number of sample pages as per publisher metadata.
              format: int32
              type: integer
            seriesInfo:
              $ref: "#/components/schemas/Volumeseriesinfo"
            subtitle:
              description: Volume subtitle. (In LITE projection.)
              type: string
            title:
              description: Volume title. (In LITE projection.)
              type: string
          type: object
      type: object
    Volume2:
      properties:
        items:
          description: A list of volumes.
          items:
            $ref: "#/components/schemas/Volume"
          type: array
        kind:
          description: Resource type.
          type: string
        nextPageToken:
          type: string
      type: object
    Volumeannotation:
      properties:
        annotationDataId:
          description: The annotation data id for this volume annotation.
          type: string
        annotationDataLink:
          description: Link to get data for this annotation.
          type: string
        annotationType:
          description: The type of annotation this is.
          type: string
        contentRanges:
          description: The content ranges to identify the selected text.
          properties:
            cfiRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in CFI format for this annotation for version above.
            contentVersion:
              description: Content version applicable to ranges below.
              type: string
            gbImageRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in GB image format for this annotation for version above.
            gbTextRange:
              $ref: "#/components/schemas/BooksAnnotationsRange"
              description: Range in GB text format for this annotation for version above.
          type: object
        data:
          description: Data for this annotation.
          type: string
        deleted:
          description: Indicates that this annotation is deleted.
          type: boolean
        id:
          description: Unique id of this volume annotation.
          type: string
        kind:
          description: Resource Type
          type: string
        layerId:
          description: The Layer this annotation is for.
          type: string
        pageIds:
          description: Pages the annotation spans.
          items:
            type: string
          type: array
        selectedText:
          description: Excerpt from the volume.
          type: string
        selfLink:
          description: URL to this resource.
          type: string
        updated:
          description: Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).
          type: string
        volumeId:
          description: The Volume this annotation is for.
          type: string
      type: object
    Volumeannotations:
      properties:
        items:
          description: A list of volume annotations.
          items:
            $ref: "#/components/schemas/Volumeannotation"
          type: array
        kind:
          description: Resource type
          type: string
        nextPageToken:
          description: Token to pass in for pagination for the next page. This will not be present if this request does not have more results.
          type: string
        totalItems:
          description: The total number of volume annotations found.
          format: int32
          type: integer
        version:
          description: "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book)."
          type: string
      type: object
    Volumes:
      properties:
        items:
          description: A list of volumes.
          items:
            $ref: "#/components/schemas/Volume"
          type: array
        kind:
          description: Resource type.
          type: string
        totalItems:
          description: Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.
          format: int32
          type: integer
      type: object
    Volumeseriesinfo:
      properties:
        bookDisplayNumber:
          description: The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.
          type: string
        kind:
          description: Resource type.
          type: string
        shortSeriesBookTitle:
          description: Short book title in the context of the series.
          type: string
        volumeSeries:
          items:
            properties:
              issue:
                description: List of issues. Applicable only for Collection Edition and Omnibus.
                items:
                  properties:
                    issueDisplayNumber:
                      type: string
                    issueOrderNumber:
                      format: int32
                      type: integer
                  type: object
                type: array
              orderNumber:
                description: The book order number in the series.
                format: int32
                type: integer
              seriesBookType:
                description: The book type in the context of series. Examples - Single Issue, Collection Edition, etc.
                type: string
              seriesId:
                description: The series id.
                type: string
            type: object
          type: array
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/books: Manage your books
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/books: Manage your books
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
