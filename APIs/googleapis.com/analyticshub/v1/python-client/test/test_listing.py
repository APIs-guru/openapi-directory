# coding: utf-8

"""
    Analytics Hub API

    Exchange data and analytics assets securely and efficiently.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.listing import Listing

class TestListing(unittest.TestCase):
    """Listing unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Listing:
        """Test Listing
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Listing`
        """
        model = Listing()
        if include_optional:
            return Listing(
                bigquery_dataset = openapi_client.models.big_query_dataset_source.BigQueryDatasetSource(
                    dataset = '', ),
                categories = [
                    'CATEGORY_UNSPECIFIED'
                    ],
                data_provider = openapi_client.models.data_provider.DataProvider(
                    name = '', 
                    primary_contact = '', ),
                description = '',
                display_name = '',
                documentation = '',
                icon = 'YQ==',
                name = '',
                primary_contact = '',
                publisher = openapi_client.models.publisher.Publisher(
                    name = '', 
                    primary_contact = '', ),
                request_access = '',
                restricted_export_config = openapi_client.models.restricted_export_config.RestrictedExportConfig(
                    enabled = True, 
                    restrict_direct_table_access = True, 
                    restrict_query_result = True, ),
                state = 'STATE_UNSPECIFIED'
            )
        else:
            return Listing(
        )
        """

    def testListing(self):
        """Test Listing"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
