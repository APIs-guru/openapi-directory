# coding: utf-8

"""
    Analytics Hub API

    Exchange data and analytics assets securely and efficiently.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_data_exchanges_response import ListDataExchangesResponse

class TestListDataExchangesResponse(unittest.TestCase):
    """ListDataExchangesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDataExchangesResponse:
        """Test ListDataExchangesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDataExchangesResponse`
        """
        model = ListDataExchangesResponse()
        if include_optional:
            return ListDataExchangesResponse(
                data_exchanges = [
                    openapi_client.models.data_exchange.DataExchange(
                        description = '', 
                        display_name = '', 
                        documentation = '', 
                        icon = 'YQ==', 
                        listing_count = 56, 
                        name = '', 
                        primary_contact = '', 
                        sharing_environment_config = openapi_client.models.sharing_environment_config.SharingEnvironmentConfig(
                            dcr_exchange_config = openapi_client.models.dcr_exchange_config.DcrExchangeConfig(
                                single_linked_dataset_per_cleanroom = True, 
                                single_selected_resource_sharing_restriction = True, ), 
                            default_exchange_config = openapi_client.models.default_exchange_config.DefaultExchangeConfig(), ), )
                    ],
                next_page_token = ''
            )
        else:
            return ListDataExchangesResponse(
        )
        """

    def testListDataExchangesResponse(self):
        """Test ListDataExchangesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
