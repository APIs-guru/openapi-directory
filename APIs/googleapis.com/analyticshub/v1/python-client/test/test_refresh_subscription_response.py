# coding: utf-8

"""
    Analytics Hub API

    Exchange data and analytics assets securely and efficiently.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.refresh_subscription_response import RefreshSubscriptionResponse

class TestRefreshSubscriptionResponse(unittest.TestCase):
    """RefreshSubscriptionResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RefreshSubscriptionResponse:
        """Test RefreshSubscriptionResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RefreshSubscriptionResponse`
        """
        model = RefreshSubscriptionResponse()
        if include_optional:
            return RefreshSubscriptionResponse(
                subscription = openapi_client.models.subscription.Subscription(
                    creation_time = '', 
                    data_exchange = '', 
                    last_modify_time = '', 
                    linked_dataset_map = {
                        'key' : openapi_client.models.linked_resource.LinkedResource(
                            linked_dataset = '', )
                        }, 
                    listing = '', 
                    name = '', 
                    organization_display_name = '', 
                    organization_id = '', 
                    state = 'STATE_UNSPECIFIED', 
                    subscriber_contact = '', )
            )
        else:
            return RefreshSubscriptionResponse(
        )
        """

    def testRefreshSubscriptionResponse(self):
        """Test RefreshSubscriptionResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
