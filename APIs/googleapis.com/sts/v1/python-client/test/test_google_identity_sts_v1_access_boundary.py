# coding: utf-8

"""
    Security Token Service API

    The Security Token Service exchanges Google or third-party credentials for a short-lived access token to Google Cloud resources.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_identity_sts_v1_access_boundary import GoogleIdentityStsV1AccessBoundary

class TestGoogleIdentityStsV1AccessBoundary(unittest.TestCase):
    """GoogleIdentityStsV1AccessBoundary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleIdentityStsV1AccessBoundary:
        """Test GoogleIdentityStsV1AccessBoundary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleIdentityStsV1AccessBoundary`
        """
        model = GoogleIdentityStsV1AccessBoundary()
        if include_optional:
            return GoogleIdentityStsV1AccessBoundary(
                access_boundary_rules = [
                    openapi_client.models.google_identity_sts_v1_access_boundary_rule.GoogleIdentityStsV1AccessBoundaryRule(
                        availability_condition = openapi_client.models.google_type_expr.GoogleTypeExpr(
                            description = '', 
                            expression = '', 
                            location = '', 
                            title = '', ), 
                        available_permissions = [
                            ''
                            ], 
                        available_resource = '', )
                    ]
            )
        else:
            return GoogleIdentityStsV1AccessBoundary(
        )
        """

    def testGoogleIdentityStsV1AccessBoundary(self):
        """Test GoogleIdentityStsV1AccessBoundary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
