# coding: utf-8

"""
    Cloud Dataproc API

    Manages Hadoop-based clusters and jobs on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.workflow_metadata import WorkflowMetadata

class TestWorkflowMetadata(unittest.TestCase):
    """WorkflowMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> WorkflowMetadata:
        """Test WorkflowMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `WorkflowMetadata`
        """
        model = WorkflowMetadata()
        if include_optional:
            return WorkflowMetadata(
                cluster_name = '',
                cluster_uuid = '',
                create_cluster = openapi_client.models.cluster_operation.ClusterOperation(
                    done = True, 
                    error = '', 
                    operation_id = '', ),
                dag_end_time = '',
                dag_start_time = '',
                dag_timeout = '',
                delete_cluster = openapi_client.models.cluster_operation.ClusterOperation(
                    done = True, 
                    error = '', 
                    operation_id = '', ),
                end_time = '',
                graph = openapi_client.models.workflow_graph.WorkflowGraph(
                    nodes = [
                        openapi_client.models.workflow_node.WorkflowNode(
                            error = '', 
                            job_id = '', 
                            prerequisite_step_ids = [
                                ''
                                ], 
                            state = 'NODE_STATE_UNSPECIFIED', 
                            step_id = '', )
                        ], ),
                parameters = {
                    'key' : ''
                    },
                start_time = '',
                state = 'UNKNOWN',
                template = '',
                version = 56
            )
        else:
            return WorkflowMetadata(
        )
        """

    def testWorkflowMetadata(self):
        """Test WorkflowMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
