# coding: utf-8

"""
    Cloud Dataproc API

    Manages Hadoop-based clusters and jobs on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.runtime_info import RuntimeInfo

class TestRuntimeInfo(unittest.TestCase):
    """RuntimeInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RuntimeInfo:
        """Test RuntimeInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RuntimeInfo`
        """
        model = RuntimeInfo()
        if include_optional:
            return RuntimeInfo(
                approximate_usage = openapi_client.models.usage_metrics.UsageMetrics(
                    accelerator_type = '', 
                    milli_accelerator_seconds = '', 
                    milli_dcu_seconds = '', 
                    shuffle_storage_gb_seconds = '', ),
                current_usage = openapi_client.models.usage_snapshot.UsageSnapshot(
                    accelerator_type = '', 
                    milli_accelerator = '', 
                    milli_dcu = '', 
                    milli_dcu_premium = '', 
                    shuffle_storage_gb = '', 
                    shuffle_storage_gb_premium = '', 
                    snapshot_time = '', ),
                diagnostic_output_uri = '',
                endpoints = {
                    'key' : ''
                    },
                output_uri = ''
            )
        else:
            return RuntimeInfo(
        )
        """

    def testRuntimeInfo(self):
        """Test RuntimeInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
