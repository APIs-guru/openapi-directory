# coding: utf-8

"""
    Cloud Dataproc API

    Manages Hadoop-based clusters and jobs on Google Cloud Platform.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.security_config import SecurityConfig

class TestSecurityConfig(unittest.TestCase):
    """SecurityConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SecurityConfig:
        """Test SecurityConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SecurityConfig`
        """
        model = SecurityConfig()
        if include_optional:
            return SecurityConfig(
                identity_config = openapi_client.models.identity_config.IdentityConfig(
                    user_service_account_mapping = {
                        'key' : ''
                        }, ),
                kerberos_config = openapi_client.models.kerberos_config.KerberosConfig(
                    cross_realm_trust_admin_server = '', 
                    cross_realm_trust_kdc = '', 
                    cross_realm_trust_realm = '', 
                    cross_realm_trust_shared_password_uri = '', 
                    enable_kerberos = True, 
                    kdc_db_key_uri = '', 
                    key_password_uri = '', 
                    keystore_password_uri = '', 
                    keystore_uri = '', 
                    kms_key_uri = '', 
                    realm = '', 
                    root_principal_password_uri = '', 
                    tgt_lifetime_hours = 56, 
                    truststore_password_uri = '', 
                    truststore_uri = '', )
            )
        else:
            return SecurityConfig(
        )
        """

    def testSecurityConfig(self):
        """Test SecurityConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
