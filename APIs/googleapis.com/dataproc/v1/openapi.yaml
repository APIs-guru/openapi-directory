openapi: 3.0.0
servers:
  - url: https://dataproc.googleapis.com/
info:
  contact:
    name: Google
    url: https://google.com
    x-twitter: youtube
  description: Manages Hadoop-based clusters and jobs on Google Cloud Platform.
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  termsOfService: https://developers.google.com/terms/
  title: Cloud Dataproc API
  version: v1
  x-apiClientRegistration:
    url: https://console.developers.google.com
  x-apisguru-categories:
    - analytics
    - media
  x-logo:
    url: https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png
  x-origin:
    - converter:
        url: https://github.com/mermade/oas-kit
        version: 7.0.4
      format: openapi
      url: https://dataproc.googleapis.com/$discovery/rest?version=v1
      version: "3.0"
  x-providerName: googleapis.com
  x-serviceName: dataproc
externalDocs:
  url: https://cloud.google.com/dataproc/
tags:
  - name: projects
paths:
  /v1/projects/{projectId}/regions/{region}/clusters:
    get:
      description: Lists all regions/{region}/clusters in a project alphabetically.
      operationId: dataproc.projects.regions.clusters.list
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: "Optional. A filter constraining the clusters to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is one of status.state, clusterName, or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be one of the following: ACTIVE, INACTIVE, CREATING, RUNNING, ERROR, DELETING, UPDATING, STOPPING, or STOPPED. ACTIVE contains the CREATING, UPDATING, and RUNNING states. INACTIVE contains the DELETING, ERROR, STOPPING, and STOPPED states. clusterName is the name of the cluster provided at creation time. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND clusterName = mycluster AND labels.env = staging AND labels.starred = *"
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The standard List page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The standard List page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListClustersResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).
      operationId: dataproc.projects.regions.clusters.create
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Optional. Failure action when primary worker creation fails.
          in: query
          name: actionOnFailedPrimaryWorkers
          schema:
            enum:
              - FAILURE_ACTION_UNSPECIFIED
              - NO_ACTION
              - DELETE
            type: string
        - description: Optional. A unique ID used to identify the request. If the server receives two CreateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:
    delete:
      description: Deletes a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata).
      operationId: dataproc.projects.regions.clusters.delete
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
        - description: Optional. Specifying the cluster_uuid means the RPC should fail (with error NOT_FOUND) if cluster with specified UUID does not exist.
          in: query
          name: clusterUuid
          schema:
            type: string
        - description: Optional. The graceful termination timeout for the deletion of the cluster. Indicate the time the request will wait to complete the running jobs on the cluster before its forceful deletion. Default value is 0 indicating that the user has not enabled the graceful termination. Value can be between 60 second and 6 Hours, in case the graceful termination is enabled. (There is no separate flag to check the enabling or disabling of graceful termination, it can be checked by the values in the field).
          in: query
          name: gracefulTerminationTimeout
          schema:
            type: string
        - description: Optional. A unique ID used to identify the request. If the server receives two DeleteClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.DeleteClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
          in: query
          name: requestId
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the resource representation for a cluster in a project.
      operationId: dataproc.projects.regions.clusters.get
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Cluster"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a cluster in a project. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). The cluster must be in a RUNNING state or an error is returned.
      operationId: dataproc.projects.regions.clusters.patch
      parameters:
        - description: Required. The ID of the Google Cloud Platform project the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
        - description: Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning allows removing nodes from the cluster without interrupting jobs in progress. Timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only supported on Dataproc image versions 1.2 and higher.
          in: query
          name: gracefulDecommissionTimeout
          schema:
            type: string
        - description: Optional. A unique ID used to identify the request. If the server receives two UpdateClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.UpdateClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
          in: query
          name: requestId
          schema:
            type: string
        - description: 'Required. Specifies the path, relative to Cluster, of the field to update. For example, to change the number of workers in a cluster to 5, the update_mask parameter would be specified as config.worker_config.num_instances, and the PATCH request body would specify the new value, as follows: { "config":{ "workerConfig":{ "numInstances":"5" } } } Similarly, to change the number of preemptible workers in a cluster to 5, the update_mask parameter would be config.secondary_worker_config.num_instances, and the PATCH request body would be set as follows: { "config":{ "secondaryWorkerConfig":{ "numInstances":"5" } } } *Note:* Currently, only the following fields can be updated: *Mask* *Purpose* *labels* Update labels *config.worker_config.num_instances* Resize primary worker group *config.secondary_worker_config.num_instances* Resize secondary worker group config.autoscaling_config.policy_uri Use, stop using, or change autoscaling policies '
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Cluster"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:diagnose:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets cluster diagnostic information. The returned Operation.metadata will be ClusterOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#clusteroperationmetadata). After the operation completes, Operation.response contains DiagnoseClusterResults (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#diagnoseclusterresults).
      operationId: dataproc.projects.regions.clusters.diagnose
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/DiagnoseClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:repair:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Repairs a cluster.
      operationId: dataproc.projects.regions.clusters.repair
      parameters:
        - description: Required. The ID of the Google Cloud Platform project the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:start:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts a cluster in a project.
      operationId: dataproc.projects.regions.clusters.start
      parameters:
        - description: Required. The ID of the Google Cloud Platform project the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StartClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/clusters/{clusterName}:stop:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Stops a cluster in a project.
      operationId: dataproc.projects.regions.clusters.stop
      parameters:
        - description: Required. The ID of the Google Cloud Platform project the cluster belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster name.
          in: path
          name: clusterName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/StopClusterRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/jobs:
    get:
      description: Lists regions/{region}/jobs in a project.
      operationId: dataproc.projects.regions.jobs.list
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Optional. If set, the returned jobs list includes only jobs that were submitted to the named cluster.
          in: query
          name: clusterName
          schema:
            type: string
        - description: Optional. A filter constraining the jobs to list. Filters are case-sensitive and have the following syntax:field = value AND field = value ...where field is status.state or labels.[KEY], and [KEY] is a label key. value can be * to match all values. status.state can be either ACTIVE or NON_ACTIVE. Only the logical AND operator is supported; space-separated items are treated as having an implicit AND operator.Example filter:status.state = ACTIVE AND labels.env = staging AND labels.starred = *
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Specifies enumerated categories of jobs to list. (default = match ALL jobs).If filter is provided, jobStateMatcher will be ignored.
          in: query
          name: jobStateMatcher
          schema:
            enum:
              - ALL
              - ACTIVE
              - NON_ACTIVE
            type: string
        - description: Optional. The number of results to return in each response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The page token, returned by a previous call, to request the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListJobsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
  /v1/projects/{projectId}/regions/{region}/jobs/{jobId}:
    delete:
      description: Deletes the job from the project. If the job is active, the delete fails, and the response returns FAILED_PRECONDITION.
      operationId: dataproc.projects.regions.jobs.delete
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Gets the resource representation for a job in a project.
      operationId: dataproc.projects.regions.jobs.get
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates a job in a project.
      operationId: dataproc.projects.regions.jobs.patch
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          schema:
            type: string
        - description: Required. Specifies the path, relative to Job, of the field to update. For example, to update the labels of a Job the update_mask parameter would be specified as labels, and the PATCH request body would specify the new value. *Note:* Currently, labels is the only field that can be updated.
          in: query
          name: updateMask
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Job"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/jobs/{jobId}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts a job cancellation request. To access the job resource after cancellation, call regions/{region}/jobs.list (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/list) or regions/{region}/jobs.get (https://cloud.google.com/dataproc/docs/reference/rest/v1/projects.regions.jobs/get).
      operationId: dataproc.projects.regions.jobs.cancel
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The job ID.
          in: path
          name: jobId
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CancelJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/jobs:submit:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submits a job to a cluster.
      operationId: dataproc.projects.regions.jobs.submit
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Job"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/projects/{projectId}/regions/{region}/jobs:submitAsOperation:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Submits job to a cluster.
      operationId: dataproc.projects.regions.jobs.submitAsOperation
      parameters:
        - description: Required. The ID of the Google Cloud Platform project that the job belongs to.
          in: path
          name: projectId
          required: true
          schema:
            type: string
        - description: Required. The Dataproc region in which to handle the request.
          in: path
          name: region
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmitJobRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:
    delete:
      description: Deletes a workflow template. It does not cancel in-progress workflows.
      operationId: dataproc.projects.regions.workflowTemplates.delete
      parameters:
        - description: "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.delete, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The version of workflow template to delete. If specified, will only delete the template if the current server version matches specified version.
          in: query
          name: version
          schema:
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    get:
      description: Retrieves the latest workflow template.Can retrieve previously instantiated template by specifying optional version parameter.
      operationId: dataproc.projects.regions.workflowTemplates.get
      parameters:
        - description: "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.get, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.get, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
        - description: Optional. The version of workflow template to retrieve. Only previously instantiated versions can be retrieved.If unspecified, retrieves the current version.
          in: query
          name: version
          schema:
            type: integer
        - description: The standard list page size.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: The standard list page token.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowTemplate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    patch:
      description: Updates the session template synchronously.
      operationId: dataproc.projects.locations.sessionTemplates.patch
      parameters:
        - description: Required. The resource name of the session template.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionTemplate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    put:
      description: Updates (replaces) workflow template. The updated template must contain version that matches the current server version.
      operationId: dataproc.projects.regions.workflowTemplates.update
      parameters:
        - description: "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowTemplate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:cancel:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns google.rpc.Code.UNIMPLEMENTED. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to Code.CANCELLED.
      operationId: dataproc.projects.regions.operations.cancel
      parameters:
        - description: The name of the operation resource to be cancelled.
          in: path
          name: name
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Empty"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:instantiate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Instantiates a template and begins execution.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.
      operationId: dataproc.projects.regions.workflowTemplates.instantiate
      parameters:
        - description: "Required. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates.instantiate, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InstantiateWorkflowTemplateRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:repair:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Repair nodes in a node group.
      operationId: dataproc.projects.regions.clusters.nodeGroups.repair
      parameters:
        - description: "Required. The name of the node group to resize. Format: projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RepairNodeGroupRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:resize:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Resizes a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).
      operationId: dataproc.projects.regions.clusters.nodeGroups.resize
      parameters:
        - description: "Required. The name of the node group to resize. Format: projects/{project}/regions/{region}/clusters/{cluster}/nodeGroups/{nodeGroup}"
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ResizeNodeGroupRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{name}:terminate:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Terminates the interactive session.
      operationId: dataproc.projects.locations.sessions.terminate
      parameters:
        - description: Required. The name of the session resource to terminate.
          in: path
          name: name
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TerminateSessionRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/autoscalingPolicies:
    get:
      description: Lists autoscaling policies in the project.
      operationId: dataproc.projects.regions.autoscalingPolicies.list
      parameters:
        - description: 'Required. The "resource name" of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.list, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.list, the resource name of the location has the following format: projects/{project_id}/locations/{location}'
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of results to return in each response. Must be less than or equal to 1000. Defaults to 100.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The page token, returned by a previous call, to request the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListAutoscalingPoliciesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates new autoscaling policy.
      operationId: dataproc.projects.regions.autoscalingPolicies.create
      parameters:
        - description: 'Required. The "resource name" of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies.create, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.autoscalingPolicies.create, the resource name of the location has the following format: projects/{project_id}/locations/{location}'
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AutoscalingPolicy"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutoscalingPolicy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/batches:
    get:
      description: Lists batch workloads.
      operationId: dataproc.projects.locations.batches.list
      parameters:
        - description: Required. The parent, which owns this collection of batches.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. A filter for the batches to return in the response.A filter is a logical expression constraining the values of various fields in each batch resource. Filters are case sensitive, and may contain multiple clauses combined with logical operators (AND/OR). Supported fields are batch_id, batch_uuid, state, create_time, and labels.e.g. state = RUNNING and create_time < "2023-01-01T00:00:00Z" filters for batches in state RUNNING that were created before 2023-01-01. state = RUNNING and labels.environment=production filters for batches in state in a RUNNING state that have a production environment label.See https://google.aip.dev/assets/misc/ebnf-filtering.txt for a detailed description of the filter syntax and a list of supported comparisons.
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. Field(s) on which to sort the list of batches.Currently the only supported sort orders are unspecified (empty) and create_time desc to sort by most recently created batches first.See https://google.aip.dev/132#ordering for more details.
          in: query
          name: orderBy
          schema:
            type: string
        - description: Optional. The maximum number of batches to return in each response. The service may return fewer than this value. The default page size is 20; the maximum page size is 1000.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token received from a previous ListBatches call. Provide this token to retrieve the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListBatchesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a batch workload that executes asynchronously.
      operationId: dataproc.projects.locations.batches.create
      parameters:
        - description: Required. The parent resource where this batch will be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The ID to use for the batch, which will become the final component of the batch's resource name.This value must be 4-63 characters. Valid characters are /[a-z][0-9]-/.
          in: query
          name: batchId
          schema:
            type: string
        - description: "Optional. A unique ID used to identify the request. If the service receives two CreateBatchRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateBatchRequest)s with the same request_id, the second request is ignored and the Operation that corresponds to the first Batch created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Batch"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/nodeGroups:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates a node group in a cluster. The returned Operation.metadata is NodeGroupOperationMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#nodegroupoperationmetadata).
      operationId: dataproc.projects.regions.clusters.nodeGroups.create
      parameters:
        - description: "Required. The parent resource where this node group will be created. Format: projects/{project}/regions/{region}/clusters/{cluster}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. An optional node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
          in: query
          name: nodeGroupId
          schema:
            type: string
        - description: Optional. operation id of the parent operation sending the create request
          in: query
          name: parentOperationId
          schema:
            type: string
        - description: "Optional. A unique ID used to identify the request. If the server receives two CreateNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateNodeGroupRequest) with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NodeGroup"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/sessionTemplates:
    get:
      description: Lists session templates.
      operationId: dataproc.projects.locations.sessionTemplates.list
      parameters:
        - description: Required. The parent that owns this collection of session templates.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. A filter for the session templates to return in the response. Filters are case sensitive and have the following syntax:field = value AND field = value ...
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The maximum number of sessions to return in each response. The service may return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token received from a previous ListSessions call. Provide this token to retrieve the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSessionTemplatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create a session template synchronously.
      operationId: dataproc.projects.locations.sessionTemplates.create
      parameters:
        - description: Required. The parent resource where this session template will be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SessionTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SessionTemplate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/sessions:
    get:
      description: Lists interactive sessions.
      operationId: dataproc.projects.locations.sessions.list
      parameters:
        - description: Required. The parent, which owns this collection of sessions.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: 'Optional. A filter for the sessions to return in the response.A filter is a logical expression constraining the values of various fields in each session resource. Filters are case sensitive, and may contain multiple clauses combined with logical operators (AND, OR). Supported fields are session_id, session_uuid, state, create_time, and labels.Example: state = ACTIVE and create_time < "2023-01-01T00:00:00Z" is a filter for sessions in an ACTIVE state that were created before 2023-01-01. state = ACTIVE and labels.environment=production is a filter for sessions in an ACTIVE state that have a production environment label.See https://google.aip.dev/assets/misc/ebnf-filtering.txt for a detailed description of the filter syntax and a list of supported comparators.'
          in: query
          name: filter
          schema:
            type: string
        - description: Optional. The maximum number of sessions to return in each response. The service may return fewer than this value.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. A page token received from a previous ListSessions call. Provide this token to retrieve the subsequent page.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListSessionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Create an interactive session asynchronously.
      operationId: dataproc.projects.locations.sessions.create
      parameters:
        - description: Required. The parent resource where this session will be created.
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: "Optional. A unique ID used to identify the request. If the service receives two CreateSessionRequests (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.CreateSessionRequest)s with the same ID, the second request is ignored, and the first Session is created and stored in the backend.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          in: query
          name: requestId
          schema:
            type: string
        - description: Required. The ID to use for the session, which becomes the final component of the session's resource name.This value must be 4-63 characters. Valid characters are /a-z-/.
          in: query
          name: sessionId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Session"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/workflowTemplates:
    get:
      description: Lists workflows that match the specified filter in the request.
      operationId: dataproc.projects.regions.workflowTemplates.list
      parameters:
        - description: "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,list, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.list, the resource name of the location has the following format: projects/{project_id}/locations/{location}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. The maximum number of results to return in each response.
          in: query
          name: pageSize
          schema:
            type: integer
        - description: Optional. The page token, returned by a previous call, to request the next page of results.
          in: query
          name: pageToken
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ListWorkflowTemplatesResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Creates new workflow template.
      operationId: dataproc.projects.regions.workflowTemplates.create
      parameters:
        - description: "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates.create, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.create, the resource name of the location has the following format: projects/{project_id}/locations/{location}"
          in: path
          name: parent
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WorkflowTemplate"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{parent}/workflowTemplates:instantiateInline:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Instantiates a template and begins execution.This method is equivalent to executing the sequence CreateWorkflowTemplate, InstantiateWorkflowTemplate, DeleteWorkflowTemplate.The returned Operation can be used to track execution of workflow by polling operations.get. The Operation will complete when entire workflow is finished.The running workflow can be aborted via operations.cancel. This will cause any inflight jobs to be cancelled and workflow-owned clusters to be deleted.The Operation.metadata will be WorkflowMetadata (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#workflowmetadata). Also see Using WorkflowMetadata (https://cloud.google.com/dataproc/docs/concepts/workflows/debugging#using_workflowmetadata).On successful completion, Operation.response will be Empty.
      operationId: dataproc.projects.regions.workflowTemplates.instantiateInline
      parameters:
        - description: "Required. The resource name of the region or location, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates,instantiateinline, the resource name of the region has the following format: projects/{project_id}/regions/{region} For projects.locations.workflowTemplates.instantiateinline, the resource name of the location has the following format: projects/{project_id}/locations/{location}"
          in: path
          name: parent
          required: true
          schema:
            type: string
        - description: Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
          in: query
          name: requestId
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/WorkflowTemplate"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{project}/{region}/{cluster}:injectCredentials:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Inject encrypted credentials into all of the VMs in a cluster.The target cluster must be a personal auth cluster assigned to the user who is issuing the RPC.
      operationId: dataproc.projects.regions.clusters.injectCredentials
      parameters:
        - description: Required. The ID of the Google Cloud Platform project the cluster belongs to, of the form projects/.
          in: path
          name: project
          required: true
          schema:
            type: string
        - description: Required. The region containing the cluster, of the form regions/.
          in: path
          name: region
          required: true
          schema:
            type: string
        - description: Required. The cluster, in the form clusters/.
          in: path
          name: cluster
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InjectCredentialsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Operation"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:getIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.
      operationId: dataproc.projects.regions.workflowTemplates.getIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:setIamPolicy:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: Sets the access control policy on the specified resource. Replaces any existing policy.Can return NOT_FOUND, INVALID_ARGUMENT, and PERMISSION_DENIED errors.
      operationId: dataproc.projects.regions.workflowTemplates.setIamPolicy
      parameters:
        - description: "REQUIRED: The resource for which the policy is being specified. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetIamPolicyRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
  /v1/{resource}:testIamPermissions:
    parameters:
      - $ref: "#/components/parameters/_.xgafv"
      - $ref: "#/components/parameters/access_token"
      - $ref: "#/components/parameters/alt"
      - $ref: "#/components/parameters/callback"
      - $ref: "#/components/parameters/fields"
      - $ref: "#/components/parameters/key"
      - $ref: "#/components/parameters/oauth_token"
      - $ref: "#/components/parameters/prettyPrint"
      - $ref: "#/components/parameters/quotaUser"
      - $ref: "#/components/parameters/upload_protocol"
      - $ref: "#/components/parameters/uploadType"
    post:
      description: 'Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a NOT_FOUND error.Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may "fail open" without warning.'
      operationId: dataproc.projects.regions.workflowTemplates.testIamPermissions
      parameters:
        - description: "REQUIRED: The resource for which the policy detail is being requested. See Resource names (https://cloud.google.com/apis/design/resource_names) for the appropriate value for this field."
          in: path
          name: resource
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestIamPermissionsRequest"
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestIamPermissionsResponse"
          description: Successful response
      security:
        - Oauth2:
            - https://www.googleapis.com/auth/cloud-platform
          Oauth2c:
            - https://www.googleapis.com/auth/cloud-platform
      tags:
        - projects
components:
  parameters:
    _.xgafv:
      description: V1 error format.
      in: query
      name: $.xgafv
      schema:
        enum:
          - "1"
          - "2"
        type: string
    access_token:
      description: OAuth access token.
      in: query
      name: access_token
      schema:
        type: string
    alt:
      description: Data format for response.
      in: query
      name: alt
      schema:
        enum:
          - json
          - media
          - proto
        type: string
    callback:
      description: JSONP
      in: query
      name: callback
      schema:
        type: string
    fields:
      description: Selector specifying which fields to include in a partial response.
      in: query
      name: fields
      schema:
        type: string
    key:
      description: API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
      in: query
      name: key
      schema:
        type: string
    oauth_token:
      description: OAuth 2.0 token for the current user.
      in: query
      name: oauth_token
      schema:
        type: string
    prettyPrint:
      description: Returns response with indentations and line breaks.
      in: query
      name: prettyPrint
      schema:
        type: boolean
    quotaUser:
      description: Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.
      in: query
      name: quotaUser
      schema:
        type: string
    uploadType:
      description: Legacy upload protocol for media (e.g. "media", "multipart").
      in: query
      name: uploadType
      schema:
        type: string
    upload_protocol:
      description: Upload protocol for media (e.g. "raw", "multipart").
      in: query
      name: upload_protocol
      schema:
        type: string
  schemas:
    AcceleratorConfig:
      description: Specifies the type and number of accelerator cards attached to the instances of an instance. See GPUs on Compute Engine (https://cloud.google.com/compute/docs/gpus/).
      properties:
        acceleratorCount:
          description: The number of the accelerator cards of this type exposed to this instance.
          format: int32
          type: integer
        acceleratorTypeUri:
          description: "Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See Compute Engine AcceleratorTypes (https://cloud.google.com/compute/docs/reference/v1/acceleratorTypes).Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 projects/[project_id]/zones/[zone]/acceleratorTypes/nvidia-tesla-k80 nvidia-tesla-k80Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, nvidia-tesla-k80."
          type: string
      type: object
    AnalyzeOperationMetadata:
      description: Metadata describing the Analyze operation.
      properties:
        analyzedWorkloadName:
          description: Output only. name of the workload being analyzed.
          readOnly: true
          type: string
        analyzedWorkloadType:
          description: Output only. Type of the workload being analyzed.
          enum:
            - WORKLOAD_TYPE_UNSPECIFIED
            - BATCH
          readOnly: true
          type: string
        analyzedWorkloadUuid:
          description: Output only. unique identifier of the workload typically generated by control plane. E.g. batch uuid.
          readOnly: true
          type: string
        createTime:
          description: Output only. The time when the operation was created.
          format: google-datetime
          readOnly: true
          type: string
        description:
          description: Output only. Short description of the operation.
          readOnly: true
          type: string
        doneTime:
          description: Output only. The time when the operation finished.
          format: google-datetime
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Output only. Labels associated with the operation.
          readOnly: true
          type: object
        warnings:
          description: Output only. Warnings encountered during operation execution.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    AutoscalingConfig:
      description: Autoscaling Policy config associated with the cluster.
      properties:
        policyUri:
          description: "Optional. The autoscaling policy used by the cluster.Only resource names including projectid and location (region) are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id] projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]Note that the policy must be in the same project and Dataproc region."
          type: string
      type: object
    AutoscalingPolicy:
      description: Describes an autoscaling policy for Dataproc cluster autoscaler.
      properties:
        basicAlgorithm:
          $ref: "#/components/schemas/BasicAutoscalingAlgorithm"
        id:
          description: Required. The policy id.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels to associate with this autoscaling policy. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with an autoscaling policy.
          type: object
        name:
          description: 'Output only. The "resource name" of the autoscaling policy, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/regions/{region}/autoscalingPolicies/{policy_id} For projects.locations.autoscalingPolicies, the resource name of the policy has the following format: projects/{project_id}/locations/{location}/autoscalingPolicies/{policy_id}'
          readOnly: true
          type: string
        secondaryWorkerConfig:
          $ref: "#/components/schemas/InstanceGroupAutoscalingPolicyConfig"
          description: Optional. Describes how the autoscaler will operate for secondary workers.
        workerConfig:
          $ref: "#/components/schemas/InstanceGroupAutoscalingPolicyConfig"
          description: Required. Describes how the autoscaler will operate for primary workers.
      type: object
    AuxiliaryNodeGroup:
      description: Node group identification and configuration information.
      properties:
        nodeGroup:
          $ref: "#/components/schemas/NodeGroup"
          description: Required. Node group configuration.
        nodeGroupId:
          description: Optional. A node group ID. Generated if not specified.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of from 3 to 33 characters.
          type: string
      type: object
    AuxiliaryServicesConfig:
      description: Auxiliary services configuration for a Cluster.
      properties:
        metastoreConfig:
          $ref: "#/components/schemas/MetastoreConfig"
          description: Optional. The Hive Metastore configuration for this workload.
        sparkHistoryServerConfig:
          $ref: "#/components/schemas/SparkHistoryServerConfig"
          description: Optional. The Spark History Server configuration for the workload.
      type: object
    BasicAutoscalingAlgorithm:
      description: Basic algorithm for autoscaling.
      properties:
        cooldownPeriod:
          description: "Optional. Duration between scaling events. A scaling period starts after the update operation from the previous event has completed.Bounds: 2m, 1d. Default: 2m."
          format: google-duration
          type: string
        sparkStandaloneConfig:
          $ref: "#/components/schemas/SparkStandaloneAutoscalingConfig"
          description: Optional. Spark Standalone autoscaling configuration
        yarnConfig:
          $ref: "#/components/schemas/BasicYarnAutoscalingConfig"
          description: Optional. YARN autoscaling configuration.
      type: object
    BasicYarnAutoscalingConfig:
      description: Basic autoscaling configurations for YARN.
      properties:
        gracefulDecommissionTimeout:
          description: "Required. Timeout for YARN graceful decommissioning of Node Managers. Specifies the duration to wait for jobs to complete before forcefully removing workers (and potentially interrupting jobs). Only applicable to downscaling operations.Bounds: 0s, 1d."
          format: google-duration
          type: string
        scaleDownFactor:
          description: "Required. Fraction of average YARN pending memory in the last cooldown period for which to remove workers. A scale-down factor of 1 will result in scaling down so that there is no available memory remaining after the update (more aggressive scaling). A scale-down factor of 0 disables removing workers, which can be beneficial for autoscaling a single job. See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0."
          format: double
          type: number
        scaleDownMinWorkerFraction:
          description: "Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0."
          format: double
          type: number
        scaleUpFactor:
          description: "Required. Fraction of average YARN pending memory in the last cooldown period for which to add workers. A scale-up factor of 1.0 will result in scaling up so that there is no pending memory remaining after the update (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling). See How autoscaling works (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/autoscaling#how_autoscaling_works) for more information.Bounds: 0.0, 1.0."
          format: double
          type: number
        scaleUpMinWorkerFraction:
          description: "Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0."
          format: double
          type: number
      type: object
    Batch:
      description: A representation of a batch workload in the service.
      properties:
        createTime:
          description: Output only. The time when the batch was created.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          description: Output only. The email address of the user who created the batch.
          readOnly: true
          type: string
        environmentConfig:
          $ref: "#/components/schemas/EnvironmentConfig"
          description: Optional. Environment configuration for the batch execution.
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels to associate with this batch. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a batch.
          type: object
        name:
          description: Output only. The resource name of the batch.
          readOnly: true
          type: string
        operation:
          description: Output only. The resource name of the operation associated with this batch.
          readOnly: true
          type: string
        pysparkBatch:
          $ref: "#/components/schemas/PySparkBatch"
          description: Optional. PySpark batch config.
        runtimeConfig:
          $ref: "#/components/schemas/RuntimeConfig"
          description: Optional. Runtime configuration for the batch execution.
        runtimeInfo:
          $ref: "#/components/schemas/RuntimeInfo"
          description: Output only. Runtime information about batch execution.
          readOnly: true
        sparkBatch:
          $ref: "#/components/schemas/SparkBatch"
          description: Optional. Spark batch config.
        sparkRBatch:
          $ref: "#/components/schemas/SparkRBatch"
          description: Optional. SparkR batch config.
        sparkSqlBatch:
          $ref: "#/components/schemas/SparkSqlBatch"
          description: Optional. SparkSql batch config.
        state:
          description: Output only. The state of the batch.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          readOnly: true
          type: string
        stateHistory:
          description: Output only. Historical state information for the batch.
          items:
            $ref: "#/components/schemas/StateHistory"
          readOnly: true
          type: array
        stateMessage:
          description: Output only. Batch state details, such as a failure description if the state is FAILED.
          readOnly: true
          type: string
        stateTime:
          description: Output only. The time when the batch entered a current state.
          format: google-datetime
          readOnly: true
          type: string
        uuid:
          description: Output only. A batch UUID (Unique Universal Identifier). The service generates this value when it creates the batch.
          readOnly: true
          type: string
      type: object
    BatchOperationMetadata:
      description: Metadata describing the Batch operation.
      properties:
        batch:
          description: Name of the batch for the operation.
          type: string
        batchUuid:
          description: Batch UUID for the operation.
          type: string
        createTime:
          description: The time when the operation was created.
          format: google-datetime
          type: string
        description:
          description: Short description of the operation.
          type: string
        doneTime:
          description: The time when the operation finished.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels associated with the operation.
          type: object
        operationType:
          description: The operation type.
          enum:
            - BATCH_OPERATION_TYPE_UNSPECIFIED
            - BATCH
          type: string
        warnings:
          description: Warnings encountered during operation execution.
          items:
            type: string
          type: array
      type: object
    Binding:
      description: Associates members, or principals, with a role.
      properties:
        condition:
          $ref: "#/components/schemas/Expr"
          description: The condition that is associated with this binding.If the condition evaluates to true, then this binding applies to the current request.If the condition evaluates to false, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the principals in this binding.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
        members:
          description: "Specifies the principals requesting access for a Google Cloud resource. members can have the following values: allUsers: A special identifier that represents anyone who is on the internet; with or without a Google account. allAuthenticatedUsers: A special identifier that represents anyone who is authenticated with a Google account or a service account. Does not include identities that come from external identity providers (IdPs) through identity federation. user:{emailid}: An email address that represents a specific Google account. For example, alice@example.com . serviceAccount:{emailid}: An email address that represents a Google service account. For example, my-other-app@appspot.gserviceaccount.com. serviceAccount:{projectid}.svc.id.goog[{namespace}/{kubernetes-sa}]: An identifier for a Kubernetes service account (https://cloud.google.com/kubernetes-engine/docs/how-to/kubernetes-service-accounts). For example, my-project.svc.id.goog[my-namespace/my-kubernetes-sa]. group:{emailid}: An email address that represents a Google group. For example, admins@example.com. domain:{domain}: The G Suite domain (primary) that represents all the users of that domain. For example, google.com or example.com. principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}: A single identity in a workforce identity pool. principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/group/{group_id}: All workforce identities in a group. principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/attribute.{attribute_name}/{attribute_value}: All workforce identities with a specific attribute value. principalSet://iam.googleapis.com/locations/global/workforcePools/{pool_id}/*: All identities in a workforce identity pool. principal://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/subject/{subject_attribute_value}: A single identity in a workload identity pool. principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/group/{group_id}: A workload identity pool group. principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/attribute.{attribute_name}/{attribute_value}: All identities in a workload identity pool with a certain attribute. principalSet://iam.googleapis.com/projects/{project_number}/locations/global/workloadIdentityPools/{pool_id}/*: All identities in a workload identity pool. deleted:user:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a user that has been recently deleted. For example, alice@example.com?uid=123456789012345678901. If the user is recovered, this value reverts to user:{emailid} and the recovered user retains the role in the binding. deleted:serviceAccount:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901. If the service account is undeleted, this value reverts to serviceAccount:{emailid} and the undeleted service account retains the role in the binding. deleted:group:{emailid}?uid={uniqueid}: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, admins@example.com?uid=123456789012345678901. If the group is recovered, this value reverts to group:{emailid} and the recovered group retains the role in the binding. deleted:principal://iam.googleapis.com/locations/global/workforcePools/{pool_id}/subject/{subject_attribute_value}: Deleted single identity in a workforce identity pool. For example, deleted:principal://iam.googleapis.com/locations/global/workforcePools/my-pool-id/subject/my-subject-attribute-value."
          items:
            type: string
          type: array
        role:
          description: Role that is assigned to the list of members, or principals. For example, roles/viewer, roles/editor, or roles/owner.For an overview of the IAM roles and permissions, see the IAM documentation (https://cloud.google.com/iam/docs/roles-overview). For a list of the available pre-defined roles, see here (https://cloud.google.com/iam/docs/understanding-roles).
          type: string
      type: object
    CancelJobRequest:
      description: A request to cancel a job.
      properties: {}
      type: object
    Cluster:
      description: Describes the identifying information, config, and status of a Dataproc cluster
      properties:
        clusterName:
          description: Required. The cluster name, which must be unique within a project. The name must start with a lowercase letter, and can contain up to 51 lowercase letters, numbers, and hyphens. It cannot end with a hyphen. The name of a deleted cluster can be reused.
          type: string
        clusterUuid:
          description: Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
          readOnly: true
          type: string
        config:
          $ref: "#/components/schemas/ClusterConfig"
          description: Optional. The cluster config for a cluster of Compute Engine Instances. Note that Dataproc may set default values, and values may change when clusters are updated.Exactly one of ClusterConfig or VirtualClusterConfig must be specified.
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels to associate with this cluster. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a cluster.
          type: object
        metrics:
          $ref: "#/components/schemas/ClusterMetrics"
          description: "Output only. Contains cluster daemon metrics such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release."
          readOnly: true
        projectId:
          description: Required. The Google Cloud Platform project ID that the cluster belongs to.
          type: string
        status:
          $ref: "#/components/schemas/ClusterStatus"
          description: Output only. Cluster status.
          readOnly: true
        statusHistory:
          description: Output only. The previous cluster status.
          items:
            $ref: "#/components/schemas/ClusterStatus"
          readOnly: true
          type: array
        virtualClusterConfig:
          $ref: "#/components/schemas/VirtualClusterConfig"
          description: Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.
      type: object
    ClusterConfig:
      description: The cluster config.
      properties:
        autoscalingConfig:
          $ref: "#/components/schemas/AutoscalingConfig"
          description: Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.
        auxiliaryNodeGroups:
          description: Optional. The node group settings.
          items:
            $ref: "#/components/schemas/AuxiliaryNodeGroup"
          type: array
        configBucket:
          description: Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
          type: string
        dataprocMetricConfig:
          $ref: "#/components/schemas/DataprocMetricConfig"
          description: Optional. The config for Dataproc metrics.
        encryptionConfig:
          $ref: "#/components/schemas/EncryptionConfig"
          description: Optional. Encryption settings for the cluster.
        endpointConfig:
          $ref: "#/components/schemas/EndpointConfig"
          description: Optional. Port/endpoint configuration for this cluster
        gceClusterConfig:
          $ref: "#/components/schemas/GceClusterConfig"
          description: Optional. The shared Compute Engine config settings for all instances in a cluster.
        gkeClusterConfig:
          $ref: "#/components/schemas/GkeClusterConfig"
          deprecated: true
          description: Optional. BETA. The Kubernetes Engine config for Dataproc clusters deployed to The Kubernetes Engine config for Dataproc clusters deployed to Kubernetes. These config settings are mutually exclusive with Compute Engine-based options, such as gce_cluster_config, master_config, worker_config, secondary_worker_config, and autoscaling_config.
        initializationActions:
          description: "Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's role metadata to run an executable on a master or worker node, as shown below using curl (you can also use wget): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ \"${ROLE}\" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi "
          items:
            $ref: "#/components/schemas/NodeInitializationAction"
          type: array
        lifecycleConfig:
          $ref: "#/components/schemas/LifecycleConfig"
          description: Optional. Lifecycle setting for the cluster.
        masterConfig:
          $ref: "#/components/schemas/InstanceGroupConfig"
          description: Optional. The Compute Engine config settings for the cluster's master instance.
        metastoreConfig:
          $ref: "#/components/schemas/MetastoreConfig"
          description: Optional. Metastore configuration.
        secondaryWorkerConfig:
          $ref: "#/components/schemas/InstanceGroupConfig"
          description: Optional. The Compute Engine config settings for a cluster's secondary worker instances
        securityConfig:
          $ref: "#/components/schemas/SecurityConfig"
          description: Optional. Security settings for the cluster.
        softwareConfig:
          $ref: "#/components/schemas/SoftwareConfig"
          description: Optional. The config settings for cluster software.
        tempBucket:
          description: Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
          type: string
        workerConfig:
          $ref: "#/components/schemas/InstanceGroupConfig"
          description: Optional. The Compute Engine config settings for the cluster's worker instances.
      type: object
    ClusterMetrics:
      description: "Contains cluster daemon metrics, such as HDFS and YARN stats.Beta Feature: This report is available for testing purposes only. It may be changed before final release."
      properties:
        hdfsMetrics:
          additionalProperties:
            format: int64
            type: string
          description: The HDFS metrics.
          type: object
        yarnMetrics:
          additionalProperties:
            format: int64
            type: string
          description: YARN metrics.
          type: object
      type: object
    ClusterOperation:
      description: The cluster operation triggered by a workflow.
      properties:
        done:
          description: Output only. Indicates the operation is done.
          readOnly: true
          type: boolean
        error:
          description: Output only. Error, if operation failed.
          readOnly: true
          type: string
        operationId:
          description: Output only. The id of the cluster operation.
          readOnly: true
          type: string
      type: object
    ClusterOperationMetadata:
      description: Metadata describing the operation.
      properties:
        childOperationIds:
          description: Output only. Child operation ids
          items:
            type: string
          readOnly: true
          type: array
        clusterName:
          description: Output only. Name of the cluster for the operation.
          readOnly: true
          type: string
        clusterUuid:
          description: Output only. Cluster UUID for the operation.
          readOnly: true
          type: string
        description:
          description: Output only. Short description of operation.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Output only. Labels associated with the operation
          readOnly: true
          type: object
        operationType:
          description: Output only. The operation type.
          readOnly: true
          type: string
        status:
          $ref: "#/components/schemas/ClusterOperationStatus"
          description: Output only. Current operation status.
          readOnly: true
        statusHistory:
          description: Output only. The previous operation status.
          items:
            $ref: "#/components/schemas/ClusterOperationStatus"
          readOnly: true
          type: array
        warnings:
          description: Output only. Errors encountered during operation execution.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ClusterOperationStatus:
      description: The status of the operation.
      properties:
        details:
          description: Output only. A message containing any operation metadata details.
          readOnly: true
          type: string
        innerState:
          description: Output only. A message containing the detailed operation state.
          readOnly: true
          type: string
        state:
          description: Output only. A message containing the operation state.
          enum:
            - UNKNOWN
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
        stateStartTime:
          description: Output only. The time this state was entered.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ClusterSelector:
      description: A selector that chooses target cluster for jobs based on metadata.
      properties:
        clusterLabels:
          additionalProperties:
            type: string
          description: Required. The cluster labels. Cluster must have all labels to match.
          type: object
        zone:
          description: Optional. The zone where workflow process executes. This parameter does not affect the selection of the cluster.If unspecified, the zone of the first cluster matching the selector is used.
          type: string
      type: object
    ClusterStatus:
      description: The status of a cluster and its instances.
      properties:
        detail:
          description: Optional. Output only. Details of cluster's state.
          readOnly: true
          type: string
        state:
          description: Output only. The cluster's state.
          enum:
            - UNKNOWN
            - CREATING
            - RUNNING
            - ERROR
            - ERROR_DUE_TO_UPDATE
            - DELETING
            - UPDATING
            - STOPPING
            - STOPPED
            - STARTING
            - REPAIRING
          readOnly: true
          type: string
        stateStartTime:
          description: Output only. Time when this state was entered (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
          format: google-datetime
          readOnly: true
          type: string
        substate:
          description: Output only. Additional state information that includes status reported by the agent.
          enum:
            - UNSPECIFIED
            - UNHEALTHY
            - STALE_STATUS
          readOnly: true
          type: string
      type: object
    ConfidentialInstanceConfig:
      description: Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs)
      properties:
        enableConfidentialCompute:
          description: Optional. Defines whether the instance should have confidential compute enabled.
          type: boolean
      type: object
    DataprocMetricConfig:
      description: Dataproc metric config.
      properties:
        metrics:
          description: Required. Metrics sources to enable.
          items:
            $ref: "#/components/schemas/Metric"
          type: array
      type: object
    DiagnoseClusterRequest:
      description: A request to collect cluster diagnostic information.
      properties:
        diagnosisInterval:
          $ref: "#/components/schemas/Interval"
          description: Optional. Time interval in which diagnosis should be carried out on the cluster.
        job:
          deprecated: true
          description: "Optional. DEPRECATED Specifies the job on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}"
          type: string
        jobs:
          description: "Optional. Specifies a list of jobs on which diagnosis is to be performed. Format: projects/{project}/regions/{region}/jobs/{job}"
          items:
            type: string
          type: array
        tarballAccess:
          description: Optional. (Optional) The access type to the diagnostic tarball. If not specified, falls back to default access of the bucket
          enum:
            - TARBALL_ACCESS_UNSPECIFIED
            - GOOGLE_CLOUD_SUPPORT
            - GOOGLE_DATAPROC_DIAGNOSE
          type: string
        tarballGcsDir:
          description: Optional. (Optional) The output Cloud Storage directory for the diagnostic tarball. If not specified, a task-specific directory in the cluster's staging bucket will be used.
          type: string
        yarnApplicationId:
          deprecated: true
          description: Optional. DEPRECATED Specifies the yarn application on which diagnosis is to be performed.
          type: string
        yarnApplicationIds:
          description: Optional. Specifies a list of yarn applications on which diagnosis is to be performed.
          items:
            type: string
          type: array
      type: object
    DiagnoseClusterResults:
      description: The location of diagnostic output.
      properties:
        outputUri:
          description: Output only. The Cloud Storage URI of the diagnostic output. The output report is a plain text file with a summary of collected diagnostics.
          readOnly: true
          type: string
      type: object
    DiskConfig:
      description: Specifies the config of disk options for a group of VM instances.
      properties:
        bootDiskSizeGb:
          description: Optional. Size in GB of the boot disk (default is 500GB).
          format: int32
          type: integer
        bootDiskType:
          description: 'Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See Disk types (https://cloud.google.com/compute/docs/disks#disk-types).'
          type: string
        localSsdInterface:
          description: 'Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See local SSD performance (https://cloud.google.com/compute/docs/disks/local-ssd#performance).'
          type: string
        numLocalSsds:
          description: "Optional. Number of attached SSDs, from 0 to 8 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and HDFS (https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.Note: Local SSD options may vary by machine type and number of vCPUs selected."
          format: int32
          type: integer
      type: object
    DriverSchedulingConfig:
      description: Driver scheduling configuration.
      properties:
        memoryMb:
          description: Required. The amount of memory in MB the driver is requesting.
          format: int32
          type: integer
        vcores:
          description: Required. The number of vCPUs the driver is requesting.
          format: int32
          type: integer
      type: object
    Empty:
      description: "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } "
      properties: {}
      type: object
    EncryptionConfig:
      description: Encryption settings for the cluster.
      properties:
        gcePdKmsKeyName:
          description: Optional. The Cloud KMS key resource name to use for persistent disk encryption for all instances in the cluster. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.
          type: string
        kmsKey:
          description: "Optional. The Cloud KMS key resource name to use for cluster persistent disk and job argument encryption. See Use CMEK with cluster data (https://cloud.google.com//dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_cluster_data) for more information.When this key resource name is provided, the following job arguments of the following job types submitted to the cluster are encrypted using CMEK: FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries"
          type: string
      type: object
    EndpointConfig:
      description: Endpoint config for this cluster
      properties:
        enableHttpPortAccess:
          description: Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
          type: boolean
        httpPorts:
          additionalProperties:
            type: string
          description: Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
          readOnly: true
          type: object
      type: object
    EnvironmentConfig:
      description: Environment configuration for a workload.
      properties:
        executionConfig:
          $ref: "#/components/schemas/ExecutionConfig"
          description: Optional. Execution configuration for a workload.
        peripheralsConfig:
          $ref: "#/components/schemas/PeripheralsConfig"
          description: Optional. Peripherals configuration that workload has access to.
      type: object
    ExecutionConfig:
      description: Execution configuration for a workload.
      properties:
        idleTtl:
          description: "Optional. Applies to sessions only. The duration to keep the session alive while it's idling. Exceeding this threshold causes the session to terminate. This field cannot be set on a batch workload. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). Defaults to 1 hour if not set. If both ttl and idle_ttl are specified for an interactive session, the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first."
          format: google-duration
          type: string
        kmsKey:
          description: Optional. The Cloud KMS key to use for encryption.
          type: string
        networkTags:
          description: Optional. Tags used for network traffic control.
          items:
            type: string
          type: array
        networkUri:
          description: Optional. Network URI to connect workload to.
          type: string
        serviceAccount:
          description: Optional. Service account that used to execute workload.
          type: string
        stagingBucket:
          description: Optional. A Cloud Storage bucket used to stage workload dependencies, config files, and store workload output and other ephemeral data, such as Spark history files. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location according to the region where your workload is running, and then create and manage project-level, per-location staging and temporary buckets. This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
          type: string
        subnetworkUri:
          description: Optional. Subnetwork URI to connect workload to.
          type: string
        ttl:
          description: "Optional. The duration after which the workload will be terminated, specified as the JSON representation for Duration (https://protobuf.dev/programming-guides/proto3/#json). When the workload exceeds this duration, it will be unconditionally terminated without waiting for ongoing work to finish. If ttl is not specified for a batch workload, the workload will be allowed to run until it exits naturally (or run forever without exiting). If ttl is not specified for an interactive session, it defaults to 24 hours. If ttl is not specified for a batch that uses 2.1+ runtime version, it defaults to 4 hours. Minimum value is 10 minutes; maximum value is 14 days. If both ttl and idle_ttl are specified (for an interactive session), the conditions are treated as OR conditions: the workload will be terminated when it has been idle for idle_ttl or when ttl has been exceeded, whichever occurs first."
          format: google-duration
          type: string
      type: object
    Expr:
      description: "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec.Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() < 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
      properties:
        description:
          description: Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.
          type: string
        expression:
          description: Textual representation of an expression in Common Expression Language syntax.
          type: string
        location:
          description: Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file.
          type: string
        title:
          description: Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.
          type: string
      type: object
    FlinkJob:
      description: A Dataproc job for running Apache Flink applications on YARN.
      properties:
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Flink driver and tasks.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        mainClass:
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in jarFileUris.
          type: string
        mainJarFileUri:
          description: The HCFS URI of the jar file that contains the main class.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure Flink. Properties that conflict with values set by the Dataproc API might beoverwritten. Can include properties set in/etc/flink/conf/flink-defaults.conf and classes in user code.
          type: object
        savepointUri:
          description: Optional. HCFS URI of the savepoint, which contains the last saved progress for starting the current job.
          type: string
      type: object
    GceClusterConfig:
      description: Common config settings for resources of Compute Engine cluster instances, applicable to all instances in the cluster.
      properties:
        confidentialInstanceConfig:
          $ref: "#/components/schemas/ConfidentialInstanceConfig"
          description: Optional. Confidential Instance Config for clusters using Confidential VMs (https://cloud.google.com/compute/confidential-vm/docs).
        internalIpOnly:
          description: Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This internal_ip_only restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
          type: boolean
        metadata:
          additionalProperties:
            type: string
          description: Optional. The Compute Engine metadata entries to add to all instances (see Project and instance metadata (https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
          type: object
        networkUri:
          description: 'Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither network_uri nor subnetwork_uri is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see Using Subnetworks (https://cloud.google.com/compute/docs/subnetworks) for more information).A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/networks/default projects/[project_id]/global/networks/default default'
          type: string
        nodeGroupAffinity:
          $ref: "#/components/schemas/NodeGroupAffinity"
          description: Optional. Node Group Affinity for sole-tenant clusters.
        privateIpv6GoogleAccess:
          description: Optional. The type of IPv6 access for a cluster.
          enum:
            - PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED
            - INHERIT_FROM_SUBNETWORK
            - OUTBOUND
            - BIDIRECTIONAL
          type: string
        reservationAffinity:
          $ref: "#/components/schemas/ReservationAffinity"
          description: Optional. Reservation Affinity for consuming Zonal reservation.
        serviceAccount:
          description: Optional. The Dataproc service account (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see VM Data Plane identity (https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services.If not specified, the Compute Engine default service account (https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.
          type: string
        serviceAccountScopes:
          description: "Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: https://www.googleapis.com/auth/cloud.useraccounts.readonly https://www.googleapis.com/auth/devstorage.read_write https://www.googleapis.com/auth/logging.writeIf no scopes are specified, the following defaults are also provided: https://www.googleapis.com/auth/bigquery https://www.googleapis.com/auth/bigtable.admin.table https://www.googleapis.com/auth/bigtable.data https://www.googleapis.com/auth/devstorage.full_control"
          items:
            type: string
          type: array
        shieldedInstanceConfig:
          $ref: "#/components/schemas/ShieldedInstanceConfig"
          description: Optional. Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
        subnetworkUri:
          description: "Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/regions/[region]/subnetworks/sub0 projects/[project_id]/regions/[region]/subnetworks/sub0 sub0"
          type: string
        tags:
          description: The Compute Engine tags to add to all instances (see Tagging instances (https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
          items:
            type: string
          type: array
        zoneUri:
          description: "Optional. The Compute Engine zone where the Dataproc cluster will be located. If omitted, the service will pick a zone in the cluster's Compute Engine region. On a get request, zone will always be present.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone] projects/[project_id]/zones/[zone] [zone]"
          type: string
      type: object
    GetIamPolicyRequest:
      description: Request message for GetIamPolicy method.
      properties:
        options:
          $ref: "#/components/schemas/GetPolicyOptions"
          description: "OPTIONAL: A GetPolicyOptions object for specifying options to GetIamPolicy."
      type: object
    GetPolicyOptions:
      description: Encapsulates settings provided to GetIamPolicy.
      properties:
        requestedPolicyVersion:
          description: Optional. The maximum policy version that will be used to format the policy.Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected.Requests for policies with any conditional role bindings must specify version 3. Policies with no conditional role bindings may specify any valid value or leave the field unset.The policy in the response might use the policy version that you specified, or it might use a lower policy version. For example, if you specify version 3, but the policy has no conditional role bindings, the response uses version 1.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).
          format: int32
          type: integer
      type: object
    GkeClusterConfig:
      description: The cluster's GKE config.
      properties:
        gkeClusterTarget:
          description: "Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'"
          type: string
        namespacedGkeDeploymentTarget:
          $ref: "#/components/schemas/NamespacedGkeDeploymentTarget"
          deprecated: true
          description: Optional. Deprecated. Use gkeClusterTarget. Used only for the deprecated beta. A target for the deployment.
        nodePoolTarget:
          description: Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the DEFAULT GkeNodePoolTarget.Role. If a GkeNodePoolTarget is not specified, Dataproc constructs a DEFAULT GkeNodePoolTarget. Each role can be given to only one GkeNodePoolTarget. All node pools must have the same location settings.
          items:
            $ref: "#/components/schemas/GkeNodePoolTarget"
          type: array
      type: object
    GkeNodeConfig:
      description: Parameters that describe cluster nodes.
      properties:
        accelerators:
          description: Optional. A list of hardware accelerators (https://cloud.google.com/compute/docs/gpus) to attach to each node.
          items:
            $ref: "#/components/schemas/GkeNodePoolAcceleratorConfig"
          type: array
        bootDiskKmsKey:
          description: "Optional. The Customer Managed Encryption Key (CMEK) (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}"
          type: string
        localSsdCount:
          description: Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see Adding Local SSDs (https://cloud.google.com/compute/docs/disks/local-ssd)).
          format: int32
          type: integer
        machineType:
          description: Optional. The name of a Compute Engine machine type (https://cloud.google.com/compute/docs/machine-types).
          type: string
        minCpuPlatform:
          description: Optional. Minimum CPU platform (https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
          type: string
        preemptible:
          description: Optional. Whether the nodes are created as legacy preemptible VM instances (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
          type: boolean
        spot:
          description: Optional. Whether the nodes are created as Spot VM instances (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the CONTROLLER role or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
          type: boolean
      type: object
    GkeNodePoolAcceleratorConfig:
      description: A GkeNodeConfigAcceleratorConfig represents a Hardware Accelerator request for a node pool.
      properties:
        acceleratorCount:
          description: The number of accelerator cards exposed to an instance.
          format: int64
          type: string
        acceleratorType:
          description: The accelerator type resource namename (see GPUs on Compute Engine).
          type: string
        gpuPartitionSize:
          description: Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
          type: string
      type: object
    GkeNodePoolAutoscalingConfig:
      description: GkeNodePoolAutoscaling contains information the cluster autoscaler needs to adjust the size of the node pool to the current cluster usage.
      properties:
        maxNodeCount:
          description: "The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. Note: Quota must be sufficient to scale up the cluster."
          format: int32
          type: integer
        minNodeCount:
          description: The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
          format: int32
          type: integer
      type: object
    GkeNodePoolConfig:
      description: The configuration of a GKE node pool used by a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/concepts/jobs/dataproc-gke#create-a-dataproc-on-gke-cluster).
      properties:
        autoscaling:
          $ref: "#/components/schemas/GkeNodePoolAutoscalingConfig"
          description: Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.
        config:
          $ref: "#/components/schemas/GkeNodeConfig"
          description: Optional. The node pool configuration.
        locations:
          description: "Optional. The list of Compute Engine zones (https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located.Note: All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region.If a location is not specified during node pool creation, Dataproc on GKE will choose the zone."
          items:
            type: string
          type: array
      type: object
    GkeNodePoolTarget:
      description: GKE node pools that Dataproc workloads run on.
      properties:
        nodePool:
          description: "Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'"
          type: string
        nodePoolConfig:
          $ref: "#/components/schemas/GkeNodePoolConfig"
          description: Input only. The configuration for the GKE node pool.If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail.If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values.This is an input only field. It will not be returned by the API.
        roles:
          description: Required. The roles associated with the GKE node pool.
          items:
            enum:
              - ROLE_UNSPECIFIED
              - DEFAULT
              - CONTROLLER
              - SPARK_DRIVER
              - SPARK_EXECUTOR
            type: string
          type: array
      type: object
    GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig:
      description: Encryption settings for encrypting workflow template job arguments.
      properties:
        kmsKey:
          description: "Optional. The Cloud KMS key name to use for encrypting workflow template job arguments.When this this key is provided, the following workflow template job arguments (https://cloud.google.com/dataproc/docs/concepts/workflows/use-workflows#adding_jobs_to_a_template), if present, are CMEK encrypted (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/customer-managed-encryption#use_cmek_with_workflow_template_data): FlinkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/FlinkJob) HadoopJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/HadoopJob) SparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkJob) SparkRJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkRJob) PySparkJob args (https://cloud.google.com/dataproc/docs/reference/rest/v1/PySparkJob) SparkSqlJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/SparkSqlJob) scriptVariables and queryList.queries HiveJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/HiveJob) scriptVariables and queryList.queries PigJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PigJob) scriptVariables and queryList.queries PrestoJob (https://cloud.google.com/dataproc/docs/reference/rest/v1/PrestoJob) scriptVariables and queryList.queries"
          type: string
      type: object
    HadoopJob:
      description: A Dataproc job for running Apache Hadoop MapReduce (https://hadoop.apache.org/docs/current/hadoop-mapreduce-client/hadoop-mapreduce-client-core/MapReduceTutorial.html) jobs on Apache Hadoop YARN (https://hadoop.apache.org/docs/r2.7.1/hadoop-yarn/hadoop-yarn-site/YARN.html).
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted in the working directory of Hadoop drivers and tasks. Supported file types: .jar, .tar, .tar.gz, .tgz, or .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments, such as -libjars or -Dfoo=bar, that can be set as job properties, since a collision might occur that causes an incorrect job submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS (Hadoop Compatible Filesystem) URIs of files to be copied to the working directory of Hadoop drivers and distributed tasks. Useful for naively parallel tasks.
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. Jar file URIs to add to the CLASSPATHs of the Hadoop driver and tasks.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        mainClass:
          description: The name of the driver's main class. The jar file containing the class must be in the default CLASSPATH or specified in jar_file_uris.
          type: string
        mainJarFileUri:
          description: "The HCFS URI of the jar file containing the main class. Examples: 'gs://foo-bucket/analytics-binaries/extract-useful-metrics-mr.jar' 'hdfs:/tmp/test-samples/custom-wordcount.jar' 'file:///home/usr/lib/hadoop-mapreduce/hadoop-mapreduce-examples.jar'"
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure Hadoop. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site and classes in user code.
          type: object
      type: object
    HiveJob:
      description: A Dataproc job for running Apache Hive (https://hive.apache.org/) queries on YARN.
      properties:
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Hive server and Hadoop MapReduce (MR) tasks. Can contain Hive SerDes and UDFs.
          items:
            type: string
          type: array
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names and values, used to configure Hive. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/hive/conf/hive-site.xml, and classes in user code.
          type: object
        queryFileUri:
          description: The HCFS URI of the script that contains Hive queries.
          type: string
        queryList:
          $ref: "#/components/schemas/QueryList"
          description: A list of queries.
        scriptVariables:
          additionalProperties:
            type: string
          description: 'Optional. Mapping of query variable names to values (equivalent to the Hive command: SET name="value";).'
          type: object
      type: object
    IdentityConfig:
      description: Identity related configuration, including service account based secure multi-tenancy user mappings.
      properties:
        userServiceAccountMapping:
          additionalProperties:
            type: string
          description: Required. Map of user to service account.
          type: object
      type: object
    InjectCredentialsRequest:
      description: A request to inject credentials into a cluster.
      properties:
        clusterUuid:
          description: Required. The cluster UUID.
          type: string
        credentialsCiphertext:
          description: Required. The encrypted credentials being injected in to the cluster.The client is responsible for encrypting the credentials in a way that is supported by the cluster.A wrapped value is used here so that the actual contents of the encrypted credentials are not written to audit logs.
          type: string
      type: object
    InstanceFlexibilityPolicy:
      description: Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
      properties:
        instanceSelectionList:
          description: Optional. List of instance selection options that the group will use when creating new VMs.
          items:
            $ref: "#/components/schemas/InstanceSelection"
          type: array
        instanceSelectionResults:
          description: Output only. A list of instance selection results in the group.
          items:
            $ref: "#/components/schemas/InstanceSelectionResult"
          readOnly: true
          type: array
      type: object
    InstanceGroupAutoscalingPolicyConfig:
      description: Configuration for the size bounds of an instance group, including its proportional size to other groups.
      properties:
        maxInstances:
          description: "Required. Maximum number of instances for this group. Required for primary workers. Note that by default, clusters will not use secondary workers. Required for secondary workers if the minimum secondary instances is set.Primary workers - Bounds: [min_instances, ). Secondary workers - Bounds: [min_instances, ). Default: 0."
          format: int32
          type: integer
        minInstances:
          description: "Optional. Minimum number of instances for this group.Primary workers - Bounds: 2, max_instances. Default: 2. Secondary workers - Bounds: 0, max_instances. Default: 0."
          format: int32
          type: integer
        weight:
          description: "Optional. Weight for the instance group, which is used to determine the fraction of total workers in the cluster from this instance group. For example, if primary workers have weight 2, and secondary workers have weight 1, the cluster will have approximately 2 primary workers for each secondary worker.The cluster may not reach the specified balance if constrained by min/max bounds or other autoscaling settings. For example, if max_instances for secondary workers is 0, then only primary workers will be added. The cluster can also be out of balance when created.If weight is not set on any instance group, the cluster will default to equal weight for all groups: the cluster will attempt to maintain an equal number of workers in each group within the configured size bounds for each group. If weight is set for one group only, the cluster will default to zero weight on the unset group. For example if weight is set only on primary workers, the cluster will use primary workers only and no secondary workers."
          format: int32
          type: integer
      type: object
    InstanceGroupConfig:
      description: The config settings for Compute Engine resources in an instance group, such as a master or worker group.
      properties:
        accelerators:
          description: Optional. The Compute Engine accelerator configuration for these instances.
          items:
            $ref: "#/components/schemas/AcceleratorConfig"
          type: array
        diskConfig:
          $ref: "#/components/schemas/DiskConfig"
          description: Optional. Disk option config settings.
        imageUri:
          description: "Optional. The Compute Engine image resource used for cluster instances.The URI can represent an image or image family.Image examples: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/[image-id] projects/[project_id]/global/images/[image-id] image-idImage family examples. Dataproc will use the most recent image from the family: https://www.googleapis.com/compute/v1/projects/[project_id]/global/images/family/[custom-image-family-name] projects/[project_id]/global/images/family/[custom-image-family-name]If the URI is unspecified, it will be inferred from SoftwareConfig.image_version or the system default."
          type: string
        instanceFlexibilityPolicy:
          $ref: "#/components/schemas/InstanceFlexibilityPolicy"
          description: Optional. Instance flexibility Policy allowing a mixture of VM shapes and provisioning models.
        instanceNames:
          description: Output only. The list of instance names. Dataproc derives the names from cluster_name, num_instances, and the instance group.
          items:
            type: string
          readOnly: true
          type: array
        instanceReferences:
          description: Output only. List of references to Compute Engine instances.
          items:
            $ref: "#/components/schemas/InstanceReference"
          readOnly: true
          type: array
        isPreemptible:
          description: Output only. Specifies that this instance group contains preemptible instances.
          readOnly: true
          type: boolean
        machineTypeUri:
          description: "Optional. The Compute Engine machine type used for cluster instances.A full URL, partial URI, or short name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 projects/[project_id]/zones/[zone]/machineTypes/n1-standard-2 n1-standard-2Auto Zone Exception: If you are using the Dataproc Auto Zone Placement (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, n1-standard-2."
          type: string
        managedGroupConfig:
          $ref: "#/components/schemas/ManagedGroupConfig"
          description: Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.
          readOnly: true
        minCpuPlatform:
          description: Optional. Specifies the minimum cpu platform for the Instance Group. See Dataproc -> Minimum CPU Platform (https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
          type: string
        minNumInstances:
          description: "Optional. The minimum number of primary worker instances to create. If min_num_instances is set, cluster creation will succeed if the number of primary workers created is at least equal to the min_num_instances number.Example: Cluster creation request with num_instances = 5 and min_num_instances = 3: If 4 VMs are created and 1 instance fails, the failed VM is deleted. The cluster is resized to 4 instances and placed in a RUNNING state. If 2 instances are created and 3 instances fail, the cluster in placed in an ERROR state. The failed VMs are not deleted."
          format: int32
          type: integer
        numInstances:
          description: Optional. The number of VM instances in the instance group. For HA cluster master_config groups, must be set to 3. For standard cluster master_config groups, must be set to 1.
          format: int32
          type: integer
        preemptibility:
          description: Optional. Specifies the preemptibility of the instance group.The default value for master and worker groups is NON_PREEMPTIBLE. This default cannot be changed.The default value for secondary instances is PREEMPTIBLE.
          enum:
            - PREEMPTIBILITY_UNSPECIFIED
            - NON_PREEMPTIBLE
            - PREEMPTIBLE
            - SPOT
          type: string
        startupConfig:
          $ref: "#/components/schemas/StartupConfig"
          description: Optional. Configuration to handle the startup of instances during cluster create and update process.
      type: object
    InstanceReference:
      description: A reference to a Compute Engine instance.
      properties:
        instanceId:
          description: The unique identifier of the Compute Engine instance.
          type: string
        instanceName:
          description: The user-friendly name of the Compute Engine instance.
          type: string
        publicEciesKey:
          description: The public ECIES key used for sharing data with this instance.
          type: string
        publicKey:
          description: The public RSA key used for sharing data with this instance.
          type: string
      type: object
    InstanceSelection:
      description: Defines machines types and a rank to which the machines types belong.
      properties:
        machineTypes:
          description: Optional. Full machine-type names, e.g. "n1-standard-16".
          items:
            type: string
          type: array
        rank:
          description: Optional. Preference of this instance selection. Lower number means higher preference. Dataproc will first try to create a VM based on the machine-type with priority rank and fallback to next rank based on availability. Machine types and instance selections with the same priority have the same preference.
          format: int32
          type: integer
      type: object
    InstanceSelectionResult:
      description: Defines a mapping from machine types to the number of VMs that are created with each machine type.
      properties:
        machineType:
          description: Output only. Full machine-type names, e.g. "n1-standard-16".
          readOnly: true
          type: string
        vmCount:
          description: Output only. Number of VM provisioned with the machine_type.
          format: int32
          readOnly: true
          type: integer
      type: object
    InstantiateWorkflowTemplateRequest:
      description: A request to instantiate a workflow template.
      properties:
        parameters:
          additionalProperties:
            type: string
          description: Optional. Map from parameter names to values that should be used for those parameters. Values may not exceed 1000 characters.
          type: object
        requestId:
          description: Optional. A tag that prevents multiple concurrent workflow instances with the same tag from running. This mitigates risk of concurrent instances started due to retries.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The tag must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
          type: string
        version:
          description: Optional. The version of workflow template to instantiate. If specified, the workflow will be instantiated only if the current version of the workflow template has the supplied version.This option cannot be used to instantiate a previous version of workflow template.
          format: int32
          type: integer
      type: object
    Interval:
      description: Represents a time interval, encoded as a Timestamp start (inclusive) and a Timestamp end (exclusive).The start must be less than or equal to the end. When the start equals the end, the interval is empty (matches no time). When both start and end are unspecified, the interval matches any time.
      properties:
        endTime:
          description: Optional. Exclusive end of the interval.If specified, a Timestamp matching this interval will have to be before the end.
          format: google-datetime
          type: string
        startTime:
          description: Optional. Inclusive start of the interval.If specified, a Timestamp matching this interval will have to be the same or after the start.
          format: google-datetime
          type: string
      type: object
    Job:
      description: A Dataproc job resource.
      properties:
        done:
          description: Output only. Indicates whether the job is completed. If the value is false, the job is still in progress. If true, the job is completed, and status.state field will indicate if it was successful, failed, or cancelled.
          readOnly: true
          type: boolean
        driverControlFilesUri:
          description: Output only. If present, the location of miscellaneous control files which can be used as part of job setup and handling. If not present, control files might be placed in the same location as driver_output_uri.
          readOnly: true
          type: string
        driverOutputResourceUri:
          description: Output only. A URI pointing to the location of the stdout of the job's driver program.
          readOnly: true
          type: string
        driverSchedulingConfig:
          $ref: "#/components/schemas/DriverSchedulingConfig"
          description: Optional. Driver scheduling configuration.
        flinkJob:
          $ref: "#/components/schemas/FlinkJob"
          description: Optional. Job is a Flink job.
        hadoopJob:
          $ref: "#/components/schemas/HadoopJob"
          description: Optional. Job is a Hadoop job.
        hiveJob:
          $ref: "#/components/schemas/HiveJob"
          description: Optional. Job is a Hive job.
        jobUuid:
          description: Output only. A UUID that uniquely identifies a job within the project over time. This is in contrast to a user-settable reference.job_id that might be reused over time.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels to associate with this job. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a job.
          type: object
        pigJob:
          $ref: "#/components/schemas/PigJob"
          description: Optional. Job is a Pig job.
        placement:
          $ref: "#/components/schemas/JobPlacement"
          description: Required. Job information, including how, when, and where to run the job.
        prestoJob:
          $ref: "#/components/schemas/PrestoJob"
          description: Optional. Job is a Presto job.
        pysparkJob:
          $ref: "#/components/schemas/PySparkJob"
          description: Optional. Job is a PySpark job.
        reference:
          $ref: "#/components/schemas/JobReference"
          description: Optional. The fully qualified reference to the job, which can be used to obtain the equivalent REST path of the job resource. If this property is not specified when a job is created, the server generates a job_id.
        scheduling:
          $ref: "#/components/schemas/JobScheduling"
          description: Optional. Job scheduling configuration.
        sparkJob:
          $ref: "#/components/schemas/SparkJob"
          description: Optional. Job is a Spark job.
        sparkRJob:
          $ref: "#/components/schemas/SparkRJob"
          description: Optional. Job is a SparkR job.
        sparkSqlJob:
          $ref: "#/components/schemas/SparkSqlJob"
          description: Optional. Job is a SparkSql job.
        status:
          $ref: "#/components/schemas/JobStatus"
          description: Output only. The job status. Additional application-specific status information might be contained in the type_job and yarn_applications fields.
          readOnly: true
        statusHistory:
          description: Output only. The previous job status.
          items:
            $ref: "#/components/schemas/JobStatus"
          readOnly: true
          type: array
        trinoJob:
          $ref: "#/components/schemas/TrinoJob"
          description: Optional. Job is a Trino job.
        yarnApplications:
          description: "Output only. The collection of YARN applications spun up by this job.Beta Feature: This report is available for testing purposes only. It might be changed before final release."
          items:
            $ref: "#/components/schemas/YarnApplication"
          readOnly: true
          type: array
      type: object
    JobMetadata:
      description: Job Operation metadata.
      properties:
        jobId:
          description: Output only. The job id.
          readOnly: true
          type: string
        operationType:
          description: Output only. Operation type.
          readOnly: true
          type: string
        startTime:
          description: Output only. Job submission time.
          format: google-datetime
          readOnly: true
          type: string
        status:
          $ref: "#/components/schemas/JobStatus"
          description: Output only. Most recent job status.
          readOnly: true
      type: object
    JobPlacement:
      description: Dataproc job config.
      properties:
        clusterLabels:
          additionalProperties:
            type: string
          description: Optional. Cluster labels to identify a cluster where the job will be submitted.
          type: object
        clusterName:
          description: Required. The name of the cluster where the job will be submitted.
          type: string
        clusterUuid:
          description: Output only. A cluster UUID generated by the Dataproc service when the job is submitted.
          readOnly: true
          type: string
      type: object
    JobReference:
      description: Encapsulates the full scoping used to reference a job.
      properties:
        jobId:
          description: Optional. The job ID, which must be unique within the project.The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), or hyphens (-). The maximum length is 100 characters.If not specified by the caller, the job ID will be provided by the server.
          type: string
        projectId:
          description: Optional. The ID of the Google Cloud Platform project that the job belongs to. If specified, must match the request project ID.
          type: string
      type: object
    JobScheduling:
      description: Job scheduling options.
      properties:
        maxFailuresPerHour:
          description: "Optional. Maximum number of times per hour a driver can be restarted as a result of driver exiting with non-zero code before job is reported failed.A job might be reported as thrashing if the driver exits with a non-zero code four times within a 10-minute window.Maximum value is 10.Note: This restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template)."
          format: int32
          type: integer
        maxFailuresTotal:
          description: "Optional. Maximum total number of times a driver can be restarted as a result of the driver exiting with a non-zero code. After the maximum number is reached, the job will be reported as failed.Maximum value is 240.Note: Currently, this restartable job option is not supported in Dataproc workflow templates (https://cloud.google.com/dataproc/docs/concepts/workflows/using-workflows#adding_jobs_to_a_template)."
          format: int32
          type: integer
      type: object
    JobStatus:
      description: Dataproc job status.
      properties:
        details:
          description: Optional. Output only. Job state details, such as an error description if the state is ERROR.
          readOnly: true
          type: string
        state:
          description: Output only. A state message specifying the overall job state.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - SETUP_DONE
            - RUNNING
            - CANCEL_PENDING
            - CANCEL_STARTED
            - CANCELLED
            - DONE
            - ERROR
            - ATTEMPT_FAILURE
          readOnly: true
          type: string
        stateStartTime:
          description: Output only. The time when this state was entered.
          format: google-datetime
          readOnly: true
          type: string
        substate:
          description: Output only. Additional state information, which includes status reported by the agent.
          enum:
            - UNSPECIFIED
            - SUBMITTED
            - QUEUED
            - STALE_STATUS
          readOnly: true
          type: string
      type: object
    JupyterConfig:
      description: Jupyter configuration for an interactive session.
      properties:
        displayName:
          description: Optional. Display name, shown in the Jupyter kernelspec card.
          type: string
        kernel:
          description: Optional. Kernel
          enum:
            - KERNEL_UNSPECIFIED
            - PYTHON
            - SCALA
          type: string
      type: object
    KerberosConfig:
      description: Specifies Kerberos related configuration.
      properties:
        crossRealmTrustAdminServer:
          description: Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
          type: string
        crossRealmTrustKdc:
          description: Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
          type: string
        crossRealmTrustRealm:
          description: Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
          type: string
        crossRealmTrustSharedPasswordUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
          type: string
        enableKerberos:
          description: "Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster."
          type: boolean
        kdcDbKeyUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
          type: string
        keyPasswordUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
          type: string
        keystorePasswordUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
          type: string
        keystoreUri:
          description: Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
          type: string
        kmsKeyUri:
          description: Optional. The URI of the KMS key used to encrypt sensitive files.
          type: string
        realm:
          description: Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
          type: string
        rootPrincipalPasswordUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
          type: string
        tgtLifetimeHours:
          description: Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
          format: int32
          type: integer
        truststorePasswordUri:
          description: Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
          type: string
        truststoreUri:
          description: Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
          type: string
      type: object
    KubernetesClusterConfig:
      description: The configuration for running the Dataproc cluster on Kubernetes.
      properties:
        gkeClusterConfig:
          $ref: "#/components/schemas/GkeClusterConfig"
          description: Required. The configuration for running the Dataproc cluster on GKE.
        kubernetesNamespace:
          description: Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
          type: string
        kubernetesSoftwareConfig:
          $ref: "#/components/schemas/KubernetesSoftwareConfig"
          description: Optional. The software configuration for this Dataproc cluster running on Kubernetes.
      type: object
    KubernetesSoftwareConfig:
      description: The software configuration for this Dataproc cluster running on Kubernetes.
      properties:
        componentVersion:
          additionalProperties:
            type: string
          description: The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
          type: object
        properties:
          additionalProperties:
            type: string
          description: "The properties to set on daemon config files.Property keys are specified in prefix:property format, for example spark:spark.kubernetes.container.image. The following are supported prefixes and their mappings: spark: spark-defaults.confFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties)."
          type: object
      type: object
    LifecycleConfig:
      description: Specifies the cluster auto-delete schedule configuration.
      properties:
        autoDeleteTime:
          description: Optional. The time when cluster will be auto-deleted (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
          format: google-datetime
          type: string
        autoDeleteTtl:
          description: Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
          format: google-duration
          type: string
        idleDeleteTtl:
          description: Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
          format: google-duration
          type: string
        idleStartTime:
          description: Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of Timestamp (https://developers.google.com/protocol-buffers/docs/proto3#json)).
          format: google-datetime
          readOnly: true
          type: string
      type: object
    ListAutoscalingPoliciesResponse:
      description: A response to a request to list autoscaling policies in a project.
      properties:
        nextPageToken:
          description: Output only. This token is included in the response if there are more results to fetch.
          readOnly: true
          type: string
        policies:
          description: Output only. Autoscaling policies list.
          items:
            $ref: "#/components/schemas/AutoscalingPolicy"
          readOnly: true
          type: array
      type: object
    ListBatchesResponse:
      description: A list of batch workloads.
      properties:
        batches:
          description: Output only. The batches from the specified collection.
          items:
            $ref: "#/components/schemas/Batch"
          readOnly: true
          type: array
        nextPageToken:
          description: A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        unreachable:
          description: Output only. List of Batches that could not be included in the response. Attempting to get one of these resources may indicate why it was not included in the list response.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ListClustersResponse:
      description: The list of all clusters in a project.
      properties:
        clusters:
          description: Output only. The clusters in the project.
          items:
            $ref: "#/components/schemas/Cluster"
          readOnly: true
          type: array
        nextPageToken:
          description: Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListClustersRequest.
          readOnly: true
          type: string
      type: object
    ListJobsResponse:
      description: A list of jobs in a project.
      properties:
        jobs:
          description: Output only. Jobs list.
          items:
            $ref: "#/components/schemas/Job"
          readOnly: true
          type: array
        nextPageToken:
          description: Optional. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListJobsRequest.
          type: string
        unreachable:
          description: Output only. List of jobs with kms_key-encrypted parameters that could not be decrypted. A response to a jobs.get request may indicate the reason for the decryption failure for a specific job.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    ListOperationsResponse:
      description: The response message for Operations.ListOperations.
      properties:
        nextPageToken:
          description: The standard List next-page token.
          type: string
        operations:
          description: A list of operations that matches the specified filter in the request.
          items:
            $ref: "#/components/schemas/Operation"
          type: array
      type: object
    ListSessionTemplatesResponse:
      description: A list of session templates.
      properties:
        nextPageToken:
          description: A token, which can be sent as page_token to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        sessionTemplates:
          description: Output only. Session template list
          items:
            $ref: "#/components/schemas/SessionTemplate"
          readOnly: true
          type: array
      type: object
    ListSessionsResponse:
      description: A list of interactive sessions.
      properties:
        nextPageToken:
          description: A token, which can be sent as page_token, to retrieve the next page. If this field is omitted, there are no subsequent pages.
          type: string
        sessions:
          description: Output only. The sessions from the specified collection.
          items:
            $ref: "#/components/schemas/Session"
          readOnly: true
          type: array
      type: object
    ListWorkflowTemplatesResponse:
      description: A response to a request to list workflow templates in a project.
      properties:
        nextPageToken:
          description: Output only. This token is included in the response if there are more results to fetch. To fetch additional results, provide this value as the page_token in a subsequent ListWorkflowTemplatesRequest.
          readOnly: true
          type: string
        templates:
          description: Output only. WorkflowTemplates list.
          items:
            $ref: "#/components/schemas/WorkflowTemplate"
          readOnly: true
          type: array
        unreachable:
          description: Output only. List of workflow templates that could not be included in the response. Attempting to get one of these resources may indicate why it was not included in the list response.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    LoggingConfig:
      description: The runtime logging config of the job.
      properties:
        driverLogLevels:
          additionalProperties:
            enum:
              - LEVEL_UNSPECIFIED
              - ALL
              - TRACE
              - DEBUG
              - INFO
              - WARN
              - ERROR
              - FATAL
              - OFF
            type: string
          description: "The per-package log levels for the driver. This can include \"root\" package name to configure rootLogger. Examples: - 'com.google = FATAL' - 'root = INFO' - 'org.apache = DEBUG'"
          type: object
      type: object
    ManagedCluster:
      description: Cluster that is managed by the workflow.
      properties:
        clusterName:
          description: Required. The cluster name prefix. A unique cluster name will be formed by appending a random suffix.The name must contain only lower-case letters (a-z), numbers (0-9), and hyphens (-). Must begin with a letter. Cannot begin or end with hyphen. Must consist of between 2 and 35 characters.
          type: string
        config:
          $ref: "#/components/schemas/ClusterConfig"
          description: Required. The cluster configuration.
        labels:
          additionalProperties:
            type: string
          description: "Optional. The labels to associate with this cluster.Label keys must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 32 labels can be associated with a given cluster."
          type: object
      type: object
    ManagedGroupConfig:
      description: Specifies the resources used to actively manage an instance group.
      properties:
        instanceGroupManagerName:
          description: Output only. The name of the Instance Group Manager for this group.
          readOnly: true
          type: string
        instanceGroupManagerUri:
          description: Output only. The partial URI to the instance group manager for this group. E.g. projects/my-project/regions/us-central1/instanceGroupManagers/my-igm.
          readOnly: true
          type: string
        instanceTemplateName:
          description: Output only. The name of the Instance Template used for the Managed Instance Group.
          readOnly: true
          type: string
      type: object
    MetastoreConfig:
      description: Specifies a Metastore configuration.
      properties:
        dataprocMetastoreService:
          description: "Required. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[dataproc_region]/services/[service-name]"
          type: string
      type: object
    Metric:
      description: A Dataproc custom metric.
      properties:
        metricOverrides:
          description: "Optional. Specify one or more Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) to collect for the metric course (for the SPARK metric source (any Spark metric (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified).Provide metrics in the following format: METRIC_SOURCE: INSTANCE:GROUP:METRIC Use camelcase as appropriate.Examples: yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used Notes: Only the specified overridden metrics are collected for the metric source. For example, if one or more spark:executive metrics are listed as metric overrides, other SPARK metrics are not collected. The collection of the metrics for other enabled custom metric sources is unaffected. For example, if both SPARK andd YARN metric sources are enabled, and overrides are provided for Spark metrics only, all YARN metrics are collected."
          items:
            type: string
          type: array
        metricSource:
          description: Required. A standard set of metrics is collected unless metricOverrides are specified for the metric source (see Custom metrics (https://cloud.google.com/dataproc/docs/guides/dataproc-metrics#custom_metrics) for more information).
          enum:
            - METRIC_SOURCE_UNSPECIFIED
            - MONITORING_AGENT_DEFAULTS
            - HDFS
            - SPARK
            - YARN
            - SPARK_HISTORY_SERVER
            - HIVESERVER2
            - HIVEMETASTORE
            - FLINK
          type: string
      type: object
    NamespacedGkeDeploymentTarget:
      deprecated: true
      description: Deprecated. Used only for the deprecated beta. A full, namespace-isolated deployment target for an existing GKE cluster.
      properties:
        clusterNamespace:
          description: Optional. A namespace within the GKE cluster to deploy into.
          type: string
        targetGkeCluster:
          description: "Optional. The target GKE cluster to deploy to. Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'"
          type: string
      type: object
    NodeGroup:
      description: Dataproc Node Group. The Dataproc NodeGroup resource is not related to the Dataproc NodeGroupAffinity resource.
      properties:
        labels:
          additionalProperties:
            type: string
          description: Optional. Node group labels. Label keys must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty. If specified, they must consist of from 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). The node group must have no more than 32 labelsn.
          type: object
        name:
          description: The Node group resource name (https://aip.dev/122).
          type: string
        nodeGroupConfig:
          $ref: "#/components/schemas/InstanceGroupConfig"
          description: Optional. The node group instance group configuration.
        roles:
          description: Required. Node group roles.
          items:
            enum:
              - ROLE_UNSPECIFIED
              - DRIVER
            type: string
          type: array
      type: object
    NodeGroupAffinity:
      description: Node Group Affinity for clusters using sole-tenant node groups. The Dataproc NodeGroupAffinity resource is not related to the Dataproc NodeGroup resource.
      properties:
        nodeGroupUri:
          description: "Required. The URI of a sole-tenant node group resource (https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on.A full URL, partial URI, or node group name are valid. Examples: https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 projects/[project_id]/zones/[zone]/nodeGroups/node-group-1 node-group-1"
          type: string
      type: object
    NodeGroupOperationMetadata:
      description: Metadata describing the node group operation.
      properties:
        clusterUuid:
          description: Output only. Cluster UUID associated with the node group operation.
          readOnly: true
          type: string
        description:
          description: Output only. Short description of operation.
          readOnly: true
          type: string
        labels:
          additionalProperties:
            type: string
          description: Output only. Labels associated with the operation.
          readOnly: true
          type: object
        nodeGroupId:
          description: Output only. Node group ID for the operation.
          readOnly: true
          type: string
        operationType:
          description: The operation type.
          enum:
            - NODE_GROUP_OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - UPDATE
            - DELETE
            - RESIZE
            - REPAIR
            - UPDATE_LABELS
          type: string
        status:
          $ref: "#/components/schemas/ClusterOperationStatus"
          description: Output only. Current operation status.
          readOnly: true
        statusHistory:
          description: Output only. The previous operation status.
          items:
            $ref: "#/components/schemas/ClusterOperationStatus"
          readOnly: true
          type: array
        warnings:
          description: Output only. Errors encountered during operation execution.
          items:
            type: string
          readOnly: true
          type: array
      type: object
    NodeInitializationAction:
      description: Specifies an executable to run on a fully configured node and a timeout period for executable completion.
      properties:
        executableFile:
          description: Required. Cloud Storage URI of executable file.
          type: string
        executionTimeout:
          description: Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
          format: google-duration
          type: string
      type: object
    NodePool:
      description: indicating a list of workers of same type
      properties:
        id:
          description: Required. A unique id of the node pool. Primary and Secondary workers can be specified using special reserved ids PRIMARY_WORKER_POOL and SECONDARY_WORKER_POOL respectively. Aux node pools can be referenced using corresponding pool id.
          type: string
        instanceNames:
          description: Name of instances to be repaired. These instances must belong to specified node pool.
          items:
            type: string
          type: array
        repairAction:
          description: Required. Repair action to take on specified resources of the node pool.
          enum:
            - REPAIR_ACTION_UNSPECIFIED
            - DELETE
          type: string
      type: object
    Operation:
      description: This resource represents a long-running operation that is the result of a network API call.
      properties:
        done:
          description: If the value is false, it means the operation is still in progress. If true, the operation is completed, and either error or response is available.
          type: boolean
        error:
          $ref: "#/components/schemas/Status"
          description: The error result of the operation in case of failure or cancellation.
        metadata:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.
          type: object
        name:
          description: The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the name should be a resource name ending with operations/{unique_id}.
          type: string
        response:
          additionalProperties:
            description: Properties of the object. Contains field @type with type URL.
          description: The normal, successful response of the operation. If the original method returns no data on success, such as Delete, the response is google.protobuf.Empty. If the original method is standard Get/Create/Update, the response should be the resource. For other methods, the response should have the type XxxResponse, where Xxx is the original method name. For example, if the original method name is TakeSnapshot(), the inferred response type is TakeSnapshotResponse.
          type: object
      type: object
    OrderedJob:
      description: A job executed by the workflow.
      properties:
        flinkJob:
          $ref: "#/components/schemas/FlinkJob"
          description: Optional. Job is a Flink job.
        hadoopJob:
          $ref: "#/components/schemas/HadoopJob"
          description: Optional. Job is a Hadoop job.
        hiveJob:
          $ref: "#/components/schemas/HiveJob"
          description: Optional. Job is a Hive job.
        labels:
          additionalProperties:
            type: string
          description: "Optional. The labels to associate with this job.Label keys must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}{0,62}Label values must be between 1 and 63 characters long, and must conform to the following regular expression: \\p{Ll}\\p{Lo}\\p{N}_-{0,63}No more than 32 labels can be associated with a given job."
          type: object
        pigJob:
          $ref: "#/components/schemas/PigJob"
          description: Optional. Job is a Pig job.
        prerequisiteStepIds:
          description: Optional. The optional list of prerequisite job step_ids. If not specified, the job will start at the beginning of workflow.
          items:
            type: string
          type: array
        prestoJob:
          $ref: "#/components/schemas/PrestoJob"
          description: Optional. Job is a Presto job.
        pysparkJob:
          $ref: "#/components/schemas/PySparkJob"
          description: Optional. Job is a PySpark job.
        scheduling:
          $ref: "#/components/schemas/JobScheduling"
          description: Optional. Job scheduling configuration.
        sparkJob:
          $ref: "#/components/schemas/SparkJob"
          description: Optional. Job is a Spark job.
        sparkRJob:
          $ref: "#/components/schemas/SparkRJob"
          description: Optional. Job is a SparkR job.
        sparkSqlJob:
          $ref: "#/components/schemas/SparkSqlJob"
          description: Optional. Job is a SparkSql job.
        stepId:
          description: Required. The step id. The id must be unique among all jobs within the template.The step id is used as prefix for job id, as job goog-dataproc-workflow-step-id label, and in prerequisiteStepIds field from other steps.The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). Cannot begin or end with underscore or hyphen. Must consist of between 3 and 50 characters.
          type: string
        trinoJob:
          $ref: "#/components/schemas/TrinoJob"
          description: Optional. Job is a Trino job.
      type: object
    ParameterValidation:
      description: Configuration for parameter validation.
      properties:
        regex:
          $ref: "#/components/schemas/RegexValidation"
          description: Validation based on regular expressions.
        values:
          $ref: "#/components/schemas/ValueValidation"
          description: Validation based on a list of allowed values.
      type: object
    PeripheralsConfig:
      description: Auxiliary services configuration for a workload.
      properties:
        metastoreService:
          description: "Optional. Resource name of an existing Dataproc Metastore service.Example: projects/[project_id]/locations/[region]/services/[service_id]"
          type: string
        sparkHistoryServerConfig:
          $ref: "#/components/schemas/SparkHistoryServerConfig"
          description: Optional. The Spark History Server configuration for the workload.
      type: object
    PigJob:
      description: A Dataproc job for running Apache Pig (https://pig.apache.org/) queries on YARN.
      properties:
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATH of the Pig Client and Hadoop MapReduce (MR) tasks. Can contain Pig UDFs.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure Pig. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/hadoop/conf/*-site.xml, /etc/pig/conf/pig.properties, and classes in user code.
          type: object
        queryFileUri:
          description: The HCFS URI of the script that contains the Pig queries.
          type: string
        queryList:
          $ref: "#/components/schemas/QueryList"
          description: A list of queries.
        scriptVariables:
          additionalProperties:
            type: string
          description: "Optional. Mapping of query variable names to values (equivalent to the Pig command: name=[value])."
          type: object
      type: object
    Policy:
      description: "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources.A Policy is a collection of bindings. A binding binds one or more members, or principals, to a single role. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A role is a named list of permissions; each role can be an IAM predefined role or a user-created custom role.For some types of Google Cloud resources, a binding can also specify a condition, which is a logical expression that allows access to a resource only if the expression evaluates to true. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies).JSON example: { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } YAML example: bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the IAM documentation (https://cloud.google.com/iam/docs/)."
      properties:
        bindings:
          description: Associates a list of members, or principals, with a role. Optionally, may specify a condition that determines how and when the bindings are applied. Each of the bindings must contain at least one principal.The bindings in a Policy can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the bindings grant 50 different roles to user:alice@example.com, and not to any other principal, then you can add another 1,450 principals to the bindings in the Policy.
          items:
            $ref: "#/components/schemas/Binding"
          type: array
        etag:
          description: "etag is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the etag in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An etag is returned in the response to getIamPolicy, and systems are expected to put that etag in the request to setIamPolicy to ensure that their change will be applied to the same version of the policy.Important: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost."
          format: byte
          type: string
        version:
          description: "Specifies the format of the policy.Valid values are 0, 1, and 3. Requests that specify an invalid value are rejected.Any operation that affects conditional role bindings must specify version 3. This requirement applies to the following operations: Getting a policy that includes a conditional role binding Adding a conditional role binding to a policy Changing a conditional role binding in a policy Removing any role binding, with or without a condition, from a policy that includes conditionsImportant: If you use IAM Conditions, you must include the etag field whenever you call setIamPolicy. If you omit this field, then IAM allows you to overwrite a version 3 policy with a version 1 policy, and all of the conditions in the version 3 policy are lost.If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset.To learn which resources support conditions in their IAM policies, see the IAM documentation (https://cloud.google.com/iam/help/conditions/resource-policies)."
          format: int32
          type: integer
      type: object
    PrestoJob:
      description: "A Dataproc job for running Presto (https://prestosql.io/) queries. IMPORTANT: The Dataproc Presto Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/presto) must be enabled when the cluster is created to submit a Presto job to the cluster."
      properties:
        clientTags:
          description: Optional. Presto client tags to attach to this query
          items:
            type: string
          type: array
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        outputFormat:
          description: Optional. The format in which query output will be displayed. See the Presto documentation for supported output formats
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values. Used to set Presto session properties (https://prestodb.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Presto CLI
          type: object
        queryFileUri:
          description: The HCFS URI of the script that contains SQL queries.
          type: string
        queryList:
          $ref: "#/components/schemas/QueryList"
          description: A list of queries.
      type: object
    PyPiRepositoryConfig:
      description: Configuration for PyPi repository
      properties:
        pypiRepository:
          description: Optional. PyPi repository address
          type: string
      type: object
    PySparkBatch:
      description: A configuration for running an Apache PySpark (https://spark.apache.org/docs/latest/api/python/getting_started/quickstart.html) batch workload.
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
          items:
            type: string
          type: array
        mainPythonFileUri:
          description: Required. The HCFS URI of the main Python file to use as the Spark driver. Must be a .py file.
          type: string
        pythonFileUris:
          description: "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip."
          items:
            type: string
          type: array
      type: object
    PySparkJob:
      description: A Dataproc job for running Apache PySpark (https://spark.apache.org/docs/0.9.0/python-programming-guide.html) applications on YARN.
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Python driver and tasks.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        mainPythonFileUri:
          description: Required. The HCFS URI of the main Python file to use as the driver. Must be a .py file.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure PySpark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
          type: object
        pythonFileUris:
          description: "Optional. HCFS file URIs of Python files to pass to the PySpark framework. Supported file types: .py, .egg, and .zip."
          items:
            type: string
          type: array
      type: object
    QueryList:
      description: A list of queries to run on a cluster.
      properties:
        queries:
          description: 'Required. The queries to execute. You do not need to end a query expression with a semicolon. Multiple queries can be specified in one string by separating each with a semicolon. Here is an example of a Dataproc API snippet that uses a QueryList to specify a HiveJob: "hiveJob": { "queryList": { "queries": [ "query1", "query2", "query3;query4", ] } } '
          items:
            type: string
          type: array
      type: object
    RegexValidation:
      description: Validation based on regular expressions.
      properties:
        regexes:
          description: Required. RE2 regular expressions used to validate the parameter's value. The value must match the regex in its entirety (substring matches are not sufficient).
          items:
            type: string
          type: array
      type: object
    RepairClusterRequest:
      description: A request to repair a cluster.
      properties:
        clusterUuid:
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
          type: string
        gracefulDecommissionTimeout:
          description: Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning facilitates the removal of cluster nodes without interrupting jobs in progress. The timeout specifies the amount of time to wait for jobs finish before forcefully removing nodes. The default timeout is 0 for forceful decommissioning, and the maximum timeout period is 1 day. (see JSON Mapping—Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).graceful_decommission_timeout is supported in Dataproc image versions 1.2+.
          format: google-duration
          type: string
        nodePools:
          description: Optional. Node pools and corresponding repair action to be taken. All node pools should be unique in this request. i.e. Multiple entries for the same node pool id are not allowed.
          items:
            $ref: "#/components/schemas/NodePool"
          type: array
        parentOperationId:
          description: Optional. operation id of the parent operation sending the repair request
          type: string
        requestId:
          description: "Optional. A unique ID used to identify the request. If the server receives two RepairClusterRequests with the same ID, the second request is ignored, and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          type: string
      type: object
    RepairNodeGroupRequest:
      properties:
        instanceNames:
          description: Required. Name of instances to be repaired. These instances must belong to specified node pool.
          items:
            type: string
          type: array
        repairAction:
          description: Required. Repair action to take on specified resources of the node pool.
          enum:
            - REPAIR_ACTION_UNSPECIFIED
            - REPLACE
          type: string
        requestId:
          description: "Optional. A unique ID used to identify the request. If the server receives two RepairNodeGroupRequest with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          type: string
      type: object
    RepositoryConfig:
      description: Configuration for dependency repositories
      properties:
        pypiRepositoryConfig:
          $ref: "#/components/schemas/PyPiRepositoryConfig"
          description: Optional. Configuration for PyPi repository.
      type: object
    ReservationAffinity:
      description: Reservation Affinity for consuming Zonal reservation.
      properties:
        consumeReservationType:
          description: Optional. Type of reservation to consume
          enum:
            - TYPE_UNSPECIFIED
            - NO_RESERVATION
            - ANY_RESERVATION
            - SPECIFIC_RESERVATION
          type: string
        key:
          description: Optional. Corresponds to the label key of reservation resource.
          type: string
        values:
          description: Optional. Corresponds to the label values of reservation resource.
          items:
            type: string
          type: array
      type: object
    ResizeNodeGroupRequest:
      description: A request to resize a node group.
      properties:
        gracefulDecommissionTimeout:
          description: Optional. Timeout for graceful YARN decommissioning. Graceful decommissioning (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/scaling-clusters#graceful_decommissioning) allows the removal of nodes from the Compute Engine node group without interrupting jobs in progress. This timeout specifies how long to wait for jobs in progress to finish before forcefully removing nodes (and potentially interrupting jobs). Default timeout is 0 (for forceful decommission), and the maximum allowed timeout is 1 day. (see JSON representation of Duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).Only supported on Dataproc image versions 1.2 and higher.
          format: google-duration
          type: string
        parentOperationId:
          description: Optional. operation id of the parent operation sending the resize request
          type: string
        requestId:
          description: "Optional. A unique ID used to identify the request. If the server receives two ResizeNodeGroupRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.ResizeNodeGroupRequests) with the same ID, the second request is ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          type: string
        size:
          description: Required. The number of running instances for the node group to maintain. The group adds or removes instances to maintain the number of instances specified by this parameter.
          format: int32
          type: integer
      type: object
    RuntimeConfig:
      description: Runtime configuration for a workload.
      properties:
        containerImage:
          description: Optional. Optional custom container image for the job runtime environment. If not specified, a default container image will be used.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, which are used to configure workload execution.
          type: object
        repositoryConfig:
          $ref: "#/components/schemas/RepositoryConfig"
          description: Optional. Dependency repository configuration.
        version:
          description: Optional. Version of the batch runtime.
          type: string
      type: object
    RuntimeInfo:
      description: Runtime information about workload execution.
      properties:
        approximateUsage:
          $ref: "#/components/schemas/UsageMetrics"
          description: "Output only. Approximate workload resource usage, calculated when the workload completes (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).Note: This metric calculation may change in the future, for example, to capture cumulative workload resource consumption during workload execution (see the Dataproc Serverless release notes (https://cloud.google.com/dataproc-serverless/docs/release-notes) for announcements, changes, fixes and other Dataproc developments)."
          readOnly: true
        currentUsage:
          $ref: "#/components/schemas/UsageSnapshot"
          description: Output only. Snapshot of current workload resource usage.
          readOnly: true
        diagnosticOutputUri:
          description: Output only. A URI pointing to the location of the diagnostics tarball.
          readOnly: true
          type: string
        endpoints:
          additionalProperties:
            type: string
          description: Output only. Map of remote access endpoints (such as web interfaces and APIs) to their URIs.
          readOnly: true
          type: object
        outputUri:
          description: Output only. A URI pointing to the location of the stdout and stderr of the workload.
          readOnly: true
          type: string
      type: object
    SecurityConfig:
      description: Security related configuration, including encryption, Kerberos, etc.
      properties:
        identityConfig:
          $ref: "#/components/schemas/IdentityConfig"
          description: Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.
        kerberosConfig:
          $ref: "#/components/schemas/KerberosConfig"
          description: Optional. Kerberos related configuration.
      type: object
    Session:
      description: A representation of a session.
      properties:
        createTime:
          description: Output only. The time when the session was created.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          description: Output only. The email address of the user who created the session.
          readOnly: true
          type: string
        environmentConfig:
          $ref: "#/components/schemas/EnvironmentConfig"
          description: Optional. Environment configuration for the session execution.
        jupyterSession:
          $ref: "#/components/schemas/JupyterConfig"
          description: Optional. Jupyter session config.
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels to associate with the session. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
          type: object
        name:
          description: Required. The resource name of the session.
          type: string
        runtimeConfig:
          $ref: "#/components/schemas/RuntimeConfig"
          description: Optional. Runtime configuration for the session execution.
        runtimeInfo:
          $ref: "#/components/schemas/RuntimeInfo"
          description: Output only. Runtime information about session execution.
          readOnly: true
        sessionTemplate:
          description: "Optional. The session template used by the session.Only resource names, including project ID and location, are valid.Example: * https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id] * projects/[project_id]/locations/[dataproc_region]/sessionTemplates/[template_id]The template must be in the same project and Dataproc region as the session."
          type: string
        state:
          description: Output only. A state of the session.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - TERMINATING
            - TERMINATED
            - FAILED
          readOnly: true
          type: string
        stateHistory:
          description: Output only. Historical state information for the session.
          items:
            $ref: "#/components/schemas/SessionStateHistory"
          readOnly: true
          type: array
        stateMessage:
          description: Output only. Session state details, such as the failure description if the state is FAILED.
          readOnly: true
          type: string
        stateTime:
          description: Output only. The time when the session entered the current state.
          format: google-datetime
          readOnly: true
          type: string
        user:
          description: Optional. The email address of the user who owns the session.
          type: string
        uuid:
          description: Output only. A session UUID (Unique Universal Identifier). The service generates this value when it creates the session.
          readOnly: true
          type: string
      type: object
    SessionOperationMetadata:
      description: Metadata describing the Session operation.
      properties:
        createTime:
          description: The time when the operation was created.
          format: google-datetime
          type: string
        description:
          description: Short description of the operation.
          type: string
        doneTime:
          description: The time when the operation was finished.
          format: google-datetime
          type: string
        labels:
          additionalProperties:
            type: string
          description: Labels associated with the operation.
          type: object
        operationType:
          description: The operation type.
          enum:
            - SESSION_OPERATION_TYPE_UNSPECIFIED
            - CREATE
            - TERMINATE
            - DELETE
          type: string
        session:
          description: Name of the session for the operation.
          type: string
        sessionUuid:
          description: Session UUID for the operation.
          type: string
        warnings:
          description: Warnings encountered during operation execution.
          items:
            type: string
          type: array
      type: object
    SessionStateHistory:
      description: Historical state information.
      properties:
        state:
          description: Output only. The state of the session at this point in the session history.
          enum:
            - STATE_UNSPECIFIED
            - CREATING
            - ACTIVE
            - TERMINATING
            - TERMINATED
            - FAILED
          readOnly: true
          type: string
        stateMessage:
          description: Output only. Details about the state at this point in the session history.
          readOnly: true
          type: string
        stateStartTime:
          description: Output only. The time when the session entered the historical state.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    SessionTemplate:
      description: A representation of a session template.
      properties:
        createTime:
          description: Output only. The time when the template was created.
          format: google-datetime
          readOnly: true
          type: string
        creator:
          description: Output only. The email address of the user who created the template.
          readOnly: true
          type: string
        description:
          description: Optional. Brief description of the template.
          type: string
        environmentConfig:
          $ref: "#/components/schemas/EnvironmentConfig"
          description: Optional. Environment configuration for session execution.
        jupyterSession:
          $ref: "#/components/schemas/JupyterConfig"
          description: Optional. Jupyter session config.
        labels:
          additionalProperties:
            type: string
          description: Optional. Labels to associate with sessions created using this template. Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). Label values can be empty, but, if present, must contain 1 to 63 characters and conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt). No more than 32 labels can be associated with a session.
          type: object
        name:
          description: Required. The resource name of the session template.
          type: string
        runtimeConfig:
          $ref: "#/components/schemas/RuntimeConfig"
          description: Optional. Runtime configuration for session execution.
        updateTime:
          description: Output only. The time the template was last updated.
          format: google-datetime
          readOnly: true
          type: string
        uuid:
          description: Output only. A session template UUID (Unique Universal Identifier). The service generates this value when it creates the session template.
          readOnly: true
          type: string
      type: object
    SetIamPolicyRequest:
      description: Request message for SetIamPolicy method.
      properties:
        policy:
          $ref: "#/components/schemas/Policy"
          description: "REQUIRED: The complete policy to be applied to the resource. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Google Cloud services (such as Projects) might reject them."
      type: object
    ShieldedInstanceConfig:
      description: Shielded Instance Config for clusters using Compute Engine Shielded VMs (https://cloud.google.com/security/shielded-cloud/shielded-vm).
      properties:
        enableIntegrityMonitoring:
          description: Optional. Defines whether instances have integrity monitoring enabled.
          type: boolean
        enableSecureBoot:
          description: Optional. Defines whether instances have Secure Boot enabled.
          type: boolean
        enableVtpm:
          description: Optional. Defines whether instances have the vTPM enabled.
          type: boolean
      type: object
    SoftwareConfig:
      description: Specifies the selection and config of software inside the cluster.
      properties:
        imageVersion:
          description: Optional. The version of software inside the cluster. It must be one of the supported Dataproc Versions (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the "preview" version (https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
          type: string
        optionalComponents:
          description: Optional. The set of components to activate on the cluster.
          items:
            enum:
              - COMPONENT_UNSPECIFIED
              - ANACONDA
              - DOCKER
              - DRUID
              - FLINK
              - HBASE
              - HIVE_WEBHCAT
              - HUDI
              - JUPYTER
              - PRESTO
              - TRINO
              - RANGER
              - SOLR
              - ZEPPELIN
              - ZOOKEEPER
            type: string
          type: array
        properties:
          additionalProperties:
            type: string
          description: "Optional. The properties to set on daemon config files.Property keys are specified in prefix:property format, for example core:hadoop.tmp.dir. The following are supported prefixes and their mappings: capacity-scheduler: capacity-scheduler.xml core: core-site.xml distcp: distcp-default.xml hdfs: hdfs-site.xml hive: hive-site.xml mapred: mapred-site.xml pig: pig.properties spark: spark-defaults.conf yarn: yarn-site.xmlFor more information, see Cluster properties (https://cloud.google.com/dataproc/docs/concepts/cluster-properties)."
          type: object
      type: object
    SparkBatch:
      description: A configuration for running an Apache Spark (https://spark.apache.org/) batch workload.
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the classpath of the Spark driver and tasks.
          items:
            type: string
          type: array
        mainClass:
          description: Optional. The name of the driver main class. The jar file that contains the class must be in the classpath or specified in jar_file_uris.
          type: string
        mainJarFileUri:
          description: Optional. The HCFS URI of the jar file that contains the main class.
          type: string
      type: object
    SparkHistoryServerConfig:
      description: Spark History Server configuration for the workload.
      properties:
        dataprocCluster:
          description: "Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload.Example: projects/[project_id]/regions/[region]/clusters/[cluster_name]"
          type: string
      type: object
    SparkJob:
      description: A Dataproc job for running Apache Spark (https://spark.apache.org/) applications on YARN.
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
          items:
            type: string
          type: array
        jarFileUris:
          description: Optional. HCFS URIs of jar files to add to the CLASSPATHs of the Spark driver and tasks.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        mainClass:
          description: The name of the driver's main class. The jar file that contains the class must be in the default CLASSPATH or specified in SparkJob.jar_file_uris.
          type: string
        mainJarFileUri:
          description: The HCFS URI of the jar file that contains the main class.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure Spark. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
          type: object
      type: object
    SparkRBatch:
      description: A configuration for running an Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) batch workload.
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the Spark driver. Do not include arguments that can be set as batch properties, such as --conf, since a collision can occur that causes an incorrect batch submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor.
          items:
            type: string
          type: array
        mainRFileUri:
          description: Required. The HCFS URI of the main R file to use as the driver. Must be a .R or .r file.
          type: string
      type: object
    SparkRJob:
      description: A Dataproc job for running Apache SparkR (https://spark.apache.org/docs/latest/sparkr.html) applications on YARN.
      properties:
        archiveUris:
          description: "Optional. HCFS URIs of archives to be extracted into the working directory of each executor. Supported file types: .jar, .tar, .tar.gz, .tgz, and .zip."
          items:
            type: string
          type: array
        args:
          description: Optional. The arguments to pass to the driver. Do not include arguments, such as --conf, that can be set as job properties, since a collision may occur that causes an incorrect job submission.
          items:
            type: string
          type: array
        fileUris:
          description: Optional. HCFS URIs of files to be placed in the working directory of each executor. Useful for naively parallel tasks.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        mainRFileUri:
          description: Required. The HCFS URI of the main R file to use as the driver. Must be a .R file.
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure SparkR. Properties that conflict with values set by the Dataproc API might be overwritten. Can include properties set in /etc/spark/conf/spark-defaults.conf and classes in user code.
          type: object
      type: object
    SparkSqlBatch:
      description: A configuration for running Apache Spark SQL (https://spark.apache.org/sql/) queries as a batch workload.
      properties:
        jarFileUris:
          description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
          items:
            type: string
          type: array
        queryFileUri:
          description: Required. The HCFS URI of the script that contains Spark SQL queries to execute.
          type: string
        queryVariables:
          additionalProperties:
            type: string
          description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
          type: object
      type: object
    SparkSqlJob:
      description: A Dataproc job for running Apache Spark SQL (https://spark.apache.org/sql/) queries.
      properties:
        jarFileUris:
          description: Optional. HCFS URIs of jar files to be added to the Spark CLASSPATH.
          items:
            type: string
          type: array
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values, used to configure Spark SQL's SparkConf. Properties that conflict with values set by the Dataproc API might be overwritten.
          type: object
        queryFileUri:
          description: The HCFS URI of the script that contains SQL queries.
          type: string
        queryList:
          $ref: "#/components/schemas/QueryList"
          description: A list of queries.
        scriptVariables:
          additionalProperties:
            type: string
          description: 'Optional. Mapping of query variable names to values (equivalent to the Spark SQL command: SET name="value";).'
          type: object
      type: object
    SparkStandaloneAutoscalingConfig:
      description: Basic autoscaling configurations for Spark Standalone.
      properties:
        gracefulDecommissionTimeout:
          description: "Required. Timeout for Spark graceful decommissioning of spark workers. Specifies the duration to wait for spark worker to complete spark decommissioning tasks before forcefully removing workers. Only applicable to downscaling operations.Bounds: 0s, 1d."
          format: google-duration
          type: string
        removeOnlyIdleWorkers:
          description: Optional. Remove only idle workers when scaling down cluster
          type: boolean
        scaleDownFactor:
          description: "Required. Fraction of required executors to remove from Spark Serverless clusters. A scale-down factor of 1.0 will result in scaling down so that there are no more executors for the Spark Job.(more aggressive scaling). A scale-down factor closer to 0 will result in a smaller magnitude of scaling donw (less aggressive scaling).Bounds: 0.0, 1.0."
          format: double
          type: number
        scaleDownMinWorkerFraction:
          description: "Optional. Minimum scale-down threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2 worker scale-down for the cluster to scale. A threshold of 0 means the autoscaler will scale down on any recommended change.Bounds: 0.0, 1.0. Default: 0.0."
          format: double
          type: number
        scaleUpFactor:
          description: "Required. Fraction of required workers to add to Spark Standalone clusters. A scale-up factor of 1.0 will result in scaling up so that there are no more required workers for the Spark Job (more aggressive scaling). A scale-up factor closer to 0 will result in a smaller magnitude of scaling up (less aggressive scaling).Bounds: 0.0, 1.0."
          format: double
          type: number
        scaleUpMinWorkerFraction:
          description: "Optional. Minimum scale-up threshold as a fraction of total cluster size before scaling occurs. For example, in a 20-worker cluster, a threshold of 0.1 means the autoscaler must recommend at least a 2-worker scale-up for the cluster to scale. A threshold of 0 means the autoscaler will scale up on any recommended change.Bounds: 0.0, 1.0. Default: 0.0."
          format: double
          type: number
      type: object
    StartClusterRequest:
      description: A request to start a cluster.
      properties:
        clusterUuid:
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
          type: string
        requestId:
          description: "Optional. A unique ID used to identify the request. If the server receives two StartClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StartClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          type: string
      type: object
    StartupConfig:
      description: Configuration to handle the startup of instances during cluster create and update process.
      properties:
        requiredRegistrationFraction:
          description: Optional. The config setting to enable cluster creation/ updation to be successful only after required_registration_fraction of instances are up and running. This configuration is applicable to only secondary workers for now. The cluster will fail if required_registration_fraction of instances are not available. This will include instance creation, agent registration, and service registration (if enabled).
          format: double
          type: number
      type: object
    StateHistory:
      description: Historical state information.
      properties:
        state:
          description: Output only. The state of the batch at this point in history.
          enum:
            - STATE_UNSPECIFIED
            - PENDING
            - RUNNING
            - CANCELLING
            - CANCELLED
            - SUCCEEDED
            - FAILED
          readOnly: true
          type: string
        stateMessage:
          description: Output only. Details about the state at this point in history.
          readOnly: true
          type: string
        stateStartTime:
          description: Output only. The time when the batch entered the historical state.
          format: google-datetime
          readOnly: true
          type: string
      type: object
    Status:
      description: "The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by gRPC (https://github.com/grpc). Each Status message contains three pieces of data: error code, error message, and error details.You can find out more about this error model and how to work with it in the API Design Guide (https://cloud.google.com/apis/design/errors)."
      properties:
        code:
          description: The status code, which should be an enum value of google.rpc.Code.
          format: int32
          type: integer
        details:
          description: A list of messages that carry the error details. There is a common set of message types for APIs to use.
          items:
            additionalProperties:
              description: Properties of the object. Contains field @type with type URL.
            type: object
          type: array
        message:
          description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.
          type: string
      type: object
    StopClusterRequest:
      description: A request to stop a cluster.
      properties:
        clusterUuid:
          description: Optional. Specifying the cluster_uuid means the RPC will fail (with error NOT_FOUND) if a cluster with the specified UUID does not exist.
          type: string
        requestId:
          description: "Optional. A unique ID used to identify the request. If the server receives two StopClusterRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.StopClusterRequest)s with the same id, then the second request will be ignored and the first google.longrunning.Operation created and stored in the backend is returned.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The ID must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          type: string
      type: object
    SubmitJobRequest:
      description: A request to submit a job.
      properties:
        job:
          $ref: "#/components/schemas/Job"
          description: Required. The job resource.
        requestId:
          description: Optional. A unique id used to identify the request. If the server receives two SubmitJobRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.SubmitJobRequest)s with the same id, then the second request will be ignored and the first Job created and stored in the backend is returned.It is recommended to always set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The id must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters.
          type: string
      type: object
    TemplateParameter:
      description: "A configurable parameter that replaces one or more fields in the template. Parameterizable fields: - Labels - File uris - Job properties - Job arguments - Script variables - Main class (in HadoopJob and SparkJob) - Zone (in ClusterSelector)"
      properties:
        description:
          description: Optional. Brief description of the parameter. Must not exceed 1024 characters.
          type: string
        fields:
          description: "Required. Paths to all fields that the parameter replaces. A field is allowed to appear in at most one parameter's list of field paths.A field path is similar in syntax to a google.protobuf.FieldMask. For example, a field path that references the zone field of a workflow template's cluster selector would be specified as placement.clusterSelector.zone.Also, field paths can reference fields using the following syntax: Values in maps can be referenced by key: labels'key' placement.clusterSelector.clusterLabels'key' placement.managedCluster.labels'key' placement.clusterSelector.clusterLabels'key' jobs'step-id'.labels'key' Jobs in the jobs list can be referenced by step-id: jobs'step-id'.hadoopJob.mainJarFileUri jobs'step-id'.hiveJob.queryFileUri jobs'step-id'.pySparkJob.mainPythonFileUri jobs'step-id'.hadoopJob.jarFileUris0 jobs'step-id'.hadoopJob.archiveUris0 jobs'step-id'.hadoopJob.fileUris0 jobs'step-id'.pySparkJob.pythonFileUris0 Items in repeated fields can be referenced by a zero-based index: jobs'step-id'.sparkJob.args0 Other examples: jobs'step-id'.hadoopJob.properties'key' jobs'step-id'.hadoopJob.args0 jobs'step-id'.hiveJob.scriptVariables'key' jobs'step-id'.hadoopJob.mainJarFileUri placement.clusterSelector.zoneIt may not be possible to parameterize maps and repeated fields in their entirety since only individual map values and individual items in repeated fields can be referenced. For example, the following field paths are invalid: placement.clusterSelector.clusterLabels jobs'step-id'.sparkJob.args"
          items:
            type: string
          type: array
        name:
          description: Required. Parameter name. The parameter name is used as the key, and paired with the parameter value, which are passed to the template when the template is instantiated. The name must contain only capital letters (A-Z), numbers (0-9), and underscores (_), and must not start with a number. The maximum length is 40 characters.
          type: string
        validation:
          $ref: "#/components/schemas/ParameterValidation"
          description: Optional. Validation rules to be applied to this parameter's value.
      type: object
    TerminateSessionRequest:
      description: A request to terminate an interactive session.
      properties:
        requestId:
          description: "Optional. A unique ID used to identify the request. If the service receives two TerminateSessionRequest (https://cloud.google.com/dataproc/docs/reference/rpc/google.cloud.dataproc.v1#google.cloud.dataproc.v1.TerminateSessionRequest)s with the same ID, the second request is ignored.Recommendation: Set this value to a UUID (https://en.wikipedia.org/wiki/Universally_unique_identifier).The value must contain only letters (a-z, A-Z), numbers (0-9), underscores (_), and hyphens (-). The maximum length is 40 characters."
          type: string
      type: object
    TestIamPermissionsRequest:
      description: Request message for TestIamPermissions method.
      properties:
        permissions:
          description: The set of permissions to check for the resource. Permissions with wildcards (such as * or storage.*) are not allowed. For more information see IAM Overview (https://cloud.google.com/iam/docs/overview#permissions).
          items:
            type: string
          type: array
      type: object
    TestIamPermissionsResponse:
      description: Response message for TestIamPermissions method.
      properties:
        permissions:
          description: A subset of TestPermissionsRequest.permissions that the caller is allowed.
          items:
            type: string
          type: array
      type: object
    TrinoJob:
      description: "A Dataproc job for running Trino (https://trino.io/) queries. IMPORTANT: The Dataproc Trino Optional Component (https://cloud.google.com/dataproc/docs/concepts/components/trino) must be enabled when the cluster is created to submit a Trino job to the cluster."
      properties:
        clientTags:
          description: Optional. Trino client tags to attach to this query
          items:
            type: string
          type: array
        continueOnFailure:
          description: Optional. Whether to continue executing queries if a query fails. The default value is false. Setting to true can be useful when executing independent parallel queries.
          type: boolean
        loggingConfig:
          $ref: "#/components/schemas/LoggingConfig"
          description: Optional. The runtime log config for job execution.
        outputFormat:
          description: Optional. The format in which query output will be displayed. See the Trino documentation for supported output formats
          type: string
        properties:
          additionalProperties:
            type: string
          description: Optional. A mapping of property names to values. Used to set Trino session properties (https://trino.io/docs/current/sql/set-session.html) Equivalent to using the --session flag in the Trino CLI
          type: object
        queryFileUri:
          description: The HCFS URI of the script that contains SQL queries.
          type: string
        queryList:
          $ref: "#/components/schemas/QueryList"
          description: A list of queries.
      type: object
    UsageMetrics:
      description: Usage metrics represent approximate total resources consumed by a workload.
      properties:
        acceleratorType:
          description: Optional. Accelerator type being used, if any
          type: string
        milliAcceleratorSeconds:
          description: Optional. Accelerator usage in (milliAccelerator x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
          format: int64
          type: string
        milliDcuSeconds:
          description: Optional. DCU (Dataproc Compute Units) usage in (milliDCU x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
          format: int64
          type: string
        shuffleStorageGbSeconds:
          description: Optional. Shuffle storage usage in (GB x seconds) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
          format: int64
          type: string
      type: object
    UsageSnapshot:
      description: The usage snapshot represents the resources consumed by a workload at a specified time.
      properties:
        acceleratorType:
          description: Optional. Accelerator type being used, if any
          type: string
        milliAccelerator:
          description: Optional. Milli (one-thousandth) accelerator. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
          format: int64
          type: string
        milliDcu:
          description: Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
          format: int64
          type: string
        milliDcuPremium:
          description: Optional. Milli (one-thousandth) Dataproc Compute Units (DCUs) charged at premium tier (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing)).
          format: int64
          type: string
        shuffleStorageGb:
          description: Optional. Shuffle Storage in gigabytes (GB). (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
          format: int64
          type: string
        shuffleStorageGbPremium:
          description: Optional. Shuffle Storage in gigabytes (GB) charged at premium tier. (see Dataproc Serverless pricing (https://cloud.google.com/dataproc-serverless/pricing))
          format: int64
          type: string
        snapshotTime:
          description: Optional. The timestamp of the usage snapshot.
          format: google-datetime
          type: string
      type: object
    ValueValidation:
      description: Validation based on a list of allowed values.
      properties:
        values:
          description: Required. List of allowed values for the parameter.
          items:
            type: string
          type: array
      type: object
    VirtualClusterConfig:
      description: The Dataproc cluster config for a cluster that does not directly control the underlying compute resources, such as a Dataproc-on-GKE cluster (https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke-overview).
      properties:
        auxiliaryServicesConfig:
          $ref: "#/components/schemas/AuxiliaryServicesConfig"
          description: Optional. Configuration of auxiliary services used by this cluster.
        kubernetesClusterConfig:
          $ref: "#/components/schemas/KubernetesClusterConfig"
          description: Required. The configuration for running the Dataproc cluster on Kubernetes.
        stagingBucket:
          description: Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see Dataproc staging and temp buckets (https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). This field requires a Cloud Storage bucket name, not a gs://... URI to a Cloud Storage bucket.
          type: string
      type: object
    WorkflowGraph:
      description: The workflow graph.
      properties:
        nodes:
          description: Output only. The workflow nodes.
          items:
            $ref: "#/components/schemas/WorkflowNode"
          readOnly: true
          type: array
      type: object
    WorkflowMetadata:
      description: A Dataproc workflow template resource.
      properties:
        clusterName:
          description: Output only. The name of the target cluster.
          readOnly: true
          type: string
        clusterUuid:
          description: Output only. The UUID of target cluster.
          readOnly: true
          type: string
        createCluster:
          $ref: "#/components/schemas/ClusterOperation"
          description: Output only. The create cluster operation metadata.
          readOnly: true
        dagEndTime:
          description: Output only. DAG end time, only set for workflows with dag_timeout when DAG ends.
          format: google-datetime
          readOnly: true
          type: string
        dagStartTime:
          description: Output only. DAG start time, only set for workflows with dag_timeout when DAG begins.
          format: google-datetime
          readOnly: true
          type: string
        dagTimeout:
          description: Output only. The timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)).
          format: google-duration
          readOnly: true
          type: string
        deleteCluster:
          $ref: "#/components/schemas/ClusterOperation"
          description: Output only. The delete cluster operation metadata.
          readOnly: true
        endTime:
          description: Output only. Workflow end time.
          format: google-datetime
          readOnly: true
          type: string
        graph:
          $ref: "#/components/schemas/WorkflowGraph"
          description: Output only. The workflow graph.
          readOnly: true
        parameters:
          additionalProperties:
            type: string
          description: Map from parameter names to values that were used for those parameters.
          type: object
        startTime:
          description: Output only. Workflow start time.
          format: google-datetime
          readOnly: true
          type: string
        state:
          description: Output only. The workflow state.
          enum:
            - UNKNOWN
            - PENDING
            - RUNNING
            - DONE
          readOnly: true
          type: string
        template:
          description: "Output only. The resource name of the workflow template as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
          readOnly: true
          type: string
        version:
          description: Output only. The version of template at the time of workflow instantiation.
          format: int32
          readOnly: true
          type: integer
      type: object
    WorkflowNode:
      description: The workflow node.
      properties:
        error:
          description: Output only. The error detail.
          readOnly: true
          type: string
        jobId:
          description: Output only. The job id; populated after the node enters RUNNING state.
          readOnly: true
          type: string
        prerequisiteStepIds:
          description: Output only. Node's prerequisite nodes.
          items:
            type: string
          readOnly: true
          type: array
        state:
          description: Output only. The node state.
          enum:
            - NODE_STATE_UNSPECIFIED
            - BLOCKED
            - RUNNABLE
            - RUNNING
            - COMPLETED
            - FAILED
          readOnly: true
          type: string
        stepId:
          description: Output only. The name of the node.
          readOnly: true
          type: string
      type: object
    WorkflowTemplate:
      description: A Dataproc workflow template resource.
      properties:
        createTime:
          description: Output only. The time template was created.
          format: google-datetime
          readOnly: true
          type: string
        dagTimeout:
          description: Optional. Timeout duration for the DAG of jobs, expressed in seconds (see JSON representation of duration (https://developers.google.com/protocol-buffers/docs/proto3#json)). The timeout duration must be from 10 minutes ("600s") to 24 hours ("86400s"). The timer begins when the first job is submitted. If the workflow is running at the end of the timeout period, any remaining jobs are cancelled, the workflow is ended, and if the workflow was running on a managed cluster, the cluster is deleted.
          format: google-duration
          type: string
        encryptionConfig:
          $ref: "#/components/schemas/GoogleCloudDataprocV1WorkflowTemplateEncryptionConfig"
          description: Optional. Encryption settings for encrypting workflow template job arguments.
        id:
          type: string
        jobs:
          description: Required. The Directed Acyclic Graph of Jobs to submit.
          items:
            $ref: "#/components/schemas/OrderedJob"
          type: array
        labels:
          additionalProperties:
            type: string
          description: Optional. The labels to associate with this template. These labels will be propagated to all jobs and clusters created by the workflow instance.Label keys must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).Label values may be empty, but, if present, must contain 1 to 63 characters, and must conform to RFC 1035 (https://www.ietf.org/rfc/rfc1035.txt).No more than 32 labels can be associated with a template.
          type: object
        name:
          description: "Output only. The resource name of the workflow template, as described in https://cloud.google.com/apis/design/resource_names. For projects.regions.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/regions/{region}/workflowTemplates/{template_id} For projects.locations.workflowTemplates, the resource name of the template has the following format: projects/{project_id}/locations/{location}/workflowTemplates/{template_id}"
          readOnly: true
          type: string
        parameters:
          description: Optional. Template parameters whose values are substituted into the template. Values for parameters must be provided when the template is instantiated.
          items:
            $ref: "#/components/schemas/TemplateParameter"
          type: array
        placement:
          $ref: "#/components/schemas/WorkflowTemplatePlacement"
          description: Required. WorkflowTemplate scheduling information.
        updateTime:
          description: Output only. The time template was last updated.
          format: google-datetime
          readOnly: true
          type: string
        version:
          description: Optional. Used to perform a consistent read-modify-write.This field should be left blank for a CreateWorkflowTemplate request. It is required for an UpdateWorkflowTemplate request, and must match the current server version. A typical update template flow would fetch the current template with a GetWorkflowTemplate request, which will return the current template with the version field filled in with the current server version. The user updates other fields in the template, then returns it as part of the UpdateWorkflowTemplate request.
          format: int32
          type: integer
      type: object
    WorkflowTemplatePlacement:
      description: Specifies workflow execution target.Either managed_cluster or cluster_selector is required.
      properties:
        clusterSelector:
          $ref: "#/components/schemas/ClusterSelector"
          description: Optional. A selector that chooses target cluster for jobs based on metadata.The selector is evaluated at the time each job is submitted.
        managedCluster:
          $ref: "#/components/schemas/ManagedCluster"
          description: A cluster that is managed by the workflow.
      type: object
    YarnApplication:
      description: "A YARN application created by a job. Application information is a subset of org.apache.hadoop.yarn.proto.YarnProtos.ApplicationReportProto.Beta Feature: This report is available for testing purposes only. It may be changed before final release."
      properties:
        name:
          description: Required. The application name.
          type: string
        progress:
          description: Required. The numerical progress of the application, from 1 to 100.
          format: float
          type: number
        state:
          description: Required. The application state.
          enum:
            - STATE_UNSPECIFIED
            - NEW
            - NEW_SAVING
            - SUBMITTED
            - ACCEPTED
            - RUNNING
            - FINISHED
            - FAILED
            - KILLED
          type: string
        trackingUrl:
          description: Optional. The HTTP URL of the ApplicationMaster, HistoryServer, or TimelineServer that provides application-specific information. The URL uses the internal hostname, and requires a proxy server for resolution and, possibly, access.
          type: string
      type: object
  securitySchemes:
    Oauth2:
      description: Oauth 2.0 implicit authentication
      flows:
        implicit:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
      type: oauth2
    Oauth2c:
      description: Oauth 2.0 authorizationCode authentication
      flows:
        authorizationCode:
          authorizationUrl: https://accounts.google.com/o/oauth2/auth
          scopes:
            https://www.googleapis.com/auth/cloud-platform: See, edit, configure, and delete your Google Cloud data and see the email address for your Google Account.
          tokenUrl: https://accounts.google.com/o/oauth2/token
      type: oauth2
