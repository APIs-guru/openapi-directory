# coding: utf-8

"""
    Cloud Channel API

    The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_channel_v1_conditional_override import GoogleCloudChannelV1ConditionalOverride

class TestGoogleCloudChannelV1ConditionalOverride(unittest.TestCase):
    """GoogleCloudChannelV1ConditionalOverride unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudChannelV1ConditionalOverride:
        """Test GoogleCloudChannelV1ConditionalOverride
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudChannelV1ConditionalOverride`
        """
        model = GoogleCloudChannelV1ConditionalOverride()
        if include_optional:
            return GoogleCloudChannelV1ConditionalOverride(
                adjustment = openapi_client.models.google_cloud_channel_v1_repricing_adjustment.GoogleCloudChannelV1RepricingAdjustment(
                    percentage_adjustment = openapi_client.models.google_cloud_channel_v1_percentage_adjustment.GoogleCloudChannelV1PercentageAdjustment(
                        percentage = openapi_client.models.google_type_decimal.GoogleTypeDecimal(
                            value = '', ), ), ),
                rebilling_basis = 'REBILLING_BASIS_UNSPECIFIED',
                repricing_condition = openapi_client.models.google_cloud_channel_v1_repricing_condition.GoogleCloudChannelV1RepricingCondition(
                    sku_group_condition = openapi_client.models.google_cloud_channel_v1_sku_group_condition.GoogleCloudChannelV1SkuGroupCondition(
                        sku_group = '', ), )
            )
        else:
            return GoogleCloudChannelV1ConditionalOverride(
        )
        """

    def testGoogleCloudChannelV1ConditionalOverride(self):
        """Test GoogleCloudChannelV1ConditionalOverride"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
