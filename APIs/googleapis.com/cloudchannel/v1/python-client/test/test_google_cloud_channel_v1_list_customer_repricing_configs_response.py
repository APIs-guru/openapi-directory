# coding: utf-8

"""
    Cloud Channel API

    The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_channel_v1_list_customer_repricing_configs_response import GoogleCloudChannelV1ListCustomerRepricingConfigsResponse

class TestGoogleCloudChannelV1ListCustomerRepricingConfigsResponse(unittest.TestCase):
    """GoogleCloudChannelV1ListCustomerRepricingConfigsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudChannelV1ListCustomerRepricingConfigsResponse:
        """Test GoogleCloudChannelV1ListCustomerRepricingConfigsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudChannelV1ListCustomerRepricingConfigsResponse`
        """
        model = GoogleCloudChannelV1ListCustomerRepricingConfigsResponse()
        if include_optional:
            return GoogleCloudChannelV1ListCustomerRepricingConfigsResponse(
                customer_repricing_configs = [
                    openapi_client.models.google_cloud_channel_v1_customer_repricing_config.GoogleCloudChannelV1CustomerRepricingConfig(
                        name = '', 
                        repricing_config = openapi_client.models.google_cloud_channel_v1_repricing_config.GoogleCloudChannelV1RepricingConfig(
                            adjustment = openapi_client.models.google_cloud_channel_v1_repricing_adjustment.GoogleCloudChannelV1RepricingAdjustment(
                                percentage_adjustment = openapi_client.models.google_cloud_channel_v1_percentage_adjustment.GoogleCloudChannelV1PercentageAdjustment(
                                    percentage = openapi_client.models.google_type_decimal.GoogleTypeDecimal(
                                        value = '', ), ), ), 
                            channel_partner_granularity = openapi_client.models.google_cloud_channel_v1_repricing_config_channel_partner_granularity.GoogleCloudChannelV1RepricingConfigChannelPartnerGranularity(), 
                            conditional_overrides = [
                                openapi_client.models.google_cloud_channel_v1_conditional_override.GoogleCloudChannelV1ConditionalOverride(
                                    rebilling_basis = 'REBILLING_BASIS_UNSPECIFIED', 
                                    repricing_condition = openapi_client.models.google_cloud_channel_v1_repricing_condition.GoogleCloudChannelV1RepricingCondition(
                                        sku_group_condition = openapi_client.models.google_cloud_channel_v1_sku_group_condition.GoogleCloudChannelV1SkuGroupCondition(
                                            sku_group = '', ), ), )
                                ], 
                            effective_invoice_month = openapi_client.models.google_type_date.GoogleTypeDate(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            entitlement_granularity = openapi_client.models.google_cloud_channel_v1_repricing_config_entitlement_granularity.GoogleCloudChannelV1RepricingConfigEntitlementGranularity(
                                entitlement = '', ), 
                            rebilling_basis = 'REBILLING_BASIS_UNSPECIFIED', ), 
                        update_time = '', )
                    ],
                next_page_token = ''
            )
        else:
            return GoogleCloudChannelV1ListCustomerRepricingConfigsResponse(
        )
        """

    def testGoogleCloudChannelV1ListCustomerRepricingConfigsResponse(self):
        """Test GoogleCloudChannelV1ListCustomerRepricingConfigsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
