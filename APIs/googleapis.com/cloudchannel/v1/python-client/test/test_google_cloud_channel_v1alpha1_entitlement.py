# coding: utf-8

"""
    Cloud Channel API

    The Cloud Channel API enables Google Cloud partners to have a single unified resale platform and APIs across all of Google Cloud including GCP, Workspace, Maps and Chrome.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.google_cloud_channel_v1alpha1_entitlement import GoogleCloudChannelV1alpha1Entitlement

class TestGoogleCloudChannelV1alpha1Entitlement(unittest.TestCase):
    """GoogleCloudChannelV1alpha1Entitlement unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoogleCloudChannelV1alpha1Entitlement:
        """Test GoogleCloudChannelV1alpha1Entitlement
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoogleCloudChannelV1alpha1Entitlement`
        """
        model = GoogleCloudChannelV1alpha1Entitlement()
        if include_optional:
            return GoogleCloudChannelV1alpha1Entitlement(
                assigned_units = 56,
                association_info = openapi_client.models.google_cloud_channel_v1alpha1_association_info.GoogleCloudChannelV1alpha1AssociationInfo(
                    base_entitlement = '', ),
                billing_account = '',
                channel_partner_id = '',
                commitment_settings = openapi_client.models.google_cloud_channel_v1alpha1_commitment_settings.GoogleCloudChannelV1alpha1CommitmentSettings(
                    end_time = '', 
                    renewal_settings = openapi_client.models.google_cloud_channel_v1alpha1_renewal_settings.GoogleCloudChannelV1alpha1RenewalSettings(
                        disable_commitment = True, 
                        enable_renewal = True, 
                        payment_cycle = openapi_client.models.google_cloud_channel_v1alpha1_period.GoogleCloudChannelV1alpha1Period(
                            duration = 56, 
                            period_type = 'PERIOD_TYPE_UNSPECIFIED', ), 
                        payment_option = 'PAYMENT_OPTION_UNSPECIFIED', 
                        payment_plan = 'PAYMENT_PLAN_UNSPECIFIED', 
                        resize_unit_count = True, 
                        scheduled_renewal_offer = '', ), 
                    start_time = '', ),
                create_time = '',
                max_units = 56,
                name = '',
                num_units = 56,
                offer = '',
                parameters = [
                    openapi_client.models.google_cloud_channel_v1alpha1_parameter.GoogleCloudChannelV1alpha1Parameter(
                        editable = True, 
                        name = '', 
                        value = openapi_client.models.google_cloud_channel_v1alpha1_value.GoogleCloudChannelV1alpha1Value(
                            bool_value = True, 
                            double_value = 1.337, 
                            int64_value = '', 
                            proto_value = {
                                'key' : null
                                }, 
                            string_value = '', ), )
                    ],
                provisioned_service = openapi_client.models.google_cloud_channel_v1alpha1_provisioned_service.GoogleCloudChannelV1alpha1ProvisionedService(
                    product_id = '', 
                    provisioning_id = '', 
                    sku_id = '', ),
                provisioning_state = 'PROVISIONING_STATE_UNSPECIFIED',
                purchase_order_id = '',
                suspension_reasons = [
                    'SUSPENSION_REASON_UNSPECIFIED'
                    ],
                trial_settings = openapi_client.models.google_cloud_channel_v1alpha1_trial_settings.GoogleCloudChannelV1alpha1TrialSettings(
                    end_time = '', 
                    trial = True, ),
                update_time = ''
            )
        else:
            return GoogleCloudChannelV1alpha1Entitlement(
        )
        """

    def testGoogleCloudChannelV1alpha1Entitlement(self):
        """Test GoogleCloudChannelV1alpha1Entitlement"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
