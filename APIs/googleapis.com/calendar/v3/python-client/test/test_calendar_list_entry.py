# coding: utf-8

"""
    Calendar API

    Manipulates events and other calendar data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.calendar_list_entry import CalendarListEntry

class TestCalendarListEntry(unittest.TestCase):
    """CalendarListEntry unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CalendarListEntry:
        """Test CalendarListEntry
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CalendarListEntry`
        """
        model = CalendarListEntry()
        if include_optional:
            return CalendarListEntry(
                access_role = '',
                background_color = '',
                color_id = '',
                conference_properties = openapi_client.models.conference_properties.ConferenceProperties(
                    allowed_conference_solution_types = [
                        ''
                        ], ),
                default_reminders = [
                    openapi_client.models.event_reminder.EventReminder(
                        method = '', 
                        minutes = 56, )
                    ],
                deleted = True,
                description = '',
                etag = '',
                foreground_color = '',
                hidden = True,
                id = '',
                kind = 'calendar#calendarListEntry',
                location = '',
                notification_settings = openapi_client.models.calendar_list_entry_notification_settings.CalendarListEntry_notificationSettings(
                    notifications = [
                        openapi_client.models.calendar_notification.CalendarNotification(
                            method = '', 
                            type = '', )
                        ], ),
                primary = True,
                selected = True,
                summary = '',
                summary_override = '',
                time_zone = ''
            )
        else:
            return CalendarListEntry(
        )
        """

    def testCalendarListEntry(self):
        """Test CalendarListEntry"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
