# coding: utf-8

"""
    Calendar API

    Manipulates events and other calendar data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.conference_data import ConferenceData

class TestConferenceData(unittest.TestCase):
    """ConferenceData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConferenceData:
        """Test ConferenceData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConferenceData`
        """
        model = ConferenceData()
        if include_optional:
            return ConferenceData(
                conference_id = '',
                conference_solution = openapi_client.models.conference_solution.ConferenceSolution(
                    icon_uri = '', 
                    key = openapi_client.models.conference_solution_key.ConferenceSolutionKey(
                        type = '', ), 
                    name = '', ),
                create_request = openapi_client.models.create_conference_request.CreateConferenceRequest(
                    conference_solution_key = openapi_client.models.conference_solution_key.ConferenceSolutionKey(
                        type = '', ), 
                    request_id = '', 
                    status = openapi_client.models.conference_request_status.ConferenceRequestStatus(
                        status_code = '', ), ),
                entry_points = [
                    openapi_client.models.entry_point.EntryPoint(
                        access_code = '', 
                        entry_point_features = [
                            ''
                            ], 
                        entry_point_type = '', 
                        label = '', 
                        meeting_code = '', 
                        passcode = '', 
                        password = '', 
                        pin = '', 
                        region_code = '', 
                        uri = '', )
                    ],
                notes = '',
                parameters = openapi_client.models.conference_parameters.ConferenceParameters(
                    add_on_parameters = openapi_client.models.conference_parameters_add_on_parameters.ConferenceParametersAddOnParameters(
                        parameters = {
                            'key' : ''
                            }, ), ),
                signature = ''
            )
        else:
            return ConferenceData(
        )
        """

    def testConferenceData(self):
        """Test ConferenceData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
