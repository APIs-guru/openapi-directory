# coding: utf-8

"""
    Calendar API

    Manipulates events and other calendar data.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.free_busy_response import FreeBusyResponse

class TestFreeBusyResponse(unittest.TestCase):
    """FreeBusyResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FreeBusyResponse:
        """Test FreeBusyResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FreeBusyResponse`
        """
        model = FreeBusyResponse()
        if include_optional:
            return FreeBusyResponse(
                calendars = {
                    'key' : openapi_client.models.free_busy_calendar.FreeBusyCalendar(
                        busy = [
                            openapi_client.models.time_period.TimePeriod(
                                end = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                                start = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                            ], 
                        errors = [
                            openapi_client.models.error.Error(
                                domain = '', 
                                reason = '', )
                            ], )
                    },
                groups = {
                    'key' : openapi_client.models.free_busy_group.FreeBusyGroup(
                        calendars = [
                            ''
                            ], 
                        errors = [
                            openapi_client.models.error.Error(
                                domain = '', 
                                reason = '', )
                            ], )
                    },
                kind = 'calendar#freeBusy',
                time_max = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_min = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return FreeBusyResponse(
        )
        """

    def testFreeBusyResponse(self):
        """Test FreeBusyResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
