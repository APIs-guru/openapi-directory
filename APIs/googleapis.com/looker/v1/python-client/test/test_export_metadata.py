# coding: utf-8

"""
    Looker (Google Cloud core) API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.export_metadata import ExportMetadata

class TestExportMetadata(unittest.TestCase):
    """ExportMetadata unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExportMetadata:
        """Test ExportMetadata
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExportMetadata`
        """
        model = ExportMetadata()
        if include_optional:
            return ExportMetadata(
                export_encryption_key = openapi_client.models.export_metadata_encryption_key.ExportMetadataEncryptionKey(
                    cmek = '', 
                    version = '', ),
                file_paths = [
                    ''
                    ],
                looker_encryption_key = '',
                looker_instance = '',
                looker_platform_edition = '',
                looker_version = '',
                source = 'SOURCE_UNSPECIFIED'
            )
        else:
            return ExportMetadata(
        )
        """

    def testExportMetadata(self):
        """Test ExportMetadata"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
