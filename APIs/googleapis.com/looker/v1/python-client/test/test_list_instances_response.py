# coding: utf-8

"""
    Looker (Google Cloud core) API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_instances_response import ListInstancesResponse

class TestListInstancesResponse(unittest.TestCase):
    """ListInstancesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListInstancesResponse:
        """Test ListInstancesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListInstancesResponse`
        """
        model = ListInstancesResponse()
        if include_optional:
            return ListInstancesResponse(
                instances = [
                    openapi_client.models.instance.Instance(
                        admin_settings = openapi_client.models.admin_settings.AdminSettings(
                            allowed_email_domains = [
                                ''
                                ], ), 
                        consumer_network = '', 
                        create_time = '', 
                        custom_domain = openapi_client.models.custom_domain.CustomDomain(
                            domain = '', 
                            state = 'CUSTOM_DOMAIN_STATE_UNSPECIFIED', ), 
                        deny_maintenance_period = openapi_client.models.deny_maintenance_period.DenyMaintenancePeriod(
                            end_date = openapi_client.models.date.Date(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            start_date = openapi_client.models.date.Date(
                                day = 56, 
                                month = 56, 
                                year = 56, ), 
                            time = openapi_client.models.time_of_day.TimeOfDay(
                                hours = 56, 
                                minutes = 56, 
                                nanos = 56, 
                                seconds = 56, ), ), 
                        egress_public_ip = '', 
                        encryption_config = openapi_client.models.encryption_config.EncryptionConfig(
                            kms_key_name = '', 
                            kms_key_name_version = '', 
                            kms_key_state = 'KMS_KEY_STATE_UNSPECIFIED', ), 
                        ingress_private_ip = '', 
                        ingress_public_ip = '', 
                        last_deny_maintenance_period = openapi_client.models.deny_maintenance_period.DenyMaintenancePeriod(), 
                        looker_uri = '', 
                        looker_version = '', 
                        maintenance_schedule = openapi_client.models.maintenance_schedule.MaintenanceSchedule(
                            end_time = '', 
                            start_time = '', ), 
                        maintenance_window = openapi_client.models.maintenance_window.MaintenanceWindow(
                            day_of_week = 'DAY_OF_WEEK_UNSPECIFIED', 
                            start_time = openapi_client.models.time_of_day.TimeOfDay(
                                hours = 56, 
                                minutes = 56, 
                                nanos = 56, 
                                seconds = 56, ), ), 
                        name = '', 
                        oauth_config = openapi_client.models.o_auth_config.OAuthConfig(
                            client_id = '', 
                            client_secret = '', ), 
                        platform_edition = 'PLATFORM_EDITION_UNSPECIFIED', 
                        private_ip_enabled = True, 
                        psc_config = openapi_client.models.psc_config.PscConfig(
                            allowed_vpcs = [
                                ''
                                ], 
                            looker_service_attachment_uri = '', 
                            service_attachments = [
                                openapi_client.models.service_attachment.ServiceAttachment(
                                    connection_status = 'UNKNOWN', 
                                    local_fqdn = '', 
                                    target_service_attachment_uri = '', )
                                ], ), 
                        psc_enabled = True, 
                        public_ip_enabled = True, 
                        reserved_range = '', 
                        state = 'STATE_UNSPECIFIED', 
                        update_time = '', 
                        user_metadata = openapi_client.models.user_metadata.UserMetadata(
                            additional_developer_user_count = 56, 
                            additional_standard_user_count = 56, 
                            additional_viewer_user_count = 56, ), )
                    ],
                next_page_token = '',
                unreachable = [
                    ''
                    ]
            )
        else:
            return ListInstancesResponse(
        )
        """

    def testListInstancesResponse(self):
        """Test ListInstancesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
