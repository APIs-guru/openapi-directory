# coding: utf-8

"""
    Firebase Management API

    The Firebase Management API enables programmatic setup and management of Firebase projects, including a project's Firebase resources and Firebase apps.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.analytics_details import AnalyticsDetails

class TestAnalyticsDetails(unittest.TestCase):
    """AnalyticsDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyticsDetails:
        """Test AnalyticsDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyticsDetails`
        """
        model = AnalyticsDetails()
        if include_optional:
            return AnalyticsDetails(
                analytics_property = openapi_client.models.analytics_property.AnalyticsProperty(
                    analytics_account_id = '', 
                    display_name = '', 
                    id = '', ),
                stream_mappings = [
                    openapi_client.models.stream_mapping.StreamMapping(
                        app = '', 
                        measurement_id = '', 
                        stream_id = '', )
                    ]
            )
        else:
            return AnalyticsDetails(
        )
        """

    def testAnalyticsDetails(self):
        """Test AnalyticsDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
