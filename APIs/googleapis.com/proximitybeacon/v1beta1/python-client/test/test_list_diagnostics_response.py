# coding: utf-8

"""
    Proximity Beacon API

    Registers, manages, indexes, and searches beacons.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_diagnostics_response import ListDiagnosticsResponse

class TestListDiagnosticsResponse(unittest.TestCase):
    """ListDiagnosticsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListDiagnosticsResponse:
        """Test ListDiagnosticsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListDiagnosticsResponse`
        """
        model = ListDiagnosticsResponse()
        if include_optional:
            return ListDiagnosticsResponse(
                diagnostics = [
                    openapi_client.models.diagnostics.Diagnostics(
                        alerts = [
                            'ALERT_UNSPECIFIED'
                            ], 
                        beacon_name = '', 
                        estimated_low_battery_date = openapi_client.models.date.Date(
                            day = 56, 
                            month = 56, 
                            year = 56, ), )
                    ],
                next_page_token = ''
            )
        else:
            return ListDiagnosticsResponse(
        )
        """

    def testListDiagnosticsResponse(self):
        """Test ListDiagnosticsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
