# coding: utf-8

"""
    Proximity Beacon API

    Registers, manages, indexes, and searches beacons.

    The version of the OpenAPI document: v1beta1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.beacon_info import BeaconInfo

class TestBeaconInfo(unittest.TestCase):
    """BeaconInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BeaconInfo:
        """Test BeaconInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BeaconInfo`
        """
        model = BeaconInfo()
        if include_optional:
            return BeaconInfo(
                advertised_id = openapi_client.models.advertised_id.AdvertisedId(
                    id = 'YQ==', 
                    type = 'TYPE_UNSPECIFIED', ),
                attachments = [
                    openapi_client.models.attachment_info.AttachmentInfo(
                        data = 'YQ==', 
                        max_distance_meters = 1.337, 
                        namespaced_type = '', )
                    ],
                beacon_name = ''
            )
        else:
            return BeaconInfo(
        )
        """

    def testBeaconInfo(self):
        """Test BeaconInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
