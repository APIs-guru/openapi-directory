# coding: utf-8

"""
    YouTube Data API v3

    The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.playlist_item import PlaylistItem

class TestPlaylistItem(unittest.TestCase):
    """PlaylistItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PlaylistItem:
        """Test PlaylistItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PlaylistItem`
        """
        model = PlaylistItem()
        if include_optional:
            return PlaylistItem(
                content_details = openapi_client.models.playlist_item_content_details.PlaylistItemContentDetails(
                    end_at = '', 
                    note = '', 
                    start_at = '', 
                    video_id = '', 
                    video_published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                etag = '',
                id = '',
                kind = 'youtube#playlistItem',
                snippet = openapi_client.models.playlist_item_snippet.PlaylistItemSnippet(
                    channel_id = '', 
                    channel_title = '', 
                    description = '', 
                    playlist_id = '', 
                    position = 56, 
                    published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    resource_id = openapi_client.models.resource_id.ResourceId(
                        channel_id = '', 
                        kind = '', 
                        playlist_id = '', 
                        video_id = '', ), 
                    thumbnails = openapi_client.models.thumbnail_details.ThumbnailDetails(
                        high = openapi_client.models.thumbnail.Thumbnail(
                            height = 56, 
                            url = '', 
                            width = 56, ), 
                        maxres = openapi_client.models.thumbnail.Thumbnail(
                            height = 56, 
                            url = '', 
                            width = 56, ), 
                        medium = , 
                        standard = , ), 
                    title = '', 
                    video_owner_channel_id = '', 
                    video_owner_channel_title = '', ),
                status = openapi_client.models.playlist_item_status.PlaylistItemStatus(
                    privacy_status = 'public', )
            )
        else:
            return PlaylistItem(
        )
        """

    def testPlaylistItem(self):
        """Test PlaylistItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
