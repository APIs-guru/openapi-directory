# coding: utf-8

"""
    YouTube Data API v3

    The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.thumbnail_set_response import ThumbnailSetResponse

class TestThumbnailSetResponse(unittest.TestCase):
    """ThumbnailSetResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ThumbnailSetResponse:
        """Test ThumbnailSetResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ThumbnailSetResponse`
        """
        model = ThumbnailSetResponse()
        if include_optional:
            return ThumbnailSetResponse(
                etag = '',
                event_id = '',
                items = [
                    openapi_client.models.thumbnail_details.ThumbnailDetails(
                        high = openapi_client.models.thumbnail.Thumbnail(
                            height = 56, 
                            url = '', 
                            width = 56, ), 
                        maxres = openapi_client.models.thumbnail.Thumbnail(
                            height = 56, 
                            url = '', 
                            width = 56, ), 
                        medium = , 
                        standard = , )
                    ],
                kind = 'youtube#thumbnailSetResponse',
                visitor_id = ''
            )
        else:
            return ThumbnailSetResponse(
        )
        """

    def testThumbnailSetResponse(self):
        """Test ThumbnailSetResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
