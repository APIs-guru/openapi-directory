# coding: utf-8

"""
    YouTube Data API v3

    The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.comment_thread_snippet import CommentThreadSnippet

class TestCommentThreadSnippet(unittest.TestCase):
    """CommentThreadSnippet unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CommentThreadSnippet:
        """Test CommentThreadSnippet
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CommentThreadSnippet`
        """
        model = CommentThreadSnippet()
        if include_optional:
            return CommentThreadSnippet(
                can_reply = True,
                channel_id = '',
                is_public = True,
                top_level_comment = openapi_client.models.comment.Comment(
                    etag = '', 
                    id = '', 
                    kind = 'youtube#comment', 
                    snippet = openapi_client.models.comment_snippet.CommentSnippet(
                        author_channel_id = openapi_client.models.comment_snippet_author_channel_id.CommentSnippetAuthorChannelId(
                            value = '', ), 
                        author_channel_url = '', 
                        author_display_name = '', 
                        author_profile_image_url = '', 
                        can_rate = True, 
                        channel_id = '', 
                        like_count = 56, 
                        moderation_status = 'published', 
                        parent_id = '', 
                        published_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        text_display = '', 
                        text_original = '', 
                        updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        video_id = '', 
                        viewer_rating = 'none', ), ),
                total_reply_count = 56,
                video_id = ''
            )
        else:
            return CommentThreadSnippet(
        )
        """

    def testCommentThreadSnippet(self):
        """Test CommentThreadSnippet"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
