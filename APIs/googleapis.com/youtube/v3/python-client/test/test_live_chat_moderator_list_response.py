# coding: utf-8

"""
    YouTube Data API v3

    The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.live_chat_moderator_list_response import LiveChatModeratorListResponse

class TestLiveChatModeratorListResponse(unittest.TestCase):
    """LiveChatModeratorListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LiveChatModeratorListResponse:
        """Test LiveChatModeratorListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LiveChatModeratorListResponse`
        """
        model = LiveChatModeratorListResponse()
        if include_optional:
            return LiveChatModeratorListResponse(
                etag = '',
                event_id = '',
                items = [
                    openapi_client.models.live_chat_moderator.LiveChatModerator(
                        etag = '', 
                        id = '', 
                        kind = 'youtube#liveChatModerator', 
                        snippet = openapi_client.models.live_chat_moderator_snippet.LiveChatModeratorSnippet(
                            live_chat_id = '', 
                            moderator_details = openapi_client.models.channel_profile_details.ChannelProfileDetails(
                                channel_id = '', 
                                channel_url = '', 
                                display_name = '', 
                                profile_image_url = '', ), ), )
                    ],
                kind = 'youtube#liveChatModeratorListResponse',
                next_page_token = '',
                page_info = openapi_client.models.page_info.PageInfo(
                    results_per_page = 56, 
                    total_results = 56, ),
                prev_page_token = '',
                token_pagination = None,
                visitor_id = ''
            )
        else:
            return LiveChatModeratorListResponse(
        )
        """

    def testLiveChatModeratorListResponse(self):
        """Test LiveChatModeratorListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
