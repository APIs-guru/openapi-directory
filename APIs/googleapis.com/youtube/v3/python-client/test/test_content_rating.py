# coding: utf-8

"""
    YouTube Data API v3

    The YouTube Data API v3 is an API that provides access to YouTube data, such as videos, playlists, and channels.

    The version of the OpenAPI document: v3
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.content_rating import ContentRating

class TestContentRating(unittest.TestCase):
    """ContentRating unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ContentRating:
        """Test ContentRating
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ContentRating`
        """
        model = ContentRating()
        if include_optional:
            return ContentRating(
                acb_rating = 'acbUnspecified',
                agcom_rating = 'agcomUnspecified',
                anatel_rating = 'anatelUnspecified',
                bbfc_rating = 'bbfcUnspecified',
                bfvc_rating = 'bfvcUnspecified',
                bmukk_rating = 'bmukkUnspecified',
                catv_rating = 'catvUnspecified',
                catvfr_rating = 'catvfrUnspecified',
                cbfc_rating = 'cbfcUnspecified',
                ccc_rating = 'cccUnspecified',
                cce_rating = 'cceUnspecified',
                chfilm_rating = 'chfilmUnspecified',
                chvrs_rating = 'chvrsUnspecified',
                cicf_rating = 'cicfUnspecified',
                cna_rating = 'cnaUnspecified',
                cnc_rating = 'cncUnspecified',
                csa_rating = 'csaUnspecified',
                cscf_rating = 'cscfUnspecified',
                czfilm_rating = 'czfilmUnspecified',
                djctq_rating = 'djctqUnspecified',
                djctq_rating_reasons = [
                    'djctqRatingReasonUnspecified'
                    ],
                ecbmct_rating = 'ecbmctUnspecified',
                eefilm_rating = 'eefilmUnspecified',
                egfilm_rating = 'egfilmUnspecified',
                eirin_rating = 'eirinUnspecified',
                fcbm_rating = 'fcbmUnspecified',
                fco_rating = 'fcoUnspecified',
                fmoc_rating = 'fmocUnspecified',
                fpb_rating = 'fpbUnspecified',
                fpb_rating_reasons = [
                    'fpbRatingReasonUnspecified'
                    ],
                fsk_rating = 'fskUnspecified',
                grfilm_rating = 'grfilmUnspecified',
                icaa_rating = 'icaaUnspecified',
                ifco_rating = 'ifcoUnspecified',
                ilfilm_rating = 'ilfilmUnspecified',
                incaa_rating = 'incaaUnspecified',
                kfcb_rating = 'kfcbUnspecified',
                kijkwijzer_rating = 'kijkwijzerUnspecified',
                kmrb_rating = 'kmrbUnspecified',
                lsf_rating = 'lsfUnspecified',
                mccaa_rating = 'mccaaUnspecified',
                mccyp_rating = 'mccypUnspecified',
                mcst_rating = 'mcstUnspecified',
                mda_rating = 'mdaUnspecified',
                medietilsynet_rating = 'medietilsynetUnspecified',
                meku_rating = 'mekuUnspecified',
                mena_mpaa_rating = 'menaMpaaUnspecified',
                mibac_rating = 'mibacUnspecified',
                moc_rating = 'mocUnspecified',
                moctw_rating = 'moctwUnspecified',
                mpaa_rating = 'mpaaUnspecified',
                mpaat_rating = 'mpaatUnspecified',
                mtrcb_rating = 'mtrcbUnspecified',
                nbc_rating = 'nbcUnspecified',
                nbcpl_rating = 'nbcplUnspecified',
                nfrc_rating = 'nfrcUnspecified',
                nfvcb_rating = 'nfvcbUnspecified',
                nkclv_rating = 'nkclvUnspecified',
                nmc_rating = 'nmcUnspecified',
                oflc_rating = 'oflcUnspecified',
                pefilm_rating = 'pefilmUnspecified',
                rcnof_rating = 'rcnofUnspecified',
                resorteviolencia_rating = 'resorteviolenciaUnspecified',
                rtc_rating = 'rtcUnspecified',
                rte_rating = 'rteUnspecified',
                russia_rating = 'russiaUnspecified',
                skfilm_rating = 'skfilmUnspecified',
                smais_rating = 'smaisUnspecified',
                smsa_rating = 'smsaUnspecified',
                tvpg_rating = 'tvpgUnspecified',
                yt_rating = 'ytUnspecified'
            )
        else:
            return ContentRating(
        )
        """

    def testContentRating(self):
        """Test ContentRating"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
