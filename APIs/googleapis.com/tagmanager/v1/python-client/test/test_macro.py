# coding: utf-8

"""
    Tag Manager API

    This API allows clients to access and modify container and tag configuration.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.macro import Macro

class TestMacro(unittest.TestCase):
    """Macro unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Macro:
        """Test Macro
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Macro`
        """
        model = Macro()
        if include_optional:
            return Macro(
                account_id = '',
                container_id = '',
                disabling_rule_id = [
                    ''
                    ],
                enabling_rule_id = [
                    ''
                    ],
                fingerprint = '',
                macro_id = '',
                name = '',
                notes = '',
                parameter = [
                    openapi_client.models.parameter.Parameter(
                        key = '', 
                        list = [
                            openapi_client.models.parameter.Parameter(
                                key = '', 
                                map = [
                                    
                                    ], 
                                type = 'template', 
                                value = '', )
                            ], 
                        map = [
                            
                            ], 
                        type = 'template', 
                        value = '', )
                    ],
                parent_folder_id = '',
                schedule_end_ms = '',
                schedule_start_ms = '',
                type = ''
            )
        else:
            return Macro(
        )
        """

    def testMacro(self):
        """Test Macro"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
