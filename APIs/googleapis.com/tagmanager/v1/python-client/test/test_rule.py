# coding: utf-8

"""
    Tag Manager API

    This API allows clients to access and modify container and tag configuration.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.rule import Rule

class TestRule(unittest.TestCase):
    """Rule unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Rule:
        """Test Rule
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Rule`
        """
        model = Rule()
        if include_optional:
            return Rule(
                account_id = '',
                condition = [
                    openapi_client.models.condition.Condition(
                        parameter = [
                            openapi_client.models.parameter.Parameter(
                                key = '', 
                                list = [
                                    openapi_client.models.parameter.Parameter(
                                        key = '', 
                                        map = [
                                            
                                            ], 
                                        type = 'template', 
                                        value = '', )
                                    ], 
                                map = [
                                    
                                    ], 
                                type = 'template', 
                                value = '', )
                            ], 
                        type = 'equals', )
                    ],
                container_id = '',
                fingerprint = '',
                name = '',
                notes = '',
                rule_id = ''
            )
        else:
            return Rule(
        )
        """

    def testRule(self):
        """Test Rule"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
