# coding: utf-8

"""
    Tag Manager API

    This API allows clients to access and modify container and tag configuration.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.list_environments_response import ListEnvironmentsResponse

class TestListEnvironmentsResponse(unittest.TestCase):
    """ListEnvironmentsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ListEnvironmentsResponse:
        """Test ListEnvironmentsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ListEnvironmentsResponse`
        """
        model = ListEnvironmentsResponse()
        if include_optional:
            return ListEnvironmentsResponse(
                environments = [
                    openapi_client.models.environment.Environment(
                        account_id = '', 
                        authorization_code = '', 
                        authorization_timestamp_ms = '', 
                        container_id = '', 
                        container_version_id = '', 
                        description = '', 
                        enable_debug = True, 
                        environment_id = '', 
                        fingerprint = '', 
                        name = '', 
                        type = 'user', 
                        url = '', )
                    ]
            )
        else:
            return ListEnvironmentsResponse(
        )
        """

    def testListEnvironmentsResponse(self):
        """Test ListEnvironmentsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
