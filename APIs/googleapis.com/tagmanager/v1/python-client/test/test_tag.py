# coding: utf-8

"""
    Tag Manager API

    This API allows clients to access and modify container and tag configuration.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.tag import Tag

class TestTag(unittest.TestCase):
    """Tag unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Tag:
        """Test Tag
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Tag`
        """
        model = Tag()
        if include_optional:
            return Tag(
                account_id = '',
                blocking_rule_id = [
                    ''
                    ],
                blocking_trigger_id = [
                    ''
                    ],
                container_id = '',
                fingerprint = '',
                firing_rule_id = [
                    ''
                    ],
                firing_trigger_id = [
                    ''
                    ],
                live_only = True,
                name = '',
                notes = '',
                parameter = [
                    openapi_client.models.parameter.Parameter(
                        key = '', 
                        list = [
                            openapi_client.models.parameter.Parameter(
                                key = '', 
                                map = [
                                    
                                    ], 
                                type = 'template', 
                                value = '', )
                            ], 
                        map = [
                            
                            ], 
                        type = 'template', 
                        value = '', )
                    ],
                parent_folder_id = '',
                paused = True,
                priority = openapi_client.models.parameter.Parameter(
                    key = '', 
                    list = [
                        openapi_client.models.parameter.Parameter(
                            key = '', 
                            map = [
                                
                                ], 
                            type = 'template', 
                            value = '', )
                        ], 
                    map = [
                        
                        ], 
                    type = 'template', 
                    value = '', ),
                schedule_end_ms = '',
                schedule_start_ms = '',
                setup_tag = [
                    openapi_client.models.setup_tag.SetupTag(
                        stop_on_setup_failure = True, 
                        tag_name = '', )
                    ],
                tag_firing_option = 'unlimited',
                tag_id = '',
                teardown_tag = [
                    openapi_client.models.teardown_tag.TeardownTag(
                        stop_teardown_on_failure = True, 
                        tag_name = '', )
                    ],
                type = ''
            )
        else:
            return Tag(
        )
        """

    def testTag(self):
        """Test Tag"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
