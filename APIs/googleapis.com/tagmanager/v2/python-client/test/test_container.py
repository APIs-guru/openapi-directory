# coding: utf-8

"""
    Tag Manager API

    This API allows clients to access and modify container and tag configuration.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.container import Container

class TestContainer(unittest.TestCase):
    """Container unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Container:
        """Test Container
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Container`
        """
        model = Container()
        if include_optional:
            return Container(
                account_id = '',
                container_id = '',
                domain_name = [
                    ''
                    ],
                features = openapi_client.models.container_features.ContainerFeatures(
                    support_built_in_variables = True, 
                    support_clients = True, 
                    support_environments = True, 
                    support_folders = True, 
                    support_gtag_configs = True, 
                    support_tags = True, 
                    support_templates = True, 
                    support_transformations = True, 
                    support_triggers = True, 
                    support_user_permissions = True, 
                    support_variables = True, 
                    support_versions = True, 
                    support_workspaces = True, 
                    support_zones = True, ),
                fingerprint = '',
                name = '',
                notes = '',
                path = '',
                public_id = '',
                tag_ids = [
                    ''
                    ],
                tag_manager_url = '',
                tagging_server_urls = [
                    ''
                    ],
                usage_context = [
                    'usageContextUnspecified'
                    ]
            )
        else:
            return Container(
        )
        """

    def testContainer(self):
        """Test Container"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
