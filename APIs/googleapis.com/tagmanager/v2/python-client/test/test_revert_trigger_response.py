# coding: utf-8

"""
    Tag Manager API

    This API allows clients to access and modify container and tag configuration.

    The version of the OpenAPI document: v2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.revert_trigger_response import RevertTriggerResponse

class TestRevertTriggerResponse(unittest.TestCase):
    """RevertTriggerResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RevertTriggerResponse:
        """Test RevertTriggerResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RevertTriggerResponse`
        """
        model = RevertTriggerResponse()
        if include_optional:
            return RevertTriggerResponse(
                trigger = openapi_client.models.trigger.Trigger(
                    account_id = '', 
                    auto_event_filter = [
                        openapi_client.models.condition.Condition(
                            parameter = [
                                openapi_client.models.parameter.Parameter(
                                    is_weak_reference = True, 
                                    key = '', 
                                    list = [
                                        openapi_client.models.parameter.Parameter(
                                            is_weak_reference = True, 
                                            key = '', 
                                            map = [
                                                
                                                ], 
                                            type = 'typeUnspecified', 
                                            value = '', )
                                        ], 
                                    map = [
                                        
                                        ], 
                                    type = 'typeUnspecified', 
                                    value = '', )
                                ], 
                            type = 'conditionTypeUnspecified', )
                        ], 
                    check_validation = , 
                    container_id = '', 
                    continuous_time_min_milliseconds = , 
                    custom_event_filter = [
                        openapi_client.models.condition.Condition(
                            type = 'conditionTypeUnspecified', )
                        ], 
                    event_name = , 
                    filter = [
                        
                        ], 
                    fingerprint = '', 
                    horizontal_scroll_percentage_list = , 
                    interval = , 
                    interval_seconds = , 
                    limit = , 
                    max_timer_length_seconds = , 
                    name = '', 
                    notes = '', 
                    parameter = [
                        
                        ], 
                    parent_folder_id = '', 
                    path = '', 
                    selector = , 
                    tag_manager_url = '', 
                    total_time_min_milliseconds = , 
                    trigger_id = '', 
                    type = 'eventTypeUnspecified', 
                    unique_trigger_id = , 
                    vertical_scroll_percentage_list = , 
                    visibility_selector = , 
                    visible_percentage_max = , 
                    visible_percentage_min = , 
                    wait_for_tags = , 
                    wait_for_tags_timeout = , 
                    workspace_id = '', )
            )
        else:
            return RevertTriggerResponse(
        )
        """

    def testRevertTriggerResponse(self):
        """Test RevertTriggerResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
