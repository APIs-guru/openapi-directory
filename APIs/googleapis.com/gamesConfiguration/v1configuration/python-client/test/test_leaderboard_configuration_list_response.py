# coding: utf-8

"""
    Google Play Game Services Publishing API

    The Google Play Game Services Publishing API allows developers to configure their games in Game Services.

    The version of the OpenAPI document: v1configuration
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.leaderboard_configuration_list_response import LeaderboardConfigurationListResponse

class TestLeaderboardConfigurationListResponse(unittest.TestCase):
    """LeaderboardConfigurationListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> LeaderboardConfigurationListResponse:
        """Test LeaderboardConfigurationListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `LeaderboardConfigurationListResponse`
        """
        model = LeaderboardConfigurationListResponse()
        if include_optional:
            return LeaderboardConfigurationListResponse(
                items = [
                    openapi_client.models.leaderboard_configuration.LeaderboardConfiguration(
                        draft = openapi_client.models.leaderboard_configuration_detail.LeaderboardConfigurationDetail(
                            icon_url = '', 
                            kind = '', 
                            name = openapi_client.models.localized_string_bundle.LocalizedStringBundle(
                                kind = '', 
                                translations = [
                                    openapi_client.models.localized_string.LocalizedString(
                                        kind = '', 
                                        locale = '', 
                                        value = '', )
                                    ], ), 
                            score_format = openapi_client.models.games_number_format_configuration.GamesNumberFormatConfiguration(
                                currency_code = '', 
                                num_decimal_places = 56, 
                                number_format_type = 'NUMBER_FORMAT_TYPE_UNSPECIFIED', 
                                suffix = openapi_client.models.games_number_affix_configuration.GamesNumberAffixConfiguration(
                                    few = openapi_client.models.localized_string_bundle.LocalizedStringBundle(
                                        kind = '', ), 
                                    many = , 
                                    one = , 
                                    other = , 
                                    two = , 
                                    zero = , ), ), 
                            sort_rank = 56, ), 
                        id = '', 
                        kind = '', 
                        published = openapi_client.models.leaderboard_configuration_detail.LeaderboardConfigurationDetail(
                            icon_url = '', 
                            kind = '', 
                            sort_rank = 56, ), 
                        score_max = '', 
                        score_min = '', 
                        score_order = 'SCORE_ORDER_UNSPECIFIED', 
                        token = '', )
                    ],
                kind = '',
                next_page_token = ''
            )
        else:
            return LeaderboardConfigurationListResponse(
        )
        """

    def testLeaderboardConfigurationListResponse(self):
        """Test LeaderboardConfigurationListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
