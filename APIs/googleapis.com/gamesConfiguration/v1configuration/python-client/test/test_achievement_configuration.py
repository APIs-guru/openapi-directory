# coding: utf-8

"""
    Google Play Game Services Publishing API

    The Google Play Game Services Publishing API allows developers to configure their games in Game Services.

    The version of the OpenAPI document: v1configuration
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.achievement_configuration import AchievementConfiguration

class TestAchievementConfiguration(unittest.TestCase):
    """AchievementConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AchievementConfiguration:
        """Test AchievementConfiguration
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AchievementConfiguration`
        """
        model = AchievementConfiguration()
        if include_optional:
            return AchievementConfiguration(
                achievement_type = 'ACHIEVEMENT_TYPE_UNSPECIFIED',
                draft = openapi_client.models.achievement_configuration_detail.AchievementConfigurationDetail(
                    description = openapi_client.models.localized_string_bundle.LocalizedStringBundle(
                        kind = '', 
                        translations = [
                            openapi_client.models.localized_string.LocalizedString(
                                kind = '', 
                                locale = '', 
                                value = '', )
                            ], ), 
                    icon_url = '', 
                    kind = '', 
                    name = openapi_client.models.localized_string_bundle.LocalizedStringBundle(
                        kind = '', ), 
                    point_value = 56, 
                    sort_rank = 56, ),
                id = '',
                initial_state = 'INITIAL_STATE_UNSPECIFIED',
                kind = '',
                published = openapi_client.models.achievement_configuration_detail.AchievementConfigurationDetail(
                    description = openapi_client.models.localized_string_bundle.LocalizedStringBundle(
                        kind = '', 
                        translations = [
                            openapi_client.models.localized_string.LocalizedString(
                                kind = '', 
                                locale = '', 
                                value = '', )
                            ], ), 
                    icon_url = '', 
                    kind = '', 
                    name = openapi_client.models.localized_string_bundle.LocalizedStringBundle(
                        kind = '', ), 
                    point_value = 56, 
                    sort_rank = 56, ),
                steps_to_unlock = 56,
                token = ''
            )
        else:
            return AchievementConfiguration(
        )
        """

    def testAchievementConfiguration(self):
        """Test AchievementConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
